
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00028408  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003c58  080285b8  080285b8  000385b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 000021de  0802c210  0802c210  0003c210  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 000000f0  0802e3f0  0802e3f0  0003e3f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000055c  0802e4e0  0802e4e0  0003e4e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 00119030  0802ea3c  0802ea3c  0003ea3c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  08147a6c  08147a6c  00160168  2**0
                  CONTENTS
  8 .ARM          00000008  08147a6c  08147a6c  00157a6c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  08147a74  08147a74  00160168  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  08147a74  08147a74  00157a74  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  08147a88  08147a88  00157a88  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000168  20000000  08147a90  00160000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          0001428c  20000168  08147bf8  00160168  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  200143f4  08147bf8  001643f4  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  00160168  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00170000  2**2
                  ALLOC
 17 .comment      000000c2  00000000  00000000  00160198  2**0
                  CONTENTS, READONLY
 18 .debug_line   0008d496  00000000  00000000  0016025a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000093  00000000  00000000  001ed6f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   00246546  00000000  00000000  001ed783  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 0002d1ab  00000000  00000000  00433cc9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 000041c8  00000000  00000000  00460e78  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    0011cc6a  00000000  00000000  00465040  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 000072cb  00000000  00000000  00581caa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 0002e95c  00000000  00000000  00588f75  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  00038e2e  00000000  00000000  005b78d1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000c378  00000000  00000000  005f0700  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000168 	.word	0x20000168
 80001cc:	00000000 	.word	0x00000000
 80001d0:	080285a0 	.word	0x080285a0

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000016c 	.word	0x2000016c
 80001ec:	080285a0 	.word	0x080285a0

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b970 	b.w	8000588 <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9e08      	ldr	r6, [sp, #32]
 80002c6:	460d      	mov	r5, r1
 80002c8:	4604      	mov	r4, r0
 80002ca:	460f      	mov	r7, r1
 80002cc:	2b00      	cmp	r3, #0
 80002ce:	d14a      	bne.n	8000366 <__udivmoddi4+0xa6>
 80002d0:	428a      	cmp	r2, r1
 80002d2:	4694      	mov	ip, r2
 80002d4:	d965      	bls.n	80003a2 <__udivmoddi4+0xe2>
 80002d6:	fab2 f382 	clz	r3, r2
 80002da:	b143      	cbz	r3, 80002ee <__udivmoddi4+0x2e>
 80002dc:	fa02 fc03 	lsl.w	ip, r2, r3
 80002e0:	f1c3 0220 	rsb	r2, r3, #32
 80002e4:	409f      	lsls	r7, r3
 80002e6:	fa20 f202 	lsr.w	r2, r0, r2
 80002ea:	4317      	orrs	r7, r2
 80002ec:	409c      	lsls	r4, r3
 80002ee:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 80002f2:	fa1f f58c 	uxth.w	r5, ip
 80002f6:	fbb7 f1fe 	udiv	r1, r7, lr
 80002fa:	0c22      	lsrs	r2, r4, #16
 80002fc:	fb0e 7711 	mls	r7, lr, r1, r7
 8000300:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000304:	fb01 f005 	mul.w	r0, r1, r5
 8000308:	4290      	cmp	r0, r2
 800030a:	d90a      	bls.n	8000322 <__udivmoddi4+0x62>
 800030c:	eb1c 0202 	adds.w	r2, ip, r2
 8000310:	f101 37ff 	add.w	r7, r1, #4294967295
 8000314:	f080 811c 	bcs.w	8000550 <__udivmoddi4+0x290>
 8000318:	4290      	cmp	r0, r2
 800031a:	f240 8119 	bls.w	8000550 <__udivmoddi4+0x290>
 800031e:	3902      	subs	r1, #2
 8000320:	4462      	add	r2, ip
 8000322:	1a12      	subs	r2, r2, r0
 8000324:	b2a4      	uxth	r4, r4
 8000326:	fbb2 f0fe 	udiv	r0, r2, lr
 800032a:	fb0e 2210 	mls	r2, lr, r0, r2
 800032e:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000332:	fb00 f505 	mul.w	r5, r0, r5
 8000336:	42a5      	cmp	r5, r4
 8000338:	d90a      	bls.n	8000350 <__udivmoddi4+0x90>
 800033a:	eb1c 0404 	adds.w	r4, ip, r4
 800033e:	f100 32ff 	add.w	r2, r0, #4294967295
 8000342:	f080 8107 	bcs.w	8000554 <__udivmoddi4+0x294>
 8000346:	42a5      	cmp	r5, r4
 8000348:	f240 8104 	bls.w	8000554 <__udivmoddi4+0x294>
 800034c:	4464      	add	r4, ip
 800034e:	3802      	subs	r0, #2
 8000350:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000354:	1b64      	subs	r4, r4, r5
 8000356:	2100      	movs	r1, #0
 8000358:	b11e      	cbz	r6, 8000362 <__udivmoddi4+0xa2>
 800035a:	40dc      	lsrs	r4, r3
 800035c:	2300      	movs	r3, #0
 800035e:	e9c6 4300 	strd	r4, r3, [r6]
 8000362:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000366:	428b      	cmp	r3, r1
 8000368:	d908      	bls.n	800037c <__udivmoddi4+0xbc>
 800036a:	2e00      	cmp	r6, #0
 800036c:	f000 80ed 	beq.w	800054a <__udivmoddi4+0x28a>
 8000370:	2100      	movs	r1, #0
 8000372:	e9c6 0500 	strd	r0, r5, [r6]
 8000376:	4608      	mov	r0, r1
 8000378:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800037c:	fab3 f183 	clz	r1, r3
 8000380:	2900      	cmp	r1, #0
 8000382:	d149      	bne.n	8000418 <__udivmoddi4+0x158>
 8000384:	42ab      	cmp	r3, r5
 8000386:	d302      	bcc.n	800038e <__udivmoddi4+0xce>
 8000388:	4282      	cmp	r2, r0
 800038a:	f200 80f8 	bhi.w	800057e <__udivmoddi4+0x2be>
 800038e:	1a84      	subs	r4, r0, r2
 8000390:	eb65 0203 	sbc.w	r2, r5, r3
 8000394:	2001      	movs	r0, #1
 8000396:	4617      	mov	r7, r2
 8000398:	2e00      	cmp	r6, #0
 800039a:	d0e2      	beq.n	8000362 <__udivmoddi4+0xa2>
 800039c:	e9c6 4700 	strd	r4, r7, [r6]
 80003a0:	e7df      	b.n	8000362 <__udivmoddi4+0xa2>
 80003a2:	b902      	cbnz	r2, 80003a6 <__udivmoddi4+0xe6>
 80003a4:	deff      	udf	#255	; 0xff
 80003a6:	fab2 f382 	clz	r3, r2
 80003aa:	2b00      	cmp	r3, #0
 80003ac:	f040 8090 	bne.w	80004d0 <__udivmoddi4+0x210>
 80003b0:	1a8a      	subs	r2, r1, r2
 80003b2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003b6:	fa1f fe8c 	uxth.w	lr, ip
 80003ba:	2101      	movs	r1, #1
 80003bc:	fbb2 f5f7 	udiv	r5, r2, r7
 80003c0:	fb07 2015 	mls	r0, r7, r5, r2
 80003c4:	0c22      	lsrs	r2, r4, #16
 80003c6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80003ca:	fb0e f005 	mul.w	r0, lr, r5
 80003ce:	4290      	cmp	r0, r2
 80003d0:	d908      	bls.n	80003e4 <__udivmoddi4+0x124>
 80003d2:	eb1c 0202 	adds.w	r2, ip, r2
 80003d6:	f105 38ff 	add.w	r8, r5, #4294967295
 80003da:	d202      	bcs.n	80003e2 <__udivmoddi4+0x122>
 80003dc:	4290      	cmp	r0, r2
 80003de:	f200 80cb 	bhi.w	8000578 <__udivmoddi4+0x2b8>
 80003e2:	4645      	mov	r5, r8
 80003e4:	1a12      	subs	r2, r2, r0
 80003e6:	b2a4      	uxth	r4, r4
 80003e8:	fbb2 f0f7 	udiv	r0, r2, r7
 80003ec:	fb07 2210 	mls	r2, r7, r0, r2
 80003f0:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80003f4:	fb0e fe00 	mul.w	lr, lr, r0
 80003f8:	45a6      	cmp	lr, r4
 80003fa:	d908      	bls.n	800040e <__udivmoddi4+0x14e>
 80003fc:	eb1c 0404 	adds.w	r4, ip, r4
 8000400:	f100 32ff 	add.w	r2, r0, #4294967295
 8000404:	d202      	bcs.n	800040c <__udivmoddi4+0x14c>
 8000406:	45a6      	cmp	lr, r4
 8000408:	f200 80bb 	bhi.w	8000582 <__udivmoddi4+0x2c2>
 800040c:	4610      	mov	r0, r2
 800040e:	eba4 040e 	sub.w	r4, r4, lr
 8000412:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000416:	e79f      	b.n	8000358 <__udivmoddi4+0x98>
 8000418:	f1c1 0720 	rsb	r7, r1, #32
 800041c:	408b      	lsls	r3, r1
 800041e:	fa22 fc07 	lsr.w	ip, r2, r7
 8000422:	ea4c 0c03 	orr.w	ip, ip, r3
 8000426:	fa05 f401 	lsl.w	r4, r5, r1
 800042a:	fa20 f307 	lsr.w	r3, r0, r7
 800042e:	40fd      	lsrs	r5, r7
 8000430:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000434:	4323      	orrs	r3, r4
 8000436:	fbb5 f8f9 	udiv	r8, r5, r9
 800043a:	fa1f fe8c 	uxth.w	lr, ip
 800043e:	fb09 5518 	mls	r5, r9, r8, r5
 8000442:	0c1c      	lsrs	r4, r3, #16
 8000444:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000448:	fb08 f50e 	mul.w	r5, r8, lr
 800044c:	42a5      	cmp	r5, r4
 800044e:	fa02 f201 	lsl.w	r2, r2, r1
 8000452:	fa00 f001 	lsl.w	r0, r0, r1
 8000456:	d90b      	bls.n	8000470 <__udivmoddi4+0x1b0>
 8000458:	eb1c 0404 	adds.w	r4, ip, r4
 800045c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000460:	f080 8088 	bcs.w	8000574 <__udivmoddi4+0x2b4>
 8000464:	42a5      	cmp	r5, r4
 8000466:	f240 8085 	bls.w	8000574 <__udivmoddi4+0x2b4>
 800046a:	f1a8 0802 	sub.w	r8, r8, #2
 800046e:	4464      	add	r4, ip
 8000470:	1b64      	subs	r4, r4, r5
 8000472:	b29d      	uxth	r5, r3
 8000474:	fbb4 f3f9 	udiv	r3, r4, r9
 8000478:	fb09 4413 	mls	r4, r9, r3, r4
 800047c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000480:	fb03 fe0e 	mul.w	lr, r3, lr
 8000484:	45a6      	cmp	lr, r4
 8000486:	d908      	bls.n	800049a <__udivmoddi4+0x1da>
 8000488:	eb1c 0404 	adds.w	r4, ip, r4
 800048c:	f103 35ff 	add.w	r5, r3, #4294967295
 8000490:	d26c      	bcs.n	800056c <__udivmoddi4+0x2ac>
 8000492:	45a6      	cmp	lr, r4
 8000494:	d96a      	bls.n	800056c <__udivmoddi4+0x2ac>
 8000496:	3b02      	subs	r3, #2
 8000498:	4464      	add	r4, ip
 800049a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800049e:	fba3 9502 	umull	r9, r5, r3, r2
 80004a2:	eba4 040e 	sub.w	r4, r4, lr
 80004a6:	42ac      	cmp	r4, r5
 80004a8:	46c8      	mov	r8, r9
 80004aa:	46ae      	mov	lr, r5
 80004ac:	d356      	bcc.n	800055c <__udivmoddi4+0x29c>
 80004ae:	d053      	beq.n	8000558 <__udivmoddi4+0x298>
 80004b0:	b156      	cbz	r6, 80004c8 <__udivmoddi4+0x208>
 80004b2:	ebb0 0208 	subs.w	r2, r0, r8
 80004b6:	eb64 040e 	sbc.w	r4, r4, lr
 80004ba:	fa04 f707 	lsl.w	r7, r4, r7
 80004be:	40ca      	lsrs	r2, r1
 80004c0:	40cc      	lsrs	r4, r1
 80004c2:	4317      	orrs	r7, r2
 80004c4:	e9c6 7400 	strd	r7, r4, [r6]
 80004c8:	4618      	mov	r0, r3
 80004ca:	2100      	movs	r1, #0
 80004cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004d0:	f1c3 0120 	rsb	r1, r3, #32
 80004d4:	fa02 fc03 	lsl.w	ip, r2, r3
 80004d8:	fa20 f201 	lsr.w	r2, r0, r1
 80004dc:	fa25 f101 	lsr.w	r1, r5, r1
 80004e0:	409d      	lsls	r5, r3
 80004e2:	432a      	orrs	r2, r5
 80004e4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80004e8:	fa1f fe8c 	uxth.w	lr, ip
 80004ec:	fbb1 f0f7 	udiv	r0, r1, r7
 80004f0:	fb07 1510 	mls	r5, r7, r0, r1
 80004f4:	0c11      	lsrs	r1, r2, #16
 80004f6:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80004fa:	fb00 f50e 	mul.w	r5, r0, lr
 80004fe:	428d      	cmp	r5, r1
 8000500:	fa04 f403 	lsl.w	r4, r4, r3
 8000504:	d908      	bls.n	8000518 <__udivmoddi4+0x258>
 8000506:	eb1c 0101 	adds.w	r1, ip, r1
 800050a:	f100 38ff 	add.w	r8, r0, #4294967295
 800050e:	d22f      	bcs.n	8000570 <__udivmoddi4+0x2b0>
 8000510:	428d      	cmp	r5, r1
 8000512:	d92d      	bls.n	8000570 <__udivmoddi4+0x2b0>
 8000514:	3802      	subs	r0, #2
 8000516:	4461      	add	r1, ip
 8000518:	1b49      	subs	r1, r1, r5
 800051a:	b292      	uxth	r2, r2
 800051c:	fbb1 f5f7 	udiv	r5, r1, r7
 8000520:	fb07 1115 	mls	r1, r7, r5, r1
 8000524:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000528:	fb05 f10e 	mul.w	r1, r5, lr
 800052c:	4291      	cmp	r1, r2
 800052e:	d908      	bls.n	8000542 <__udivmoddi4+0x282>
 8000530:	eb1c 0202 	adds.w	r2, ip, r2
 8000534:	f105 38ff 	add.w	r8, r5, #4294967295
 8000538:	d216      	bcs.n	8000568 <__udivmoddi4+0x2a8>
 800053a:	4291      	cmp	r1, r2
 800053c:	d914      	bls.n	8000568 <__udivmoddi4+0x2a8>
 800053e:	3d02      	subs	r5, #2
 8000540:	4462      	add	r2, ip
 8000542:	1a52      	subs	r2, r2, r1
 8000544:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000548:	e738      	b.n	80003bc <__udivmoddi4+0xfc>
 800054a:	4631      	mov	r1, r6
 800054c:	4630      	mov	r0, r6
 800054e:	e708      	b.n	8000362 <__udivmoddi4+0xa2>
 8000550:	4639      	mov	r1, r7
 8000552:	e6e6      	b.n	8000322 <__udivmoddi4+0x62>
 8000554:	4610      	mov	r0, r2
 8000556:	e6fb      	b.n	8000350 <__udivmoddi4+0x90>
 8000558:	4548      	cmp	r0, r9
 800055a:	d2a9      	bcs.n	80004b0 <__udivmoddi4+0x1f0>
 800055c:	ebb9 0802 	subs.w	r8, r9, r2
 8000560:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000564:	3b01      	subs	r3, #1
 8000566:	e7a3      	b.n	80004b0 <__udivmoddi4+0x1f0>
 8000568:	4645      	mov	r5, r8
 800056a:	e7ea      	b.n	8000542 <__udivmoddi4+0x282>
 800056c:	462b      	mov	r3, r5
 800056e:	e794      	b.n	800049a <__udivmoddi4+0x1da>
 8000570:	4640      	mov	r0, r8
 8000572:	e7d1      	b.n	8000518 <__udivmoddi4+0x258>
 8000574:	46d0      	mov	r8, sl
 8000576:	e77b      	b.n	8000470 <__udivmoddi4+0x1b0>
 8000578:	3d02      	subs	r5, #2
 800057a:	4462      	add	r2, ip
 800057c:	e732      	b.n	80003e4 <__udivmoddi4+0x124>
 800057e:	4608      	mov	r0, r1
 8000580:	e70a      	b.n	8000398 <__udivmoddi4+0xd8>
 8000582:	4464      	add	r4, ip
 8000584:	3802      	subs	r0, #2
 8000586:	e742      	b.n	800040e <__udivmoddi4+0x14e>

08000588 <__aeabi_idiv0>:
 8000588:	4770      	bx	lr
 800058a:	bf00      	nop

0800058c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800058c:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005c4 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000590:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000592:	e003      	b.n	800059c <LoopCopyDataInit>

08000594 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000594:	4b0c      	ldr	r3, [pc, #48]	; (80005c8 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000596:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000598:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800059a:	3104      	adds	r1, #4

0800059c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800059c:	480b      	ldr	r0, [pc, #44]	; (80005cc <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800059e:	4b0c      	ldr	r3, [pc, #48]	; (80005d0 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005a0:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005a2:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005a4:	d3f6      	bcc.n	8000594 <CopyDataInit>
  ldr  r2, =_sbss
 80005a6:	4a0b      	ldr	r2, [pc, #44]	; (80005d4 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005a8:	e002      	b.n	80005b0 <LoopFillZerobss>

080005aa <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005aa:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005ac:	f842 3b04 	str.w	r3, [r2], #4

080005b0 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005b0:	4b09      	ldr	r3, [pc, #36]	; (80005d8 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005b2:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005b4:	d3f9      	bcc.n	80005aa <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005b6:	f007 fb71 	bl	8007c9c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005ba:	f027 fa75 	bl	8027aa8 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005be:	f000 ff5f 	bl	8001480 <main>
  bx  lr    
 80005c2:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80005c4:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80005c8:	08147a90 	.word	0x08147a90
  ldr  r0, =_sdata
 80005cc:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005d0:	20000168 	.word	0x20000168
  ldr  r2, =_sbss
 80005d4:	20000168 	.word	0x20000168
  ldr  r3, = _ebss
 80005d8:	200143f4 	.word	0x200143f4

080005dc <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005dc:	e7fe      	b.n	80005dc <ADC_IRQHandler>
	...

080005e0 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 80005e0:	4770      	bx	lr
 80005e2:	bf00      	nop

080005e4 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80005e4:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 80005e6:	f000 fd35 	bl	8001054 <touchgfx_components_init>
  touchgfx_init();
}
 80005ea:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 80005ee:	f000 bcbd 	b.w	8000f6c <touchgfx_init>
 80005f2:	bf00      	nop

080005f4 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005f4:	f000 bd30 	b.w	8001058 <touchgfx_taskEntry>

080005f8 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80005f8:	4770      	bx	lr

080005fa <_ZN20STM32TouchControllerD0Ev>:
 80005fa:	b510      	push	{r4, lr}
 80005fc:	2104      	movs	r1, #4
 80005fe:	4604      	mov	r4, r0
 8000600:	f026 f95d 	bl	80268be <_ZdlPvj>
 8000604:	4620      	mov	r0, r4
 8000606:	bd10      	pop	{r4, pc}

08000608 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8000608:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 800060a:	4b0c      	ldr	r3, [pc, #48]	; (800063c <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060c:	4c0c      	ldr	r4, [pc, #48]	; (8000640 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 800060e:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000610:	4b0c      	ldr	r3, [pc, #48]	; (8000644 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000612:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8000614:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000616:	6863      	ldr	r3, [r4, #4]
 8000618:	4798      	blx	r3
 800061a:	f640 0311 	movw	r3, #2065	; 0x811
 800061e:	4298      	cmp	r0, r3
 8000620:	d10a      	bne.n	8000638 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8000622:	4d09      	ldr	r5, [pc, #36]	; (8000648 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8000624:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8000626:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000628:	2082      	movs	r0, #130	; 0x82
 800062a:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 800062c:	682b      	ldr	r3, [r5, #0]
 800062e:	2082      	movs	r0, #130	; 0x82
 8000630:	68db      	ldr	r3, [r3, #12]
 8000632:	4798      	blx	r3
 8000634:	2000      	movs	r0, #0
    }

    return ret;
}
 8000636:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000638:	2001      	movs	r0, #1
 800063a:	e7fc      	b.n	8000636 <_Z11BSP_TS_Inittt+0x2e>
 800063c:	20000184 	.word	0x20000184
 8000640:	20000050 	.word	0x20000050
 8000644:	20000186 	.word	0x20000186
 8000648:	20000188 	.word	0x20000188

0800064c <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 800064c:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000650:	20f0      	movs	r0, #240	; 0xf0
 8000652:	f7ff bfd9 	b.w	8000608 <_Z11BSP_TS_Inittt>
	...

08000658 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000658:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800065a:	4d33      	ldr	r5, [pc, #204]	; (8000728 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 800065c:	682b      	ldr	r3, [r5, #0]
{
 800065e:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000660:	691b      	ldr	r3, [r3, #16]
 8000662:	2082      	movs	r0, #130	; 0x82
 8000664:	4798      	blx	r3
 8000666:	b280      	uxth	r0, r0
 8000668:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 800066a:	2800      	cmp	r0, #0
 800066c:	d04a      	beq.n	8000704 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 800066e:	682b      	ldr	r3, [r5, #0]
 8000670:	f10d 0206 	add.w	r2, sp, #6
 8000674:	695b      	ldr	r3, [r3, #20]
 8000676:	a901      	add	r1, sp, #4
 8000678:	2082      	movs	r0, #130	; 0x82
 800067a:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 800067c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000680:	f640 6274 	movw	r2, #3700	; 0xe74
 8000684:	4293      	cmp	r3, r2
 8000686:	d93f      	bls.n	8000708 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 8000688:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 800068c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000690:	1ad2      	subs	r2, r2, r3
 8000692:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8000694:	2a0a      	cmp	r2, #10
 8000696:	d93d      	bls.n	8000714 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 8000698:	230b      	movs	r3, #11
 800069a:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 800069e:	4b23      	ldr	r3, [pc, #140]	; (800072c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 80006a0:	881b      	ldrh	r3, [r3, #0]
 80006a2:	429a      	cmp	r2, r3
 80006a4:	d901      	bls.n	80006aa <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 80006a6:	3b01      	subs	r3, #1
 80006a8:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 80006aa:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80006ae:	f640 31b8 	movw	r1, #3000	; 0xbb8
 80006b2:	428b      	cmp	r3, r1
 80006b4:	d830      	bhi.n	8000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 80006b6:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 80006ba:	330e      	adds	r3, #14
 80006bc:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 80006be:	210f      	movs	r1, #15
 80006c0:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 80006c4:	491a      	ldr	r1, [pc, #104]	; (8000730 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 80006c6:	8809      	ldrh	r1, [r1, #0]
 80006c8:	428b      	cmp	r3, r1
 80006ca:	d901      	bls.n	80006d0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 80006cc:	3901      	subs	r1, #1
 80006ce:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d0:	4e18      	ldr	r6, [pc, #96]	; (8000734 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006d2:	4d19      	ldr	r5, [pc, #100]	; (8000738 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d4:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006d6:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d8:	4283      	cmp	r3, r0
 80006da:	b281      	uxth	r1, r0
 80006dc:	bf8c      	ite	hi
 80006de:	1a59      	subhi	r1, r3, r1
 80006e0:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006e2:	b2b8      	uxth	r0, r7
 80006e4:	42ba      	cmp	r2, r7
 80006e6:	bf8c      	ite	hi
 80006e8:	1a10      	subhi	r0, r2, r0
 80006ea:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006ec:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006ee:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80006f0:	4401      	add	r1, r0
 80006f2:	2905      	cmp	r1, #5
        {
            _x = x;
 80006f4:	bfc8      	it	gt
 80006f6:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80006f8:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80006fa:	bfc8      	it	gt
 80006fc:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80006fe:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8000700:	682b      	ldr	r3, [r5, #0]
 8000702:	80a3      	strh	r3, [r4, #4]
    }
}
 8000704:	b003      	add	sp, #12
 8000706:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 8000708:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 800070a:	bf9c      	itt	ls
 800070c:	23b4      	movls	r3, #180	; 0xb4
 800070e:	f8ad 3006 	strhls.w	r3, [sp, #6]
 8000712:	e7bb      	b.n	800068c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 8000714:	2200      	movs	r2, #0
 8000716:	e7c8      	b.n	80006aa <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 8000718:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 800071c:	3308      	adds	r3, #8
 800071e:	b29b      	uxth	r3, r3
        if (xr <= 0)
 8000720:	2b0e      	cmp	r3, #14
 8000722:	d8cc      	bhi.n	80006be <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 8000724:	2300      	movs	r3, #0
 8000726:	e7d3      	b.n	80006d0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 8000728:	20000188 	.word	0x20000188
 800072c:	20000186 	.word	0x20000186
 8000730:	20000184 	.word	0x20000184
 8000734:	2000018c 	.word	0x2000018c
 8000738:	20000190 	.word	0x20000190

0800073c <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 800073c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 800073e:	4668      	mov	r0, sp
{
 8000740:	460d      	mov	r5, r1
 8000742:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000744:	f7ff ff88 	bl	8000658 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000748:	f8bd 0000 	ldrh.w	r0, [sp]
 800074c:	b148      	cbz	r0, 8000762 <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 800074e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000752:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000754:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000758:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 800075a:	4b03      	ldr	r3, [pc, #12]	; (8000768 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 800075c:	223c      	movs	r2, #60	; 0x3c
 800075e:	601a      	str	r2, [r3, #0]
        return true;
 8000760:	2001      	movs	r0, #1
}
 8000762:	b003      	add	sp, #12
 8000764:	bd30      	pop	{r4, r5, pc}
 8000766:	bf00      	nop
 8000768:	20000014 	.word	0x20000014

0800076c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 800076c:	b110      	cbz	r0, 8000774 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 800076e:	2802      	cmp	r0, #2
 8000770:	d009      	beq.n	8000786 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8000772:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000774:	4b07      	ldr	r3, [pc, #28]	; (8000794 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8000776:	681a      	ldr	r2, [r3, #0]
 8000778:	fab2 f282 	clz	r2, r2
 800077c:	0952      	lsrs	r2, r2, #5
 800077e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8000780:	4805      	ldr	r0, [pc, #20]	; (8000798 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8000782:	f007 bdbf 	b.w	8008304 <HAL_GPIO_WritePin>
 8000786:	4b03      	ldr	r3, [pc, #12]	; (8000794 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8000788:	689a      	ldr	r2, [r3, #8]
 800078a:	fab2 f282 	clz	r2, r2
 800078e:	0952      	lsrs	r2, r2, #5
 8000790:	2110      	movs	r1, #16
 8000792:	e7f5      	b.n	8000780 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 8000794:	20000194 	.word	0x20000194
 8000798:	40021000 	.word	0x40021000

0800079c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 800079c:	b110      	cbz	r0, 80007a4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 800079e:	2802      	cmp	r0, #2
 80007a0:	d009      	beq.n	80007b6 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 80007a2:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 80007a4:	4b07      	ldr	r3, [pc, #28]	; (80007c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 80007a6:	681a      	ldr	r2, [r3, #0]
 80007a8:	3a00      	subs	r2, #0
 80007aa:	bf18      	it	ne
 80007ac:	2201      	movne	r2, #1
 80007ae:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 80007b0:	4805      	ldr	r0, [pc, #20]	; (80007c8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 80007b2:	f007 bda7 	b.w	8008304 <HAL_GPIO_WritePin>
 80007b6:	4b03      	ldr	r3, [pc, #12]	; (80007c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 80007b8:	689a      	ldr	r2, [r3, #8]
 80007ba:	3a00      	subs	r2, #0
 80007bc:	bf18      	it	ne
 80007be:	2201      	movne	r2, #1
 80007c0:	2110      	movs	r1, #16
 80007c2:	e7f5      	b.n	80007b0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 80007c4:	20000194 	.word	0x20000194
 80007c8:	40021000 	.word	0x40021000

080007cc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80007cc:	b110      	cbz	r0, 80007d4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 80007ce:	2802      	cmp	r0, #2
 80007d0:	d004      	beq.n	80007dc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 80007d2:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80007d4:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80007d6:	4802      	ldr	r0, [pc, #8]	; (80007e0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 80007d8:	f007 bd98 	b.w	800830c <HAL_GPIO_TogglePin>
 80007dc:	2110      	movs	r1, #16
 80007de:	e7fa      	b.n	80007d6 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 80007e0:	40021000 	.word	0x40021000

080007e4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 80007e4:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 80007e6:	b130      	cbz	r0, 80007f6 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 80007e8:	2802      	cmp	r0, #2
 80007ea:	d009      	beq.n	8000800 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 80007ec:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 80007ee:	1e43      	subs	r3, r0, #1
 80007f0:	4258      	negs	r0, r3
 80007f2:	4158      	adcs	r0, r3
 80007f4:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80007f6:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80007f8:	4802      	ldr	r0, [pc, #8]	; (8000804 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 80007fa:	f007 fd7d 	bl	80082f8 <HAL_GPIO_ReadPin>
        break;
 80007fe:	e7f6      	b.n	80007ee <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000800:	2110      	movs	r1, #16
 8000802:	e7f9      	b.n	80007f8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 8000804:	40021000 	.word	0x40021000

08000808 <_ZN8touchgfx4GPIO4initEv>:
{
 8000808:	b570      	push	{r4, r5, r6, lr}
 800080a:	4d08      	ldr	r5, [pc, #32]	; (800082c <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 800080c:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 800080e:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000810:	b2e0      	uxtb	r0, r4
 8000812:	f7ff ffe7 	bl	80007e4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8000816:	b118      	cbz	r0, 8000820 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000818:	682b      	ldr	r3, [r5, #0]
 800081a:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 800081c:	bf18      	it	ne
 800081e:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000820:	3401      	adds	r4, #1
 8000822:	2c05      	cmp	r4, #5
 8000824:	f105 0504 	add.w	r5, r5, #4
 8000828:	d1f2      	bne.n	8000810 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 800082a:	bd70      	pop	{r4, r5, r6, pc}
 800082c:	20000194 	.word	0x20000194

08000830 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000830:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000832:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 8000836:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 800083a:	4770      	bx	lr

0800083c <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 800083c:	2000      	movs	r0, #0
 800083e:	4770      	bx	lr

08000840 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000840:	4b03      	ldr	r3, [pc, #12]	; (8000850 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8000842:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000844:	3900      	subs	r1, #0
 8000846:	bf18      	it	ne
 8000848:	2101      	movne	r1, #1
 800084a:	7019      	strb	r1, [r3, #0]
    }
 800084c:	4770      	bx	lr
 800084e:	bf00      	nop
 8000850:	200137bb 	.word	0x200137bb

08000854 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000854:	2000      	movs	r0, #0
 8000856:	4770      	bx	lr

08000858 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000858:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800085a:	b10b      	cbz	r3, 8000860 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 800085c:	4608      	mov	r0, r1
 800085e:	4718      	bx	r3
        }
    }
 8000860:	4770      	bx	lr

08000862 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000862:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8000866:	4770      	bx	lr

08000868 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000868:	6840      	ldr	r0, [r0, #4]
 800086a:	6803      	ldr	r3, [r0, #0]
 800086c:	699b      	ldr	r3, [r3, #24]
 800086e:	4718      	bx	r3

08000870 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000870:	4770      	bx	lr

08000872 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8000872:	4770      	bx	lr

08000874 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000874:	4770      	bx	lr
	...

08000878 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8000878:	b510      	push	{r4, lr}
 800087a:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800087c:	f000 fcd8 	bl	8001230 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8000880:	6823      	ldr	r3, [r4, #0]
 8000882:	4903      	ldr	r1, [pc, #12]	; (8000890 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8000884:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000888:	4620      	mov	r0, r4
}
 800088a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 800088e:	4718      	bx	r3
 8000890:	d0000000 	.word	0xd0000000

08000894 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8000894:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000896:	6803      	ldr	r3, [r0, #0]
{
 8000898:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 800089a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800089e:	4798      	blx	r3
    enableInterrupts();
 80008a0:	6823      	ldr	r3, [r4, #0]
 80008a2:	4620      	mov	r0, r4
 80008a4:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80008a6:	4798      	blx	r3

    OSWrappers::waitForVSync();
 80008a8:	f000 f8ec 	bl	8000a84 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80008ac:	6823      	ldr	r3, [r4, #0]
 80008ae:	4620      	mov	r0, r4
 80008b0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80008b2:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 80008b4:	2029      	movs	r0, #41	; 0x29
 80008b6:	f001 f8e5 	bl	8001a84 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 80008ba:	f000 f8e3 	bl	8000a84 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80008be:	6823      	ldr	r3, [r4, #0]
 80008c0:	4620      	mov	r0, r4
 80008c2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80008c4:	4798      	blx	r3
    for (;;)
 80008c6:	e7f8      	b.n	80008ba <_ZN11TouchGFXHAL9taskEntryEv+0x26>

080008c8 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80008c8:	b510      	push	{r4, lr}
 80008ca:	4604      	mov	r4, r0
        swapFrameBuffers();
 80008cc:	f00f f82a 	bl	800f924 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80008d0:	6823      	ldr	r3, [r4, #0]
 80008d2:	4620      	mov	r0, r4
 80008d4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 80008d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80008dc:	4718      	bx	r3

080008de <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80008de:	f000 bc99 	b.w	8001214 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080008e2 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80008e2:	f000 bc9d 	b.w	8001220 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080008e6 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80008e6:	f000 bcc1 	b.w	800126c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080008ea <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80008ea:	f000 bc6f 	b.w	80011cc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080008ee <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80008ee:	f000 bcc9 	b.w	8001284 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080008f2 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80008f2:	f000 bcd1 	b.w	8001298 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080008f6 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80008f6:	f000 bc73 	b.w	80011e0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080008fa <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80008fa:	f00e ba7f 	b.w	800edfc <_ZN8touchgfx3HAL16flushFrameBufferEv>

080008fe <_ZN11TouchGFXHALD0Ev>:
 80008fe:	b510      	push	{r4, lr}
 8000900:	217c      	movs	r1, #124	; 0x7c
 8000902:	4604      	mov	r4, r0
 8000904:	f025 ffdb 	bl	80268be <_ZdlPvj>
 8000908:	4620      	mov	r0, r4
 800090a:	bd10      	pop	{r4, pc}

0800090c <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800090c:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 8000910:	b11b      	cbz	r3, 800091a <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8000912:	6840      	ldr	r0, [r0, #4]
 8000914:	6803      	ldr	r3, [r0, #0]
 8000916:	681b      	ldr	r3, [r3, #0]
 8000918:	4718      	bx	r3
    }
 800091a:	4618      	mov	r0, r3
 800091c:	4770      	bx	lr
	...

08000920 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8000920:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8000922:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8000926:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 800092a:	4b0c      	ldr	r3, [pc, #48]	; (800095c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 800092c:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 800092e:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8000930:	d009      	beq.n	8000946 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8000932:	b93a      	cbnz	r2, 8000944 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000934:	4a0a      	ldr	r2, [pc, #40]	; (8000960 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000936:	490b      	ldr	r1, [pc, #44]	; (8000964 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000938:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 800093a:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 800093c:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800093e:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8000940:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8000942:	701a      	strb	r2, [r3, #0]
    }
 8000944:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000946:	2a00      	cmp	r2, #0
 8000948:	d0fc      	beq.n	8000944 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800094a:	4a05      	ldr	r2, [pc, #20]	; (8000960 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 800094c:	4905      	ldr	r1, [pc, #20]	; (8000964 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800094e:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000950:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8000952:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000954:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000956:	2200      	movs	r2, #0
 8000958:	e7f3      	b.n	8000942 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 800095a:	bf00      	nop
 800095c:	200137b4 	.word	0x200137b4
 8000960:	200137b0 	.word	0x200137b0
 8000964:	200137b2 	.word	0x200137b2

08000968 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000968:	b570      	push	{r4, r5, r6, lr}
 800096a:	460d      	mov	r5, r1
 800096c:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800096e:	b935      	cbnz	r5, 800097e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8000970:	4b09      	ldr	r3, [pc, #36]	; (8000998 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8000972:	4a0a      	ldr	r2, [pc, #40]	; (800099c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000974:	480a      	ldr	r0, [pc, #40]	; (80009a0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000976:	f240 21d2 	movw	r1, #722	; 0x2d2
 800097a:	f026 fd91 	bl	80274a0 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800097e:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000982:	4b08      	ldr	r3, [pc, #32]	; (80009a4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000984:	3a00      	subs	r2, #0
 8000986:	bf18      	it	ne
 8000988:	2201      	movne	r2, #1
 800098a:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 800098c:	6803      	ldr	r3, [r0, #0]
    }
 800098e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8000992:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000996:	4718      	bx	r3
 8000998:	08028610 	.word	0x08028610
 800099c:	08028648 	.word	0x08028648
 80009a0:	08028696 	.word	0x08028696
 80009a4:	200137ba 	.word	0x200137ba

080009a8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80009a8:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80009aa:	4b09      	ldr	r3, [pc, #36]	; (80009d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 80009ac:	881b      	ldrh	r3, [r3, #0]
 80009ae:	428b      	cmp	r3, r1
 80009b0:	d803      	bhi.n	80009ba <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 80009b2:	4b08      	ldr	r3, [pc, #32]	; (80009d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 80009b4:	881b      	ldrh	r3, [r3, #0]
 80009b6:	4293      	cmp	r3, r2
 80009b8:	d905      	bls.n	80009c6 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80009ba:	4b07      	ldr	r3, [pc, #28]	; (80009d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80009bc:	4a07      	ldr	r2, [pc, #28]	; (80009dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80009be:	4808      	ldr	r0, [pc, #32]	; (80009e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80009c0:	219e      	movs	r1, #158	; 0x9e
 80009c2:	f026 fd6d 	bl	80274a0 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80009c6:	4b07      	ldr	r3, [pc, #28]	; (80009e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80009c8:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80009ca:	4b07      	ldr	r3, [pc, #28]	; (80009e8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80009cc:	801a      	strh	r2, [r3, #0]
    }
 80009ce:	bd08      	pop	{r3, pc}
 80009d0:	200137b0 	.word	0x200137b0
 80009d4:	200137b2 	.word	0x200137b2
 80009d8:	080286db 	.word	0x080286db
 80009dc:	0802873e 	.word	0x0802873e
 80009e0:	08028696 	.word	0x08028696
 80009e4:	200137b6 	.word	0x200137b6
 80009e8:	200137b8 	.word	0x200137b8

080009ec <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80009ec:	2101      	movs	r1, #1
{
 80009ee:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80009f0:	2200      	movs	r2, #0
 80009f2:	4608      	mov	r0, r1
 80009f4:	f00b f80a 	bl	800ba0c <osSemaphoreNew>
 80009f8:	4b0a      	ldr	r3, [pc, #40]	; (8000a24 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 80009fa:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80009fc:	b928      	cbnz	r0, 8000a0a <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80009fe:	4b0a      	ldr	r3, [pc, #40]	; (8000a28 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000a00:	4a0a      	ldr	r2, [pc, #40]	; (8000a2c <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000a02:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000a04:	480a      	ldr	r0, [pc, #40]	; (8000a30 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000a06:	f026 fd4b 	bl	80274a0 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000a0a:	2200      	movs	r2, #0
 8000a0c:	2104      	movs	r1, #4
 8000a0e:	2001      	movs	r0, #1
 8000a10:	f00b f8b0 	bl	800bb74 <osMessageQueueNew>
 8000a14:	4b07      	ldr	r3, [pc, #28]	; (8000a34 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000a16:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000a18:	b918      	cbnz	r0, 8000a22 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000a1a:	4b07      	ldr	r3, [pc, #28]	; (8000a38 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000a1c:	4a03      	ldr	r2, [pc, #12]	; (8000a2c <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000a1e:	212c      	movs	r1, #44	; 0x2c
 8000a20:	e7f0      	b.n	8000a04 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000a22:	bd08      	pop	{r3, pc}
 8000a24:	200001a8 	.word	0x200001a8
 8000a28:	0802885c 	.word	0x0802885c
 8000a2c:	080288a5 	.word	0x080288a5
 8000a30:	080288d4 	.word	0x080288d4
 8000a34:	200001a4 	.word	0x200001a4
 8000a38:	0802894e 	.word	0x0802894e

08000a3c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000a3c:	4b02      	ldr	r3, [pc, #8]	; (8000a48 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000a3e:	f04f 31ff 	mov.w	r1, #4294967295
 8000a42:	6818      	ldr	r0, [r3, #0]
 8000a44:	f00b b836 	b.w	800bab4 <osSemaphoreAcquire>
 8000a48:	200001a8 	.word	0x200001a8

08000a4c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000a4c:	4b01      	ldr	r3, [pc, #4]	; (8000a54 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000a4e:	6818      	ldr	r0, [r3, #0]
 8000a50:	f00b b864 	b.w	800bb1c <osSemaphoreRelease>
 8000a54:	200001a8 	.word	0x200001a8

08000a58 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000a58:	4b02      	ldr	r3, [pc, #8]	; (8000a64 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000a5a:	2100      	movs	r1, #0
 8000a5c:	6818      	ldr	r0, [r3, #0]
 8000a5e:	f00b b829 	b.w	800bab4 <osSemaphoreAcquire>
 8000a62:	bf00      	nop
 8000a64:	200001a8 	.word	0x200001a8

08000a68 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000a68:	f7ff bff0 	b.w	8000a4c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000a6c <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000a6c:	4803      	ldr	r0, [pc, #12]	; (8000a7c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000a6e:	4904      	ldr	r1, [pc, #16]	; (8000a80 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000a70:	6800      	ldr	r0, [r0, #0]
 8000a72:	2300      	movs	r3, #0
 8000a74:	461a      	mov	r2, r3
 8000a76:	f00b b8b7 	b.w	800bbe8 <osMessageQueuePut>
 8000a7a:	bf00      	nop
 8000a7c:	200001a4 	.word	0x200001a4
 8000a80:	20000004 	.word	0x20000004

08000a84 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000a84:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000a86:	4c08      	ldr	r4, [pc, #32]	; (8000aa8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000a88:	2300      	movs	r3, #0
 8000a8a:	461a      	mov	r2, r3
 8000a8c:	a901      	add	r1, sp, #4
 8000a8e:	6820      	ldr	r0, [r4, #0]
 8000a90:	f00b f8e0 	bl	800bc54 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000a94:	6820      	ldr	r0, [r4, #0]
 8000a96:	f04f 33ff 	mov.w	r3, #4294967295
 8000a9a:	2200      	movs	r2, #0
 8000a9c:	a901      	add	r1, sp, #4
 8000a9e:	f00b f8d9 	bl	800bc54 <osMessageQueueGet>
}
 8000aa2:	b002      	add	sp, #8
 8000aa4:	bd10      	pop	{r4, pc}
 8000aa6:	bf00      	nop
 8000aa8:	200001a4 	.word	0x200001a4

08000aac <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000aac:	6803      	ldr	r3, [r0, #0]
 8000aae:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000ab0:	4718      	bx	r3

08000ab2 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000ab2:	2001      	movs	r0, #1
 8000ab4:	4770      	bx	lr

08000ab6 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000ab6:	6803      	ldr	r3, [r0, #0]
 8000ab8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000aba:	4718      	bx	r3

08000abc <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 8000abc:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000abe:	2300      	movs	r3, #0
 8000ac0:	9301      	str	r3, [sp, #4]
 8000ac2:	4b0d      	ldr	r3, [pc, #52]	; (8000af8 <_ZN8STM32DMA10initializeEv+0x3c>)
 8000ac4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000ac6:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000aca:	631a      	str	r2, [r3, #48]	; 0x30
 8000acc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000ace:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 8000ad2:	9201      	str	r2, [sp, #4]
 8000ad4:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8000ad6:	691a      	ldr	r2, [r3, #16]
 8000ad8:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000adc:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8000ade:	691a      	ldr	r2, [r3, #16]
 8000ae0:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8000ae4:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000ae6:	4b05      	ldr	r3, [pc, #20]	; (8000afc <_ZN8STM32DMA10initializeEv+0x40>)
 8000ae8:	4a05      	ldr	r2, [pc, #20]	; (8000b00 <_ZN8STM32DMA10initializeEv+0x44>)
 8000aea:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000aec:	4b05      	ldr	r3, [pc, #20]	; (8000b04 <_ZN8STM32DMA10initializeEv+0x48>)
 8000aee:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000af2:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8000af4:	b002      	add	sp, #8
 8000af6:	4770      	bx	lr
 8000af8:	40023800 	.word	0x40023800
 8000afc:	20002634 	.word	0x20002634
 8000b00:	08000b49 	.word	0x08000b49
 8000b04:	e000e100 	.word	0xe000e100

08000b08 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000b08:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000b0c:	4770      	bx	lr
	...

08000b10 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000b10:	4b05      	ldr	r3, [pc, #20]	; (8000b28 <_ZN8STM32DMAD1Ev+0x18>)
 8000b12:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000b14:	4b05      	ldr	r3, [pc, #20]	; (8000b2c <_ZN8STM32DMAD1Ev+0x1c>)
 8000b16:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000b1a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000b1e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000b22:	f3bf 8f6f 	isb	sy
}
 8000b26:	4770      	bx	lr
 8000b28:	08028b18 	.word	0x08028b18
 8000b2c:	e000e100 	.word	0xe000e100

08000b30 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000b30:	b510      	push	{r4, lr}
 8000b32:	4604      	mov	r4, r0
}
 8000b34:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8000b38:	f7ff ffea 	bl	8000b10 <_ZN8STM32DMAD1Ev>
 8000b3c:	4620      	mov	r0, r4
 8000b3e:	f025 febe 	bl	80268be <_ZdlPvj>
 8000b42:	4620      	mov	r0, r4
 8000b44:	bd10      	pop	{r4, pc}
	...

08000b48 <DMA2D_XferCpltCallback>:
        return instance;
 8000b48:	4b02      	ldr	r3, [pc, #8]	; (8000b54 <DMA2D_XferCpltCallback+0xc>)
 8000b4a:	681b      	ldr	r3, [r3, #0]
 8000b4c:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000b4e:	6803      	ldr	r3, [r0, #0]
 8000b50:	695b      	ldr	r3, [r3, #20]
 8000b52:	4718      	bx	r3
 8000b54:	200137bc 	.word	0x200137bc

08000b58 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000b58:	b570      	push	{r4, r5, r6, lr}
 8000b5a:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000b5c:	4625      	mov	r5, r4
 8000b5e:	4b0a      	ldr	r3, [pc, #40]	; (8000b88 <_ZN8STM32DMAC1Ev+0x30>)
 8000b60:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000b62:	2600      	movs	r6, #0
 8000b64:	6060      	str	r0, [r4, #4]
 8000b66:	7226      	strb	r6, [r4, #8]
 8000b68:	7266      	strb	r6, [r4, #9]
 8000b6a:	f845 3b20 	str.w	r3, [r5], #32
 8000b6e:	2260      	movs	r2, #96	; 0x60
 8000b70:	4629      	mov	r1, r5
 8000b72:	f00f f82f 	bl	800fbd4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000b76:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000b7a:	60ee      	str	r6, [r5, #12]
 8000b7c:	3524      	adds	r5, #36	; 0x24
 8000b7e:	42ab      	cmp	r3, r5
 8000b80:	d1fb      	bne.n	8000b7a <_ZN8STM32DMAC1Ev+0x22>
}
 8000b82:	4620      	mov	r0, r4
 8000b84:	bd70      	pop	{r4, r5, r6, pc}
 8000b86:	bf00      	nop
 8000b88:	08028b18 	.word	0x08028b18

08000b8c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000b8c:	b508      	push	{r3, lr}
    switch (format)
 8000b8e:	290b      	cmp	r1, #11
 8000b90:	d80b      	bhi.n	8000baa <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8000b92:	e8df f001 	tbb	[pc, r1]
 8000b96:	0612      	.short	0x0612
 8000b98:	0a0a0a10 	.word	0x0a0a0a10
 8000b9c:	0808080a 	.word	0x0808080a
 8000ba0:	0808      	.short	0x0808
 8000ba2:	2001      	movs	r0, #1
}
 8000ba4:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000ba6:	2005      	movs	r0, #5
        break;
 8000ba8:	e7fc      	b.n	8000ba4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8000baa:	4b05      	ldr	r3, [pc, #20]	; (8000bc0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000bac:	4a05      	ldr	r2, [pc, #20]	; (8000bc4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000bae:	4806      	ldr	r0, [pc, #24]	; (8000bc8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8000bb0:	2165      	movs	r1, #101	; 0x65
 8000bb2:	f026 fc75 	bl	80274a0 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000bb6:	2000      	movs	r0, #0
 8000bb8:	e7f4      	b.n	8000ba4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000bba:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000bbc:	e7f2      	b.n	8000ba4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000bbe:	bf00      	nop
 8000bc0:	08028990 	.word	0x08028990
 8000bc4:	080289ab 	.word	0x080289ab
 8000bc8:	080289f5 	.word	0x080289f5

08000bcc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000bcc:	b508      	push	{r3, lr}
    switch (format)
 8000bce:	290a      	cmp	r1, #10
 8000bd0:	d809      	bhi.n	8000be6 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8000bd2:	e8df f001 	tbb	[pc, r1]
 8000bd6:	0610      	.short	0x0610
 8000bd8:	0808080e 	.word	0x0808080e
 8000bdc:	06060608 	.word	0x06060608
 8000be0:	06          	.byte	0x06
 8000be1:	00          	.byte	0x00
 8000be2:	2001      	movs	r0, #1
}
 8000be4:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000be6:	4b05      	ldr	r3, [pc, #20]	; (8000bfc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8000be8:	4a05      	ldr	r2, [pc, #20]	; (8000c00 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000bea:	4806      	ldr	r0, [pc, #24]	; (8000c04 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000bec:	2186      	movs	r1, #134	; 0x86
 8000bee:	f026 fc57 	bl	80274a0 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000bf2:	2000      	movs	r0, #0
 8000bf4:	e7f6      	b.n	8000be4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000bf6:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000bf8:	e7f4      	b.n	8000be4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000bfa:	bf00      	nop
 8000bfc:	08028990 	.word	0x08028990
 8000c00:	08028a6d 	.word	0x08028a6d
 8000c04:	080289f5 	.word	0x080289f5

08000c08 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000c08:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c0c:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8000c10:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c12:	4641      	mov	r1, r8
{
 8000c14:	4607      	mov	r7, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c16:	f7ff ffb9 	bl	8000b8c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c1a:	f894 901e 	ldrb.w	r9, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c1e:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c20:	4649      	mov	r1, r9
 8000c22:	4638      	mov	r0, r7
 8000c24:	f7ff ffb2 	bl	8000b8c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c28:	4649      	mov	r1, r9
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c2a:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c2c:	4638      	mov	r0, r7
 8000c2e:	f7ff ffcd 	bl	8000bcc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c32:	8aa1      	ldrh	r1, [r4, #20]
 8000c34:	8b62      	ldrh	r2, [r4, #26]
 8000c36:	4b43      	ldr	r3, [pc, #268]	; (8000d44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000c38:	1a52      	subs	r2, r2, r1
 8000c3a:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c3c:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000c3e:	8b22      	ldrh	r2, [r4, #24]
 8000c40:	1a52      	subs	r2, r2, r1
 8000c42:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c44:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c46:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c48:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000c4c:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c4e:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000c50:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c52:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000c54:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000c56:	6827      	ldr	r7, [r4, #0]
 8000c58:	2f80      	cmp	r7, #128	; 0x80
 8000c5a:	d028      	beq.n	8000cae <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa6>
 8000c5c:	7f22      	ldrb	r2, [r4, #28]
 8000c5e:	d80f      	bhi.n	8000c80 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x78>
 8000c60:	2f20      	cmp	r7, #32
 8000c62:	d065      	beq.n	8000d30 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000c64:	2f40      	cmp	r7, #64	; 0x40
 8000c66:	d063      	beq.n	8000d30 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000c68:	2f04      	cmp	r7, #4
 8000c6a:	d01a      	beq.n	8000ca2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c6c:	4b35      	ldr	r3, [pc, #212]	; (8000d44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000c6e:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000c72:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000c76:	45c8      	cmp	r8, r9
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c78:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000c7a:	d05f      	beq.n	8000d3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000c7c:	4a32      	ldr	r2, [pc, #200]	; (8000d48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000c7e:	e044      	b.n	8000d0a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x102>
    switch (blitOp.operation)
 8000c80:	f5b7 7f80 	cmp.w	r7, #256	; 0x100
 8000c84:	d004      	beq.n	8000c90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x88>
 8000c86:	f5b7 7f00 	cmp.w	r7, #512	; 0x200
 8000c8a:	d1ef      	bne.n	8000c6c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x64>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c8c:	492f      	ldr	r1, [pc, #188]	; (8000d4c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8000c8e:	e000      	b.n	8000c92 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8a>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c90:	492f      	ldr	r1, [pc, #188]	; (8000d50 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c92:	ea41 6202 	orr.w	r2, r1, r2, lsl #24
 8000c96:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000c98:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000c9a:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000c9c:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c9e:	6158      	str	r0, [r3, #20]
 8000ca0:	e032      	b.n	8000d08 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ca2:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8000ca6:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000caa:	61da      	str	r2, [r3, #28]
 8000cac:	e7f6      	b.n	8000c9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000cae:	68a7      	ldr	r7, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000cb0:	1d3a      	adds	r2, r7, #4
 8000cb2:	62da      	str	r2, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000cb4:	7f21      	ldrb	r1, [r4, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000cb6:	783a      	ldrb	r2, [r7, #0]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000cb8:	ea45 6501 	orr.w	r5, r5, r1, lsl #24
 8000cbc:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
 8000cc0:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000cc2:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000cc4:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000cc6:	b142      	cbz	r2, 8000cda <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd2>
 8000cc8:	2a01      	cmp	r2, #1
 8000cca:	d021      	beq.n	8000d10 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x108>
                assert(0 && "Unsupported format");
 8000ccc:	4b21      	ldr	r3, [pc, #132]	; (8000d54 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 8000cce:	4a22      	ldr	r2, [pc, #136]	; (8000d58 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
 8000cd0:	4822      	ldr	r0, [pc, #136]	; (8000d5c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
 8000cd2:	f44f 7188 	mov.w	r1, #272	; 0x110
 8000cd6:	f026 fbe3 	bl	80274a0 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000cda:	69da      	ldr	r2, [r3, #28]
 8000cdc:	8879      	ldrh	r1, [r7, #2]
 8000cde:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000ce2:	3901      	subs	r1, #1
 8000ce4:	f022 0210 	bic.w	r2, r2, #16
 8000ce8:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000cec:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000cee:	2101      	movs	r1, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000cf0:	4b14      	ldr	r3, [pc, #80]	; (8000d44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000cf2:	69da      	ldr	r2, [r3, #28]
 8000cf4:	f042 0220 	orr.w	r2, r2, #32
 8000cf8:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000cfa:	69da      	ldr	r2, [r3, #28]
 8000cfc:	0692      	lsls	r2, r2, #26
 8000cfe:	d4fc      	bmi.n	8000cfa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf2>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000d00:	2210      	movs	r2, #16
 8000d02:	609a      	str	r2, [r3, #8]
            if (blend)
 8000d04:	2900      	cmp	r1, #0
 8000d06:	d0b9      	beq.n	8000c7c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x74>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000d08:	4a15      	ldr	r2, [pc, #84]	; (8000d60 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x158>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000d0a:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000d0c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000d10:	69da      	ldr	r2, [r3, #28]
 8000d12:	8878      	ldrh	r0, [r7, #2]
 8000d14:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000d18:	3801      	subs	r0, #1
 8000d1a:	f022 0210 	bic.w	r2, r2, #16
 8000d1e:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
                if (blitOp.alpha == 255)
 8000d22:	39ff      	subs	r1, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000d24:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 8000d28:	bf18      	it	ne
 8000d2a:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000d2c:	61da      	str	r2, [r3, #28]
                break;
 8000d2e:	e7df      	b.n	8000cf0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000d30:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8000d34:	4b03      	ldr	r3, [pc, #12]	; (8000d44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000d36:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000d3a:	e7b6      	b.n	8000caa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000d3c:	f240 2201 	movw	r2, #513	; 0x201
 8000d40:	e7e3      	b.n	8000d0a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x102>
 8000d42:	bf00      	nop
 8000d44:	4002b000 	.word	0x4002b000
 8000d48:	00010201 	.word	0x00010201
 8000d4c:	00020009 	.word	0x00020009
 8000d50:	0002000a 	.word	0x0002000a
 8000d54:	08028ab8 	.word	0x08028ab8
 8000d58:	08028ad2 	.word	0x08028ad2
 8000d5c:	080289f5 	.word	0x080289f5
 8000d60:	00020201 	.word	0x00020201

08000d64 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000d64:	b538      	push	{r3, r4, r5, lr}
 8000d66:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000d68:	7f89      	ldrb	r1, [r1, #30]
 8000d6a:	f7ff ff2f 	bl	8000bcc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000d6e:	8aa5      	ldrh	r5, [r4, #20]
 8000d70:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000d72:	4b16      	ldr	r3, [pc, #88]	; (8000dcc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d74:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000d76:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000d78:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 8000d7c:	645a      	str	r2, [r3, #68]	; 0x44

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d7e:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d80:	63d9      	str	r1, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d82:	1b52      	subs	r2, r2, r5
 8000d84:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000d86:	6825      	ldr	r5, [r4, #0]
 8000d88:	2d08      	cmp	r5, #8
 8000d8a:	d10e      	bne.n	8000daa <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d8c:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d8e:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000d90:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d92:	7f20      	ldrb	r0, [r4, #28]
 8000d94:	4a0e      	ldr	r2, [pc, #56]	; (8000dd0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000d96:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000d9a:	61da      	str	r2, [r3, #28]
 8000d9c:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000d9e:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000da0:	4a0c      	ldr	r2, [pc, #48]	; (8000dd4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000da2:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000da4:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000da6:	601a      	str	r2, [r3, #0]
    }
}
 8000da8:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000daa:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000dac:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000dae:	611a      	str	r2, [r3, #16]
 8000db0:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000db2:	0a0a      	lsrs	r2, r1, #8
 8000db4:	0948      	lsrs	r0, r1, #5
 8000db6:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8000dba:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8000dbe:	4302      	orrs	r2, r0
 8000dc0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000dc4:	430a      	orrs	r2, r1
 8000dc6:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000dc8:	4a03      	ldr	r2, [pc, #12]	; (8000dd8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000dca:	e7ec      	b.n	8000da6 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000dcc:	4002b000 	.word	0x4002b000
 8000dd0:	00010009 	.word	0x00010009
 8000dd4:	00020201 	.word	0x00020201
 8000dd8:	00030201 	.word	0x00030201

08000ddc <_ZN8touchgfx5paint8tearDownEv>:
* @brief Waits until previous DMA drawing operation has finished
*/
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000ddc:	4b03      	ldr	r3, [pc, #12]	; (8000dec <_ZN8touchgfx5paint8tearDownEv+0x10>)
 8000dde:	681a      	ldr	r2, [r3, #0]
 8000de0:	07d2      	lsls	r2, r2, #31
 8000de2:	d4fc      	bmi.n	8000dde <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000de4:	2223      	movs	r2, #35	; 0x23
 8000de6:	609a      	str	r2, [r3, #8]
}
 8000de8:	4770      	bx	lr
 8000dea:	bf00      	nop
 8000dec:	4002b000 	.word	0x4002b000

08000df0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
*
* @brief Renders Canvas Widget chunks using DMA.
* This functions will not generate an interrupt, and will not affect the DMA queue.
*/
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8000df0:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000df2:	4c0f      	ldr	r4, [pc, #60]	; (8000e30 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8000df4:	6825      	ldr	r5, [r4, #0]
 8000df6:	07ed      	lsls	r5, r5, #31
 8000df8:	d4fc      	bmi.n	8000df4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000dfa:	2523      	movs	r5, #35	; 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000dfc:	0409      	lsls	r1, r1, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000dfe:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000e00:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000e04:	2502      	movs	r5, #2

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
 8000e06:	2bff      	cmp	r3, #255	; 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000e08:	6365      	str	r5, [r4, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000e0a:	6461      	str	r1, [r4, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000e0c:	63e0      	str	r0, [r4, #60]	; 0x3c
    if (alpha < 0xFF)
 8000e0e:	d00a      	beq.n	8000e26 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000e10:	4908      	ldr	r1, [pc, #32]	; (8000e34 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000e12:	6265      	str	r5, [r4, #36]	; 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000e14:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8000e18:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000e1a:	4b07      	ldr	r3, [pc, #28]	; (8000e38 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
        WRITE_REG(DMA2D->FGCOLR, color);
 8000e1c:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8000e1e:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8000e20:	60e0      	str	r0, [r4, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000e22:	6023      	str	r3, [r4, #0]
    }
}
 8000e24:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000e26:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
 8000e28:	9b03      	ldr	r3, [sp, #12]
 8000e2a:	63a3      	str	r3, [r4, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000e2c:	4b03      	ldr	r3, [pc, #12]	; (8000e3c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 8000e2e:	e7f8      	b.n	8000e22 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 8000e30:	4002b000 	.word	0x4002b000
 8000e34:	00010009 	.word	0x00010009
 8000e38:	00020001 	.word	0x00020001
 8000e3c:	00030001 	.word	0x00030001

08000e40 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000e40:	2001      	movs	r0, #1
 8000e42:	4770      	bx	lr

08000e44 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000e44:	2038      	movs	r0, #56	; 0x38
 8000e46:	4770      	bx	lr

08000e48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000e48:	2338      	movs	r3, #56	; 0x38
 8000e4a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e4e:	3008      	adds	r0, #8
 8000e50:	4770      	bx	lr

08000e52 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000e52:	2338      	movs	r3, #56	; 0x38
 8000e54:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e58:	3008      	adds	r0, #8
 8000e5a:	4770      	bx	lr

08000e5c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000e5c:	2001      	movs	r0, #1
 8000e5e:	4770      	bx	lr

08000e60 <_ZN8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000e60:	f241 30e4 	movw	r0, #5092	; 0x13e4
 8000e64:	4770      	bx	lr

08000e66 <_ZN8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e66:	f241 33e4 	movw	r3, #5092	; 0x13e4
 8000e6a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e6e:	3008      	adds	r0, #8
 8000e70:	4770      	bx	lr

08000e72 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e72:	f241 33e4 	movw	r3, #5092	; 0x13e4
 8000e76:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e7a:	3008      	adds	r0, #8
 8000e7c:	4770      	bx	lr

08000e7e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000e7e:	2001      	movs	r0, #1
 8000e80:	4770      	bx	lr

08000e82 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000e82:	2010      	movs	r0, #16
 8000e84:	4770      	bx	lr

08000e86 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e86:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000e8a:	3008      	adds	r0, #8
 8000e8c:	4770      	bx	lr

08000e8e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e8e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000e92:	3008      	adds	r0, #8
 8000e94:	4770      	bx	lr

08000e96 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMain_MenuScreenNoTransition();
 8000e96:	4608      	mov	r0, r1
 8000e98:	f002 b854 	b.w	8002f44 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>

08000e9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000e9c:	b510      	push	{r4, lr}
 8000e9e:	4b03      	ldr	r3, [pc, #12]	; (8000eac <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8000ea0:	6003      	str	r3, [r0, #0]
 8000ea2:	4604      	mov	r4, r0
 8000ea4:	f00d fb33 	bl	800e50e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000ea8:	4620      	mov	r0, r4
 8000eaa:	bd10      	pop	{r4, pc}
 8000eac:	08028bd0 	.word	0x08028bd0

08000eb0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8000eb0:	b510      	push	{r4, lr}
 8000eb2:	4604      	mov	r4, r0
 8000eb4:	f7ff fff2 	bl	8000e9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000eb8:	4620      	mov	r0, r4
 8000eba:	2140      	movs	r1, #64	; 0x40
 8000ebc:	f025 fcff 	bl	80268be <_ZdlPvj>
 8000ec0:	4620      	mov	r0, r4
 8000ec2:	bd10      	pop	{r4, pc}

08000ec4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000ec4:	b510      	push	{r4, lr}
 8000ec6:	4b03      	ldr	r3, [pc, #12]	; (8000ed4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000ec8:	6003      	str	r3, [r0, #0]
 8000eca:	4604      	mov	r4, r0
 8000ecc:	f00d fb1f 	bl	800e50e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000ed0:	4620      	mov	r0, r4
 8000ed2:	bd10      	pop	{r4, pc}
 8000ed4:	08028b9c 	.word	0x08028b9c

08000ed8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000ed8:	b510      	push	{r4, lr}
 8000eda:	4604      	mov	r4, r0
 8000edc:	f7ff fff2 	bl	8000ec4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000ee0:	4620      	mov	r0, r4
 8000ee2:	f241 31ec 	movw	r1, #5100	; 0x13ec
 8000ee6:	f025 fcea 	bl	80268be <_ZdlPvj>
 8000eea:	4620      	mov	r0, r4
 8000eec:	bd10      	pop	{r4, pc}
	...

08000ef0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000ef0:	b510      	push	{r4, lr}
 8000ef2:	4b03      	ldr	r3, [pc, #12]	; (8000f00 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000ef4:	6003      	str	r3, [r0, #0]
 8000ef6:	4604      	mov	r4, r0
 8000ef8:	f00d fb09 	bl	800e50e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000efc:	4620      	mov	r0, r4
 8000efe:	bd10      	pop	{r4, pc}
 8000f00:	08028b68 	.word	0x08028b68

08000f04 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000f04:	b510      	push	{r4, lr}
 8000f06:	4604      	mov	r4, r0
 8000f08:	f7ff fff2 	bl	8000ef0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000f0c:	4620      	mov	r0, r4
 8000f0e:	2118      	movs	r1, #24
 8000f10:	f025 fcd5 	bl	80268be <_ZdlPvj>
 8000f14:	4620      	mov	r0, r4
 8000f16:	bd10      	pop	{r4, pc}

08000f18 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000f18:	b510      	push	{r4, lr}
 8000f1a:	4b09      	ldr	r3, [pc, #36]	; (8000f40 <_ZN12FrontendHeapD1Ev+0x28>)
 8000f1c:	6003      	str	r3, [r0, #0]
 8000f1e:	4604      	mov	r4, r0
 8000f20:	f500 50a0 	add.w	r0, r0, #5120	; 0x1400
 8000f24:	3018      	adds	r0, #24
 8000f26:	f7ff ffb9 	bl	8000e9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000f2a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000f2e:	f7ff ffc9 	bl	8000ec4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000f32:	f104 0014 	add.w	r0, r4, #20
 8000f36:	f7ff ffdb 	bl	8000ef0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000f3a:	4620      	mov	r0, r4
 8000f3c:	bd10      	pop	{r4, pc}
 8000f3e:	bf00      	nop
 8000f40:	08028c04 	.word	0x08028c04

08000f44 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000f44:	b508      	push	{r3, lr}
 8000f46:	4802      	ldr	r0, [pc, #8]	; (8000f50 <__tcf_0+0xc>)
 8000f48:	f7ff ffe6 	bl	8000f18 <_ZN12FrontendHeapD1Ev>
 8000f4c:	bd08      	pop	{r3, pc}
 8000f4e:	bf00      	nop
 8000f50:	200001b0 	.word	0x200001b0

08000f54 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000f54:	b510      	push	{r4, lr}
 8000f56:	4604      	mov	r4, r0
 8000f58:	f7ff ffde 	bl	8000f18 <_ZN12FrontendHeapD1Ev>
 8000f5c:	4620      	mov	r0, r4
 8000f5e:	f241 51bc 	movw	r1, #5564	; 0x15bc
 8000f62:	f025 fcac 	bl	80268be <_ZdlPvj>
 8000f66:	4620      	mov	r0, r4
 8000f68:	bd10      	pop	{r4, pc}
	...

08000f6c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000f6c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000f70:	f001 f97e 	bl	8002270 <_ZN14BitmapDatabase11getInstanceEv>
 8000f74:	4605      	mov	r5, r0
 8000f76:	f001 f97f 	bl	8002278 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000f7a:	2400      	movs	r4, #0
 8000f7c:	4601      	mov	r1, r0
 8000f7e:	4623      	mov	r3, r4
 8000f80:	4628      	mov	r0, r5
 8000f82:	4622      	mov	r2, r4
 8000f84:	9400      	str	r4, [sp, #0]
 8000f86:	f016 f945 	bl	8017214 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000f8a:	4b26      	ldr	r3, [pc, #152]	; (8001024 <touchgfx_init+0xb8>)
 8000f8c:	4a26      	ldr	r2, [pc, #152]	; (8001028 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8000f8e:	4d27      	ldr	r5, [pc, #156]	; (800102c <touchgfx_init+0xc0>)
 8000f90:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000f92:	4620      	mov	r0, r4
 8000f94:	f005 ffd6 	bl	8006f44 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000f98:	4825      	ldr	r0, [pc, #148]	; (8001030 <touchgfx_init+0xc4>)
 8000f9a:	f016 f8a3 	bl	80170e4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000f9e:	682b      	ldr	r3, [r5, #0]
 8000fa0:	f3bf 8f5b 	dmb	ish
 8000fa4:	07db      	lsls	r3, r3, #31
 8000fa6:	d436      	bmi.n	8001016 <touchgfx_init+0xaa>
 8000fa8:	4628      	mov	r0, r5
 8000faa:	f025 fc8a 	bl	80268c2 <__cxa_guard_acquire>
 8000fae:	b390      	cbz	r0, 8001016 <touchgfx_init+0xaa>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8000fb0:	4c20      	ldr	r4, [pc, #128]	; (8001034 <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000fb2:	4b21      	ldr	r3, [pc, #132]	; (8001038 <touchgfx_init+0xcc>)
          screenStorage(scr),
          transitionStorage(tra),
 8000fb4:	4f21      	ldr	r7, [pc, #132]	; (800103c <touchgfx_init+0xd0>)
 8000fb6:	6023      	str	r3, [r4, #0]
          frontendApplication(app)
 8000fb8:	f504 56a3 	add.w	r6, r4, #5216	; 0x1460
        : presenterStorage(pres),
 8000fbc:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8000fc0:	f104 082c 	add.w	r8, r4, #44	; 0x2c
        : presenterStorage(pres),
 8000fc4:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8000fc6:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8000fca:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8000fcc:	6126      	str	r6, [r4, #16]
 8000fce:	f00d fa9f 	bl	800e510 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000fd2:	4b1b      	ldr	r3, [pc, #108]	; (8001040 <touchgfx_init+0xd4>)
 8000fd4:	6163      	str	r3, [r4, #20]
 8000fd6:	4640      	mov	r0, r8
 8000fd8:	f00d fa9a 	bl	800e510 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000fdc:	4b19      	ldr	r3, [pc, #100]	; (8001044 <touchgfx_init+0xd8>)
 8000fde:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000fe0:	4638      	mov	r0, r7
 8000fe2:	f00d fa95 	bl	800e510 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000fe6:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8000fea:	4a17      	ldr	r2, [pc, #92]	; (8001048 <touchgfx_init+0xdc>)
 8000fec:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
 8000ff0:	f503 608b 	add.w	r0, r3, #1112	; 0x458
 8000ff4:	f006 fb12 	bl	800761c <_ZN5ModelC1Ev>
 8000ff8:	4622      	mov	r2, r4
 8000ffa:	f1a6 0108 	sub.w	r1, r6, #8
 8000ffe:	4630      	mov	r0, r6
 8001000:	f006 f858 	bl	80070b4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8001004:	4630      	mov	r0, r6
 8001006:	f001 ff9d 	bl	8002f44 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>
        static FrontendHeap instance;
 800100a:	4810      	ldr	r0, [pc, #64]	; (800104c <touchgfx_init+0xe0>)
 800100c:	f026 fa66 	bl	80274dc <atexit>
 8001010:	4628      	mov	r0, r5
 8001012:	f025 fc62 	bl	80268da <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8001016:	480e      	ldr	r0, [pc, #56]	; (8001050 <touchgfx_init+0xe4>)
}
 8001018:	b002      	add	sp, #8
 800101a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 800101e:	f7ff bc2b 	b.w	8000878 <_ZN11TouchGFXHAL10initializeEv>
 8001022:	bf00      	nop
 8001024:	20013820 	.word	0x20013820
 8001028:	2000258c 	.word	0x2000258c
 800102c:	200001ac 	.word	0x200001ac
 8001030:	20000008 	.word	0x20000008
 8001034:	200001b0 	.word	0x200001b0
 8001038:	08028c04 	.word	0x08028c04
 800103c:	200015c8 	.word	0x200015c8
 8001040:	08028b68 	.word	0x08028b68
 8001044:	08028b9c 	.word	0x08028b9c
 8001048:	08028bd0 	.word	0x08028bd0
 800104c:	08000f45 	.word	0x08000f45
 8001050:	20002510 	.word	0x20002510

08001054 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8001054:	4770      	bx	lr
	...

08001058 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001058:	4801      	ldr	r0, [pc, #4]	; (8001060 <touchgfx_taskEntry+0x8>)
 800105a:	f7ff bc1b 	b.w	8000894 <_ZN11TouchGFXHAL9taskEntryEv>
 800105e:	bf00      	nop
 8001060:	20002510 	.word	0x20002510

08001064 <_GLOBAL__sub_I_touchgfx_init>:
}
 8001064:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8001066:	4e22      	ldr	r6, [pc, #136]	; (80010f0 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8001068:	4c22      	ldr	r4, [pc, #136]	; (80010f4 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 800106a:	4d23      	ldr	r5, [pc, #140]	; (80010f8 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 800106c:	4b23      	ldr	r3, [pc, #140]	; (80010fc <_GLOBAL__sub_I_touchgfx_init+0x98>)
 800106e:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001070:	4630      	mov	r0, r6
 8001072:	f7ff fd71 	bl	8000b58 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8001076:	4628      	mov	r0, r5
 8001078:	f01a fb98 	bl	801b7ac <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 800107c:	4b20      	ldr	r3, [pc, #128]	; (8001100 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800107e:	4821      	ldr	r0, [pc, #132]	; (8001104 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 8001080:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8001082:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8001084:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 8001088:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 800108c:	491e      	ldr	r1, [pc, #120]	; (8001108 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 800108e:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 8001090:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8001094:	491d      	ldr	r1, [pc, #116]	; (800110c <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8001096:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 8001098:	491d      	ldr	r1, [pc, #116]	; (8001110 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 800109a:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 800109e:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80010a0:	21f0      	movs	r1, #240	; 0xf0
 80010a2:	8001      	strh	r1, [r0, #0]
 80010a4:	481b      	ldr	r0, [pc, #108]	; (8001114 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 80010a6:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80010a8:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80010aa:	481b      	ldr	r0, [pc, #108]	; (8001118 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 80010ac:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80010b0:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 80010b4:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80010b8:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80010bc:	e9c3 2208 	strd	r2, r2, [r3, #32]
 80010c0:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 80010c4:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 80010c8:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 80010cc:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 80010d0:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 80010d4:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 80010d6:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80010da:	8001      	strh	r1, [r0, #0]
 80010dc:	480f      	ldr	r0, [pc, #60]	; (800111c <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 80010de:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 80010e0:	490f      	ldr	r1, [pc, #60]	; (8001120 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 80010e2:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80010e4:	2201      	movs	r2, #1
 80010e6:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80010ea:	4a0e      	ldr	r2, [pc, #56]	; (8001124 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 80010ec:	601a      	str	r2, [r3, #0]
}
 80010ee:	bd70      	pop	{r4, r5, r6, pc}
 80010f0:	20001770 	.word	0x20001770
 80010f4:	2000176c 	.word	0x2000176c
 80010f8:	20002590 	.word	0x20002590
 80010fc:	08028600 	.word	0x08028600
 8001100:	20002510 	.word	0x20002510
 8001104:	200137b0 	.word	0x200137b0
 8001108:	01000001 	.word	0x01000001
 800110c:	01010000 	.word	0x01010000
 8001110:	200137bc 	.word	0x200137bc
 8001114:	200137b6 	.word	0x200137b6
 8001118:	200137b2 	.word	0x200137b2
 800111c:	200137b8 	.word	0x200137b8
 8001120:	200137b4 	.word	0x200137b4
 8001124:	0802878c 	.word	0x0802878c

08001128 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001128:	4801      	ldr	r0, [pc, #4]	; (8001130 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 800112a:	f7ff bcf1 	b.w	8000b10 <_ZN8STM32DMAD1Ev>
 800112e:	bf00      	nop
 8001130:	20001770 	.word	0x20001770

08001134 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8001134:	2000      	movs	r0, #0
 8001136:	4770      	bx	lr

08001138 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8001138:	8081      	strh	r1, [r0, #4]
    }
 800113a:	4770      	bx	lr

0800113c <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 800113c:	80c1      	strh	r1, [r0, #6]
    }
 800113e:	4770      	bx	lr

08001140 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8001140:	8101      	strh	r1, [r0, #8]
    }
 8001142:	4770      	bx	lr

08001144 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8001144:	8141      	strh	r1, [r0, #10]
    }
 8001146:	4770      	bx	lr

08001148 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8001148:	4770      	bx	lr

0800114a <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 800114a:	4770      	bx	lr

0800114c <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 800114c:	4770      	bx	lr

0800114e <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 800114e:	4770      	bx	lr

08001150 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8001150:	4770      	bx	lr

08001152 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8001152:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8001154:	88c4      	ldrh	r4, [r0, #6]
 8001156:	6803      	ldr	r3, [r0, #0]
 8001158:	1b12      	subs	r2, r2, r4
 800115a:	8884      	ldrh	r4, [r0, #4]
 800115c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800115e:	1b09      	subs	r1, r1, r4
 8001160:	b212      	sxth	r2, r2
    }
 8001162:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8001166:	b209      	sxth	r1, r1
 8001168:	4718      	bx	r3

0800116a <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800116a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800116e:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8001170:	f04f 33ff 	mov.w	r3, #4294967295
 8001174:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8001176:	6813      	ldr	r3, [r2, #0]
 8001178:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800117a:	6010      	str	r0, [r2, #0]
    }
 800117c:	4770      	bx	lr

0800117e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 800117e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001182:	b11a      	cbz	r2, 800118c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8001184:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8001188:	b102      	cbz	r2, 800118c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 800118a:	6018      	str	r0, [r3, #0]
        }
    }
 800118c:	4770      	bx	lr

0800118e <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 800118e:	2000      	movs	r0, #0
 8001190:	4770      	bx	lr

08001192 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8001192:	888b      	ldrh	r3, [r1, #4]
 8001194:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8001196:	2001      	movs	r0, #1
 8001198:	4770      	bx	lr

0800119a <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 800119a:	4770      	bx	lr

0800119c <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800119c:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 80011a0:	4770      	bx	lr

080011a2 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 80011a2:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 80011a6:	4770      	bx	lr

080011a8 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 80011a8:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80011aa:	2200      	movs	r2, #0
        return rect.width;
 80011ac:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 80011b0:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80011b4:	8002      	strh	r2, [r0, #0]
 80011b6:	8042      	strh	r2, [r0, #2]
 80011b8:	8084      	strh	r4, [r0, #4]
 80011ba:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 80011bc:	bd10      	pop	{r4, pc}

080011be <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 80011be:	2200      	movs	r2, #0
 80011c0:	8002      	strh	r2, [r0, #0]
 80011c2:	8042      	strh	r2, [r0, #2]
 80011c4:	8082      	strh	r2, [r0, #4]
 80011c6:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80011c8:	4770      	bx	lr
	...

080011cc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80011cc:	4b03      	ldr	r3, [pc, #12]	; (80011dc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 80011ce:	2290      	movs	r2, #144	; 0x90
 80011d0:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 80011d4:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 80011d8:	4770      	bx	lr
 80011da:	bf00      	nop
 80011dc:	e000e100 	.word	0xe000e100

080011e0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80011e0:	4a09      	ldr	r2, [pc, #36]	; (8001208 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 80011e2:	490a      	ldr	r1, [pc, #40]	; (800120c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 80011e4:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80011e6:	480a      	ldr	r0, [pc, #40]	; (8001210 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80011e8:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80011ec:	3b01      	subs	r3, #1
 80011ee:	b29b      	uxth	r3, r3
 80011f0:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80011f2:	6911      	ldr	r1, [r2, #16]
 80011f4:	f3c1 010a 	ubfx	r1, r1, #0, #11
 80011f8:	3901      	subs	r1, #1
 80011fa:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 80011fc:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 80011fe:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001200:	f043 0301 	orr.w	r3, r3, #1
 8001204:	6353      	str	r3, [r2, #52]	; 0x34
}
 8001206:	4770      	bx	lr
 8001208:	40016800 	.word	0x40016800
 800120c:	20002616 	.word	0x20002616
 8001210:	20002614 	.word	0x20002614

08001214 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001214:	4b01      	ldr	r3, [pc, #4]	; (800121c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8001216:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 800121a:	4770      	bx	lr
 800121c:	40016800 	.word	0x40016800

08001220 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001220:	4b02      	ldr	r3, [pc, #8]	; (800122c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001222:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001224:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001228:	625a      	str	r2, [r3, #36]	; 0x24
}
 800122a:	4770      	bx	lr
 800122c:	40016800 	.word	0x40016800

08001230 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001230:	b570      	push	{r4, r5, r6, lr}
 8001232:	4604      	mov	r4, r0
    HAL::initialize();
 8001234:	f00d fe37 	bl	800eea6 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8001238:	6823      	ldr	r3, [r4, #0]
 800123a:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 800123c:	f012 fde0 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
 8001240:	4601      	mov	r1, r0
 8001242:	4620      	mov	r0, r4
 8001244:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001246:	6823      	ldr	r3, [r4, #0]
 8001248:	4a05      	ldr	r2, [pc, #20]	; (8001260 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800124a:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800124e:	4620      	mov	r0, r4
 8001250:	46ac      	mov	ip, r5
 8001252:	2300      	movs	r3, #0
}
 8001254:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001258:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 800125c:	4760      	bx	ip
 800125e:	bf00      	nop
 8001260:	d004b000 	.word	0xd004b000

08001264 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8001264:	f00d be06 	b.w	800ee74 <_ZN8touchgfx3HAL10beginFrameEv>

08001268 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8001268:	f00d be10 	b.w	800ee8c <_ZN8touchgfx3HAL8endFrameEv>

0800126c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 800126c:	f00d bdcc 	b.w	800ee08 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001270 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001270:	f00d bf2d 	b.w	800f0ce <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08001274 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8001274:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001278:	b112      	cbz	r2, 8001280 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 800127a:	6803      	ldr	r3, [r0, #0]
 800127c:	695b      	ldr	r3, [r3, #20]
 800127e:	4718      	bx	r3
    }
 8001280:	4770      	bx	lr
	...

08001284 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001284:	4b03      	ldr	r3, [pc, #12]	; (8001294 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 8001286:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800128a:	609a      	str	r2, [r3, #8]
 800128c:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001290:	609a      	str	r2, [r3, #8]
}
 8001292:	4770      	bx	lr
 8001294:	e000e100 	.word	0xe000e100

08001298 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001298:	4b08      	ldr	r3, [pc, #32]	; (80012bc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 800129a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800129e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80012a2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80012a6:	f3bf 8f6f 	isb	sy
 80012aa:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80012ae:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80012b2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80012b6:	f3bf 8f6f 	isb	sy
}
 80012ba:	4770      	bx	lr
 80012bc:	e000e100 	.word	0xe000e100

080012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 80012c0:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 80012c2:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80012c4:	4e12      	ldr	r6, [pc, #72]	; (8001310 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 80012c6:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 80012c8:	4b12      	ldr	r3, [pc, #72]	; (8001314 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 80012ca:	6003      	str	r3, [r0, #0]
 80012cc:	6833      	ldr	r3, [r6, #0]
 80012ce:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 80012d2:	4605      	mov	r5, r0
 80012d4:	b10a      	cbz	r2, 80012da <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 80012d6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80012d8:	b900      	cbnz	r0, 80012dc <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 80012da:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 80012dc:	6803      	ldr	r3, [r0, #0]
 80012de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80012e0:	4798      	blx	r3
        return auxiliaryLCD;
 80012e2:	6833      	ldr	r3, [r6, #0]
 80012e4:	fab0 f480 	clz	r4, r0
 80012e8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80012ea:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 80012ec:	b130      	cbz	r0, 80012fc <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 80012ee:	6803      	ldr	r3, [r0, #0]
 80012f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80012f2:	4798      	blx	r3
 80012f4:	2800      	cmp	r0, #0
 80012f6:	bf08      	it	eq
 80012f8:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 80012fc:	b92c      	cbnz	r4, 800130a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 80012fe:	4b06      	ldr	r3, [pc, #24]	; (8001318 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8001300:	4a06      	ldr	r2, [pc, #24]	; (800131c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8001302:	4807      	ldr	r0, [pc, #28]	; (8001320 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8001304:	212c      	movs	r1, #44	; 0x2c
 8001306:	f026 f8cb 	bl	80274a0 <__assert_func>
    }
 800130a:	4628      	mov	r0, r5
 800130c:	bd70      	pop	{r4, r5, r6, pc}
 800130e:	bf00      	nop
 8001310:	200137bc 	.word	0x200137bc
 8001314:	08028d14 	.word	0x08028d14
 8001318:	08028c10 	.word	0x08028c10
 800131c:	08028c6e 	.word	0x08028c6e
 8001320:	08028ca7 	.word	0x08028ca7

08001324 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001324:	b510      	push	{r4, lr}
        return instance;
 8001326:	4c14      	ldr	r4, [pc, #80]	; (8001378 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001328:	6823      	ldr	r3, [r4, #0]
 800132a:	b323      	cbz	r3, 8001376 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 800132c:	4b13      	ldr	r3, [pc, #76]	; (800137c <HAL_LTDC_LineEventCallback+0x58>)
 800132e:	4a14      	ldr	r2, [pc, #80]	; (8001380 <HAL_LTDC_LineEventCallback+0x5c>)
 8001330:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001332:	8811      	ldrh	r1, [r2, #0]
 8001334:	428b      	cmp	r3, r1
 8001336:	d113      	bne.n	8001360 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001338:	4b12      	ldr	r3, [pc, #72]	; (8001384 <HAL_LTDC_LineEventCallback+0x60>)
 800133a:	8819      	ldrh	r1, [r3, #0]
 800133c:	f008 fdfe 	bl	8009f3c <HAL_LTDC_ProgramLineEvent>
 8001340:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8001342:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 8001346:	3301      	adds	r3, #1
 8001348:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 800134c:	f7ff fb8e 	bl	8000a6c <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001350:	6820      	ldr	r0, [r4, #0]
 8001352:	f00e fae7 	bl	800f924 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001356:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 800135a:	2000      	movs	r0, #0
 800135c:	f7ff ba06 	b.w	800076c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001360:	f008 fdec 	bl	8009f3c <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001364:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8001366:	6803      	ldr	r3, [r0, #0]
 8001368:	6a1b      	ldr	r3, [r3, #32]
 800136a:	4798      	blx	r3
    }
 800136c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001370:	2000      	movs	r0, #0
 8001372:	f7ff ba13 	b.w	800079c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001376:	bd10      	pop	{r4, pc}
 8001378:	200137bc 	.word	0x200137bc
 800137c:	40016800 	.word	0x40016800
 8001380:	20002616 	.word	0x20002616
 8001384:	20002614 	.word	0x20002614

08001388 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001388:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 800138a:	2064      	movs	r0, #100	; 0x64
 800138c:	f00a fb30 	bl	800b9f0 <osDelay>
  for(;;)
 8001390:	e7fb      	b.n	800138a <StartDefaultTask+0x2>
 8001392:	bf00      	nop

08001394 <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 8001394:	b580      	push	{r7, lr}
 8001396:	4c10      	ldr	r4, [pc, #64]	; (80013d8 <StartTimeoutTask+0x44>)
 8001398:	f8df 8048 	ldr.w	r8, [pc, #72]	; 80013e4 <StartTimeoutTask+0x50>
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 800139c:	4f0f      	ldr	r7, [pc, #60]	; (80013dc <StartTimeoutTask+0x48>)
	  if(sleep_timeout_value > 60 && sleep_timeout_value < 0)
		  sleep_timeout_value = 60;


	  // Toggle onboard LED as heartbeat visual feedback
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 800139e:	4e10      	ldr	r6, [pc, #64]	; (80013e0 <StartTimeoutTask+0x4c>)
	  sleep_timeout_value--;
 80013a0:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80013a2:	2300      	movs	r3, #0
 80013a4:	461a      	mov	r2, r3
 80013a6:	4621      	mov	r1, r4
	  sleep_timeout_value--;
 80013a8:	1e45      	subs	r5, r0, #1
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80013aa:	f8d8 0000 	ldr.w	r0, [r8]
	  sleep_timeout_value--;
 80013ae:	6025      	str	r5, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80013b0:	f00a fc1a 	bl	800bbe8 <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 80013b4:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 80013b6:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80013b8:	4638      	mov	r0, r7
 80013ba:	2120      	movs	r1, #32
	  if(sleep_timeout_value == 0)
 80013bc:	b912      	cbnz	r2, 80013c4 <StartTimeoutTask+0x30>
		  sleep_timeout_value = 60;
 80013be:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80013c0:	f006 ffa0 	bl	8008304 <HAL_GPIO_WritePin>
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 80013c4:	4630      	mov	r0, r6
 80013c6:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80013ca:	f006 ff9f 	bl	800830c <HAL_GPIO_TogglePin>

	  osDelay(1000);
 80013ce:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80013d2:	f00a fb0d 	bl	800b9f0 <osDelay>
	  sleep_timeout_value--;
 80013d6:	e7e3      	b.n	80013a0 <StartTimeoutTask+0xc>
 80013d8:	20000014 	.word	0x20000014
 80013dc:	40021000 	.word	0x40021000
 80013e0:	40021800 	.word	0x40021800
 80013e4:	20002620 	.word	0x20002620

080013e8 <SystemClock_Config>:
{
 80013e8:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80013ea:	2400      	movs	r4, #0
{
 80013ec:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80013ee:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 80013f2:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80013f6:	e9cd 4403 	strd	r4, r4, [sp, #12]
 80013fa:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 80013fe:	4a1e      	ldr	r2, [pc, #120]	; (8001478 <SystemClock_Config+0x90>)
 8001400:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001402:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001404:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001406:	4b1d      	ldr	r3, [pc, #116]	; (800147c <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8001408:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 800140c:	6411      	str	r1, [r2, #64]	; 0x40
 800140e:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8001410:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8001414:	9201      	str	r2, [sp, #4]
 8001416:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001418:	9402      	str	r4, [sp, #8]
 800141a:	681a      	ldr	r2, [r3, #0]
 800141c:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001420:	601a      	str	r2, [r3, #0]
 8001422:	681b      	ldr	r3, [r3, #0]
 8001424:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001428:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 800142a:	2201      	movs	r2, #1
 800142c:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001430:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001434:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001436:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001438:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800143a:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 336;
 800143e:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001442:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001446:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001448:	2202      	movs	r2, #2
 800144a:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800144c:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800144e:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001452:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001454:	f008 fd94 	bl	8009f80 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001458:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800145a:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 800145e:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001462:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001466:	a803      	add	r0, sp, #12
 8001468:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 800146a:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800146e:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001470:	f008 ff9e 	bl	800a3b0 <HAL_RCC_ClockConfig>
}
 8001474:	b015      	add	sp, #84	; 0x54
 8001476:	bd30      	pop	{r4, r5, pc}
 8001478:	40023800 	.word	0x40023800
 800147c:	40007000 	.word	0x40007000

08001480 <main>:
{
 8001480:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001484:	2400      	movs	r4, #0
{
 8001486:	b09d      	sub	sp, #116	; 0x74
  HAL_Init();
 8001488:	f006 fc16 	bl	8007cb8 <HAL_Init>
  SystemClock_Config();
 800148c:	f7ff ffac 	bl	80013e8 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001490:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001494:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001498:	4bc1      	ldr	r3, [pc, #772]	; (80017a0 <main+0x320>)
 800149a:	9400      	str	r4, [sp, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800149c:	9413      	str	r4, [sp, #76]	; 0x4c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800149e:	6b19      	ldr	r1, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80014a0:	48c0      	ldr	r0, [pc, #768]	; (80017a4 <main+0x324>)
  hi2c3.Instance = I2C3;
 80014a2:	4dc1      	ldr	r5, [pc, #772]	; (80017a8 <main+0x328>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014a4:	f041 0110 	orr.w	r1, r1, #16
 80014a8:	6319      	str	r1, [r3, #48]	; 0x30
 80014aa:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014ac:	f001 0110 	and.w	r1, r1, #16
 80014b0:	9100      	str	r1, [sp, #0]
 80014b2:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80014b4:	9401      	str	r4, [sp, #4]
 80014b6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014b8:	f041 0120 	orr.w	r1, r1, #32
 80014bc:	6319      	str	r1, [r3, #48]	; 0x30
 80014be:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014c0:	f001 0120 	and.w	r1, r1, #32
 80014c4:	9101      	str	r1, [sp, #4]
 80014c6:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80014c8:	9402      	str	r4, [sp, #8]
 80014ca:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014cc:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 80014d0:	6319      	str	r1, [r3, #48]	; 0x30
 80014d2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014d4:	f001 0180 	and.w	r1, r1, #128	; 0x80
 80014d8:	9102      	str	r1, [sp, #8]
 80014da:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80014dc:	9403      	str	r4, [sp, #12]
 80014de:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014e0:	f041 0104 	orr.w	r1, r1, #4
 80014e4:	6319      	str	r1, [r3, #48]	; 0x30
 80014e6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014e8:	f001 0104 	and.w	r1, r1, #4
 80014ec:	9103      	str	r1, [sp, #12]
 80014ee:	9903      	ldr	r1, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80014f0:	9404      	str	r4, [sp, #16]
 80014f2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014f4:	f041 0101 	orr.w	r1, r1, #1
 80014f8:	6319      	str	r1, [r3, #48]	; 0x30
 80014fa:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014fc:	f001 0101 	and.w	r1, r1, #1
 8001500:	9104      	str	r1, [sp, #16]
 8001502:	9904      	ldr	r1, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001504:	9405      	str	r4, [sp, #20]
 8001506:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001508:	f041 0102 	orr.w	r1, r1, #2
 800150c:	6319      	str	r1, [r3, #48]	; 0x30
 800150e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001510:	f001 0102 	and.w	r1, r1, #2
 8001514:	9105      	str	r1, [sp, #20]
 8001516:	9905      	ldr	r1, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001518:	9406      	str	r4, [sp, #24]
 800151a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800151c:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 8001520:	6319      	str	r1, [r3, #48]	; 0x30
 8001522:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001524:	f001 0140 	and.w	r1, r1, #64	; 0x40
 8001528:	9106      	str	r1, [sp, #24]
 800152a:	9906      	ldr	r1, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800152c:	9407      	str	r4, [sp, #28]
 800152e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001530:	f041 0108 	orr.w	r1, r1, #8
 8001534:	6319      	str	r1, [r3, #48]	; 0x30
 8001536:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001538:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 800153c:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800153e:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001540:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001542:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001544:	f006 fede 	bl	8008304 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 8001548:	4896      	ldr	r0, [pc, #600]	; (80017a4 <main+0x324>)
 800154a:	2120      	movs	r1, #32
 800154c:	2201      	movs	r2, #1
 800154e:	f006 fed9 	bl	8008304 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001552:	4896      	ldr	r0, [pc, #600]	; (80017ac <main+0x32c>)
 8001554:	4622      	mov	r2, r4
 8001556:	2104      	movs	r1, #4
 8001558:	f006 fed4 	bl	8008304 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 800155c:	4894      	ldr	r0, [pc, #592]	; (80017b0 <main+0x330>)
 800155e:	4622      	mov	r2, r4
 8001560:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 8001564:	f006 fece 	bl	8008304 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 8001568:	2201      	movs	r2, #1
 800156a:	4892      	ldr	r0, [pc, #584]	; (80017b4 <main+0x334>)
 800156c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001570:	f006 fec8 	bl	8008304 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001574:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001576:	f04f 0903 	mov.w	r9, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 800157a:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800157c:	4889      	ldr	r0, [pc, #548]	; (80017a4 <main+0x324>)
 800157e:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8001580:	f04f 0808 	mov.w	r8, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001584:	e9cd 360f 	strd	r3, r6, [sp, #60]	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001588:	e9cd 4911 	strd	r4, r9, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800158c:	f006 fd76 	bl	800807c <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001590:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001594:	4883      	ldr	r0, [pc, #524]	; (80017a4 <main+0x324>)
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8001596:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 800159a:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 800159c:	9310      	str	r3, [sp, #64]	; 0x40
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800159e:	9411      	str	r4, [sp, #68]	; 0x44
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 80015a0:	f006 fd6c 	bl	800807c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 80015a4:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 80015a6:	487f      	ldr	r0, [pc, #508]	; (80017a4 <main+0x324>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 80015a8:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 80015aa:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015ac:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 80015ae:	f04f 0a04 	mov.w	sl, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015b2:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015b6:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 80015b8:	f006 fd60 	bl	800807c <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015bc:	487b      	ldr	r0, [pc, #492]	; (80017ac <main+0x32c>)
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 80015be:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015c2:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015c4:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015c8:	9712      	str	r7, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015ca:	f006 fd57 	bl	800807c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80015ce:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015d2:	4877      	ldr	r0, [pc, #476]	; (80017b0 <main+0x330>)
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80015d4:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015d6:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015d8:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015dc:	9712      	str	r7, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015de:	f006 fd4d 	bl	800807c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 80015e2:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80015e6:	4874      	ldr	r0, [pc, #464]	; (80017b8 <main+0x338>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 80015e8:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80015ea:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 80015ec:	230f      	movs	r3, #15
 80015ee:	9313      	str	r3, [sp, #76]	; 0x4c
  GPIO_InitStruct.Pin = DEVICE_ON_Pin;
 80015f0:	f44f 5b00 	mov.w	fp, #8192	; 0x2000
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015f4:	e9cd 7410 	strd	r7, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015f8:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80015fa:	f006 fd3f 	bl	800807c <HAL_GPIO_Init>
  HAL_GPIO_Init(DEVICE_ON_GPIO_Port, &GPIO_InitStruct);
 80015fe:	486d      	ldr	r0, [pc, #436]	; (80017b4 <main+0x334>)
  GPIO_InitStruct.Pin = DEVICE_ON_Pin;
 8001600:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_GPIO_Port, &GPIO_InitStruct);
 8001604:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001606:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800160a:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(DEVICE_ON_GPIO_Port, &GPIO_InitStruct);
 800160c:	f006 fd36 	bl	800807c <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 8001610:	4622      	mov	r2, r4
 8001612:	2105      	movs	r1, #5
 8001614:	2009      	movs	r0, #9
 8001616:	f006 fb9f 	bl	8007d58 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 800161a:	2009      	movs	r0, #9
 800161c:	f006 fbda 	bl	8007dd4 <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 8001620:	4866      	ldr	r0, [pc, #408]	; (80017bc <main+0x33c>)
 8001622:	4b67      	ldr	r3, [pc, #412]	; (80017c0 <main+0x340>)
 8001624:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001626:	f006 fbe3 	bl	8007df0 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 800162a:	4966      	ldr	r1, [pc, #408]	; (80017c4 <main+0x344>)
 800162c:	4b66      	ldr	r3, [pc, #408]	; (80017c8 <main+0x348>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800162e:	4628      	mov	r0, r5
  hi2c3.Init.ClockSpeed = 100000;
 8001630:	e9c5 1300 	strd	r1, r3, [r5]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001634:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8001638:	612b      	str	r3, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 800163a:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.OwnAddress2 = 0;
 800163e:	e9c5 4405 	strd	r4, r4, [r5, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001642:	e9c5 4407 	strd	r4, r4, [r5, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001646:	f007 f8c3 	bl	80087d0 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 800164a:	2110      	movs	r1, #16
 800164c:	4628      	mov	r0, r5
 800164e:	f008 fa8b 	bl	8009b68 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001652:	4621      	mov	r1, r4
 8001654:	4628      	mov	r0, r5
 8001656:	f008 faa7 	bl	8009ba8 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800165a:	f8df c184 	ldr.w	ip, [pc, #388]	; 80017e0 <main+0x360>
  hspi5.Instance = SPI5;
 800165e:	485b      	ldr	r0, [pc, #364]	; (80017cc <main+0x34c>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001660:	4d5b      	ldr	r5, [pc, #364]	; (80017d0 <main+0x350>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001662:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001664:	f44f 7382 	mov.w	r3, #260	; 0x104
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001668:	f44f 7e00 	mov.w	lr, #512	; 0x200
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800166c:	e9c0 c300 	strd	ip, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001670:	2318      	movs	r3, #24
 8001672:	e9c0 e306 	strd	lr, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001676:	230a      	movs	r3, #10
 8001678:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 800167a:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 800167e:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001682:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001686:	f009 f981 	bl	800a98c <HAL_SPI_Init>
  SdramTiming.ExitSelfRefreshDelay = 7;
 800168a:	2307      	movs	r3, #7
 800168c:	9310      	str	r3, [sp, #64]	; 0x40
  SdramTiming.RowCycleDelay = 7;
 800168e:	9312      	str	r3, [sp, #72]	; 0x48
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001690:	4b50      	ldr	r3, [pc, #320]	; (80017d4 <main+0x354>)
 8001692:	602b      	str	r3, [r5, #0]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001694:	2040      	movs	r0, #64	; 0x40
 8001696:	f44f 73c0 	mov.w	r3, #384	; 0x180
 800169a:	e9c5 0305 	strd	r0, r3, [r5, #20]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 800169e:	f8c5 b028 	str.w	fp, [r5, #40]	; 0x28
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80016a2:	f44f 6300 	mov.w	r3, #2048	; 0x800
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 80016a6:	f04f 0b10 	mov.w	fp, #16
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80016aa:	a90f      	add	r1, sp, #60	; 0x3c
 80016ac:	4628      	mov	r0, r5
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80016ae:	622b      	str	r3, [r5, #32]
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 80016b0:	e9c5 6401 	strd	r6, r4, [r5, #4]
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80016b4:	f8c5 a00c 	str.w	sl, [r5, #12]
  SdramTiming.RPDelay = 2;
 80016b8:	e9cd 9713 	strd	r9, r7, [sp, #76]	; 0x4c
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80016bc:	61ec      	str	r4, [r5, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 80016be:	626c      	str	r4, [r5, #36]	; 0x24
  SdramTiming.SelfRefreshTime = 4;
 80016c0:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 80016c4:	f8c5 b010 	str.w	fp, [r5, #16]
  SdramTiming.LoadToActiveDelay = 2;
 80016c8:	970f      	str	r7, [sp, #60]	; 0x3c
  SdramTiming.RCDDelay = 2;
 80016ca:	9715      	str	r7, [sp, #84]	; 0x54
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80016cc:	f009 f86c 	bl	800a7a8 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016d0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016d4:	a90b      	add	r1, sp, #44	; 0x2c
 80016d6:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016d8:	e9cd 680b 	strd	r6, r8, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 80016dc:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
 __IO uint32_t tmpmrd =0;
 80016e0:	9408      	str	r4, [sp, #32]
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016e2:	f009 f883 	bl	800a7ec <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 80016e6:	4630      	mov	r0, r6
 80016e8:	f006 fb12 	bl	8007d10 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016ec:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016f0:	a90b      	add	r1, sp, #44	; 0x2c
 80016f2:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016f4:	e9cd 780b 	strd	r7, r8, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 80016f8:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016fc:	f009 f876 	bl	800a7ec <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001700:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001704:	a90b      	add	r1, sp, #44	; 0x2c
 8001706:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001708:	e9cd 980b 	strd	r9, r8, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 800170c:	e9cd a40d 	strd	sl, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001710:	f009 f86c 	bl	800a7ec <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8001714:	f44f 730c 	mov.w	r3, #560	; 0x230
 8001718:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 800171a:	9b08      	ldr	r3, [sp, #32]
 800171c:	930e      	str	r3, [sp, #56]	; 0x38
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800171e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001722:	a90b      	add	r1, sp, #44	; 0x2c
 8001724:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001726:	e9cd a80b 	strd	sl, r8, [sp, #44]	; 0x2c
  Command->AutoRefreshNumber       = 1;
 800172a:	960d      	str	r6, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800172c:	f009 f85e 	bl	800a7ec <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8001730:	4628      	mov	r0, r5
 8001732:	f240 516a 	movw	r1, #1386	; 0x56a
  hltdc.Instance = LTDC;
 8001736:	4d28      	ldr	r5, [pc, #160]	; (80017d8 <main+0x358>)
  htim1.Instance = TIM1;
 8001738:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 80017e4 <main+0x364>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 800173c:	f009 f874 	bl	800a828 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001740:	2234      	movs	r2, #52	; 0x34
 8001742:	4621      	mov	r1, r4
 8001744:	a80f      	add	r0, sp, #60	; 0x3c
 8001746:	f026 f8b0 	bl	80278aa <memset>
  hltdc.Instance = LTDC;
 800174a:	4b24      	ldr	r3, [pc, #144]	; (80017dc <main+0x35c>)
 800174c:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 9;
 800174e:	2309      	movs	r3, #9
 8001750:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8001752:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedVBP = 3;
 8001754:	f8c5 9020 	str.w	r9, [r5, #32]
  hltdc.Init.AccumulatedHBP = 29;
 8001758:	61eb      	str	r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 800175a:	f240 190d 	movw	r9, #269	; 0x10d
 800175e:	f240 1343 	movw	r3, #323	; 0x143
 8001762:	e9c5 9309 	strd	r9, r3, [r5, #36]	; 0x24
  hltdc.Init.Backcolor.Blue = 0;
 8001766:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.TotalHeigh = 327;
 8001768:	f240 1347 	movw	r3, #327	; 0x147
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 800176c:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 800176e:	f240 1a17 	movw	sl, #279	; 0x117
 8001772:	e9c5 a30b 	strd	sl, r3, [r5, #44]	; 0x2c
  hltdc.Init.VerticalSync = 1;
 8001776:	61ae      	str	r6, [r5, #24]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8001778:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 800177c:	e9c5 4403 	strd	r4, r4, [r5, #12]
  hltdc.Init.Backcolor.Red = 0;
 8001780:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001784:	f008 fa34 	bl	8009bf0 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 240;
 8001788:	23f0      	movs	r3, #240	; 0xf0
 800178a:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.ImageWidth = 240;
 800178c:	9319      	str	r3, [sp, #100]	; 0x64
  pLayerCfg.WindowY1 = 320;
 800178e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8001792:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.ImageHeight = 320;
 8001794:	931a      	str	r3, [sp, #104]	; 0x68
  pLayerCfg.Alpha = 255;
 8001796:	23ff      	movs	r3, #255	; 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001798:	f44f 6c80 	mov.w	ip, #1024	; 0x400
 800179c:	e024      	b.n	80017e8 <main+0x368>
 800179e:	bf00      	nop
 80017a0:	40023800 	.word	0x40023800
 80017a4:	40021000 	.word	0x40021000
 80017a8:	20002674 	.word	0x20002674
 80017ac:	40020800 	.word	0x40020800
 80017b0:	40020c00 	.word	0x40020c00
 80017b4:	40021800 	.word	0x40021800
 80017b8:	40020000 	.word	0x40020000
 80017bc:	2000262c 	.word	0x2000262c
 80017c0:	40023000 	.word	0x40023000
 80017c4:	40005c00 	.word	0x40005c00
 80017c8:	000186a0 	.word	0x000186a0
 80017cc:	200027a4 	.word	0x200027a4
 80017d0:	20002770 	.word	0x20002770
 80017d4:	a0000140 	.word	0xa0000140
 80017d8:	200026c8 	.word	0x200026c8
 80017dc:	40016800 	.word	0x40016800
 80017e0:	40015000 	.word	0x40015000
 80017e4:	200027fc 	.word	0x200027fc
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80017e8:	4622      	mov	r2, r4
 80017ea:	a90f      	add	r1, sp, #60	; 0x3c
 80017ec:	4628      	mov	r0, r5
  pLayerCfg.Alpha = 255;
 80017ee:	9314      	str	r3, [sp, #80]	; 0x50
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80017f0:	2305      	movs	r3, #5
 80017f2:	e9cd c316 	strd	ip, r3, [sp, #88]	; 0x58
  LcdDrv = &ili9341_drv;
 80017f6:	4d4b      	ldr	r5, [pc, #300]	; (8001924 <main+0x4a4>)
  pLayerCfg.WindowX0 = 0;
 80017f8:	940f      	str	r4, [sp, #60]	; 0x3c
  pLayerCfg.WindowY0 = 0;
 80017fa:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 80017fc:	9713      	str	r7, [sp, #76]	; 0x4c
  pLayerCfg.Alpha0 = 0;
 80017fe:	9415      	str	r4, [sp, #84]	; 0x54
  pLayerCfg.FBStartAdress = 0;
 8001800:	9418      	str	r4, [sp, #96]	; 0x60
  pLayerCfg.Backcolor.Blue = 0;
 8001802:	f8ad 406c 	strh.w	r4, [sp, #108]	; 0x6c
  pLayerCfg.Backcolor.Red = 0;
 8001806:	f88d 406e 	strb.w	r4, [sp, #110]	; 0x6e
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800180a:	f008 fac7 	bl	8009d9c <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 800180e:	4b46      	ldr	r3, [pc, #280]	; (8001928 <main+0x4a8>)
 8001810:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 8001812:	681b      	ldr	r3, [r3, #0]
 8001814:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001816:	682b      	ldr	r3, [r5, #0]
  hdma2d.Instance = DMA2D;
 8001818:	4d44      	ldr	r5, [pc, #272]	; (800192c <main+0x4ac>)
  LcdDrv->DisplayOff();
 800181a:	68db      	ldr	r3, [r3, #12]
 800181c:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 800181e:	4b44      	ldr	r3, [pc, #272]	; (8001930 <main+0x4b0>)
 8001820:	602b      	str	r3, [r5, #0]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 8001822:	e9c5 470a 	strd	r4, r7, [r5, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001826:	e9c5 440c 	strd	r4, r4, [r5, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800182a:	4628      	mov	r0, r5
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
 800182c:	e9c5 4701 	strd	r4, r7, [r5, #4]
  hdma2d.Init.OutputOffset = 0;
 8001830:	60ec      	str	r4, [r5, #12]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001832:	f006 fb07 	bl	8007e44 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001836:	4631      	mov	r1, r6
 8001838:	4628      	mov	r0, r5
 800183a:	f006 fbc9 	bl	8007fd0 <HAL_DMA2D_ConfigLayer>
  htim1.Init.Period = 65535;
 800183e:	f64f 76ff 	movw	r6, #65535	; 0xffff
  htim1.Instance = TIM1;
 8001842:	4b3c      	ldr	r3, [pc, #240]	; (8001934 <main+0x4b4>)
  htim3.Instance = TIM3;
 8001844:	4d3c      	ldr	r5, [pc, #240]	; (8001938 <main+0x4b8>)
  htim1.Instance = TIM1;
 8001846:	f8c8 3000 	str.w	r3, [r8]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 800184a:	4640      	mov	r0, r8
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 800184c:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001850:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001854:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001858:	e9c8 4401 	strd	r4, r4, [r8, #4]
  htim1.Init.RepetitionCounter = 0;
 800185c:	e9c8 4404 	strd	r4, r4, [r8, #16]
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8001860:	9413      	str	r4, [sp, #76]	; 0x4c
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001862:	f8c8 4018 	str.w	r4, [r8, #24]
  htim1.Init.Period = 65535;
 8001866:	f8c8 600c 	str.w	r6, [r8, #12]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 800186a:	f009 fc7f 	bl	800b16c <HAL_TIM_Base_Init>
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 800186e:	a90f      	add	r1, sp, #60	; 0x3c
 8001870:	4640      	mov	r0, r8
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 8001872:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 8001876:	f009 fdf3 	bl	800b460 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 800187a:	a90b      	add	r1, sp, #44	; 0x2c
 800187c:	4640      	mov	r0, r8
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800187e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8001882:	f009 ff2b 	bl	800b6dc <HAL_TIMEx_MasterConfigSynchronization>
  htim3.Instance = TIM3;
 8001886:	4b2d      	ldr	r3, [pc, #180]	; (800193c <main+0x4bc>)
 8001888:	602b      	str	r3, [r5, #0]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 800188a:	4628      	mov	r0, r5
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 800188c:	e9c5 4401 	strd	r4, r4, [r5, #4]
  htim3.Init.Period = 65535;
 8001890:	60ee      	str	r6, [r5, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001892:	612c      	str	r4, [r5, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001894:	61ac      	str	r4, [r5, #24]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001896:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800189a:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 800189e:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 80018a2:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 80018a6:	9413      	str	r4, [sp, #76]	; 0x4c
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80018a8:	9409      	str	r4, [sp, #36]	; 0x24
 80018aa:	940a      	str	r4, [sp, #40]	; 0x28
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 80018ac:	f009 fc5e 	bl	800b16c <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80018b0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80018b4:	a90b      	add	r1, sp, #44	; 0x2c
 80018b6:	4628      	mov	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80018b8:	930b      	str	r3, [sp, #44]	; 0x2c
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80018ba:	f009 fd21 	bl	800b300 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 80018be:	a90f      	add	r1, sp, #60	; 0x3c
 80018c0:	4628      	mov	r0, r5
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 80018c2:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 80018c6:	f009 fdcb 	bl	800b460 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80018ca:	a909      	add	r1, sp, #36	; 0x24
 80018cc:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80018ce:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80018d2:	f009 ff03 	bl	800b6dc <HAL_TIMEx_MasterConfigSynchronization>
  MX_TouchGFX_Init();
 80018d6:	f7fe fe85 	bl	80005e4 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 80018da:	f7fe fe81 	bl	80005e0 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 80018de:	f00a f80f 	bl	800b900 <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 80018e2:	4a17      	ldr	r2, [pc, #92]	; (8001940 <main+0x4c0>)
 80018e4:	4639      	mov	r1, r7
 80018e6:	4658      	mov	r0, fp
 80018e8:	f00a f944 	bl	800bb74 <osMessageQueueNew>
 80018ec:	4b15      	ldr	r3, [pc, #84]	; (8001944 <main+0x4c4>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80018ee:	4a16      	ldr	r2, [pc, #88]	; (8001948 <main+0x4c8>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 80018f0:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80018f2:	4621      	mov	r1, r4
 80018f4:	4815      	ldr	r0, [pc, #84]	; (800194c <main+0x4cc>)
 80018f6:	f00a f82f 	bl	800b958 <osThreadNew>
 80018fa:	4b15      	ldr	r3, [pc, #84]	; (8001950 <main+0x4d0>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80018fc:	4a15      	ldr	r2, [pc, #84]	; (8001954 <main+0x4d4>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80018fe:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001900:	4621      	mov	r1, r4
 8001902:	4815      	ldr	r0, [pc, #84]	; (8001958 <main+0x4d8>)
 8001904:	f00a f828 	bl	800b958 <osThreadNew>
 8001908:	4b14      	ldr	r3, [pc, #80]	; (800195c <main+0x4dc>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 800190a:	4a15      	ldr	r2, [pc, #84]	; (8001960 <main+0x4e0>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800190c:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 800190e:	4621      	mov	r1, r4
 8001910:	4814      	ldr	r0, [pc, #80]	; (8001964 <main+0x4e4>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001912:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001914:	f00a f820 	bl	800b958 <osThreadNew>
 8001918:	4b13      	ldr	r3, [pc, #76]	; (8001968 <main+0x4e8>)
 800191a:	6018      	str	r0, [r3, #0]
  osKernelStart();
 800191c:	f00a f802 	bl	800b924 <osKernelStart>
  while (1)
 8001920:	e7fe      	b.n	8001920 <main+0x4a0>
 8001922:	bf00      	nop
 8001924:	2000261c 	.word	0x2000261c
 8001928:	20000018 	.word	0x20000018
 800192c:	20002634 	.word	0x20002634
 8001930:	4002b000 	.word	0x4002b000
 8001934:	40010000 	.word	0x40010000
 8001938:	20002844 	.word	0x20002844
 800193c:	40000400 	.word	0x40000400
 8001940:	08028d84 	.word	0x08028d84
 8001944:	20002620 	.word	0x20002620
 8001948:	08028dc0 	.word	0x08028dc0
 800194c:	08001389 	.word	0x08001389
 8001950:	20002628 	.word	0x20002628
 8001954:	08028d60 	.word	0x08028d60
 8001958:	080005f5 	.word	0x080005f5
 800195c:	20002618 	.word	0x20002618
 8001960:	08028d9c 	.word	0x08028d9c
 8001964:	08001395 	.word	0x08001395
 8001968:	20002624 	.word	0x20002624

0800196c <IOE_Init>:
 800196c:	4770      	bx	lr
 800196e:	bf00      	nop

08001970 <IOE_ITConfig>:
 8001970:	4770      	bx	lr
 8001972:	bf00      	nop

08001974 <IOE_Write>:
{
 8001974:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001976:	4c09      	ldr	r4, [pc, #36]	; (800199c <IOE_Write+0x28>)
{
 8001978:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 800197a:	6824      	ldr	r4, [r4, #0]
 800197c:	9402      	str	r4, [sp, #8]
{
 800197e:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001980:	2301      	movs	r3, #1
 8001982:	f88d 4017 	strb.w	r4, [sp, #23]
 8001986:	f10d 0417 	add.w	r4, sp, #23
 800198a:	460a      	mov	r2, r1
 800198c:	9301      	str	r3, [sp, #4]
 800198e:	4601      	mov	r1, r0
 8001990:	9400      	str	r4, [sp, #0]
 8001992:	4803      	ldr	r0, [pc, #12]	; (80019a0 <IOE_Write+0x2c>)
 8001994:	f006 ffe4 	bl	8008960 <HAL_I2C_Mem_Write>
}
 8001998:	b006      	add	sp, #24
 800199a:	bd10      	pop	{r4, pc}
 800199c:	2000000c 	.word	0x2000000c
 80019a0:	20002674 	.word	0x20002674

080019a4 <IOE_Read>:
{
 80019a4:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019a6:	4b0b      	ldr	r3, [pc, #44]	; (80019d4 <IOE_Read+0x30>)
{
 80019a8:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019aa:	681b      	ldr	r3, [r3, #0]
 80019ac:	9302      	str	r3, [sp, #8]
{
 80019ae:	4684      	mov	ip, r0
 80019b0:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019b2:	2301      	movs	r3, #1
 80019b4:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 80019b8:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019ba:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 80019be:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019c2:	4661      	mov	r1, ip
 80019c4:	4804      	ldr	r0, [pc, #16]	; (80019d8 <IOE_Read+0x34>)
 80019c6:	f007 f8bd 	bl	8008b44 <HAL_I2C_Mem_Read>
}
 80019ca:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80019ce:	b007      	add	sp, #28
 80019d0:	f85d fb04 	ldr.w	pc, [sp], #4
 80019d4:	2000000c 	.word	0x2000000c
 80019d8:	20002674 	.word	0x20002674

080019dc <IOE_ReadMultiple>:
{
 80019dc:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 80019de:	4c09      	ldr	r4, [pc, #36]	; (8001a04 <IOE_ReadMultiple+0x28>)
{
 80019e0:	b084      	sub	sp, #16
 80019e2:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 80019e4:	6820      	ldr	r0, [r4, #0]
 80019e6:	9002      	str	r0, [sp, #8]
 80019e8:	e9cd 2300 	strd	r2, r3, [sp]
 80019ec:	4806      	ldr	r0, [pc, #24]	; (8001a08 <IOE_ReadMultiple+0x2c>)
 80019ee:	460a      	mov	r2, r1
 80019f0:	2301      	movs	r3, #1
 80019f2:	4661      	mov	r1, ip
 80019f4:	f007 f8a6 	bl	8008b44 <HAL_I2C_Mem_Read>
}
 80019f8:	3800      	subs	r0, #0
 80019fa:	bf18      	it	ne
 80019fc:	2001      	movne	r0, #1
 80019fe:	b004      	add	sp, #16
 8001a00:	bd10      	pop	{r4, pc}
 8001a02:	bf00      	nop
 8001a04:	2000000c 	.word	0x2000000c
 8001a08:	20002674 	.word	0x20002674

08001a0c <IOE_Delay>:
 8001a0c:	f006 b980 	b.w	8007d10 <HAL_Delay>

08001a10 <LCD_IO_Init>:
{
 8001a10:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a12:	4806      	ldr	r0, [pc, #24]	; (8001a2c <LCD_IO_Init+0x1c>)
 8001a14:	2200      	movs	r2, #0
 8001a16:	2104      	movs	r1, #4
 8001a18:	f006 fc74 	bl	8008304 <HAL_GPIO_WritePin>
}
 8001a1c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a20:	4802      	ldr	r0, [pc, #8]	; (8001a2c <LCD_IO_Init+0x1c>)
 8001a22:	2201      	movs	r2, #1
 8001a24:	2104      	movs	r1, #4
 8001a26:	f006 bc6d 	b.w	8008304 <HAL_GPIO_WritePin>
 8001a2a:	bf00      	nop
 8001a2c:	40020800 	.word	0x40020800

08001a30 <LCD_IO_WriteData>:
{
 8001a30:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a32:	4d10      	ldr	r5, [pc, #64]	; (8001a74 <LCD_IO_WriteData+0x44>)
{
 8001a34:	b083      	sub	sp, #12
 8001a36:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001a38:	2201      	movs	r2, #1
 8001a3a:	480f      	ldr	r0, [pc, #60]	; (8001a78 <LCD_IO_WriteData+0x48>)
 8001a3c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a40:	f006 fc60 	bl	8008304 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a44:	4628      	mov	r0, r5
 8001a46:	2200      	movs	r2, #0
 8001a48:	2104      	movs	r1, #4
 8001a4a:	f006 fc5b 	bl	8008304 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a4e:	4b0b      	ldr	r3, [pc, #44]	; (8001a7c <LCD_IO_WriteData+0x4c>)
 8001a50:	480b      	ldr	r0, [pc, #44]	; (8001a80 <LCD_IO_WriteData+0x50>)
 8001a52:	681b      	ldr	r3, [r3, #0]
 8001a54:	f8ad 4006 	strh.w	r4, [sp, #6]
 8001a58:	f10d 0106 	add.w	r1, sp, #6
 8001a5c:	2201      	movs	r2, #1
 8001a5e:	f008 fff7 	bl	800aa50 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a62:	2201      	movs	r2, #1
 8001a64:	2104      	movs	r1, #4
 8001a66:	4628      	mov	r0, r5
}
 8001a68:	b003      	add	sp, #12
 8001a6a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a6e:	f006 bc49 	b.w	8008304 <HAL_GPIO_WritePin>
 8001a72:	bf00      	nop
 8001a74:	40020800 	.word	0x40020800
 8001a78:	40020c00 	.word	0x40020c00
 8001a7c:	20000010 	.word	0x20000010
 8001a80:	200027a4 	.word	0x200027a4

08001a84 <LCD_IO_WriteReg>:
{
 8001a84:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a86:	4d10      	ldr	r5, [pc, #64]	; (8001ac8 <LCD_IO_WriteReg+0x44>)
{
 8001a88:	b083      	sub	sp, #12
 8001a8a:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a8c:	2200      	movs	r2, #0
 8001a8e:	480f      	ldr	r0, [pc, #60]	; (8001acc <LCD_IO_WriteReg+0x48>)
 8001a90:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a94:	f006 fc36 	bl	8008304 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a98:	4628      	mov	r0, r5
 8001a9a:	2200      	movs	r2, #0
 8001a9c:	2104      	movs	r1, #4
 8001a9e:	f006 fc31 	bl	8008304 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001aa2:	4b0b      	ldr	r3, [pc, #44]	; (8001ad0 <LCD_IO_WriteReg+0x4c>)
 8001aa4:	480b      	ldr	r0, [pc, #44]	; (8001ad4 <LCD_IO_WriteReg+0x50>)
 8001aa6:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 8001aa8:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001aac:	f10d 0106 	add.w	r1, sp, #6
 8001ab0:	2201      	movs	r2, #1
 8001ab2:	f008 ffcd 	bl	800aa50 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001ab6:	2201      	movs	r2, #1
 8001ab8:	2104      	movs	r1, #4
 8001aba:	4628      	mov	r0, r5
}
 8001abc:	b003      	add	sp, #12
 8001abe:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001ac2:	f006 bc1f 	b.w	8008304 <HAL_GPIO_WritePin>
 8001ac6:	bf00      	nop
 8001ac8:	40020800 	.word	0x40020800
 8001acc:	40020c00 	.word	0x40020c00
 8001ad0:	20000010 	.word	0x20000010
 8001ad4:	200027a4 	.word	0x200027a4

08001ad8 <LCD_IO_ReadData>:
{
 8001ad8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001adc:	4e19      	ldr	r6, [pc, #100]	; (8001b44 <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001ade:	4f1a      	ldr	r7, [pc, #104]	; (8001b48 <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001ae0:	f8df 9068 	ldr.w	r9, [pc, #104]	; 8001b4c <LCD_IO_ReadData+0x74>
 8001ae4:	f8df 8068 	ldr.w	r8, [pc, #104]	; 8001b50 <LCD_IO_ReadData+0x78>
{
 8001ae8:	b083      	sub	sp, #12
 8001aea:	460c      	mov	r4, r1
 8001aec:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001aee:	2200      	movs	r2, #0
 8001af0:	4630      	mov	r0, r6
 8001af2:	2104      	movs	r1, #4
 8001af4:	f006 fc06 	bl	8008304 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001af8:	4638      	mov	r0, r7
 8001afa:	2200      	movs	r2, #0
 8001afc:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001b00:	f006 fc00 	bl	8008304 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001b04:	f8d9 3000 	ldr.w	r3, [r9]
 8001b08:	f8ad 5004 	strh.w	r5, [sp, #4]
 8001b0c:	a901      	add	r1, sp, #4
 8001b0e:	2201      	movs	r2, #1
 8001b10:	4640      	mov	r0, r8
 8001b12:	f008 ff9d 	bl	800aa50 <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001b16:	f8d9 3000 	ldr.w	r3, [r9]
 8001b1a:	4622      	mov	r2, r4
 8001b1c:	a901      	add	r1, sp, #4
 8001b1e:	4640      	mov	r0, r8
 8001b20:	f009 fa3e 	bl	800afa0 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001b24:	4638      	mov	r0, r7
 8001b26:	2201      	movs	r2, #1
 8001b28:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001b2c:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001b2e:	f006 fbe9 	bl	8008304 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001b32:	4630      	mov	r0, r6
 8001b34:	2201      	movs	r2, #1
 8001b36:	2104      	movs	r1, #4
 8001b38:	f006 fbe4 	bl	8008304 <HAL_GPIO_WritePin>
}
 8001b3c:	4620      	mov	r0, r4
 8001b3e:	b003      	add	sp, #12
 8001b40:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001b44:	40020800 	.word	0x40020800
 8001b48:	40020c00 	.word	0x40020c00
 8001b4c:	20000010 	.word	0x20000010
 8001b50:	200027a4 	.word	0x200027a4

08001b54 <LCD_Delay>:
  HAL_Delay(Delay);
 8001b54:	f006 b8dc 	b.w	8007d10 <HAL_Delay>

08001b58 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001b58:	4b03      	ldr	r3, [pc, #12]	; (8001b68 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001b5a:	6802      	ldr	r2, [r0, #0]
 8001b5c:	429a      	cmp	r2, r3
 8001b5e:	d000      	beq.n	8001b62 <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001b60:	4770      	bx	lr
    HAL_IncTick();
 8001b62:	f006 b8c3 	b.w	8007cec <HAL_IncTick>
 8001b66:	bf00      	nop
 8001b68:	40001000 	.word	0x40001000

08001b6c <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001b6c:	4770      	bx	lr
 8001b6e:	bf00      	nop

08001b70 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001b70:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001b72:	4b0e      	ldr	r3, [pc, #56]	; (8001bac <HAL_MspInit+0x3c>)
 8001b74:	2200      	movs	r2, #0
 8001b76:	9200      	str	r2, [sp, #0]
 8001b78:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001b7a:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001b7e:	6459      	str	r1, [r3, #68]	; 0x44
 8001b80:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8001b82:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 8001b86:	9000      	str	r0, [sp, #0]
 8001b88:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001b8a:	9201      	str	r2, [sp, #4]
 8001b8c:	6c18      	ldr	r0, [r3, #64]	; 0x40
 8001b8e:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001b92:	6418      	str	r0, [r3, #64]	; 0x40
 8001b94:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001b96:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001b9a:	9301      	str	r3, [sp, #4]
 8001b9c:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001b9e:	210f      	movs	r1, #15
 8001ba0:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001ba4:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001ba6:	f006 b8d7 	b.w	8007d58 <HAL_NVIC_SetPriority>
 8001baa:	bf00      	nop
 8001bac:	40023800 	.word	0x40023800

08001bb0 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001bb0:	4b0b      	ldr	r3, [pc, #44]	; (8001be0 <HAL_CRC_MspInit+0x30>)
 8001bb2:	6802      	ldr	r2, [r0, #0]
 8001bb4:	429a      	cmp	r2, r3
 8001bb6:	d000      	beq.n	8001bba <HAL_CRC_MspInit+0xa>
 8001bb8:	4770      	bx	lr
{
 8001bba:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001bbc:	2200      	movs	r2, #0
 8001bbe:	9201      	str	r2, [sp, #4]
 8001bc0:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 8001bc4:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001bc8:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 8001bcc:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8001bd0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001bd2:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001bd6:	9301      	str	r3, [sp, #4]
 8001bd8:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001bda:	b002      	add	sp, #8
 8001bdc:	4770      	bx	lr
 8001bde:	bf00      	nop
 8001be0:	40023000 	.word	0x40023000

08001be4 <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
 8001be4:	4b0e      	ldr	r3, [pc, #56]	; (8001c20 <HAL_DMA2D_MspInit+0x3c>)
 8001be6:	6802      	ldr	r2, [r0, #0]
 8001be8:	429a      	cmp	r2, r3
 8001bea:	d000      	beq.n	8001bee <HAL_DMA2D_MspInit+0xa>
 8001bec:	4770      	bx	lr
{
 8001bee:	b500      	push	{lr}
 8001bf0:	b083      	sub	sp, #12
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001bf2:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001bf6:	2200      	movs	r2, #0
 8001bf8:	9201      	str	r2, [sp, #4]
 8001bfa:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001bfc:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001c00:	6319      	str	r1, [r3, #48]	; 0x30
 8001c02:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c04:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001c08:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001c0a:	205a      	movs	r0, #90	; 0x5a
 8001c0c:	2105      	movs	r1, #5
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001c0e:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001c10:	f006 f8a2 	bl	8007d58 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001c14:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001c16:	b003      	add	sp, #12
 8001c18:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001c1c:	f006 b8da 	b.w	8007dd4 <HAL_NVIC_EnableIRQ>
 8001c20:	4002b000 	.word	0x4002b000

08001c24 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001c24:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 8001c28:	4b2e      	ldr	r3, [pc, #184]	; (8001ce4 <HAL_I2C_MspInit+0xc0>)
 8001c2a:	6802      	ldr	r2, [r0, #0]
{
 8001c2c:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c2e:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 8001c30:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c32:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8001c36:	e9cd 4406 	strd	r4, r4, [sp, #24]
 8001c3a:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 8001c3c:	d002      	beq.n	8001c44 <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001c3e:	b00a      	add	sp, #40	; 0x28
 8001c40:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001c44:	4d28      	ldr	r5, [pc, #160]	; (8001ce8 <HAL_I2C_MspInit+0xc4>)
 8001c46:	9401      	str	r4, [sp, #4]
 8001c48:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c4a:	4828      	ldr	r0, [pc, #160]	; (8001cec <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001c4c:	f043 0304 	orr.w	r3, r3, #4
 8001c50:	632b      	str	r3, [r5, #48]	; 0x30
 8001c52:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001c54:	f003 0304 	and.w	r3, r3, #4
 8001c58:	9301      	str	r3, [sp, #4]
 8001c5a:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c5c:	9402      	str	r4, [sp, #8]
 8001c5e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001c60:	f043 0301 	orr.w	r3, r3, #1
 8001c64:	632b      	str	r3, [r5, #48]	; 0x30
 8001c66:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001c68:	f003 0301 	and.w	r3, r3, #1
 8001c6c:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001c6e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001c72:	f04f 0801 	mov.w	r8, #1
 8001c76:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001c7a:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c7c:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001c7e:	2312      	movs	r3, #18
 8001c80:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001c84:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c88:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001c8a:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c8c:	f006 f9f6 	bl	800807c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c90:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001c92:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001c96:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c98:	4815      	ldr	r0, [pc, #84]	; (8001cf0 <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001c9a:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001c9c:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001ca0:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ca4:	f006 f9ea 	bl	800807c <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001ca8:	9403      	str	r4, [sp, #12]
 8001caa:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001cac:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001cb0:	642b      	str	r3, [r5, #64]	; 0x40
 8001cb2:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001cb4:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001cb8:	4622      	mov	r2, r4
 8001cba:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001cbc:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001cbe:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001cc0:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001cc2:	f006 f849 	bl	8007d58 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 8001cc6:	2048      	movs	r0, #72	; 0x48
 8001cc8:	f006 f884 	bl	8007dd4 <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 8001ccc:	6a2b      	ldr	r3, [r5, #32]
 8001cce:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001cd2:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001cd4:	6a2b      	ldr	r3, [r5, #32]
 8001cd6:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001cda:	622b      	str	r3, [r5, #32]
}
 8001cdc:	b00a      	add	sp, #40	; 0x28
 8001cde:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8001ce2:	bf00      	nop
 8001ce4:	40005c00 	.word	0x40005c00
 8001ce8:	40023800 	.word	0x40023800
 8001cec:	40020800 	.word	0x40020800
 8001cf0:	40020000 	.word	0x40020000

08001cf4 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001cf4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001cf8:	4604      	mov	r4, r0
 8001cfa:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001cfc:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001cfe:	2230      	movs	r2, #48	; 0x30
 8001d00:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d02:	e9cd 1108 	strd	r1, r1, [sp, #32]
 8001d06:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 8001d0a:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001d0c:	f025 fdcd 	bl	80278aa <memset>
  if(hltdc->Instance==LTDC)
 8001d10:	4b67      	ldr	r3, [pc, #412]	; (8001eb0 <HAL_LTDC_MspInit+0x1bc>)
 8001d12:	6822      	ldr	r2, [r4, #0]
 8001d14:	429a      	cmp	r2, r3
 8001d16:	d002      	beq.n	8001d1e <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001d18:	b01a      	add	sp, #104	; 0x68
 8001d1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001d1e:	23c0      	movs	r3, #192	; 0xc0
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001d20:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001d22:	2204      	movs	r2, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001d24:	9312      	str	r3, [sp, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001d26:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001d28:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001d2c:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001d2e:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001d30:	9317      	str	r3, [sp, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001d32:	f008 fc0d 	bl	800a550 <HAL_RCCEx_PeriphCLKConfig>
 8001d36:	2800      	cmp	r0, #0
 8001d38:	f040 80b7 	bne.w	8001eaa <HAL_LTDC_MspInit+0x1b6>
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001d3c:	4b5d      	ldr	r3, [pc, #372]	; (8001eb4 <HAL_LTDC_MspInit+0x1c0>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d3e:	485e      	ldr	r0, [pc, #376]	; (8001eb8 <HAL_LTDC_MspInit+0x1c4>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001d40:	2400      	movs	r4, #0
 8001d42:	9401      	str	r4, [sp, #4]
 8001d44:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001d46:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001d4a:	645a      	str	r2, [r3, #68]	; 0x44
 8001d4c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001d4e:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001d52:	9201      	str	r2, [sp, #4]
 8001d54:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001d56:	9402      	str	r4, [sp, #8]
 8001d58:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d5a:	f042 0220 	orr.w	r2, r2, #32
 8001d5e:	631a      	str	r2, [r3, #48]	; 0x30
 8001d60:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d62:	f002 0220 	and.w	r2, r2, #32
 8001d66:	9202      	str	r2, [sp, #8]
 8001d68:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001d6a:	9403      	str	r4, [sp, #12]
 8001d6c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d6e:	f042 0201 	orr.w	r2, r2, #1
 8001d72:	631a      	str	r2, [r3, #48]	; 0x30
 8001d74:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d76:	f002 0201 	and.w	r2, r2, #1
 8001d7a:	9203      	str	r2, [sp, #12]
 8001d7c:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001d7e:	9404      	str	r4, [sp, #16]
 8001d80:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d82:	f042 0202 	orr.w	r2, r2, #2
 8001d86:	631a      	str	r2, [r3, #48]	; 0x30
 8001d88:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d8a:	f002 0202 	and.w	r2, r2, #2
 8001d8e:	9204      	str	r2, [sp, #16]
 8001d90:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001d92:	9405      	str	r4, [sp, #20]
 8001d94:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d96:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001d9a:	631a      	str	r2, [r3, #48]	; 0x30
 8001d9c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d9e:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001da2:	9205      	str	r2, [sp, #20]
 8001da4:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001da6:	9406      	str	r4, [sp, #24]
 8001da8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001daa:	f042 0204 	orr.w	r2, r2, #4
 8001dae:	631a      	str	r2, [r3, #48]	; 0x30
 8001db0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001db2:	f002 0204 	and.w	r2, r2, #4
 8001db6:	9206      	str	r2, [sp, #24]
 8001db8:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001dba:	9407      	str	r4, [sp, #28]
 8001dbc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dbe:	f042 0208 	orr.w	r2, r2, #8
 8001dc2:	631a      	str	r2, [r3, #48]	; 0x30
 8001dc4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001dc6:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001dca:	2600      	movs	r6, #0
 8001dcc:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001dce:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001dd0:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001dd2:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001dd4:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001dd8:	2302      	movs	r3, #2
 8001dda:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001dde:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001de2:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001de4:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001de6:	f006 f949 	bl	800807c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001dea:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001dec:	f641 0258 	movw	r2, #6232	; 0x1858
 8001df0:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001df2:	4832      	ldr	r0, [pc, #200]	; (8001ebc <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001df4:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001df6:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001dfa:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001dfe:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e02:	f006 f93b 	bl	800807c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e06:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001e08:	2203      	movs	r2, #3
 8001e0a:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e0c:	482c      	ldr	r0, [pc, #176]	; (8001ec0 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001e0e:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001e12:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e16:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e1a:	f006 f92f 	bl	800807c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e1e:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001e20:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 8001e24:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e26:	4826      	ldr	r0, [pc, #152]	; (8001ec0 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e28:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001e2a:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e2e:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e32:	f006 f923 	bl	800807c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e36:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001e38:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 8001e3c:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e3e:	4821      	ldr	r0, [pc, #132]	; (8001ec4 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e40:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001e42:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e46:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e4a:	f006 f917 	bl	800807c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e4e:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001e50:	22c0      	movs	r2, #192	; 0xc0
 8001e52:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e54:	481c      	ldr	r0, [pc, #112]	; (8001ec8 <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e56:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001e58:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e5c:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e60:	f006 f90c 	bl	800807c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e64:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001e66:	2208      	movs	r2, #8
 8001e68:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e6a:	4818      	ldr	r0, [pc, #96]	; (8001ecc <HAL_LTDC_MspInit+0x1d8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e6c:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001e6e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e72:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e76:	f006 f901 	bl	800807c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001e7a:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e7c:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001e7e:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e82:	4810      	ldr	r0, [pc, #64]	; (8001ec4 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001e84:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001e88:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e8c:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e90:	f006 f8f4 	bl	800807c <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001e94:	4622      	mov	r2, r4
 8001e96:	2105      	movs	r1, #5
 8001e98:	2058      	movs	r0, #88	; 0x58
 8001e9a:	f005 ff5d 	bl	8007d58 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001e9e:	2058      	movs	r0, #88	; 0x58
 8001ea0:	f005 ff98 	bl	8007dd4 <HAL_NVIC_EnableIRQ>
}
 8001ea4:	b01a      	add	sp, #104	; 0x68
 8001ea6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 8001eaa:	f7ff fe5f 	bl	8001b6c <Error_Handler>
 8001eae:	e745      	b.n	8001d3c <HAL_LTDC_MspInit+0x48>
 8001eb0:	40016800 	.word	0x40016800
 8001eb4:	40023800 	.word	0x40023800
 8001eb8:	40021400 	.word	0x40021400
 8001ebc:	40020000 	.word	0x40020000
 8001ec0:	40020400 	.word	0x40020400
 8001ec4:	40021800 	.word	0x40021800
 8001ec8:	40020800 	.word	0x40020800
 8001ecc:	40020c00 	.word	0x40020c00

08001ed0 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001ed0:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 8001ed2:	4a1b      	ldr	r2, [pc, #108]	; (8001f40 <HAL_SPI_MspInit+0x70>)
 8001ed4:	6801      	ldr	r1, [r0, #0]
{
 8001ed6:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ed8:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 8001eda:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001edc:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8001ee0:	e9cd 3304 	strd	r3, r3, [sp, #16]
 8001ee4:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 8001ee6:	d001      	beq.n	8001eec <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001ee8:	b008      	add	sp, #32
 8001eea:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001eec:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 8001ef0:	9300      	str	r3, [sp, #0]
 8001ef2:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001ef4:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 8001ef8:	6450      	str	r0, [r2, #68]	; 0x44
 8001efa:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001efc:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 8001f00:	9000      	str	r0, [sp, #0]
 8001f02:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001f04:	9301      	str	r3, [sp, #4]
 8001f06:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f08:	480e      	ldr	r0, [pc, #56]	; (8001f44 <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001f0a:	f043 0320 	orr.w	r3, r3, #32
 8001f0e:	6313      	str	r3, [r2, #48]	; 0x30
 8001f10:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 8001f12:	ed9f 7b09 	vldr	d7, [pc, #36]	; 8001f38 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001f16:	f003 0320 	and.w	r3, r3, #32
 8001f1a:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f1c:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001f1e:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f20:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 8001f22:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001f26:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001f2a:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f2c:	f006 f8a6 	bl	800807c <HAL_GPIO_Init>
}
 8001f30:	b008      	add	sp, #32
 8001f32:	bd10      	pop	{r4, pc}
 8001f34:	f3af 8000 	nop.w
 8001f38:	00000380 	.word	0x00000380
 8001f3c:	00000002 	.word	0x00000002
 8001f40:	40015000 	.word	0x40015000
 8001f44:	40021400 	.word	0x40021400

08001f48 <HAL_TIM_Base_MspInit>:
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
  if(htim_base->Instance==TIM1)
 8001f48:	4a12      	ldr	r2, [pc, #72]	; (8001f94 <HAL_TIM_Base_MspInit+0x4c>)
 8001f4a:	6803      	ldr	r3, [r0, #0]
 8001f4c:	4293      	cmp	r3, r2
{
 8001f4e:	b082      	sub	sp, #8
  if(htim_base->Instance==TIM1)
 8001f50:	d012      	beq.n	8001f78 <HAL_TIM_Base_MspInit+0x30>
    __HAL_RCC_TIM1_CLK_ENABLE();
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 8001f52:	4a11      	ldr	r2, [pc, #68]	; (8001f98 <HAL_TIM_Base_MspInit+0x50>)
 8001f54:	4293      	cmp	r3, r2
 8001f56:	d001      	beq.n	8001f5c <HAL_TIM_Base_MspInit+0x14>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8001f58:	b002      	add	sp, #8
 8001f5a:	4770      	bx	lr
    __HAL_RCC_TIM3_CLK_ENABLE();
 8001f5c:	4b0f      	ldr	r3, [pc, #60]	; (8001f9c <HAL_TIM_Base_MspInit+0x54>)
 8001f5e:	2200      	movs	r2, #0
 8001f60:	9201      	str	r2, [sp, #4]
 8001f62:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001f64:	f042 0202 	orr.w	r2, r2, #2
 8001f68:	641a      	str	r2, [r3, #64]	; 0x40
 8001f6a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001f6c:	f003 0302 	and.w	r3, r3, #2
 8001f70:	9301      	str	r3, [sp, #4]
 8001f72:	9b01      	ldr	r3, [sp, #4]
}
 8001f74:	b002      	add	sp, #8
 8001f76:	4770      	bx	lr
    __HAL_RCC_TIM1_CLK_ENABLE();
 8001f78:	4b08      	ldr	r3, [pc, #32]	; (8001f9c <HAL_TIM_Base_MspInit+0x54>)
 8001f7a:	2200      	movs	r2, #0
 8001f7c:	9200      	str	r2, [sp, #0]
 8001f7e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001f80:	f042 0201 	orr.w	r2, r2, #1
 8001f84:	645a      	str	r2, [r3, #68]	; 0x44
 8001f86:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001f88:	f003 0301 	and.w	r3, r3, #1
 8001f8c:	9300      	str	r3, [sp, #0]
 8001f8e:	9b00      	ldr	r3, [sp, #0]
}
 8001f90:	b002      	add	sp, #8
 8001f92:	4770      	bx	lr
 8001f94:	40010000 	.word	0x40010000
 8001f98:	40000400 	.word	0x40000400
 8001f9c:	40023800 	.word	0x40023800

08001fa0 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001fa0:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 8001fa2:	4b2b      	ldr	r3, [pc, #172]	; (8002050 <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001fa4:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 8001fa6:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001fa8:	2200      	movs	r2, #0
 8001faa:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 8001fac:	2c00      	cmp	r4, #0
 8001fae:	d14c      	bne.n	800204a <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 8001fb0:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fb2:	4a28      	ldr	r2, [pc, #160]	; (8002054 <HAL_SDRAM_MspInit+0xb4>)
 8001fb4:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 8001fb6:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fb8:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fba:	4827      	ldr	r0, [pc, #156]	; (8002058 <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fbc:	433b      	orrs	r3, r7
 8001fbe:	6393      	str	r3, [r2, #56]	; 0x38
 8001fc0:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001fc2:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001fc4:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001fc6:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001fc8:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fcc:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fce:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001fd0:	2302      	movs	r3, #2
 8001fd2:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001fd6:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fda:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fdc:	f006 f84e 	bl	800807c <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fe0:	481e      	ldr	r0, [pc, #120]	; (800205c <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 8001fe2:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fe4:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fe6:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001fe8:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001fec:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ff0:	f006 f844 	bl	800807c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001ff4:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ff8:	4819      	ldr	r0, [pc, #100]	; (8002060 <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001ffa:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ffc:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ffe:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002002:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002006:	f006 f839 	bl	800807c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 800200a:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800200e:	4815      	ldr	r0, [pc, #84]	; (8002064 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8002010:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002012:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002014:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002018:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800201c:	f006 f82e 	bl	800807c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002020:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002024:	4810      	ldr	r0, [pc, #64]	; (8002068 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002026:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002028:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800202a:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800202e:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002032:	f006 f823 	bl	800807c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002036:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002038:	480c      	ldr	r0, [pc, #48]	; (800206c <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800203a:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800203c:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800203e:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002042:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002044:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002046:	f006 f819 	bl	800807c <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 800204a:	b009      	add	sp, #36	; 0x24
 800204c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800204e:	bf00      	nop
 8002050:	2000288c 	.word	0x2000288c
 8002054:	40023800 	.word	0x40023800
 8002058:	40021400 	.word	0x40021400
 800205c:	40020800 	.word	0x40020800
 8002060:	40021800 	.word	0x40021800
 8002064:	40021000 	.word	0x40021000
 8002068:	40020c00 	.word	0x40020c00
 800206c:	40020400 	.word	0x40020400

08002070 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002070:	b570      	push	{r4, r5, r6, lr}
 8002072:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002074:	4b23      	ldr	r3, [pc, #140]	; (8002104 <HAL_InitTick+0x94>)
 8002076:	2200      	movs	r2, #0
 8002078:	9202      	str	r2, [sp, #8]
 800207a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800207c:	f042 0210 	orr.w	r2, r2, #16
 8002080:	641a      	str	r2, [r3, #64]	; 0x40
 8002082:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002084:	f003 0310 	and.w	r3, r3, #16
 8002088:	9302      	str	r3, [sp, #8]
{
 800208a:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 800208c:	a901      	add	r1, sp, #4
 800208e:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002090:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002092:	f008 fa3b 	bl	800a50c <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8002096:	9b06      	ldr	r3, [sp, #24]
 8002098:	b9d3      	cbnz	r3, 80020d0 <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 800209a:	f008 fa27 	bl	800a4ec <HAL_RCC_GetPCLK1Freq>
 800209e:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80020a0:	4a19      	ldr	r2, [pc, #100]	; (8002108 <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 80020a2:	4c1a      	ldr	r4, [pc, #104]	; (800210c <HAL_InitTick+0x9c>)
 80020a4:	491a      	ldr	r1, [pc, #104]	; (8002110 <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80020a6:	fba2 2303 	umull	r2, r3, r2, r3
 80020aa:	0c9b      	lsrs	r3, r3, #18
 80020ac:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 80020ae:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 80020b0:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 80020b4:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80020b6:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 80020ba:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80020bc:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80020be:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80020c0:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 80020c2:	f009 f853 	bl	800b16c <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 80020c6:	4606      	mov	r6, r0
 80020c8:	b130      	cbz	r0, 80020d8 <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 80020ca:	4630      	mov	r0, r6
 80020cc:	b008      	add	sp, #32
 80020ce:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 80020d0:	f008 fa0c 	bl	800a4ec <HAL_RCC_GetPCLK1Freq>
 80020d4:	0043      	lsls	r3, r0, #1
 80020d6:	e7e3      	b.n	80020a0 <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 80020d8:	4620      	mov	r0, r4
 80020da:	f009 f8d5 	bl	800b288 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 80020de:	4606      	mov	r6, r0
 80020e0:	2800      	cmp	r0, #0
 80020e2:	d1f2      	bne.n	80020ca <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 80020e4:	2036      	movs	r0, #54	; 0x36
 80020e6:	f005 fe75 	bl	8007dd4 <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80020ea:	2d0f      	cmp	r5, #15
 80020ec:	d901      	bls.n	80020f2 <HAL_InitTick+0x82>
        status = HAL_ERROR;
 80020ee:	2601      	movs	r6, #1
 80020f0:	e7eb      	b.n	80020ca <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 80020f2:	4632      	mov	r2, r6
 80020f4:	4629      	mov	r1, r5
 80020f6:	2036      	movs	r0, #54	; 0x36
 80020f8:	f005 fe2e 	bl	8007d58 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 80020fc:	4b05      	ldr	r3, [pc, #20]	; (8002114 <HAL_InitTick+0xa4>)
 80020fe:	601d      	str	r5, [r3, #0]
 8002100:	e7e3      	b.n	80020ca <HAL_InitTick+0x5a>
 8002102:	bf00      	nop
 8002104:	40023800 	.word	0x40023800
 8002108:	431bde83 	.word	0x431bde83
 800210c:	20002890 	.word	0x20002890
 8002110:	40001000 	.word	0x40001000
 8002114:	20000080 	.word	0x20000080

08002118 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8002118:	4770      	bx	lr
 800211a:	bf00      	nop

0800211c <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800211c:	e7fe      	b.n	800211c <HardFault_Handler>
 800211e:	bf00      	nop

08002120 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002120:	e7fe      	b.n	8002120 <MemManage_Handler>
 8002122:	bf00      	nop

08002124 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002124:	e7fe      	b.n	8002124 <BusFault_Handler>
 8002126:	bf00      	nop

08002128 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002128:	e7fe      	b.n	8002128 <UsageFault_Handler>
 800212a:	bf00      	nop

0800212c <DebugMon_Handler>:
 800212c:	4770      	bx	lr
 800212e:	bf00      	nop

08002130 <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 8002130:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 8002132:	20c8      	movs	r0, #200	; 0xc8
 8002134:	f005 fdec 	bl	8007d10 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8002138:	4804      	ldr	r0, [pc, #16]	; (800214c <EXTI3_IRQHandler+0x1c>)
 800213a:	2200      	movs	r2, #0
 800213c:	2120      	movs	r1, #32
 800213e:	f006 f8e1 	bl	8008304 <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 8002142:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 8002146:	2008      	movs	r0, #8
 8002148:	f006 b8ec 	b.w	8008324 <HAL_GPIO_EXTI_IRQHandler>
 800214c:	40021000 	.word	0x40021000

08002150 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002150:	4801      	ldr	r0, [pc, #4]	; (8002158 <TIM6_DAC_IRQHandler+0x8>)
 8002152:	f009 ba19 	b.w	800b588 <HAL_TIM_IRQHandler>
 8002156:	bf00      	nop
 8002158:	20002890 	.word	0x20002890

0800215c <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 800215c:	4801      	ldr	r0, [pc, #4]	; (8002164 <I2C3_EV_IRQHandler+0x8>)
 800215e:	f007 b841 	b.w	80091e4 <HAL_I2C_EV_IRQHandler>
 8002162:	bf00      	nop
 8002164:	20002674 	.word	0x20002674

08002168 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002168:	4801      	ldr	r0, [pc, #4]	; (8002170 <LTDC_IRQHandler+0x8>)
 800216a:	f007 bdb5 	b.w	8009cd8 <HAL_LTDC_IRQHandler>
 800216e:	bf00      	nop
 8002170:	200026c8 	.word	0x200026c8

08002174 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8002174:	4801      	ldr	r0, [pc, #4]	; (800217c <DMA2D_IRQHandler+0x8>)
 8002176:	f005 be97 	b.w	8007ea8 <HAL_DMA2D_IRQHandler>
 800217a:	bf00      	nop
 800217c:	20002634 	.word	0x20002634

08002180 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002180:	2001      	movs	r0, #1
 8002182:	4770      	bx	lr

08002184 <_kill>:

int _kill(int pid, int sig)
{
 8002184:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002186:	f025 fc89 	bl	8027a9c <__errno>
 800218a:	2316      	movs	r3, #22
 800218c:	6003      	str	r3, [r0, #0]
	return -1;
}
 800218e:	f04f 30ff 	mov.w	r0, #4294967295
 8002192:	bd08      	pop	{r3, pc}

08002194 <_exit>:

void _exit (int status)
{
 8002194:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002196:	f025 fc81 	bl	8027a9c <__errno>
 800219a:	2316      	movs	r3, #22
 800219c:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 800219e:	e7fe      	b.n	800219e <_exit+0xa>

080021a0 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80021a0:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80021a2:	1e16      	subs	r6, r2, #0
 80021a4:	dd07      	ble.n	80021b6 <_read+0x16>
 80021a6:	460c      	mov	r4, r1
 80021a8:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 80021aa:	f3af 8000 	nop.w
 80021ae:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80021b2:	42a5      	cmp	r5, r4
 80021b4:	d1f9      	bne.n	80021aa <_read+0xa>
	}

return len;
}
 80021b6:	4630      	mov	r0, r6
 80021b8:	bd70      	pop	{r4, r5, r6, pc}
 80021ba:	bf00      	nop

080021bc <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80021bc:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80021be:	1e16      	subs	r6, r2, #0
 80021c0:	dd07      	ble.n	80021d2 <_write+0x16>
 80021c2:	460c      	mov	r4, r1
 80021c4:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 80021c6:	f814 0b01 	ldrb.w	r0, [r4], #1
 80021ca:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80021ce:	42ac      	cmp	r4, r5
 80021d0:	d1f9      	bne.n	80021c6 <_write+0xa>
	}
	return len;
}
 80021d2:	4630      	mov	r0, r6
 80021d4:	bd70      	pop	{r4, r5, r6, pc}
 80021d6:	bf00      	nop

080021d8 <_close>:

int _close(int file)
{
	return -1;
}
 80021d8:	f04f 30ff 	mov.w	r0, #4294967295
 80021dc:	4770      	bx	lr
 80021de:	bf00      	nop

080021e0 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 80021e0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80021e4:	604b      	str	r3, [r1, #4]
	return 0;
}
 80021e6:	2000      	movs	r0, #0
 80021e8:	4770      	bx	lr
 80021ea:	bf00      	nop

080021ec <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80021ec:	2001      	movs	r0, #1
 80021ee:	4770      	bx	lr

080021f0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80021f0:	2000      	movs	r0, #0
 80021f2:	4770      	bx	lr

080021f4 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80021f4:	4a0b      	ldr	r2, [pc, #44]	; (8002224 <_sbrk+0x30>)
{
 80021f6:	b508      	push	{r3, lr}
 80021f8:	4603      	mov	r3, r0
	if (heap_end == 0)
 80021fa:	6810      	ldr	r0, [r2, #0]
 80021fc:	b128      	cbz	r0, 800220a <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 80021fe:	4403      	add	r3, r0
 8002200:	4669      	mov	r1, sp
 8002202:	428b      	cmp	r3, r1
 8002204:	d807      	bhi.n	8002216 <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 8002206:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 8002208:	bd08      	pop	{r3, pc}
		heap_end = &end;
 800220a:	4807      	ldr	r0, [pc, #28]	; (8002228 <_sbrk+0x34>)
 800220c:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 800220e:	4403      	add	r3, r0
 8002210:	4669      	mov	r1, sp
 8002212:	428b      	cmp	r3, r1
 8002214:	d9f7      	bls.n	8002206 <_sbrk+0x12>
		errno = ENOMEM;
 8002216:	f025 fc41 	bl	8027a9c <__errno>
 800221a:	230c      	movs	r3, #12
 800221c:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 800221e:	f04f 30ff 	mov.w	r0, #4294967295
}
 8002222:	bd08      	pop	{r3, pc}
 8002224:	200028d8 	.word	0x200028d8
 8002228:	200143f8 	.word	0x200143f8

0800222c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 800222c:	4770      	bx	lr

0800222e <_ZN23ApplicationFontProviderD0Ev>:
 800222e:	b510      	push	{r4, lr}
 8002230:	2104      	movs	r1, #4
 8002232:	4604      	mov	r4, r0
 8002234:	f024 fb43 	bl	80268be <_ZdlPvj>
 8002238:	4620      	mov	r0, r4
 800223a:	bd10      	pop	{r4, pc}

0800223c <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 800223c:	b508      	push	{r3, lr}
    switch (typography)
 800223e:	2903      	cmp	r1, #3
 8002240:	d813      	bhi.n	800226a <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 8002242:	e8df f001 	tbb	[pc, r1]
 8002246:	0602      	.short	0x0602
 8002248:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800224a:	f004 fec7 	bl	8006fdc <_ZN17TypedTextDatabase8getFontsEv>
 800224e:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 8002250:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002252:	f004 fec3 	bl	8006fdc <_ZN17TypedTextDatabase8getFontsEv>
 8002256:	6840      	ldr	r0, [r0, #4]
 8002258:	e7fa      	b.n	8002250 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800225a:	f004 febf 	bl	8006fdc <_ZN17TypedTextDatabase8getFontsEv>
 800225e:	6880      	ldr	r0, [r0, #8]
 8002260:	e7f6      	b.n	8002250 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 8002262:	f004 febb 	bl	8006fdc <_ZN17TypedTextDatabase8getFontsEv>
 8002266:	68c0      	ldr	r0, [r0, #12]
 8002268:	e7f2      	b.n	8002250 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 800226a:	2000      	movs	r0, #0
 800226c:	e7f0      	b.n	8002250 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

08002270 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002270:	4800      	ldr	r0, [pc, #0]	; (8002274 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002272:	4770      	bx	lr
 8002274:	08028df8 	.word	0x08028df8

08002278 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002278:	200d      	movs	r0, #13
 800227a:	4770      	bx	lr

0800227c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800227c:	b513      	push	{r0, r1, r4, lr}
 800227e:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002280:	b151      	cbz	r1, 8002298 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002282:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002284:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002286:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800228a:	aa01      	add	r2, sp, #4
 800228c:	689c      	ldr	r4, [r3, #8]
 800228e:	f10d 0303 	add.w	r3, sp, #3
 8002292:	47a0      	blx	r4
        return glyph;
    }
 8002294:	b002      	add	sp, #8
 8002296:	bd10      	pop	{r4, pc}
            return 0;
 8002298:	4608      	mov	r0, r1
 800229a:	e7fb      	b.n	8002294 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

0800229c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 800229c:	89c0      	ldrh	r0, [r0, #14]
 800229e:	4770      	bx	lr

080022a0 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 80022a0:	8a00      	ldrh	r0, [r0, #16]
 80022a2:	4770      	bx	lr

080022a4 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 80022a4:	88c0      	ldrh	r0, [r0, #6]
 80022a6:	4770      	bx	lr

080022a8 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 80022a8:	8880      	ldrh	r0, [r0, #4]
 80022aa:	4770      	bx	lr

080022ac <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 80022ac:	7a80      	ldrb	r0, [r0, #10]
    }
 80022ae:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 80022b2:	4770      	bx	lr

080022b4 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 80022b4:	7a80      	ldrb	r0, [r0, #10]
    }
 80022b6:	09c0      	lsrs	r0, r0, #7
 80022b8:	4770      	bx	lr

080022ba <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80022ba:	4770      	bx	lr

080022bc <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80022bc:	4770      	bx	lr

080022be <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80022be:	4770      	bx	lr

080022c0 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80022c0:	4770      	bx	lr

080022c2 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 80022c2:	4770      	bx	lr

080022c4 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 80022c4:	4770      	bx	lr

080022c6 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 80022c6:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 80022c8:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 80022ca:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 80022cc:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80022ce:	466d      	mov	r5, sp
 80022d0:	4601      	mov	r1, r0
 80022d2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 80022d6:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80022d8:	4628      	mov	r0, r5
 80022da:	4798      	blx	r3
 80022dc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80022e0:	343c      	adds	r4, #60	; 0x3c
 80022e2:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80022e6:	b005      	add	sp, #20
 80022e8:	bd30      	pop	{r4, r5, pc}

080022ea <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 80022ea:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 80022ec:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 80022ee:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 80022f0:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80022f2:	466d      	mov	r5, sp
 80022f4:	4601      	mov	r1, r0
 80022f6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 80022fa:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80022fc:	4628      	mov	r0, r5
 80022fe:	4798      	blx	r3
 8002300:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002304:	343c      	adds	r4, #60	; 0x3c
 8002306:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 800230a:	b005      	add	sp, #20
 800230c:	bd30      	pop	{r4, r5, pc}

0800230e <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800230e:	2200      	movs	r2, #0
 8002310:	8002      	strh	r2, [r0, #0]
 8002312:	8042      	strh	r2, [r0, #2]
 8002314:	8082      	strh	r2, [r0, #4]
 8002316:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002318:	4770      	bx	lr

0800231a <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800231a:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 800231e:	4770      	bx	lr

08002320 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002320:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 8002322:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002324:	4604      	mov	r4, r0
        setX(x);
 8002326:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002328:	4615      	mov	r5, r2
        setX(x);
 800232a:	4798      	blx	r3
        setBaselineY(baselineY);
 800232c:	6823      	ldr	r3, [r4, #0]
 800232e:	4629      	mov	r1, r5
 8002330:	4620      	mov	r0, r4
 8002332:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 8002334:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002338:	4718      	bx	r3

0800233a <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 800233a:	2000      	movs	r0, #0
 800233c:	4770      	bx	lr

0800233e <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 800233e:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8002340:	4770      	bx	lr

08002342 <_ZN19CalibrationViewBase11setupScreenEv>:
}

void CalibrationViewBase::setupScreen()
{

}
 8002342:	4770      	bx	lr

08002344 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002344:	4770      	bx	lr

08002346 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8002346:	4770      	bx	lr

08002348 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 8002348:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 800234a:	68c2      	ldr	r2, [r0, #12]
 800234c:	6844      	ldr	r4, [r0, #4]
 800234e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002350:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002352:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002356:	07d2      	lsls	r2, r2, #31
 8002358:	bf48      	it	mi
 800235a:	5962      	ldrmi	r2, [r4, r5]
 800235c:	689b      	ldr	r3, [r3, #8]
    }
 800235e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002360:	bf48      	it	mi
 8002362:	58d3      	ldrmi	r3, [r2, r3]
 8002364:	4718      	bx	r3

08002366 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002366:	6843      	ldr	r3, [r0, #4]
 8002368:	b12b      	cbz	r3, 8002376 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800236a:	6883      	ldr	r3, [r0, #8]
 800236c:	b92b      	cbnz	r3, 800237a <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800236e:	68c0      	ldr	r0, [r0, #12]
 8002370:	f000 0001 	and.w	r0, r0, #1
 8002374:	4770      	bx	lr
 8002376:	4618      	mov	r0, r3
 8002378:	4770      	bx	lr
 800237a:	2001      	movs	r0, #1
    }
 800237c:	4770      	bx	lr

0800237e <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 800237e:	b510      	push	{r4, lr}
    }
 8002380:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002382:	4604      	mov	r4, r0
    }
 8002384:	f024 fa9b 	bl	80268be <_ZdlPvj>
 8002388:	4620      	mov	r0, r4
 800238a:	bd10      	pop	{r4, pc}

0800238c <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800238c:	b510      	push	{r4, lr}
 800238e:	214c      	movs	r1, #76	; 0x4c
 8002390:	4604      	mov	r4, r0
 8002392:	f024 fa94 	bl	80268be <_ZdlPvj>
 8002396:	4620      	mov	r0, r4
 8002398:	bd10      	pop	{r4, pc}

0800239a <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800239a:	b510      	push	{r4, lr}
 800239c:	2110      	movs	r1, #16
 800239e:	4604      	mov	r4, r0
 80023a0:	f024 fa8d 	bl	80268be <_ZdlPvj>
 80023a4:	4620      	mov	r0, r4
 80023a6:	bd10      	pop	{r4, pc}

080023a8 <_ZN19CalibrationViewBaseD1Ev>:
CalibrationViewBase::~CalibrationViewBase()
 80023a8:	b510      	push	{r4, lr}
 80023aa:	4b03      	ldr	r3, [pc, #12]	; (80023b8 <_ZN19CalibrationViewBaseD1Ev+0x10>)
 80023ac:	6003      	str	r3, [r0, #0]
 80023ae:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80023b0:	f010 f824 	bl	80123fc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80023b4:	4620      	mov	r0, r4
 80023b6:	bd10      	pop	{r4, pc}
 80023b8:	08029164 	.word	0x08029164

080023bc <_ZN19CalibrationViewBaseD0Ev>:
CalibrationViewBase::~CalibrationViewBase()
 80023bc:	b507      	push	{r0, r1, r2, lr}
 80023be:	4b07      	ldr	r3, [pc, #28]	; (80023dc <_ZN19CalibrationViewBaseD0Ev+0x20>)
 80023c0:	6003      	str	r3, [r0, #0]
 80023c2:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80023c4:	f010 f81a 	bl	80123fc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80023c8:	9801      	ldr	r0, [sp, #4]
 80023ca:	f241 01f8 	movw	r1, #4344	; 0x10f8
 80023ce:	f024 fa76 	bl	80268be <_ZdlPvj>
 80023d2:	9801      	ldr	r0, [sp, #4]
 80023d4:	b003      	add	sp, #12
 80023d6:	f85d fb04 	ldr.w	pc, [sp], #4
 80023da:	bf00      	nop
 80023dc:	08029164 	.word	0x08029164

080023e0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 80023e0:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 80023e2:	f7fe ff47 	bl	8001274 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 80023e6:	bd08      	pop	{r3, pc}

080023e8 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80023e8:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 80023ea:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80023ec:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80023ee:	4b12      	ldr	r3, [pc, #72]	; (8002438 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 80023f0:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 80023f2:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80023f4:	b28d      	uxth	r5, r1
 80023f6:	b92b      	cbnz	r3, 8002404 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 80023f8:	4b10      	ldr	r3, [pc, #64]	; (800243c <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 80023fa:	4a11      	ldr	r2, [pc, #68]	; (8002440 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80023fc:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80023fe:	4811      	ldr	r0, [pc, #68]	; (8002444 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8002400:	f025 f84e 	bl	80274a0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002404:	4910      	ldr	r1, [pc, #64]	; (8002448 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8002406:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002408:	8809      	ldrh	r1, [r1, #0]
 800240a:	4291      	cmp	r1, r2
 800240c:	d803      	bhi.n	8002416 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 800240e:	4b0f      	ldr	r3, [pc, #60]	; (800244c <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8002410:	4a0b      	ldr	r2, [pc, #44]	; (8002440 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002412:	216d      	movs	r1, #109	; 0x6d
 8002414:	e7f3      	b.n	80023fe <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002416:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800241a:	4b0d      	ldr	r3, [pc, #52]	; (8002450 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 800241c:	681b      	ldr	r3, [r3, #0]
 800241e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8002422:	6803      	ldr	r3, [r0, #0]
 8002424:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002426:	4798      	blx	r3
 8002428:	1a28      	subs	r0, r5, r0
 800242a:	b201      	sxth	r1, r0
 800242c:	4633      	mov	r3, r6
 800242e:	4620      	mov	r0, r4
    }
 8002430:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002434:	4718      	bx	r3
 8002436:	bf00      	nop
 8002438:	20013814 	.word	0x20013814
 800243c:	08028efc 	.word	0x08028efc
 8002440:	08028f3e 	.word	0x08028f3e
 8002444:	08028f79 	.word	0x08028f79
 8002448:	20013818 	.word	0x20013818
 800244c:	08028fc0 	.word	0x08028fc0
 8002450:	2001381c 	.word	0x2001381c

08002454 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void CalibrationViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8002454:	f500 70fc 	add.w	r0, r0, #504	; 0x1f8
 8002458:	4288      	cmp	r0, r1
{
 800245a:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800245c:	d105      	bne.n	800246a <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~CalibrationViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800245e:	f011 fccf 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 8002462:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 8002466:	f000 bd7d 	b.w	8002f64 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 800246a:	bd08      	pop	{r3, pc}

0800246c <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 800246c:	2200      	movs	r2, #0
 800246e:	f04f 31ff 	mov.w	r1, #4294967295
 8002472:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8002476:	6082      	str	r2, [r0, #8]
    }
 8002478:	4770      	bx	lr

0800247a <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 800247a:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 800247c:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 800247e:	4604      	mov	r4, r0
        setX(x);
 8002480:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002482:	4615      	mov	r5, r2
        setX(x);
 8002484:	4798      	blx	r3
        setY(y);
 8002486:	6823      	ldr	r3, [r4, #0]
 8002488:	4629      	mov	r1, r5
 800248a:	4620      	mov	r0, r4
 800248c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 800248e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002492:	4718      	bx	r3

08002494 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002494:	b570      	push	{r4, r5, r6, lr}
 8002496:	4604      	mov	r4, r0
 8002498:	461d      	mov	r5, r3
 800249a:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 800249e:	f7ff ffec 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 80024a2:	6823      	ldr	r3, [r4, #0]
 80024a4:	4629      	mov	r1, r5
 80024a6:	4620      	mov	r0, r4
 80024a8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80024aa:	4798      	blx	r3
        setHeight(height);
 80024ac:	6823      	ldr	r3, [r4, #0]
 80024ae:	4631      	mov	r1, r6
 80024b0:	4620      	mov	r0, r4
 80024b2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 80024b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 80024b8:	4718      	bx	r3
	...

080024bc <_ZN8touchgfx6WidgetC1Ev>:
 80024bc:	2200      	movs	r2, #0
 80024be:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80024c2:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 80024c6:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 80024ca:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 80024ce:	f44f 7280 	mov.w	r2, #256	; 0x100
 80024d2:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 80024d4:	4a01      	ldr	r2, [pc, #4]	; (80024dc <_ZN8touchgfx6WidgetC1Ev+0x20>)
 80024d6:	6002      	str	r2, [r0, #0]
 80024d8:	4770      	bx	lr
 80024da:	bf00      	nop
 80024dc:	08029044 	.word	0x08029044

080024e0 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 80024e0:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80024e2:	2226      	movs	r2, #38	; 0x26
    TextArea()
 80024e4:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80024e6:	2100      	movs	r1, #0
 80024e8:	f025 f9df 	bl	80278aa <memset>
 80024ec:	4620      	mov	r0, r4
 80024ee:	f7ff ffe5 	bl	80024bc <_ZN8touchgfx6WidgetC1Ev>
 80024f2:	4b0a      	ldr	r3, [pc, #40]	; (800251c <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 80024f4:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 80024f6:	4b0a      	ldr	r3, [pc, #40]	; (8002520 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 80024f8:	62a3      	str	r3, [r4, #40]	; 0x28
 80024fa:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80024fe:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002500:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002504:	2300      	movs	r3, #0
 8002506:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800250a:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 800250e:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002512:	8723      	strh	r3, [r4, #56]	; 0x38
 8002514:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8002516:	4620      	mov	r0, r4
 8002518:	bd10      	pop	{r4, pc}
 800251a:	bf00      	nop
 800251c:	0802b484 	.word	0x0802b484
 8002520:	080290ac 	.word	0x080290ac

08002524 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8002524:	4b1a      	ldr	r3, [pc, #104]	; (8002590 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8002526:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8002528:	881b      	ldrh	r3, [r3, #0]
 800252a:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 800252c:	428b      	cmp	r3, r1
    void updateTextPosition()
 800252e:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8002530:	d92b      	bls.n	800258a <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002532:	4b18      	ldr	r3, [pc, #96]	; (8002594 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8002534:	681b      	ldr	r3, [r3, #0]
 8002536:	b92b      	cbnz	r3, 8002544 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8002538:	4b17      	ldr	r3, [pc, #92]	; (8002598 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 800253a:	4a18      	ldr	r2, [pc, #96]	; (800259c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 800253c:	4818      	ldr	r0, [pc, #96]	; (80025a0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 800253e:	216c      	movs	r1, #108	; 0x6c
 8002540:	f024 ffae 	bl	80274a0 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002544:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002548:	4b16      	ldr	r3, [pc, #88]	; (80025a4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 800254a:	681b      	ldr	r3, [r3, #0]
 800254c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002550:	4b15      	ldr	r3, [pc, #84]	; (80025a8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002552:	6818      	ldr	r0, [r3, #0]
 8002554:	f004 fd32 	bl	8006fbc <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002558:	682b      	ldr	r3, [r5, #0]
 800255a:	9001      	str	r0, [sp, #4]
 800255c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800255e:	4628      	mov	r0, r5
 8002560:	4798      	blx	r3
 8002562:	682b      	ldr	r3, [r5, #0]
 8002564:	9901      	ldr	r1, [sp, #4]
 8002566:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8002568:	4604      	mov	r4, r0
 800256a:	4628      	mov	r0, r5
 800256c:	4798      	blx	r3
 800256e:	682b      	ldr	r3, [r5, #0]
 8002570:	9901      	ldr	r1, [sp, #4]
 8002572:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002574:	fb14 f400 	smulbb	r4, r4, r0
 8002578:	4628      	mov	r0, r5
 800257a:	4798      	blx	r3
 800257c:	b2a4      	uxth	r4, r4
 800257e:	1823      	adds	r3, r4, r0
 8002580:	b21b      	sxth	r3, r3
 8002582:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002586:	b002      	add	sp, #8
 8002588:	bd70      	pop	{r4, r5, r6, pc}
 800258a:	2300      	movs	r3, #0
 800258c:	e7f9      	b.n	8002582 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 800258e:	bf00      	nop
 8002590:	20013818 	.word	0x20013818
 8002594:	20013814 	.word	0x20013814
 8002598:	08028efc 	.word	0x08028efc
 800259c:	08028f3e 	.word	0x08028f3e
 80025a0:	08028f79 	.word	0x08028f79
 80025a4:	2001381c 	.word	0x2001381c
 80025a8:	20013820 	.word	0x20013820

080025ac <_ZN19CalibrationViewBaseC1Ev>:
CalibrationViewBase::CalibrationViewBase() :
 80025ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80025b0:	ed2d 8b04 	vpush	{d8-d9}
 80025b4:	4604      	mov	r4, r0
 80025b6:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &CalibrationViewBase::buttonCallbackHandler)
 80025b8:	46a3      	mov	fp, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 80025ba:	2500      	movs	r5, #0
 80025bc:	f013 f8a0 	bl	8015700 <_ZN8touchgfx6ScreenC1Ev>
 80025c0:	4be1      	ldr	r3, [pc, #900]	; (8002948 <_ZN19CalibrationViewBaseC1Ev+0x39c>)
 80025c2:	63e5      	str	r5, [r4, #60]	; 0x3c
 80025c4:	f84b 3b40 	str.w	r3, [fp], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 80025c8:	2226      	movs	r2, #38	; 0x26
 80025ca:	4629      	mov	r1, r5
 80025cc:	4658      	mov	r0, fp
 80025ce:	f025 f96c 	bl	80278aa <memset>
 80025d2:	4658      	mov	r0, fp
 80025d4:	f7ff ff72 	bl	80024bc <_ZN8touchgfx6WidgetC1Ev>
 80025d8:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80025dc:	26ff      	movs	r6, #255	; 0xff
 80025de:	4bdb      	ldr	r3, [pc, #876]	; (800294c <_ZN19CalibrationViewBaseC1Ev+0x3a0>)
 80025e0:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 80025e2:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 80025e4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80025e8:	4629      	mov	r1, r5
 80025ea:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80025ee:	4650      	mov	r0, sl
        : color(col)
 80025f0:	66a5      	str	r5, [r4, #104]	; 0x68
 80025f2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80025f6:	f025 f958 	bl	80278aa <memset>
 80025fa:	4650      	mov	r0, sl
 80025fc:	f7ff ff5e 	bl	80024bc <_ZN8touchgfx6WidgetC1Ev>
 8002600:	4bd3      	ldr	r3, [pc, #844]	; (8002950 <_ZN19CalibrationViewBaseC1Ev+0x3a4>)
 8002602:	66e3      	str	r3, [r4, #108]	; 0x6c
 8002604:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8002608:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
    {
        Image::setBitmap(bmp);
 800260c:	a90a      	add	r1, sp, #40	; 0x28
 800260e:	4650      	mov	r0, sl
 8002610:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8002614:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8002618:	f00e fee9 	bl	80113ee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 800261c:	4648      	mov	r0, r9
 800261e:	f7ff ff5f 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 8002622:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8002626:	4bcb      	ldr	r3, [pc, #812]	; (8002954 <_ZN19CalibrationViewBaseC1Ev+0x3a8>)
 8002628:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 800262c:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8002630:	4638      	mov	r0, r7
 8002632:	f00d fda5 	bl	8010180 <_ZN8touchgfx4LineC1Ev>
 8002636:	f504 73aa 	add.w	r3, r4, #340	; 0x154
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800263a:	4618      	mov	r0, r3
 800263c:	9303      	str	r3, [sp, #12]
 800263e:	f7fe fe3f 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002642:	4bc5      	ldr	r3, [pc, #788]	; (8002958 <_ZN19CalibrationViewBaseC1Ev+0x3ac>)
 8002644:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8002648:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 800264c:	3324      	adds	r3, #36	; 0x24
 800264e:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8002652:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8002656:	4640      	mov	r0, r8
 8002658:	f7ff ff42 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 800265c:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8002660:	4618      	mov	r0, r3
 8002662:	ee08 3a10 	vmov	s16, r3
 8002666:	f7ff ff3b 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 800266a:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 800266e:	4618      	mov	r0, r3
 8002670:	ee08 3a90 	vmov	s17, r3
 8002674:	f00e fffc 	bl	8011670 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002678:	f504 7310 	add.w	r3, r4, #576	; 0x240
 800267c:	4618      	mov	r0, r3
 800267e:	ee09 3a10 	vmov	s18, r3
 8002682:	f00e fff5 	bl	8011670 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002686:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800268a:	4618      	mov	r0, r3
 800268c:	ee09 3a90 	vmov	s19, r3
 8002690:	f00e ffee 	bl	8011670 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002694:	4ab1      	ldr	r2, [pc, #708]	; (800295c <_ZN19CalibrationViewBaseC1Ev+0x3b0>)
 8002696:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800269a:	e9c3 243a 	strd	r2, r4, [r3, #232]	; 0xe8
 800269e:	4ab0      	ldr	r2, [pc, #704]	; (8002960 <_ZN19CalibrationViewBaseC1Ev+0x3b4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80026a0:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80026a4:	e9c3 253c 	strd	r2, r5, [r3, #240]	; 0xf0
 80026a8:	f504 7036 	add.w	r0, r4, #728	; 0x2d8
 80026ac:	f00f fe9c 	bl	80123e8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80026b0:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80026b4:	462a      	mov	r2, r5
 80026b6:	4658      	mov	r0, fp
 80026b8:	9300      	str	r3, [sp, #0]
 80026ba:	4629      	mov	r1, r5
 80026bc:	23f0      	movs	r3, #240	; 0xf0
 80026be:	f7ff fee9 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80026c2:	1d26      	adds	r6, r4, #4
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 80026c4:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80026c8:	66a3      	str	r3, [r4, #104]	; 0x68
 80026ca:	4659      	mov	r1, fp
 80026cc:	4630      	mov	r0, r6
 80026ce:	f00c f8ff 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80026d2:	462a      	mov	r2, r5
 80026d4:	4650      	mov	r0, sl
 80026d6:	4629      	mov	r1, r5
 80026d8:	f7ff fecf 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 80026dc:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80026de:	4650      	mov	r0, sl
 80026e0:	a90a      	add	r1, sp, #40	; 0x28
 80026e2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80026e6:	f00e fe82 	bl	80113ee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80026ea:	4651      	mov	r1, sl
 80026ec:	4630      	mov	r0, r6
 80026ee:	f00c f8ef 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 80026f2:	f44f 729a 	mov.w	r2, #308	; 0x134
 80026f6:	2156      	movs	r1, #86	; 0x56
 80026f8:	4648      	mov	r0, r9
 80026fa:	f7ff febe 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80026fe:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8002702:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8002706:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 800270a:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 800270e:	4650      	mov	r0, sl
 8002710:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8002714:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8002718:	4649      	mov	r1, r9
 800271a:	4798      	blx	r3
 800271c:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8002720:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8002724:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002728:	4b8e      	ldr	r3, [pc, #568]	; (8002964 <_ZN19CalibrationViewBaseC1Ev+0x3b8>)
 800272a:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I8KB).getText());
 800272c:	f504 7a34 	add.w	sl, r4, #720	; 0x2d0
 8002730:	b92b      	cbnz	r3, 800273e <_ZN19CalibrationViewBaseC1Ev+0x192>
 8002732:	4b8d      	ldr	r3, [pc, #564]	; (8002968 <_ZN19CalibrationViewBaseC1Ev+0x3bc>)
 8002734:	4a8d      	ldr	r2, [pc, #564]	; (800296c <_ZN19CalibrationViewBaseC1Ev+0x3c0>)
 8002736:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002738:	488d      	ldr	r0, [pc, #564]	; (8002970 <_ZN19CalibrationViewBaseC1Ev+0x3c4>)
 800273a:	f024 feb1 	bl	80274a0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800273e:	4b8d      	ldr	r3, [pc, #564]	; (8002974 <_ZN19CalibrationViewBaseC1Ev+0x3c8>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002740:	881b      	ldrh	r3, [r3, #0]
 8002742:	2b02      	cmp	r3, #2
 8002744:	d803      	bhi.n	800274e <_ZN19CalibrationViewBaseC1Ev+0x1a2>
 8002746:	4b8c      	ldr	r3, [pc, #560]	; (8002978 <_ZN19CalibrationViewBaseC1Ev+0x3cc>)
 8002748:	4a88      	ldr	r2, [pc, #544]	; (800296c <_ZN19CalibrationViewBaseC1Ev+0x3c0>)
 800274a:	2161      	movs	r1, #97	; 0x61
 800274c:	e7f4      	b.n	8002738 <_ZN19CalibrationViewBaseC1Ev+0x18c>
        return texts->getText(typedTextId);
 800274e:	4b8b      	ldr	r3, [pc, #556]	; (800297c <_ZN19CalibrationViewBaseC1Ev+0x3d0>)
 8002750:	2102      	movs	r1, #2
 8002752:	6818      	ldr	r0, [r3, #0]
 8002754:	f004 fc32 	bl	8006fbc <_ZNK8touchgfx5Texts7getTextEt>
 8002758:	4a89      	ldr	r2, [pc, #548]	; (8002980 <_ZN19CalibrationViewBaseC1Ev+0x3d4>)
 800275a:	4603      	mov	r3, r0
 800275c:	2104      	movs	r1, #4
 800275e:	4650      	mov	r0, sl
 8002760:	f014 fcb2 	bl	80170c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8002764:	4648      	mov	r0, r9
        wc1 = value;
 8002766:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 800276a:	f00e fa45 	bl	8010bf8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800276e:	4b85      	ldr	r3, [pc, #532]	; (8002984 <_ZN19CalibrationViewBaseC1Ev+0x3d8>)
 8002770:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RBVT));
 8002772:	a90a      	add	r1, sp, #40	; 0x28
 8002774:	2303      	movs	r3, #3
 8002776:	4648      	mov	r0, r9
 8002778:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800277c:	f00e fa5c 	bl	8010c38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002780:	4649      	mov	r1, r9
 8002782:	4630      	mov	r0, r6
 8002784:	f00c f8a4 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8002788:	230a      	movs	r3, #10
 800278a:	9300      	str	r3, [sp, #0]
 800278c:	2232      	movs	r2, #50	; 0x32
 800278e:	23f0      	movs	r3, #240	; 0xf0
 8002790:	4629      	mov	r1, r5
 8002792:	4638      	mov	r0, r7
 8002794:	f7ff fe7e 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
        canvasPainter = &painter;
 8002798:	9b03      	ldr	r3, [sp, #12]
 800279a:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800279e:	22a0      	movs	r2, #160	; 0xa0
 80027a0:	4611      	mov	r1, r2
 80027a2:	4638      	mov	r0, r7
 80027a4:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 80027a8:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 80027ac:	f00d fdfe 	bl	80103ac <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80027b0:	22a0      	movs	r2, #160	; 0xa0
 80027b2:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80027b6:	4638      	mov	r0, r7
 80027b8:	f00d fe03 	bl	80103c2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 80027bc:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80027c0:	2b20      	cmp	r3, #32
 80027c2:	d005      	beq.n	80027d0 <_ZN19CalibrationViewBaseC1Ev+0x224>
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 80027c4:	2320      	movs	r3, #32
 80027c6:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120

        updateCachedShape();
 80027ca:	4638      	mov	r0, r7
 80027cc:	f00d fcf8 	bl	80101c0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80027d0:	4638      	mov	r0, r7
 80027d2:	2101      	movs	r1, #1
 80027d4:	f00d fe00 	bl	80103d8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80027d8:	4639      	mov	r1, r7
 80027da:	4630      	mov	r0, r6
 80027dc:	f00c f878 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80027e0:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 80027e4:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 36);
 80027e6:	2224      	movs	r2, #36	; 0x24
 80027e8:	4640      	mov	r0, r8
        linespace = space;
 80027ea:	f04f 0a00 	mov.w	sl, #0
 80027ee:	2145      	movs	r1, #69	; 0x45
 80027f0:	f7ff fe43 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80027f4:	4641      	mov	r1, r8
 80027f6:	4638      	mov	r0, r7
        color = newColor;
 80027f8:	f8c4 5198 	str.w	r5, [r4, #408]	; 0x198
        linespace = space;
 80027fc:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8002800:	f00d ff80 	bl	8010704 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002804:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8002808:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 800280c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002810:	f8df 9170 	ldr.w	r9, [pc, #368]	; 8002984 <_ZN19CalibrationViewBaseC1Ev+0x3d8>
 8002814:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8002818:	2338      	movs	r3, #56	; 0x38
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y01G));
 800281a:	a90a      	add	r1, sp, #40	; 0x28
 800281c:	4640      	mov	r0, r8
 800281e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002822:	f00e fa09 	bl	8010c38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002826:	4641      	mov	r1, r8
 8002828:	4630      	mov	r0, r6
 800282a:	f00c f851 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(50, 12);
 800282e:	ee18 0a10 	vmov	r0, s16
 8002832:	220c      	movs	r2, #12
 8002834:	2132      	movs	r1, #50	; 0x32
 8002836:	f7ff fe20 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 800283a:	ee18 1a10 	vmov	r1, s16
 800283e:	4638      	mov	r0, r7
        color = newColor;
 8002840:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8002844:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8002848:	f00d ff5c 	bl	8010704 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800284c:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8002850:	ee18 3a10 	vmov	r3, s16
 8002854:	333c      	adds	r3, #60	; 0x3c
 8002856:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800285a:	2337      	movs	r3, #55	; 0x37
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2ABZ));
 800285c:	ee18 0a10 	vmov	r0, s16
 8002860:	a90a      	add	r1, sp, #40	; 0x28
 8002862:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002866:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800286a:	f00e f9e5 	bl	8010c38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800286e:	ee18 1a10 	vmov	r1, s16
 8002872:	4630      	mov	r0, r6
 8002874:	f00c f82c 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8002878:	ee18 0a90 	vmov	r0, s17
 800287c:	22f0      	movs	r2, #240	; 0xf0
 800287e:	2121      	movs	r1, #33	; 0x21
 8002880:	f7ff fdfb 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8002884:	f04f 0803 	mov.w	r8, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002888:	aa0a      	add	r2, sp, #40	; 0x28
 800288a:	2702      	movs	r7, #2
 800288c:	a909      	add	r1, sp, #36	; 0x24
 800288e:	ee18 0a90 	vmov	r0, s17
 8002892:	f8ad 8024 	strh.w	r8, [sp, #36]	; 0x24
 8002896:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 800289a:	f00e fbb2 	bl	8011002 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800289e:	2336      	movs	r3, #54	; 0x36
        updateTextPosition();
 80028a0:	ee18 0a90 	vmov	r0, s17
 80028a4:	f8a4 3230 	strh.w	r3, [r4, #560]	; 0x230
 80028a8:	f7ff fe3c 	bl	8002524 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80028ac:	f504 5387 	add.w	r3, r4, #4320	; 0x10e0
 80028b0:	3308      	adds	r3, #8
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 80028b2:	f8c4 3220 	str.w	r3, [r4, #544]	; 0x220
 80028b6:	ee18 1a90 	vmov	r1, s17
 80028ba:	4630      	mov	r0, r6
        colorPressed = col;
 80028bc:	e9c4 558d 	strd	r5, r5, [r4, #564]	; 0x234
 80028c0:	f00c f806 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 80028c4:	ee19 0a10 	vmov	r0, s18
 80028c8:	22aa      	movs	r2, #170	; 0xaa
 80028ca:	2121      	movs	r1, #33	; 0x21
 80028cc:	f7ff fdd5 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80028d0:	aa0a      	add	r2, sp, #40	; 0x28
 80028d2:	a909      	add	r1, sp, #36	; 0x24
 80028d4:	ee19 0a10 	vmov	r0, s18
 80028d8:	f8ad 8024 	strh.w	r8, [sp, #36]	; 0x24
 80028dc:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 80028e0:	f00e fb8f 	bl	8011002 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80028e4:	2335      	movs	r3, #53	; 0x35
 80028e6:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
        updateTextPosition();
 80028ea:	ee19 0a10 	vmov	r0, s18
 80028ee:	f7ff fe19 	bl	8002524 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80028f2:	ee19 1a10 	vmov	r1, s18
 80028f6:	4630      	mov	r0, r6
        colorPressed = col;
 80028f8:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 80028fc:	f00b ffe8 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8002900:	ee19 0a90 	vmov	r0, s19
 8002904:	2264      	movs	r2, #100	; 0x64
 8002906:	2121      	movs	r1, #33	; 0x21
 8002908:	f7ff fdb7 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800290c:	aa0a      	add	r2, sp, #40	; 0x28
 800290e:	a909      	add	r1, sp, #36	; 0x24
 8002910:	ee19 0a90 	vmov	r0, s19
 8002914:	f8ad 8024 	strh.w	r8, [sp, #36]	; 0x24
 8002918:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 800291c:	f00e fb71 	bl	8011002 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002920:	2334      	movs	r3, #52	; 0x34
        updateTextPosition();
 8002922:	ee19 0a90 	vmov	r0, s19
 8002926:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
 800292a:	f7ff fdfb 	bl	8002524 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800292e:	4630      	mov	r0, r6
        colorPressed = col;
 8002930:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8002934:	ee19 1a90 	vmov	r1, s19
 8002938:	f00b ffca 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800293c:	4620      	mov	r0, r4
 800293e:	b00d      	add	sp, #52	; 0x34
 8002940:	ecbd 8b04 	vpop	{d8-d9}
 8002944:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002948:	08029164 	.word	0x08029164
 800294c:	0802b514 	.word	0x0802b514
 8002950:	0802b6dc 	.word	0x0802b6dc
 8002954:	080290bc 	.word	0x080290bc
 8002958:	0802b248 	.word	0x0802b248
 800295c:	0802914c 	.word	0x0802914c
 8002960:	08002455 	.word	0x08002455
 8002964:	20013814 	.word	0x20013814
 8002968:	08028efc 	.word	0x08028efc
 800296c:	08028ffe 	.word	0x08028ffe
 8002970:	08028f79 	.word	0x08028f79
 8002974:	20013818 	.word	0x20013818
 8002978:	08028fc0 	.word	0x08028fc0
 800297c:	20013820 	.word	0x20013820
 8002980:	08029036 	.word	0x08029036
 8002984:	080290ac 	.word	0x080290ac

08002988 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8002988:	4770      	bx	lr

0800298a <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 800298a:	4770      	bx	lr

0800298c <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 800298c:	f500 7398 	add.w	r3, r0, #304	; 0x130
 8002990:	6808      	ldr	r0, [r1, #0]
 8002992:	6849      	ldr	r1, [r1, #4]
 8002994:	c303      	stmia	r3!, {r0, r1}
    }
 8002996:	4770      	bx	lr

08002998 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8002998:	4770      	bx	lr

0800299a <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 800299a:	4770      	bx	lr

0800299c <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 800299c:	6041      	str	r1, [r0, #4]
    }
 800299e:	4770      	bx	lr

080029a0 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 80029a0:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80029a2:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 80029a4:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 80029a8:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80029ac:	8002      	strh	r2, [r0, #0]
 80029ae:	8042      	strh	r2, [r0, #2]
 80029b0:	8084      	strh	r4, [r0, #4]
 80029b2:	80c1      	strh	r1, [r0, #6]
        }
 80029b4:	bd10      	pop	{r4, pc}

080029b6 <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 80029b6:	4770      	bx	lr

080029b8 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80029b8:	4770      	bx	lr
	...

080029bc <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80029bc:	4b06      	ldr	r3, [pc, #24]	; (80029d8 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80029be:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80029c2:	2300      	movs	r3, #0
 80029c4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Main_Menu

void FrontendApplicationBase::gotoMain_MenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMain_MenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80029c8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80029cc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80029d0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMain_MenuScreenNoTransition();
    }
 80029d4:	4770      	bx	lr
 80029d6:	bf00      	nop
 80029d8:	08002d79 	.word	0x08002d79

080029dc <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 80029dc:	2301      	movs	r3, #1
 80029de:	7203      	strb	r3, [r0, #8]
    }
 80029e0:	4770      	bx	lr

080029e2 <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 80029e2:	4770      	bx	lr

080029e4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 80029e4:	4770      	bx	lr

080029e6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 80029e6:	4770      	bx	lr

080029e8 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 80029e8:	4770      	bx	lr

080029ea <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 80029ea:	4770      	bx	lr

080029ec <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 80029ec:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 80029ee:	6840      	ldr	r0, [r0, #4]
 80029f0:	6803      	ldr	r3, [r0, #0]
 80029f2:	3110      	adds	r1, #16
 80029f4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80029f6:	4718      	bx	r3

080029f8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 80029f8:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 80029fa:	6840      	ldr	r0, [r0, #4]
 80029fc:	6803      	ldr	r3, [r0, #0]
 80029fe:	3110      	adds	r1, #16
 8002a00:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002a02:	4718      	bx	r3

08002a04 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 8002a04:	4770      	bx	lr

08002a06 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 8002a06:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 8002a08:	6840      	ldr	r0, [r0, #4]
 8002a0a:	6803      	ldr	r3, [r0, #0]
 8002a0c:	3110      	adds	r1, #16
 8002a0e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8002a10:	4718      	bx	r3

08002a12 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 8002a12:	4601      	mov	r1, r0
        screenContainer->add(solid);
 8002a14:	6840      	ldr	r0, [r0, #4]
 8002a16:	6803      	ldr	r3, [r0, #0]
 8002a18:	3110      	adds	r1, #16
 8002a1a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002a1c:	4718      	bx	r3

08002a1e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 8002a1e:	4770      	bx	lr

08002a20 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002a20:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8002a22:	68c2      	ldr	r2, [r0, #12]
 8002a24:	6841      	ldr	r1, [r0, #4]
 8002a26:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8002a28:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8002a2a:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002a2e:	07d2      	lsls	r2, r2, #31
 8002a30:	bf48      	it	mi
 8002a32:	590a      	ldrmi	r2, [r1, r4]
 8002a34:	689b      	ldr	r3, [r3, #8]
    }
 8002a36:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8002a3a:	bf48      	it	mi
 8002a3c:	58d3      	ldrmi	r3, [r2, r3]
 8002a3e:	4718      	bx	r3

08002a40 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002a40:	6843      	ldr	r3, [r0, #4]
 8002a42:	b12b      	cbz	r3, 8002a50 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8002a44:	6883      	ldr	r3, [r0, #8]
 8002a46:	b92b      	cbnz	r3, 8002a54 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002a48:	68c0      	ldr	r0, [r0, #12]
 8002a4a:	f000 0001 	and.w	r0, r0, #1
 8002a4e:	4770      	bx	lr
 8002a50:	4618      	mov	r0, r3
 8002a52:	4770      	bx	lr
 8002a54:	2001      	movs	r0, #1
    }
 8002a56:	4770      	bx	lr

08002a58 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002a58:	b510      	push	{r4, lr}
 8002a5a:	210c      	movs	r1, #12
 8002a5c:	4604      	mov	r4, r0
 8002a5e:	f023 ff2e 	bl	80268be <_ZdlPvj>
 8002a62:	4620      	mov	r0, r4
 8002a64:	bd10      	pop	{r4, pc}

08002a66 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002a66:	b510      	push	{r4, lr}
 8002a68:	2110      	movs	r1, #16
 8002a6a:	4604      	mov	r4, r0
 8002a6c:	f023 ff27 	bl	80268be <_ZdlPvj>
 8002a70:	4620      	mov	r0, r4
 8002a72:	bd10      	pop	{r4, pc}

08002a74 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8002a74:	b510      	push	{r4, lr}
 8002a76:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8002a7a:	4604      	mov	r4, r0
 8002a7c:	f023 ff1f 	bl	80268be <_ZdlPvj>
 8002a80:	4620      	mov	r0, r4
 8002a82:	bd10      	pop	{r4, pc}

08002a84 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 8002a84:	b510      	push	{r4, lr}
 8002a86:	2138      	movs	r1, #56	; 0x38
 8002a88:	4604      	mov	r4, r0
 8002a8a:	f023 ff18 	bl	80268be <_ZdlPvj>
 8002a8e:	4620      	mov	r0, r4
 8002a90:	bd10      	pop	{r4, pc}

08002a92 <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 8002a92:	b510      	push	{r4, lr}
 8002a94:	2128      	movs	r1, #40	; 0x28
 8002a96:	4604      	mov	r4, r0
 8002a98:	f023 ff11 	bl	80268be <_ZdlPvj>
 8002a9c:	4620      	mov	r0, r4
 8002a9e:	bd10      	pop	{r4, pc}

08002aa0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 8002aa0:	b510      	push	{r4, lr}
 8002aa2:	2138      	movs	r1, #56	; 0x38
 8002aa4:	4604      	mov	r4, r0
 8002aa6:	f023 ff0a 	bl	80268be <_ZdlPvj>
 8002aaa:	4620      	mov	r0, r4
 8002aac:	bd10      	pop	{r4, pc}

08002aae <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002aae:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8002ab0:	f011 f9a6 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
 8002ab4:	6803      	ldr	r3, [r0, #0]
    }
 8002ab6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 8002aba:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002abc:	4718      	bx	r3
	...

08002ac0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8002ac0:	b513      	push	{r0, r1, r4, lr}
 8002ac2:	4604      	mov	r4, r0
        animationCounter++;
 8002ac4:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 8002ac6:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8002ac8:	3001      	adds	r0, #1
 8002aca:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8002acc:	4298      	cmp	r0, r3
        animationCounter++;
 8002ace:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8002ad0:	d905      	bls.n	8002ade <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 8002ad2:	2301      	movs	r3, #1
 8002ad4:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8002ad6:	2300      	movs	r3, #0
 8002ad8:	72a3      	strb	r3, [r4, #10]
    }
 8002ada:	b002      	add	sp, #8
 8002adc:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002ade:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8002ae2:	2100      	movs	r1, #0
 8002ae4:	f012 ffbe 	bl	8015a64 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8002ae8:	f010 0201 	ands.w	r2, r0, #1
 8002aec:	b283      	uxth	r3, r0
 8002aee:	d12a      	bne.n	8002b46 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002af0:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002af2:	4a19      	ldr	r2, [pc, #100]	; (8002b58 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 8002af4:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 8002af8:	89e3      	ldrh	r3, [r4, #14]
 8002afa:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 8002afc:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 8002b00:	82a0      	strh	r0, [r4, #20]
 8002b02:	2000      	movs	r0, #0
 8002b04:	1ad2      	subs	r2, r2, r3
 8002b06:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 8002b0a:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 8002b0c:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 8002b0e:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8002b10:	4a12      	ldr	r2, [pc, #72]	; (8002b5c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 8002b12:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 8002b16:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8002b18:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 8002b1c:	691b      	ldr	r3, [r3, #16]
 8002b1e:	f8ad 1000 	strh.w	r1, [sp]
 8002b22:	f8ad 2006 	strh.w	r2, [sp, #6]
 8002b26:	4669      	mov	r1, sp
 8002b28:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8002b2a:	7aa3      	ldrb	r3, [r4, #10]
 8002b2c:	2b01      	cmp	r3, #1
 8002b2e:	d1d4      	bne.n	8002ada <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 8002b30:	4b0b      	ldr	r3, [pc, #44]	; (8002b60 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 8002b32:	781b      	ldrb	r3, [r3, #0]
 8002b34:	2b00      	cmp	r3, #0
 8002b36:	d0d0      	beq.n	8002ada <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8002b38:	f011 f962 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8002b3c:	b002      	add	sp, #8
 8002b3e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8002b42:	f011 b963 	b.w	8013e0c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8002b46:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002b4a:	2800      	cmp	r0, #0
 8002b4c:	bfd8      	it	le
 8002b4e:	460a      	movle	r2, r1
 8002b50:	4413      	add	r3, r2
 8002b52:	81e3      	strh	r3, [r4, #14]
 8002b54:	e7cd      	b.n	8002af2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 8002b56:	bf00      	nop
 8002b58:	200137b0 	.word	0x200137b0
 8002b5c:	200137b2 	.word	0x200137b2
 8002b60:	200137ba 	.word	0x200137ba

08002b64 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8002b64:	b510      	push	{r4, lr}
 8002b66:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002b68:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8002b6c:	b158      	cbz	r0, 8002b86 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8002b6e:	6803      	ldr	r3, [r0, #0]
 8002b70:	68db      	ldr	r3, [r3, #12]
 8002b72:	4798      	blx	r3
 8002b74:	b138      	cbz	r0, 8002b86 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8002b76:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 8002b7a:	6803      	ldr	r3, [r0, #0]
 8002b7c:	689b      	ldr	r3, [r3, #8]
 8002b7e:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002b80:	2300      	movs	r3, #0
 8002b82:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 8002b86:	bd10      	pop	{r4, pc}

08002b88 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 8002b88:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002b8c:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8002b90:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002b92:	68a8      	ldr	r0, [r5, #8]
 8002b94:	6803      	ldr	r3, [r0, #0]
 8002b96:	6a1b      	ldr	r3, [r3, #32]
 8002b98:	4798      	blx	r3
 8002b9a:	2897      	cmp	r0, #151	; 0x97
 8002b9c:	d805      	bhi.n	8002baa <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 8002b9e:	4b46      	ldr	r3, [pc, #280]	; (8002cb8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 8002ba0:	4a46      	ldr	r2, [pc, #280]	; (8002cbc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8002ba2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002ba4:	4846      	ldr	r0, [pc, #280]	; (8002cc0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 8002ba6:	f024 fc7b 	bl	80274a0 <__assert_func>
 8002baa:	6868      	ldr	r0, [r5, #4]
 8002bac:	6803      	ldr	r3, [r0, #0]
 8002bae:	6a1b      	ldr	r3, [r3, #32]
 8002bb0:	4798      	blx	r3
 8002bb2:	280f      	cmp	r0, #15
 8002bb4:	d803      	bhi.n	8002bbe <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 8002bb6:	4b43      	ldr	r3, [pc, #268]	; (8002cc4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 8002bb8:	4a40      	ldr	r2, [pc, #256]	; (8002cbc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8002bba:	21a4      	movs	r1, #164	; 0xa4
 8002bbc:	e7f2      	b.n	8002ba4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002bbe:	68e8      	ldr	r0, [r5, #12]
 8002bc0:	6803      	ldr	r3, [r0, #0]
 8002bc2:	6a1b      	ldr	r3, [r3, #32]
 8002bc4:	4798      	blx	r3
 8002bc6:	280b      	cmp	r0, #11
 8002bc8:	d803      	bhi.n	8002bd2 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 8002bca:	4b3f      	ldr	r3, [pc, #252]	; (8002cc8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 8002bcc:	4a3b      	ldr	r2, [pc, #236]	; (8002cbc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8002bce:	21a5      	movs	r1, #165	; 0xa5
 8002bd0:	e7e8      	b.n	8002ba4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 8002bd2:	f011 f915 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8002bd6:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8002cd0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 8002bda:	3004      	adds	r0, #4
 8002bdc:	f011 f976 	bl	8013ecc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8002be0:	f8d9 0000 	ldr.w	r0, [r9]
 8002be4:	b110      	cbz	r0, 8002bec <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 8002be6:	6803      	ldr	r3, [r0, #0]
 8002be8:	68db      	ldr	r3, [r3, #12]
 8002bea:	4798      	blx	r3
    if (*currentTrans)
 8002bec:	f8d9 0000 	ldr.w	r0, [r9]
 8002bf0:	b110      	cbz	r0, 8002bf8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8002bf2:	6803      	ldr	r3, [r0, #0]
 8002bf4:	681b      	ldr	r3, [r3, #0]
 8002bf6:	4798      	blx	r3
    if (*currentScreen)
 8002bf8:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8002cd4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 8002bfc:	f8d8 0000 	ldr.w	r0, [r8]
 8002c00:	b110      	cbz	r0, 8002c08 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8002c02:	6803      	ldr	r3, [r0, #0]
 8002c04:	695b      	ldr	r3, [r3, #20]
 8002c06:	4798      	blx	r3
    if (*currentPresenter)
 8002c08:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8002c0c:	b110      	cbz	r0, 8002c14 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8002c0e:	6803      	ldr	r3, [r0, #0]
 8002c10:	685b      	ldr	r3, [r3, #4]
 8002c12:	4798      	blx	r3
    if (*currentScreen)
 8002c14:	f8d8 0000 	ldr.w	r0, [r8]
 8002c18:	b110      	cbz	r0, 8002c20 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 8002c1a:	6803      	ldr	r3, [r0, #0]
 8002c1c:	681b      	ldr	r3, [r3, #0]
 8002c1e:	4798      	blx	r3
    if (*currentPresenter)
 8002c20:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8002c24:	b110      	cbz	r0, 8002c2c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8002c26:	6803      	ldr	r3, [r0, #0]
 8002c28:	689b      	ldr	r3, [r3, #8]
 8002c2a:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002c2c:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8002c2e:	6803      	ldr	r3, [r0, #0]
 8002c30:	2100      	movs	r1, #0
 8002c32:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c34:	4798      	blx	r3
        : screenContainer(0), done(false)
 8002c36:	f04f 0b00 	mov.w	fp, #0
 8002c3a:	4b24      	ldr	r3, [pc, #144]	; (8002ccc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 8002c3c:	6003      	str	r3, [r0, #0]
 8002c3e:	4604      	mov	r4, r0
 8002c40:	f8c0 b004 	str.w	fp, [r0, #4]
 8002c44:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002c48:	68a8      	ldr	r0, [r5, #8]
 8002c4a:	6803      	ldr	r3, [r0, #0]
 8002c4c:	4659      	mov	r1, fp
 8002c4e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c50:	4798      	blx	r3
 8002c52:	4606      	mov	r6, r0
 8002c54:	f004 fd94 	bl	8007780 <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002c58:	6868      	ldr	r0, [r5, #4]
 8002c5a:	6803      	ldr	r3, [r0, #0]
 8002c5c:	4659      	mov	r1, fp
 8002c5e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c60:	4798      	blx	r3
 8002c62:	4631      	mov	r1, r6
 8002c64:	4605      	mov	r5, r0
 8002c66:	f004 fd67 	bl	8007738 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 8002c6a:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002c6e:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8002c72:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002c76:	b1e5      	cbz	r5, 8002cb2 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 8002c78:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002c7a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002c7e:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8002c80:	f8c5 a008 	str.w	sl, [r5, #8]
 8002c84:	4630      	mov	r0, r6
 8002c86:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8002c88:	63f5      	str	r5, [r6, #60]	; 0x3c
 8002c8a:	4798      	blx	r3
    newPresenter->activate();
 8002c8c:	682b      	ldr	r3, [r5, #0]
 8002c8e:	4628      	mov	r0, r5
 8002c90:	681b      	ldr	r3, [r3, #0]
 8002c92:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002c94:	4621      	mov	r1, r4
 8002c96:	4630      	mov	r0, r6
 8002c98:	f012 fede 	bl	8015a58 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002c9c:	6823      	ldr	r3, [r4, #0]
 8002c9e:	4620      	mov	r0, r4
 8002ca0:	691b      	ldr	r3, [r3, #16]
 8002ca2:	4798      	blx	r3
    newTransition->invalidate();
 8002ca4:	6823      	ldr	r3, [r4, #0]
 8002ca6:	695b      	ldr	r3, [r3, #20]
 8002ca8:	4620      	mov	r0, r4
}
 8002caa:	b001      	add	sp, #4
 8002cac:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002cb0:	4718      	bx	r3
    model->bind(newPresenter);
 8002cb2:	462b      	mov	r3, r5
 8002cb4:	e7e1      	b.n	8002c7a <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 8002cb6:	bf00      	nop
 8002cb8:	08029190 	.word	0x08029190
 8002cbc:	0802921e 	.word	0x0802921e
 8002cc0:	0802932c 	.word	0x0802932c
 8002cc4:	08029373 	.word	0x08029373
 8002cc8:	08029416 	.word	0x08029416
 8002ccc:	0802a4c8 	.word	0x0802a4c8
 8002cd0:	20013804 	.word	0x20013804
 8002cd4:	20013800 	.word	0x20013800

08002cd8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8002cd8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8002cda:	4604      	mov	r4, r0
        animationCounter++;
 8002cdc:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 8002cde:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8002ce0:	3001      	adds	r0, #1
 8002ce2:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8002ce4:	4298      	cmp	r0, r3
        animationCounter++;
 8002ce6:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8002ce8:	d905      	bls.n	8002cf6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 8002cea:	2301      	movs	r3, #1
 8002cec:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8002cee:	2300      	movs	r3, #0
 8002cf0:	72a3      	strb	r3, [r4, #10]
    }
 8002cf2:	b003      	add	sp, #12
 8002cf4:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002cf6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8002cfa:	2100      	movs	r1, #0
 8002cfc:	f012 feb2 	bl	8015a64 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8002d00:	f010 0201 	ands.w	r2, r0, #1
 8002d04:	b283      	uxth	r3, r0
 8002d06:	d128      	bne.n	8002d5a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002d08:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002d0a:	4b18      	ldr	r3, [pc, #96]	; (8002d6c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8002d0c:	4818      	ldr	r0, [pc, #96]	; (8002d70 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002d0e:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 8002d10:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002d12:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8002d14:	f9b0 0000 	ldrsh.w	r0, [r0]
 8002d18:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002d1c:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 8002d1e:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8002d20:	442b      	add	r3, r5
 8002d22:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002d24:	b212      	sxth	r2, r2
 8002d26:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 8002d2a:	6803      	ldr	r3, [r0, #0]
 8002d2c:	8322      	strh	r2, [r4, #24]
 8002d2e:	f8ad 2000 	strh.w	r2, [sp]
 8002d32:	2200      	movs	r2, #0
 8002d34:	691b      	ldr	r3, [r3, #16]
 8002d36:	f8ad 2002 	strh.w	r2, [sp, #2]
 8002d3a:	4669      	mov	r1, sp
 8002d3c:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8002d3e:	7aa3      	ldrb	r3, [r4, #10]
 8002d40:	2b01      	cmp	r3, #1
 8002d42:	d1d6      	bne.n	8002cf2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 8002d44:	4b0b      	ldr	r3, [pc, #44]	; (8002d74 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 8002d46:	781b      	ldrb	r3, [r3, #0]
 8002d48:	2b00      	cmp	r3, #0
 8002d4a:	d0d2      	beq.n	8002cf2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8002d4c:	f011 f858 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8002d50:	b003      	add	sp, #12
 8002d52:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8002d56:	f011 b859 	b.w	8013e0c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8002d5a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002d5e:	2800      	cmp	r0, #0
 8002d60:	bfd8      	it	le
 8002d62:	460a      	movle	r2, r1
 8002d64:	4413      	add	r3, r2
 8002d66:	81e3      	strh	r3, [r4, #14]
 8002d68:	e7cf      	b.n	8002d0a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 8002d6a:	bf00      	nop
 8002d6c:	200137b0 	.word	0x200137b0
 8002d70:	200137b2 	.word	0x200137b2
 8002d74:	200137ba 	.word	0x200137ba

08002d78 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv>:
{
 8002d78:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002d7c:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8002d80:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002d82:	68a8      	ldr	r0, [r5, #8]
 8002d84:	6803      	ldr	r3, [r0, #0]
 8002d86:	6a1b      	ldr	r3, [r3, #32]
 8002d88:	4798      	blx	r3
 8002d8a:	f241 137b 	movw	r3, #4475	; 0x117b
 8002d8e:	4298      	cmp	r0, r3
 8002d90:	d805      	bhi.n	8002d9e <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x26>
 8002d92:	4b46      	ldr	r3, [pc, #280]	; (8002eac <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 8002d94:	4a46      	ldr	r2, [pc, #280]	; (8002eb0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8002d96:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002d98:	4846      	ldr	r0, [pc, #280]	; (8002eb4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x13c>)
 8002d9a:	f024 fb81 	bl	80274a0 <__assert_func>
 8002d9e:	6868      	ldr	r0, [r5, #4]
 8002da0:	6803      	ldr	r3, [r0, #0]
 8002da2:	6a1b      	ldr	r3, [r3, #32]
 8002da4:	4798      	blx	r3
 8002da6:	280f      	cmp	r0, #15
 8002da8:	d803      	bhi.n	8002db2 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x3a>
 8002daa:	4b43      	ldr	r3, [pc, #268]	; (8002eb8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x140>)
 8002dac:	4a40      	ldr	r2, [pc, #256]	; (8002eb0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8002dae:	21a4      	movs	r1, #164	; 0xa4
 8002db0:	e7f2      	b.n	8002d98 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002db2:	68e8      	ldr	r0, [r5, #12]
 8002db4:	6803      	ldr	r3, [r0, #0]
 8002db6:	6a1b      	ldr	r3, [r3, #32]
 8002db8:	4798      	blx	r3
 8002dba:	280b      	cmp	r0, #11
 8002dbc:	d803      	bhi.n	8002dc6 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x4e>
 8002dbe:	4b3f      	ldr	r3, [pc, #252]	; (8002ebc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x144>)
 8002dc0:	4a3b      	ldr	r2, [pc, #236]	; (8002eb0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8002dc2:	21a5      	movs	r1, #165	; 0xa5
 8002dc4:	e7e8      	b.n	8002d98 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8002dc6:	f011 f81b 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8002dca:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8002ec4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x14c>
 8002dce:	3004      	adds	r0, #4
 8002dd0:	f011 f87c 	bl	8013ecc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8002dd4:	f8d9 0000 	ldr.w	r0, [r9]
 8002dd8:	b110      	cbz	r0, 8002de0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 8002dda:	6803      	ldr	r3, [r0, #0]
 8002ddc:	68db      	ldr	r3, [r3, #12]
 8002dde:	4798      	blx	r3
    if (*currentTrans)
 8002de0:	f8d9 0000 	ldr.w	r0, [r9]
 8002de4:	b110      	cbz	r0, 8002dec <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 8002de6:	6803      	ldr	r3, [r0, #0]
 8002de8:	681b      	ldr	r3, [r3, #0]
 8002dea:	4798      	blx	r3
    if (*currentScreen)
 8002dec:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8002ec8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x150>
 8002df0:	f8d8 0000 	ldr.w	r0, [r8]
 8002df4:	b110      	cbz	r0, 8002dfc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8002df6:	6803      	ldr	r3, [r0, #0]
 8002df8:	695b      	ldr	r3, [r3, #20]
 8002dfa:	4798      	blx	r3
    if (*currentPresenter)
 8002dfc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8002e00:	b110      	cbz	r0, 8002e08 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 8002e02:	6803      	ldr	r3, [r0, #0]
 8002e04:	685b      	ldr	r3, [r3, #4]
 8002e06:	4798      	blx	r3
    if (*currentScreen)
 8002e08:	f8d8 0000 	ldr.w	r0, [r8]
 8002e0c:	b110      	cbz	r0, 8002e14 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 8002e0e:	6803      	ldr	r3, [r0, #0]
 8002e10:	681b      	ldr	r3, [r3, #0]
 8002e12:	4798      	blx	r3
    if (*currentPresenter)
 8002e14:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8002e18:	b110      	cbz	r0, 8002e20 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8002e1a:	6803      	ldr	r3, [r0, #0]
 8002e1c:	689b      	ldr	r3, [r3, #8]
 8002e1e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002e20:	68e8      	ldr	r0, [r5, #12]
 8002e22:	6803      	ldr	r3, [r0, #0]
 8002e24:	2100      	movs	r1, #0
 8002e26:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002e28:	4798      	blx	r3
 8002e2a:	f04f 0b00 	mov.w	fp, #0
 8002e2e:	4b24      	ldr	r3, [pc, #144]	; (8002ec0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x148>)
 8002e30:	6003      	str	r3, [r0, #0]
 8002e32:	4604      	mov	r4, r0
 8002e34:	f8c0 b004 	str.w	fp, [r0, #4]
 8002e38:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002e3c:	68a8      	ldr	r0, [r5, #8]
 8002e3e:	6803      	ldr	r3, [r0, #0]
 8002e40:	4659      	mov	r1, fp
 8002e42:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002e44:	4798      	blx	r3
 8002e46:	4606      	mov	r6, r0
 8002e48:	f004 f99c 	bl	8007184 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002e4c:	6868      	ldr	r0, [r5, #4]
 8002e4e:	6803      	ldr	r3, [r0, #0]
 8002e50:	4659      	mov	r1, fp
 8002e52:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002e54:	4798      	blx	r3
 8002e56:	4631      	mov	r1, r6
 8002e58:	4605      	mov	r5, r0
 8002e5a:	f004 f96d 	bl	8007138 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8002e5e:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002e62:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8002e66:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002e6a:	b1e5      	cbz	r5, 8002ea6 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x12e>
 8002e6c:	1d2b      	adds	r3, r5, #4
 8002e6e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002e72:	6833      	ldr	r3, [r6, #0]
 8002e74:	f8c5 a008 	str.w	sl, [r5, #8]
 8002e78:	4630      	mov	r0, r6
 8002e7a:	68db      	ldr	r3, [r3, #12]
 8002e7c:	63f5      	str	r5, [r6, #60]	; 0x3c
 8002e7e:	4798      	blx	r3
    newPresenter->activate();
 8002e80:	682b      	ldr	r3, [r5, #0]
 8002e82:	4628      	mov	r0, r5
 8002e84:	681b      	ldr	r3, [r3, #0]
 8002e86:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002e88:	4621      	mov	r1, r4
 8002e8a:	4630      	mov	r0, r6
 8002e8c:	f012 fde4 	bl	8015a58 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002e90:	6823      	ldr	r3, [r4, #0]
 8002e92:	4620      	mov	r0, r4
 8002e94:	691b      	ldr	r3, [r3, #16]
 8002e96:	4798      	blx	r3
    newTransition->invalidate();
 8002e98:	6823      	ldr	r3, [r4, #0]
 8002e9a:	695b      	ldr	r3, [r3, #20]
 8002e9c:	4620      	mov	r0, r4
}
 8002e9e:	b001      	add	sp, #4
 8002ea0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002ea4:	4718      	bx	r3
    model->bind(newPresenter);
 8002ea6:	462b      	mov	r3, r5
 8002ea8:	e7e1      	b.n	8002e6e <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xf6>
 8002eaa:	bf00      	nop
 8002eac:	08029190 	.word	0x08029190
 8002eb0:	080294b9 	.word	0x080294b9
 8002eb4:	0802932c 	.word	0x0802932c
 8002eb8:	08029373 	.word	0x08029373
 8002ebc:	08029416 	.word	0x08029416
 8002ec0:	0802a4c8 	.word	0x0802a4c8
 8002ec4:	20013804 	.word	0x20013804
 8002ec8:	20013800 	.word	0x20013800

08002ecc <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002ecc:	4b04      	ldr	r3, [pc, #16]	; (8002ee0 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8002ece:	681b      	ldr	r3, [r3, #0]
 8002ed0:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8002ed4:	b10a      	cbz	r2, 8002eda <_ZN8touchgfx3HAL3lcdEv+0xe>
 8002ed6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002ed8:	b900      	cbnz	r0, 8002edc <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 8002eda:	6898      	ldr	r0, [r3, #8]
    }
 8002edc:	4770      	bx	lr
 8002ede:	bf00      	nop
 8002ee0:	200137bc 	.word	0x200137bc

08002ee4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002ee4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002ee6:	4604      	mov	r4, r0
 8002ee8:	4617      	mov	r7, r2
 8002eea:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8002eec:	f011 f8bc 	bl	8014068 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002ef0:	4b10      	ldr	r3, [pc, #64]	; (8002f34 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 8002ef2:	601c      	str	r4, [r3, #0]
      model(m)
 8002ef4:	4b10      	ldr	r3, [pc, #64]	; (8002f38 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 8002ef6:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8002ef8:	4b10      	ldr	r3, [pc, #64]	; (8002f3c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 8002efa:	2500      	movs	r5, #0
 8002efc:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 8002f00:	4b0f      	ldr	r3, [pc, #60]	; (8002f40 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8002f02:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 8002f06:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8002f08:	6803      	ldr	r3, [r0, #0]
 8002f0a:	2101      	movs	r1, #1
 8002f0c:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8002f0e:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 8002f12:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8002f16:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8002f18:	4628      	mov	r0, r5
 8002f1a:	f004 f813 	bl	8006f44 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002f1e:	f7ff ffd5 	bl	8002ecc <_ZN8touchgfx3HAL3lcdEv>
 8002f22:	f01a fa72 	bl	801d40a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8002f26:	f7ff ffd1 	bl	8002ecc <_ZN8touchgfx3HAL3lcdEv>
 8002f2a:	f01a fae9 	bl	801d500 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 8002f2e:	4620      	mov	r0, r4
 8002f30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002f32:	bf00      	nop
 8002f34:	20013810 	.word	0x20013810
 8002f38:	0802a474 	.word	0x0802a474
 8002f3c:	0802a45c 	.word	0x0802a45c
 8002f40:	200137bc 	.word	0x200137bc

08002f44 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002f44:	4b06      	ldr	r3, [pc, #24]	; (8002f60 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv+0x1c>)
 8002f46:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002f4a:	2300      	movs	r3, #0
 8002f4c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002f50:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002f54:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002f58:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002f5c:	4770      	bx	lr
 8002f5e:	bf00      	nop
 8002f60:	08002d79 	.word	0x08002d79

08002f64 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
 8002f64:	4b06      	ldr	r3, [pc, #24]	; (8002f80 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 8002f66:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002f6a:	2300      	movs	r3, #0
 8002f6c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002f70:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002f74:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002f78:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002f7c:	4770      	bx	lr
 8002f7e:	bf00      	nop
 8002f80:	080033e9 	.word	0x080033e9

08002f84 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 8002f84:	4b06      	ldr	r3, [pc, #24]	; (8002fa0 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 8002f86:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002f8a:	2300      	movs	r3, #0
 8002f8c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002f90:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002f94:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002f98:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002f9c:	4770      	bx	lr
 8002f9e:	bf00      	nop
 8002fa0:	08003f8d 	.word	0x08003f8d

08002fa4 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 8002fa4:	4b06      	ldr	r3, [pc, #24]	; (8002fc0 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 8002fa6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002faa:	2300      	movs	r3, #0
 8002fac:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002fb0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002fb4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002fb8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002fbc:	4770      	bx	lr
 8002fbe:	bf00      	nop
 8002fc0:	080032a9 	.word	0x080032a9

08002fc4 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 8002fc4:	4b06      	ldr	r3, [pc, #24]	; (8002fe0 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 8002fc6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002fca:	2300      	movs	r3, #0
 8002fcc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002fd0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002fd4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002fd8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002fdc:	4770      	bx	lr
 8002fde:	bf00      	nop
 8002fe0:	08003e4d 	.word	0x08003e4d

08002fe4 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 8002fe4:	4b06      	ldr	r3, [pc, #24]	; (8003000 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 8002fe6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002fea:	2300      	movs	r3, #0
 8002fec:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002ff0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002ff4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002ff8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002ffc:	4770      	bx	lr
 8002ffe:	bf00      	nop
 8003000:	08003d0d 	.word	0x08003d0d

08003004 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 8003004:	4b06      	ldr	r3, [pc, #24]	; (8003020 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 8003006:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800300a:	2300      	movs	r3, #0
 800300c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003010:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003014:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003018:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800301c:	4770      	bx	lr
 800301e:	bf00      	nop
 8003020:	08003bcd 	.word	0x08003bcd

08003024 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 8003024:	4b06      	ldr	r3, [pc, #24]	; (8003040 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 8003026:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800302a:	2300      	movs	r3, #0
 800302c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003030:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003034:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003038:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800303c:	4770      	bx	lr
 800303e:	bf00      	nop
 8003040:	08003a8d 	.word	0x08003a8d

08003044 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 8003044:	4b06      	ldr	r3, [pc, #24]	; (8003060 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 8003046:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800304a:	2300      	movs	r3, #0
 800304c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003050:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003054:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003058:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800305c:	4770      	bx	lr
 800305e:	bf00      	nop
 8003060:	08003169 	.word	0x08003169

08003064 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 8003064:	4b06      	ldr	r3, [pc, #24]	; (8003080 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 8003066:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800306a:	2300      	movs	r3, #0
 800306c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003070:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003074:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003078:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800307c:	4770      	bx	lr
 800307e:	bf00      	nop
 8003080:	0800394d 	.word	0x0800394d

08003084 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 8003084:	4b06      	ldr	r3, [pc, #24]	; (80030a0 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 8003086:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800308a:	2300      	movs	r3, #0
 800308c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003090:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003094:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003098:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800309c:	4770      	bx	lr
 800309e:	bf00      	nop
 80030a0:	0800380d 	.word	0x0800380d

080030a4 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>:
 80030a4:	4b06      	ldr	r3, [pc, #24]	; (80030c0 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv+0x1c>)
 80030a6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80030aa:	2300      	movs	r3, #0
 80030ac:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80030b0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80030b4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80030b8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80030bc:	4770      	bx	lr
 80030be:	bf00      	nop
 80030c0:	080036cd 	.word	0x080036cd

080030c4 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 80030c4:	4b06      	ldr	r3, [pc, #24]	; (80030e0 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 80030c6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80030ca:	2300      	movs	r3, #0
 80030cc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80030d0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80030d4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80030d8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80030dc:	4770      	bx	lr
 80030de:	bf00      	nop
 80030e0:	0800358d 	.word	0x0800358d

080030e4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 80030e4:	4b06      	ldr	r3, [pc, #24]	; (8003100 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 80030e6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80030ea:	2300      	movs	r3, #0
 80030ec:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80030f0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80030f4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80030f8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80030fc:	4770      	bx	lr
 80030fe:	bf00      	nop
 8003100:	08002b89 	.word	0x08002b89

08003104 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 8003104:	6803      	ldr	r3, [r0, #0]
 8003106:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003108:	4718      	bx	r3
	...

0800310c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 800310c:	4b12      	ldr	r3, [pc, #72]	; (8003158 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 800310e:	b513      	push	{r0, r1, r4, lr}
          solid()
 8003110:	6003      	str	r3, [r0, #0]
 8003112:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003116:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8003118:	4b10      	ldr	r3, [pc, #64]	; (800315c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 800311a:	7241      	strb	r1, [r0, #9]
 800311c:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800311e:	4910      	ldr	r1, [pc, #64]	; (8003160 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8003120:	4b10      	ldr	r3, [pc, #64]	; (8003164 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003122:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8003126:	f9b3 3000 	ldrsh.w	r3, [r3]
 800312a:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 800312c:	2200      	movs	r2, #0
 800312e:	6042      	str	r2, [r0, #4]
 8003130:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8003132:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8003134:	81c2      	strh	r2, [r0, #14]
          solid()
 8003136:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800313a:	e9c0 2207 	strd	r2, r2, [r0, #28]
 800313e:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8003142:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8003146:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003148:	9100      	str	r1, [sp, #0]
 800314a:	3010      	adds	r0, #16
 800314c:	4611      	mov	r1, r2
 800314e:	f7ff f9a1 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8003152:	4620      	mov	r0, r4
 8003154:	b002      	add	sp, #8
 8003156:	bd10      	pop	{r4, pc}
 8003158:	0802a510 	.word	0x0802a510
 800315c:	0802a3f4 	.word	0x0802a3f4
 8003160:	200137b2 	.word	0x200137b2
 8003164:	200137b0 	.word	0x200137b0

08003168 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 8003168:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800316c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003170:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003172:	68a0      	ldr	r0, [r4, #8]
 8003174:	6803      	ldr	r3, [r0, #0]
 8003176:	6a1b      	ldr	r3, [r3, #32]
 8003178:	4798      	blx	r3
 800317a:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 800317e:	d205      	bcs.n	800318c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x24>
 8003180:	4b42      	ldr	r3, [pc, #264]	; (800328c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 8003182:	4a43      	ldr	r2, [pc, #268]	; (8003290 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8003184:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003186:	4843      	ldr	r0, [pc, #268]	; (8003294 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 8003188:	f024 f98a 	bl	80274a0 <__assert_func>
 800318c:	6860      	ldr	r0, [r4, #4]
 800318e:	6803      	ldr	r3, [r0, #0]
 8003190:	6a1b      	ldr	r3, [r3, #32]
 8003192:	4798      	blx	r3
 8003194:	280f      	cmp	r0, #15
 8003196:	d803      	bhi.n	80031a0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x38>
 8003198:	4b3f      	ldr	r3, [pc, #252]	; (8003298 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 800319a:	4a3d      	ldr	r2, [pc, #244]	; (8003290 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 800319c:	21a4      	movs	r1, #164	; 0xa4
 800319e:	e7f2      	b.n	8003186 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80031a0:	68e0      	ldr	r0, [r4, #12]
 80031a2:	6803      	ldr	r3, [r0, #0]
 80031a4:	6a1b      	ldr	r3, [r3, #32]
 80031a6:	4798      	blx	r3
 80031a8:	2837      	cmp	r0, #55	; 0x37
 80031aa:	d803      	bhi.n	80031b4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4c>
 80031ac:	4b3b      	ldr	r3, [pc, #236]	; (800329c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 80031ae:	4a38      	ldr	r2, [pc, #224]	; (8003290 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 80031b0:	21a5      	movs	r1, #165	; 0xa5
 80031b2:	e7e8      	b.n	8003186 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80031b4:	f010 fe24 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80031b8:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80032a0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 80031bc:	3004      	adds	r0, #4
 80031be:	f010 fe85 	bl	8013ecc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80031c2:	f8d9 0000 	ldr.w	r0, [r9]
 80031c6:	b110      	cbz	r0, 80031ce <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 80031c8:	6803      	ldr	r3, [r0, #0]
 80031ca:	68db      	ldr	r3, [r3, #12]
 80031cc:	4798      	blx	r3
    if (*currentTrans)
 80031ce:	f8d9 0000 	ldr.w	r0, [r9]
 80031d2:	b110      	cbz	r0, 80031da <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 80031d4:	6803      	ldr	r3, [r0, #0]
 80031d6:	681b      	ldr	r3, [r3, #0]
 80031d8:	4798      	blx	r3
    if (*currentScreen)
 80031da:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80032a4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 80031de:	f8d8 0000 	ldr.w	r0, [r8]
 80031e2:	b110      	cbz	r0, 80031ea <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80031e4:	6803      	ldr	r3, [r0, #0]
 80031e6:	695b      	ldr	r3, [r3, #20]
 80031e8:	4798      	blx	r3
    if (*currentPresenter)
 80031ea:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80031ee:	b110      	cbz	r0, 80031f6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80031f0:	6803      	ldr	r3, [r0, #0]
 80031f2:	685b      	ldr	r3, [r3, #4]
 80031f4:	4798      	blx	r3
    if (*currentScreen)
 80031f6:	f8d8 0000 	ldr.w	r0, [r8]
 80031fa:	b110      	cbz	r0, 8003202 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 80031fc:	6803      	ldr	r3, [r0, #0]
 80031fe:	681b      	ldr	r3, [r3, #0]
 8003200:	4798      	blx	r3
    if (*currentPresenter)
 8003202:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003206:	b110      	cbz	r0, 800320e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003208:	6803      	ldr	r3, [r0, #0]
 800320a:	689b      	ldr	r3, [r3, #8]
 800320c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800320e:	68e0      	ldr	r0, [r4, #12]
 8003210:	2100      	movs	r1, #0
 8003212:	f7ff ff77 	bl	8003104 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003216:	2114      	movs	r1, #20
 8003218:	4605      	mov	r5, r0
 800321a:	f7ff ff77 	bl	800310c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800321e:	68a0      	ldr	r0, [r4, #8]
 8003220:	6803      	ldr	r3, [r0, #0]
 8003222:	2100      	movs	r1, #0
 8003224:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003226:	4798      	blx	r3
 8003228:	4606      	mov	r6, r0
 800322a:	f004 f86b 	bl	8007304 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800322e:	6860      	ldr	r0, [r4, #4]
 8003230:	6803      	ldr	r3, [r0, #0]
 8003232:	2100      	movs	r1, #0
 8003234:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003236:	4798      	blx	r3
 8003238:	4631      	mov	r1, r6
 800323a:	4604      	mov	r4, r0
 800323c:	f004 f83c 	bl	80072b8 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8003240:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003244:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003248:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800324c:	b1dc      	cbz	r4, 8003286 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x11e>
 800324e:	1d23      	adds	r3, r4, #4
 8003250:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003254:	6833      	ldr	r3, [r6, #0]
 8003256:	f8c4 a008 	str.w	sl, [r4, #8]
 800325a:	4630      	mov	r0, r6
 800325c:	68db      	ldr	r3, [r3, #12]
 800325e:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003260:	4798      	blx	r3
    newPresenter->activate();
 8003262:	6823      	ldr	r3, [r4, #0]
 8003264:	4620      	mov	r0, r4
 8003266:	681b      	ldr	r3, [r3, #0]
 8003268:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800326a:	4629      	mov	r1, r5
 800326c:	4630      	mov	r0, r6
 800326e:	f012 fbf3 	bl	8015a58 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003272:	682b      	ldr	r3, [r5, #0]
 8003274:	4628      	mov	r0, r5
 8003276:	691b      	ldr	r3, [r3, #16]
 8003278:	4798      	blx	r3
    newTransition->invalidate();
 800327a:	682b      	ldr	r3, [r5, #0]
 800327c:	4628      	mov	r0, r5
 800327e:	695b      	ldr	r3, [r3, #20]
}
 8003280:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003284:	4718      	bx	r3
    model->bind(newPresenter);
 8003286:	4623      	mov	r3, r4
 8003288:	e7e2      	b.n	8003250 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xe8>
 800328a:	bf00      	nop
 800328c:	08029190 	.word	0x08029190
 8003290:	080295c1 	.word	0x080295c1
 8003294:	0802932c 	.word	0x0802932c
 8003298:	08029373 	.word	0x08029373
 800329c:	08029416 	.word	0x08029416
 80032a0:	20013804 	.word	0x20013804
 80032a4:	20013800 	.word	0x20013800

080032a8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 80032a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80032ac:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80032b0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80032b2:	68a0      	ldr	r0, [r4, #8]
 80032b4:	6803      	ldr	r3, [r0, #0]
 80032b6:	6a1b      	ldr	r3, [r3, #32]
 80032b8:	4798      	blx	r3
 80032ba:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80032be:	d205      	bcs.n	80032cc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x24>
 80032c0:	4b42      	ldr	r3, [pc, #264]	; (80033cc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 80032c2:	4a43      	ldr	r2, [pc, #268]	; (80033d0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 80032c4:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80032c6:	4843      	ldr	r0, [pc, #268]	; (80033d4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 80032c8:	f024 f8ea 	bl	80274a0 <__assert_func>
 80032cc:	6860      	ldr	r0, [r4, #4]
 80032ce:	6803      	ldr	r3, [r0, #0]
 80032d0:	6a1b      	ldr	r3, [r3, #32]
 80032d2:	4798      	blx	r3
 80032d4:	280f      	cmp	r0, #15
 80032d6:	d803      	bhi.n	80032e0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x38>
 80032d8:	4b3f      	ldr	r3, [pc, #252]	; (80033d8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 80032da:	4a3d      	ldr	r2, [pc, #244]	; (80033d0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 80032dc:	21a4      	movs	r1, #164	; 0xa4
 80032de:	e7f2      	b.n	80032c6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80032e0:	68e0      	ldr	r0, [r4, #12]
 80032e2:	6803      	ldr	r3, [r0, #0]
 80032e4:	6a1b      	ldr	r3, [r3, #32]
 80032e6:	4798      	blx	r3
 80032e8:	2837      	cmp	r0, #55	; 0x37
 80032ea:	d803      	bhi.n	80032f4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4c>
 80032ec:	4b3b      	ldr	r3, [pc, #236]	; (80033dc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 80032ee:	4a38      	ldr	r2, [pc, #224]	; (80033d0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 80032f0:	21a5      	movs	r1, #165	; 0xa5
 80032f2:	e7e8      	b.n	80032c6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80032f4:	f010 fd84 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80032f8:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80033e0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 80032fc:	3004      	adds	r0, #4
 80032fe:	f010 fde5 	bl	8013ecc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003302:	f8d9 0000 	ldr.w	r0, [r9]
 8003306:	b110      	cbz	r0, 800330e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003308:	6803      	ldr	r3, [r0, #0]
 800330a:	68db      	ldr	r3, [r3, #12]
 800330c:	4798      	blx	r3
    if (*currentTrans)
 800330e:	f8d9 0000 	ldr.w	r0, [r9]
 8003312:	b110      	cbz	r0, 800331a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8003314:	6803      	ldr	r3, [r0, #0]
 8003316:	681b      	ldr	r3, [r3, #0]
 8003318:	4798      	blx	r3
    if (*currentScreen)
 800331a:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80033e4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 800331e:	f8d8 0000 	ldr.w	r0, [r8]
 8003322:	b110      	cbz	r0, 800332a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003324:	6803      	ldr	r3, [r0, #0]
 8003326:	695b      	ldr	r3, [r3, #20]
 8003328:	4798      	blx	r3
    if (*currentPresenter)
 800332a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800332e:	b110      	cbz	r0, 8003336 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003330:	6803      	ldr	r3, [r0, #0]
 8003332:	685b      	ldr	r3, [r3, #4]
 8003334:	4798      	blx	r3
    if (*currentScreen)
 8003336:	f8d8 0000 	ldr.w	r0, [r8]
 800333a:	b110      	cbz	r0, 8003342 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 800333c:	6803      	ldr	r3, [r0, #0]
 800333e:	681b      	ldr	r3, [r3, #0]
 8003340:	4798      	blx	r3
    if (*currentPresenter)
 8003342:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003346:	b110      	cbz	r0, 800334e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003348:	6803      	ldr	r3, [r0, #0]
 800334a:	689b      	ldr	r3, [r3, #8]
 800334c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800334e:	68e0      	ldr	r0, [r4, #12]
 8003350:	2100      	movs	r1, #0
 8003352:	f7ff fed7 	bl	8003104 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003356:	2114      	movs	r1, #20
 8003358:	4605      	mov	r5, r0
 800335a:	f7ff fed7 	bl	800310c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800335e:	68a0      	ldr	r0, [r4, #8]
 8003360:	6803      	ldr	r3, [r0, #0]
 8003362:	2100      	movs	r1, #0
 8003364:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003366:	4798      	blx	r3
 8003368:	4606      	mov	r6, r0
 800336a:	f003 ff6b 	bl	8007244 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800336e:	6860      	ldr	r0, [r4, #4]
 8003370:	6803      	ldr	r3, [r0, #0]
 8003372:	2100      	movs	r1, #0
 8003374:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003376:	4798      	blx	r3
 8003378:	4631      	mov	r1, r6
 800337a:	4604      	mov	r4, r0
 800337c:	f003 ff3c 	bl	80071f8 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8003380:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003384:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003388:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800338c:	b1dc      	cbz	r4, 80033c6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x11e>
 800338e:	1d23      	adds	r3, r4, #4
 8003390:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003394:	6833      	ldr	r3, [r6, #0]
 8003396:	f8c4 a008 	str.w	sl, [r4, #8]
 800339a:	4630      	mov	r0, r6
 800339c:	68db      	ldr	r3, [r3, #12]
 800339e:	63f4      	str	r4, [r6, #60]	; 0x3c
 80033a0:	4798      	blx	r3
    newPresenter->activate();
 80033a2:	6823      	ldr	r3, [r4, #0]
 80033a4:	4620      	mov	r0, r4
 80033a6:	681b      	ldr	r3, [r3, #0]
 80033a8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80033aa:	4629      	mov	r1, r5
 80033ac:	4630      	mov	r0, r6
 80033ae:	f012 fb53 	bl	8015a58 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80033b2:	682b      	ldr	r3, [r5, #0]
 80033b4:	4628      	mov	r0, r5
 80033b6:	691b      	ldr	r3, [r3, #16]
 80033b8:	4798      	blx	r3
    newTransition->invalidate();
 80033ba:	682b      	ldr	r3, [r5, #0]
 80033bc:	4628      	mov	r0, r5
 80033be:	695b      	ldr	r3, [r3, #20]
}
 80033c0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80033c4:	4718      	bx	r3
    model->bind(newPresenter);
 80033c6:	4623      	mov	r3, r4
 80033c8:	e7e2      	b.n	8003390 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xe8>
 80033ca:	bf00      	nop
 80033cc:	08029190 	.word	0x08029190
 80033d0:	080296f1 	.word	0x080296f1
 80033d4:	0802932c 	.word	0x0802932c
 80033d8:	08029373 	.word	0x08029373
 80033dc:	08029416 	.word	0x08029416
 80033e0:	20013804 	.word	0x20013804
 80033e4:	20013800 	.word	0x20013800

080033e8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 80033e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80033ec:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80033f0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80033f2:	68a0      	ldr	r0, [r4, #8]
 80033f4:	6803      	ldr	r3, [r0, #0]
 80033f6:	6a1b      	ldr	r3, [r3, #32]
 80033f8:	4798      	blx	r3
 80033fa:	f241 137b 	movw	r3, #4475	; 0x117b
 80033fe:	4298      	cmp	r0, r3
 8003400:	d805      	bhi.n	800340e <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x26>
 8003402:	4b42      	ldr	r3, [pc, #264]	; (800350c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 8003404:	4a42      	ldr	r2, [pc, #264]	; (8003510 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8003406:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003408:	4842      	ldr	r0, [pc, #264]	; (8003514 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 800340a:	f024 f849 	bl	80274a0 <__assert_func>
 800340e:	6860      	ldr	r0, [r4, #4]
 8003410:	6803      	ldr	r3, [r0, #0]
 8003412:	6a1b      	ldr	r3, [r3, #32]
 8003414:	4798      	blx	r3
 8003416:	280f      	cmp	r0, #15
 8003418:	d803      	bhi.n	8003422 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x3a>
 800341a:	4b3f      	ldr	r3, [pc, #252]	; (8003518 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 800341c:	4a3c      	ldr	r2, [pc, #240]	; (8003510 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 800341e:	21a4      	movs	r1, #164	; 0xa4
 8003420:	e7f2      	b.n	8003408 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003422:	68e0      	ldr	r0, [r4, #12]
 8003424:	6803      	ldr	r3, [r0, #0]
 8003426:	6a1b      	ldr	r3, [r3, #32]
 8003428:	4798      	blx	r3
 800342a:	2837      	cmp	r0, #55	; 0x37
 800342c:	d803      	bhi.n	8003436 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4e>
 800342e:	4b3b      	ldr	r3, [pc, #236]	; (800351c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 8003430:	4a37      	ldr	r2, [pc, #220]	; (8003510 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8003432:	21a5      	movs	r1, #165	; 0xa5
 8003434:	e7e8      	b.n	8003408 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003436:	f010 fce3 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800343a:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003520 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 800343e:	3004      	adds	r0, #4
 8003440:	f010 fd44 	bl	8013ecc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003444:	f8d9 0000 	ldr.w	r0, [r9]
 8003448:	b110      	cbz	r0, 8003450 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 800344a:	6803      	ldr	r3, [r0, #0]
 800344c:	68db      	ldr	r3, [r3, #12]
 800344e:	4798      	blx	r3
    if (*currentTrans)
 8003450:	f8d9 0000 	ldr.w	r0, [r9]
 8003454:	b110      	cbz	r0, 800345c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 8003456:	6803      	ldr	r3, [r0, #0]
 8003458:	681b      	ldr	r3, [r3, #0]
 800345a:	4798      	blx	r3
    if (*currentScreen)
 800345c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8003524 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 8003460:	f8d8 0000 	ldr.w	r0, [r8]
 8003464:	b110      	cbz	r0, 800346c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003466:	6803      	ldr	r3, [r0, #0]
 8003468:	695b      	ldr	r3, [r3, #20]
 800346a:	4798      	blx	r3
    if (*currentPresenter)
 800346c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003470:	b110      	cbz	r0, 8003478 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003472:	6803      	ldr	r3, [r0, #0]
 8003474:	685b      	ldr	r3, [r3, #4]
 8003476:	4798      	blx	r3
    if (*currentScreen)
 8003478:	f8d8 0000 	ldr.w	r0, [r8]
 800347c:	b110      	cbz	r0, 8003484 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 800347e:	6803      	ldr	r3, [r0, #0]
 8003480:	681b      	ldr	r3, [r3, #0]
 8003482:	4798      	blx	r3
    if (*currentPresenter)
 8003484:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003488:	b110      	cbz	r0, 8003490 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800348a:	6803      	ldr	r3, [r0, #0]
 800348c:	689b      	ldr	r3, [r3, #8]
 800348e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003490:	68e0      	ldr	r0, [r4, #12]
 8003492:	2100      	movs	r1, #0
 8003494:	f7ff fe36 	bl	8003104 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003498:	2114      	movs	r1, #20
 800349a:	4605      	mov	r5, r0
 800349c:	f7ff fe36 	bl	800310c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80034a0:	68a0      	ldr	r0, [r4, #8]
 80034a2:	6803      	ldr	r3, [r0, #0]
 80034a4:	2100      	movs	r1, #0
 80034a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80034a8:	4798      	blx	r3
 80034aa:	4606      	mov	r6, r0
 80034ac:	f003 fe6a 	bl	8007184 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80034b0:	6860      	ldr	r0, [r4, #4]
 80034b2:	6803      	ldr	r3, [r0, #0]
 80034b4:	2100      	movs	r1, #0
 80034b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80034b8:	4798      	blx	r3
 80034ba:	4631      	mov	r1, r6
 80034bc:	4604      	mov	r4, r0
 80034be:	f003 fe3b 	bl	8007138 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 80034c2:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80034c6:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80034ca:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80034ce:	b1dc      	cbz	r4, 8003508 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x120>
 80034d0:	1d23      	adds	r3, r4, #4
 80034d2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80034d6:	6833      	ldr	r3, [r6, #0]
 80034d8:	f8c4 a008 	str.w	sl, [r4, #8]
 80034dc:	4630      	mov	r0, r6
 80034de:	68db      	ldr	r3, [r3, #12]
 80034e0:	63f4      	str	r4, [r6, #60]	; 0x3c
 80034e2:	4798      	blx	r3
    newPresenter->activate();
 80034e4:	6823      	ldr	r3, [r4, #0]
 80034e6:	4620      	mov	r0, r4
 80034e8:	681b      	ldr	r3, [r3, #0]
 80034ea:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80034ec:	4629      	mov	r1, r5
 80034ee:	4630      	mov	r0, r6
 80034f0:	f012 fab2 	bl	8015a58 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80034f4:	682b      	ldr	r3, [r5, #0]
 80034f6:	4628      	mov	r0, r5
 80034f8:	691b      	ldr	r3, [r3, #16]
 80034fa:	4798      	blx	r3
    newTransition->invalidate();
 80034fc:	682b      	ldr	r3, [r5, #0]
 80034fe:	4628      	mov	r0, r5
 8003500:	695b      	ldr	r3, [r3, #20]
}
 8003502:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003506:	4718      	bx	r3
    model->bind(newPresenter);
 8003508:	4623      	mov	r3, r4
 800350a:	e7e2      	b.n	80034d2 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xea>
 800350c:	08029190 	.word	0x08029190
 8003510:	0802980f 	.word	0x0802980f
 8003514:	0802932c 	.word	0x0802932c
 8003518:	08029373 	.word	0x08029373
 800351c:	08029416 	.word	0x08029416
 8003520:	20013804 	.word	0x20013804
 8003524:	20013800 	.word	0x20013800

08003528 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 8003528:	6803      	ldr	r3, [r0, #0]
 800352a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800352c:	4718      	bx	r3
	...

08003530 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 8003530:	4b12      	ldr	r3, [pc, #72]	; (800357c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8003532:	b513      	push	{r0, r1, r4, lr}
          solid()
 8003534:	6003      	str	r3, [r0, #0]
 8003536:	f44f 7380 	mov.w	r3, #256	; 0x100
 800353a:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 800353c:	4b10      	ldr	r3, [pc, #64]	; (8003580 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 800353e:	7241      	strb	r1, [r0, #9]
 8003540:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003542:	4910      	ldr	r1, [pc, #64]	; (8003584 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8003544:	4b10      	ldr	r3, [pc, #64]	; (8003588 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003546:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 800354a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800354e:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8003550:	2200      	movs	r2, #0
 8003552:	6042      	str	r2, [r0, #4]
 8003554:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8003556:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8003558:	81c2      	strh	r2, [r0, #14]
          solid()
 800355a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800355e:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8003562:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8003566:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 800356a:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800356c:	9100      	str	r1, [sp, #0]
 800356e:	3010      	adds	r0, #16
 8003570:	4611      	mov	r1, r2
 8003572:	f7fe ff8f 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8003576:	4620      	mov	r0, r4
 8003578:	b002      	add	sp, #8
 800357a:	bd10      	pop	{r4, pc}
 800357c:	0802a4ec 	.word	0x0802a4ec
 8003580:	0802a3f4 	.word	0x0802a3f4
 8003584:	200137b2 	.word	0x200137b2
 8003588:	200137b0 	.word	0x200137b0

0800358c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 800358c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003590:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003594:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003596:	68a0      	ldr	r0, [r4, #8]
 8003598:	6803      	ldr	r3, [r0, #0]
 800359a:	6a1b      	ldr	r3, [r3, #32]
 800359c:	4798      	blx	r3
 800359e:	f241 03af 	movw	r3, #4271	; 0x10af
 80035a2:	4298      	cmp	r0, r3
 80035a4:	d805      	bhi.n	80035b2 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 80035a6:	4b42      	ldr	r3, [pc, #264]	; (80036b0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 80035a8:	4a42      	ldr	r2, [pc, #264]	; (80036b4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 80035aa:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80035ac:	4842      	ldr	r0, [pc, #264]	; (80036b8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 80035ae:	f023 ff77 	bl	80274a0 <__assert_func>
 80035b2:	6860      	ldr	r0, [r4, #4]
 80035b4:	6803      	ldr	r3, [r0, #0]
 80035b6:	6a1b      	ldr	r3, [r3, #32]
 80035b8:	4798      	blx	r3
 80035ba:	280f      	cmp	r0, #15
 80035bc:	d803      	bhi.n	80035c6 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 80035be:	4b3f      	ldr	r3, [pc, #252]	; (80036bc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 80035c0:	4a3c      	ldr	r2, [pc, #240]	; (80036b4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 80035c2:	21a4      	movs	r1, #164	; 0xa4
 80035c4:	e7f2      	b.n	80035ac <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80035c6:	68e0      	ldr	r0, [r4, #12]
 80035c8:	6803      	ldr	r3, [r0, #0]
 80035ca:	6a1b      	ldr	r3, [r3, #32]
 80035cc:	4798      	blx	r3
 80035ce:	2837      	cmp	r0, #55	; 0x37
 80035d0:	d803      	bhi.n	80035da <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 80035d2:	4b3b      	ldr	r3, [pc, #236]	; (80036c0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 80035d4:	4a37      	ldr	r2, [pc, #220]	; (80036b4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 80035d6:	21a5      	movs	r1, #165	; 0xa5
 80035d8:	e7e8      	b.n	80035ac <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80035da:	f010 fc11 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80035de:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80036c4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 80035e2:	3004      	adds	r0, #4
 80035e4:	f010 fc72 	bl	8013ecc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80035e8:	f8d9 0000 	ldr.w	r0, [r9]
 80035ec:	b110      	cbz	r0, 80035f4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80035ee:	6803      	ldr	r3, [r0, #0]
 80035f0:	68db      	ldr	r3, [r3, #12]
 80035f2:	4798      	blx	r3
    if (*currentTrans)
 80035f4:	f8d9 0000 	ldr.w	r0, [r9]
 80035f8:	b110      	cbz	r0, 8003600 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80035fa:	6803      	ldr	r3, [r0, #0]
 80035fc:	681b      	ldr	r3, [r3, #0]
 80035fe:	4798      	blx	r3
    if (*currentScreen)
 8003600:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80036c8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 8003604:	f8d8 0000 	ldr.w	r0, [r8]
 8003608:	b110      	cbz	r0, 8003610 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800360a:	6803      	ldr	r3, [r0, #0]
 800360c:	695b      	ldr	r3, [r3, #20]
 800360e:	4798      	blx	r3
    if (*currentPresenter)
 8003610:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003614:	b110      	cbz	r0, 800361c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003616:	6803      	ldr	r3, [r0, #0]
 8003618:	685b      	ldr	r3, [r3, #4]
 800361a:	4798      	blx	r3
    if (*currentScreen)
 800361c:	f8d8 0000 	ldr.w	r0, [r8]
 8003620:	b110      	cbz	r0, 8003628 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003622:	6803      	ldr	r3, [r0, #0]
 8003624:	681b      	ldr	r3, [r3, #0]
 8003626:	4798      	blx	r3
    if (*currentPresenter)
 8003628:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800362c:	b110      	cbz	r0, 8003634 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800362e:	6803      	ldr	r3, [r0, #0]
 8003630:	689b      	ldr	r3, [r3, #8]
 8003632:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003634:	68e0      	ldr	r0, [r4, #12]
 8003636:	2100      	movs	r1, #0
 8003638:	f7ff ff76 	bl	8003528 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800363c:	2114      	movs	r1, #20
 800363e:	4605      	mov	r5, r0
 8003640:	f7ff ff76 	bl	8003530 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003644:	68a0      	ldr	r0, [r4, #8]
 8003646:	6803      	ldr	r3, [r0, #0]
 8003648:	2100      	movs	r1, #0
 800364a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800364c:	4798      	blx	r3
 800364e:	4606      	mov	r6, r0
 8003650:	f004 f83e 	bl	80076d0 <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003654:	6860      	ldr	r0, [r4, #4]
 8003656:	6803      	ldr	r3, [r0, #0]
 8003658:	2100      	movs	r1, #0
 800365a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800365c:	4798      	blx	r3
 800365e:	4631      	mov	r1, r6
 8003660:	4604      	mov	r4, r0
 8003662:	f004 f80f 	bl	8007684 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 8003666:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800366a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800366e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003672:	b1dc      	cbz	r4, 80036ac <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 8003674:	1d23      	adds	r3, r4, #4
 8003676:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800367a:	6833      	ldr	r3, [r6, #0]
 800367c:	f8c4 a008 	str.w	sl, [r4, #8]
 8003680:	4630      	mov	r0, r6
 8003682:	68db      	ldr	r3, [r3, #12]
 8003684:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003686:	4798      	blx	r3
    newPresenter->activate();
 8003688:	6823      	ldr	r3, [r4, #0]
 800368a:	4620      	mov	r0, r4
 800368c:	681b      	ldr	r3, [r3, #0]
 800368e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003690:	4629      	mov	r1, r5
 8003692:	4630      	mov	r0, r6
 8003694:	f012 f9e0 	bl	8015a58 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003698:	682b      	ldr	r3, [r5, #0]
 800369a:	4628      	mov	r0, r5
 800369c:	691b      	ldr	r3, [r3, #16]
 800369e:	4798      	blx	r3
    newTransition->invalidate();
 80036a0:	682b      	ldr	r3, [r5, #0]
 80036a2:	4628      	mov	r0, r5
 80036a4:	695b      	ldr	r3, [r3, #20]
}
 80036a6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80036aa:	4718      	bx	r3
    model->bind(newPresenter);
 80036ac:	4623      	mov	r3, r4
 80036ae:	e7e2      	b.n	8003676 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 80036b0:	08029190 	.word	0x08029190
 80036b4:	08029929 	.word	0x08029929
 80036b8:	0802932c 	.word	0x0802932c
 80036bc:	08029373 	.word	0x08029373
 80036c0:	08029416 	.word	0x08029416
 80036c4:	20013804 	.word	0x20013804
 80036c8:	20013800 	.word	0x20013800

080036cc <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv>:
{
 80036cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80036d0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80036d4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80036d6:	68a0      	ldr	r0, [r4, #8]
 80036d8:	6803      	ldr	r3, [r0, #0]
 80036da:	6a1b      	ldr	r3, [r3, #32]
 80036dc:	4798      	blx	r3
 80036de:	f241 03f7 	movw	r3, #4343	; 0x10f7
 80036e2:	4298      	cmp	r0, r3
 80036e4:	d805      	bhi.n	80036f2 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x26>
 80036e6:	4b42      	ldr	r3, [pc, #264]	; (80037f0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x124>)
 80036e8:	4a42      	ldr	r2, [pc, #264]	; (80037f4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 80036ea:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80036ec:	4842      	ldr	r0, [pc, #264]	; (80037f8 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x12c>)
 80036ee:	f023 fed7 	bl	80274a0 <__assert_func>
 80036f2:	6860      	ldr	r0, [r4, #4]
 80036f4:	6803      	ldr	r3, [r0, #0]
 80036f6:	6a1b      	ldr	r3, [r3, #32]
 80036f8:	4798      	blx	r3
 80036fa:	280f      	cmp	r0, #15
 80036fc:	d803      	bhi.n	8003706 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x3a>
 80036fe:	4b3f      	ldr	r3, [pc, #252]	; (80037fc <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x130>)
 8003700:	4a3c      	ldr	r2, [pc, #240]	; (80037f4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8003702:	21a4      	movs	r1, #164	; 0xa4
 8003704:	e7f2      	b.n	80036ec <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003706:	68e0      	ldr	r0, [r4, #12]
 8003708:	6803      	ldr	r3, [r0, #0]
 800370a:	6a1b      	ldr	r3, [r3, #32]
 800370c:	4798      	blx	r3
 800370e:	2837      	cmp	r0, #55	; 0x37
 8003710:	d803      	bhi.n	800371a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x4e>
 8003712:	4b3b      	ldr	r3, [pc, #236]	; (8003800 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x134>)
 8003714:	4a37      	ldr	r2, [pc, #220]	; (80037f4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8003716:	21a5      	movs	r1, #165	; 0xa5
 8003718:	e7e8      	b.n	80036ec <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800371a:	f010 fb71 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800371e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003804 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x138>
 8003722:	3004      	adds	r0, #4
 8003724:	f010 fbd2 	bl	8013ecc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003728:	f8d9 0000 	ldr.w	r0, [r9]
 800372c:	b110      	cbz	r0, 8003734 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800372e:	6803      	ldr	r3, [r0, #0]
 8003730:	68db      	ldr	r3, [r3, #12]
 8003732:	4798      	blx	r3
    if (*currentTrans)
 8003734:	f8d9 0000 	ldr.w	r0, [r9]
 8003738:	b110      	cbz	r0, 8003740 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800373a:	6803      	ldr	r3, [r0, #0]
 800373c:	681b      	ldr	r3, [r3, #0]
 800373e:	4798      	blx	r3
    if (*currentScreen)
 8003740:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8003808 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x13c>
 8003744:	f8d8 0000 	ldr.w	r0, [r8]
 8003748:	b110      	cbz	r0, 8003750 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800374a:	6803      	ldr	r3, [r0, #0]
 800374c:	695b      	ldr	r3, [r3, #20]
 800374e:	4798      	blx	r3
    if (*currentPresenter)
 8003750:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003754:	b110      	cbz	r0, 800375c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003756:	6803      	ldr	r3, [r0, #0]
 8003758:	685b      	ldr	r3, [r3, #4]
 800375a:	4798      	blx	r3
    if (*currentScreen)
 800375c:	f8d8 0000 	ldr.w	r0, [r8]
 8003760:	b110      	cbz	r0, 8003768 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003762:	6803      	ldr	r3, [r0, #0]
 8003764:	681b      	ldr	r3, [r3, #0]
 8003766:	4798      	blx	r3
    if (*currentPresenter)
 8003768:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800376c:	b110      	cbz	r0, 8003774 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800376e:	6803      	ldr	r3, [r0, #0]
 8003770:	689b      	ldr	r3, [r3, #8]
 8003772:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003774:	68e0      	ldr	r0, [r4, #12]
 8003776:	2100      	movs	r1, #0
 8003778:	f7ff fed6 	bl	8003528 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800377c:	2114      	movs	r1, #20
 800377e:	4605      	mov	r5, r0
 8003780:	f7ff fed6 	bl	8003530 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003784:	68a0      	ldr	r0, [r4, #8]
 8003786:	6803      	ldr	r3, [r0, #0]
 8003788:	2100      	movs	r1, #0
 800378a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800378c:	4798      	blx	r3
 800378e:	4606      	mov	r6, r0
 8003790:	f003 fc70 	bl	8007074 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003794:	6860      	ldr	r0, [r4, #4]
 8003796:	6803      	ldr	r3, [r0, #0]
 8003798:	2100      	movs	r1, #0
 800379a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800379c:	4798      	blx	r3
 800379e:	4631      	mov	r1, r6
 80037a0:	4604      	mov	r4, r0
 80037a2:	f003 fc41 	bl	8007028 <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 80037a6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80037aa:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80037ae:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80037b2:	b1dc      	cbz	r4, 80037ec <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x120>
 80037b4:	1d23      	adds	r3, r4, #4
 80037b6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80037ba:	6833      	ldr	r3, [r6, #0]
 80037bc:	f8c4 a008 	str.w	sl, [r4, #8]
 80037c0:	4630      	mov	r0, r6
 80037c2:	68db      	ldr	r3, [r3, #12]
 80037c4:	63f4      	str	r4, [r6, #60]	; 0x3c
 80037c6:	4798      	blx	r3
    newPresenter->activate();
 80037c8:	6823      	ldr	r3, [r4, #0]
 80037ca:	4620      	mov	r0, r4
 80037cc:	681b      	ldr	r3, [r3, #0]
 80037ce:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80037d0:	4629      	mov	r1, r5
 80037d2:	4630      	mov	r0, r6
 80037d4:	f012 f940 	bl	8015a58 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80037d8:	682b      	ldr	r3, [r5, #0]
 80037da:	4628      	mov	r0, r5
 80037dc:	691b      	ldr	r3, [r3, #16]
 80037de:	4798      	blx	r3
    newTransition->invalidate();
 80037e0:	682b      	ldr	r3, [r5, #0]
 80037e2:	4628      	mov	r0, r5
 80037e4:	695b      	ldr	r3, [r3, #20]
}
 80037e6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80037ea:	4718      	bx	r3
    model->bind(newPresenter);
 80037ec:	4623      	mov	r3, r4
 80037ee:	e7e2      	b.n	80037b6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xea>
 80037f0:	08029190 	.word	0x08029190
 80037f4:	08029a49 	.word	0x08029a49
 80037f8:	0802932c 	.word	0x0802932c
 80037fc:	08029373 	.word	0x08029373
 8003800:	08029416 	.word	0x08029416
 8003804:	20013804 	.word	0x20013804
 8003808:	20013800 	.word	0x20013800

0800380c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 800380c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003810:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003814:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003816:	68a0      	ldr	r0, [r4, #8]
 8003818:	6803      	ldr	r3, [r0, #0]
 800381a:	6a1b      	ldr	r3, [r3, #32]
 800381c:	4798      	blx	r3
 800381e:	f241 33e3 	movw	r3, #5091	; 0x13e3
 8003822:	4298      	cmp	r0, r3
 8003824:	d805      	bhi.n	8003832 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 8003826:	4b42      	ldr	r3, [pc, #264]	; (8003930 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 8003828:	4a42      	ldr	r2, [pc, #264]	; (8003934 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 800382a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800382c:	4842      	ldr	r0, [pc, #264]	; (8003938 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 800382e:	f023 fe37 	bl	80274a0 <__assert_func>
 8003832:	6860      	ldr	r0, [r4, #4]
 8003834:	6803      	ldr	r3, [r0, #0]
 8003836:	6a1b      	ldr	r3, [r3, #32]
 8003838:	4798      	blx	r3
 800383a:	280f      	cmp	r0, #15
 800383c:	d803      	bhi.n	8003846 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 800383e:	4b3f      	ldr	r3, [pc, #252]	; (800393c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 8003840:	4a3c      	ldr	r2, [pc, #240]	; (8003934 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8003842:	21a4      	movs	r1, #164	; 0xa4
 8003844:	e7f2      	b.n	800382c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003846:	68e0      	ldr	r0, [r4, #12]
 8003848:	6803      	ldr	r3, [r0, #0]
 800384a:	6a1b      	ldr	r3, [r3, #32]
 800384c:	4798      	blx	r3
 800384e:	2837      	cmp	r0, #55	; 0x37
 8003850:	d803      	bhi.n	800385a <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 8003852:	4b3b      	ldr	r3, [pc, #236]	; (8003940 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 8003854:	4a37      	ldr	r2, [pc, #220]	; (8003934 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8003856:	21a5      	movs	r1, #165	; 0xa5
 8003858:	e7e8      	b.n	800382c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800385a:	f010 fad1 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800385e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003944 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 8003862:	3004      	adds	r0, #4
 8003864:	f010 fb32 	bl	8013ecc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003868:	f8d9 0000 	ldr.w	r0, [r9]
 800386c:	b110      	cbz	r0, 8003874 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800386e:	6803      	ldr	r3, [r0, #0]
 8003870:	68db      	ldr	r3, [r3, #12]
 8003872:	4798      	blx	r3
    if (*currentTrans)
 8003874:	f8d9 0000 	ldr.w	r0, [r9]
 8003878:	b110      	cbz	r0, 8003880 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800387a:	6803      	ldr	r3, [r0, #0]
 800387c:	681b      	ldr	r3, [r3, #0]
 800387e:	4798      	blx	r3
    if (*currentScreen)
 8003880:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8003948 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 8003884:	f8d8 0000 	ldr.w	r0, [r8]
 8003888:	b110      	cbz	r0, 8003890 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800388a:	6803      	ldr	r3, [r0, #0]
 800388c:	695b      	ldr	r3, [r3, #20]
 800388e:	4798      	blx	r3
    if (*currentPresenter)
 8003890:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003894:	b110      	cbz	r0, 800389c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003896:	6803      	ldr	r3, [r0, #0]
 8003898:	685b      	ldr	r3, [r3, #4]
 800389a:	4798      	blx	r3
    if (*currentScreen)
 800389c:	f8d8 0000 	ldr.w	r0, [r8]
 80038a0:	b110      	cbz	r0, 80038a8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80038a2:	6803      	ldr	r3, [r0, #0]
 80038a4:	681b      	ldr	r3, [r3, #0]
 80038a6:	4798      	blx	r3
    if (*currentPresenter)
 80038a8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80038ac:	b110      	cbz	r0, 80038b4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80038ae:	6803      	ldr	r3, [r0, #0]
 80038b0:	689b      	ldr	r3, [r3, #8]
 80038b2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80038b4:	68e0      	ldr	r0, [r4, #12]
 80038b6:	2100      	movs	r1, #0
 80038b8:	f7ff fe36 	bl	8003528 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80038bc:	2114      	movs	r1, #20
 80038be:	4605      	mov	r5, r0
 80038c0:	f7ff fe36 	bl	8003530 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80038c4:	68a0      	ldr	r0, [r4, #8]
 80038c6:	6803      	ldr	r3, [r0, #0]
 80038c8:	2100      	movs	r1, #0
 80038ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80038cc:	4798      	blx	r3
 80038ce:	4606      	mov	r6, r0
 80038d0:	f003 fdb4 	bl	800743c <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80038d4:	6860      	ldr	r0, [r4, #4]
 80038d6:	6803      	ldr	r3, [r0, #0]
 80038d8:	2100      	movs	r1, #0
 80038da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80038dc:	4798      	blx	r3
 80038de:	4631      	mov	r1, r6
 80038e0:	4604      	mov	r4, r0
 80038e2:	f003 fd85 	bl	80073f0 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 80038e6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80038ea:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80038ee:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80038f2:	b1dc      	cbz	r4, 800392c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 80038f4:	1d23      	adds	r3, r4, #4
 80038f6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80038fa:	6833      	ldr	r3, [r6, #0]
 80038fc:	f8c4 a008 	str.w	sl, [r4, #8]
 8003900:	4630      	mov	r0, r6
 8003902:	68db      	ldr	r3, [r3, #12]
 8003904:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003906:	4798      	blx	r3
    newPresenter->activate();
 8003908:	6823      	ldr	r3, [r4, #0]
 800390a:	4620      	mov	r0, r4
 800390c:	681b      	ldr	r3, [r3, #0]
 800390e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003910:	4629      	mov	r1, r5
 8003912:	4630      	mov	r0, r6
 8003914:	f012 f8a0 	bl	8015a58 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003918:	682b      	ldr	r3, [r5, #0]
 800391a:	4628      	mov	r0, r5
 800391c:	691b      	ldr	r3, [r3, #16]
 800391e:	4798      	blx	r3
    newTransition->invalidate();
 8003920:	682b      	ldr	r3, [r5, #0]
 8003922:	4628      	mov	r0, r5
 8003924:	695b      	ldr	r3, [r3, #20]
}
 8003926:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800392a:	4718      	bx	r3
    model->bind(newPresenter);
 800392c:	4623      	mov	r3, r4
 800392e:	e7e2      	b.n	80038f6 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 8003930:	08029190 	.word	0x08029190
 8003934:	08029b67 	.word	0x08029b67
 8003938:	0802932c 	.word	0x0802932c
 800393c:	08029373 	.word	0x08029373
 8003940:	08029416 	.word	0x08029416
 8003944:	20013804 	.word	0x20013804
 8003948:	20013800 	.word	0x20013800

0800394c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 800394c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003950:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003954:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003956:	68a0      	ldr	r0, [r4, #8]
 8003958:	6803      	ldr	r3, [r0, #0]
 800395a:	6a1b      	ldr	r3, [r3, #32]
 800395c:	4798      	blx	r3
 800395e:	f241 33e3 	movw	r3, #5091	; 0x13e3
 8003962:	4298      	cmp	r0, r3
 8003964:	d805      	bhi.n	8003972 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 8003966:	4b42      	ldr	r3, [pc, #264]	; (8003a70 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 8003968:	4a42      	ldr	r2, [pc, #264]	; (8003a74 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 800396a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800396c:	4842      	ldr	r0, [pc, #264]	; (8003a78 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 800396e:	f023 fd97 	bl	80274a0 <__assert_func>
 8003972:	6860      	ldr	r0, [r4, #4]
 8003974:	6803      	ldr	r3, [r0, #0]
 8003976:	6a1b      	ldr	r3, [r3, #32]
 8003978:	4798      	blx	r3
 800397a:	280f      	cmp	r0, #15
 800397c:	d803      	bhi.n	8003986 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 800397e:	4b3f      	ldr	r3, [pc, #252]	; (8003a7c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 8003980:	4a3c      	ldr	r2, [pc, #240]	; (8003a74 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8003982:	21a4      	movs	r1, #164	; 0xa4
 8003984:	e7f2      	b.n	800396c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003986:	68e0      	ldr	r0, [r4, #12]
 8003988:	6803      	ldr	r3, [r0, #0]
 800398a:	6a1b      	ldr	r3, [r3, #32]
 800398c:	4798      	blx	r3
 800398e:	2837      	cmp	r0, #55	; 0x37
 8003990:	d803      	bhi.n	800399a <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 8003992:	4b3b      	ldr	r3, [pc, #236]	; (8003a80 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 8003994:	4a37      	ldr	r2, [pc, #220]	; (8003a74 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8003996:	21a5      	movs	r1, #165	; 0xa5
 8003998:	e7e8      	b.n	800396c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800399a:	f010 fa31 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800399e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003a84 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 80039a2:	3004      	adds	r0, #4
 80039a4:	f010 fa92 	bl	8013ecc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80039a8:	f8d9 0000 	ldr.w	r0, [r9]
 80039ac:	b110      	cbz	r0, 80039b4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80039ae:	6803      	ldr	r3, [r0, #0]
 80039b0:	68db      	ldr	r3, [r3, #12]
 80039b2:	4798      	blx	r3
    if (*currentTrans)
 80039b4:	f8d9 0000 	ldr.w	r0, [r9]
 80039b8:	b110      	cbz	r0, 80039c0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80039ba:	6803      	ldr	r3, [r0, #0]
 80039bc:	681b      	ldr	r3, [r3, #0]
 80039be:	4798      	blx	r3
    if (*currentScreen)
 80039c0:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8003a88 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 80039c4:	f8d8 0000 	ldr.w	r0, [r8]
 80039c8:	b110      	cbz	r0, 80039d0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80039ca:	6803      	ldr	r3, [r0, #0]
 80039cc:	695b      	ldr	r3, [r3, #20]
 80039ce:	4798      	blx	r3
    if (*currentPresenter)
 80039d0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80039d4:	b110      	cbz	r0, 80039dc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80039d6:	6803      	ldr	r3, [r0, #0]
 80039d8:	685b      	ldr	r3, [r3, #4]
 80039da:	4798      	blx	r3
    if (*currentScreen)
 80039dc:	f8d8 0000 	ldr.w	r0, [r8]
 80039e0:	b110      	cbz	r0, 80039e8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80039e2:	6803      	ldr	r3, [r0, #0]
 80039e4:	681b      	ldr	r3, [r3, #0]
 80039e6:	4798      	blx	r3
    if (*currentPresenter)
 80039e8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80039ec:	b110      	cbz	r0, 80039f4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80039ee:	6803      	ldr	r3, [r0, #0]
 80039f0:	689b      	ldr	r3, [r3, #8]
 80039f2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80039f4:	68e0      	ldr	r0, [r4, #12]
 80039f6:	2100      	movs	r1, #0
 80039f8:	f7ff fd96 	bl	8003528 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80039fc:	2114      	movs	r1, #20
 80039fe:	4605      	mov	r5, r0
 8003a00:	f7ff fd96 	bl	8003530 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003a04:	68a0      	ldr	r0, [r4, #8]
 8003a06:	6803      	ldr	r3, [r0, #0]
 8003a08:	2100      	movs	r1, #0
 8003a0a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003a0c:	4798      	blx	r3
 8003a0e:	4606      	mov	r6, r0
 8003a10:	f003 fcd2 	bl	80073b8 <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003a14:	6860      	ldr	r0, [r4, #4]
 8003a16:	6803      	ldr	r3, [r0, #0]
 8003a18:	2100      	movs	r1, #0
 8003a1a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003a1c:	4798      	blx	r3
 8003a1e:	4631      	mov	r1, r6
 8003a20:	4604      	mov	r4, r0
 8003a22:	f003 fca3 	bl	800736c <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 8003a26:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003a2a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003a2e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003a32:	b1dc      	cbz	r4, 8003a6c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 8003a34:	1d23      	adds	r3, r4, #4
 8003a36:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003a3a:	6833      	ldr	r3, [r6, #0]
 8003a3c:	f8c4 a008 	str.w	sl, [r4, #8]
 8003a40:	4630      	mov	r0, r6
 8003a42:	68db      	ldr	r3, [r3, #12]
 8003a44:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003a46:	4798      	blx	r3
    newPresenter->activate();
 8003a48:	6823      	ldr	r3, [r4, #0]
 8003a4a:	4620      	mov	r0, r4
 8003a4c:	681b      	ldr	r3, [r3, #0]
 8003a4e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003a50:	4629      	mov	r1, r5
 8003a52:	4630      	mov	r0, r6
 8003a54:	f012 f800 	bl	8015a58 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003a58:	682b      	ldr	r3, [r5, #0]
 8003a5a:	4628      	mov	r0, r5
 8003a5c:	691b      	ldr	r3, [r3, #16]
 8003a5e:	4798      	blx	r3
    newTransition->invalidate();
 8003a60:	682b      	ldr	r3, [r5, #0]
 8003a62:	4628      	mov	r0, r5
 8003a64:	695b      	ldr	r3, [r3, #20]
}
 8003a66:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003a6a:	4718      	bx	r3
    model->bind(newPresenter);
 8003a6c:	4623      	mov	r3, r4
 8003a6e:	e7e2      	b.n	8003a36 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 8003a70:	08029190 	.word	0x08029190
 8003a74:	08029cab 	.word	0x08029cab
 8003a78:	0802932c 	.word	0x0802932c
 8003a7c:	08029373 	.word	0x08029373
 8003a80:	08029416 	.word	0x08029416
 8003a84:	20013804 	.word	0x20013804
 8003a88:	20013800 	.word	0x20013800

08003a8c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 8003a8c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003a90:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003a94:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003a96:	68a0      	ldr	r0, [r4, #8]
 8003a98:	6803      	ldr	r3, [r0, #0]
 8003a9a:	6a1b      	ldr	r3, [r3, #32]
 8003a9c:	4798      	blx	r3
 8003a9e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003aa2:	d205      	bcs.n	8003ab0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x24>
 8003aa4:	4b42      	ldr	r3, [pc, #264]	; (8003bb0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 8003aa6:	4a43      	ldr	r2, [pc, #268]	; (8003bb4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8003aa8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003aaa:	4843      	ldr	r0, [pc, #268]	; (8003bb8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 8003aac:	f023 fcf8 	bl	80274a0 <__assert_func>
 8003ab0:	6860      	ldr	r0, [r4, #4]
 8003ab2:	6803      	ldr	r3, [r0, #0]
 8003ab4:	6a1b      	ldr	r3, [r3, #32]
 8003ab6:	4798      	blx	r3
 8003ab8:	280f      	cmp	r0, #15
 8003aba:	d803      	bhi.n	8003ac4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x38>
 8003abc:	4b3f      	ldr	r3, [pc, #252]	; (8003bbc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 8003abe:	4a3d      	ldr	r2, [pc, #244]	; (8003bb4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8003ac0:	21a4      	movs	r1, #164	; 0xa4
 8003ac2:	e7f2      	b.n	8003aaa <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003ac4:	68e0      	ldr	r0, [r4, #12]
 8003ac6:	6803      	ldr	r3, [r0, #0]
 8003ac8:	6a1b      	ldr	r3, [r3, #32]
 8003aca:	4798      	blx	r3
 8003acc:	2837      	cmp	r0, #55	; 0x37
 8003ace:	d803      	bhi.n	8003ad8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4c>
 8003ad0:	4b3b      	ldr	r3, [pc, #236]	; (8003bc0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 8003ad2:	4a38      	ldr	r2, [pc, #224]	; (8003bb4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8003ad4:	21a5      	movs	r1, #165	; 0xa5
 8003ad6:	e7e8      	b.n	8003aaa <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003ad8:	f010 f992 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003adc:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003bc4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 8003ae0:	3004      	adds	r0, #4
 8003ae2:	f010 f9f3 	bl	8013ecc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003ae6:	f8d9 0000 	ldr.w	r0, [r9]
 8003aea:	b110      	cbz	r0, 8003af2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8003aec:	6803      	ldr	r3, [r0, #0]
 8003aee:	68db      	ldr	r3, [r3, #12]
 8003af0:	4798      	blx	r3
    if (*currentTrans)
 8003af2:	f8d9 0000 	ldr.w	r0, [r9]
 8003af6:	b110      	cbz	r0, 8003afe <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8003af8:	6803      	ldr	r3, [r0, #0]
 8003afa:	681b      	ldr	r3, [r3, #0]
 8003afc:	4798      	blx	r3
    if (*currentScreen)
 8003afe:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003bc8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 8003b02:	f8d8 0000 	ldr.w	r0, [r8]
 8003b06:	b110      	cbz	r0, 8003b0e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003b08:	6803      	ldr	r3, [r0, #0]
 8003b0a:	695b      	ldr	r3, [r3, #20]
 8003b0c:	4798      	blx	r3
    if (*currentPresenter)
 8003b0e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003b12:	b110      	cbz	r0, 8003b1a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003b14:	6803      	ldr	r3, [r0, #0]
 8003b16:	685b      	ldr	r3, [r3, #4]
 8003b18:	4798      	blx	r3
    if (*currentScreen)
 8003b1a:	f8d8 0000 	ldr.w	r0, [r8]
 8003b1e:	b110      	cbz	r0, 8003b26 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003b20:	6803      	ldr	r3, [r0, #0]
 8003b22:	681b      	ldr	r3, [r3, #0]
 8003b24:	4798      	blx	r3
    if (*currentPresenter)
 8003b26:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003b2a:	b110      	cbz	r0, 8003b32 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003b2c:	6803      	ldr	r3, [r0, #0]
 8003b2e:	689b      	ldr	r3, [r3, #8]
 8003b30:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003b32:	68e0      	ldr	r0, [r4, #12]
 8003b34:	2100      	movs	r1, #0
 8003b36:	f7ff fcf7 	bl	8003528 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8003b3a:	2114      	movs	r1, #20
 8003b3c:	4605      	mov	r5, r0
 8003b3e:	f7ff fcf7 	bl	8003530 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003b42:	68a0      	ldr	r0, [r4, #8]
 8003b44:	6803      	ldr	r3, [r0, #0]
 8003b46:	2100      	movs	r1, #0
 8003b48:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b4a:	4798      	blx	r3
 8003b4c:	4606      	mov	r6, r0
 8003b4e:	f003 fbd9 	bl	8007304 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003b52:	6860      	ldr	r0, [r4, #4]
 8003b54:	6803      	ldr	r3, [r0, #0]
 8003b56:	2100      	movs	r1, #0
 8003b58:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b5a:	4798      	blx	r3
 8003b5c:	4631      	mov	r1, r6
 8003b5e:	4604      	mov	r4, r0
 8003b60:	f003 fbaa 	bl	80072b8 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8003b64:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003b68:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003b6c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003b70:	b1dc      	cbz	r4, 8003baa <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x11e>
 8003b72:	1d23      	adds	r3, r4, #4
 8003b74:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003b78:	6833      	ldr	r3, [r6, #0]
 8003b7a:	f8c4 a008 	str.w	sl, [r4, #8]
 8003b7e:	4630      	mov	r0, r6
 8003b80:	68db      	ldr	r3, [r3, #12]
 8003b82:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003b84:	4798      	blx	r3
    newPresenter->activate();
 8003b86:	6823      	ldr	r3, [r4, #0]
 8003b88:	4620      	mov	r0, r4
 8003b8a:	681b      	ldr	r3, [r3, #0]
 8003b8c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003b8e:	4629      	mov	r1, r5
 8003b90:	4630      	mov	r0, r6
 8003b92:	f011 ff61 	bl	8015a58 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003b96:	682b      	ldr	r3, [r5, #0]
 8003b98:	4628      	mov	r0, r5
 8003b9a:	691b      	ldr	r3, [r3, #16]
 8003b9c:	4798      	blx	r3
    newTransition->invalidate();
 8003b9e:	682b      	ldr	r3, [r5, #0]
 8003ba0:	4628      	mov	r0, r5
 8003ba2:	695b      	ldr	r3, [r3, #20]
}
 8003ba4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003ba8:	4718      	bx	r3
    model->bind(newPresenter);
 8003baa:	4623      	mov	r3, r4
 8003bac:	e7e2      	b.n	8003b74 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xe8>
 8003bae:	bf00      	nop
 8003bb0:	08029190 	.word	0x08029190
 8003bb4:	08029deb 	.word	0x08029deb
 8003bb8:	0802932c 	.word	0x0802932c
 8003bbc:	08029373 	.word	0x08029373
 8003bc0:	08029416 	.word	0x08029416
 8003bc4:	20013804 	.word	0x20013804
 8003bc8:	20013800 	.word	0x20013800

08003bcc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 8003bcc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003bd0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003bd4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003bd6:	68a0      	ldr	r0, [r4, #8]
 8003bd8:	6803      	ldr	r3, [r0, #0]
 8003bda:	6a1b      	ldr	r3, [r3, #32]
 8003bdc:	4798      	blx	r3
 8003bde:	f241 33e3 	movw	r3, #5091	; 0x13e3
 8003be2:	4298      	cmp	r0, r3
 8003be4:	d805      	bhi.n	8003bf2 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 8003be6:	4b42      	ldr	r3, [pc, #264]	; (8003cf0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 8003be8:	4a42      	ldr	r2, [pc, #264]	; (8003cf4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8003bea:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003bec:	4842      	ldr	r0, [pc, #264]	; (8003cf8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 8003bee:	f023 fc57 	bl	80274a0 <__assert_func>
 8003bf2:	6860      	ldr	r0, [r4, #4]
 8003bf4:	6803      	ldr	r3, [r0, #0]
 8003bf6:	6a1b      	ldr	r3, [r3, #32]
 8003bf8:	4798      	blx	r3
 8003bfa:	280f      	cmp	r0, #15
 8003bfc:	d803      	bhi.n	8003c06 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 8003bfe:	4b3f      	ldr	r3, [pc, #252]	; (8003cfc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 8003c00:	4a3c      	ldr	r2, [pc, #240]	; (8003cf4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8003c02:	21a4      	movs	r1, #164	; 0xa4
 8003c04:	e7f2      	b.n	8003bec <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003c06:	68e0      	ldr	r0, [r4, #12]
 8003c08:	6803      	ldr	r3, [r0, #0]
 8003c0a:	6a1b      	ldr	r3, [r3, #32]
 8003c0c:	4798      	blx	r3
 8003c0e:	2837      	cmp	r0, #55	; 0x37
 8003c10:	d803      	bhi.n	8003c1a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 8003c12:	4b3b      	ldr	r3, [pc, #236]	; (8003d00 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 8003c14:	4a37      	ldr	r2, [pc, #220]	; (8003cf4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8003c16:	21a5      	movs	r1, #165	; 0xa5
 8003c18:	e7e8      	b.n	8003bec <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003c1a:	f010 f8f1 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003c1e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003d04 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 8003c22:	3004      	adds	r0, #4
 8003c24:	f010 f952 	bl	8013ecc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003c28:	f8d9 0000 	ldr.w	r0, [r9]
 8003c2c:	b110      	cbz	r0, 8003c34 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8003c2e:	6803      	ldr	r3, [r0, #0]
 8003c30:	68db      	ldr	r3, [r3, #12]
 8003c32:	4798      	blx	r3
    if (*currentTrans)
 8003c34:	f8d9 0000 	ldr.w	r0, [r9]
 8003c38:	b110      	cbz	r0, 8003c40 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8003c3a:	6803      	ldr	r3, [r0, #0]
 8003c3c:	681b      	ldr	r3, [r3, #0]
 8003c3e:	4798      	blx	r3
    if (*currentScreen)
 8003c40:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8003d08 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 8003c44:	f8d8 0000 	ldr.w	r0, [r8]
 8003c48:	b110      	cbz	r0, 8003c50 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003c4a:	6803      	ldr	r3, [r0, #0]
 8003c4c:	695b      	ldr	r3, [r3, #20]
 8003c4e:	4798      	blx	r3
    if (*currentPresenter)
 8003c50:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003c54:	b110      	cbz	r0, 8003c5c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003c56:	6803      	ldr	r3, [r0, #0]
 8003c58:	685b      	ldr	r3, [r3, #4]
 8003c5a:	4798      	blx	r3
    if (*currentScreen)
 8003c5c:	f8d8 0000 	ldr.w	r0, [r8]
 8003c60:	b110      	cbz	r0, 8003c68 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003c62:	6803      	ldr	r3, [r0, #0]
 8003c64:	681b      	ldr	r3, [r3, #0]
 8003c66:	4798      	blx	r3
    if (*currentPresenter)
 8003c68:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003c6c:	b110      	cbz	r0, 8003c74 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003c6e:	6803      	ldr	r3, [r0, #0]
 8003c70:	689b      	ldr	r3, [r3, #8]
 8003c72:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003c74:	68e0      	ldr	r0, [r4, #12]
 8003c76:	2100      	movs	r1, #0
 8003c78:	f7ff fc56 	bl	8003528 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8003c7c:	2114      	movs	r1, #20
 8003c7e:	4605      	mov	r5, r0
 8003c80:	f7ff fc56 	bl	8003530 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003c84:	68a0      	ldr	r0, [r4, #8]
 8003c86:	6803      	ldr	r3, [r0, #0]
 8003c88:	2100      	movs	r1, #0
 8003c8a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003c8c:	4798      	blx	r3
 8003c8e:	4606      	mov	r6, r0
 8003c90:	f003 fcb8 	bl	8007604 <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003c94:	6860      	ldr	r0, [r4, #4]
 8003c96:	6803      	ldr	r3, [r0, #0]
 8003c98:	2100      	movs	r1, #0
 8003c9a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003c9c:	4798      	blx	r3
 8003c9e:	4631      	mov	r1, r6
 8003ca0:	4604      	mov	r4, r0
 8003ca2:	f003 fc89 	bl	80075b8 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 8003ca6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003caa:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003cae:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003cb2:	b1dc      	cbz	r4, 8003cec <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 8003cb4:	1d23      	adds	r3, r4, #4
 8003cb6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003cba:	6833      	ldr	r3, [r6, #0]
 8003cbc:	f8c4 a008 	str.w	sl, [r4, #8]
 8003cc0:	4630      	mov	r0, r6
 8003cc2:	68db      	ldr	r3, [r3, #12]
 8003cc4:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003cc6:	4798      	blx	r3
    newPresenter->activate();
 8003cc8:	6823      	ldr	r3, [r4, #0]
 8003cca:	4620      	mov	r0, r4
 8003ccc:	681b      	ldr	r3, [r3, #0]
 8003cce:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003cd0:	4629      	mov	r1, r5
 8003cd2:	4630      	mov	r0, r6
 8003cd4:	f011 fec0 	bl	8015a58 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003cd8:	682b      	ldr	r3, [r5, #0]
 8003cda:	4628      	mov	r0, r5
 8003cdc:	691b      	ldr	r3, [r3, #16]
 8003cde:	4798      	blx	r3
    newTransition->invalidate();
 8003ce0:	682b      	ldr	r3, [r5, #0]
 8003ce2:	4628      	mov	r0, r5
 8003ce4:	695b      	ldr	r3, [r3, #20]
}
 8003ce6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003cea:	4718      	bx	r3
    model->bind(newPresenter);
 8003cec:	4623      	mov	r3, r4
 8003cee:	e7e2      	b.n	8003cb6 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 8003cf0:	08029190 	.word	0x08029190
 8003cf4:	08029f1b 	.word	0x08029f1b
 8003cf8:	0802932c 	.word	0x0802932c
 8003cfc:	08029373 	.word	0x08029373
 8003d00:	08029416 	.word	0x08029416
 8003d04:	20013804 	.word	0x20013804
 8003d08:	20013800 	.word	0x20013800

08003d0c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 8003d0c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003d10:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003d14:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003d16:	68a0      	ldr	r0, [r4, #8]
 8003d18:	6803      	ldr	r3, [r0, #0]
 8003d1a:	6a1b      	ldr	r3, [r3, #32]
 8003d1c:	4798      	blx	r3
 8003d1e:	f241 33e3 	movw	r3, #5091	; 0x13e3
 8003d22:	4298      	cmp	r0, r3
 8003d24:	d805      	bhi.n	8003d32 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 8003d26:	4b42      	ldr	r3, [pc, #264]	; (8003e30 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 8003d28:	4a42      	ldr	r2, [pc, #264]	; (8003e34 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8003d2a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003d2c:	4842      	ldr	r0, [pc, #264]	; (8003e38 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 8003d2e:	f023 fbb7 	bl	80274a0 <__assert_func>
 8003d32:	6860      	ldr	r0, [r4, #4]
 8003d34:	6803      	ldr	r3, [r0, #0]
 8003d36:	6a1b      	ldr	r3, [r3, #32]
 8003d38:	4798      	blx	r3
 8003d3a:	280f      	cmp	r0, #15
 8003d3c:	d803      	bhi.n	8003d46 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 8003d3e:	4b3f      	ldr	r3, [pc, #252]	; (8003e3c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 8003d40:	4a3c      	ldr	r2, [pc, #240]	; (8003e34 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8003d42:	21a4      	movs	r1, #164	; 0xa4
 8003d44:	e7f2      	b.n	8003d2c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003d46:	68e0      	ldr	r0, [r4, #12]
 8003d48:	6803      	ldr	r3, [r0, #0]
 8003d4a:	6a1b      	ldr	r3, [r3, #32]
 8003d4c:	4798      	blx	r3
 8003d4e:	2837      	cmp	r0, #55	; 0x37
 8003d50:	d803      	bhi.n	8003d5a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 8003d52:	4b3b      	ldr	r3, [pc, #236]	; (8003e40 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 8003d54:	4a37      	ldr	r2, [pc, #220]	; (8003e34 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8003d56:	21a5      	movs	r1, #165	; 0xa5
 8003d58:	e7e8      	b.n	8003d2c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003d5a:	f010 f851 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003d5e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003e44 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 8003d62:	3004      	adds	r0, #4
 8003d64:	f010 f8b2 	bl	8013ecc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003d68:	f8d9 0000 	ldr.w	r0, [r9]
 8003d6c:	b110      	cbz	r0, 8003d74 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8003d6e:	6803      	ldr	r3, [r0, #0]
 8003d70:	68db      	ldr	r3, [r3, #12]
 8003d72:	4798      	blx	r3
    if (*currentTrans)
 8003d74:	f8d9 0000 	ldr.w	r0, [r9]
 8003d78:	b110      	cbz	r0, 8003d80 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8003d7a:	6803      	ldr	r3, [r0, #0]
 8003d7c:	681b      	ldr	r3, [r3, #0]
 8003d7e:	4798      	blx	r3
    if (*currentScreen)
 8003d80:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8003e48 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 8003d84:	f8d8 0000 	ldr.w	r0, [r8]
 8003d88:	b110      	cbz	r0, 8003d90 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003d8a:	6803      	ldr	r3, [r0, #0]
 8003d8c:	695b      	ldr	r3, [r3, #20]
 8003d8e:	4798      	blx	r3
    if (*currentPresenter)
 8003d90:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003d94:	b110      	cbz	r0, 8003d9c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003d96:	6803      	ldr	r3, [r0, #0]
 8003d98:	685b      	ldr	r3, [r3, #4]
 8003d9a:	4798      	blx	r3
    if (*currentScreen)
 8003d9c:	f8d8 0000 	ldr.w	r0, [r8]
 8003da0:	b110      	cbz	r0, 8003da8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003da2:	6803      	ldr	r3, [r0, #0]
 8003da4:	681b      	ldr	r3, [r3, #0]
 8003da6:	4798      	blx	r3
    if (*currentPresenter)
 8003da8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003dac:	b110      	cbz	r0, 8003db4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003dae:	6803      	ldr	r3, [r0, #0]
 8003db0:	689b      	ldr	r3, [r3, #8]
 8003db2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003db4:	68e0      	ldr	r0, [r4, #12]
 8003db6:	2100      	movs	r1, #0
 8003db8:	f7ff fbb6 	bl	8003528 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8003dbc:	2114      	movs	r1, #20
 8003dbe:	4605      	mov	r5, r0
 8003dc0:	f7ff fbb6 	bl	8003530 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003dc4:	68a0      	ldr	r0, [r4, #8]
 8003dc6:	6803      	ldr	r3, [r0, #0]
 8003dc8:	2100      	movs	r1, #0
 8003dca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003dcc:	4798      	blx	r3
 8003dce:	4606      	mov	r6, r0
 8003dd0:	f003 fbd6 	bl	8007580 <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003dd4:	6860      	ldr	r0, [r4, #4]
 8003dd6:	6803      	ldr	r3, [r0, #0]
 8003dd8:	2100      	movs	r1, #0
 8003dda:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003ddc:	4798      	blx	r3
 8003dde:	4631      	mov	r1, r6
 8003de0:	4604      	mov	r4, r0
 8003de2:	f003 fba7 	bl	8007534 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 8003de6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003dea:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003dee:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003df2:	b1dc      	cbz	r4, 8003e2c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 8003df4:	1d23      	adds	r3, r4, #4
 8003df6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003dfa:	6833      	ldr	r3, [r6, #0]
 8003dfc:	f8c4 a008 	str.w	sl, [r4, #8]
 8003e00:	4630      	mov	r0, r6
 8003e02:	68db      	ldr	r3, [r3, #12]
 8003e04:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003e06:	4798      	blx	r3
    newPresenter->activate();
 8003e08:	6823      	ldr	r3, [r4, #0]
 8003e0a:	4620      	mov	r0, r4
 8003e0c:	681b      	ldr	r3, [r3, #0]
 8003e0e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003e10:	4629      	mov	r1, r5
 8003e12:	4630      	mov	r0, r6
 8003e14:	f011 fe20 	bl	8015a58 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003e18:	682b      	ldr	r3, [r5, #0]
 8003e1a:	4628      	mov	r0, r5
 8003e1c:	691b      	ldr	r3, [r3, #16]
 8003e1e:	4798      	blx	r3
    newTransition->invalidate();
 8003e20:	682b      	ldr	r3, [r5, #0]
 8003e22:	4628      	mov	r0, r5
 8003e24:	695b      	ldr	r3, [r3, #20]
}
 8003e26:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003e2a:	4718      	bx	r3
    model->bind(newPresenter);
 8003e2c:	4623      	mov	r3, r4
 8003e2e:	e7e2      	b.n	8003df6 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 8003e30:	08029190 	.word	0x08029190
 8003e34:	0802a05d 	.word	0x0802a05d
 8003e38:	0802932c 	.word	0x0802932c
 8003e3c:	08029373 	.word	0x08029373
 8003e40:	08029416 	.word	0x08029416
 8003e44:	20013804 	.word	0x20013804
 8003e48:	20013800 	.word	0x20013800

08003e4c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 8003e4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003e50:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003e54:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003e56:	68a0      	ldr	r0, [r4, #8]
 8003e58:	6803      	ldr	r3, [r0, #0]
 8003e5a:	6a1b      	ldr	r3, [r3, #32]
 8003e5c:	4798      	blx	r3
 8003e5e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003e62:	d205      	bcs.n	8003e70 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x24>
 8003e64:	4b42      	ldr	r3, [pc, #264]	; (8003f70 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 8003e66:	4a43      	ldr	r2, [pc, #268]	; (8003f74 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8003e68:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003e6a:	4843      	ldr	r0, [pc, #268]	; (8003f78 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 8003e6c:	f023 fb18 	bl	80274a0 <__assert_func>
 8003e70:	6860      	ldr	r0, [r4, #4]
 8003e72:	6803      	ldr	r3, [r0, #0]
 8003e74:	6a1b      	ldr	r3, [r3, #32]
 8003e76:	4798      	blx	r3
 8003e78:	280f      	cmp	r0, #15
 8003e7a:	d803      	bhi.n	8003e84 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x38>
 8003e7c:	4b3f      	ldr	r3, [pc, #252]	; (8003f7c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 8003e7e:	4a3d      	ldr	r2, [pc, #244]	; (8003f74 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8003e80:	21a4      	movs	r1, #164	; 0xa4
 8003e82:	e7f2      	b.n	8003e6a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003e84:	68e0      	ldr	r0, [r4, #12]
 8003e86:	6803      	ldr	r3, [r0, #0]
 8003e88:	6a1b      	ldr	r3, [r3, #32]
 8003e8a:	4798      	blx	r3
 8003e8c:	2837      	cmp	r0, #55	; 0x37
 8003e8e:	d803      	bhi.n	8003e98 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4c>
 8003e90:	4b3b      	ldr	r3, [pc, #236]	; (8003f80 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 8003e92:	4a38      	ldr	r2, [pc, #224]	; (8003f74 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8003e94:	21a5      	movs	r1, #165	; 0xa5
 8003e96:	e7e8      	b.n	8003e6a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003e98:	f00f ffb2 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003e9c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003f84 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 8003ea0:	3004      	adds	r0, #4
 8003ea2:	f010 f813 	bl	8013ecc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003ea6:	f8d9 0000 	ldr.w	r0, [r9]
 8003eaa:	b110      	cbz	r0, 8003eb2 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8003eac:	6803      	ldr	r3, [r0, #0]
 8003eae:	68db      	ldr	r3, [r3, #12]
 8003eb0:	4798      	blx	r3
    if (*currentTrans)
 8003eb2:	f8d9 0000 	ldr.w	r0, [r9]
 8003eb6:	b110      	cbz	r0, 8003ebe <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8003eb8:	6803      	ldr	r3, [r0, #0]
 8003eba:	681b      	ldr	r3, [r3, #0]
 8003ebc:	4798      	blx	r3
    if (*currentScreen)
 8003ebe:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003f88 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 8003ec2:	f8d8 0000 	ldr.w	r0, [r8]
 8003ec6:	b110      	cbz	r0, 8003ece <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003ec8:	6803      	ldr	r3, [r0, #0]
 8003eca:	695b      	ldr	r3, [r3, #20]
 8003ecc:	4798      	blx	r3
    if (*currentPresenter)
 8003ece:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003ed2:	b110      	cbz	r0, 8003eda <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003ed4:	6803      	ldr	r3, [r0, #0]
 8003ed6:	685b      	ldr	r3, [r3, #4]
 8003ed8:	4798      	blx	r3
    if (*currentScreen)
 8003eda:	f8d8 0000 	ldr.w	r0, [r8]
 8003ede:	b110      	cbz	r0, 8003ee6 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003ee0:	6803      	ldr	r3, [r0, #0]
 8003ee2:	681b      	ldr	r3, [r3, #0]
 8003ee4:	4798      	blx	r3
    if (*currentPresenter)
 8003ee6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003eea:	b110      	cbz	r0, 8003ef2 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003eec:	6803      	ldr	r3, [r0, #0]
 8003eee:	689b      	ldr	r3, [r3, #8]
 8003ef0:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003ef2:	68e0      	ldr	r0, [r4, #12]
 8003ef4:	2100      	movs	r1, #0
 8003ef6:	f7ff fb17 	bl	8003528 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8003efa:	2114      	movs	r1, #20
 8003efc:	4605      	mov	r5, r0
 8003efe:	f7ff fb17 	bl	8003530 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003f02:	68a0      	ldr	r0, [r4, #8]
 8003f04:	6803      	ldr	r3, [r0, #0]
 8003f06:	2100      	movs	r1, #0
 8003f08:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003f0a:	4798      	blx	r3
 8003f0c:	4606      	mov	r6, r0
 8003f0e:	f003 fadd 	bl	80074cc <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003f12:	6860      	ldr	r0, [r4, #4]
 8003f14:	6803      	ldr	r3, [r0, #0]
 8003f16:	2100      	movs	r1, #0
 8003f18:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003f1a:	4798      	blx	r3
 8003f1c:	4631      	mov	r1, r6
 8003f1e:	4604      	mov	r4, r0
 8003f20:	f003 faae 	bl	8007480 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 8003f24:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003f28:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003f2c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003f30:	b1dc      	cbz	r4, 8003f6a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x11e>
 8003f32:	1d23      	adds	r3, r4, #4
 8003f34:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003f38:	6833      	ldr	r3, [r6, #0]
 8003f3a:	f8c4 a008 	str.w	sl, [r4, #8]
 8003f3e:	4630      	mov	r0, r6
 8003f40:	68db      	ldr	r3, [r3, #12]
 8003f42:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003f44:	4798      	blx	r3
    newPresenter->activate();
 8003f46:	6823      	ldr	r3, [r4, #0]
 8003f48:	4620      	mov	r0, r4
 8003f4a:	681b      	ldr	r3, [r3, #0]
 8003f4c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003f4e:	4629      	mov	r1, r5
 8003f50:	4630      	mov	r0, r6
 8003f52:	f011 fd81 	bl	8015a58 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003f56:	682b      	ldr	r3, [r5, #0]
 8003f58:	4628      	mov	r0, r5
 8003f5a:	691b      	ldr	r3, [r3, #16]
 8003f5c:	4798      	blx	r3
    newTransition->invalidate();
 8003f5e:	682b      	ldr	r3, [r5, #0]
 8003f60:	4628      	mov	r0, r5
 8003f62:	695b      	ldr	r3, [r3, #20]
}
 8003f64:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003f68:	4718      	bx	r3
    model->bind(newPresenter);
 8003f6a:	4623      	mov	r3, r4
 8003f6c:	e7e2      	b.n	8003f34 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xe8>
 8003f6e:	bf00      	nop
 8003f70:	08029190 	.word	0x08029190
 8003f74:	0802a19f 	.word	0x0802a19f
 8003f78:	0802932c 	.word	0x0802932c
 8003f7c:	08029373 	.word	0x08029373
 8003f80:	08029416 	.word	0x08029416
 8003f84:	20013804 	.word	0x20013804
 8003f88:	20013800 	.word	0x20013800

08003f8c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 8003f8c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003f90:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003f94:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003f96:	68a0      	ldr	r0, [r4, #8]
 8003f98:	6803      	ldr	r3, [r0, #0]
 8003f9a:	6a1b      	ldr	r3, [r3, #32]
 8003f9c:	4798      	blx	r3
 8003f9e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003fa2:	d205      	bcs.n	8003fb0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x24>
 8003fa4:	4b42      	ldr	r3, [pc, #264]	; (80040b0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 8003fa6:	4a43      	ldr	r2, [pc, #268]	; (80040b4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8003fa8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003faa:	4843      	ldr	r0, [pc, #268]	; (80040b8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 8003fac:	f023 fa78 	bl	80274a0 <__assert_func>
 8003fb0:	6860      	ldr	r0, [r4, #4]
 8003fb2:	6803      	ldr	r3, [r0, #0]
 8003fb4:	6a1b      	ldr	r3, [r3, #32]
 8003fb6:	4798      	blx	r3
 8003fb8:	280f      	cmp	r0, #15
 8003fba:	d803      	bhi.n	8003fc4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x38>
 8003fbc:	4b3f      	ldr	r3, [pc, #252]	; (80040bc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 8003fbe:	4a3d      	ldr	r2, [pc, #244]	; (80040b4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8003fc0:	21a4      	movs	r1, #164	; 0xa4
 8003fc2:	e7f2      	b.n	8003faa <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003fc4:	68e0      	ldr	r0, [r4, #12]
 8003fc6:	6803      	ldr	r3, [r0, #0]
 8003fc8:	6a1b      	ldr	r3, [r3, #32]
 8003fca:	4798      	blx	r3
 8003fcc:	2837      	cmp	r0, #55	; 0x37
 8003fce:	d803      	bhi.n	8003fd8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4c>
 8003fd0:	4b3b      	ldr	r3, [pc, #236]	; (80040c0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 8003fd2:	4a38      	ldr	r2, [pc, #224]	; (80040b4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8003fd4:	21a5      	movs	r1, #165	; 0xa5
 8003fd6:	e7e8      	b.n	8003faa <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003fd8:	f00f ff12 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003fdc:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80040c4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 8003fe0:	3004      	adds	r0, #4
 8003fe2:	f00f ff73 	bl	8013ecc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003fe6:	f8d9 0000 	ldr.w	r0, [r9]
 8003fea:	b110      	cbz	r0, 8003ff2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8003fec:	6803      	ldr	r3, [r0, #0]
 8003fee:	68db      	ldr	r3, [r3, #12]
 8003ff0:	4798      	blx	r3
    if (*currentTrans)
 8003ff2:	f8d9 0000 	ldr.w	r0, [r9]
 8003ff6:	b110      	cbz	r0, 8003ffe <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8003ff8:	6803      	ldr	r3, [r0, #0]
 8003ffa:	681b      	ldr	r3, [r3, #0]
 8003ffc:	4798      	blx	r3
    if (*currentScreen)
 8003ffe:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80040c8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 8004002:	f8d8 0000 	ldr.w	r0, [r8]
 8004006:	b110      	cbz	r0, 800400e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004008:	6803      	ldr	r3, [r0, #0]
 800400a:	695b      	ldr	r3, [r3, #20]
 800400c:	4798      	blx	r3
    if (*currentPresenter)
 800400e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004012:	b110      	cbz	r0, 800401a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004014:	6803      	ldr	r3, [r0, #0]
 8004016:	685b      	ldr	r3, [r3, #4]
 8004018:	4798      	blx	r3
    if (*currentScreen)
 800401a:	f8d8 0000 	ldr.w	r0, [r8]
 800401e:	b110      	cbz	r0, 8004026 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004020:	6803      	ldr	r3, [r0, #0]
 8004022:	681b      	ldr	r3, [r3, #0]
 8004024:	4798      	blx	r3
    if (*currentPresenter)
 8004026:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800402a:	b110      	cbz	r0, 8004032 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 800402c:	6803      	ldr	r3, [r0, #0]
 800402e:	689b      	ldr	r3, [r3, #8]
 8004030:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004032:	68e0      	ldr	r0, [r4, #12]
 8004034:	2100      	movs	r1, #0
 8004036:	f7ff fa77 	bl	8003528 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800403a:	2114      	movs	r1, #20
 800403c:	4605      	mov	r5, r0
 800403e:	f7ff fa77 	bl	8003530 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004042:	68a0      	ldr	r0, [r4, #8]
 8004044:	6803      	ldr	r3, [r0, #0]
 8004046:	2100      	movs	r1, #0
 8004048:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800404a:	4798      	blx	r3
 800404c:	4606      	mov	r6, r0
 800404e:	f003 f8f9 	bl	8007244 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004052:	6860      	ldr	r0, [r4, #4]
 8004054:	6803      	ldr	r3, [r0, #0]
 8004056:	2100      	movs	r1, #0
 8004058:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800405a:	4798      	blx	r3
 800405c:	4631      	mov	r1, r6
 800405e:	4604      	mov	r4, r0
 8004060:	f003 f8ca 	bl	80071f8 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8004064:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004068:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800406c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004070:	b1dc      	cbz	r4, 80040aa <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x11e>
 8004072:	1d23      	adds	r3, r4, #4
 8004074:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004078:	6833      	ldr	r3, [r6, #0]
 800407a:	f8c4 a008 	str.w	sl, [r4, #8]
 800407e:	4630      	mov	r0, r6
 8004080:	68db      	ldr	r3, [r3, #12]
 8004082:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004084:	4798      	blx	r3
    newPresenter->activate();
 8004086:	6823      	ldr	r3, [r4, #0]
 8004088:	4620      	mov	r0, r4
 800408a:	681b      	ldr	r3, [r3, #0]
 800408c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800408e:	4629      	mov	r1, r5
 8004090:	4630      	mov	r0, r6
 8004092:	f011 fce1 	bl	8015a58 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004096:	682b      	ldr	r3, [r5, #0]
 8004098:	4628      	mov	r0, r5
 800409a:	691b      	ldr	r3, [r3, #16]
 800409c:	4798      	blx	r3
    newTransition->invalidate();
 800409e:	682b      	ldr	r3, [r5, #0]
 80040a0:	4628      	mov	r0, r5
 80040a2:	695b      	ldr	r3, [r3, #20]
}
 80040a4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80040a8:	4718      	bx	r3
    model->bind(newPresenter);
 80040aa:	4623      	mov	r3, r4
 80040ac:	e7e2      	b.n	8004074 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xe8>
 80040ae:	bf00      	nop
 80040b0:	08029190 	.word	0x08029190
 80040b4:	0802a2cb 	.word	0x0802a2cb
 80040b8:	0802932c 	.word	0x0802932c
 80040bc:	08029373 	.word	0x08029373
 80040c0:	08029416 	.word	0x08029416
 80040c4:	20013804 	.word	0x20013804
 80040c8:	20013800 	.word	0x20013800

080040cc <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 80040cc:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80040ce:	4770      	bx	lr

080040d0 <_ZN21Gauge_with_ValuesBaseD1Ev>:
}

Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
{

}
 80040d0:	4770      	bx	lr

080040d2 <_ZN21Gauge_with_ValuesBase10initializeEv>:

void Gauge_with_ValuesBase::initialize()
{

}
 80040d2:	4770      	bx	lr

080040d4 <_ZN21Gauge_with_ValuesBaseD0Ev>:
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 80040d4:	b510      	push	{r4, lr}
}
 80040d6:	f44f 7162 	mov.w	r1, #904	; 0x388
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 80040da:	4604      	mov	r4, r0
}
 80040dc:	f022 fbef 	bl	80268be <_ZdlPvj>
 80040e0:	4620      	mov	r0, r4
 80040e2:	bd10      	pop	{r4, pc}

080040e4 <_ZN21Gauge_with_ValuesBaseC1Ev>:
Gauge_with_ValuesBase::Gauge_with_ValuesBase()
 80040e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
          touchable(false),
 80040e8:	f44f 7380 	mov.w	r3, #256	; 0x100
 80040ec:	4680      	mov	r8, r0
        : x(0), y(0), width(0), height(0)
 80040ee:	2600      	movs	r6, #0
 80040f0:	ed2d 8b02 	vpush	{d8}
 80040f4:	8483      	strh	r3, [r0, #36]	; 0x24
 80040f6:	4bb3      	ldr	r3, [pc, #716]	; (80043c4 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e0>)
          firstChild(0)
 80040f8:	6286      	str	r6, [r0, #40]	; 0x28
 80040fa:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80040fe:	e9c0 6603 	strd	r6, r6, [r0, #12]
          nextSibling(0),
 8004102:	e9c0 6605 	strd	r6, r6, [r0, #20]
          cachedAbsX(0),
 8004106:	e9c0 6607 	strd	r6, r6, [r0, #28]
 800410a:	f848 3b2c 	str.w	r3, [r8], #44
 800410e:	b08b      	sub	sp, #44	; 0x2c
 8004110:	4604      	mov	r4, r0
 8004112:	4640      	mov	r0, r8
 8004114:	f7fe f9e4 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 8004118:	f104 0374 	add.w	r3, r4, #116	; 0x74
 800411c:	f104 0bbc 	add.w	fp, r4, #188	; 0xbc
 8004120:	4618      	mov	r0, r3
 8004122:	9303      	str	r3, [sp, #12]
 8004124:	f504 7a82 	add.w	sl, r4, #260	; 0x104
 8004128:	f7fe f9da 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 800412c:	4658      	mov	r0, fp
 800412e:	f7fe f9d7 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 8004132:	f504 79a8 	add.w	r9, r4, #336	; 0x150
        : TextAreaWithWildcardBase(), wc1(0)
 8004136:	4da4      	ldr	r5, [pc, #656]	; (80043c8 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e4>)
        : TextArea()
 8004138:	4650      	mov	r0, sl
 800413a:	f7fe f9d1 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800413e:	f8c4 5104 	str.w	r5, [r4, #260]	; 0x104
 8004142:	f8c4 614c 	str.w	r6, [r4, #332]	; 0x14c
        : TextArea()
 8004146:	4648      	mov	r0, r9
 8004148:	f7fe f9ca 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 800414c:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
 8004150:	f504 77f4 	add.w	r7, r4, #488	; 0x1e8
 8004154:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8004156:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 800415a:	f8c4 6198 	str.w	r6, [r4, #408]	; 0x198
 800415e:	ee08 3a10 	vmov	s16, r3
        : TextArea()
 8004162:	f7fe f9bd 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8004166:	f8c4 519c 	str.w	r5, [r4, #412]	; 0x19c
 800416a:	f8c4 61e4 	str.w	r6, [r4, #484]	; 0x1e4
 800416e:	4638      	mov	r0, r7
 8004170:	f00c fe00 	bl	8010d74 <_ZN8touchgfx5GaugeC1Ev>
        rect.width = width;
 8004174:	4a95      	ldr	r2, [pc, #596]	; (80043cc <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8004176:	60a2      	str	r2, [r4, #8]
    textArea4_2.setXY(217, 109);
 8004178:	4640      	mov	r0, r8
 800417a:	226d      	movs	r2, #109	; 0x6d
 800417c:	21d9      	movs	r1, #217	; 0xd9
 800417e:	ad04      	add	r5, sp, #16
 8004180:	f7fe f97b 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004184:	f04f 33ff 	mov.w	r3, #4294967295
 8004188:	65e3      	str	r3, [r4, #92]	; 0x5c
        boundingArea = calculateBoundingArea();
 800418a:	4641      	mov	r1, r8
 800418c:	4628      	mov	r0, r5
        linespace = space;
 800418e:	f8a4 6060 	strh.w	r6, [r4, #96]	; 0x60
        boundingArea = calculateBoundingArea();
 8004192:	f00c fab7 	bl	8010704 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004196:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800419a:	f104 0c68 	add.w	ip, r4, #104	; 0x68
 800419e:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
        : typedTextId(id)
 80041a2:	4b8b      	ldr	r3, [pc, #556]	; (80043d0 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2ec>)
 80041a4:	9308      	str	r3, [sp, #32]
 80041a6:	221d      	movs	r2, #29
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D6CM));
 80041a8:	a908      	add	r1, sp, #32
 80041aa:	4640      	mov	r0, r8
 80041ac:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 80041b0:	f00c fd42 	bl	8010c38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_2);
 80041b4:	4641      	mov	r1, r8
 80041b6:	4620      	mov	r0, r4
 80041b8:	f00a fb8a 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 109);
 80041bc:	9b03      	ldr	r3, [sp, #12]
 80041be:	4631      	mov	r1, r6
 80041c0:	4618      	mov	r0, r3
 80041c2:	226d      	movs	r2, #109	; 0x6d
 80041c4:	f7fe f959 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 80041c8:	9b03      	ldr	r3, [sp, #12]
        linespace = space;
 80041ca:	f8a4 60a8 	strh.w	r6, [r4, #168]	; 0xa8
        color = newColor;
 80041ce:	f04f 32ff 	mov.w	r2, #4294967295
 80041d2:	f8c4 20a4 	str.w	r2, [r4, #164]	; 0xa4
        boundingArea = calculateBoundingArea();
 80041d6:	4619      	mov	r1, r3
 80041d8:	4628      	mov	r0, r5
 80041da:	f00c fa93 	bl	8010704 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80041de:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80041e2:	4b7b      	ldr	r3, [pc, #492]	; (80043d0 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2ec>)
 80041e4:	9308      	str	r3, [sp, #32]
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YENI));
 80041e6:	9b03      	ldr	r3, [sp, #12]
 80041e8:	f104 0cb0 	add.w	ip, r4, #176	; 0xb0
 80041ec:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 80041f0:	221e      	movs	r2, #30
 80041f2:	a908      	add	r1, sp, #32
 80041f4:	4618      	mov	r0, r3
 80041f6:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 80041fa:	f00c fd1d 	bl	8010c38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_1);
 80041fe:	9b03      	ldr	r3, [sp, #12]
 8004200:	4620      	mov	r0, r4
 8004202:	4619      	mov	r1, r3
 8004204:	f00a fb64 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 0);
 8004208:	4632      	mov	r2, r6
 800420a:	4658      	mov	r0, fp
 800420c:	2171      	movs	r1, #113	; 0x71
 800420e:	f7fe f934 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004212:	f04f 32ff 	mov.w	r2, #4294967295
 8004216:	f8c4 20ec 	str.w	r2, [r4, #236]	; 0xec
        boundingArea = calculateBoundingArea();
 800421a:	4659      	mov	r1, fp
 800421c:	4628      	mov	r0, r5
        linespace = space;
 800421e:	f8a4 60f0 	strh.w	r6, [r4, #240]	; 0xf0
        boundingArea = calculateBoundingArea();
 8004222:	f00c fa6f 	bl	8010704 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004226:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800422a:	f104 03f8 	add.w	r3, r4, #248	; 0xf8
 800422e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004232:	4b67      	ldr	r3, [pc, #412]	; (80043d0 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2ec>)
 8004234:	9308      	str	r3, [sp, #32]
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z8XU));
 8004236:	a908      	add	r1, sp, #32
 8004238:	231f      	movs	r3, #31
 800423a:	4658      	mov	r0, fp
 800423c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8004240:	f00c fcfa 	bl	8010c38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4);
 8004244:	4659      	mov	r1, fp
 8004246:	4620      	mov	r0, r4
 8004248:	f00a fb42 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5.setXY(76, 124);
 800424c:	4650      	mov	r0, sl
 800424e:	227c      	movs	r2, #124	; 0x7c
 8004250:	214c      	movs	r1, #76	; 0x4c
 8004252:	f7fe f912 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8004256:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
        linespace = space;
 800425a:	f8a4 6138 	strh.w	r6, [r4, #312]	; 0x138
        color = newColor;
 800425e:	f04f 32ff 	mov.w	r2, #4294967295
 8004262:	f8c4 2134 	str.w	r2, [r4, #308]	; 0x134
        boundingArea = calculateBoundingArea();
 8004266:	4651      	mov	r1, sl
 8004268:	4628      	mov	r0, r5
 800426a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800426e:	4798      	blx	r3
 8004270:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004274:	f504 73a0 	add.w	r3, r4, #320	; 0x140
 8004278:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800427c:	f04f 081c 	mov.w	r8, #28
 8004280:	4b53      	ldr	r3, [pc, #332]	; (80043d0 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2ec>)
 8004282:	9308      	str	r3, [sp, #32]
    textArea5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RQ3J));
 8004284:	a908      	add	r1, sp, #32
 8004286:	4650      	mov	r0, sl
 8004288:	f8ad 8024 	strh.w	r8, [sp, #36]	; 0x24
 800428c:	f00c fcd4 	bl	8010c38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5);
 8004290:	4651      	mov	r1, sl
 8004292:	4620      	mov	r0, r4
 8004294:	f00a fb1c 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_1.setXY(86, 139);
 8004298:	4648      	mov	r0, r9
 800429a:	228b      	movs	r2, #139	; 0x8b
 800429c:	2156      	movs	r1, #86	; 0x56
 800429e:	f7fe f8ec 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 80042a2:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
        linespace = space;
 80042a6:	f8a4 6184 	strh.w	r6, [r4, #388]	; 0x184
        color = newColor;
 80042aa:	f04f 32ff 	mov.w	r2, #4294967295
 80042ae:	f8c4 2180 	str.w	r2, [r4, #384]	; 0x180
        boundingArea = calculateBoundingArea();
 80042b2:	4649      	mov	r1, r9
 80042b4:	4628      	mov	r0, r5
 80042b6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80042ba:	4798      	blx	r3
 80042bc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80042c0:	f504 73c6 	add.w	r3, r4, #396	; 0x18c
 80042c4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80042c8:	4b41      	ldr	r3, [pc, #260]	; (80043d0 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2ec>)
 80042ca:	9308      	str	r3, [sp, #32]
    textArea5_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_54VS));
 80042cc:	a908      	add	r1, sp, #32
 80042ce:	231b      	movs	r3, #27
 80042d0:	4648      	mov	r0, r9
 80042d2:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80042d6:	f00c fcaf 	bl	8010c38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_1);
 80042da:	4649      	mov	r1, r9
 80042dc:	4620      	mov	r0, r4
 80042de:	f00a faf7 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_2.setXY(86, 154);
 80042e2:	ee18 0a10 	vmov	r0, s16
 80042e6:	229a      	movs	r2, #154	; 0x9a
 80042e8:	2156      	movs	r1, #86	; 0x56
 80042ea:	f7fe f8c6 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 80042ee:	f8d4 319c 	ldr.w	r3, [r4, #412]	; 0x19c
        linespace = space;
 80042f2:	f8a4 61d0 	strh.w	r6, [r4, #464]	; 0x1d0
        color = newColor;
 80042f6:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 80042fa:	ee18 1a10 	vmov	r1, s16
        color = newColor;
 80042fe:	f8c4 21cc 	str.w	r2, [r4, #460]	; 0x1cc
        boundingArea = calculateBoundingArea();
 8004302:	4628      	mov	r0, r5
 8004304:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8004308:	4798      	blx	r3
 800430a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800430e:	f504 73ec 	add.w	r3, r4, #472	; 0x1d8
 8004312:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004316:	4b2e      	ldr	r3, [pc, #184]	; (80043d0 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2ec>)
 8004318:	9308      	str	r3, [sp, #32]
    textArea5_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UKDF));
 800431a:	ee18 0a10 	vmov	r0, s16
 800431e:	231a      	movs	r3, #26
 8004320:	a908      	add	r1, sp, #32
 8004322:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8004326:	f00c fc87 	bl	8010c38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_2);
 800432a:	ee18 1a10 	vmov	r1, s16
 800432e:	4620      	mov	r0, r4
 8004330:	f00a face 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004334:	2304      	movs	r3, #4
    gauge1.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8004336:	a908      	add	r1, sp, #32
 8004338:	4638      	mov	r0, r7
 800433a:	f8ad 3020 	strh.w	r3, [sp, #32]
 800433e:	f00a fa59 	bl	800e7f4 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
        setXY(x, y);
 8004342:	2212      	movs	r2, #18
 8004344:	4641      	mov	r1, r8
 8004346:	4638      	mov	r0, r7
 8004348:	f7fe f897 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800434c:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 8004350:	4638      	mov	r0, r7
 8004352:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004354:	21b8      	movs	r1, #184	; 0xb8
 8004356:	4798      	blx	r3
        setHeight(height);
 8004358:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 800435c:	4638      	mov	r0, r7
 800435e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004360:	216a      	movs	r1, #106	; 0x6a
 8004362:	4798      	blx	r3
    gauge1.setCenter(92, 92);
 8004364:	225c      	movs	r2, #92	; 0x5c
 8004366:	4611      	mov	r1, r2
 8004368:	4638      	mov	r0, r7
 800436a:	f00c fdae 	bl	8010eca <_ZN8touchgfx5Gauge9setCenterEii>
    gauge1.setStartEndAngle(-90, 90);
 800436e:	4638      	mov	r0, r7
 8004370:	225a      	movs	r2, #90	; 0x5a
 8004372:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8004376:	f00c fe2d 	bl	8010fd4 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    gauge1.setRange(-90, 90);
 800437a:	4633      	mov	r3, r6
 800437c:	225a      	movs	r2, #90	; 0x5a
 800437e:	4638      	mov	r0, r7
 8004380:	9600      	str	r6, [sp, #0]
 8004382:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8004386:	f00a f8e2 	bl	800e54e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    gauge1.setValue(0);
 800438a:	4631      	mov	r1, r6
 800438c:	4638      	mov	r0, r7
 800438e:	f00c fdcb 	bl	8010f28 <_ZN8touchgfx5Gauge8setValueEi>
    gauge1.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8004392:	2335      	movs	r3, #53	; 0x35
 8004394:	2208      	movs	r2, #8
 8004396:	4638      	mov	r0, r7
 8004398:	2105      	movs	r1, #5
 800439a:	f00c fd81 	bl	8010ea0 <_ZN8touchgfx5Gauge9setNeedleEtss>
    gauge1.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 800439e:	4638      	mov	r0, r7
 80043a0:	2101      	movs	r1, #1
 80043a2:	f00c fd1f 	bl	8010de4 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    gauge1.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80043a6:	4638      	mov	r0, r7
 80043a8:	2101      	movs	r1, #1
 80043aa:	f00c fd1e 	bl	8010dea <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    add(gauge1);
 80043ae:	4620      	mov	r0, r4
 80043b0:	4639      	mov	r1, r7
 80043b2:	f00a fa8d 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80043b6:	4620      	mov	r0, r4
 80043b8:	b00b      	add	sp, #44	; 0x2c
 80043ba:	ecbd 8b02 	vpop	{d8}
 80043be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80043c2:	bf00      	nop
 80043c4:	0802a534 	.word	0x0802a534
 80043c8:	080290bc 	.word	0x080290bc
 80043cc:	00a900f0 	.word	0x00a900f0
 80043d0:	080290ac 	.word	0x080290ac

080043d4 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 80043d4:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80043d6:	4770      	bx	lr

080043d8 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 80043d8:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80043da:	4770      	bx	lr

080043dc <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 80043dc:	4770      	bx	lr

080043de <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 80043de:	888b      	ldrh	r3, [r1, #4]
 80043e0:	69c0      	ldr	r0, [r0, #28]
 80043e2:	680a      	ldr	r2, [r1, #0]
 80043e4:	0adb      	lsrs	r3, r3, #11
 80043e6:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 80043ea:	4410      	add	r0, r2
 80043ec:	4770      	bx	lr

080043ee <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80043ee:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 80043f0:	b1c2      	cbz	r2, 8004424 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 80043f2:	7b13      	ldrb	r3, [r2, #12]
 80043f4:	b1b3      	cbz	r3, 8004424 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80043f6:	7b54      	ldrb	r4, [r2, #13]
 80043f8:	7ad2      	ldrb	r2, [r2, #11]
 80043fa:	0224      	lsls	r4, r4, #8
 80043fc:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8004400:	4314      	orrs	r4, r2
 8004402:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8004404:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8004406:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 800440a:	8813      	ldrh	r3, [r2, #0]
 800440c:	428b      	cmp	r3, r1
 800440e:	d102      	bne.n	8004416 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8004410:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8004414:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8004416:	d805      	bhi.n	8004424 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8004418:	3801      	subs	r0, #1
 800441a:	b280      	uxth	r0, r0
 800441c:	3204      	adds	r2, #4
 800441e:	2800      	cmp	r0, #0
 8004420:	d1f3      	bne.n	800440a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8004422:	e7f7      	b.n	8004414 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8004424:	2000      	movs	r0, #0
 8004426:	e7f5      	b.n	8004414 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08004428 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8004428:	b510      	push	{r4, lr}
 800442a:	212c      	movs	r1, #44	; 0x2c
 800442c:	4604      	mov	r4, r0
 800442e:	f022 fa46 	bl	80268be <_ZdlPvj>
 8004432:	4620      	mov	r0, r4
 8004434:	bd10      	pop	{r4, pc}
	...

08004438 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8004438:	b530      	push	{r4, r5, lr}
 800443a:	b08b      	sub	sp, #44	; 0x2c
 800443c:	4604      	mov	r4, r0
      arabicTable(formsTable)
 800443e:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 8004442:	9508      	str	r5, [sp, #32]
 8004444:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 8004448:	9507      	str	r5, [sp, #28]
 800444a:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800444e:	9506      	str	r5, [sp, #24]
 8004450:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8004454:	9505      	str	r5, [sp, #20]
 8004456:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800445a:	9504      	str	r5, [sp, #16]
 800445c:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8004460:	9503      	str	r5, [sp, #12]
 8004462:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8004466:	9502      	str	r5, [sp, #8]
 8004468:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 800446c:	9501      	str	r5, [sp, #4]
 800446e:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8004472:	9500      	str	r5, [sp, #0]
 8004474:	f010 fe5a 	bl	801512c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8004478:	4b06      	ldr	r3, [pc, #24]	; (8004494 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 800447a:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 800447c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800447e:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8004480:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8004482:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8004484:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8004486:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 8004488:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800448a:	62a3      	str	r3, [r4, #40]	; 0x28
}
 800448c:	4620      	mov	r0, r4
 800448e:	b00b      	add	sp, #44	; 0x2c
 8004490:	bd30      	pop	{r4, r5, pc}
 8004492:	bf00      	nop
 8004494:	0802a5c8 	.word	0x0802a5c8

08004498 <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 8004498:	4770      	bx	lr

0800449a <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800449a:	4770      	bx	lr

0800449c <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800449c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800449e:	68c2      	ldr	r2, [r0, #12]
 80044a0:	6844      	ldr	r4, [r0, #4]
 80044a2:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80044a4:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80044a6:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80044aa:	07d2      	lsls	r2, r2, #31
 80044ac:	bf48      	it	mi
 80044ae:	5962      	ldrmi	r2, [r4, r5]
 80044b0:	689b      	ldr	r3, [r3, #8]
    }
 80044b2:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80044b4:	bf48      	it	mi
 80044b6:	58d3      	ldrmi	r3, [r2, r3]
 80044b8:	4718      	bx	r3

080044ba <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80044ba:	6843      	ldr	r3, [r0, #4]
 80044bc:	b12b      	cbz	r3, 80044ca <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80044be:	6883      	ldr	r3, [r0, #8]
 80044c0:	b92b      	cbnz	r3, 80044ce <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80044c2:	68c0      	ldr	r0, [r0, #12]
 80044c4:	f000 0001 	and.w	r0, r0, #1
 80044c8:	4770      	bx	lr
 80044ca:	4618      	mov	r0, r3
 80044cc:	4770      	bx	lr
 80044ce:	2001      	movs	r0, #1
    }
 80044d0:	4770      	bx	lr

080044d2 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80044d2:	b510      	push	{r4, lr}
 80044d4:	2110      	movs	r1, #16
 80044d6:	4604      	mov	r4, r0
 80044d8:	f022 f9f1 	bl	80268be <_ZdlPvj>
 80044dc:	4620      	mov	r0, r4
 80044de:	bd10      	pop	{r4, pc}

080044e0 <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 80044e0:	b510      	push	{r4, lr}
 80044e2:	4b03      	ldr	r3, [pc, #12]	; (80044f0 <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 80044e4:	6003      	str	r3, [r0, #0]
 80044e6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80044e8:	f00d ff88 	bl	80123fc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80044ec:	4620      	mov	r0, r4
 80044ee:	bd10      	pop	{r4, pc}
 80044f0:	0802a640 	.word	0x0802a640

080044f4 <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 80044f4:	b507      	push	{r0, r1, r2, lr}
 80044f6:	4b07      	ldr	r3, [pc, #28]	; (8004514 <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 80044f8:	6003      	str	r3, [r0, #0]
 80044fa:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80044fc:	f00d ff7e 	bl	80123fc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8004500:	9801      	ldr	r0, [sp, #4]
 8004502:	f241 117c 	movw	r1, #4476	; 0x117c
 8004506:	f022 f9da 	bl	80268be <_ZdlPvj>
 800450a:	9801      	ldr	r0, [sp, #4]
 800450c:	b003      	add	sp, #12
 800450e:	f85d fb04 	ldr.w	pc, [sp], #4
 8004512:	bf00      	nop
 8004514:	0802a640 	.word	0x0802a640

08004518 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8004518:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel1)
 800451a:	f500 7334 	add.w	r3, r0, #720	; 0x2d0
 800451e:	4299      	cmp	r1, r3
{
 8004520:	4604      	mov	r4, r0
 8004522:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel1)
 8004524:	d103      	bne.n	800452e <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8004526:	f00f fc6b 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 800452a:	f7fe fd2b 	bl	8002f84 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 800452e:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8004532:	429d      	cmp	r5, r3
 8004534:	d103      	bne.n	800453e <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8004536:	f00f fc63 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Calibration
        //Go to Calibration with screen transition towards East
        application().gotoCalibrationScreenWipeTransitionEast();
 800453a:	f7fe fdb3 	bl	80030a4 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel3)
 800453e:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8004542:	429d      	cmp	r5, r3
 8004544:	d103      	bne.n	800454e <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 8004546:	f00f fc5b 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel3 clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 800454a:	f7fe fdbb 	bl	80030c4 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon1)
 800454e:	f504 7446 	add.w	r4, r4, #792	; 0x318
 8004552:	42a5      	cmp	r5, r4
 8004554:	d10a      	bne.n	800456c <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon1 clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8004556:	4806      	ldr	r0, [pc, #24]	; (8004570 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 8004558:	2200      	movs	r2, #0
 800455a:	2120      	movs	r1, #32
 800455c:	f003 fed2 	bl	8008304 <HAL_GPIO_WritePin>
 8004560:	f00f fc4e 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon1 clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 8004564:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 8004568:	f7fe bdbc 	b.w	80030e4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800456c:	bd38      	pop	{r3, r4, r5, pc}
 800456e:	bf00      	nop
 8004570:	40021000 	.word	0x40021000

08004574 <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 8004574:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004578:	ed2d 8b06 	vpush	{d8-d10}
 800457c:	4604      	mov	r4, r0
 800457e:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 8004580:	46a3      	mov	fp, r4
        : presenter(0)
 8004582:	2500      	movs	r5, #0
 8004584:	f011 f8bc 	bl	8015700 <_ZN8touchgfx6ScreenC1Ev>
 8004588:	4b6a      	ldr	r3, [pc, #424]	; (8004734 <_ZN17Main_MenuViewBaseC1Ev+0x1c0>)
 800458a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800458c:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8004590:	2226      	movs	r2, #38	; 0x26
 8004592:	4629      	mov	r1, r5
 8004594:	4658      	mov	r0, fp
 8004596:	f023 f988 	bl	80278aa <memset>
 800459a:	4658      	mov	r0, fp
 800459c:	f7fd ff8e 	bl	80024bc <_ZN8touchgfx6WidgetC1Ev>
 80045a0:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80045a4:	26ff      	movs	r6, #255	; 0xff
 80045a6:	4b64      	ldr	r3, [pc, #400]	; (8004738 <_ZN17Main_MenuViewBaseC1Ev+0x1c4>)
 80045a8:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80045aa:	2226      	movs	r2, #38	; 0x26
 80045ac:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80045b0:	4629      	mov	r1, r5
 80045b2:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80045b6:	4650      	mov	r0, sl
        : color(col)
 80045b8:	66a5      	str	r5, [r4, #104]	; 0x68
 80045ba:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80045be:	f023 f974 	bl	80278aa <memset>
 80045c2:	4650      	mov	r0, sl
 80045c4:	f7fd ff7a 	bl	80024bc <_ZN8touchgfx6WidgetC1Ev>
 80045c8:	4b5c      	ldr	r3, [pc, #368]	; (800473c <_ZN17Main_MenuViewBaseC1Ev+0x1c8>)
 80045ca:	66e3      	str	r3, [r4, #108]	; 0x6c
 80045cc:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 80045d0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80045d4:	a90c      	add	r1, sp, #48	; 0x30
 80045d6:	4650      	mov	r0, sl
 80045d8:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80045dc:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80045e0:	f00c ff05 	bl	80113ee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80045e4:	4648      	mov	r0, r9
 80045e6:	f7fd ff7b 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 80045ea:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 80045ee:	4b54      	ldr	r3, [pc, #336]	; (8004740 <_ZN17Main_MenuViewBaseC1Ev+0x1cc>)
 80045f0:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80045f4:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80045f8:	4638      	mov	r0, r7
 80045fa:	f00b fdc1 	bl	8010180 <_ZN8touchgfx4LineC1Ev>
 80045fe:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8004602:	4618      	mov	r0, r3
 8004604:	9303      	str	r3, [sp, #12]
 8004606:	f7fc fe5b 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800460a:	4b4e      	ldr	r3, [pc, #312]	; (8004744 <_ZN17Main_MenuViewBaseC1Ev+0x1d0>)
 800460c:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8004610:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8004614:	3324      	adds	r3, #36	; 0x24
 8004616:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 800461a:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 800461e:	4640      	mov	r0, r8
 8004620:	f7fd ff5e 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 8004624:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8004628:	4618      	mov	r0, r3
 800462a:	ee08 3a10 	vmov	s16, r3
 800462e:	f7fd ff57 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 8004632:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8004636:	4618      	mov	r0, r3
 8004638:	ee08 3a90 	vmov	s17, r3
 800463c:	f7fd ff50 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 8004640:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8004644:	4618      	mov	r0, r3
 8004646:	ee09 3a10 	vmov	s18, r3
 800464a:	f00d f811 	bl	8011670 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800464e:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8004652:	4618      	mov	r0, r3
 8004654:	ee09 3a90 	vmov	s19, r3
 8004658:	f00d f80a 	bl	8011670 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800465c:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8004660:	4618      	mov	r0, r3
 8004662:	ee0a 3a10 	vmov	s20, r3
 8004666:	f00d f803 	bl	8011670 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800466a:	f504 7346 	add.w	r3, r4, #792	; 0x318
 800466e:	4618      	mov	r0, r3
 8004670:	ee0a 3a90 	vmov	s21, r3
 8004674:	f00c fe94 	bl	80113a0 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8004678:	4a33      	ldr	r2, [pc, #204]	; (8004748 <_ZN17Main_MenuViewBaseC1Ev+0x1d4>)
 800467a:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800467e:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 8004682:	4a32      	ldr	r2, [pc, #200]	; (800474c <_ZN17Main_MenuViewBaseC1Ev+0x1d8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8004684:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8004688:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 800468c:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 8004690:	f00d feaa 	bl	80123e8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8004694:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8004698:	462a      	mov	r2, r5
 800469a:	4658      	mov	r0, fp
 800469c:	9300      	str	r3, [sp, #0]
 800469e:	4629      	mov	r1, r5
 80046a0:	23f0      	movs	r3, #240	; 0xf0
 80046a2:	f7fd fef7 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
 80046a6:	1d26      	adds	r6, r4, #4
        color = newColor;
 80046a8:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80046ac:	66a3      	str	r3, [r4, #104]	; 0x68
 80046ae:	4659      	mov	r1, fp
 80046b0:	4630      	mov	r0, r6
 80046b2:	f00a f90d 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80046b6:	462a      	mov	r2, r5
 80046b8:	4650      	mov	r0, sl
 80046ba:	4629      	mov	r1, r5
 80046bc:	f7fd fedd 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 80046c0:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80046c2:	4650      	mov	r0, sl
 80046c4:	a90c      	add	r1, sp, #48	; 0x30
 80046c6:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80046ca:	f00c fe90 	bl	80113ee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80046ce:	4651      	mov	r1, sl
 80046d0:	4630      	mov	r0, r6
 80046d2:	f00a f8fd 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(86, 308);
 80046d6:	f44f 729a 	mov.w	r2, #308	; 0x134
 80046da:	2156      	movs	r1, #86	; 0x56
 80046dc:	4648      	mov	r0, r9
 80046de:	f7fd fecc 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 80046e2:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80046e6:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80046ea:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 80046ee:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 80046f2:	4650      	mov	r0, sl
 80046f4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80046f8:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80046fc:	4649      	mov	r1, r9
 80046fe:	4798      	blx	r3
 8004700:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8004704:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8004708:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800470c:	4b10      	ldr	r3, [pc, #64]	; (8004750 <_ZN17Main_MenuViewBaseC1Ev+0x1dc>)
 800470e:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 8004710:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 8004714:	b92b      	cbnz	r3, 8004722 <_ZN17Main_MenuViewBaseC1Ev+0x1ae>
 8004716:	4b0f      	ldr	r3, [pc, #60]	; (8004754 <_ZN17Main_MenuViewBaseC1Ev+0x1e0>)
 8004718:	4a0f      	ldr	r2, [pc, #60]	; (8004758 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 800471a:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800471c:	480f      	ldr	r0, [pc, #60]	; (800475c <_ZN17Main_MenuViewBaseC1Ev+0x1e8>)
 800471e:	f022 febf 	bl	80274a0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8004722:	4b0f      	ldr	r3, [pc, #60]	; (8004760 <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004724:	881b      	ldrh	r3, [r3, #0]
 8004726:	2b18      	cmp	r3, #24
 8004728:	d81e      	bhi.n	8004768 <_ZN17Main_MenuViewBaseC1Ev+0x1f4>
 800472a:	4b0e      	ldr	r3, [pc, #56]	; (8004764 <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 800472c:	4a0a      	ldr	r2, [pc, #40]	; (8004758 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 800472e:	2161      	movs	r1, #97	; 0x61
 8004730:	e7f4      	b.n	800471c <_ZN17Main_MenuViewBaseC1Ev+0x1a8>
 8004732:	bf00      	nop
 8004734:	0802a640 	.word	0x0802a640
 8004738:	0802b514 	.word	0x0802b514
 800473c:	0802b6dc 	.word	0x0802b6dc
 8004740:	080290bc 	.word	0x080290bc
 8004744:	0802b248 	.word	0x0802b248
 8004748:	0802a628 	.word	0x0802a628
 800474c:	08004519 	.word	0x08004519
 8004750:	20013814 	.word	0x20013814
 8004754:	08028efc 	.word	0x08028efc
 8004758:	08028ffe 	.word	0x08028ffe
 800475c:	08028f79 	.word	0x08028f79
 8004760:	20013818 	.word	0x20013818
 8004764:	08028fc0 	.word	0x08028fc0
        return texts->getText(typedTextId);
 8004768:	4ba5      	ldr	r3, [pc, #660]	; (8004a00 <_ZN17Main_MenuViewBaseC1Ev+0x48c>)
 800476a:	2118      	movs	r1, #24
 800476c:	6818      	ldr	r0, [r3, #0]
 800476e:	f002 fc25 	bl	8006fbc <_ZNK8touchgfx5Texts7getTextEt>
 8004772:	4aa4      	ldr	r2, [pc, #656]	; (8004a04 <_ZN17Main_MenuViewBaseC1Ev+0x490>)
 8004774:	4603      	mov	r3, r0
 8004776:	2104      	movs	r1, #4
 8004778:	4650      	mov	r0, sl
 800477a:	f012 fca5 	bl	80170c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3.resizeToCurrentText();
 800477e:	4648      	mov	r0, r9
        wc1 = value;
 8004780:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8004784:	f00c fa38 	bl	8010bf8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004788:	4b9f      	ldr	r3, [pc, #636]	; (8004a08 <_ZN17Main_MenuViewBaseC1Ev+0x494>)
 800478a:	930c      	str	r3, [sp, #48]	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 800478c:	a90c      	add	r1, sp, #48	; 0x30
 800478e:	2319      	movs	r3, #25
 8004790:	4648      	mov	r0, r9
 8004792:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8004796:	f00c fa4f 	bl	8010c38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800479a:	4649      	mov	r1, r9
 800479c:	4630      	mov	r0, r6
 800479e:	f00a f897 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80047a2:	230a      	movs	r3, #10
 80047a4:	9300      	str	r3, [sp, #0]
 80047a6:	2232      	movs	r2, #50	; 0x32
 80047a8:	23f0      	movs	r3, #240	; 0xf0
 80047aa:	4629      	mov	r1, r5
 80047ac:	4638      	mov	r0, r7
 80047ae:	f7fd fe71 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
 80047b2:	9b03      	ldr	r3, [sp, #12]
 80047b4:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80047b8:	22a0      	movs	r2, #160	; 0xa0
 80047ba:	4611      	mov	r1, r2
 80047bc:	4638      	mov	r0, r7
 80047be:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 80047c2:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 80047c6:	f00b fdf1 	bl	80103ac <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80047ca:	22a0      	movs	r2, #160	; 0xa0
 80047cc:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80047d0:	4638      	mov	r0, r7
 80047d2:	f00b fdf6 	bl	80103c2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80047d6:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80047da:	2b20      	cmp	r3, #32
 80047dc:	d005      	beq.n	80047ea <_ZN17Main_MenuViewBaseC1Ev+0x276>
        lineWidthQ5 = widthQ5;
 80047de:	2320      	movs	r3, #32
 80047e0:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 80047e4:	4638      	mov	r0, r7
 80047e6:	f00b fceb 	bl	80101c0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80047ea:	4638      	mov	r0, r7
 80047ec:	2101      	movs	r1, #1
 80047ee:	f00b fdf3 	bl	80103d8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80047f2:	4639      	mov	r1, r7
 80047f4:	4630      	mov	r0, r6
 80047f6:	ad04      	add	r5, sp, #16
        color = newColor;
 80047f8:	f04f 37ff 	mov.w	r7, #4294967295
 80047fc:	f00a f868 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8004800:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 36);
 8004804:	2224      	movs	r2, #36	; 0x24
 8004806:	4640      	mov	r0, r8
 8004808:	2145      	movs	r1, #69	; 0x45
 800480a:	f7fd fe36 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800480e:	4641      	mov	r1, r8
 8004810:	4628      	mov	r0, r5
        color = newColor;
 8004812:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8004816:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 800481a:	f00b ff73 	bl	8010704 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800481e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 8004822:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 8004826:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 800482a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800482e:	f8df b1d8 	ldr.w	fp, [pc, #472]	; 8004a08 <_ZN17Main_MenuViewBaseC1Ev+0x494>
 8004832:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8004836:	233e      	movs	r3, #62	; 0x3e
 8004838:	4649      	mov	r1, r9
 800483a:	4640      	mov	r0, r8
 800483c:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8004840:	f00c f9fa 	bl	8010c38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004844:	4641      	mov	r1, r8
 8004846:	4630      	mov	r0, r6
 8004848:	f00a f842 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(50, 12);
 800484c:	ee18 0a10 	vmov	r0, s16
 8004850:	220c      	movs	r2, #12
 8004852:	2132      	movs	r1, #50	; 0x32
 8004854:	f7fd fe11 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8004858:	ee18 1a10 	vmov	r1, s16
 800485c:	4628      	mov	r0, r5
        color = newColor;
 800485e:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8004862:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8004866:	f00b ff4d 	bl	8010704 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800486a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800486e:	ee18 3a10 	vmov	r3, s16
 8004872:	333c      	adds	r3, #60	; 0x3c
 8004874:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004878:	233f      	movs	r3, #63	; 0x3f
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 800487a:	ee18 0a10 	vmov	r0, s16
 800487e:	4649      	mov	r1, r9
 8004880:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8004884:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8004888:	f00c f9d6 	bl	8010c38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800488c:	ee18 1a10 	vmov	r1, s16
 8004890:	4630      	mov	r0, r6
 8004892:	f00a f81d 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(88, 60);
 8004896:	ee18 0a90 	vmov	r0, s17
 800489a:	223c      	movs	r2, #60	; 0x3c
 800489c:	2158      	movs	r1, #88	; 0x58
 800489e:	f7fd fdec 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 80048a2:	ee18 1a90 	vmov	r1, s17
 80048a6:	4628      	mov	r0, r5
        color = newColor;
 80048a8:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 80048ac:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 80048b0:	f00b ff28 	bl	8010704 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80048b4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80048b8:	ee18 3a90 	vmov	r3, s17
 80048bc:	333c      	adds	r3, #60	; 0x3c
 80048be:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80048c2:	2308      	movs	r3, #8
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 80048c4:	ee18 0a90 	vmov	r0, s17
 80048c8:	4649      	mov	r1, r9
 80048ca:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80048ce:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 80048d2:	f00c f9b1 	bl	8010c38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80048d6:	ee18 1a90 	vmov	r1, s17
 80048da:	4630      	mov	r0, r6
 80048dc:	f009 fff8 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 80048e0:	ee19 0a10 	vmov	r0, s18
 80048e4:	22f0      	movs	r2, #240	; 0xf0
 80048e6:	2121      	movs	r1, #33	; 0x21
 80048e8:	f7fd fdc7 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 80048ec:	f04f 0b03 	mov.w	fp, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80048f0:	464a      	mov	r2, r9
 80048f2:	f04f 0802 	mov.w	r8, #2
 80048f6:	a90b      	add	r1, sp, #44	; 0x2c
 80048f8:	ee19 0a10 	vmov	r0, s18
 80048fc:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8004900:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
    buttonWithLabel3.setAction(buttonCallback);
 8004904:	f504 558b 	add.w	r5, r4, #4448	; 0x1160
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8004908:	f00c fb7b 	bl	8011002 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800490c:	2340      	movs	r3, #64	; 0x40
 800490e:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8004912:	350c      	adds	r5, #12
        updateTextPosition();
 8004914:	ee19 0a10 	vmov	r0, s18
 8004918:	f7fd fe04 	bl	8002524 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800491c:	ee19 1a10 	vmov	r1, s18
 8004920:	4630      	mov	r0, r6
        colorPressed = col;
 8004922:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 8004926:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 800492a:	f009 ffd1 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 800492e:	ee19 0a90 	vmov	r0, s19
 8004932:	22aa      	movs	r2, #170	; 0xaa
 8004934:	2121      	movs	r1, #33	; 0x21
 8004936:	f7fd fda0 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800493a:	464a      	mov	r2, r9
 800493c:	a90b      	add	r1, sp, #44	; 0x2c
 800493e:	ee19 0a90 	vmov	r0, s19
 8004942:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8004946:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 800494a:	f00c fb5a 	bl	8011002 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800494e:	2341      	movs	r3, #65	; 0x41
 8004950:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8004954:	ee19 0a90 	vmov	r0, s19
 8004958:	f7fd fde4 	bl	8002524 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800495c:	ee19 1a90 	vmov	r1, s19
 8004960:	4630      	mov	r0, r6
        colorPressed = col;
 8004962:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8004966:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 800496a:	f009 ffb1 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 800496e:	ee1a 0a10 	vmov	r0, s20
 8004972:	2264      	movs	r2, #100	; 0x64
 8004974:	2121      	movs	r1, #33	; 0x21
 8004976:	f7fd fd80 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800497a:	464a      	mov	r2, r9
 800497c:	a90b      	add	r1, sp, #44	; 0x2c
 800497e:	ee1a 0a10 	vmov	r0, s20
 8004982:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8004986:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 800498a:	f00c fb3a 	bl	8011002 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800498e:	2342      	movs	r3, #66	; 0x42
 8004990:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
        updateTextPosition();
 8004994:	ee1a 0a10 	vmov	r0, s20
 8004998:	f7fd fdc4 	bl	8002524 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800499c:	ee1a 1a10 	vmov	r1, s20
 80049a0:	4630      	mov	r0, r6
        colorPressed = col;
 80049a2:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 80049a6:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 80049aa:	f009 ff91 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1.setXY(198, 5);
 80049ae:	ee1a 0a90 	vmov	r0, s21
 80049b2:	2205      	movs	r2, #5
 80049b4:	21c6      	movs	r1, #198	; 0xc6
 80049b6:	f7fd fd60 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 80049ba:	2301      	movs	r3, #1
 80049bc:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80049c0:	230a      	movs	r3, #10
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 80049c2:	ee1a 0a90 	vmov	r0, s21
 80049c6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80049ca:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80049ce:	aa0a      	add	r2, sp, #40	; 0x28
 80049d0:	ab0b      	add	r3, sp, #44	; 0x2c
 80049d2:	a909      	add	r1, sp, #36	; 0x24
 80049d4:	f8cd 9000 	str.w	r9, [sp]
 80049d8:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 80049dc:	f00c fc4b 	bl	8011276 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80049e0:	4630      	mov	r0, r6
 80049e2:	ee1a 1a90 	vmov	r1, s21
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 80049e6:	f8c4 a350 	str.w	sl, [r4, #848]	; 0x350
 80049ea:	f8c4 5340 	str.w	r5, [r4, #832]	; 0x340
 80049ee:	f009 ff6f 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80049f2:	4620      	mov	r0, r4
 80049f4:	b00f      	add	sp, #60	; 0x3c
 80049f6:	ecbd 8b06 	vpop	{d8-d10}
 80049fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80049fe:	bf00      	nop
 8004a00:	20013820 	.word	0x20013820
 8004a04:	08029036 	.word	0x08029036
 8004a08:	080290ac 	.word	0x080290ac

08004a0c <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 8004a0c:	4770      	bx	lr

08004a0e <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8004a0e:	4770      	bx	lr

08004a10 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8004a10:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8004a12:	68c2      	ldr	r2, [r0, #12]
 8004a14:	6844      	ldr	r4, [r0, #4]
 8004a16:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8004a18:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8004a1a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8004a1e:	07d2      	lsls	r2, r2, #31
 8004a20:	bf48      	it	mi
 8004a22:	5962      	ldrmi	r2, [r4, r5]
 8004a24:	689b      	ldr	r3, [r3, #8]
    }
 8004a26:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8004a28:	bf48      	it	mi
 8004a2a:	58d3      	ldrmi	r3, [r2, r3]
 8004a2c:	4718      	bx	r3

08004a2e <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8004a2e:	6843      	ldr	r3, [r0, #4]
 8004a30:	b12b      	cbz	r3, 8004a3e <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8004a32:	6883      	ldr	r3, [r0, #8]
 8004a34:	b92b      	cbnz	r3, 8004a42 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8004a36:	68c0      	ldr	r0, [r0, #12]
 8004a38:	f000 0001 	and.w	r0, r0, #1
 8004a3c:	4770      	bx	lr
 8004a3e:	4618      	mov	r0, r3
 8004a40:	4770      	bx	lr
 8004a42:	2001      	movs	r0, #1
    }
 8004a44:	4770      	bx	lr

08004a46 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8004a46:	b510      	push	{r4, lr}
 8004a48:	2110      	movs	r1, #16
 8004a4a:	4604      	mov	r4, r0
 8004a4c:	f021 ff37 	bl	80268be <_ZdlPvj>
 8004a50:	4620      	mov	r0, r4
 8004a52:	bd10      	pop	{r4, pc}

08004a54 <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8004a54:	b510      	push	{r4, lr}
 8004a56:	4b03      	ldr	r3, [pc, #12]	; (8004a64 <_ZN19MeasurementViewBaseD1Ev+0x10>)
 8004a58:	6003      	str	r3, [r0, #0]
 8004a5a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8004a5c:	f00d fcce 	bl	80123fc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8004a60:	4620      	mov	r0, r4
 8004a62:	bd10      	pop	{r4, pc}
 8004a64:	0802a68c 	.word	0x0802a68c

08004a68 <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8004a68:	b507      	push	{r0, r1, r2, lr}
 8004a6a:	4b07      	ldr	r3, [pc, #28]	; (8004a88 <_ZN19MeasurementViewBaseD0Ev+0x20>)
 8004a6c:	6003      	str	r3, [r0, #0]
 8004a6e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8004a70:	f00d fcc4 	bl	80123fc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8004a74:	9801      	ldr	r0, [sp, #4]
 8004a76:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8004a7a:	f021 ff20 	bl	80268be <_ZdlPvj>
 8004a7e:	9801      	ldr	r0, [sp, #4]
 8004a80:	b003      	add	sp, #12
 8004a82:	f85d fb04 	ldr.w	pc, [sp], #4
 8004a86:	bf00      	nop
 8004a88:	0802a68c 	.word	0x0802a68c

08004a8c <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8004a8c:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8004a8e:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8004a92:	4299      	cmp	r1, r3
{
 8004a94:	4604      	mov	r4, r0
 8004a96:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8004a98:	d103      	bne.n	8004aa2 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8004a9a:	f00f f9b1 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 8004a9e:	f7fe fa61 	bl	8002f64 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 8004aa2:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8004aa6:	429d      	cmp	r5, r3
 8004aa8:	d103      	bne.n	8004ab2 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8004aaa:	f00f f9a9 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8004aae:	f7fe fa89 	bl	8002fc4 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8004ab2:	f504 7422 	add.w	r4, r4, #648	; 0x288
 8004ab6:	42a5      	cmp	r5, r4
 8004ab8:	d105      	bne.n	8004ac6 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8004aba:	f00f f9a1 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 8004abe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 8004ac2:	f7fe baaf 	b.w	8003024 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 8004ac6:	bd38      	pop	{r3, r4, r5, pc}

08004ac8 <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 8004ac8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004acc:	ed2d 8b06 	vpush	{d8-d10}
 8004ad0:	4604      	mov	r4, r0
 8004ad2:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 8004ad4:	46a3      	mov	fp, r4
 8004ad6:	2500      	movs	r5, #0
 8004ad8:	f010 fe12 	bl	8015700 <_ZN8touchgfx6ScreenC1Ev>
 8004adc:	4b67      	ldr	r3, [pc, #412]	; (8004c7c <_ZN19MeasurementViewBaseC1Ev+0x1b4>)
 8004ade:	63e5      	str	r5, [r4, #60]	; 0x3c
 8004ae0:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8004ae4:	2226      	movs	r2, #38	; 0x26
 8004ae6:	4629      	mov	r1, r5
 8004ae8:	4658      	mov	r0, fp
 8004aea:	f022 fede 	bl	80278aa <memset>
 8004aee:	4658      	mov	r0, fp
 8004af0:	f7fd fce4 	bl	80024bc <_ZN8touchgfx6WidgetC1Ev>
 8004af4:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8004af8:	26ff      	movs	r6, #255	; 0xff
 8004afa:	4b61      	ldr	r3, [pc, #388]	; (8004c80 <_ZN19MeasurementViewBaseC1Ev+0x1b8>)
 8004afc:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8004afe:	2226      	movs	r2, #38	; 0x26
 8004b00:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8004b04:	4629      	mov	r1, r5
 8004b06:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8004b0a:	4650      	mov	r0, sl
 8004b0c:	66a5      	str	r5, [r4, #104]	; 0x68
 8004b0e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8004b12:	f022 feca 	bl	80278aa <memset>
 8004b16:	4650      	mov	r0, sl
 8004b18:	f7fd fcd0 	bl	80024bc <_ZN8touchgfx6WidgetC1Ev>
 8004b1c:	4b59      	ldr	r3, [pc, #356]	; (8004c84 <_ZN19MeasurementViewBaseC1Ev+0x1bc>)
 8004b1e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8004b20:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8004b24:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8004b28:	a90a      	add	r1, sp, #40	; 0x28
 8004b2a:	4650      	mov	r0, sl
 8004b2c:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8004b30:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8004b34:	f00c fc5b 	bl	80113ee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8004b38:	4648      	mov	r0, r9
 8004b3a:	f7fd fcd1 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8004b3e:	4b52      	ldr	r3, [pc, #328]	; (8004c88 <_ZN19MeasurementViewBaseC1Ev+0x1c0>)
 8004b40:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8004b44:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8004b48:	4618      	mov	r0, r3
 8004b4a:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8004b4e:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 8004b52:	ee08 3a90 	vmov	s17, r3
 8004b56:	f7fd fcc3 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 8004b5a:	4638      	mov	r0, r7
 8004b5c:	f00b fb10 	bl	8010180 <_ZN8touchgfx4LineC1Ev>
 8004b60:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8004b64:	4618      	mov	r0, r3
 8004b66:	9303      	str	r3, [sp, #12]
 8004b68:	f7fc fbaa 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8004b6c:	4b47      	ldr	r3, [pc, #284]	; (8004c8c <_ZN19MeasurementViewBaseC1Ev+0x1c4>)
 8004b6e:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8004b72:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8004b76:	3324      	adds	r3, #36	; 0x24
 8004b78:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8004b7c:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 8004b80:	4640      	mov	r0, r8
 8004b82:	f7fd fcad 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 8004b86:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8004b8a:	4618      	mov	r0, r3
 8004b8c:	ee08 3a10 	vmov	s16, r3
 8004b90:	f7fd fca6 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 8004b94:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8004b98:	4618      	mov	r0, r3
 8004b9a:	ee09 3a10 	vmov	s18, r3
 8004b9e:	f00c fd67 	bl	8011670 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004ba2:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8004ba6:	4618      	mov	r0, r3
 8004ba8:	ee09 3a90 	vmov	s19, r3
 8004bac:	f00c fd60 	bl	8011670 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004bb0:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8004bb4:	4618      	mov	r0, r3
 8004bb6:	ee0a 3a10 	vmov	s20, r3
 8004bba:	f00c fd59 	bl	8011670 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8004bbe:	4a34      	ldr	r2, [pc, #208]	; (8004c90 <_ZN19MeasurementViewBaseC1Ev+0x1c8>)
 8004bc0:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8004bc4:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8004bc8:	4a32      	ldr	r2, [pc, #200]	; (8004c94 <_ZN19MeasurementViewBaseC1Ev+0x1cc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8004bca:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8004bce:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8004bd2:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8004bd6:	f00d fc07 	bl	80123e8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8004bda:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8004bde:	462a      	mov	r2, r5
 8004be0:	4658      	mov	r0, fp
 8004be2:	9300      	str	r3, [sp, #0]
 8004be4:	4629      	mov	r1, r5
 8004be6:	23f0      	movs	r3, #240	; 0xf0
 8004be8:	f7fd fc54 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004bec:	1d26      	adds	r6, r4, #4
        color = newColor;
 8004bee:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8004bf2:	66a3      	str	r3, [r4, #104]	; 0x68
 8004bf4:	4659      	mov	r1, fp
 8004bf6:	4630      	mov	r0, r6
 8004bf8:	f009 fe6a 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8004bfc:	462a      	mov	r2, r5
 8004bfe:	4650      	mov	r0, sl
 8004c00:	4629      	mov	r1, r5
 8004c02:	f7fd fc3a 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8004c06:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8004c08:	4650      	mov	r0, sl
 8004c0a:	a90a      	add	r1, sp, #40	; 0x28
 8004c0c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8004c10:	f00c fbed 	bl	80113ee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8004c14:	4651      	mov	r1, sl
 8004c16:	4630      	mov	r0, r6
 8004c18:	f009 fe5a 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8004c1c:	f44f 729a 	mov.w	r2, #308	; 0x134
 8004c20:	2156      	movs	r1, #86	; 0x56
 8004c22:	4648      	mov	r0, r9
 8004c24:	f7fd fc29 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8004c28:	f8d4 2098 	ldr.w	r2, [r4, #152]	; 0x98
        linespace = space;
 8004c2c:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        color = newColor;
 8004c30:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8004c34:	f10d 0b10 	add.w	fp, sp, #16
 8004c38:	f8d2 2084 	ldr.w	r2, [r2, #132]	; 0x84
        color = newColor;
 8004c3c:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8004c40:	4649      	mov	r1, r9
 8004c42:	4658      	mov	r0, fp
 8004c44:	4790      	blx	r2
 8004c46:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8004c4a:	f104 0cd4 	add.w	ip, r4, #212	; 0xd4
 8004c4e:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004c52:	4a11      	ldr	r2, [pc, #68]	; (8004c98 <_ZN19MeasurementViewBaseC1Ev+0x1d0>)
 8004c54:	6812      	ldr	r2, [r2, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 8004c56:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8004c5a:	2309      	movs	r3, #9
 8004c5c:	b92a      	cbnz	r2, 8004c6a <_ZN19MeasurementViewBaseC1Ev+0x1a2>
 8004c5e:	4b0f      	ldr	r3, [pc, #60]	; (8004c9c <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8004c60:	4a0f      	ldr	r2, [pc, #60]	; (8004ca0 <_ZN19MeasurementViewBaseC1Ev+0x1d8>)
 8004c62:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004c64:	480f      	ldr	r0, [pc, #60]	; (8004ca4 <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
 8004c66:	f022 fc1b 	bl	80274a0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8004c6a:	4a0f      	ldr	r2, [pc, #60]	; (8004ca8 <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004c6c:	8812      	ldrh	r2, [r2, #0]
 8004c6e:	2a09      	cmp	r2, #9
 8004c70:	d81e      	bhi.n	8004cb0 <_ZN19MeasurementViewBaseC1Ev+0x1e8>
 8004c72:	4b0e      	ldr	r3, [pc, #56]	; (8004cac <_ZN19MeasurementViewBaseC1Ev+0x1e4>)
 8004c74:	4a0a      	ldr	r2, [pc, #40]	; (8004ca0 <_ZN19MeasurementViewBaseC1Ev+0x1d8>)
 8004c76:	2161      	movs	r1, #97	; 0x61
 8004c78:	e7f4      	b.n	8004c64 <_ZN19MeasurementViewBaseC1Ev+0x19c>
 8004c7a:	bf00      	nop
 8004c7c:	0802a68c 	.word	0x0802a68c
 8004c80:	0802b514 	.word	0x0802b514
 8004c84:	0802b6dc 	.word	0x0802b6dc
 8004c88:	080290bc 	.word	0x080290bc
 8004c8c:	0802b248 	.word	0x0802b248
 8004c90:	0802a674 	.word	0x0802a674
 8004c94:	08004a8d 	.word	0x08004a8d
 8004c98:	20013814 	.word	0x20013814
 8004c9c:	08028efc 	.word	0x08028efc
 8004ca0:	08028ffe 	.word	0x08028ffe
 8004ca4:	08028f79 	.word	0x08028f79
 8004ca8:	20013818 	.word	0x20013818
 8004cac:	08028fc0 	.word	0x08028fc0
        return texts->getText(typedTextId);
 8004cb0:	4619      	mov	r1, r3
 8004cb2:	4b95      	ldr	r3, [pc, #596]	; (8004f08 <_ZN19MeasurementViewBaseC1Ev+0x440>)
 8004cb4:	6818      	ldr	r0, [r3, #0]
 8004cb6:	f002 f981 	bl	8006fbc <_ZNK8touchgfx5Texts7getTextEt>
 8004cba:	4a94      	ldr	r2, [pc, #592]	; (8004f0c <_ZN19MeasurementViewBaseC1Ev+0x444>)
 8004cbc:	4603      	mov	r3, r0
 8004cbe:	2104      	movs	r1, #4
 8004cc0:	4650      	mov	r0, sl
 8004cc2:	f012 fa01 	bl	80170c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8004cc6:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 8004cca:	4648      	mov	r0, r9
 8004ccc:	f00b ff94 	bl	8010bf8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004cd0:	f8df a23c 	ldr.w	sl, [pc, #572]	; 8004f10 <_ZN19MeasurementViewBaseC1Ev+0x448>
 8004cd4:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8004cd8:	230a      	movs	r3, #10
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 8004cda:	a90a      	add	r1, sp, #40	; 0x28
 8004cdc:	4648      	mov	r0, r9
 8004cde:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8004ce2:	f00b ffa9 	bl	8010c38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004ce6:	4649      	mov	r1, r9
 8004ce8:	4630      	mov	r0, r6
 8004cea:	f009 fdf1 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(57, 60);
 8004cee:	223c      	movs	r2, #60	; 0x3c
 8004cf0:	ee18 0a90 	vmov	r0, s17
 8004cf4:	2139      	movs	r1, #57	; 0x39
 8004cf6:	f7fd fbc0 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004cfa:	f04f 33ff 	mov.w	r3, #4294967295
 8004cfe:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8004d02:	ee18 1a90 	vmov	r1, s17
 8004d06:	4658      	mov	r0, fp
        linespace = space;
 8004d08:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8004d0c:	f00b fcfa 	bl	8010704 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004d10:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8004d14:	f504 7c90 	add.w	ip, r4, #288	; 0x120
 8004d18:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8004d1c:	2217      	movs	r2, #23
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 8004d1e:	ee18 0a90 	vmov	r0, s17
 8004d22:	a90a      	add	r1, sp, #40	; 0x28
 8004d24:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8004d28:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8004d2c:	f00b ff84 	bl	8010c38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004d30:	ee18 1a90 	vmov	r1, s17
 8004d34:	4630      	mov	r0, r6
 8004d36:	f009 fdcb 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8004d3a:	230a      	movs	r3, #10
 8004d3c:	9300      	str	r3, [sp, #0]
 8004d3e:	2232      	movs	r2, #50	; 0x32
 8004d40:	23f0      	movs	r3, #240	; 0xf0
 8004d42:	4629      	mov	r1, r5
 8004d44:	4638      	mov	r0, r7
 8004d46:	f7fd fba5 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004d4a:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8004d4e:	22a0      	movs	r2, #160	; 0xa0
 8004d50:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8004d54:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8004d58:	9b03      	ldr	r3, [sp, #12]
 8004d5a:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8004d5e:	4611      	mov	r1, r2
 8004d60:	4638      	mov	r0, r7
 8004d62:	f00b fb23 	bl	80103ac <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8004d66:	22a0      	movs	r2, #160	; 0xa0
 8004d68:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8004d6c:	4638      	mov	r0, r7
 8004d6e:	f00b fb28 	bl	80103c2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8004d72:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8004d76:	2b20      	cmp	r3, #32
 8004d78:	d005      	beq.n	8004d86 <_ZN19MeasurementViewBaseC1Ev+0x2be>
        lineWidthQ5 = widthQ5;
 8004d7a:	2320      	movs	r3, #32
 8004d7c:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8004d80:	4638      	mov	r0, r7
 8004d82:	f00b fa1d 	bl	80101c0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004d86:	4638      	mov	r0, r7
 8004d88:	2101      	movs	r1, #1
 8004d8a:	f00b fb25 	bl	80103d8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8004d8e:	4639      	mov	r1, r7
 8004d90:	4630      	mov	r0, r6
 8004d92:	f009 fd9d 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8004d96:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8004d9a:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 36);
 8004d9c:	2224      	movs	r2, #36	; 0x24
 8004d9e:	4640      	mov	r0, r8
        linespace = space;
 8004da0:	f04f 0a00 	mov.w	sl, #0
 8004da4:	2145      	movs	r1, #69	; 0x45
 8004da6:	f7fd fb68 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8004daa:	4641      	mov	r1, r8
 8004dac:	4638      	mov	r0, r7
        color = newColor;
 8004dae:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8004db2:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8004db6:	f00b fca5 	bl	8010704 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004dba:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8004dbe:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8004dc2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004dc6:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8004f10 <_ZN19MeasurementViewBaseC1Ev+0x448>
 8004dca:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8004dce:	233c      	movs	r3, #60	; 0x3c
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 8004dd0:	a90a      	add	r1, sp, #40	; 0x28
 8004dd2:	4640      	mov	r0, r8
 8004dd4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8004dd8:	f00b ff2e 	bl	8010c38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004ddc:	4641      	mov	r1, r8
 8004dde:	4630      	mov	r0, r6
 8004de0:	f009 fd76 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(50, 12);
 8004de4:	ee18 0a10 	vmov	r0, s16
 8004de8:	220c      	movs	r2, #12
 8004dea:	2132      	movs	r1, #50	; 0x32
 8004dec:	f7fd fb45 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8004df0:	ee18 1a10 	vmov	r1, s16
 8004df4:	4638      	mov	r0, r7
        color = newColor;
 8004df6:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8004dfa:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8004dfe:	f00b fc81 	bl	8010704 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004e02:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8004e06:	ee18 3a10 	vmov	r3, s16
 8004e0a:	333c      	adds	r3, #60	; 0x3c
 8004e0c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004e10:	233d      	movs	r3, #61	; 0x3d
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 8004e12:	ee18 0a10 	vmov	r0, s16
 8004e16:	a90a      	add	r1, sp, #40	; 0x28
 8004e18:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8004e1c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8004e20:	f00b ff0a 	bl	8010c38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004e24:	ee18 1a10 	vmov	r1, s16
 8004e28:	4630      	mov	r0, r6
 8004e2a:	f009 fd51 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8004e2e:	ee19 0a10 	vmov	r0, s18
 8004e32:	22f0      	movs	r2, #240	; 0xf0
 8004e34:	2121      	movs	r1, #33	; 0x21
 8004e36:	f7fd fb20 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8004e3a:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8004e3e:	aa0a      	add	r2, sp, #40	; 0x28
 8004e40:	f04f 0802 	mov.w	r8, #2
 8004e44:	a909      	add	r1, sp, #36	; 0x24
 8004e46:	ee19 0a10 	vmov	r0, s18
 8004e4a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8004e4e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8004e52:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8004e56:	f00c f8d4 	bl	8011002 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8004e5a:	233b      	movs	r3, #59	; 0x3b
 8004e5c:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8004e60:	3710      	adds	r7, #16
        updateTextPosition();
 8004e62:	ee19 0a10 	vmov	r0, s18
 8004e66:	f7fd fb5d 	bl	8002524 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8004e6a:	ee19 1a10 	vmov	r1, s18
 8004e6e:	4630      	mov	r0, r6
        colorPressed = col;
 8004e70:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8004e74:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8004e78:	f009 fd2a 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8004e7c:	ee19 0a90 	vmov	r0, s19
 8004e80:	22aa      	movs	r2, #170	; 0xaa
 8004e82:	2121      	movs	r1, #33	; 0x21
 8004e84:	f7fd faf9 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8004e88:	aa0a      	add	r2, sp, #40	; 0x28
 8004e8a:	a909      	add	r1, sp, #36	; 0x24
 8004e8c:	ee19 0a90 	vmov	r0, s19
 8004e90:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8004e94:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8004e98:	f00c f8b3 	bl	8011002 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8004e9c:	233a      	movs	r3, #58	; 0x3a
 8004e9e:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8004ea2:	ee19 0a90 	vmov	r0, s19
 8004ea6:	f7fd fb3d 	bl	8002524 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8004eaa:	ee19 1a90 	vmov	r1, s19
 8004eae:	4630      	mov	r0, r6
        colorPressed = col;
 8004eb0:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8004eb4:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8004eb8:	f009 fd0a 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8004ebc:	ee1a 0a10 	vmov	r0, s20
 8004ec0:	2264      	movs	r2, #100	; 0x64
 8004ec2:	2121      	movs	r1, #33	; 0x21
 8004ec4:	f7fd fad9 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8004ec8:	aa0a      	add	r2, sp, #40	; 0x28
 8004eca:	a909      	add	r1, sp, #36	; 0x24
 8004ecc:	ee1a 0a10 	vmov	r0, s20
 8004ed0:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8004ed4:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8004ed8:	f00c f893 	bl	8011002 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8004edc:	2339      	movs	r3, #57	; 0x39
        updateTextPosition();
 8004ede:	ee1a 0a10 	vmov	r0, s20
 8004ee2:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8004ee6:	f7fd fb1d 	bl	8002524 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8004eea:	4630      	mov	r0, r6
        colorPressed = col;
 8004eec:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8004ef0:	ee1a 1a10 	vmov	r1, s20
 8004ef4:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8004ef8:	f009 fcea 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004efc:	4620      	mov	r0, r4
 8004efe:	b00d      	add	sp, #52	; 0x34
 8004f00:	ecbd 8b06 	vpop	{d8-d10}
 8004f04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004f08:	20013820 	.word	0x20013820
 8004f0c:	08029036 	.word	0x08029036
 8004f10:	080290ac 	.word	0x080290ac

08004f14 <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 8004f14:	4770      	bx	lr

08004f16 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8004f16:	4770      	bx	lr

08004f18 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8004f18:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8004f1a:	68c2      	ldr	r2, [r0, #12]
 8004f1c:	6844      	ldr	r4, [r0, #4]
 8004f1e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8004f20:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8004f22:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8004f26:	07d2      	lsls	r2, r2, #31
 8004f28:	bf48      	it	mi
 8004f2a:	5962      	ldrmi	r2, [r4, r5]
 8004f2c:	689b      	ldr	r3, [r3, #8]
    }
 8004f2e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8004f30:	bf48      	it	mi
 8004f32:	58d3      	ldrmi	r3, [r2, r3]
 8004f34:	4718      	bx	r3

08004f36 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8004f36:	6843      	ldr	r3, [r0, #4]
 8004f38:	b12b      	cbz	r3, 8004f46 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8004f3a:	6883      	ldr	r3, [r0, #8]
 8004f3c:	b92b      	cbnz	r3, 8004f4a <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8004f3e:	68c0      	ldr	r0, [r0, #12]
 8004f40:	f000 0001 	and.w	r0, r0, #1
 8004f44:	4770      	bx	lr
 8004f46:	4618      	mov	r0, r3
 8004f48:	4770      	bx	lr
 8004f4a:	2001      	movs	r0, #1
    }
 8004f4c:	4770      	bx	lr

08004f4e <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8004f4e:	b510      	push	{r4, lr}
 8004f50:	2110      	movs	r1, #16
 8004f52:	4604      	mov	r4, r0
 8004f54:	f021 fcb3 	bl	80268be <_ZdlPvj>
 8004f58:	4620      	mov	r0, r4
 8004f5a:	bd10      	pop	{r4, pc}

08004f5c <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8004f5c:	b510      	push	{r4, lr}
 8004f5e:	4b03      	ldr	r3, [pc, #12]	; (8004f6c <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 8004f60:	6003      	str	r3, [r0, #0]
 8004f62:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8004f64:	f00d fa4a 	bl	80123fc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8004f68:	4620      	mov	r0, r4
 8004f6a:	bd10      	pop	{r4, pc}
 8004f6c:	0802a6d8 	.word	0x0802a6d8

08004f70 <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8004f70:	b507      	push	{r0, r1, r2, lr}
 8004f72:	4b07      	ldr	r3, [pc, #28]	; (8004f90 <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 8004f74:	6003      	str	r3, [r0, #0]
 8004f76:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8004f78:	f00d fa40 	bl	80123fc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8004f7c:	9801      	ldr	r0, [sp, #4]
 8004f7e:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8004f82:	f021 fc9c 	bl	80268be <_ZdlPvj>
 8004f86:	9801      	ldr	r0, [sp, #4]
 8004f88:	b003      	add	sp, #12
 8004f8a:	f85d fb04 	ldr.w	pc, [sp], #4
 8004f8e:	bf00      	nop
 8004f90:	0802a6d8 	.word	0x0802a6d8

08004f94 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8004f94:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8004f96:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8004f9a:	4299      	cmp	r1, r3
{
 8004f9c:	4604      	mov	r4, r0
 8004f9e:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8004fa0:	d103      	bne.n	8004faa <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8004fa2:	f00e ff2d 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8004fa6:	f7fd fffd 	bl	8002fa4 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel2)
 8004faa:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8004fae:	429d      	cmp	r5, r3
 8004fb0:	d103      	bne.n	8004fba <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8004fb2:	f00e ff25 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 8004fb6:	f7fe f865 	bl	8003084 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel1)
 8004fba:	f504 7434 	add.w	r4, r4, #720	; 0x2d0
 8004fbe:	42a5      	cmp	r5, r4
 8004fc0:	d105      	bne.n	8004fce <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8004fc2:	f00e ff1d 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel1 clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 8004fc6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 8004fca:	f7fe b84b 	b.w	8003064 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 8004fce:	bd38      	pop	{r3, r4, r5, pc}

08004fd0 <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 8004fd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004fd4:	ed2d 8b06 	vpush	{d8-d10}
 8004fd8:	4604      	mov	r4, r0
 8004fda:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 8004fdc:	46a3      	mov	fp, r4
 8004fde:	2500      	movs	r5, #0
 8004fe0:	f010 fb8e 	bl	8015700 <_ZN8touchgfx6ScreenC1Ev>
 8004fe4:	4b66      	ldr	r3, [pc, #408]	; (8005180 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b0>)
 8004fe6:	63e5      	str	r5, [r4, #60]	; 0x3c
 8004fe8:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8004fec:	2226      	movs	r2, #38	; 0x26
 8004fee:	4629      	mov	r1, r5
 8004ff0:	4658      	mov	r0, fp
 8004ff2:	f022 fc5a 	bl	80278aa <memset>
 8004ff6:	4658      	mov	r0, fp
 8004ff8:	f7fd fa60 	bl	80024bc <_ZN8touchgfx6WidgetC1Ev>
 8004ffc:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005000:	26ff      	movs	r6, #255	; 0xff
 8005002:	4b60      	ldr	r3, [pc, #384]	; (8005184 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b4>)
 8005004:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005006:	2226      	movs	r2, #38	; 0x26
 8005008:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800500c:	4629      	mov	r1, r5
 800500e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005012:	4650      	mov	r0, sl
 8005014:	66a5      	str	r5, [r4, #104]	; 0x68
 8005016:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800501a:	f022 fc46 	bl	80278aa <memset>
 800501e:	4650      	mov	r0, sl
 8005020:	f7fd fa4c 	bl	80024bc <_ZN8touchgfx6WidgetC1Ev>
 8005024:	4b58      	ldr	r3, [pc, #352]	; (8005188 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b8>)
 8005026:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005028:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800502c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005030:	a90a      	add	r1, sp, #40	; 0x28
 8005032:	4650      	mov	r0, sl
 8005034:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005038:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800503c:	f00c f9d7 	bl	80113ee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005040:	4648      	mov	r0, r9
 8005042:	f7fd fa4d 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 8005046:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 800504a:	4b50      	ldr	r3, [pc, #320]	; (800518c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1bc>)
 800504c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005050:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005054:	4638      	mov	r0, r7
 8005056:	f00b f893 	bl	8010180 <_ZN8touchgfx4LineC1Ev>
 800505a:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800505e:	4618      	mov	r0, r3
 8005060:	9303      	str	r3, [sp, #12]
 8005062:	f7fc f92d 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005066:	4b4a      	ldr	r3, [pc, #296]	; (8005190 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c0>)
 8005068:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 800506c:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8005070:	3324      	adds	r3, #36	; 0x24
 8005072:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8005076:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 800507a:	4640      	mov	r0, r8
 800507c:	f7fd fa30 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 8005080:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8005084:	4618      	mov	r0, r3
 8005086:	ee08 3a10 	vmov	s16, r3
 800508a:	f7fd fa29 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 800508e:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8005092:	4618      	mov	r0, r3
 8005094:	ee08 3a90 	vmov	s17, r3
 8005098:	f7fd fa22 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 800509c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80050a0:	4618      	mov	r0, r3
 80050a2:	ee09 3a10 	vmov	s18, r3
 80050a6:	f00c fae3 	bl	8011670 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80050aa:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80050ae:	4618      	mov	r0, r3
 80050b0:	ee09 3a90 	vmov	s19, r3
 80050b4:	f00c fadc 	bl	8011670 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80050b8:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80050bc:	4618      	mov	r0, r3
 80050be:	ee0a 3a10 	vmov	s20, r3
 80050c2:	f00c fad5 	bl	8011670 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80050c6:	4a33      	ldr	r2, [pc, #204]	; (8005194 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c4>)
 80050c8:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80050cc:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 80050d0:	4a31      	ldr	r2, [pc, #196]	; (8005198 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80050d2:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80050d6:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 80050da:	f504 7048 	add.w	r0, r4, #800	; 0x320
 80050de:	f00d f983 	bl	80123e8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80050e2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80050e6:	462a      	mov	r2, r5
 80050e8:	4658      	mov	r0, fp
 80050ea:	9300      	str	r3, [sp, #0]
 80050ec:	4629      	mov	r1, r5
 80050ee:	23f0      	movs	r3, #240	; 0xf0
 80050f0:	f7fd f9d0 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
 80050f4:	1d26      	adds	r6, r4, #4
        color = newColor;
 80050f6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80050fa:	66a3      	str	r3, [r4, #104]	; 0x68
 80050fc:	4659      	mov	r1, fp
 80050fe:	4630      	mov	r0, r6
 8005100:	f009 fbe6 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005104:	462a      	mov	r2, r5
 8005106:	4650      	mov	r0, sl
 8005108:	4629      	mov	r1, r5
 800510a:	f7fd f9b6 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 800510e:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005110:	4650      	mov	r0, sl
 8005112:	a90a      	add	r1, sp, #40	; 0x28
 8005114:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005118:	f00c f969 	bl	80113ee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800511c:	4651      	mov	r1, sl
 800511e:	4630      	mov	r0, r6
 8005120:	f009 fbd6 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8005124:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005128:	2156      	movs	r1, #86	; 0x56
 800512a:	4648      	mov	r0, r9
 800512c:	f7fd f9a5 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8005130:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005134:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8005138:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 800513c:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8005140:	4650      	mov	r0, sl
 8005142:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8005146:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800514a:	4649      	mov	r1, r9
 800514c:	4798      	blx	r3
 800514e:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8005152:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005156:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800515a:	4b10      	ldr	r3, [pc, #64]	; (800519c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1cc>)
 800515c:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUW4).getText());
 800515e:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8005162:	b92b      	cbnz	r3, 8005170 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1a0>
 8005164:	4b0e      	ldr	r3, [pc, #56]	; (80051a0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d0>)
 8005166:	4a0f      	ldr	r2, [pc, #60]	; (80051a4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8005168:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800516a:	480f      	ldr	r0, [pc, #60]	; (80051a8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d8>)
 800516c:	f022 f998 	bl	80274a0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005170:	4b0e      	ldr	r3, [pc, #56]	; (80051ac <_ZN28Measurement_AccurateViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005172:	881b      	ldrh	r3, [r3, #0]
 8005174:	2b04      	cmp	r3, #4
 8005176:	d81d      	bhi.n	80051b4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e4>
 8005178:	4b0d      	ldr	r3, [pc, #52]	; (80051b0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e0>)
 800517a:	4a0a      	ldr	r2, [pc, #40]	; (80051a4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 800517c:	2161      	movs	r1, #97	; 0x61
 800517e:	e7f4      	b.n	800516a <_ZN28Measurement_AccurateViewBaseC1Ev+0x19a>
 8005180:	0802a6d8 	.word	0x0802a6d8
 8005184:	0802b514 	.word	0x0802b514
 8005188:	0802b6dc 	.word	0x0802b6dc
 800518c:	080290bc 	.word	0x080290bc
 8005190:	0802b248 	.word	0x0802b248
 8005194:	0802a6c0 	.word	0x0802a6c0
 8005198:	08004f95 	.word	0x08004f95
 800519c:	20013814 	.word	0x20013814
 80051a0:	08028efc 	.word	0x08028efc
 80051a4:	08028ffe 	.word	0x08028ffe
 80051a8:	08028f79 	.word	0x08028f79
 80051ac:	20013818 	.word	0x20013818
 80051b0:	08028fc0 	.word	0x08028fc0
        return texts->getText(typedTextId);
 80051b4:	4b93      	ldr	r3, [pc, #588]	; (8005404 <_ZN28Measurement_AccurateViewBaseC1Ev+0x434>)
 80051b6:	2104      	movs	r1, #4
 80051b8:	6818      	ldr	r0, [r3, #0]
 80051ba:	f001 feff 	bl	8006fbc <_ZNK8touchgfx5Texts7getTextEt>
 80051be:	4a92      	ldr	r2, [pc, #584]	; (8005408 <_ZN28Measurement_AccurateViewBaseC1Ev+0x438>)
 80051c0:	4603      	mov	r3, r0
 80051c2:	2104      	movs	r1, #4
 80051c4:	4650      	mov	r0, sl
 80051c6:	f011 ff7f 	bl	80170c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 80051ca:	4648      	mov	r0, r9
        wc1 = value;
 80051cc:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 80051d0:	f00b fd12 	bl	8010bf8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80051d4:	4b8d      	ldr	r3, [pc, #564]	; (800540c <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>)
 80051d6:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SQC7));
 80051d8:	a90a      	add	r1, sp, #40	; 0x28
 80051da:	2305      	movs	r3, #5
 80051dc:	4648      	mov	r0, r9
 80051de:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80051e2:	f00b fd29 	bl	8010c38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80051e6:	4649      	mov	r1, r9
 80051e8:	4630      	mov	r0, r6
 80051ea:	f009 fb71 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80051ee:	230a      	movs	r3, #10
 80051f0:	9300      	str	r3, [sp, #0]
 80051f2:	2232      	movs	r2, #50	; 0x32
 80051f4:	23f0      	movs	r3, #240	; 0xf0
 80051f6:	4629      	mov	r1, r5
 80051f8:	4638      	mov	r0, r7
 80051fa:	f7fd f94b 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
 80051fe:	9b03      	ldr	r3, [sp, #12]
 8005200:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005204:	22a0      	movs	r2, #160	; 0xa0
 8005206:	4611      	mov	r1, r2
 8005208:	4638      	mov	r0, r7
 800520a:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 800520e:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8005212:	f00b f8cb 	bl	80103ac <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005216:	22a0      	movs	r2, #160	; 0xa0
 8005218:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800521c:	4638      	mov	r0, r7
 800521e:	f00b f8d0 	bl	80103c2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005222:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8005226:	2b20      	cmp	r3, #32
 8005228:	d005      	beq.n	8005236 <_ZN28Measurement_AccurateViewBaseC1Ev+0x266>
        lineWidthQ5 = widthQ5;
 800522a:	2320      	movs	r3, #32
 800522c:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8005230:	4638      	mov	r0, r7
 8005232:	f00a ffc5 	bl	80101c0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005236:	4638      	mov	r0, r7
 8005238:	2101      	movs	r1, #1
 800523a:	f00b f8cd 	bl	80103d8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800523e:	4639      	mov	r1, r7
 8005240:	4630      	mov	r0, r6
 8005242:	ad04      	add	r5, sp, #16
        color = newColor;
 8005244:	f04f 37ff 	mov.w	r7, #4294967295
 8005248:	f009 fb42 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 800524c:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 36);
 8005250:	2224      	movs	r2, #36	; 0x24
 8005252:	4640      	mov	r0, r8
 8005254:	2145      	movs	r1, #69	; 0x45
 8005256:	f7fd f910 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800525a:	4641      	mov	r1, r8
 800525c:	4628      	mov	r0, r5
        color = newColor;
 800525e:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8005262:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8005266:	f00b fa4d 	bl	8010704 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800526a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800526e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8005272:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005276:	f8df 9194 	ldr.w	r9, [pc, #404]	; 800540c <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>
 800527a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800527e:	232a      	movs	r3, #42	; 0x2a
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 8005280:	a90a      	add	r1, sp, #40	; 0x28
 8005282:	4640      	mov	r0, r8
 8005284:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005288:	f00b fcd6 	bl	8010c38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800528c:	4641      	mov	r1, r8
 800528e:	4630      	mov	r0, r6
 8005290:	f009 fb1e 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(50, 12);
 8005294:	ee18 0a10 	vmov	r0, s16
 8005298:	220c      	movs	r2, #12
 800529a:	2132      	movs	r1, #50	; 0x32
 800529c:	f7fd f8ed 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 80052a0:	ee18 1a10 	vmov	r1, s16
 80052a4:	4628      	mov	r0, r5
        color = newColor;
 80052a6:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 80052aa:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80052ae:	f00b fa29 	bl	8010704 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80052b2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80052b6:	ee18 3a10 	vmov	r3, s16
 80052ba:	333c      	adds	r3, #60	; 0x3c
 80052bc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80052c0:	2329      	movs	r3, #41	; 0x29
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 80052c2:	ee18 0a10 	vmov	r0, s16
 80052c6:	a90a      	add	r1, sp, #40	; 0x28
 80052c8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80052cc:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80052d0:	f00b fcb2 	bl	8010c38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80052d4:	ee18 1a10 	vmov	r1, s16
 80052d8:	4630      	mov	r0, r6
 80052da:	f009 faf9 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(33, 60);
 80052de:	ee18 0a90 	vmov	r0, s17
 80052e2:	223c      	movs	r2, #60	; 0x3c
 80052e4:	2121      	movs	r1, #33	; 0x21
 80052e6:	f7fd f8c8 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 80052ea:	ee18 1a90 	vmov	r1, s17
 80052ee:	4628      	mov	r0, r5
        color = newColor;
 80052f0:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 80052f4:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 80052f8:	f00b fa04 	bl	8010704 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80052fc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005300:	ee18 3a90 	vmov	r3, s17
 8005304:	333c      	adds	r3, #60	; 0x3c
 8005306:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800530a:	2313      	movs	r3, #19
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 800530c:	ee18 0a90 	vmov	r0, s17
 8005310:	a90a      	add	r1, sp, #40	; 0x28
 8005312:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005316:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800531a:	f00b fc8d 	bl	8010c38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800531e:	ee18 1a90 	vmov	r1, s17
 8005322:	4630      	mov	r0, r6
 8005324:	f009 fad4 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8005328:	ee19 0a10 	vmov	r0, s18
 800532c:	22f0      	movs	r2, #240	; 0xf0
 800532e:	2121      	movs	r1, #33	; 0x21
 8005330:	f7fd f8a3 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8005334:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005338:	aa0a      	add	r2, sp, #40	; 0x28
 800533a:	f04f 0802 	mov.w	r8, #2
 800533e:	a909      	add	r1, sp, #36	; 0x24
 8005340:	ee19 0a10 	vmov	r0, s18
 8005344:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005348:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 800534c:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005350:	f00b fe57 	bl	8011002 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8005354:	2328      	movs	r3, #40	; 0x28
 8005356:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 800535a:	3510      	adds	r5, #16
        updateTextPosition();
 800535c:	ee19 0a10 	vmov	r0, s18
 8005360:	f7fd f8e0 	bl	8002524 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005364:	ee19 1a10 	vmov	r1, s18
 8005368:	4630      	mov	r0, r6
        colorPressed = col;
 800536a:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 800536e:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8005372:	f009 faad 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8005376:	ee19 0a90 	vmov	r0, s19
 800537a:	22aa      	movs	r2, #170	; 0xaa
 800537c:	2121      	movs	r1, #33	; 0x21
 800537e:	f7fd f87c 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005382:	aa0a      	add	r2, sp, #40	; 0x28
 8005384:	a909      	add	r1, sp, #36	; 0x24
 8005386:	ee19 0a90 	vmov	r0, s19
 800538a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 800538e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005392:	f00b fe36 	bl	8011002 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005396:	2327      	movs	r3, #39	; 0x27
 8005398:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 800539c:	ee19 0a90 	vmov	r0, s19
 80053a0:	f7fd f8c0 	bl	8002524 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80053a4:	ee19 1a90 	vmov	r1, s19
 80053a8:	4630      	mov	r0, r6
        colorPressed = col;
 80053aa:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 80053ae:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 80053b2:	f009 fa8d 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 80053b6:	ee1a 0a10 	vmov	r0, s20
 80053ba:	2264      	movs	r2, #100	; 0x64
 80053bc:	2121      	movs	r1, #33	; 0x21
 80053be:	f7fd f85c 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80053c2:	aa0a      	add	r2, sp, #40	; 0x28
 80053c4:	a909      	add	r1, sp, #36	; 0x24
 80053c6:	ee1a 0a10 	vmov	r0, s20
 80053ca:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80053ce:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80053d2:	f00b fe16 	bl	8011002 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80053d6:	2326      	movs	r3, #38	; 0x26
        updateTextPosition();
 80053d8:	ee1a 0a10 	vmov	r0, s20
 80053dc:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 80053e0:	f7fd f8a0 	bl	8002524 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80053e4:	4630      	mov	r0, r6
        colorPressed = col;
 80053e6:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 80053ea:	ee1a 1a10 	vmov	r1, s20
 80053ee:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 80053f2:	f009 fa6d 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80053f6:	4620      	mov	r0, r4
 80053f8:	b00d      	add	sp, #52	; 0x34
 80053fa:	ecbd 8b06 	vpop	{d8-d10}
 80053fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005402:	bf00      	nop
 8005404:	20013820 	.word	0x20013820
 8005408:	08029036 	.word	0x08029036
 800540c:	080290ac 	.word	0x080290ac

08005410 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005410:	4770      	bx	lr

08005412 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005412:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005414:	68c2      	ldr	r2, [r0, #12]
 8005416:	6844      	ldr	r4, [r0, #4]
 8005418:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800541a:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800541c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005420:	07d2      	lsls	r2, r2, #31
 8005422:	bf48      	it	mi
 8005424:	5962      	ldrmi	r2, [r4, r5]
 8005426:	689b      	ldr	r3, [r3, #8]
    }
 8005428:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800542a:	bf48      	it	mi
 800542c:	58d3      	ldrmi	r3, [r2, r3]
 800542e:	4718      	bx	r3

08005430 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005430:	6843      	ldr	r3, [r0, #4]
 8005432:	b12b      	cbz	r3, 8005440 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005434:	6883      	ldr	r3, [r0, #8]
 8005436:	b92b      	cbnz	r3, 8005444 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005438:	68c0      	ldr	r0, [r0, #12]
 800543a:	f000 0001 	and.w	r0, r0, #1
 800543e:	4770      	bx	lr
 8005440:	4618      	mov	r0, r3
 8005442:	4770      	bx	lr
 8005444:	2001      	movs	r0, #1
    }
 8005446:	4770      	bx	lr

08005448 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005448:	b510      	push	{r4, lr}
 800544a:	2110      	movs	r1, #16
 800544c:	4604      	mov	r4, r0
 800544e:	f021 fa36 	bl	80268be <_ZdlPvj>
 8005452:	4620      	mov	r0, r4
 8005454:	bd10      	pop	{r4, pc}

08005456 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 8005456:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 800545a:	f001 be55 	b.w	8007108 <_ZN17Gauge_with_Values10initializeEv>

0800545e <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 800545e:	3098      	adds	r0, #152	; 0x98
 8005460:	4288      	cmp	r0, r1
{
 8005462:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8005464:	d105      	bne.n	8005472 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005466:	f00e fccb 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 800546a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 800546e:	f7fd bde9 	b.w	8003044 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8005472:	bd08      	pop	{r3, pc}

08005474 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8005474:	b510      	push	{r4, lr}
 8005476:	4b07      	ldr	r3, [pc, #28]	; (8005494 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x20>)
 8005478:	6003      	str	r3, [r0, #0]
 800547a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800547c:	f00c ffbe 	bl	80123fc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>

class Gauge_with_Values : public Gauge_with_ValuesBase
{
public:
    Gauge_with_Values();
    virtual ~Gauge_with_Values() {}
 8005480:	4b05      	ldr	r3, [pc, #20]	; (8005498 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x24>)
 8005482:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 8005486:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 800548a:	f7fe fe21 	bl	80040d0 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 800548e:	4620      	mov	r0, r4
 8005490:	bd10      	pop	{r4, pc}
 8005492:	bf00      	nop
 8005494:	0802a724 	.word	0x0802a724
 8005498:	0802aba0 	.word	0x0802aba0

0800549c <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 800549c:	b510      	push	{r4, lr}
 800549e:	4604      	mov	r4, r0
}
 80054a0:	f7ff ffe8 	bl	8005474 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 80054a4:	4620      	mov	r0, r4
 80054a6:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80054aa:	f021 fa08 	bl	80268be <_ZdlPvj>
 80054ae:	4620      	mov	r0, r4
 80054b0:	bd10      	pop	{r4, pc}
	...

080054b4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 80054b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80054b8:	ed2d 8b04 	vpush	{d8-d9}
 80054bc:	4604      	mov	r4, r0
 80054be:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 80054c0:	46a1      	mov	r9, r4
 80054c2:	2500      	movs	r5, #0
 80054c4:	f010 f91c 	bl	8015700 <_ZN8touchgfx6ScreenC1Ev>
 80054c8:	4bac      	ldr	r3, [pc, #688]	; (800577c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c8>)
 80054ca:	63e5      	str	r5, [r4, #60]	; 0x3c
 80054cc:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 80054d0:	2226      	movs	r2, #38	; 0x26
 80054d2:	4629      	mov	r1, r5
 80054d4:	4648      	mov	r0, r9
 80054d6:	f022 f9e8 	bl	80278aa <memset>
 80054da:	4648      	mov	r0, r9
 80054dc:	f7fc ffee 	bl	80024bc <_ZN8touchgfx6WidgetC1Ev>
 80054e0:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 80054e4:	26ff      	movs	r6, #255	; 0xff
 80054e6:	4ba6      	ldr	r3, [pc, #664]	; (8005780 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2cc>)
 80054e8:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80054ea:	2226      	movs	r2, #38	; 0x26
 80054ec:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80054f0:	4629      	mov	r1, r5
 80054f2:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80054f6:	4640      	mov	r0, r8
 80054f8:	66a5      	str	r5, [r4, #104]	; 0x68
 80054fa:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80054fe:	f022 f9d4 	bl	80278aa <memset>
 8005502:	4640      	mov	r0, r8
 8005504:	f7fc ffda 	bl	80024bc <_ZN8touchgfx6WidgetC1Ev>
 8005508:	4b9e      	ldr	r3, [pc, #632]	; (8005784 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d0>)
 800550a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800550c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8005510:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005514:	a90a      	add	r1, sp, #40	; 0x28
 8005516:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8005518:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800551c:	f00b ff67 	bl	80113ee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005520:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8005524:	4618      	mov	r0, r3
 8005526:	ee08 3a10 	vmov	s16, r3
 800552a:	f00c f8a1 	bl	8011670 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800552e:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8005532:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8005536:	4618      	mov	r0, r3
 8005538:	ee08 3a90 	vmov	s17, r3
 800553c:	f7fc ffd0 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 8005540:	4638      	mov	r0, r7
 8005542:	f00a fe1d 	bl	8010180 <_ZN8touchgfx4LineC1Ev>
 8005546:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800554a:	4618      	mov	r0, r3
 800554c:	9303      	str	r3, [sp, #12]
 800554e:	f7fb feb7 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005552:	4b8d      	ldr	r3, [pc, #564]	; (8005788 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d4>)
 8005554:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8005558:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 800555c:	3324      	adds	r3, #36	; 0x24
 800555e:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8005562:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8005566:	4658      	mov	r0, fp
 8005568:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 800556c:	f7fc ffb8 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 8005570:	4650      	mov	r0, sl
 8005572:	f7fc ffb5 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 8005576:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 800557a:	4618      	mov	r0, r3
 800557c:	ee09 3a10 	vmov	s18, r3
 8005580:	f001 fdb8 	bl	80070f4 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005584:	4a81      	ldr	r2, [pc, #516]	; (800578c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d8>)
 8005586:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800558a:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 800558e:	4a80      	ldr	r2, [pc, #512]	; (8005790 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2dc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005590:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005594:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 8005598:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 800559c:	f00c ff24 	bl	80123e8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80055a0:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80055a4:	462a      	mov	r2, r5
 80055a6:	4648      	mov	r0, r9
 80055a8:	9300      	str	r3, [sp, #0]
 80055aa:	4629      	mov	r1, r5
 80055ac:	23f0      	movs	r3, #240	; 0xf0
 80055ae:	f7fc ff71 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
 80055b2:	1d26      	adds	r6, r4, #4
        color = newColor;
 80055b4:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80055b8:	66a3      	str	r3, [r4, #104]	; 0x68
 80055ba:	4649      	mov	r1, r9
 80055bc:	4630      	mov	r0, r6
 80055be:	f009 f987 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80055c2:	462a      	mov	r2, r5
 80055c4:	4640      	mov	r0, r8
 80055c6:	4629      	mov	r1, r5
 80055c8:	f7fc ff57 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 80055cc:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80055ce:	4640      	mov	r0, r8
 80055d0:	a90a      	add	r1, sp, #40	; 0x28
 80055d2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80055d6:	f00b ff0a 	bl	80113ee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80055da:	4641      	mov	r1, r8
 80055dc:	4630      	mov	r0, r6
 80055de:	f009 f977 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 80055e2:	ee18 0a10 	vmov	r0, s16
 80055e6:	f240 1201 	movw	r2, #257	; 0x101
 80055ea:	2121      	movs	r1, #33	; 0x21
 80055ec:	f7fc ff45 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 80055f0:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80055f2:	aa0a      	add	r2, sp, #40	; 0x28
 80055f4:	a909      	add	r1, sp, #36	; 0x24
 80055f6:	ee18 0a10 	vmov	r0, s16
 80055fa:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80055fe:	2302      	movs	r3, #2
 8005600:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005604:	f00b fcfd 	bl	8011002 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005608:	230f      	movs	r3, #15
        updateTextPosition();
 800560a:	ee18 0a10 	vmov	r0, s16
 800560e:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8005612:	f7fc ff87 	bl	8002524 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8005616:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 800561a:	3314      	adds	r3, #20
        color = col;
 800561c:	f04f 39ff 	mov.w	r9, #4294967295
 8005620:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8005624:	ee18 1a10 	vmov	r1, s16
 8005628:	4630      	mov	r0, r6
        colorPressed = col;
 800562a:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 800562e:	f009 f94f 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005632:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 8005636:	223c      	movs	r2, #60	; 0x3c
 8005638:	ee18 0a90 	vmov	r0, s17
 800563c:	2117      	movs	r1, #23
 800563e:	f7fc ff1c 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8005642:	ee18 1a90 	vmov	r1, s17
 8005646:	4640      	mov	r0, r8
        color = newColor;
 8005648:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 800564c:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8005650:	f00b f858 	bl	8010704 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005654:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8005658:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 800565c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8005660:	4b4c      	ldr	r3, [pc, #304]	; (8005794 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e0>)
 8005662:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 8005664:	ee18 0a90 	vmov	r0, s17
 8005668:	2310      	movs	r3, #16
 800566a:	a90a      	add	r1, sp, #40	; 0x28
 800566c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005670:	f00b fae2 	bl	8010c38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005674:	ee18 1a90 	vmov	r1, s17
 8005678:	4630      	mov	r0, r6
 800567a:	f009 f929 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800567e:	230a      	movs	r3, #10
 8005680:	9300      	str	r3, [sp, #0]
 8005682:	2232      	movs	r2, #50	; 0x32
 8005684:	23f0      	movs	r3, #240	; 0xf0
 8005686:	4629      	mov	r1, r5
 8005688:	4638      	mov	r0, r7
 800568a:	f7fc ff03 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
 800568e:	9b03      	ldr	r3, [sp, #12]
 8005690:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005694:	22a0      	movs	r2, #160	; 0xa0
 8005696:	4611      	mov	r1, r2
 8005698:	4638      	mov	r0, r7
 800569a:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 800569e:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 80056a2:	f00a fe83 	bl	80103ac <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80056a6:	22a0      	movs	r2, #160	; 0xa0
 80056a8:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80056ac:	4638      	mov	r0, r7
 80056ae:	f00a fe88 	bl	80103c2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80056b2:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 80056b6:	2b20      	cmp	r3, #32
 80056b8:	d005      	beq.n	80056c6 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x212>
        lineWidthQ5 = widthQ5;
 80056ba:	2320      	movs	r3, #32
 80056bc:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 80056c0:	4638      	mov	r0, r7
 80056c2:	f00a fd7d 	bl	80101c0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80056c6:	4638      	mov	r0, r7
 80056c8:	2101      	movs	r1, #1
 80056ca:	f00a fe85 	bl	80103d8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80056ce:	4639      	mov	r1, r7
 80056d0:	4630      	mov	r0, r6
 80056d2:	f009 f8fd 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80056d6:	2500      	movs	r5, #0
    textArea2.setXY(69, 36);
 80056d8:	2224      	movs	r2, #36	; 0x24
 80056da:	4658      	mov	r0, fp
        color = newColor;
 80056dc:	f04f 39ff 	mov.w	r9, #4294967295
 80056e0:	2145      	movs	r1, #69	; 0x45
 80056e2:	f7fc feca 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80056e6:	4659      	mov	r1, fp
 80056e8:	4640      	mov	r0, r8
        color = newColor;
 80056ea:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 80056ee:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 80056f2:	f00b f807 	bl	8010704 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80056f6:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80056fa:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 80056fe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005702:	4f24      	ldr	r7, [pc, #144]	; (8005794 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e0>)
 8005704:	970a      	str	r7, [sp, #40]	; 0x28
 8005706:	2311      	movs	r3, #17
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 8005708:	a90a      	add	r1, sp, #40	; 0x28
 800570a:	4658      	mov	r0, fp
 800570c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005710:	f00b fa92 	bl	8010c38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005714:	4659      	mov	r1, fp
 8005716:	4630      	mov	r0, r6
 8005718:	f009 f8da 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(50, 12);
 800571c:	220c      	movs	r2, #12
 800571e:	4650      	mov	r0, sl
 8005720:	2132      	movs	r1, #50	; 0x32
 8005722:	f7fc feaa 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8005726:	4651      	mov	r1, sl
 8005728:	4640      	mov	r0, r8
        color = newColor;
 800572a:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 800572e:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8005732:	f00a ffe7 	bl	8010704 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005736:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800573a:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 800573e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005742:	2312      	movs	r3, #18
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 8005744:	a90a      	add	r1, sp, #40	; 0x28
 8005746:	4650      	mov	r0, sl
 8005748:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800574c:	970a      	str	r7, [sp, #40]	; 0x28
 800574e:	f00b fa73 	bl	8010c38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005752:	4651      	mov	r1, sl
 8005754:	4630      	mov	r0, r6
 8005756:	f009 f8bb 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 800575a:	ee19 0a10 	vmov	r0, s18
 800575e:	224e      	movs	r2, #78	; 0x4e
 8005760:	4629      	mov	r1, r5
 8005762:	f7fc fe8a 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8005766:	4630      	mov	r0, r6
 8005768:	ee19 1a10 	vmov	r1, s18
 800576c:	f009 f8b0 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005770:	4620      	mov	r0, r4
 8005772:	b00d      	add	sp, #52	; 0x34
 8005774:	ecbd 8b04 	vpop	{d8-d9}
 8005778:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800577c:	0802a724 	.word	0x0802a724
 8005780:	0802b514 	.word	0x0802b514
 8005784:	0802b6dc 	.word	0x0802b6dc
 8005788:	0802b248 	.word	0x0802b248
 800578c:	0802a70c 	.word	0x0802a70c
 8005790:	0800545f 	.word	0x0800545f
 8005794:	080290ac 	.word	0x080290ac

08005798 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005798:	4770      	bx	lr

0800579a <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800579a:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800579c:	68c2      	ldr	r2, [r0, #12]
 800579e:	6844      	ldr	r4, [r0, #4]
 80057a0:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80057a2:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80057a4:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80057a8:	07d2      	lsls	r2, r2, #31
 80057aa:	bf48      	it	mi
 80057ac:	5962      	ldrmi	r2, [r4, r5]
 80057ae:	689b      	ldr	r3, [r3, #8]
    }
 80057b0:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80057b2:	bf48      	it	mi
 80057b4:	58d3      	ldrmi	r3, [r2, r3]
 80057b6:	4718      	bx	r3

080057b8 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80057b8:	6843      	ldr	r3, [r0, #4]
 80057ba:	b12b      	cbz	r3, 80057c8 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80057bc:	6883      	ldr	r3, [r0, #8]
 80057be:	b92b      	cbnz	r3, 80057cc <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80057c0:	68c0      	ldr	r0, [r0, #12]
 80057c2:	f000 0001 	and.w	r0, r0, #1
 80057c6:	4770      	bx	lr
 80057c8:	4618      	mov	r0, r3
 80057ca:	4770      	bx	lr
 80057cc:	2001      	movs	r0, #1
    }
 80057ce:	4770      	bx	lr

080057d0 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80057d0:	b510      	push	{r4, lr}
 80057d2:	2110      	movs	r1, #16
 80057d4:	4604      	mov	r4, r0
 80057d6:	f021 f872 	bl	80268be <_ZdlPvj>
 80057da:	4620      	mov	r0, r4
 80057dc:	bd10      	pop	{r4, pc}

080057de <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 80057de:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 80057e2:	f001 bc91 	b.w	8007108 <_ZN17Gauge_with_Values10initializeEv>

080057e6 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 80057e6:	3098      	adds	r0, #152	; 0x98
 80057e8:	4288      	cmp	r0, r1
{
 80057ea:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 80057ec:	d105      	bne.n	80057fa <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80057ee:	f00e fb07 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 80057f2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 80057f6:	f7fd bc25 	b.w	8003044 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 80057fa:	bd08      	pop	{r3, pc}

080057fc <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 80057fc:	b510      	push	{r4, lr}
 80057fe:	4b07      	ldr	r3, [pc, #28]	; (800581c <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x20>)
 8005800:	6003      	str	r3, [r0, #0]
 8005802:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005804:	f00c fdfa 	bl	80123fc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 8005808:	4b05      	ldr	r3, [pc, #20]	; (8005820 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x24>)
 800580a:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 800580e:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8005812:	f7fe fc5d 	bl	80040d0 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 8005816:	4620      	mov	r0, r4
 8005818:	bd10      	pop	{r4, pc}
 800581a:	bf00      	nop
 800581c:	0802a770 	.word	0x0802a770
 8005820:	0802aba0 	.word	0x0802aba0

08005824 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8005824:	b510      	push	{r4, lr}
 8005826:	4604      	mov	r4, r0
}
 8005828:	f7ff ffe8 	bl	80057fc <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 800582c:	4620      	mov	r0, r4
 800582e:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8005832:	f021 f844 	bl	80268be <_ZdlPvj>
 8005836:	4620      	mov	r0, r4
 8005838:	bd10      	pop	{r4, pc}
	...

0800583c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 800583c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005840:	ed2d 8b04 	vpush	{d8-d9}
 8005844:	4604      	mov	r4, r0
 8005846:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 8005848:	46a1      	mov	r9, r4
 800584a:	2500      	movs	r5, #0
 800584c:	f00f ff58 	bl	8015700 <_ZN8touchgfx6ScreenC1Ev>
 8005850:	4bac      	ldr	r3, [pc, #688]	; (8005b04 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c8>)
 8005852:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005854:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8005858:	2226      	movs	r2, #38	; 0x26
 800585a:	4629      	mov	r1, r5
 800585c:	4648      	mov	r0, r9
 800585e:	f022 f824 	bl	80278aa <memset>
 8005862:	4648      	mov	r0, r9
 8005864:	f7fc fe2a 	bl	80024bc <_ZN8touchgfx6WidgetC1Ev>
 8005868:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 800586c:	26ff      	movs	r6, #255	; 0xff
 800586e:	4ba6      	ldr	r3, [pc, #664]	; (8005b08 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2cc>)
 8005870:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005872:	2226      	movs	r2, #38	; 0x26
 8005874:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005878:	4629      	mov	r1, r5
 800587a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800587e:	4640      	mov	r0, r8
 8005880:	66a5      	str	r5, [r4, #104]	; 0x68
 8005882:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005886:	f022 f810 	bl	80278aa <memset>
 800588a:	4640      	mov	r0, r8
 800588c:	f7fc fe16 	bl	80024bc <_ZN8touchgfx6WidgetC1Ev>
 8005890:	4b9e      	ldr	r3, [pc, #632]	; (8005b0c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d0>)
 8005892:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005894:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8005898:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800589c:	a90a      	add	r1, sp, #40	; 0x28
 800589e:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 80058a0:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80058a4:	f00b fda3 	bl	80113ee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80058a8:	f104 0398 	add.w	r3, r4, #152	; 0x98
 80058ac:	4618      	mov	r0, r3
 80058ae:	ee08 3a10 	vmov	s16, r3
 80058b2:	f00b fedd 	bl	8011670 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80058b6:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 80058ba:	f504 7794 	add.w	r7, r4, #296	; 0x128
 80058be:	4618      	mov	r0, r3
 80058c0:	ee08 3a90 	vmov	s17, r3
 80058c4:	f7fc fe0c 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 80058c8:	4638      	mov	r0, r7
 80058ca:	f00a fc59 	bl	8010180 <_ZN8touchgfx4LineC1Ev>
 80058ce:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80058d2:	4618      	mov	r0, r3
 80058d4:	9303      	str	r3, [sp, #12]
 80058d6:	f7fb fcf3 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80058da:	4b8d      	ldr	r3, [pc, #564]	; (8005b10 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d4>)
 80058dc:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 80058e0:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 80058e4:	3324      	adds	r3, #36	; 0x24
 80058e6:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 80058ea:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 80058ee:	4658      	mov	r0, fp
 80058f0:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 80058f4:	f7fc fdf4 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 80058f8:	4650      	mov	r0, sl
 80058fa:	f7fc fdf1 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 80058fe:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8005902:	4618      	mov	r0, r3
 8005904:	ee09 3a10 	vmov	s18, r3
 8005908:	f001 fbf4 	bl	80070f4 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800590c:	4a81      	ldr	r2, [pc, #516]	; (8005b14 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d8>)
 800590e:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005912:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 8005916:	4a80      	ldr	r2, [pc, #512]	; (8005b18 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2dc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005918:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800591c:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 8005920:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 8005924:	f00c fd60 	bl	80123e8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005928:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800592c:	462a      	mov	r2, r5
 800592e:	4648      	mov	r0, r9
 8005930:	9300      	str	r3, [sp, #0]
 8005932:	4629      	mov	r1, r5
 8005934:	23f0      	movs	r3, #240	; 0xf0
 8005936:	f7fc fdad 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
 800593a:	1d26      	adds	r6, r4, #4
        color = newColor;
 800593c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005940:	66a3      	str	r3, [r4, #104]	; 0x68
 8005942:	4649      	mov	r1, r9
 8005944:	4630      	mov	r0, r6
 8005946:	f008 ffc3 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800594a:	462a      	mov	r2, r5
 800594c:	4640      	mov	r0, r8
 800594e:	4629      	mov	r1, r5
 8005950:	f7fc fd93 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8005954:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005956:	4640      	mov	r0, r8
 8005958:	a90a      	add	r1, sp, #40	; 0x28
 800595a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800595e:	f00b fd46 	bl	80113ee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005962:	4641      	mov	r1, r8
 8005964:	4630      	mov	r0, r6
 8005966:	f008 ffb3 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 800596a:	ee18 0a10 	vmov	r0, s16
 800596e:	f240 1201 	movw	r2, #257	; 0x101
 8005972:	2121      	movs	r1, #33	; 0x21
 8005974:	f7fc fd81 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8005978:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800597a:	aa0a      	add	r2, sp, #40	; 0x28
 800597c:	a909      	add	r1, sp, #36	; 0x24
 800597e:	ee18 0a10 	vmov	r0, s16
 8005982:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8005986:	2302      	movs	r3, #2
 8005988:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800598c:	f00b fb39 	bl	8011002 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8005990:	230b      	movs	r3, #11
        updateTextPosition();
 8005992:	ee18 0a10 	vmov	r0, s16
 8005996:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 800599a:	f7fc fdc3 	bl	8002524 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 800599e:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 80059a2:	3314      	adds	r3, #20
        color = col;
 80059a4:	f04f 39ff 	mov.w	r9, #4294967295
 80059a8:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80059ac:	ee18 1a10 	vmov	r1, s16
 80059b0:	4630      	mov	r0, r6
        colorPressed = col;
 80059b2:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 80059b6:	f008 ff8b 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80059ba:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 80059be:	223c      	movs	r2, #60	; 0x3c
 80059c0:	ee18 0a90 	vmov	r0, s17
 80059c4:	2117      	movs	r1, #23
 80059c6:	f7fc fd58 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 80059ca:	ee18 1a90 	vmov	r1, s17
 80059ce:	4640      	mov	r0, r8
        color = newColor;
 80059d0:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 80059d4:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80059d8:	f00a fe94 	bl	8010704 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80059dc:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80059e0:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 80059e4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80059e8:	4b4c      	ldr	r3, [pc, #304]	; (8005b1c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 80059ea:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 80059ec:	ee18 0a90 	vmov	r0, s17
 80059f0:	230c      	movs	r3, #12
 80059f2:	a90a      	add	r1, sp, #40	; 0x28
 80059f4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80059f8:	f00b f91e 	bl	8010c38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80059fc:	ee18 1a90 	vmov	r1, s17
 8005a00:	4630      	mov	r0, r6
 8005a02:	f008 ff65 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8005a06:	230a      	movs	r3, #10
 8005a08:	9300      	str	r3, [sp, #0]
 8005a0a:	2232      	movs	r2, #50	; 0x32
 8005a0c:	23f0      	movs	r3, #240	; 0xf0
 8005a0e:	4629      	mov	r1, r5
 8005a10:	4638      	mov	r0, r7
 8005a12:	f7fc fd3f 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005a16:	9b03      	ldr	r3, [sp, #12]
 8005a18:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005a1c:	22a0      	movs	r2, #160	; 0xa0
 8005a1e:	4611      	mov	r1, r2
 8005a20:	4638      	mov	r0, r7
 8005a22:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005a26:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8005a2a:	f00a fcbf 	bl	80103ac <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005a2e:	22a0      	movs	r2, #160	; 0xa0
 8005a30:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005a34:	4638      	mov	r0, r7
 8005a36:	f00a fcc4 	bl	80103c2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005a3a:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8005a3e:	2b20      	cmp	r3, #32
 8005a40:	d005      	beq.n	8005a4e <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x212>
        lineWidthQ5 = widthQ5;
 8005a42:	2320      	movs	r3, #32
 8005a44:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8005a48:	4638      	mov	r0, r7
 8005a4a:	f00a fbb9 	bl	80101c0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005a4e:	4638      	mov	r0, r7
 8005a50:	2101      	movs	r1, #1
 8005a52:	f00a fcc1 	bl	80103d8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005a56:	4639      	mov	r1, r7
 8005a58:	4630      	mov	r0, r6
 8005a5a:	f008 ff39 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8005a5e:	2500      	movs	r5, #0
    textArea2.setXY(69, 36);
 8005a60:	2224      	movs	r2, #36	; 0x24
 8005a62:	4658      	mov	r0, fp
        color = newColor;
 8005a64:	f04f 39ff 	mov.w	r9, #4294967295
 8005a68:	2145      	movs	r1, #69	; 0x45
 8005a6a:	f7fc fd06 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005a6e:	4659      	mov	r1, fp
 8005a70:	4640      	mov	r0, r8
        color = newColor;
 8005a72:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 8005a76:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8005a7a:	f00a fe43 	bl	8010704 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005a7e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8005a82:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 8005a86:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005a8a:	4f24      	ldr	r7, [pc, #144]	; (8005b1c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 8005a8c:	970a      	str	r7, [sp, #40]	; 0x28
 8005a8e:	230d      	movs	r3, #13
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 8005a90:	a90a      	add	r1, sp, #40	; 0x28
 8005a92:	4658      	mov	r0, fp
 8005a94:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005a98:	f00b f8ce 	bl	8010c38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005a9c:	4659      	mov	r1, fp
 8005a9e:	4630      	mov	r0, r6
 8005aa0:	f008 ff16 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(50, 12);
 8005aa4:	220c      	movs	r2, #12
 8005aa6:	4650      	mov	r0, sl
 8005aa8:	2132      	movs	r1, #50	; 0x32
 8005aaa:	f7fc fce6 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8005aae:	4651      	mov	r1, sl
 8005ab0:	4640      	mov	r0, r8
        color = newColor;
 8005ab2:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 8005ab6:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8005aba:	f00a fe23 	bl	8010704 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005abe:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8005ac2:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8005ac6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005aca:	230e      	movs	r3, #14
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 8005acc:	a90a      	add	r1, sp, #40	; 0x28
 8005ace:	4650      	mov	r0, sl
 8005ad0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005ad4:	970a      	str	r7, [sp, #40]	; 0x28
 8005ad6:	f00b f8af 	bl	8010c38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005ada:	4651      	mov	r1, sl
 8005adc:	4630      	mov	r0, r6
 8005ade:	f008 fef7 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 8005ae2:	ee19 0a10 	vmov	r0, s18
 8005ae6:	224e      	movs	r2, #78	; 0x4e
 8005ae8:	4629      	mov	r1, r5
 8005aea:	f7fc fcc6 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8005aee:	4630      	mov	r0, r6
 8005af0:	ee19 1a10 	vmov	r1, s18
 8005af4:	f008 feec 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005af8:	4620      	mov	r0, r4
 8005afa:	b00d      	add	sp, #52	; 0x34
 8005afc:	ecbd 8b04 	vpop	{d8-d9}
 8005b00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005b04:	0802a770 	.word	0x0802a770
 8005b08:	0802b514 	.word	0x0802b514
 8005b0c:	0802b6dc 	.word	0x0802b6dc
 8005b10:	0802b248 	.word	0x0802b248
 8005b14:	0802a758 	.word	0x0802a758
 8005b18:	080057e7 	.word	0x080057e7
 8005b1c:	080290ac 	.word	0x080290ac

08005b20 <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 8005b20:	4770      	bx	lr

08005b22 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005b22:	4770      	bx	lr

08005b24 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005b24:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005b26:	68c2      	ldr	r2, [r0, #12]
 8005b28:	6844      	ldr	r4, [r0, #4]
 8005b2a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005b2c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005b2e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005b32:	07d2      	lsls	r2, r2, #31
 8005b34:	bf48      	it	mi
 8005b36:	5962      	ldrmi	r2, [r4, r5]
 8005b38:	689b      	ldr	r3, [r3, #8]
    }
 8005b3a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005b3c:	bf48      	it	mi
 8005b3e:	58d3      	ldrmi	r3, [r2, r3]
 8005b40:	4718      	bx	r3

08005b42 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005b42:	6843      	ldr	r3, [r0, #4]
 8005b44:	b12b      	cbz	r3, 8005b52 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005b46:	6883      	ldr	r3, [r0, #8]
 8005b48:	b92b      	cbnz	r3, 8005b56 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005b4a:	68c0      	ldr	r0, [r0, #12]
 8005b4c:	f000 0001 	and.w	r0, r0, #1
 8005b50:	4770      	bx	lr
 8005b52:	4618      	mov	r0, r3
 8005b54:	4770      	bx	lr
 8005b56:	2001      	movs	r0, #1
    }
 8005b58:	4770      	bx	lr

08005b5a <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005b5a:	b510      	push	{r4, lr}
 8005b5c:	2110      	movs	r1, #16
 8005b5e:	4604      	mov	r4, r0
 8005b60:	f020 fead 	bl	80268be <_ZdlPvj>
 8005b64:	4620      	mov	r0, r4
 8005b66:	bd10      	pop	{r4, pc}

08005b68 <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8005b68:	b510      	push	{r4, lr}
 8005b6a:	4b03      	ldr	r3, [pc, #12]	; (8005b78 <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 8005b6c:	6003      	str	r3, [r0, #0]
 8005b6e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005b70:	f00c fc44 	bl	80123fc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005b74:	4620      	mov	r0, r4
 8005b76:	bd10      	pop	{r4, pc}
 8005b78:	0802a7bc 	.word	0x0802a7bc

08005b7c <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8005b7c:	b507      	push	{r0, r1, r2, lr}
 8005b7e:	4b07      	ldr	r3, [pc, #28]	; (8005b9c <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 8005b80:	6003      	str	r3, [r0, #0]
 8005b82:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005b84:	f00c fc3a 	bl	80123fc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005b88:	9801      	ldr	r0, [sp, #4]
 8005b8a:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8005b8e:	f020 fe96 	bl	80268be <_ZdlPvj>
 8005b92:	9801      	ldr	r0, [sp, #4]
 8005b94:	b003      	add	sp, #12
 8005b96:	f85d fb04 	ldr.w	pc, [sp], #4
 8005b9a:	bf00      	nop
 8005b9c:	0802a7bc 	.word	0x0802a7bc

08005ba0 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005ba0:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8005ba2:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8005ba6:	4299      	cmp	r1, r3
{
 8005ba8:	4604      	mov	r4, r0
 8005baa:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8005bac:	d103      	bne.n	8005bb6 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005bae:	f00e f927 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8005bb2:	f7fd f9f7 	bl	8002fa4 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 8005bb6:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005bba:	429d      	cmp	r5, r3
 8005bbc:	d103      	bne.n	8005bc6 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8005bbe:	f00e f91f 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 8005bc2:	f7fd fa0f 	bl	8002fe4 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8005bc6:	f504 7422 	add.w	r4, r4, #648	; 0x288
 8005bca:	42a5      	cmp	r5, r4
 8005bcc:	d105      	bne.n	8005bda <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8005bce:	f00e f917 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 8005bd2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 8005bd6:	f7fd ba15 	b.w	8003004 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 8005bda:	bd38      	pop	{r3, r4, r5, pc}

08005bdc <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 8005bdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005be0:	ed2d 8b06 	vpush	{d8-d10}
 8005be4:	4604      	mov	r4, r0
 8005be6:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 8005be8:	46a3      	mov	fp, r4
 8005bea:	2500      	movs	r5, #0
 8005bec:	f00f fd88 	bl	8015700 <_ZN8touchgfx6ScreenC1Ev>
 8005bf0:	4b66      	ldr	r3, [pc, #408]	; (8005d8c <_ZN26Measurement_SingleViewBaseC1Ev+0x1b0>)
 8005bf2:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005bf4:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005bf8:	2226      	movs	r2, #38	; 0x26
 8005bfa:	4629      	mov	r1, r5
 8005bfc:	4658      	mov	r0, fp
 8005bfe:	f021 fe54 	bl	80278aa <memset>
 8005c02:	4658      	mov	r0, fp
 8005c04:	f7fc fc5a 	bl	80024bc <_ZN8touchgfx6WidgetC1Ev>
 8005c08:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005c0c:	26ff      	movs	r6, #255	; 0xff
 8005c0e:	4b60      	ldr	r3, [pc, #384]	; (8005d90 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b4>)
 8005c10:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005c12:	2226      	movs	r2, #38	; 0x26
 8005c14:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005c18:	4629      	mov	r1, r5
 8005c1a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005c1e:	4650      	mov	r0, sl
 8005c20:	66a5      	str	r5, [r4, #104]	; 0x68
 8005c22:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005c26:	f021 fe40 	bl	80278aa <memset>
 8005c2a:	4650      	mov	r0, sl
 8005c2c:	f7fc fc46 	bl	80024bc <_ZN8touchgfx6WidgetC1Ev>
 8005c30:	4b58      	ldr	r3, [pc, #352]	; (8005d94 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b8>)
 8005c32:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005c34:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8005c38:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005c3c:	a90a      	add	r1, sp, #40	; 0x28
 8005c3e:	4650      	mov	r0, sl
 8005c40:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005c44:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005c48:	f00b fbd1 	bl	80113ee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005c4c:	4648      	mov	r0, r9
 8005c4e:	f7fc fc47 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8005c52:	4b51      	ldr	r3, [pc, #324]	; (8005d98 <_ZN26Measurement_SingleViewBaseC1Ev+0x1bc>)
 8005c54:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005c58:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8005c5c:	4618      	mov	r0, r3
 8005c5e:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005c62:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 8005c66:	ee08 3a90 	vmov	s17, r3
 8005c6a:	f7fc fc39 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 8005c6e:	4638      	mov	r0, r7
 8005c70:	f00a fa86 	bl	8010180 <_ZN8touchgfx4LineC1Ev>
 8005c74:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005c78:	4618      	mov	r0, r3
 8005c7a:	9303      	str	r3, [sp, #12]
 8005c7c:	f7fb fb20 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005c80:	4b46      	ldr	r3, [pc, #280]	; (8005d9c <_ZN26Measurement_SingleViewBaseC1Ev+0x1c0>)
 8005c82:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8005c86:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8005c8a:	3324      	adds	r3, #36	; 0x24
 8005c8c:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8005c90:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 8005c94:	4640      	mov	r0, r8
 8005c96:	f7fc fc23 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 8005c9a:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8005c9e:	4618      	mov	r0, r3
 8005ca0:	ee08 3a10 	vmov	s16, r3
 8005ca4:	f7fc fc1c 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 8005ca8:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005cac:	4618      	mov	r0, r3
 8005cae:	ee09 3a10 	vmov	s18, r3
 8005cb2:	f00b fcdd 	bl	8011670 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005cb6:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005cba:	4618      	mov	r0, r3
 8005cbc:	ee09 3a90 	vmov	s19, r3
 8005cc0:	f00b fcd6 	bl	8011670 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005cc4:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005cc8:	4618      	mov	r0, r3
 8005cca:	ee0a 3a10 	vmov	s20, r3
 8005cce:	f00b fccf 	bl	8011670 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005cd2:	4a33      	ldr	r2, [pc, #204]	; (8005da0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c4>)
 8005cd4:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005cd8:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8005cdc:	4a31      	ldr	r2, [pc, #196]	; (8005da4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005cde:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005ce2:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8005ce6:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8005cea:	f00c fb7d 	bl	80123e8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005cee:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005cf2:	462a      	mov	r2, r5
 8005cf4:	4658      	mov	r0, fp
 8005cf6:	9300      	str	r3, [sp, #0]
 8005cf8:	4629      	mov	r1, r5
 8005cfa:	23f0      	movs	r3, #240	; 0xf0
 8005cfc:	f7fc fbca 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005d00:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005d02:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005d06:	66a3      	str	r3, [r4, #104]	; 0x68
 8005d08:	4659      	mov	r1, fp
 8005d0a:	4630      	mov	r0, r6
 8005d0c:	f008 fde0 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005d10:	462a      	mov	r2, r5
 8005d12:	4650      	mov	r0, sl
 8005d14:	4629      	mov	r1, r5
 8005d16:	f7fc fbb0 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8005d1a:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005d1c:	4650      	mov	r0, sl
 8005d1e:	a90a      	add	r1, sp, #40	; 0x28
 8005d20:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005d24:	f00b fb63 	bl	80113ee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005d28:	4651      	mov	r1, sl
 8005d2a:	4630      	mov	r0, r6
 8005d2c:	f008 fdd0 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8005d30:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005d34:	2156      	movs	r1, #86	; 0x56
 8005d36:	4648      	mov	r0, r9
 8005d38:	f7fc fb9f 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005d3c:	f04f 33ff 	mov.w	r3, #4294967295
 8005d40:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005d44:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005d48:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8005d4c:	f10d 0b10 	add.w	fp, sp, #16
 8005d50:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005d54:	4649      	mov	r1, r9
 8005d56:	4658      	mov	r0, fp
 8005d58:	4798      	blx	r3
 8005d5a:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8005d5e:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005d62:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005d66:	4b10      	ldr	r3, [pc, #64]	; (8005da8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1cc>)
 8005d68:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTDC).getText());
 8005d6a:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8005d6e:	b92b      	cbnz	r3, 8005d7c <_ZN26Measurement_SingleViewBaseC1Ev+0x1a0>
 8005d70:	4b0e      	ldr	r3, [pc, #56]	; (8005dac <_ZN26Measurement_SingleViewBaseC1Ev+0x1d0>)
 8005d72:	4a0f      	ldr	r2, [pc, #60]	; (8005db0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8005d74:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005d76:	480f      	ldr	r0, [pc, #60]	; (8005db4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d8>)
 8005d78:	f021 fb92 	bl	80274a0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005d7c:	4b0e      	ldr	r3, [pc, #56]	; (8005db8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005d7e:	881b      	ldrh	r3, [r3, #0]
 8005d80:	2b06      	cmp	r3, #6
 8005d82:	d81d      	bhi.n	8005dc0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e4>
 8005d84:	4b0d      	ldr	r3, [pc, #52]	; (8005dbc <_ZN26Measurement_SingleViewBaseC1Ev+0x1e0>)
 8005d86:	4a0a      	ldr	r2, [pc, #40]	; (8005db0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8005d88:	2161      	movs	r1, #97	; 0x61
 8005d8a:	e7f4      	b.n	8005d76 <_ZN26Measurement_SingleViewBaseC1Ev+0x19a>
 8005d8c:	0802a7bc 	.word	0x0802a7bc
 8005d90:	0802b514 	.word	0x0802b514
 8005d94:	0802b6dc 	.word	0x0802b6dc
 8005d98:	080290bc 	.word	0x080290bc
 8005d9c:	0802b248 	.word	0x0802b248
 8005da0:	0802a7a4 	.word	0x0802a7a4
 8005da4:	08005ba1 	.word	0x08005ba1
 8005da8:	20013814 	.word	0x20013814
 8005dac:	08028efc 	.word	0x08028efc
 8005db0:	08028ffe 	.word	0x08028ffe
 8005db4:	08028f79 	.word	0x08028f79
 8005db8:	20013818 	.word	0x20013818
 8005dbc:	08028fc0 	.word	0x08028fc0
        return texts->getText(typedTextId);
 8005dc0:	4b95      	ldr	r3, [pc, #596]	; (8006018 <_ZN26Measurement_SingleViewBaseC1Ev+0x43c>)
 8005dc2:	2106      	movs	r1, #6
 8005dc4:	6818      	ldr	r0, [r3, #0]
 8005dc6:	f001 f8f9 	bl	8006fbc <_ZNK8touchgfx5Texts7getTextEt>
 8005dca:	4a94      	ldr	r2, [pc, #592]	; (800601c <_ZN26Measurement_SingleViewBaseC1Ev+0x440>)
 8005dcc:	4603      	mov	r3, r0
 8005dce:	2104      	movs	r1, #4
 8005dd0:	4650      	mov	r0, sl
 8005dd2:	f011 f979 	bl	80170c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8005dd6:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 8005dda:	4648      	mov	r0, r9
 8005ddc:	f00a ff0c 	bl	8010bf8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005de0:	f8df a23c 	ldr.w	sl, [pc, #572]	; 8006020 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>
 8005de4:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8005de8:	2307      	movs	r3, #7
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDD5));
 8005dea:	a90a      	add	r1, sp, #40	; 0x28
 8005dec:	4648      	mov	r0, r9
 8005dee:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005df2:	f00a ff21 	bl	8010c38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005df6:	4649      	mov	r1, r9
 8005df8:	4630      	mov	r0, r6
 8005dfa:	f008 fd69 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(41, 60);
 8005dfe:	223c      	movs	r2, #60	; 0x3c
 8005e00:	ee18 0a90 	vmov	r0, s17
 8005e04:	2129      	movs	r1, #41	; 0x29
 8005e06:	f7fc fb38 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005e0a:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8005e0e:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8005e12:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8005e16:	4658      	mov	r0, fp
        linespace = space;
 8005e18:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8005e1c:	f00a fc72 	bl	8010704 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005e20:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8005e24:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8005e28:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005e2c:	2316      	movs	r3, #22
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 8005e2e:	ee18 0a90 	vmov	r0, s17
 8005e32:	a90a      	add	r1, sp, #40	; 0x28
 8005e34:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005e38:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8005e3c:	f00a fefc 	bl	8010c38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005e40:	ee18 1a90 	vmov	r1, s17
 8005e44:	4630      	mov	r0, r6
 8005e46:	f008 fd43 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8005e4a:	230a      	movs	r3, #10
 8005e4c:	9300      	str	r3, [sp, #0]
 8005e4e:	2232      	movs	r2, #50	; 0x32
 8005e50:	23f0      	movs	r3, #240	; 0xf0
 8005e52:	4629      	mov	r1, r5
 8005e54:	4638      	mov	r0, r7
 8005e56:	f7fc fb1d 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005e5a:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005e5e:	22a0      	movs	r2, #160	; 0xa0
 8005e60:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005e64:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8005e68:	9b03      	ldr	r3, [sp, #12]
 8005e6a:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005e6e:	4611      	mov	r1, r2
 8005e70:	4638      	mov	r0, r7
 8005e72:	f00a fa9b 	bl	80103ac <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005e76:	22a0      	movs	r2, #160	; 0xa0
 8005e78:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005e7c:	4638      	mov	r0, r7
 8005e7e:	f00a faa0 	bl	80103c2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005e82:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8005e86:	2b20      	cmp	r3, #32
 8005e88:	d005      	beq.n	8005e96 <_ZN26Measurement_SingleViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 8005e8a:	2320      	movs	r3, #32
 8005e8c:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8005e90:	4638      	mov	r0, r7
 8005e92:	f00a f995 	bl	80101c0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005e96:	4638      	mov	r0, r7
 8005e98:	2101      	movs	r1, #1
 8005e9a:	f00a fa9d 	bl	80103d8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005e9e:	4639      	mov	r1, r7
 8005ea0:	4630      	mov	r0, r6
 8005ea2:	f008 fd15 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8005ea6:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8005eaa:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 36);
 8005eac:	2224      	movs	r2, #36	; 0x24
 8005eae:	4640      	mov	r0, r8
        linespace = space;
 8005eb0:	f04f 0a00 	mov.w	sl, #0
 8005eb4:	2145      	movs	r1, #69	; 0x45
 8005eb6:	f7fc fae0 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005eba:	4641      	mov	r1, r8
 8005ebc:	4638      	mov	r0, r7
        color = newColor;
 8005ebe:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8005ec2:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8005ec6:	f00a fc1d 	bl	8010704 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005eca:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8005ece:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8005ed2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005ed6:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8006020 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>
 8005eda:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005ede:	232f      	movs	r3, #47	; 0x2f
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 8005ee0:	a90a      	add	r1, sp, #40	; 0x28
 8005ee2:	4640      	mov	r0, r8
 8005ee4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005ee8:	f00a fea6 	bl	8010c38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005eec:	4641      	mov	r1, r8
 8005eee:	4630      	mov	r0, r6
 8005ef0:	f008 fcee 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(50, 12);
 8005ef4:	ee18 0a10 	vmov	r0, s16
 8005ef8:	220c      	movs	r2, #12
 8005efa:	2132      	movs	r1, #50	; 0x32
 8005efc:	f7fc fabd 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8005f00:	ee18 1a10 	vmov	r1, s16
 8005f04:	4638      	mov	r0, r7
        color = newColor;
 8005f06:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8005f0a:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8005f0e:	f00a fbf9 	bl	8010704 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005f12:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8005f16:	ee18 3a10 	vmov	r3, s16
 8005f1a:	333c      	adds	r3, #60	; 0x3c
 8005f1c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005f20:	232e      	movs	r3, #46	; 0x2e
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 8005f22:	ee18 0a10 	vmov	r0, s16
 8005f26:	a90a      	add	r1, sp, #40	; 0x28
 8005f28:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005f2c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005f30:	f00a fe82 	bl	8010c38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005f34:	ee18 1a10 	vmov	r1, s16
 8005f38:	4630      	mov	r0, r6
 8005f3a:	f008 fcc9 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8005f3e:	ee19 0a10 	vmov	r0, s18
 8005f42:	22f0      	movs	r2, #240	; 0xf0
 8005f44:	2121      	movs	r1, #33	; 0x21
 8005f46:	f7fc fa98 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8005f4a:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005f4e:	aa0a      	add	r2, sp, #40	; 0x28
 8005f50:	f04f 0802 	mov.w	r8, #2
 8005f54:	a909      	add	r1, sp, #36	; 0x24
 8005f56:	ee19 0a10 	vmov	r0, s18
 8005f5a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005f5e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8005f62:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005f66:	f00b f84c 	bl	8011002 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8005f6a:	232d      	movs	r3, #45	; 0x2d
 8005f6c:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8005f70:	3710      	adds	r7, #16
        updateTextPosition();
 8005f72:	ee19 0a10 	vmov	r0, s18
 8005f76:	f7fc fad5 	bl	8002524 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005f7a:	ee19 1a10 	vmov	r1, s18
 8005f7e:	4630      	mov	r0, r6
        colorPressed = col;
 8005f80:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8005f84:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8005f88:	f008 fca2 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8005f8c:	ee19 0a90 	vmov	r0, s19
 8005f90:	22aa      	movs	r2, #170	; 0xaa
 8005f92:	2121      	movs	r1, #33	; 0x21
 8005f94:	f7fc fa71 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005f98:	aa0a      	add	r2, sp, #40	; 0x28
 8005f9a:	a909      	add	r1, sp, #36	; 0x24
 8005f9c:	ee19 0a90 	vmov	r0, s19
 8005fa0:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005fa4:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005fa8:	f00b f82b 	bl	8011002 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005fac:	232c      	movs	r3, #44	; 0x2c
 8005fae:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8005fb2:	ee19 0a90 	vmov	r0, s19
 8005fb6:	f7fc fab5 	bl	8002524 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005fba:	ee19 1a90 	vmov	r1, s19
 8005fbe:	4630      	mov	r0, r6
        colorPressed = col;
 8005fc0:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8005fc4:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8005fc8:	f008 fc82 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8005fcc:	ee1a 0a10 	vmov	r0, s20
 8005fd0:	2264      	movs	r2, #100	; 0x64
 8005fd2:	2121      	movs	r1, #33	; 0x21
 8005fd4:	f7fc fa51 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005fd8:	aa0a      	add	r2, sp, #40	; 0x28
 8005fda:	a909      	add	r1, sp, #36	; 0x24
 8005fdc:	ee1a 0a10 	vmov	r0, s20
 8005fe0:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005fe4:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005fe8:	f00b f80b 	bl	8011002 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005fec:	232b      	movs	r3, #43	; 0x2b
        updateTextPosition();
 8005fee:	ee1a 0a10 	vmov	r0, s20
 8005ff2:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8005ff6:	f7fc fa95 	bl	8002524 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005ffa:	4630      	mov	r0, r6
        colorPressed = col;
 8005ffc:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8006000:	ee1a 1a10 	vmov	r1, s20
 8006004:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8006008:	f008 fc62 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800600c:	4620      	mov	r0, r4
 800600e:	b00d      	add	sp, #52	; 0x34
 8006010:	ecbd 8b06 	vpop	{d8-d10}
 8006014:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006018:	20013820 	.word	0x20013820
 800601c:	08029036 	.word	0x08029036
 8006020:	080290ac 	.word	0x080290ac

08006024 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006024:	4770      	bx	lr

08006026 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006026:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006028:	68c2      	ldr	r2, [r0, #12]
 800602a:	6844      	ldr	r4, [r0, #4]
 800602c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800602e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006030:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006034:	07d2      	lsls	r2, r2, #31
 8006036:	bf48      	it	mi
 8006038:	5962      	ldrmi	r2, [r4, r5]
 800603a:	689b      	ldr	r3, [r3, #8]
    }
 800603c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800603e:	bf48      	it	mi
 8006040:	58d3      	ldrmi	r3, [r2, r3]
 8006042:	4718      	bx	r3

08006044 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006044:	6843      	ldr	r3, [r0, #4]
 8006046:	b12b      	cbz	r3, 8006054 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006048:	6883      	ldr	r3, [r0, #8]
 800604a:	b92b      	cbnz	r3, 8006058 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800604c:	68c0      	ldr	r0, [r0, #12]
 800604e:	f000 0001 	and.w	r0, r0, #1
 8006052:	4770      	bx	lr
 8006054:	4618      	mov	r0, r3
 8006056:	4770      	bx	lr
 8006058:	2001      	movs	r0, #1
    }
 800605a:	4770      	bx	lr

0800605c <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800605c:	b510      	push	{r4, lr}
 800605e:	2110      	movs	r1, #16
 8006060:	4604      	mov	r4, r0
 8006062:	f020 fc2c 	bl	80268be <_ZdlPvj>
 8006066:	4620      	mov	r0, r4
 8006068:	bd10      	pop	{r4, pc}

0800606a <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Single_Display_1PViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 800606a:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 800606e:	f001 b84b 	b.w	8007108 <_ZN17Gauge_with_Values10initializeEv>

08006072 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Single_Display_1PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8006072:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
 8006076:	4288      	cmp	r0, r1
{
 8006078:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800607a:	d105      	bne.n	8006088 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_Single_Display_1PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800607c:	f00d fec0 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 8006080:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8006084:	f7fc bf9e 	b.w	8002fc4 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8006088:	bd08      	pop	{r3, pc}
	...

0800608c <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 800608c:	b510      	push	{r4, lr}
 800608e:	4b07      	ldr	r3, [pc, #28]	; (80060ac <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x20>)
 8006090:	6003      	str	r3, [r0, #0]
 8006092:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006094:	f00c f9b2 	bl	80123fc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 8006098:	4b05      	ldr	r3, [pc, #20]	; (80060b0 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x24>)
 800609a:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 800609e:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 80060a2:	f7fe f815 	bl	80040d0 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 80060a6:	4620      	mov	r0, r4
 80060a8:	bd10      	pop	{r4, pc}
 80060aa:	bf00      	nop
 80060ac:	0802a808 	.word	0x0802a808
 80060b0:	0802aba0 	.word	0x0802aba0

080060b4 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 80060b4:	b510      	push	{r4, lr}
 80060b6:	4604      	mov	r4, r0
}
 80060b8:	f7ff ffe8 	bl	800608c <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 80060bc:	4620      	mov	r0, r4
 80060be:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80060c2:	f020 fbfc 	bl	80268be <_ZdlPvj>
 80060c6:	4620      	mov	r0, r4
 80060c8:	bd10      	pop	{r4, pc}
	...

080060cc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 80060cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80060d0:	ed2d 8b04 	vpush	{d8-d9}
 80060d4:	4604      	mov	r4, r0
 80060d6:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Single_Display_1PViewBase::buttonCallbackHandler)
 80060d8:	46a2      	mov	sl, r4
 80060da:	2500      	movs	r5, #0
 80060dc:	f00f fb10 	bl	8015700 <_ZN8touchgfx6ScreenC1Ev>
 80060e0:	4baf      	ldr	r3, [pc, #700]	; (80063a0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d4>)
 80060e2:	63e5      	str	r5, [r4, #60]	; 0x3c
 80060e4:	f84a 3b40 	str.w	r3, [sl], #64
        : Widget(), alpha(255), color(0)
 80060e8:	2226      	movs	r2, #38	; 0x26
 80060ea:	4629      	mov	r1, r5
 80060ec:	4650      	mov	r0, sl
 80060ee:	f021 fbdc 	bl	80278aa <memset>
 80060f2:	4650      	mov	r0, sl
 80060f4:	f7fc f9e2 	bl	80024bc <_ZN8touchgfx6WidgetC1Ev>
 80060f8:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 80060fc:	26ff      	movs	r6, #255	; 0xff
 80060fe:	4ba9      	ldr	r3, [pc, #676]	; (80063a4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d8>)
 8006100:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006102:	2226      	movs	r2, #38	; 0x26
 8006104:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006108:	4629      	mov	r1, r5
 800610a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800610e:	4648      	mov	r0, r9
 8006110:	66a5      	str	r5, [r4, #104]	; 0x68
 8006112:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006116:	f021 fbc8 	bl	80278aa <memset>
 800611a:	4648      	mov	r0, r9
 800611c:	f7fc f9ce 	bl	80024bc <_ZN8touchgfx6WidgetC1Ev>
 8006120:	4ba1      	ldr	r3, [pc, #644]	; (80063a8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2dc>)
 8006122:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006124:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006128:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800612c:	a90a      	add	r1, sp, #40	; 0x28
 800612e:	4648      	mov	r0, r9
        : Widget(), bitmap(bmp), alpha(255)
 8006130:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006134:	f00b f95b 	bl	80113ee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006138:	f104 0398 	add.w	r3, r4, #152	; 0x98
 800613c:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8006140:	4618      	mov	r0, r3
 8006142:	ee08 3a10 	vmov	s16, r3
 8006146:	f7fc f9cb 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 800614a:	4638      	mov	r0, r7
 800614c:	f00a f818 	bl	8010180 <_ZN8touchgfx4LineC1Ev>
 8006150:	f504 73a8 	add.w	r3, r4, #336	; 0x150
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006154:	4618      	mov	r0, r3
 8006156:	9303      	str	r3, [sp, #12]
 8006158:	f7fb f8b2 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800615c:	4b93      	ldr	r3, [pc, #588]	; (80063ac <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e0>)
 800615e:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
 8006162:	f504 78b2 	add.w	r8, r4, #356	; 0x164
 8006166:	3324      	adds	r3, #36	; 0x24
 8006168:	f8c4 3158 	str.w	r3, [r4, #344]	; 0x158
 800616c:	f8c4 515c 	str.w	r5, [r4, #348]	; 0x15c
 8006170:	4640      	mov	r0, r8
 8006172:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 8006176:	f7fc f9b3 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 800617a:	4658      	mov	r0, fp
 800617c:	f7fc f9b0 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 8006180:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8006184:	4618      	mov	r0, r3
 8006186:	ee08 3a90 	vmov	s17, r3
 800618a:	f00b fa71 	bl	8011670 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800618e:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8006192:	4618      	mov	r0, r3
 8006194:	ee09 3a10 	vmov	s18, r3
 8006198:	f000 ffac 	bl	80070f4 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800619c:	4a84      	ldr	r2, [pc, #528]	; (80063b0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 800619e:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80061a2:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 80061a6:	4a83      	ldr	r2, [pc, #524]	; (80063b4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80061a8:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80061ac:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 80061b0:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 80061b4:	f00c f918 	bl	80123e8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80061b8:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80061bc:	462a      	mov	r2, r5
 80061be:	4650      	mov	r0, sl
 80061c0:	9300      	str	r3, [sp, #0]
 80061c2:	4629      	mov	r1, r5
 80061c4:	23f0      	movs	r3, #240	; 0xf0
 80061c6:	f7fc f965 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
 80061ca:	1d26      	adds	r6, r4, #4
        color = newColor;
 80061cc:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80061d0:	66a3      	str	r3, [r4, #104]	; 0x68
 80061d2:	4651      	mov	r1, sl
 80061d4:	4630      	mov	r0, r6
 80061d6:	f008 fb7b 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80061da:	462a      	mov	r2, r5
 80061dc:	4648      	mov	r0, r9
 80061de:	4629      	mov	r1, r5
 80061e0:	f7fc f94b 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 80061e4:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80061e6:	4648      	mov	r0, r9
 80061e8:	a90a      	add	r1, sp, #40	; 0x28
 80061ea:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80061ee:	f00b f8fe 	bl	80113ee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80061f2:	4649      	mov	r1, r9
 80061f4:	4630      	mov	r0, r6
 80061f6:	f008 fb6b 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80061fa:	f04f 39ff 	mov.w	r9, #4294967295
    textArea3.setXY(31, 60);
 80061fe:	223c      	movs	r2, #60	; 0x3c
 8006200:	ee18 0a10 	vmov	r0, s16
 8006204:	211f      	movs	r1, #31
        boundingArea = calculateBoundingArea();
 8006206:	f10d 0a10 	add.w	sl, sp, #16
 800620a:	f7fc f936 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 800620e:	ee18 1a10 	vmov	r1, s16
 8006212:	4650      	mov	r0, sl
        color = newColor;
 8006214:	f8c4 90c8 	str.w	r9, [r4, #200]	; 0xc8
        linespace = space;
 8006218:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800621c:	f00a fa72 	bl	8010704 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006220:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8006224:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006228:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800622c:	4b62      	ldr	r3, [pc, #392]	; (80063b8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ec>)
 800622e:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 8006230:	ee18 0a10 	vmov	r0, s16
 8006234:	2315      	movs	r3, #21
 8006236:	a90a      	add	r1, sp, #40	; 0x28
 8006238:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800623c:	f00a fcfc 	bl	8010c38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006240:	ee18 1a10 	vmov	r1, s16
 8006244:	4630      	mov	r0, r6
 8006246:	f008 fb43 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800624a:	230a      	movs	r3, #10
 800624c:	9300      	str	r3, [sp, #0]
 800624e:	2232      	movs	r2, #50	; 0x32
 8006250:	23f0      	movs	r3, #240	; 0xf0
 8006252:	4629      	mov	r1, r5
 8006254:	4638      	mov	r0, r7
 8006256:	f7fc f91d 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
 800625a:	9b03      	ldr	r3, [sp, #12]
 800625c:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006260:	22a0      	movs	r2, #160	; 0xa0
 8006262:	4611      	mov	r1, r2
 8006264:	4638      	mov	r0, r7
 8006266:	f8c4 915c 	str.w	r9, [r4, #348]	; 0x15c
        color565 = LCD16bpp::getNativeColor(painterColor);
 800626a:	f8a4 9160 	strh.w	r9, [r4, #352]	; 0x160
 800626e:	f00a f89d 	bl	80103ac <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006272:	22a0      	movs	r2, #160	; 0xa0
 8006274:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006278:	4638      	mov	r0, r7
 800627a:	f00a f8a2 	bl	80103c2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800627e:	f8d4 311c 	ldr.w	r3, [r4, #284]	; 0x11c
 8006282:	2b20      	cmp	r3, #32
 8006284:	d005      	beq.n	8006292 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x1c6>
        lineWidthQ5 = widthQ5;
 8006286:	2320      	movs	r3, #32
 8006288:	f8c4 311c 	str.w	r3, [r4, #284]	; 0x11c
        updateCachedShape();
 800628c:	4638      	mov	r0, r7
 800628e:	f009 ff97 	bl	80101c0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006292:	4638      	mov	r0, r7
 8006294:	2101      	movs	r1, #1
 8006296:	f00a f89f 	bl	80103d8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800629a:	4639      	mov	r1, r7
 800629c:	4630      	mov	r0, r6
 800629e:	f008 fb17 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80062a2:	ad04      	add	r5, sp, #16
        color = newColor;
 80062a4:	f04f 37ff 	mov.w	r7, #4294967295
        linespace = space;
 80062a8:	f04f 0900 	mov.w	r9, #0
    textArea2.setXY(69, 36);
 80062ac:	2224      	movs	r2, #36	; 0x24
 80062ae:	4640      	mov	r0, r8
 80062b0:	2145      	movs	r1, #69	; 0x45
 80062b2:	f7fc f8e2 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80062b6:	4641      	mov	r1, r8
 80062b8:	4628      	mov	r0, r5
        color = newColor;
 80062ba:	f8c4 7194 	str.w	r7, [r4, #404]	; 0x194
        linespace = space;
 80062be:	f8a4 9198 	strh.w	r9, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 80062c2:	f00a fa1f 	bl	8010704 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80062c6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80062ca:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80062ce:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80062d2:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 80063b8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ec>
 80062d6:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 80062da:	2322      	movs	r3, #34	; 0x22
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 80062dc:	a90a      	add	r1, sp, #40	; 0x28
 80062de:	4640      	mov	r0, r8
 80062e0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80062e4:	f00a fca8 	bl	8010c38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80062e8:	4641      	mov	r1, r8
 80062ea:	4630      	mov	r0, r6
 80062ec:	f008 faf0 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(50, 12);
 80062f0:	220c      	movs	r2, #12
 80062f2:	4658      	mov	r0, fp
 80062f4:	2132      	movs	r1, #50	; 0x32
 80062f6:	f7fc f8c0 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 80062fa:	4659      	mov	r1, fp
 80062fc:	4628      	mov	r0, r5
        color = newColor;
 80062fe:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8006302:	f8a4 91e0 	strh.w	r9, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8006306:	f00a f9fd 	bl	8010704 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800630a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800630e:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 8006312:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006316:	2521      	movs	r5, #33	; 0x21
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 8006318:	a90a      	add	r1, sp, #40	; 0x28
 800631a:	4658      	mov	r0, fp
 800631c:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006320:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 8006324:	f00a fc88 	bl	8010c38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006328:	4659      	mov	r1, fp
 800632a:	4630      	mov	r0, r6
 800632c:	f008 fad0 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 256);
 8006330:	ee18 0a90 	vmov	r0, s17
 8006334:	4629      	mov	r1, r5
 8006336:	f44f 7280 	mov.w	r2, #256	; 0x100
 800633a:	f7fc f89e 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 800633e:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006340:	aa0a      	add	r2, sp, #40	; 0x28
 8006342:	a909      	add	r1, sp, #36	; 0x24
 8006344:	ee18 0a90 	vmov	r0, s17
 8006348:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800634c:	2302      	movs	r3, #2
 800634e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006352:	f00a fe56 	bl	8011002 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006356:	2320      	movs	r3, #32
        updateTextPosition();
 8006358:	ee18 0a90 	vmov	r0, s17
 800635c:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 8006360:	f7fc f8e0 	bl	8002524 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8006364:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 8006368:	3314      	adds	r3, #20
 800636a:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 800636e:	ee18 1a90 	vmov	r1, s17
 8006372:	4630      	mov	r0, r6
        colorPressed = col;
 8006374:	e9c4 778c 	strd	r7, r7, [r4, #560]	; 0x230
 8006378:	f008 faaa 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 800637c:	ee19 0a10 	vmov	r0, s18
 8006380:	224e      	movs	r2, #78	; 0x4e
 8006382:	4649      	mov	r1, r9
 8006384:	f7fc f879 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8006388:	4630      	mov	r0, r6
 800638a:	ee19 1a10 	vmov	r1, s18
 800638e:	f008 fa9f 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006392:	4620      	mov	r0, r4
 8006394:	b00d      	add	sp, #52	; 0x34
 8006396:	ecbd 8b04 	vpop	{d8-d9}
 800639a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800639e:	bf00      	nop
 80063a0:	0802a808 	.word	0x0802a808
 80063a4:	0802b514 	.word	0x0802b514
 80063a8:	0802b6dc 	.word	0x0802b6dc
 80063ac:	0802b248 	.word	0x0802b248
 80063b0:	0802a7f0 	.word	0x0802a7f0
 80063b4:	08006073 	.word	0x08006073
 80063b8:	080290ac 	.word	0x080290ac

080063bc <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80063bc:	4770      	bx	lr

080063be <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80063be:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80063c0:	68c2      	ldr	r2, [r0, #12]
 80063c2:	6844      	ldr	r4, [r0, #4]
 80063c4:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80063c6:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80063c8:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80063cc:	07d2      	lsls	r2, r2, #31
 80063ce:	bf48      	it	mi
 80063d0:	5962      	ldrmi	r2, [r4, r5]
 80063d2:	689b      	ldr	r3, [r3, #8]
    }
 80063d4:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80063d6:	bf48      	it	mi
 80063d8:	58d3      	ldrmi	r3, [r2, r3]
 80063da:	4718      	bx	r3

080063dc <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80063dc:	6843      	ldr	r3, [r0, #4]
 80063de:	b12b      	cbz	r3, 80063ec <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80063e0:	6883      	ldr	r3, [r0, #8]
 80063e2:	b92b      	cbnz	r3, 80063f0 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80063e4:	68c0      	ldr	r0, [r0, #12]
 80063e6:	f000 0001 	and.w	r0, r0, #1
 80063ea:	4770      	bx	lr
 80063ec:	4618      	mov	r0, r3
 80063ee:	4770      	bx	lr
 80063f0:	2001      	movs	r0, #1
    }
 80063f2:	4770      	bx	lr

080063f4 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80063f4:	b510      	push	{r4, lr}
 80063f6:	2110      	movs	r1, #16
 80063f8:	4604      	mov	r4, r0
 80063fa:	f020 fa60 	bl	80268be <_ZdlPvj>
 80063fe:	4620      	mov	r0, r4
 8006400:	bd10      	pop	{r4, pc}

08006402 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 8006402:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 8006406:	f000 be7f 	b.w	8007108 <_ZN17Gauge_with_Values10initializeEv>

0800640a <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 800640a:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
 800640e:	4288      	cmp	r0, r1
{
 8006410:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006412:	d105      	bne.n	8006420 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006414:	f00d fcf4 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 8006418:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 800641c:	f7fc bdd2 	b.w	8002fc4 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8006420:	bd08      	pop	{r3, pc}
	...

08006424 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8006424:	b510      	push	{r4, lr}
 8006426:	4b07      	ldr	r3, [pc, #28]	; (8006444 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x20>)
 8006428:	6003      	str	r3, [r0, #0]
 800642a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800642c:	f00b ffe6 	bl	80123fc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 8006430:	4b05      	ldr	r3, [pc, #20]	; (8006448 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x24>)
 8006432:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 8006436:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 800643a:	f7fd fe49 	bl	80040d0 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 800643e:	4620      	mov	r0, r4
 8006440:	bd10      	pop	{r4, pc}
 8006442:	bf00      	nop
 8006444:	0802a854 	.word	0x0802a854
 8006448:	0802aba0 	.word	0x0802aba0

0800644c <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 800644c:	b510      	push	{r4, lr}
 800644e:	4604      	mov	r4, r0
}
 8006450:	f7ff ffe8 	bl	8006424 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 8006454:	4620      	mov	r0, r4
 8006456:	f241 31e4 	movw	r1, #5092	; 0x13e4
 800645a:	f020 fa30 	bl	80268be <_ZdlPvj>
 800645e:	4620      	mov	r0, r4
 8006460:	bd10      	pop	{r4, pc}
	...

08006464 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 8006464:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006468:	ed2d 8b04 	vpush	{d8-d9}
 800646c:	4604      	mov	r4, r0
 800646e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 8006470:	46a3      	mov	fp, r4
 8006472:	2500      	movs	r5, #0
 8006474:	f00f f944 	bl	8015700 <_ZN8touchgfx6ScreenC1Ev>
 8006478:	4bae      	ldr	r3, [pc, #696]	; (8006734 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d0>)
 800647a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800647c:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006480:	2226      	movs	r2, #38	; 0x26
 8006482:	4629      	mov	r1, r5
 8006484:	4658      	mov	r0, fp
 8006486:	f021 fa10 	bl	80278aa <memset>
 800648a:	4658      	mov	r0, fp
 800648c:	f7fc f816 	bl	80024bc <_ZN8touchgfx6WidgetC1Ev>
 8006490:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006494:	26ff      	movs	r6, #255	; 0xff
 8006496:	4ba8      	ldr	r3, [pc, #672]	; (8006738 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d4>)
 8006498:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800649a:	2226      	movs	r2, #38	; 0x26
 800649c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80064a0:	4629      	mov	r1, r5
 80064a2:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80064a6:	66a5      	str	r5, [r4, #104]	; 0x68
 80064a8:	4650      	mov	r0, sl
 80064aa:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80064ae:	f021 f9fc 	bl	80278aa <memset>
 80064b2:	4650      	mov	r0, sl
 80064b4:	f7fc f802 	bl	80024bc <_ZN8touchgfx6WidgetC1Ev>
 80064b8:	4ba0      	ldr	r3, [pc, #640]	; (800673c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d8>)
 80064ba:	66e3      	str	r3, [r4, #108]	; 0x6c
 80064bc:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80064c0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80064c4:	a90a      	add	r1, sp, #40	; 0x28
 80064c6:	f104 0798 	add.w	r7, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80064ca:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80064ce:	4650      	mov	r0, sl
 80064d0:	f00a ff8d 	bl	80113ee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80064d4:	4638      	mov	r0, r7
 80064d6:	f009 fe53 	bl	8010180 <_ZN8touchgfx4LineC1Ev>
 80064da:	f504 7384 	add.w	r3, r4, #264	; 0x108
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80064de:	4618      	mov	r0, r3
 80064e0:	9303      	str	r3, [sp, #12]
 80064e2:	f7fa feed 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80064e6:	4b96      	ldr	r3, [pc, #600]	; (8006740 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2dc>)
 80064e8:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 80064ec:	f504 798e 	add.w	r9, r4, #284	; 0x11c
 80064f0:	3324      	adds	r3, #36	; 0x24
 80064f2:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 80064f6:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 80064fa:	4648      	mov	r0, r9
 80064fc:	f504 78b2 	add.w	r8, r4, #356	; 0x164
 8006500:	f7fb ffee 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 8006504:	4640      	mov	r0, r8
 8006506:	f7fb ffeb 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 800650a:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 800650e:	4618      	mov	r0, r3
 8006510:	ee08 3a10 	vmov	s16, r3
 8006514:	f7fb ffe4 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 8006518:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 800651c:	4618      	mov	r0, r3
 800651e:	ee08 3a90 	vmov	s17, r3
 8006522:	f00b f8a5 	bl	8011670 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006526:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 800652a:	4618      	mov	r0, r3
 800652c:	ee09 3a10 	vmov	s18, r3
 8006530:	f000 fde0 	bl	80070f4 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006534:	4a83      	ldr	r2, [pc, #524]	; (8006744 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e0>)
 8006536:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800653a:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 800653e:	4a82      	ldr	r2, [pc, #520]	; (8006748 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006540:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006544:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 8006548:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 800654c:	f00b ff4c 	bl	80123e8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006550:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006554:	462a      	mov	r2, r5
 8006556:	9300      	str	r3, [sp, #0]
 8006558:	4629      	mov	r1, r5
 800655a:	23f0      	movs	r3, #240	; 0xf0
 800655c:	4658      	mov	r0, fp
 800655e:	f7fb ff99 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006562:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006564:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006568:	66a3      	str	r3, [r4, #104]	; 0x68
 800656a:	4659      	mov	r1, fp
 800656c:	4630      	mov	r0, r6
 800656e:	f008 f9af 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006572:	462a      	mov	r2, r5
 8006574:	4629      	mov	r1, r5
 8006576:	4650      	mov	r0, sl
 8006578:	f7fb ff7f 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 800657c:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800657e:	a90a      	add	r1, sp, #40	; 0x28
 8006580:	4650      	mov	r0, sl
 8006582:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006586:	f00a ff32 	bl	80113ee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800658a:	4651      	mov	r1, sl
 800658c:	4630      	mov	r0, r6
 800658e:	f008 f99f 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006592:	230a      	movs	r3, #10
 8006594:	9300      	str	r3, [sp, #0]
 8006596:	2232      	movs	r2, #50	; 0x32
 8006598:	23f0      	movs	r3, #240	; 0xf0
 800659a:	4629      	mov	r1, r5
 800659c:	4638      	mov	r0, r7
 800659e:	f7fb ff79 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
 80065a2:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80065a6:	22a0      	movs	r2, #160	; 0xa0
 80065a8:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        color565 = LCD16bpp::getNativeColor(painterColor);
 80065ac:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
 80065b0:	9b03      	ldr	r3, [sp, #12]
 80065b2:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80065b6:	4611      	mov	r1, r2
 80065b8:	4638      	mov	r0, r7
 80065ba:	f009 fef7 	bl	80103ac <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80065be:	22a0      	movs	r2, #160	; 0xa0
 80065c0:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80065c4:	4638      	mov	r0, r7
 80065c6:	f009 fefc 	bl	80103c2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80065ca:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 80065ce:	2b20      	cmp	r3, #32
 80065d0:	d005      	beq.n	80065de <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x17a>
        lineWidthQ5 = widthQ5;
 80065d2:	2320      	movs	r3, #32
 80065d4:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
 80065d8:	4638      	mov	r0, r7
 80065da:	f009 fdf1 	bl	80101c0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80065de:	4638      	mov	r0, r7
 80065e0:	2101      	movs	r1, #1
 80065e2:	f009 fef9 	bl	80103d8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80065e6:	4639      	mov	r1, r7
 80065e8:	4630      	mov	r0, r6
 80065ea:	ad04      	add	r5, sp, #16
 80065ec:	f008 f970 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80065f0:	f04f 37ff 	mov.w	r7, #4294967295
        linespace = space;
 80065f4:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 36);
 80065f8:	2224      	movs	r2, #36	; 0x24
 80065fa:	4648      	mov	r0, r9
 80065fc:	2145      	movs	r1, #69	; 0x45
 80065fe:	f7fb ff3c 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006602:	4649      	mov	r1, r9
 8006604:	4628      	mov	r0, r5
        color = newColor;
 8006606:	f8c4 714c 	str.w	r7, [r4, #332]	; 0x14c
        linespace = space;
 800660a:	f8a4 a150 	strh.w	sl, [r4, #336]	; 0x150
        boundingArea = calculateBoundingArea();
 800660e:	f00a f879 	bl	8010704 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006612:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006616:	f109 033c 	add.w	r3, r9, #60	; 0x3c
 800661a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800661e:	f8df b12c 	ldr.w	fp, [pc, #300]	; 800674c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e8>
 8006622:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006626:	2325      	movs	r3, #37	; 0x25
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 8006628:	a90a      	add	r1, sp, #40	; 0x28
 800662a:	4648      	mov	r0, r9
 800662c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006630:	f00a fb02 	bl	8010c38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006634:	4649      	mov	r1, r9
 8006636:	4630      	mov	r0, r6
 8006638:	f008 f94a 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 800663c:	223c      	movs	r2, #60	; 0x3c
 800663e:	4640      	mov	r0, r8
 8006640:	211f      	movs	r1, #31
 8006642:	f7fb ff1a 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8006646:	4641      	mov	r1, r8
 8006648:	4628      	mov	r0, r5
        color = newColor;
 800664a:	f8c4 7194 	str.w	r7, [r4, #404]	; 0x194
        linespace = space;
 800664e:	f8a4 a198 	strh.w	sl, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 8006652:	f00a f857 	bl	8010704 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006656:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800665a:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 800665e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006662:	2314      	movs	r3, #20
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 8006664:	a90a      	add	r1, sp, #40	; 0x28
 8006666:	4640      	mov	r0, r8
 8006668:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800666c:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006670:	f00a fae2 	bl	8010c38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006674:	4641      	mov	r1, r8
 8006676:	4630      	mov	r0, r6
 8006678:	f008 f92a 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(50, 12);
 800667c:	ee18 0a10 	vmov	r0, s16
 8006680:	220c      	movs	r2, #12
 8006682:	2132      	movs	r1, #50	; 0x32
 8006684:	f7fb fef9 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8006688:	ee18 1a10 	vmov	r1, s16
 800668c:	4628      	mov	r0, r5
        color = newColor;
 800668e:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8006692:	f8a4 a1e0 	strh.w	sl, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8006696:	f00a f835 	bl	8010704 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800669a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800669e:	ee18 3a10 	vmov	r3, s16
 80066a2:	333c      	adds	r3, #60	; 0x3c
 80066a4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80066a8:	2324      	movs	r3, #36	; 0x24
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 80066aa:	ee18 0a10 	vmov	r0, s16
 80066ae:	a90a      	add	r1, sp, #40	; 0x28
 80066b0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80066b4:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80066b8:	f00a fabe 	bl	8010c38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80066bc:	ee18 1a10 	vmov	r1, s16
 80066c0:	4630      	mov	r0, r6
 80066c2:	f008 f905 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 80066c6:	ee18 0a90 	vmov	r0, s17
 80066ca:	f240 1201 	movw	r2, #257	; 0x101
 80066ce:	2121      	movs	r1, #33	; 0x21
 80066d0:	f7fb fed3 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 80066d4:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80066d6:	aa0a      	add	r2, sp, #40	; 0x28
 80066d8:	a909      	add	r1, sp, #36	; 0x24
 80066da:	ee18 0a90 	vmov	r0, s17
 80066de:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80066e2:	2302      	movs	r3, #2
 80066e4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80066e8:	f00a fc8b 	bl	8011002 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80066ec:	2323      	movs	r3, #35	; 0x23
        updateTextPosition();
 80066ee:	ee18 0a90 	vmov	r0, s17
 80066f2:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 80066f6:	f7fb ff15 	bl	8002524 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80066fa:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 80066fe:	3314      	adds	r3, #20
 8006700:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 8006704:	ee18 1a90 	vmov	r1, s17
 8006708:	4630      	mov	r0, r6
        colorPressed = col;
 800670a:	e9c4 778c 	strd	r7, r7, [r4, #560]	; 0x230
 800670e:	f008 f8df 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 8006712:	ee19 0a10 	vmov	r0, s18
 8006716:	224e      	movs	r2, #78	; 0x4e
 8006718:	4651      	mov	r1, sl
 800671a:	f7fb feae 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 800671e:	4630      	mov	r0, r6
 8006720:	ee19 1a10 	vmov	r1, s18
 8006724:	f008 f8d4 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006728:	4620      	mov	r0, r4
 800672a:	b00d      	add	sp, #52	; 0x34
 800672c:	ecbd 8b04 	vpop	{d8-d9}
 8006730:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006734:	0802a854 	.word	0x0802a854
 8006738:	0802b514 	.word	0x0802b514
 800673c:	0802b6dc 	.word	0x0802b6dc
 8006740:	0802b248 	.word	0x0802b248
 8006744:	0802a83c 	.word	0x0802a83c
 8006748:	0800640b 	.word	0x0800640b
 800674c:	080290ac 	.word	0x080290ac

08006750 <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 8006750:	4770      	bx	lr

08006752 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006752:	4770      	bx	lr

08006754 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006754:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006756:	68c2      	ldr	r2, [r0, #12]
 8006758:	6844      	ldr	r4, [r0, #4]
 800675a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800675c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800675e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006762:	07d2      	lsls	r2, r2, #31
 8006764:	bf48      	it	mi
 8006766:	5962      	ldrmi	r2, [r4, r5]
 8006768:	689b      	ldr	r3, [r3, #8]
    }
 800676a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800676c:	bf48      	it	mi
 800676e:	58d3      	ldrmi	r3, [r2, r3]
 8006770:	4718      	bx	r3

08006772 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006772:	6843      	ldr	r3, [r0, #4]
 8006774:	b12b      	cbz	r3, 8006782 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006776:	6883      	ldr	r3, [r0, #8]
 8006778:	b92b      	cbnz	r3, 8006786 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800677a:	68c0      	ldr	r0, [r0, #12]
 800677c:	f000 0001 	and.w	r0, r0, #1
 8006780:	4770      	bx	lr
 8006782:	4618      	mov	r0, r3
 8006784:	4770      	bx	lr
 8006786:	2001      	movs	r0, #1
    }
 8006788:	4770      	bx	lr

0800678a <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800678a:	b510      	push	{r4, lr}
 800678c:	2110      	movs	r1, #16
 800678e:	4604      	mov	r4, r0
 8006790:	f020 f895 	bl	80268be <_ZdlPvj>
 8006794:	4620      	mov	r0, r4
 8006796:	bd10      	pop	{r4, pc}

08006798 <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8006798:	b510      	push	{r4, lr}
 800679a:	4b03      	ldr	r3, [pc, #12]	; (80067a8 <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 800679c:	6003      	str	r3, [r0, #0]
 800679e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80067a0:	f00b fe2c 	bl	80123fc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80067a4:	4620      	mov	r0, r4
 80067a6:	bd10      	pop	{r4, pc}
 80067a8:	0802a8a0 	.word	0x0802a8a0

080067ac <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 80067ac:	b507      	push	{r0, r1, r2, lr}
 80067ae:	4b07      	ldr	r3, [pc, #28]	; (80067cc <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 80067b0:	6003      	str	r3, [r0, #0]
 80067b2:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80067b4:	f00b fe22 	bl	80123fc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80067b8:	9801      	ldr	r0, [sp, #4]
 80067ba:	f241 01b0 	movw	r1, #4272	; 0x10b0
 80067be:	f020 f87e 	bl	80268be <_ZdlPvj>
 80067c2:	9801      	ldr	r0, [sp, #4]
 80067c4:	b003      	add	sp, #12
 80067c6:	f85d fb04 	ldr.w	pc, [sp], #4
 80067ca:	bf00      	nop
 80067cc:	0802a8a0 	.word	0x0802a8a0

080067d0 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 80067d0:	f500 70b4 	add.w	r0, r0, #360	; 0x168
 80067d4:	4288      	cmp	r0, r1
{
 80067d6:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 80067d8:	d105      	bne.n	80067e6 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80067da:	f00d fb11 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 80067de:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 80067e2:	f7fc bbbf 	b.w	8002f64 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 80067e6:	bd08      	pop	{r3, pc}

080067e8 <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 80067e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80067ec:	ed2d 8b04 	vpush	{d8-d9}
 80067f0:	4604      	mov	r4, r0
 80067f2:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 80067f4:	46a3      	mov	fp, r4
 80067f6:	2500      	movs	r5, #0
 80067f8:	f00e ff82 	bl	8015700 <_ZN8touchgfx6ScreenC1Ev>
 80067fc:	4bd1      	ldr	r3, [pc, #836]	; (8006b44 <_ZN20Project_InfoViewBaseC1Ev+0x35c>)
 80067fe:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006800:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006804:	2226      	movs	r2, #38	; 0x26
 8006806:	4629      	mov	r1, r5
 8006808:	4658      	mov	r0, fp
 800680a:	f021 f84e 	bl	80278aa <memset>
 800680e:	4658      	mov	r0, fp
 8006810:	f7fb fe54 	bl	80024bc <_ZN8touchgfx6WidgetC1Ev>
 8006814:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006818:	26ff      	movs	r6, #255	; 0xff
 800681a:	4bcb      	ldr	r3, [pc, #812]	; (8006b48 <_ZN20Project_InfoViewBaseC1Ev+0x360>)
 800681c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800681e:	2226      	movs	r2, #38	; 0x26
 8006820:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006824:	4629      	mov	r1, r5
 8006826:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800682a:	4650      	mov	r0, sl
 800682c:	66a5      	str	r5, [r4, #104]	; 0x68
 800682e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006832:	f021 f83a 	bl	80278aa <memset>
 8006836:	4650      	mov	r0, sl
 8006838:	f7fb fe40 	bl	80024bc <_ZN8touchgfx6WidgetC1Ev>
 800683c:	4bc3      	ldr	r3, [pc, #780]	; (8006b4c <_ZN20Project_InfoViewBaseC1Ev+0x364>)
 800683e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006840:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006844:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006848:	a90a      	add	r1, sp, #40	; 0x28
 800684a:	4650      	mov	r0, sl
 800684c:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006850:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006854:	f00a fdcb 	bl	80113ee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006858:	4648      	mov	r0, r9
 800685a:	f7fb fe41 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 800685e:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8006862:	4bbb      	ldr	r3, [pc, #748]	; (8006b50 <_ZN20Project_InfoViewBaseC1Ev+0x368>)
 8006864:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006868:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800686c:	4638      	mov	r0, r7
 800686e:	f009 fc87 	bl	8010180 <_ZN8touchgfx4LineC1Ev>
 8006872:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006876:	4618      	mov	r0, r3
 8006878:	9303      	str	r3, [sp, #12]
 800687a:	f7fa fd21 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800687e:	4bb5      	ldr	r3, [pc, #724]	; (8006b54 <_ZN20Project_InfoViewBaseC1Ev+0x36c>)
 8006880:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8006884:	3324      	adds	r3, #36	; 0x24
 8006886:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 800688a:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 800688e:	4618      	mov	r0, r3
 8006890:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8006894:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8006898:	ee09 3a10 	vmov	s18, r3
 800689c:	f00a fee8 	bl	8011670 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80068a0:	4640      	mov	r0, r8
 80068a2:	f7fb fe1d 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 80068a6:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80068aa:	4618      	mov	r0, r3
 80068ac:	ee08 3a10 	vmov	s16, r3
 80068b0:	f7fb fe16 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 80068b4:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80068b8:	4618      	mov	r0, r3
 80068ba:	ee08 3a90 	vmov	s17, r3
 80068be:	f7fb fe0f 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80068c2:	4aa5      	ldr	r2, [pc, #660]	; (8006b58 <_ZN20Project_InfoViewBaseC1Ev+0x370>)
 80068c4:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80068c8:	e9c3 2428 	strd	r2, r4, [r3, #160]	; 0xa0
 80068cc:	4aa3      	ldr	r2, [pc, #652]	; (8006b5c <_ZN20Project_InfoViewBaseC1Ev+0x374>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80068ce:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80068d2:	e9c3 252a 	strd	r2, r5, [r3, #168]	; 0xa8
 80068d6:	f504 7024 	add.w	r0, r4, #656	; 0x290
 80068da:	f00b fd85 	bl	80123e8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80068de:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80068e2:	462a      	mov	r2, r5
 80068e4:	4658      	mov	r0, fp
 80068e6:	9300      	str	r3, [sp, #0]
 80068e8:	4629      	mov	r1, r5
 80068ea:	23f0      	movs	r3, #240	; 0xf0
 80068ec:	f7fb fdd2 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
 80068f0:	1d26      	adds	r6, r4, #4
        color = newColor;
 80068f2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80068f6:	66a3      	str	r3, [r4, #104]	; 0x68
 80068f8:	4659      	mov	r1, fp
 80068fa:	4630      	mov	r0, r6
 80068fc:	f007 ffe8 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006900:	462a      	mov	r2, r5
 8006902:	4650      	mov	r0, sl
 8006904:	4629      	mov	r1, r5
 8006906:	f7fb fdb8 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 800690a:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800690c:	4650      	mov	r0, sl
 800690e:	a90a      	add	r1, sp, #40	; 0x28
 8006910:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006914:	f00a fd6b 	bl	80113ee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006918:	4651      	mov	r1, sl
 800691a:	4630      	mov	r0, r6
 800691c:	f007 ffd8 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8006920:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006924:	2156      	movs	r1, #86	; 0x56
 8006926:	4648      	mov	r0, r9
 8006928:	f7fb fda7 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 800692c:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006930:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006934:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8006938:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 800693c:	4650      	mov	r0, sl
 800693e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8006942:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006946:	4649      	mov	r1, r9
 8006948:	4798      	blx	r3
 800694a:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 800694e:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006952:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006956:	4b82      	ldr	r3, [pc, #520]	; (8006b60 <_ZN20Project_InfoViewBaseC1Ev+0x378>)
 8006958:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5C9S).getText());
 800695a:	f504 7a22 	add.w	sl, r4, #648	; 0x288
 800695e:	b92b      	cbnz	r3, 800696c <_ZN20Project_InfoViewBaseC1Ev+0x184>
 8006960:	4b80      	ldr	r3, [pc, #512]	; (8006b64 <_ZN20Project_InfoViewBaseC1Ev+0x37c>)
 8006962:	4a81      	ldr	r2, [pc, #516]	; (8006b68 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 8006964:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006966:	4881      	ldr	r0, [pc, #516]	; (8006b6c <_ZN20Project_InfoViewBaseC1Ev+0x384>)
 8006968:	f020 fd9a 	bl	80274a0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800696c:	4b80      	ldr	r3, [pc, #512]	; (8006b70 <_ZN20Project_InfoViewBaseC1Ev+0x388>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800696e:	881b      	ldrh	r3, [r3, #0]
 8006970:	b91b      	cbnz	r3, 800697a <_ZN20Project_InfoViewBaseC1Ev+0x192>
 8006972:	4b80      	ldr	r3, [pc, #512]	; (8006b74 <_ZN20Project_InfoViewBaseC1Ev+0x38c>)
 8006974:	4a7c      	ldr	r2, [pc, #496]	; (8006b68 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 8006976:	2161      	movs	r1, #97	; 0x61
 8006978:	e7f5      	b.n	8006966 <_ZN20Project_InfoViewBaseC1Ev+0x17e>
        return texts->getText(typedTextId);
 800697a:	4b7f      	ldr	r3, [pc, #508]	; (8006b78 <_ZN20Project_InfoViewBaseC1Ev+0x390>)
 800697c:	4629      	mov	r1, r5
 800697e:	6818      	ldr	r0, [r3, #0]
 8006980:	f000 fb1c 	bl	8006fbc <_ZNK8touchgfx5Texts7getTextEt>
 8006984:	4a7d      	ldr	r2, [pc, #500]	; (8006b7c <_ZN20Project_InfoViewBaseC1Ev+0x394>)
 8006986:	4603      	mov	r3, r0
 8006988:	2104      	movs	r1, #4
 800698a:	4650      	mov	r0, sl
 800698c:	f010 fb9c 	bl	80170c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8006990:	4648      	mov	r0, r9
        wc1 = value;
 8006992:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8006996:	f00a f92f 	bl	8010bf8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800699a:	4b79      	ldr	r3, [pc, #484]	; (8006b80 <_ZN20Project_InfoViewBaseC1Ev+0x398>)
 800699c:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KYIO));
 800699e:	a90a      	add	r1, sp, #40	; 0x28
 80069a0:	2301      	movs	r3, #1
 80069a2:	4648      	mov	r0, r9
 80069a4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80069a8:	f00a f946 	bl	8010c38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80069ac:	4649      	mov	r1, r9
 80069ae:	4630      	mov	r0, r6
 80069b0:	f007 ff8e 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80069b4:	230a      	movs	r3, #10
 80069b6:	9300      	str	r3, [sp, #0]
 80069b8:	2232      	movs	r2, #50	; 0x32
 80069ba:	23f0      	movs	r3, #240	; 0xf0
 80069bc:	4629      	mov	r1, r5
 80069be:	4638      	mov	r0, r7
 80069c0:	f7fb fd68 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
 80069c4:	9b03      	ldr	r3, [sp, #12]
 80069c6:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80069ca:	22a0      	movs	r2, #160	; 0xa0
 80069cc:	4611      	mov	r1, r2
 80069ce:	4638      	mov	r0, r7
 80069d0:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 80069d4:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 80069d8:	f009 fce8 	bl	80103ac <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80069dc:	22a0      	movs	r2, #160	; 0xa0
 80069de:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80069e2:	4638      	mov	r0, r7
 80069e4:	f009 fced 	bl	80103c2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80069e8:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80069ec:	2b20      	cmp	r3, #32
 80069ee:	d005      	beq.n	80069fc <_ZN20Project_InfoViewBaseC1Ev+0x214>
        lineWidthQ5 = widthQ5;
 80069f0:	2320      	movs	r3, #32
 80069f2:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 80069f6:	4638      	mov	r0, r7
 80069f8:	f009 fbe2 	bl	80101c0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80069fc:	4638      	mov	r0, r7
 80069fe:	2101      	movs	r1, #1
 8006a00:	f009 fcea 	bl	80103d8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006a04:	4639      	mov	r1, r7
 8006a06:	4630      	mov	r0, r6
 8006a08:	f007 ff62 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006a0c:	ee19 0a10 	vmov	r0, s18
 8006a10:	22f0      	movs	r2, #240	; 0xf0
 8006a12:	2121      	movs	r1, #33	; 0x21
 8006a14:	f7fb fd31 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8006a18:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006a1a:	aa0a      	add	r2, sp, #40	; 0x28
 8006a1c:	a909      	add	r1, sp, #36	; 0x24
 8006a1e:	ee19 0a10 	vmov	r0, s18
 8006a22:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006a26:	2302      	movs	r3, #2
 8006a28:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006a2c:	f00a fae9 	bl	8011002 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006a30:	2330      	movs	r3, #48	; 0x30
        updateTextPosition();
 8006a32:	ee19 0a10 	vmov	r0, s18
 8006a36:	f8a4 31a0 	strh.w	r3, [r4, #416]	; 0x1a0
 8006a3a:	f7fb fd73 	bl	8002524 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8006a3e:	f04f 37ff 	mov.w	r7, #4294967295
    buttonWithLabel3.setAction(buttonCallback);
 8006a42:	f504 5385 	add.w	r3, r4, #4256	; 0x10a0
 8006a46:	f8c4 3190 	str.w	r3, [r4, #400]	; 0x190
 8006a4a:	ee19 1a10 	vmov	r1, s18
 8006a4e:	4630      	mov	r0, r6
        colorPressed = col;
 8006a50:	e9c4 7769 	strd	r7, r7, [r4, #420]	; 0x1a4
 8006a54:	ad04      	add	r5, sp, #16
 8006a56:	f007 ff3b 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8006a5a:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(5, 91);
 8006a5e:	225b      	movs	r2, #91	; 0x5b
 8006a60:	4640      	mov	r0, r8
 8006a62:	2105      	movs	r1, #5
 8006a64:	f7fb fd09 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006a68:	4641      	mov	r1, r8
 8006a6a:	4628      	mov	r0, r5
        color = newColor;
 8006a6c:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8006a70:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8006a74:	f009 fe46 	bl	8010704 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006a78:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006a7c:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8006a80:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006a84:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8006b80 <_ZN20Project_InfoViewBaseC1Ev+0x398>
 8006a88:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006a8c:	2331      	movs	r3, #49	; 0x31
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 8006a8e:	a90a      	add	r1, sp, #40	; 0x28
 8006a90:	4640      	mov	r0, r8
 8006a92:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006a96:	f00a f8cf 	bl	8010c38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006a9a:	4641      	mov	r1, r8
 8006a9c:	4630      	mov	r0, r6
 8006a9e:	f007 ff17 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 36);
 8006aa2:	ee18 0a10 	vmov	r0, s16
 8006aa6:	2224      	movs	r2, #36	; 0x24
 8006aa8:	2145      	movs	r1, #69	; 0x45
 8006aaa:	f7fb fce6 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8006aae:	ee18 1a10 	vmov	r1, s16
 8006ab2:	4628      	mov	r0, r5
        color = newColor;
 8006ab4:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8006ab8:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006abc:	f009 fe22 	bl	8010704 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006ac0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006ac4:	ee18 3a10 	vmov	r3, s16
 8006ac8:	333c      	adds	r3, #60	; 0x3c
 8006aca:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006ace:	2333      	movs	r3, #51	; 0x33
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 8006ad0:	ee18 0a10 	vmov	r0, s16
 8006ad4:	a90a      	add	r1, sp, #40	; 0x28
 8006ad6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006ada:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006ade:	f00a f8ab 	bl	8010c38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006ae2:	ee18 1a10 	vmov	r1, s16
 8006ae6:	4630      	mov	r0, r6
 8006ae8:	f007 fef2 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(50, 12);
 8006aec:	ee18 0a90 	vmov	r0, s17
 8006af0:	220c      	movs	r2, #12
 8006af2:	2132      	movs	r1, #50	; 0x32
 8006af4:	f7fb fcc1 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8006af8:	ee18 1a90 	vmov	r1, s17
 8006afc:	4628      	mov	r0, r5
        color = newColor;
 8006afe:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 8006b02:	f8a4 a274 	strh.w	sl, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8006b06:	f009 fdfd 	bl	8010704 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006b0a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006b0e:	ee18 3a90 	vmov	r3, s17
 8006b12:	333c      	adds	r3, #60	; 0x3c
 8006b14:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006b18:	2332      	movs	r3, #50	; 0x32
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 8006b1a:	ee18 0a90 	vmov	r0, s17
 8006b1e:	a90a      	add	r1, sp, #40	; 0x28
 8006b20:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006b24:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006b28:	f00a f886 	bl	8010c38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006b2c:	4630      	mov	r0, r6
 8006b2e:	ee18 1a90 	vmov	r1, s17
 8006b32:	f007 fecd 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006b36:	4620      	mov	r0, r4
 8006b38:	b00d      	add	sp, #52	; 0x34
 8006b3a:	ecbd 8b04 	vpop	{d8-d9}
 8006b3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006b42:	bf00      	nop
 8006b44:	0802a8a0 	.word	0x0802a8a0
 8006b48:	0802b514 	.word	0x0802b514
 8006b4c:	0802b6dc 	.word	0x0802b6dc
 8006b50:	080290bc 	.word	0x080290bc
 8006b54:	0802b248 	.word	0x0802b248
 8006b58:	0802a888 	.word	0x0802a888
 8006b5c:	080067d1 	.word	0x080067d1
 8006b60:	20013814 	.word	0x20013814
 8006b64:	08028efc 	.word	0x08028efc
 8006b68:	08028ffe 	.word	0x08028ffe
 8006b6c:	08028f79 	.word	0x08028f79
 8006b70:	20013818 	.word	0x20013818
 8006b74:	08028fc0 	.word	0x08028fc0
 8006b78:	20013820 	.word	0x20013820
 8006b7c:	08029036 	.word	0x08029036
 8006b80:	080290ac 	.word	0x080290ac

08006b84 <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 8006b84:	4770      	bx	lr

08006b86 <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 8006b86:	4770      	bx	lr

08006b88 <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 8006b88:	b510      	push	{r4, lr}
}
 8006b8a:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 8006b8c:	4604      	mov	r4, r0
}
 8006b8e:	f01f fe96 	bl	80268be <_ZdlPvj>
 8006b92:	4620      	mov	r0, r4
 8006b94:	bd10      	pop	{r4, pc}
	...

08006b98 <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 8006b98:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8006b9c:	4604      	mov	r4, r0
 8006b9e:	4626      	mov	r6, r4
 8006ba0:	f00e fdae 	bl	8015700 <_ZN8touchgfx6ScreenC1Ev>
 8006ba4:	2500      	movs	r5, #0
 8006ba6:	4b2e      	ldr	r3, [pc, #184]	; (8006c60 <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 8006ba8:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006baa:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 8006bae:	4b2d      	ldr	r3, [pc, #180]	; (8006c64 <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 8006bb0:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 8006bb2:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 8006bb6:	f44f 7280 	mov.w	r2, #256	; 0x100
 8006bba:	23ff      	movs	r3, #255	; 0xff
 8006bbc:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8006bc0:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 8006bc4:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8006bc8:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 8006bcc:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8006bd0:	4a25      	ldr	r2, [pc, #148]	; (8006c68 <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 8006bd2:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8006bd6:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 8006bda:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 8006bdc:	a901      	add	r1, sp, #4
 8006bde:	4638      	mov	r0, r7
 8006be0:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 8006be4:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 8006be8:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 8006bec:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 8006bf0:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 8006bf4:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 8006bf8:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 8006bfc:	66a5      	str	r5, [r4, #104]	; 0x68
 8006bfe:	f8ad 3004 	strh.w	r3, [sp, #4]
 8006c02:	f00a fbf4 	bl	80113ee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 8006c06:	462a      	mov	r2, r5
 8006c08:	4629      	mov	r1, r5
 8006c0a:	4630      	mov	r0, r6
 8006c0c:	f7fb fc35 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8006c10:	4630      	mov	r0, r6
 8006c12:	21f0      	movs	r1, #240	; 0xf0
 8006c14:	f7fa fa94 	bl	8001140 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8006c18:	4630      	mov	r0, r6
 8006c1a:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8006c1e:	f7fa fa91 	bl	8001144 <_ZN8touchgfx8Drawable9setHeightEs>
 8006c22:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 8006c26:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006c2a:	66a3      	str	r3, [r4, #104]	; 0x68
 8006c2c:	4631      	mov	r1, r6
 8006c2e:	4640      	mov	r0, r8
 8006c30:	f007 fe4e 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(-3, 0);
 8006c34:	462a      	mov	r2, r5
 8006c36:	4638      	mov	r0, r7
 8006c38:	f06f 0102 	mvn.w	r1, #2
 8006c3c:	f7fb fc1d 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8006c40:	230b      	movs	r3, #11
    image1.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 8006c42:	a901      	add	r1, sp, #4
 8006c44:	4638      	mov	r0, r7
 8006c46:	f8ad 3004 	strh.w	r3, [sp, #4]
 8006c4a:	f00a fbd0 	bl	80113ee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006c4e:	4640      	mov	r0, r8
 8006c50:	4639      	mov	r1, r7
 8006c52:	f007 fe3d 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006c56:	4620      	mov	r0, r4
 8006c58:	b002      	add	sp, #8
 8006c5a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006c5e:	bf00      	nop
 8006c60:	0802a8d4 	.word	0x0802a8d4
 8006c64:	0802b514 	.word	0x0802b514
 8006c68:	0802b6dc 	.word	0x0802b6dc

08006c6c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8006c6c:	4770      	bx	lr
	...

08006c70 <_Z23getFont_verdana_10_4bppv>:
{
 8006c70:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8006c72:	4d17      	ldr	r5, [pc, #92]	; (8006cd0 <_Z23getFont_verdana_10_4bppv+0x60>)
 8006c74:	682c      	ldr	r4, [r5, #0]
 8006c76:	f3bf 8f5b 	dmb	ish
 8006c7a:	f014 0401 	ands.w	r4, r4, #1
{
 8006c7e:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8006c80:	d122      	bne.n	8006cc8 <_Z23getFont_verdana_10_4bppv+0x58>
 8006c82:	4628      	mov	r0, r5
 8006c84:	f01f fe1d 	bl	80268c2 <__cxa_guard_acquire>
 8006c88:	b1f0      	cbz	r0, 8006cc8 <_Z23getFont_verdana_10_4bppv+0x58>
 8006c8a:	233f      	movs	r3, #63	; 0x3f
 8006c8c:	9309      	str	r3, [sp, #36]	; 0x24
 8006c8e:	4b11      	ldr	r3, [pc, #68]	; (8006cd4 <_Z23getFont_verdana_10_4bppv+0x64>)
 8006c90:	9308      	str	r3, [sp, #32]
 8006c92:	4b11      	ldr	r3, [pc, #68]	; (8006cd8 <_Z23getFont_verdana_10_4bppv+0x68>)
 8006c94:	9307      	str	r3, [sp, #28]
 8006c96:	2301      	movs	r3, #1
 8006c98:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8006c9c:	9304      	str	r3, [sp, #16]
 8006c9e:	2304      	movs	r3, #4
 8006ca0:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8006ca4:	230a      	movs	r3, #10
 8006ca6:	490d      	ldr	r1, [pc, #52]	; (8006cdc <_Z23getFont_verdana_10_4bppv+0x6c>)
 8006ca8:	9300      	str	r3, [sp, #0]
 8006caa:	225f      	movs	r2, #95	; 0x5f
 8006cac:	230c      	movs	r3, #12
 8006cae:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8006cb2:	480b      	ldr	r0, [pc, #44]	; (8006ce0 <_Z23getFont_verdana_10_4bppv+0x70>)
 8006cb4:	940a      	str	r4, [sp, #40]	; 0x28
 8006cb6:	9401      	str	r4, [sp, #4]
 8006cb8:	f7fd fbbe 	bl	8004438 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8006cbc:	4809      	ldr	r0, [pc, #36]	; (8006ce4 <_Z23getFont_verdana_10_4bppv+0x74>)
 8006cbe:	f020 fc0d 	bl	80274dc <atexit>
 8006cc2:	4628      	mov	r0, r5
 8006cc4:	f01f fe09 	bl	80268da <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8006cc8:	4805      	ldr	r0, [pc, #20]	; (8006ce0 <_Z23getFont_verdana_10_4bppv+0x70>)
 8006cca:	b00f      	add	sp, #60	; 0x3c
 8006ccc:	bd30      	pop	{r4, r5, pc}
 8006cce:	bf00      	nop
 8006cd0:	200028dc 	.word	0x200028dc
 8006cd4:	0802e3f0 	.word	0x0802e3f0
 8006cd8:	0802e4d0 	.word	0x0802e4d0
 8006cdc:	0802da74 	.word	0x0802da74
 8006ce0:	200028e0 	.word	0x200028e0
 8006ce4:	08006c6d 	.word	0x08006c6d

08006ce8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 30, 15, 12, 0, 0, 4, 1, 0, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8006ce8:	4770      	bx	lr
	...

08006cec <_Z23getFont_verdana_12_4bppv>:
{
 8006cec:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 30, 15, 12, 0, 0, 4, 1, 0, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8006cee:	4d17      	ldr	r5, [pc, #92]	; (8006d4c <_Z23getFont_verdana_12_4bppv+0x60>)
 8006cf0:	682c      	ldr	r4, [r5, #0]
 8006cf2:	f3bf 8f5b 	dmb	ish
 8006cf6:	f014 0401 	ands.w	r4, r4, #1
{
 8006cfa:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 30, 15, 12, 0, 0, 4, 1, 0, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8006cfc:	d122      	bne.n	8006d44 <_Z23getFont_verdana_12_4bppv+0x58>
 8006cfe:	4628      	mov	r0, r5
 8006d00:	f01f fddf 	bl	80268c2 <__cxa_guard_acquire>
 8006d04:	b1f0      	cbz	r0, 8006d44 <_Z23getFont_verdana_12_4bppv+0x58>
 8006d06:	233f      	movs	r3, #63	; 0x3f
 8006d08:	9309      	str	r3, [sp, #36]	; 0x24
 8006d0a:	4b11      	ldr	r3, [pc, #68]	; (8006d50 <_Z23getFont_verdana_12_4bppv+0x64>)
 8006d0c:	9308      	str	r3, [sp, #32]
 8006d0e:	4b11      	ldr	r3, [pc, #68]	; (8006d54 <_Z23getFont_verdana_12_4bppv+0x68>)
 8006d10:	9307      	str	r3, [sp, #28]
 8006d12:	2301      	movs	r3, #1
 8006d14:	e9cd 4305 	strd	r4, r3, [sp, #20]
 8006d18:	9304      	str	r3, [sp, #16]
 8006d1a:	2304      	movs	r3, #4
 8006d1c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8006d20:	230c      	movs	r3, #12
 8006d22:	490d      	ldr	r1, [pc, #52]	; (8006d58 <_Z23getFont_verdana_12_4bppv+0x6c>)
 8006d24:	9300      	str	r3, [sp, #0]
 8006d26:	221e      	movs	r2, #30
 8006d28:	230f      	movs	r3, #15
 8006d2a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8006d2e:	480b      	ldr	r0, [pc, #44]	; (8006d5c <_Z23getFont_verdana_12_4bppv+0x70>)
 8006d30:	940a      	str	r4, [sp, #40]	; 0x28
 8006d32:	9401      	str	r4, [sp, #4]
 8006d34:	f7fd fb80 	bl	8004438 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8006d38:	4809      	ldr	r0, [pc, #36]	; (8006d60 <_Z23getFont_verdana_12_4bppv+0x74>)
 8006d3a:	f020 fbcf 	bl	80274dc <atexit>
 8006d3e:	4628      	mov	r0, r5
 8006d40:	f01f fdcb 	bl	80268da <__cxa_guard_release>
    return verdana_12_4bpp;
}
 8006d44:	4805      	ldr	r0, [pc, #20]	; (8006d5c <_Z23getFont_verdana_12_4bppv+0x70>)
 8006d46:	b00f      	add	sp, #60	; 0x3c
 8006d48:	bd30      	pop	{r4, r5, pc}
 8006d4a:	bf00      	nop
 8006d4c:	2000290c 	.word	0x2000290c
 8006d50:	0802e424 	.word	0x0802e424
 8006d54:	0802e4d4 	.word	0x0802e4d4
 8006d58:	0802dfa8 	.word	0x0802dfa8
 8006d5c:	20002910 	.word	0x20002910
 8006d60:	08006ce9 	.word	0x08006ce9

08006d64 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8006d64:	4770      	bx	lr
	...

08006d68 <_Z23getFont_verdana_19_4bppv>:
{
 8006d68:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8006d6a:	4d17      	ldr	r5, [pc, #92]	; (8006dc8 <_Z23getFont_verdana_19_4bppv+0x60>)
 8006d6c:	682c      	ldr	r4, [r5, #0]
 8006d6e:	f3bf 8f5b 	dmb	ish
 8006d72:	f014 0401 	ands.w	r4, r4, #1
{
 8006d76:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8006d78:	d122      	bne.n	8006dc0 <_Z23getFont_verdana_19_4bppv+0x58>
 8006d7a:	4628      	mov	r0, r5
 8006d7c:	f01f fda1 	bl	80268c2 <__cxa_guard_acquire>
 8006d80:	b1f0      	cbz	r0, 8006dc0 <_Z23getFont_verdana_19_4bppv+0x58>
 8006d82:	233f      	movs	r3, #63	; 0x3f
 8006d84:	9309      	str	r3, [sp, #36]	; 0x24
 8006d86:	4b11      	ldr	r3, [pc, #68]	; (8006dcc <_Z23getFont_verdana_19_4bppv+0x64>)
 8006d88:	9308      	str	r3, [sp, #32]
 8006d8a:	4b11      	ldr	r3, [pc, #68]	; (8006dd0 <_Z23getFont_verdana_19_4bppv+0x68>)
 8006d8c:	9307      	str	r3, [sp, #28]
 8006d8e:	2301      	movs	r3, #1
 8006d90:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8006d94:	9304      	str	r3, [sp, #16]
 8006d96:	2304      	movs	r3, #4
 8006d98:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8006d9c:	2313      	movs	r3, #19
 8006d9e:	490d      	ldr	r1, [pc, #52]	; (8006dd4 <_Z23getFont_verdana_19_4bppv+0x6c>)
 8006da0:	9300      	str	r3, [sp, #0]
 8006da2:	222f      	movs	r2, #47	; 0x2f
 8006da4:	2317      	movs	r3, #23
 8006da6:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8006daa:	480b      	ldr	r0, [pc, #44]	; (8006dd8 <_Z23getFont_verdana_19_4bppv+0x70>)
 8006dac:	940a      	str	r4, [sp, #40]	; 0x28
 8006dae:	9401      	str	r4, [sp, #4]
 8006db0:	f7fd fb42 	bl	8004438 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8006db4:	4809      	ldr	r0, [pc, #36]	; (8006ddc <_Z23getFont_verdana_19_4bppv+0x74>)
 8006db6:	f020 fb91 	bl	80274dc <atexit>
 8006dba:	4628      	mov	r0, r5
 8006dbc:	f01f fd8d 	bl	80268da <__cxa_guard_release>
    return verdana_19_4bpp;
}
 8006dc0:	4805      	ldr	r0, [pc, #20]	; (8006dd8 <_Z23getFont_verdana_19_4bppv+0x70>)
 8006dc2:	b00f      	add	sp, #60	; 0x3c
 8006dc4:	bd30      	pop	{r4, r5, pc}
 8006dc6:	bf00      	nop
 8006dc8:	2000293c 	.word	0x2000293c
 8006dcc:	0802e428 	.word	0x0802e428
 8006dd0:	0802e4d8 	.word	0x0802e4d8
 8006dd4:	0802e14c 	.word	0x0802e14c
 8006dd8:	20002940 	.word	0x20002940
 8006ddc:	08006d65 	.word	0x08006d65

08006de0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8006de0:	4770      	bx	lr
	...

08006de4 <_Z23getFont_verdana_40_4bppv>:
{
 8006de4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8006de6:	4d16      	ldr	r5, [pc, #88]	; (8006e40 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8006de8:	682c      	ldr	r4, [r5, #0]
 8006dea:	f3bf 8f5b 	dmb	ish
 8006dee:	f014 0401 	ands.w	r4, r4, #1
{
 8006df2:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8006df4:	d120      	bne.n	8006e38 <_Z23getFont_verdana_40_4bppv+0x54>
 8006df6:	4628      	mov	r0, r5
 8006df8:	f01f fd63 	bl	80268c2 <__cxa_guard_acquire>
 8006dfc:	b1e0      	cbz	r0, 8006e38 <_Z23getFont_verdana_40_4bppv+0x54>
 8006dfe:	233f      	movs	r3, #63	; 0x3f
 8006e00:	9309      	str	r3, [sp, #36]	; 0x24
 8006e02:	4b10      	ldr	r3, [pc, #64]	; (8006e44 <_Z23getFont_verdana_40_4bppv+0x60>)
 8006e04:	9308      	str	r3, [sp, #32]
 8006e06:	4b10      	ldr	r3, [pc, #64]	; (8006e48 <_Z23getFont_verdana_40_4bppv+0x64>)
 8006e08:	4910      	ldr	r1, [pc, #64]	; (8006e4c <_Z23getFont_verdana_40_4bppv+0x68>)
 8006e0a:	4811      	ldr	r0, [pc, #68]	; (8006e50 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8006e0c:	940a      	str	r4, [sp, #40]	; 0x28
 8006e0e:	2201      	movs	r2, #1
 8006e10:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8006e14:	2304      	movs	r3, #4
 8006e16:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8006e1a:	2328      	movs	r3, #40	; 0x28
 8006e1c:	9300      	str	r3, [sp, #0]
 8006e1e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8006e22:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8006e26:	9405      	str	r4, [sp, #20]
 8006e28:	f7fd fb06 	bl	8004438 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8006e2c:	4809      	ldr	r0, [pc, #36]	; (8006e54 <_Z23getFont_verdana_40_4bppv+0x70>)
 8006e2e:	f020 fb55 	bl	80274dc <atexit>
 8006e32:	4628      	mov	r0, r5
 8006e34:	f01f fd51 	bl	80268da <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8006e38:	4805      	ldr	r0, [pc, #20]	; (8006e50 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8006e3a:	b00f      	add	sp, #60	; 0x3c
 8006e3c:	bd30      	pop	{r4, r5, pc}
 8006e3e:	bf00      	nop
 8006e40:	2000296c 	.word	0x2000296c
 8006e44:	0802e4cc 	.word	0x0802e4cc
 8006e48:	0802e4dc 	.word	0x0802e4dc
 8006e4c:	0802e3e0 	.word	0x0802e3e0
 8006e50:	20002970 	.word	0x20002970
 8006e54:	08006de1 	.word	0x08006de1

08006e58 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8006e58:	2000      	movs	r0, #0
 8006e5a:	4770      	bx	lr

08006e5c <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8006e5c:	2000      	movs	r0, #0
 8006e5e:	4770      	bx	lr

08006e60 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8006e60:	b40e      	push	{r1, r2, r3}
 8006e62:	b503      	push	{r0, r1, lr}
 8006e64:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8006e66:	2100      	movs	r1, #0
{
 8006e68:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8006e6c:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8006e6e:	f00d ff85 	bl	8014d7c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8006e72:	b002      	add	sp, #8
 8006e74:	f85d eb04 	ldr.w	lr, [sp], #4
 8006e78:	b003      	add	sp, #12
 8006e7a:	4770      	bx	lr

08006e7c <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8006e7c:	b40c      	push	{r2, r3}
 8006e7e:	b507      	push	{r0, r1, r2, lr}
 8006e80:	ab04      	add	r3, sp, #16
 8006e82:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8006e86:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8006e88:	f00d ff78 	bl	8014d7c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8006e8c:	b003      	add	sp, #12
 8006e8e:	f85d eb04 	ldr.w	lr, [sp], #4
 8006e92:	b002      	add	sp, #8
 8006e94:	4770      	bx	lr
	...

08006e98 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8006e98:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8006e9a:	b510      	push	{r4, lr}
 8006e9c:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8006e9e:	b373      	cbz	r3, 8006efe <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8006ea0:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8006ea2:	b92b      	cbnz	r3, 8006eb0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8006ea4:	4b18      	ldr	r3, [pc, #96]	; (8006f08 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8006ea6:	4a19      	ldr	r2, [pc, #100]	; (8006f0c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8006ea8:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8006eaa:	4819      	ldr	r0, [pc, #100]	; (8006f10 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8006eac:	f020 faf8 	bl	80274a0 <__assert_func>
            return buffer[pos];
 8006eb0:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8006eb2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8006eb6:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8006eb8:	b30b      	cbz	r3, 8006efe <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8006eba:	f00f fb5c 	bl	8016576 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8006ebe:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8006ec0:	2b01      	cmp	r3, #1
 8006ec2:	d803      	bhi.n	8006ecc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8006ec4:	4b13      	ldr	r3, [pc, #76]	; (8006f14 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8006ec6:	4a14      	ldr	r2, [pc, #80]	; (8006f18 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8006ec8:	21cb      	movs	r1, #203	; 0xcb
 8006eca:	e7ee      	b.n	8006eaa <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8006ecc:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8006ece:	1c53      	adds	r3, r2, #1
 8006ed0:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8006ed2:	2b09      	cmp	r3, #9
 8006ed4:	4619      	mov	r1, r3
 8006ed6:	bf88      	it	hi
 8006ed8:	f1a3 010a 	subhi.w	r1, r3, #10
 8006edc:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8006ee0:	f640 103f 	movw	r0, #2367	; 0x93f
 8006ee4:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8006ee6:	4281      	cmp	r1, r0
 8006ee8:	d109      	bne.n	8006efe <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8006eea:	2b0a      	cmp	r3, #10
 8006eec:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8006ef0:	bf28      	it	cs
 8006ef2:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8006ef4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8006ef8:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8006efa:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8006efc:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8006efe:	4620      	mov	r0, r4
}
 8006f00:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8006f04:	f00f ba3a 	b.w	801637c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8006f08:	0802a900 	.word	0x0802a900
 8006f0c:	0802a909 	.word	0x0802a909
 8006f10:	0802a9b4 	.word	0x0802a9b4
 8006f14:	0802a9fe 	.word	0x0802a9fe
 8006f18:	0802aa0c 	.word	0x0802aa0c

08006f1c <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8006f1c:	f00f b9f5 	b.w	801630a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08006f20 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8006f20:	b510      	push	{r4, lr}
 8006f22:	b086      	sub	sp, #24
 8006f24:	ac02      	add	r4, sp, #8
 8006f26:	e884 0006 	stmia.w	r4, {r1, r2}
 8006f2a:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8006f2c:	ab0a      	add	r3, sp, #40	; 0x28
 8006f2e:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8006f30:	9301      	str	r3, [sp, #4]
 8006f32:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006f34:	9300      	str	r3, [sp, #0]
 8006f36:	4621      	mov	r1, r4
 8006f38:	9b08      	ldr	r3, [sp, #32]
 8006f3a:	f00c fae3 	bl	8013504 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8006f3e:	b006      	add	sp, #24
 8006f40:	bd10      	pop	{r4, pc}
	...

08006f44 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8006f44:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8006f46:	bb18      	cbnz	r0, 8006f90 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8006f48:	4b12      	ldr	r3, [pc, #72]	; (8006f94 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8006f4a:	4813      	ldr	r0, [pc, #76]	; (8006f98 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8006f4c:	681c      	ldr	r4, [r3, #0]
 8006f4e:	4913      	ldr	r1, [pc, #76]	; (8006f9c <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8006f50:	b1b4      	cbz	r4, 8006f80 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8006f52:	6822      	ldr	r2, [r4, #0]
 8006f54:	4422      	add	r2, r4
 8006f56:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8006f58:	6862      	ldr	r2, [r4, #4]
 8006f5a:	4422      	add	r2, r4
 8006f5c:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8006f5e:	68a2      	ldr	r2, [r4, #8]
 8006f60:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8006f62:	4b0f      	ldr	r3, [pc, #60]	; (8006fa0 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8006f64:	2200      	movs	r2, #0
 8006f66:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8006f68:	f000 f838 	bl	8006fdc <_ZN17TypedTextDatabase8getFontsEv>
 8006f6c:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8006f6e:	f000 f833 	bl	8006fd8 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8006f72:	4b0c      	ldr	r3, [pc, #48]	; (8006fa4 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8006f74:	601c      	str	r4, [r3, #0]
        fonts = f;
 8006f76:	4b0c      	ldr	r3, [pc, #48]	; (8006fa8 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8006f78:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8006f7a:	4b0c      	ldr	r3, [pc, #48]	; (8006fac <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8006f7c:	8018      	strh	r0, [r3, #0]
    }
}
 8006f7e:	e007      	b.n	8006f90 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8006f80:	4b0b      	ldr	r3, [pc, #44]	; (8006fb0 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8006f82:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8006f84:	4b0b      	ldr	r3, [pc, #44]	; (8006fb4 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8006f86:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8006f88:	4b0b      	ldr	r3, [pc, #44]	; (8006fb8 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8006f8a:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8006f8c:	2c00      	cmp	r4, #0
 8006f8e:	d1e8      	bne.n	8006f62 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8006f90:	bd38      	pop	{r3, r4, r5, pc}
 8006f92:	bf00      	nop
 8006f94:	2000299c 	.word	0x2000299c
 8006f98:	200029a0 	.word	0x200029a0
 8006f9c:	200029a4 	.word	0x200029a4
 8006fa0:	200029a8 	.word	0x200029a8
 8006fa4:	20013814 	.word	0x20013814
 8006fa8:	2001381c 	.word	0x2001381c
 8006fac:	20013818 	.word	0x20013818
 8006fb0:	0802e5ec 	.word	0x0802e5ec
 8006fb4:	0802e4e0 	.word	0x0802e4e0
 8006fb8:	0802ea38 	.word	0x0802ea38

08006fbc <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8006fbc:	4b04      	ldr	r3, [pc, #16]	; (8006fd0 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8006fbe:	681b      	ldr	r3, [r3, #0]
 8006fc0:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8006fc4:	4b03      	ldr	r3, [pc, #12]	; (8006fd4 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8006fc6:	681b      	ldr	r3, [r3, #0]
}
 8006fc8:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8006fcc:	4770      	bx	lr
 8006fce:	bf00      	nop
 8006fd0:	200029a4 	.word	0x200029a4
 8006fd4:	200029a0 	.word	0x200029a0

08006fd8 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8006fd8:	2043      	movs	r0, #67	; 0x43
 8006fda:	4770      	bx	lr

08006fdc <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8006fdc:	4800      	ldr	r0, [pc, #0]	; (8006fe0 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8006fde:	4770      	bx	lr
 8006fe0:	200029ac 	.word	0x200029ac

08006fe4 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8006fe4:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 8006fe6:	f7ff febf 	bl	8006d68 <_Z23getFont_verdana_19_4bppv>
};
 8006fea:	4c06      	ldr	r4, [pc, #24]	; (8007004 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 8006fec:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8006fee:	f7ff fef9 	bl	8006de4 <_Z23getFont_verdana_40_4bppv>
};
 8006ff2:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 8006ff4:	f7ff fe3c 	bl	8006c70 <_Z23getFont_verdana_10_4bppv>
};
 8006ff8:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 8006ffa:	f7ff fe77 	bl	8006cec <_Z23getFont_verdana_12_4bppv>
};
 8006ffe:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 8007000:	bd10      	pop	{r4, pc}
 8007002:	bf00      	nop
 8007004:	200029ac 	.word	0x200029ac

08007008 <_ZN20CalibrationPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~CalibrationPresenter() {}
 8007008:	4770      	bx	lr

0800700a <_ZThn4_N20CalibrationPresenterD1Ev>:
 800700a:	3804      	subs	r0, #4
 800700c:	4770      	bx	lr

0800700e <_ZN20CalibrationPresenter10deactivateEv>:
}

void CalibrationPresenter::activate()
{

}
 800700e:	4770      	bx	lr

08007010 <_ZN20CalibrationPresenter15setTimeoutValueEi>:
}

void CalibrationPresenter::setTimeoutValue(int value)
{

}
 8007010:	4770      	bx	lr

08007012 <_ZN20CalibrationPresenterD0Ev>:
 8007012:	b510      	push	{r4, lr}
 8007014:	2110      	movs	r1, #16
 8007016:	4604      	mov	r4, r0
 8007018:	f01f fc51 	bl	80268be <_ZdlPvj>
 800701c:	4620      	mov	r0, r4
 800701e:	bd10      	pop	{r4, pc}

08007020 <_ZThn4_N20CalibrationPresenterD0Ev>:
 8007020:	f1a0 0004 	sub.w	r0, r0, #4
 8007024:	e7f5      	b.n	8007012 <_ZN20CalibrationPresenterD0Ev>

08007026 <_ZThn4_N20CalibrationPresenter15setTimeoutValueEi>:
 8007026:	4770      	bx	lr

08007028 <_ZN20CalibrationPresenterC1ER15CalibrationView>:
CalibrationPresenter::CalibrationPresenter(CalibrationView& v)
 8007028:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 800702a:	2200      	movs	r2, #0
 800702c:	6082      	str	r2, [r0, #8]
    : view(v)
 800702e:	4a04      	ldr	r2, [pc, #16]	; (8007040 <_ZN20CalibrationPresenterC1ER15CalibrationView+0x18>)
 8007030:	60c1      	str	r1, [r0, #12]
 8007032:	f102 0408 	add.w	r4, r2, #8
 8007036:	3224      	adds	r2, #36	; 0x24
 8007038:	6004      	str	r4, [r0, #0]
 800703a:	6042      	str	r2, [r0, #4]
}
 800703c:	bd10      	pop	{r4, pc}
 800703e:	bf00      	nop
 8007040:	0802aae0 	.word	0x0802aae0

08007044 <_ZN15CalibrationView14tearDownScreenEv>:
}

void CalibrationView::tearDownScreen()
{
    CalibrationViewBase::tearDownScreen();
}
 8007044:	4770      	bx	lr
	...

08007048 <_ZN15CalibrationViewD1Ev>:

class CalibrationView : public CalibrationViewBase
{
public:
    CalibrationView();
    virtual ~CalibrationView() {}
 8007048:	b510      	push	{r4, lr}
 800704a:	4b03      	ldr	r3, [pc, #12]	; (8007058 <_ZN15CalibrationViewD1Ev+0x10>)
 800704c:	6003      	str	r3, [r0, #0]
 800704e:	4604      	mov	r4, r0
 8007050:	f7fb f9aa 	bl	80023a8 <_ZN19CalibrationViewBaseD1Ev>
 8007054:	4620      	mov	r0, r4
 8007056:	bd10      	pop	{r4, pc}
 8007058:	0802ab18 	.word	0x0802ab18

0800705c <_ZN15CalibrationViewD0Ev>:
 800705c:	b510      	push	{r4, lr}
 800705e:	4604      	mov	r4, r0
 8007060:	f7ff fff2 	bl	8007048 <_ZN15CalibrationViewD1Ev>
 8007064:	4620      	mov	r0, r4
 8007066:	f241 01f8 	movw	r1, #4344	; 0x10f8
 800706a:	f01f fc28 	bl	80268be <_ZdlPvj>
 800706e:	4620      	mov	r0, r4
 8007070:	bd10      	pop	{r4, pc}
	...

08007074 <_ZN15CalibrationViewC1Ev>:
CalibrationView::CalibrationView()
 8007074:	b510      	push	{r4, lr}
 8007076:	4604      	mov	r4, r0
 8007078:	f7fb fa98 	bl	80025ac <_ZN19CalibrationViewBaseC1Ev>
 800707c:	4b01      	ldr	r3, [pc, #4]	; (8007084 <_ZN15CalibrationViewC1Ev+0x10>)
 800707e:	6023      	str	r3, [r4, #0]
}
 8007080:	4620      	mov	r0, r4
 8007082:	bd10      	pop	{r4, pc}
 8007084:	0802ab18 	.word	0x0802ab18

08007088 <_ZN15CalibrationView11setupScreenEv>:
    CalibrationViewBase::setupScreen();
 8007088:	f7fb b95b 	b.w	8002342 <_ZN19CalibrationViewBase11setupScreenEv>

0800708c <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800708c:	4770      	bx	lr

0800708e <_ZN19FrontendApplicationD0Ev>:
 800708e:	b510      	push	{r4, lr}
 8007090:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8007094:	4604      	mov	r4, r0
 8007096:	f01f fc12 	bl	80268be <_ZdlPvj>
 800709a:	4620      	mov	r0, r4
 800709c:	bd10      	pop	{r4, pc}

0800709e <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800709e:	b510      	push	{r4, lr}
 80070a0:	4604      	mov	r4, r0
    {
        model.tick();
 80070a2:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 80070a6:	f000 fabf 	bl	8007628 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80070aa:	4620      	mov	r0, r4
    }
 80070ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 80070b0:	f00c bf6a 	b.w	8013f88 <_ZN8touchgfx11Application15handleTickEventEv>

080070b4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80070b4:	b510      	push	{r4, lr}
 80070b6:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80070b8:	f7fb ff14 	bl	8002ee4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80070bc:	4b01      	ldr	r3, [pc, #4]	; (80070c4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 80070be:	6023      	str	r3, [r4, #0]
{

}
 80070c0:	4620      	mov	r0, r4
 80070c2:	bd10      	pop	{r4, pc}
 80070c4:	0802ab4c 	.word	0x0802ab4c

080070c8 <_ZN17Gauge_with_ValuesD1Ev>:
 80070c8:	b510      	push	{r4, lr}
 80070ca:	4b03      	ldr	r3, [pc, #12]	; (80070d8 <_ZN17Gauge_with_ValuesD1Ev+0x10>)
 80070cc:	6003      	str	r3, [r0, #0]
 80070ce:	4604      	mov	r4, r0
 80070d0:	f7fc fffe 	bl	80040d0 <_ZN21Gauge_with_ValuesBaseD1Ev>
 80070d4:	4620      	mov	r0, r4
 80070d6:	bd10      	pop	{r4, pc}
 80070d8:	0802aba0 	.word	0x0802aba0

080070dc <_ZN17Gauge_with_ValuesD0Ev>:
 80070dc:	b510      	push	{r4, lr}
 80070de:	4604      	mov	r4, r0
 80070e0:	f7ff fff2 	bl	80070c8 <_ZN17Gauge_with_ValuesD1Ev>
 80070e4:	4620      	mov	r0, r4
 80070e6:	f44f 7162 	mov.w	r1, #904	; 0x388
 80070ea:	f01f fbe8 	bl	80268be <_ZdlPvj>
 80070ee:	4620      	mov	r0, r4
 80070f0:	bd10      	pop	{r4, pc}
	...

080070f4 <_ZN17Gauge_with_ValuesC1Ev>:
#include <gui/containers/Gauge_with_Values.hpp>

Gauge_with_Values::Gauge_with_Values()
 80070f4:	b510      	push	{r4, lr}
 80070f6:	4604      	mov	r4, r0
 80070f8:	f7fc fff4 	bl	80040e4 <_ZN21Gauge_with_ValuesBaseC1Ev>
 80070fc:	4b01      	ldr	r3, [pc, #4]	; (8007104 <_ZN17Gauge_with_ValuesC1Ev+0x10>)
 80070fe:	6023      	str	r3, [r4, #0]
{

}
 8007100:	4620      	mov	r0, r4
 8007102:	bd10      	pop	{r4, pc}
 8007104:	0802aba0 	.word	0x0802aba0

08007108 <_ZN17Gauge_with_Values10initializeEv>:

void Gauge_with_Values::initialize()
{
    Gauge_with_ValuesBase::initialize();
 8007108:	f7fc bfe3 	b.w	80040d2 <_ZN21Gauge_with_ValuesBase10initializeEv>

0800710c <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 800710c:	4770      	bx	lr

0800710e <_ZThn4_N18Main_MenuPresenterD1Ev>:
 800710e:	3804      	subs	r0, #4
 8007110:	4770      	bx	lr

08007112 <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 8007112:	4770      	bx	lr

08007114 <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8007114:	68c0      	ldr	r0, [r0, #12]
 8007116:	6803      	ldr	r3, [r0, #0]
 8007118:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800711a:	4718      	bx	r3

0800711c <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800711c:	f1a0 0004 	sub.w	r0, r0, #4
 8007120:	f7ff bff8 	b.w	8007114 <_ZN18Main_MenuPresenter15setTimeoutValueEi>

08007124 <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 8007124:	b510      	push	{r4, lr}
 8007126:	2110      	movs	r1, #16
 8007128:	4604      	mov	r4, r0
 800712a:	f01f fbc8 	bl	80268be <_ZdlPvj>
 800712e:	4620      	mov	r0, r4
 8007130:	bd10      	pop	{r4, pc}

08007132 <_ZThn4_N18Main_MenuPresenterD0Ev>:
 8007132:	f1a0 0004 	sub.w	r0, r0, #4
 8007136:	e7f5      	b.n	8007124 <_ZN18Main_MenuPresenterD0Ev>

08007138 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 8007138:	b510      	push	{r4, lr}
 800713a:	2200      	movs	r2, #0
 800713c:	6082      	str	r2, [r0, #8]
    : view(v)
 800713e:	4a04      	ldr	r2, [pc, #16]	; (8007150 <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 8007140:	60c1      	str	r1, [r0, #12]
 8007142:	f102 0408 	add.w	r4, r2, #8
 8007146:	3224      	adds	r2, #36	; 0x24
 8007148:	6004      	str	r4, [r0, #0]
 800714a:	6042      	str	r2, [r0, #4]
}
 800714c:	bd10      	pop	{r4, pc}
 800714e:	bf00      	nop
 8007150:	0802ac2c 	.word	0x0802ac2c

08007154 <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 8007154:	4770      	bx	lr
	...

08007158 <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 8007158:	b510      	push	{r4, lr}
 800715a:	4b03      	ldr	r3, [pc, #12]	; (8007168 <_ZN13Main_MenuViewD1Ev+0x10>)
 800715c:	6003      	str	r3, [r0, #0]
 800715e:	4604      	mov	r4, r0
 8007160:	f7fd f9be 	bl	80044e0 <_ZN17Main_MenuViewBaseD1Ev>
 8007164:	4620      	mov	r0, r4
 8007166:	bd10      	pop	{r4, pc}
 8007168:	0802ac68 	.word	0x0802ac68

0800716c <_ZN13Main_MenuViewD0Ev>:
 800716c:	b510      	push	{r4, lr}
 800716e:	4604      	mov	r4, r0
 8007170:	f7ff fff2 	bl	8007158 <_ZN13Main_MenuViewD1Ev>
 8007174:	4620      	mov	r0, r4
 8007176:	f241 117c 	movw	r1, #4476	; 0x117c
 800717a:	f01f fba0 	bl	80268be <_ZdlPvj>
 800717e:	4620      	mov	r0, r4
 8007180:	bd10      	pop	{r4, pc}
	...

08007184 <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 8007184:	b510      	push	{r4, lr}
 8007186:	4604      	mov	r4, r0
 8007188:	f7fd f9f4 	bl	8004574 <_ZN17Main_MenuViewBaseC1Ev>
 800718c:	4b01      	ldr	r3, [pc, #4]	; (8007194 <_ZN13Main_MenuViewC1Ev+0x10>)
 800718e:	6023      	str	r3, [r4, #0]
}
 8007190:	4620      	mov	r0, r4
 8007192:	bd10      	pop	{r4, pc}
 8007194:	0802ac68 	.word	0x0802ac68

08007198 <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 8007198:	f7fd b97e 	b.w	8004498 <_ZN17Main_MenuViewBase11setupScreenEv>

0800719c <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 800719c:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 800719e:	4a0a      	ldr	r2, [pc, #40]	; (80071c8 <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 80071a0:	4605      	mov	r5, r0
 80071a2:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 80071a4:	460b      	mov	r3, r1
 80071a6:	f500 7055 	add.w	r0, r0, #852	; 0x354
 80071aa:	2104      	movs	r1, #4
 80071ac:	f00f ff8c 	bl	80170c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3.invalidate();
 80071b0:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80071b4:	f00d ff0c 	bl	8014fd0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80071b8:	b92c      	cbnz	r4, 80071c6 <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 80071ba:	f00c fe21 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80071be:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80071c2:	f7fb bf8f 	b.w	80030e4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80071c6:	bd38      	pop	{r3, r4, r5, pc}
 80071c8:	0802ac5c 	.word	0x0802ac5c

080071cc <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 80071cc:	4770      	bx	lr

080071ce <_ZThn4_N20MeasurementPresenterD1Ev>:
 80071ce:	3804      	subs	r0, #4
 80071d0:	4770      	bx	lr

080071d2 <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 80071d2:	4770      	bx	lr

080071d4 <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80071d4:	68c0      	ldr	r0, [r0, #12]
 80071d6:	6803      	ldr	r3, [r0, #0]
 80071d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80071da:	4718      	bx	r3

080071dc <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80071dc:	f1a0 0004 	sub.w	r0, r0, #4
 80071e0:	f7ff bff8 	b.w	80071d4 <_ZN20MeasurementPresenter15setTimeoutValueEi>

080071e4 <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 80071e4:	b510      	push	{r4, lr}
 80071e6:	2110      	movs	r1, #16
 80071e8:	4604      	mov	r4, r0
 80071ea:	f01f fb68 	bl	80268be <_ZdlPvj>
 80071ee:	4620      	mov	r0, r4
 80071f0:	bd10      	pop	{r4, pc}

080071f2 <_ZThn4_N20MeasurementPresenterD0Ev>:
 80071f2:	f1a0 0004 	sub.w	r0, r0, #4
 80071f6:	e7f5      	b.n	80071e4 <_ZN20MeasurementPresenterD0Ev>

080071f8 <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 80071f8:	b510      	push	{r4, lr}
 80071fa:	2200      	movs	r2, #0
 80071fc:	6082      	str	r2, [r0, #8]
    : view(v)
 80071fe:	4a04      	ldr	r2, [pc, #16]	; (8007210 <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 8007200:	60c1      	str	r1, [r0, #12]
 8007202:	f102 0408 	add.w	r4, r2, #8
 8007206:	3224      	adds	r2, #36	; 0x24
 8007208:	6004      	str	r4, [r0, #0]
 800720a:	6042      	str	r2, [r0, #4]
}
 800720c:	bd10      	pop	{r4, pc}
 800720e:	bf00      	nop
 8007210:	0802ac98 	.word	0x0802ac98

08007214 <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 8007214:	4770      	bx	lr
	...

08007218 <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 8007218:	b510      	push	{r4, lr}
 800721a:	4b03      	ldr	r3, [pc, #12]	; (8007228 <_ZN15MeasurementViewD1Ev+0x10>)
 800721c:	6003      	str	r3, [r0, #0]
 800721e:	4604      	mov	r4, r0
 8007220:	f7fd fc18 	bl	8004a54 <_ZN19MeasurementViewBaseD1Ev>
 8007224:	4620      	mov	r0, r4
 8007226:	bd10      	pop	{r4, pc}
 8007228:	0802acd0 	.word	0x0802acd0

0800722c <_ZN15MeasurementViewD0Ev>:
 800722c:	b510      	push	{r4, lr}
 800722e:	4604      	mov	r4, r0
 8007230:	f7ff fff2 	bl	8007218 <_ZN15MeasurementViewD1Ev>
 8007234:	4620      	mov	r0, r4
 8007236:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800723a:	f01f fb40 	bl	80268be <_ZdlPvj>
 800723e:	4620      	mov	r0, r4
 8007240:	bd10      	pop	{r4, pc}
	...

08007244 <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 8007244:	b510      	push	{r4, lr}
 8007246:	4604      	mov	r4, r0
 8007248:	f7fd fc3e 	bl	8004ac8 <_ZN19MeasurementViewBaseC1Ev>
 800724c:	4b01      	ldr	r3, [pc, #4]	; (8007254 <_ZN15MeasurementViewC1Ev+0x10>)
 800724e:	6023      	str	r3, [r4, #0]
}
 8007250:	4620      	mov	r0, r4
 8007252:	bd10      	pop	{r4, pc}
 8007254:	0802acd0 	.word	0x0802acd0

08007258 <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 8007258:	f7fd bbd8 	b.w	8004a0c <_ZN19MeasurementViewBase11setupScreenEv>

0800725c <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 800725c:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800725e:	4a0a      	ldr	r2, [pc, #40]	; (8007288 <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 8007260:	4605      	mov	r5, r0
 8007262:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8007264:	460b      	mov	r3, r1
 8007266:	f500 7046 	add.w	r0, r0, #792	; 0x318
 800726a:	2104      	movs	r1, #4
 800726c:	f00f ff2c 	bl	80170c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8007270:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8007274:	f00d feac 	bl	8014fd0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8007278:	b92c      	cbnz	r4, 8007286 <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 800727a:	f00c fdc1 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800727e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8007282:	f7fb bf2f 	b.w	80030e4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8007286:	bd38      	pop	{r3, r4, r5, pc}
 8007288:	0802ac5c 	.word	0x0802ac5c

0800728c <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 800728c:	4770      	bx	lr

0800728e <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 800728e:	3804      	subs	r0, #4
 8007290:	4770      	bx	lr

08007292 <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 8007292:	4770      	bx	lr

08007294 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:

}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8007294:	68c0      	ldr	r0, [r0, #12]
 8007296:	6803      	ldr	r3, [r0, #0]
 8007298:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800729a:	4718      	bx	r3

0800729c <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800729c:	f1a0 0004 	sub.w	r0, r0, #4
 80072a0:	f7ff bff8 	b.w	8007294 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>

080072a4 <_ZN29Measurement_AccuratePresenterD0Ev>:
    virtual ~Measurement_AccuratePresenter() {}
 80072a4:	b510      	push	{r4, lr}
 80072a6:	2110      	movs	r1, #16
 80072a8:	4604      	mov	r4, r0
 80072aa:	f01f fb08 	bl	80268be <_ZdlPvj>
 80072ae:	4620      	mov	r0, r4
 80072b0:	bd10      	pop	{r4, pc}

080072b2 <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 80072b2:	f1a0 0004 	sub.w	r0, r0, #4
 80072b6:	e7f5      	b.n	80072a4 <_ZN29Measurement_AccuratePresenterD0Ev>

080072b8 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 80072b8:	b510      	push	{r4, lr}
 80072ba:	2200      	movs	r2, #0
 80072bc:	6082      	str	r2, [r0, #8]
    : view(v)
 80072be:	4a04      	ldr	r2, [pc, #16]	; (80072d0 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 80072c0:	60c1      	str	r1, [r0, #12]
 80072c2:	f102 0408 	add.w	r4, r2, #8
 80072c6:	3224      	adds	r2, #36	; 0x24
 80072c8:	6004      	str	r4, [r0, #0]
 80072ca:	6042      	str	r2, [r0, #4]
}
 80072cc:	bd10      	pop	{r4, pc}
 80072ce:	bf00      	nop
 80072d0:	0802ad00 	.word	0x0802ad00

080072d4 <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 80072d4:	4770      	bx	lr
	...

080072d8 <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 80072d8:	b510      	push	{r4, lr}
 80072da:	4b03      	ldr	r3, [pc, #12]	; (80072e8 <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 80072dc:	6003      	str	r3, [r0, #0]
 80072de:	4604      	mov	r4, r0
 80072e0:	f7fd fe3c 	bl	8004f5c <_ZN28Measurement_AccurateViewBaseD1Ev>
 80072e4:	4620      	mov	r0, r4
 80072e6:	bd10      	pop	{r4, pc}
 80072e8:	0802ad38 	.word	0x0802ad38

080072ec <_ZN24Measurement_AccurateViewD0Ev>:
 80072ec:	b510      	push	{r4, lr}
 80072ee:	4604      	mov	r4, r0
 80072f0:	f7ff fff2 	bl	80072d8 <_ZN24Measurement_AccurateViewD1Ev>
 80072f4:	4620      	mov	r0, r4
 80072f6:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80072fa:	f01f fae0 	bl	80268be <_ZdlPvj>
 80072fe:	4620      	mov	r0, r4
 8007300:	bd10      	pop	{r4, pc}
	...

08007304 <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 8007304:	b510      	push	{r4, lr}
 8007306:	4604      	mov	r4, r0
 8007308:	f7fd fe62 	bl	8004fd0 <_ZN28Measurement_AccurateViewBaseC1Ev>
 800730c:	4b01      	ldr	r3, [pc, #4]	; (8007314 <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 800730e:	6023      	str	r3, [r4, #0]
}
 8007310:	4620      	mov	r0, r4
 8007312:	bd10      	pop	{r4, pc}
 8007314:	0802ad38 	.word	0x0802ad38

08007318 <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 8007318:	f7fd bdfc 	b.w	8004f14 <_ZN28Measurement_AccurateViewBase11setupScreenEv>

0800731c <_ZN24Measurement_AccurateView15setTimeoutValueEi>:

void Measurement_AccurateView::setTimeoutValue(int value)
{
 800731c:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800731e:	4a0a      	ldr	r2, [pc, #40]	; (8007348 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2c>)
{
 8007320:	4605      	mov	r5, r0
 8007322:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8007324:	460b      	mov	r3, r1
 8007326:	f500 7046 	add.w	r0, r0, #792	; 0x318
 800732a:	2104      	movs	r1, #4
 800732c:	f00f fecc 	bl	80170c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8007330:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8007334:	f00d fe4c 	bl	8014fd0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8007338:	b92c      	cbnz	r4, 8007346 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2a>
 800733a:	f00c fd61 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800733e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8007342:	f7fb becf 	b.w	80030e4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8007346:	bd38      	pop	{r3, r4, r5, pc}
 8007348:	0802ac5c 	.word	0x0802ac5c

0800734c <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 800734c:	4770      	bx	lr

0800734e <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 800734e:	3804      	subs	r0, #4
 8007350:	4770      	bx	lr

08007352 <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 8007352:	4770      	bx	lr

08007354 <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 8007354:	4770      	bx	lr

08007356 <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 8007356:	b510      	push	{r4, lr}
 8007358:	2110      	movs	r1, #16
 800735a:	4604      	mov	r4, r0
 800735c:	f01f faaf 	bl	80268be <_ZdlPvj>
 8007360:	4620      	mov	r0, r4
 8007362:	bd10      	pop	{r4, pc}

08007364 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 8007364:	f1a0 0004 	sub.w	r0, r0, #4
 8007368:	e7f5      	b.n	8007356 <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

0800736a <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 800736a:	4770      	bx	lr

0800736c <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 800736c:	b510      	push	{r4, lr}
 800736e:	2200      	movs	r2, #0
 8007370:	6082      	str	r2, [r0, #8]
    : view(v)
 8007372:	4a04      	ldr	r2, [pc, #16]	; (8007384 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 8007374:	60c1      	str	r1, [r0, #12]
 8007376:	f102 0408 	add.w	r4, r2, #8
 800737a:	3224      	adds	r2, #36	; 0x24
 800737c:	6004      	str	r4, [r0, #0]
 800737e:	6042      	str	r2, [r0, #4]
}
 8007380:	bd10      	pop	{r4, pc}
 8007382:	bf00      	nop
 8007384:	0802ad68 	.word	0x0802ad68

08007388 <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 8007388:	4770      	bx	lr
	...

0800738c <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 800738c:	b510      	push	{r4, lr}
 800738e:	4b03      	ldr	r3, [pc, #12]	; (800739c <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 8007390:	6003      	str	r3, [r0, #0]
 8007392:	4604      	mov	r4, r0
 8007394:	f7fe f86e 	bl	8005474 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 8007398:	4620      	mov	r0, r4
 800739a:	bd10      	pop	{r4, pc}
 800739c:	0802ada0 	.word	0x0802ada0

080073a0 <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 80073a0:	b510      	push	{r4, lr}
 80073a2:	4604      	mov	r4, r0
 80073a4:	f7ff fff2 	bl	800738c <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 80073a8:	4620      	mov	r0, r4
 80073aa:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80073ae:	f01f fa86 	bl	80268be <_ZdlPvj>
 80073b2:	4620      	mov	r0, r4
 80073b4:	bd10      	pop	{r4, pc}
	...

080073b8 <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 80073b8:	b510      	push	{r4, lr}
 80073ba:	4604      	mov	r4, r0
 80073bc:	f7fe f87a 	bl	80054b4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 80073c0:	4b01      	ldr	r3, [pc, #4]	; (80073c8 <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 80073c2:	6023      	str	r3, [r4, #0]
}
 80073c4:	4620      	mov	r0, r4
 80073c6:	bd10      	pop	{r4, pc}
 80073c8:	0802ada0 	.word	0x0802ada0

080073cc <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 80073cc:	f7fe b843 	b.w	8005456 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

080073d0 <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 80073d0:	4770      	bx	lr

080073d2 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 80073d2:	3804      	subs	r0, #4
 80073d4:	4770      	bx	lr

080073d6 <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 80073d6:	4770      	bx	lr

080073d8 <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 80073d8:	4770      	bx	lr

080073da <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 80073da:	b510      	push	{r4, lr}
 80073dc:	2110      	movs	r1, #16
 80073de:	4604      	mov	r4, r0
 80073e0:	f01f fa6d 	bl	80268be <_ZdlPvj>
 80073e4:	4620      	mov	r0, r4
 80073e6:	bd10      	pop	{r4, pc}

080073e8 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 80073e8:	f1a0 0004 	sub.w	r0, r0, #4
 80073ec:	e7f5      	b.n	80073da <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

080073ee <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 80073ee:	4770      	bx	lr

080073f0 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 80073f0:	b510      	push	{r4, lr}
 80073f2:	2200      	movs	r2, #0
 80073f4:	6082      	str	r2, [r0, #8]
    : view(v)
 80073f6:	4a04      	ldr	r2, [pc, #16]	; (8007408 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 80073f8:	60c1      	str	r1, [r0, #12]
 80073fa:	f102 0408 	add.w	r4, r2, #8
 80073fe:	3224      	adds	r2, #36	; 0x24
 8007400:	6004      	str	r4, [r0, #0]
 8007402:	6042      	str	r2, [r0, #4]
}
 8007404:	bd10      	pop	{r4, pc}
 8007406:	bf00      	nop
 8007408:	0802adcc 	.word	0x0802adcc

0800740c <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 800740c:	4770      	bx	lr
	...

08007410 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 8007410:	b510      	push	{r4, lr}
 8007412:	4b03      	ldr	r3, [pc, #12]	; (8007420 <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 8007414:	6003      	str	r3, [r0, #0]
 8007416:	4604      	mov	r4, r0
 8007418:	f7fe f9f0 	bl	80057fc <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 800741c:	4620      	mov	r0, r4
 800741e:	bd10      	pop	{r4, pc}
 8007420:	0802ae04 	.word	0x0802ae04

08007424 <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 8007424:	b510      	push	{r4, lr}
 8007426:	4604      	mov	r4, r0
 8007428:	f7ff fff2 	bl	8007410 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 800742c:	4620      	mov	r0, r4
 800742e:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8007432:	f01f fa44 	bl	80268be <_ZdlPvj>
 8007436:	4620      	mov	r0, r4
 8007438:	bd10      	pop	{r4, pc}
	...

0800743c <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 800743c:	b510      	push	{r4, lr}
 800743e:	4604      	mov	r4, r0
 8007440:	f7fe f9fc 	bl	800583c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 8007444:	4b01      	ldr	r3, [pc, #4]	; (800744c <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 8007446:	6023      	str	r3, [r4, #0]
}
 8007448:	4620      	mov	r0, r4
 800744a:	bd10      	pop	{r4, pc}
 800744c:	0802ae04 	.word	0x0802ae04

08007450 <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 8007450:	f7fe b9c5 	b.w	80057de <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

08007454 <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 8007454:	4770      	bx	lr

08007456 <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 8007456:	3804      	subs	r0, #4
 8007458:	4770      	bx	lr

0800745a <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 800745a:	4770      	bx	lr

0800745c <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:

}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800745c:	68c0      	ldr	r0, [r0, #12]
 800745e:	6803      	ldr	r3, [r0, #0]
 8007460:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007462:	4718      	bx	r3

08007464 <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8007464:	f1a0 0004 	sub.w	r0, r0, #4
 8007468:	f7ff bff8 	b.w	800745c <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>

0800746c <_ZN27Measurement_SinglePresenterD0Ev>:
    virtual ~Measurement_SinglePresenter() {}
 800746c:	b510      	push	{r4, lr}
 800746e:	2110      	movs	r1, #16
 8007470:	4604      	mov	r4, r0
 8007472:	f01f fa24 	bl	80268be <_ZdlPvj>
 8007476:	4620      	mov	r0, r4
 8007478:	bd10      	pop	{r4, pc}

0800747a <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 800747a:	f1a0 0004 	sub.w	r0, r0, #4
 800747e:	e7f5      	b.n	800746c <_ZN27Measurement_SinglePresenterD0Ev>

08007480 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 8007480:	b510      	push	{r4, lr}
 8007482:	2200      	movs	r2, #0
 8007484:	6082      	str	r2, [r0, #8]
    : view(v)
 8007486:	4a04      	ldr	r2, [pc, #16]	; (8007498 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 8007488:	60c1      	str	r1, [r0, #12]
 800748a:	f102 0408 	add.w	r4, r2, #8
 800748e:	3224      	adds	r2, #36	; 0x24
 8007490:	6004      	str	r4, [r0, #0]
 8007492:	6042      	str	r2, [r0, #4]
}
 8007494:	bd10      	pop	{r4, pc}
 8007496:	bf00      	nop
 8007498:	0802ae30 	.word	0x0802ae30

0800749c <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 800749c:	4770      	bx	lr
	...

080074a0 <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 80074a0:	b510      	push	{r4, lr}
 80074a2:	4b03      	ldr	r3, [pc, #12]	; (80074b0 <_ZN22Measurement_SingleViewD1Ev+0x10>)
 80074a4:	6003      	str	r3, [r0, #0]
 80074a6:	4604      	mov	r4, r0
 80074a8:	f7fe fb5e 	bl	8005b68 <_ZN26Measurement_SingleViewBaseD1Ev>
 80074ac:	4620      	mov	r0, r4
 80074ae:	bd10      	pop	{r4, pc}
 80074b0:	0802ae68 	.word	0x0802ae68

080074b4 <_ZN22Measurement_SingleViewD0Ev>:
 80074b4:	b510      	push	{r4, lr}
 80074b6:	4604      	mov	r4, r0
 80074b8:	f7ff fff2 	bl	80074a0 <_ZN22Measurement_SingleViewD1Ev>
 80074bc:	4620      	mov	r0, r4
 80074be:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80074c2:	f01f f9fc 	bl	80268be <_ZdlPvj>
 80074c6:	4620      	mov	r0, r4
 80074c8:	bd10      	pop	{r4, pc}
	...

080074cc <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 80074cc:	b510      	push	{r4, lr}
 80074ce:	4604      	mov	r4, r0
 80074d0:	f7fe fb84 	bl	8005bdc <_ZN26Measurement_SingleViewBaseC1Ev>
 80074d4:	4b01      	ldr	r3, [pc, #4]	; (80074dc <_ZN22Measurement_SingleViewC1Ev+0x10>)
 80074d6:	6023      	str	r3, [r4, #0]
}
 80074d8:	4620      	mov	r0, r4
 80074da:	bd10      	pop	{r4, pc}
 80074dc:	0802ae68 	.word	0x0802ae68

080074e0 <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 80074e0:	f7fe bb1e 	b.w	8005b20 <_ZN26Measurement_SingleViewBase11setupScreenEv>

080074e4 <_ZN22Measurement_SingleView15setTimeoutValueEi>:

void Measurement_SingleView::setTimeoutValue(int value)
{
 80074e4:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80074e6:	4a0a      	ldr	r2, [pc, #40]	; (8007510 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2c>)
{
 80074e8:	4605      	mov	r5, r0
 80074ea:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80074ec:	460b      	mov	r3, r1
 80074ee:	f500 7046 	add.w	r0, r0, #792	; 0x318
 80074f2:	2104      	movs	r1, #4
 80074f4:	f00f fde8 	bl	80170c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 80074f8:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80074fc:	f00d fd68 	bl	8014fd0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8007500:	b92c      	cbnz	r4, 800750e <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2a>
 8007502:	f00c fc7d 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8007506:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800750a:	f7fb bdeb 	b.w	80030e4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800750e:	bd38      	pop	{r3, r4, r5, pc}
 8007510:	0802ac5c 	.word	0x0802ac5c

08007514 <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 8007514:	4770      	bx	lr

08007516 <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 8007516:	3804      	subs	r0, #4
 8007518:	4770      	bx	lr

0800751a <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 800751a:	4770      	bx	lr

0800751c <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 800751c:	4770      	bx	lr

0800751e <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 800751e:	b510      	push	{r4, lr}
 8007520:	2110      	movs	r1, #16
 8007522:	4604      	mov	r4, r0
 8007524:	f01f f9cb 	bl	80268be <_ZdlPvj>
 8007528:	4620      	mov	r0, r4
 800752a:	bd10      	pop	{r4, pc}

0800752c <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 800752c:	f1a0 0004 	sub.w	r0, r0, #4
 8007530:	e7f5      	b.n	800751e <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

08007532 <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 8007532:	4770      	bx	lr

08007534 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 8007534:	b510      	push	{r4, lr}
 8007536:	2200      	movs	r2, #0
 8007538:	6082      	str	r2, [r0, #8]
    : view(v)
 800753a:	4a04      	ldr	r2, [pc, #16]	; (800754c <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 800753c:	60c1      	str	r1, [r0, #12]
 800753e:	f102 0408 	add.w	r4, r2, #8
 8007542:	3224      	adds	r2, #36	; 0x24
 8007544:	6004      	str	r4, [r0, #0]
 8007546:	6042      	str	r2, [r0, #4]
}
 8007548:	bd10      	pop	{r4, pc}
 800754a:	bf00      	nop
 800754c:	0802ae98 	.word	0x0802ae98

08007550 <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 8007550:	4770      	bx	lr
	...

08007554 <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 8007554:	b510      	push	{r4, lr}
 8007556:	4b03      	ldr	r3, [pc, #12]	; (8007564 <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 8007558:	6003      	str	r3, [r0, #0]
 800755a:	4604      	mov	r4, r0
 800755c:	f7fe fd96 	bl	800608c <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 8007560:	4620      	mov	r0, r4
 8007562:	bd10      	pop	{r4, pc}
 8007564:	0802aed0 	.word	0x0802aed0

08007568 <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 8007568:	b510      	push	{r4, lr}
 800756a:	4604      	mov	r4, r0
 800756c:	f7ff fff2 	bl	8007554 <_ZN33Measurement_Single_Display_1PViewD1Ev>
 8007570:	4620      	mov	r0, r4
 8007572:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8007576:	f01f f9a2 	bl	80268be <_ZdlPvj>
 800757a:	4620      	mov	r0, r4
 800757c:	bd10      	pop	{r4, pc}
	...

08007580 <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 8007580:	b510      	push	{r4, lr}
 8007582:	4604      	mov	r4, r0
 8007584:	f7fe fda2 	bl	80060cc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 8007588:	4b01      	ldr	r3, [pc, #4]	; (8007590 <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 800758a:	6023      	str	r3, [r4, #0]
}
 800758c:	4620      	mov	r0, r4
 800758e:	bd10      	pop	{r4, pc}
 8007590:	0802aed0 	.word	0x0802aed0

08007594 <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 8007594:	f7fe bd69 	b.w	800606a <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

08007598 <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 8007598:	4770      	bx	lr

0800759a <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 800759a:	3804      	subs	r0, #4
 800759c:	4770      	bx	lr

0800759e <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 800759e:	4770      	bx	lr

080075a0 <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 80075a0:	4770      	bx	lr

080075a2 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 80075a2:	b510      	push	{r4, lr}
 80075a4:	2110      	movs	r1, #16
 80075a6:	4604      	mov	r4, r0
 80075a8:	f01f f989 	bl	80268be <_ZdlPvj>
 80075ac:	4620      	mov	r0, r4
 80075ae:	bd10      	pop	{r4, pc}

080075b0 <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 80075b0:	f1a0 0004 	sub.w	r0, r0, #4
 80075b4:	e7f5      	b.n	80075a2 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

080075b6 <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 80075b6:	4770      	bx	lr

080075b8 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 80075b8:	b510      	push	{r4, lr}
 80075ba:	2200      	movs	r2, #0
 80075bc:	6082      	str	r2, [r0, #8]
    : view(v)
 80075be:	4a04      	ldr	r2, [pc, #16]	; (80075d0 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 80075c0:	60c1      	str	r1, [r0, #12]
 80075c2:	f102 0408 	add.w	r4, r2, #8
 80075c6:	3224      	adds	r2, #36	; 0x24
 80075c8:	6004      	str	r4, [r0, #0]
 80075ca:	6042      	str	r2, [r0, #4]
}
 80075cc:	bd10      	pop	{r4, pc}
 80075ce:	bf00      	nop
 80075d0:	0802aefc 	.word	0x0802aefc

080075d4 <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 80075d4:	4770      	bx	lr
	...

080075d8 <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 80075d8:	b510      	push	{r4, lr}
 80075da:	4b03      	ldr	r3, [pc, #12]	; (80075e8 <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 80075dc:	6003      	str	r3, [r0, #0]
 80075de:	4604      	mov	r4, r0
 80075e0:	f7fe ff20 	bl	8006424 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 80075e4:	4620      	mov	r0, r4
 80075e6:	bd10      	pop	{r4, pc}
 80075e8:	0802af34 	.word	0x0802af34

080075ec <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 80075ec:	b510      	push	{r4, lr}
 80075ee:	4604      	mov	r4, r0
 80075f0:	f7ff fff2 	bl	80075d8 <_ZN33Measurement_Single_Display_3PViewD1Ev>
 80075f4:	4620      	mov	r0, r4
 80075f6:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80075fa:	f01f f960 	bl	80268be <_ZdlPvj>
 80075fe:	4620      	mov	r0, r4
 8007600:	bd10      	pop	{r4, pc}
	...

08007604 <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 8007604:	b510      	push	{r4, lr}
 8007606:	4604      	mov	r4, r0
 8007608:	f7fe ff2c 	bl	8006464 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 800760c:	4b01      	ldr	r3, [pc, #4]	; (8007614 <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 800760e:	6023      	str	r3, [r4, #0]
}
 8007610:	4620      	mov	r0, r4
 8007612:	bd10      	pop	{r4, pc}
 8007614:	0802af34 	.word	0x0802af34

08007618 <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 8007618:	f7fe bef3 	b.w	8006402 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

0800761c <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 800761c:	2100      	movs	r1, #0
 800761e:	223c      	movs	r2, #60	; 0x3c
 8007620:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 8007624:	4770      	bx	lr
	...

08007628 <_ZN5Model4tickEv>:

void Model::tick()
{
 8007628:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 800762a:	4d0a      	ldr	r5, [pc, #40]	; (8007654 <_ZN5Model4tickEv+0x2c>)
{
 800762c:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 800762e:	6828      	ldr	r0, [r5, #0]
 8007630:	f004 fb44 	bl	800bcbc <osMessageQueueGetCount>
 8007634:	b168      	cbz	r0, 8007652 <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 8007636:	2300      	movs	r3, #0
 8007638:	6828      	ldr	r0, [r5, #0]
 800763a:	461a      	mov	r2, r3
 800763c:	1d21      	adds	r1, r4, #4
 800763e:	f004 fb09 	bl	800bc54 <osMessageQueueGet>
 8007642:	b930      	cbnz	r0, 8007652 <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 8007644:	6820      	ldr	r0, [r4, #0]
 8007646:	6861      	ldr	r1, [r4, #4]
 8007648:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 800764a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 800764e:	689b      	ldr	r3, [r3, #8]
 8007650:	4718      	bx	r3
}
 8007652:	bd70      	pop	{r4, r5, r6, pc}
 8007654:	20002620 	.word	0x20002620

08007658 <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 8007658:	4770      	bx	lr

0800765a <_ZThn4_N21Project_InfoPresenterD1Ev>:
 800765a:	3804      	subs	r0, #4
 800765c:	4770      	bx	lr

0800765e <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 800765e:	4770      	bx	lr

08007660 <_ZN21Project_InfoPresenter15setTimeoutValueEi>:

}

void Project_InfoPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8007660:	68c0      	ldr	r0, [r0, #12]
 8007662:	6803      	ldr	r3, [r0, #0]
 8007664:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007666:	4718      	bx	r3

08007668 <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8007668:	f1a0 0004 	sub.w	r0, r0, #4
 800766c:	f7ff bff8 	b.w	8007660 <_ZN21Project_InfoPresenter15setTimeoutValueEi>

08007670 <_ZN21Project_InfoPresenterD0Ev>:
    virtual ~Project_InfoPresenter() {}
 8007670:	b510      	push	{r4, lr}
 8007672:	2110      	movs	r1, #16
 8007674:	4604      	mov	r4, r0
 8007676:	f01f f922 	bl	80268be <_ZdlPvj>
 800767a:	4620      	mov	r0, r4
 800767c:	bd10      	pop	{r4, pc}

0800767e <_ZThn4_N21Project_InfoPresenterD0Ev>:
 800767e:	f1a0 0004 	sub.w	r0, r0, #4
 8007682:	e7f5      	b.n	8007670 <_ZN21Project_InfoPresenterD0Ev>

08007684 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 8007684:	b510      	push	{r4, lr}
 8007686:	2200      	movs	r2, #0
 8007688:	6082      	str	r2, [r0, #8]
    : view(v)
 800768a:	4a04      	ldr	r2, [pc, #16]	; (800769c <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 800768c:	60c1      	str	r1, [r0, #12]
 800768e:	f102 0408 	add.w	r4, r2, #8
 8007692:	3224      	adds	r2, #36	; 0x24
 8007694:	6004      	str	r4, [r0, #0]
 8007696:	6042      	str	r2, [r0, #4]
}
 8007698:	bd10      	pop	{r4, pc}
 800769a:	bf00      	nop
 800769c:	0802af60 	.word	0x0802af60

080076a0 <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 80076a0:	4770      	bx	lr
	...

080076a4 <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 80076a4:	b510      	push	{r4, lr}
 80076a6:	4b03      	ldr	r3, [pc, #12]	; (80076b4 <_ZN16Project_InfoViewD1Ev+0x10>)
 80076a8:	6003      	str	r3, [r0, #0]
 80076aa:	4604      	mov	r4, r0
 80076ac:	f7ff f874 	bl	8006798 <_ZN20Project_InfoViewBaseD1Ev>
 80076b0:	4620      	mov	r0, r4
 80076b2:	bd10      	pop	{r4, pc}
 80076b4:	0802af98 	.word	0x0802af98

080076b8 <_ZN16Project_InfoViewD0Ev>:
 80076b8:	b510      	push	{r4, lr}
 80076ba:	4604      	mov	r4, r0
 80076bc:	f7ff fff2 	bl	80076a4 <_ZN16Project_InfoViewD1Ev>
 80076c0:	4620      	mov	r0, r4
 80076c2:	f241 01b0 	movw	r1, #4272	; 0x10b0
 80076c6:	f01f f8fa 	bl	80268be <_ZdlPvj>
 80076ca:	4620      	mov	r0, r4
 80076cc:	bd10      	pop	{r4, pc}
	...

080076d0 <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 80076d0:	b510      	push	{r4, lr}
 80076d2:	4604      	mov	r4, r0
 80076d4:	f7ff f888 	bl	80067e8 <_ZN20Project_InfoViewBaseC1Ev>
 80076d8:	4b01      	ldr	r3, [pc, #4]	; (80076e0 <_ZN16Project_InfoViewC1Ev+0x10>)
 80076da:	6023      	str	r3, [r4, #0]
}
 80076dc:	4620      	mov	r0, r4
 80076de:	bd10      	pop	{r4, pc}
 80076e0:	0802af98 	.word	0x0802af98

080076e4 <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 80076e4:	f7ff b834 	b.w	8006750 <_ZN20Project_InfoViewBase11setupScreenEv>

080076e8 <_ZN16Project_InfoView15setTimeoutValueEi>:

void Project_InfoView::setTimeoutValue(int value)
{
 80076e8:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80076ea:	4a0a      	ldr	r2, [pc, #40]	; (8007714 <_ZN16Project_InfoView15setTimeoutValueEi+0x2c>)
{
 80076ec:	4605      	mov	r5, r0
 80076ee:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80076f0:	460b      	mov	r3, r1
 80076f2:	f500 7022 	add.w	r0, r0, #648	; 0x288
 80076f6:	2104      	movs	r1, #4
 80076f8:	f00f fce6 	bl	80170c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 80076fc:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8007700:	f00d fc66 	bl	8014fd0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if (value == 0) {
 8007704:	b92c      	cbnz	r4, 8007712 <_ZN16Project_InfoView15setTimeoutValueEi+0x2a>
 8007706:	f00c fb7b 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800770a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800770e:	f7fb bce9 	b.w	80030e4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8007712:	bd38      	pop	{r3, r4, r5, pc}
 8007714:	0802ac5c 	.word	0x0802ac5c

08007718 <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 8007718:	4770      	bx	lr

0800771a <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 800771a:	3804      	subs	r0, #4
 800771c:	4770      	bx	lr

0800771e <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 800771e:	4770      	bx	lr

08007720 <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 8007720:	4770      	bx	lr

08007722 <_ZN21Shutting_OffPresenterD0Ev>:
 8007722:	b510      	push	{r4, lr}
 8007724:	2110      	movs	r1, #16
 8007726:	4604      	mov	r4, r0
 8007728:	f01f f8c9 	bl	80268be <_ZdlPvj>
 800772c:	4620      	mov	r0, r4
 800772e:	bd10      	pop	{r4, pc}

08007730 <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 8007730:	f1a0 0004 	sub.w	r0, r0, #4
 8007734:	e7f5      	b.n	8007722 <_ZN21Shutting_OffPresenterD0Ev>

08007736 <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 8007736:	4770      	bx	lr

08007738 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 8007738:	b510      	push	{r4, lr}
 800773a:	2200      	movs	r2, #0
 800773c:	6082      	str	r2, [r0, #8]
    : view(v)
 800773e:	4a04      	ldr	r2, [pc, #16]	; (8007750 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 8007740:	60c1      	str	r1, [r0, #12]
 8007742:	f102 0408 	add.w	r4, r2, #8
 8007746:	3224      	adds	r2, #36	; 0x24
 8007748:	6004      	str	r4, [r0, #0]
 800774a:	6042      	str	r2, [r0, #4]
}
 800774c:	bd10      	pop	{r4, pc}
 800774e:	bf00      	nop
 8007750:	0802afc8 	.word	0x0802afc8

08007754 <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 8007754:	4770      	bx	lr
	...

08007758 <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 8007758:	b510      	push	{r4, lr}
 800775a:	4b03      	ldr	r3, [pc, #12]	; (8007768 <_ZN16Shutting_OffViewD1Ev+0x10>)
 800775c:	6003      	str	r3, [r0, #0]
 800775e:	4604      	mov	r4, r0
 8007760:	f7ff fa10 	bl	8006b84 <_ZN20Shutting_OffViewBaseD1Ev>
 8007764:	4620      	mov	r0, r4
 8007766:	bd10      	pop	{r4, pc}
 8007768:	0802b000 	.word	0x0802b000

0800776c <_ZN16Shutting_OffViewD0Ev>:
 800776c:	b510      	push	{r4, lr}
 800776e:	4604      	mov	r4, r0
 8007770:	f7ff fff2 	bl	8007758 <_ZN16Shutting_OffViewD1Ev>
 8007774:	4620      	mov	r0, r4
 8007776:	2198      	movs	r1, #152	; 0x98
 8007778:	f01f f8a1 	bl	80268be <_ZdlPvj>
 800777c:	4620      	mov	r0, r4
 800777e:	bd10      	pop	{r4, pc}

08007780 <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 8007780:	b510      	push	{r4, lr}
 8007782:	4604      	mov	r4, r0
 8007784:	f7ff fa08 	bl	8006b98 <_ZN20Shutting_OffViewBaseC1Ev>
 8007788:	4b01      	ldr	r3, [pc, #4]	; (8007790 <_ZN16Shutting_OffViewC1Ev+0x10>)
 800778a:	6023      	str	r3, [r4, #0]
}
 800778c:	4620      	mov	r0, r4
 800778e:	bd10      	pop	{r4, pc}
 8007790:	0802b000 	.word	0x0802b000

08007794 <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 8007794:	f7ff b9f7 	b.w	8006b86 <_ZN20Shutting_OffViewBase11setupScreenEv>

08007798 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8007798:	20f0      	movs	r0, #240	; 0xf0
 800779a:	4770      	bx	lr

0800779c <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 800779c:	f44f 70a0 	mov.w	r0, #320	; 0x140
 80077a0:	4770      	bx	lr
 80077a2:	bf00      	nop

080077a4 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 80077a4:	2029      	movs	r0, #41	; 0x29
 80077a6:	f7fa b96d 	b.w	8001a84 <LCD_IO_WriteReg>
 80077aa:	bf00      	nop

080077ac <ili9341_DisplayOff>:
 80077ac:	2028      	movs	r0, #40	; 0x28
 80077ae:	f7fa b969 	b.w	8001a84 <LCD_IO_WriteReg>
 80077b2:	bf00      	nop

080077b4 <ili9341_Init>:
{
 80077b4:	b508      	push	{r3, lr}
  LCD_IO_Init();
 80077b6:	f7fa f92b 	bl	8001a10 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 80077ba:	20ca      	movs	r0, #202	; 0xca
 80077bc:	f7fa f962 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80077c0:	20c3      	movs	r0, #195	; 0xc3
 80077c2:	f7fa f935 	bl	8001a30 <LCD_IO_WriteData>
 80077c6:	2008      	movs	r0, #8
 80077c8:	f7fa f932 	bl	8001a30 <LCD_IO_WriteData>
 80077cc:	2050      	movs	r0, #80	; 0x50
 80077ce:	f7fa f92f 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80077d2:	20cf      	movs	r0, #207	; 0xcf
 80077d4:	f7fa f956 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80077d8:	2000      	movs	r0, #0
 80077da:	f7fa f929 	bl	8001a30 <LCD_IO_WriteData>
 80077de:	20c1      	movs	r0, #193	; 0xc1
 80077e0:	f7fa f926 	bl	8001a30 <LCD_IO_WriteData>
 80077e4:	2030      	movs	r0, #48	; 0x30
 80077e6:	f7fa f923 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80077ea:	20ed      	movs	r0, #237	; 0xed
 80077ec:	f7fa f94a 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80077f0:	2064      	movs	r0, #100	; 0x64
 80077f2:	f7fa f91d 	bl	8001a30 <LCD_IO_WriteData>
 80077f6:	2003      	movs	r0, #3
 80077f8:	f7fa f91a 	bl	8001a30 <LCD_IO_WriteData>
 80077fc:	2012      	movs	r0, #18
 80077fe:	f7fa f917 	bl	8001a30 <LCD_IO_WriteData>
 8007802:	2081      	movs	r0, #129	; 0x81
 8007804:	f7fa f914 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007808:	20e8      	movs	r0, #232	; 0xe8
 800780a:	f7fa f93b 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800780e:	2085      	movs	r0, #133	; 0x85
 8007810:	f7fa f90e 	bl	8001a30 <LCD_IO_WriteData>
 8007814:	2000      	movs	r0, #0
 8007816:	f7fa f90b 	bl	8001a30 <LCD_IO_WriteData>
 800781a:	2078      	movs	r0, #120	; 0x78
 800781c:	f7fa f908 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007820:	20cb      	movs	r0, #203	; 0xcb
 8007822:	f7fa f92f 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007826:	2039      	movs	r0, #57	; 0x39
 8007828:	f7fa f902 	bl	8001a30 <LCD_IO_WriteData>
 800782c:	202c      	movs	r0, #44	; 0x2c
 800782e:	f7fa f8ff 	bl	8001a30 <LCD_IO_WriteData>
 8007832:	2000      	movs	r0, #0
 8007834:	f7fa f8fc 	bl	8001a30 <LCD_IO_WriteData>
 8007838:	2034      	movs	r0, #52	; 0x34
 800783a:	f7fa f8f9 	bl	8001a30 <LCD_IO_WriteData>
 800783e:	2002      	movs	r0, #2
 8007840:	f7fa f8f6 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007844:	20f7      	movs	r0, #247	; 0xf7
 8007846:	f7fa f91d 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800784a:	2020      	movs	r0, #32
 800784c:	f7fa f8f0 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007850:	20ea      	movs	r0, #234	; 0xea
 8007852:	f7fa f917 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007856:	2000      	movs	r0, #0
 8007858:	f7fa f8ea 	bl	8001a30 <LCD_IO_WriteData>
 800785c:	2000      	movs	r0, #0
 800785e:	f7fa f8e7 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007862:	20b1      	movs	r0, #177	; 0xb1
 8007864:	f7fa f90e 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007868:	2000      	movs	r0, #0
 800786a:	f7fa f8e1 	bl	8001a30 <LCD_IO_WriteData>
 800786e:	201b      	movs	r0, #27
 8007870:	f7fa f8de 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007874:	20b6      	movs	r0, #182	; 0xb6
 8007876:	f7fa f905 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800787a:	200a      	movs	r0, #10
 800787c:	f7fa f8d8 	bl	8001a30 <LCD_IO_WriteData>
 8007880:	20a2      	movs	r0, #162	; 0xa2
 8007882:	f7fa f8d5 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007886:	20c0      	movs	r0, #192	; 0xc0
 8007888:	f7fa f8fc 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800788c:	2010      	movs	r0, #16
 800788e:	f7fa f8cf 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007892:	20c1      	movs	r0, #193	; 0xc1
 8007894:	f7fa f8f6 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007898:	2010      	movs	r0, #16
 800789a:	f7fa f8c9 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800789e:	20c5      	movs	r0, #197	; 0xc5
 80078a0:	f7fa f8f0 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80078a4:	2045      	movs	r0, #69	; 0x45
 80078a6:	f7fa f8c3 	bl	8001a30 <LCD_IO_WriteData>
 80078aa:	2015      	movs	r0, #21
 80078ac:	f7fa f8c0 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80078b0:	20c7      	movs	r0, #199	; 0xc7
 80078b2:	f7fa f8e7 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80078b6:	2090      	movs	r0, #144	; 0x90
 80078b8:	f7fa f8ba 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80078bc:	2036      	movs	r0, #54	; 0x36
 80078be:	f7fa f8e1 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80078c2:	20c8      	movs	r0, #200	; 0xc8
 80078c4:	f7fa f8b4 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80078c8:	20f2      	movs	r0, #242	; 0xf2
 80078ca:	f7fa f8db 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80078ce:	2000      	movs	r0, #0
 80078d0:	f7fa f8ae 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80078d4:	20b0      	movs	r0, #176	; 0xb0
 80078d6:	f7fa f8d5 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80078da:	20c2      	movs	r0, #194	; 0xc2
 80078dc:	f7fa f8a8 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80078e0:	20b6      	movs	r0, #182	; 0xb6
 80078e2:	f7fa f8cf 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80078e6:	200a      	movs	r0, #10
 80078e8:	f7fa f8a2 	bl	8001a30 <LCD_IO_WriteData>
 80078ec:	20a7      	movs	r0, #167	; 0xa7
 80078ee:	f7fa f89f 	bl	8001a30 <LCD_IO_WriteData>
 80078f2:	2027      	movs	r0, #39	; 0x27
 80078f4:	f7fa f89c 	bl	8001a30 <LCD_IO_WriteData>
 80078f8:	2004      	movs	r0, #4
 80078fa:	f7fa f899 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80078fe:	202a      	movs	r0, #42	; 0x2a
 8007900:	f7fa f8c0 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007904:	2000      	movs	r0, #0
 8007906:	f7fa f893 	bl	8001a30 <LCD_IO_WriteData>
 800790a:	2000      	movs	r0, #0
 800790c:	f7fa f890 	bl	8001a30 <LCD_IO_WriteData>
 8007910:	2000      	movs	r0, #0
 8007912:	f7fa f88d 	bl	8001a30 <LCD_IO_WriteData>
 8007916:	20ef      	movs	r0, #239	; 0xef
 8007918:	f7fa f88a 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800791c:	202b      	movs	r0, #43	; 0x2b
 800791e:	f7fa f8b1 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007922:	2000      	movs	r0, #0
 8007924:	f7fa f884 	bl	8001a30 <LCD_IO_WriteData>
 8007928:	2000      	movs	r0, #0
 800792a:	f7fa f881 	bl	8001a30 <LCD_IO_WriteData>
 800792e:	2001      	movs	r0, #1
 8007930:	f7fa f87e 	bl	8001a30 <LCD_IO_WriteData>
 8007934:	203f      	movs	r0, #63	; 0x3f
 8007936:	f7fa f87b 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800793a:	20f6      	movs	r0, #246	; 0xf6
 800793c:	f7fa f8a2 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007940:	2001      	movs	r0, #1
 8007942:	f7fa f875 	bl	8001a30 <LCD_IO_WriteData>
 8007946:	2000      	movs	r0, #0
 8007948:	f7fa f872 	bl	8001a30 <LCD_IO_WriteData>
 800794c:	2006      	movs	r0, #6
 800794e:	f7fa f86f 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007952:	202c      	movs	r0, #44	; 0x2c
 8007954:	f7fa f896 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8007958:	20c8      	movs	r0, #200	; 0xc8
 800795a:	f7fa f8fb 	bl	8001b54 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800795e:	2026      	movs	r0, #38	; 0x26
 8007960:	f7fa f890 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007964:	2001      	movs	r0, #1
 8007966:	f7fa f863 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800796a:	20e0      	movs	r0, #224	; 0xe0
 800796c:	f7fa f88a 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007970:	200f      	movs	r0, #15
 8007972:	f7fa f85d 	bl	8001a30 <LCD_IO_WriteData>
 8007976:	2029      	movs	r0, #41	; 0x29
 8007978:	f7fa f85a 	bl	8001a30 <LCD_IO_WriteData>
 800797c:	2024      	movs	r0, #36	; 0x24
 800797e:	f7fa f857 	bl	8001a30 <LCD_IO_WriteData>
 8007982:	200c      	movs	r0, #12
 8007984:	f7fa f854 	bl	8001a30 <LCD_IO_WriteData>
 8007988:	200e      	movs	r0, #14
 800798a:	f7fa f851 	bl	8001a30 <LCD_IO_WriteData>
 800798e:	2009      	movs	r0, #9
 8007990:	f7fa f84e 	bl	8001a30 <LCD_IO_WriteData>
 8007994:	204e      	movs	r0, #78	; 0x4e
 8007996:	f7fa f84b 	bl	8001a30 <LCD_IO_WriteData>
 800799a:	2078      	movs	r0, #120	; 0x78
 800799c:	f7fa f848 	bl	8001a30 <LCD_IO_WriteData>
 80079a0:	203c      	movs	r0, #60	; 0x3c
 80079a2:	f7fa f845 	bl	8001a30 <LCD_IO_WriteData>
 80079a6:	2009      	movs	r0, #9
 80079a8:	f7fa f842 	bl	8001a30 <LCD_IO_WriteData>
 80079ac:	2013      	movs	r0, #19
 80079ae:	f7fa f83f 	bl	8001a30 <LCD_IO_WriteData>
 80079b2:	2005      	movs	r0, #5
 80079b4:	f7fa f83c 	bl	8001a30 <LCD_IO_WriteData>
 80079b8:	2017      	movs	r0, #23
 80079ba:	f7fa f839 	bl	8001a30 <LCD_IO_WriteData>
 80079be:	2011      	movs	r0, #17
 80079c0:	f7fa f836 	bl	8001a30 <LCD_IO_WriteData>
 80079c4:	2000      	movs	r0, #0
 80079c6:	f7fa f833 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80079ca:	20e1      	movs	r0, #225	; 0xe1
 80079cc:	f7fa f85a 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80079d0:	2000      	movs	r0, #0
 80079d2:	f7fa f82d 	bl	8001a30 <LCD_IO_WriteData>
 80079d6:	2016      	movs	r0, #22
 80079d8:	f7fa f82a 	bl	8001a30 <LCD_IO_WriteData>
 80079dc:	201b      	movs	r0, #27
 80079de:	f7fa f827 	bl	8001a30 <LCD_IO_WriteData>
 80079e2:	2004      	movs	r0, #4
 80079e4:	f7fa f824 	bl	8001a30 <LCD_IO_WriteData>
 80079e8:	2011      	movs	r0, #17
 80079ea:	f7fa f821 	bl	8001a30 <LCD_IO_WriteData>
 80079ee:	2007      	movs	r0, #7
 80079f0:	f7fa f81e 	bl	8001a30 <LCD_IO_WriteData>
 80079f4:	2031      	movs	r0, #49	; 0x31
 80079f6:	f7fa f81b 	bl	8001a30 <LCD_IO_WriteData>
 80079fa:	2033      	movs	r0, #51	; 0x33
 80079fc:	f7fa f818 	bl	8001a30 <LCD_IO_WriteData>
 8007a00:	2042      	movs	r0, #66	; 0x42
 8007a02:	f7fa f815 	bl	8001a30 <LCD_IO_WriteData>
 8007a06:	2005      	movs	r0, #5
 8007a08:	f7fa f812 	bl	8001a30 <LCD_IO_WriteData>
 8007a0c:	200c      	movs	r0, #12
 8007a0e:	f7fa f80f 	bl	8001a30 <LCD_IO_WriteData>
 8007a12:	200a      	movs	r0, #10
 8007a14:	f7fa f80c 	bl	8001a30 <LCD_IO_WriteData>
 8007a18:	2028      	movs	r0, #40	; 0x28
 8007a1a:	f7fa f809 	bl	8001a30 <LCD_IO_WriteData>
 8007a1e:	202f      	movs	r0, #47	; 0x2f
 8007a20:	f7fa f806 	bl	8001a30 <LCD_IO_WriteData>
 8007a24:	200f      	movs	r0, #15
 8007a26:	f7fa f803 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007a2a:	2011      	movs	r0, #17
 8007a2c:	f7fa f82a 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8007a30:	20c8      	movs	r0, #200	; 0xc8
 8007a32:	f7fa f88f 	bl	8001b54 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8007a36:	2029      	movs	r0, #41	; 0x29
 8007a38:	f7fa f824 	bl	8001a84 <LCD_IO_WriteReg>
}
 8007a3c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8007a40:	202c      	movs	r0, #44	; 0x2c
 8007a42:	f7fa b81f 	b.w	8001a84 <LCD_IO_WriteReg>
 8007a46:	bf00      	nop

08007a48 <ili9341_ReadID>:
{
 8007a48:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8007a4a:	f7f9 ffe1 	bl	8001a10 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8007a4e:	2103      	movs	r1, #3
 8007a50:	20d3      	movs	r0, #211	; 0xd3
 8007a52:	f7fa f841 	bl	8001ad8 <LCD_IO_ReadData>
}
 8007a56:	b280      	uxth	r0, r0
 8007a58:	bd08      	pop	{r3, pc}
 8007a5a:	bf00      	nop

08007a5c <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8007a5c:	221f      	movs	r2, #31
 8007a5e:	210b      	movs	r1, #11
 8007a60:	b2c0      	uxtb	r0, r0
 8007a62:	f7f9 bf87 	b.w	8001974 <IOE_Write>
 8007a66:	bf00      	nop

08007a68 <stmpe811_Reset>:
{
 8007a68:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8007a6a:	b2c4      	uxtb	r4, r0
 8007a6c:	2202      	movs	r2, #2
 8007a6e:	2103      	movs	r1, #3
 8007a70:	4620      	mov	r0, r4
 8007a72:	f7f9 ff7f 	bl	8001974 <IOE_Write>
  IOE_Delay(10); 
 8007a76:	200a      	movs	r0, #10
 8007a78:	f7f9 ffc8 	bl	8001a0c <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8007a7c:	4620      	mov	r0, r4
 8007a7e:	2200      	movs	r2, #0
 8007a80:	2103      	movs	r1, #3
 8007a82:	f7f9 ff77 	bl	8001974 <IOE_Write>
}
 8007a86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8007a8a:	2002      	movs	r0, #2
 8007a8c:	f7f9 bfbe 	b.w	8001a0c <IOE_Delay>

08007a90 <stmpe811_ReadID>:
{
 8007a90:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8007a92:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 8007a94:	f7f9 ff6a 	bl	800196c <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8007a98:	2100      	movs	r1, #0
 8007a9a:	4620      	mov	r0, r4
 8007a9c:	f7f9 ff82 	bl	80019a4 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8007aa0:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8007aa2:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8007aa4:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8007aa6:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8007aa8:	f7f9 ff7c 	bl	80019a4 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8007aac:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 8007ab0:	b280      	uxth	r0, r0
 8007ab2:	bd10      	pop	{r4, pc}

08007ab4 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8007ab4:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8007ab6:	b2c4      	uxtb	r4, r0
 8007ab8:	2140      	movs	r1, #64	; 0x40
 8007aba:	4620      	mov	r0, r4
 8007abc:	f7f9 ff72 	bl	80019a4 <IOE_Read>
  
  if(state > 0)
 8007ac0:	0603      	lsls	r3, r0, #24
 8007ac2:	d40b      	bmi.n	8007adc <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8007ac4:	4620      	mov	r0, r4
 8007ac6:	2201      	movs	r2, #1
 8007ac8:	214b      	movs	r1, #75	; 0x4b
 8007aca:	f7f9 ff53 	bl	8001974 <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8007ace:	4620      	mov	r0, r4
 8007ad0:	2200      	movs	r2, #0
 8007ad2:	214b      	movs	r1, #75	; 0x4b
 8007ad4:	f7f9 ff4e 	bl	8001974 <IOE_Write>
  uint8_t ret = 0;
 8007ad8:	2000      	movs	r0, #0
  }
  
  return ret;
}
 8007ada:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8007adc:	214c      	movs	r1, #76	; 0x4c
 8007ade:	4620      	mov	r0, r4
 8007ae0:	f7f9 ff60 	bl	80019a4 <IOE_Read>
      ret = 1;
 8007ae4:	3800      	subs	r0, #0
 8007ae6:	bf18      	it	ne
 8007ae8:	2001      	movne	r0, #1
}
 8007aea:	bd10      	pop	{r4, pc}

08007aec <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 8007aec:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8007aee:	210b      	movs	r1, #11
 8007af0:	b2c0      	uxtb	r0, r0
 8007af2:	f7f9 ff57 	bl	80019a4 <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 8007af6:	f000 001f 	and.w	r0, r0, #31
 8007afa:	bd08      	pop	{r3, pc}

08007afc <stmpe811_TS_GetXY>:
{
 8007afc:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8007afe:	2304      	movs	r3, #4
{
 8007b00:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8007b02:	b2c4      	uxtb	r4, r0
{
 8007b04:	4615      	mov	r5, r2
 8007b06:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8007b08:	eb0d 0203 	add.w	r2, sp, r3
 8007b0c:	21d7      	movs	r1, #215	; 0xd7
 8007b0e:	4620      	mov	r0, r4
 8007b10:	f7f9 ff64 	bl	80019dc <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8007b14:	9b01      	ldr	r3, [sp, #4]
 8007b16:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8007b18:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8007b1a:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8007b1e:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8007b20:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8007b22:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8007b24:	2201      	movs	r2, #1
 8007b26:	214b      	movs	r1, #75	; 0x4b
 8007b28:	f7f9 ff24 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8007b2c:	2200      	movs	r2, #0
 8007b2e:	214b      	movs	r1, #75	; 0x4b
 8007b30:	4620      	mov	r0, r4
 8007b32:	f7f9 ff1f 	bl	8001974 <IOE_Write>
}
 8007b36:	b002      	add	sp, #8
 8007b38:	bd70      	pop	{r4, r5, r6, pc}
 8007b3a:	bf00      	nop

08007b3c <stmpe811_TS_Start>:
{
 8007b3c:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8007b3e:	b2c4      	uxtb	r4, r0
 8007b40:	2104      	movs	r1, #4
 8007b42:	4620      	mov	r0, r4
 8007b44:	f7f9 ff2e 	bl	80019a4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8007b48:	2104      	movs	r1, #4
 8007b4a:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8007b4e:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8007b50:	4620      	mov	r0, r4
 8007b52:	f7f9 ff0f 	bl	8001974 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8007b56:	2117      	movs	r1, #23
 8007b58:	4620      	mov	r0, r4
 8007b5a:	f7f9 ff23 	bl	80019a4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8007b5e:	2117      	movs	r1, #23
 8007b60:	f000 020f 	and.w	r2, r0, #15
 8007b64:	4620      	mov	r0, r4
 8007b66:	f7f9 ff05 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8007b6a:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8007b6e:	4620      	mov	r0, r4
 8007b70:	2104      	movs	r1, #4
 8007b72:	f7f9 feff 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8007b76:	2249      	movs	r2, #73	; 0x49
 8007b78:	2120      	movs	r1, #32
 8007b7a:	4620      	mov	r0, r4
 8007b7c:	f7f9 fefa 	bl	8001974 <IOE_Write>
  IOE_Delay(2); 
 8007b80:	2002      	movs	r0, #2
 8007b82:	f7f9 ff43 	bl	8001a0c <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8007b86:	4620      	mov	r0, r4
 8007b88:	2201      	movs	r2, #1
 8007b8a:	2121      	movs	r1, #33	; 0x21
 8007b8c:	f7f9 fef2 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8007b90:	4620      	mov	r0, r4
 8007b92:	229a      	movs	r2, #154	; 0x9a
 8007b94:	2141      	movs	r1, #65	; 0x41
 8007b96:	f7f9 feed 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8007b9a:	4620      	mov	r0, r4
 8007b9c:	2201      	movs	r2, #1
 8007b9e:	214a      	movs	r1, #74	; 0x4a
 8007ba0:	f7f9 fee8 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8007ba4:	4620      	mov	r0, r4
 8007ba6:	2201      	movs	r2, #1
 8007ba8:	214b      	movs	r1, #75	; 0x4b
 8007baa:	f7f9 fee3 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8007bae:	4620      	mov	r0, r4
 8007bb0:	2200      	movs	r2, #0
 8007bb2:	214b      	movs	r1, #75	; 0x4b
 8007bb4:	f7f9 fede 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8007bb8:	4620      	mov	r0, r4
 8007bba:	2201      	movs	r2, #1
 8007bbc:	2156      	movs	r1, #86	; 0x56
 8007bbe:	f7f9 fed9 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8007bc2:	4620      	mov	r0, r4
 8007bc4:	2201      	movs	r2, #1
 8007bc6:	2158      	movs	r1, #88	; 0x58
 8007bc8:	f7f9 fed4 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8007bcc:	4620      	mov	r0, r4
 8007bce:	2201      	movs	r2, #1
 8007bd0:	2140      	movs	r1, #64	; 0x40
 8007bd2:	f7f9 fecf 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8007bd6:	4620      	mov	r0, r4
 8007bd8:	22ff      	movs	r2, #255	; 0xff
 8007bda:	210b      	movs	r1, #11
 8007bdc:	f7f9 feca 	bl	8001974 <IOE_Write>
}
 8007be0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 8007be4:	2002      	movs	r0, #2
 8007be6:	f7f9 bf11 	b.w	8001a0c <IOE_Delay>
 8007bea:	bf00      	nop

08007bec <stmpe811_TS_DisableIT>:
{
 8007bec:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8007bee:	b2c4      	uxtb	r4, r0
 8007bf0:	2109      	movs	r1, #9
 8007bf2:	4620      	mov	r0, r4
 8007bf4:	f7f9 fed6 	bl	80019a4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8007bf8:	2109      	movs	r1, #9
 8007bfa:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8007bfe:	4620      	mov	r0, r4
 8007c00:	f7f9 feb8 	bl	8001974 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8007c04:	210a      	movs	r1, #10
 8007c06:	4620      	mov	r0, r4
 8007c08:	f7f9 fecc 	bl	80019a4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8007c0c:	210a      	movs	r1, #10
 8007c0e:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 8007c12:	4620      	mov	r0, r4
}
 8007c14:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8007c18:	f7f9 beac 	b.w	8001974 <IOE_Write>

08007c1c <stmpe811_TS_EnableIT>:
{
 8007c1c:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8007c1e:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 8007c20:	f7f9 fea6 	bl	8001970 <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8007c24:	210a      	movs	r1, #10
 8007c26:	4620      	mov	r0, r4
 8007c28:	f7f9 febc 	bl	80019a4 <IOE_Read>
  tmp |= Source; 
 8007c2c:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8007c30:	b2c2      	uxtb	r2, r0
 8007c32:	210a      	movs	r1, #10
 8007c34:	4620      	mov	r0, r4
 8007c36:	f7f9 fe9d 	bl	8001974 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8007c3a:	2109      	movs	r1, #9
 8007c3c:	4620      	mov	r0, r4
 8007c3e:	f7f9 feb1 	bl	80019a4 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8007c42:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8007c46:	b2c2      	uxtb	r2, r0
 8007c48:	2109      	movs	r1, #9
 8007c4a:	4620      	mov	r0, r4
}
 8007c4c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8007c50:	f7f9 be90 	b.w	8001974 <IOE_Write>

08007c54 <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8007c54:	4a10      	ldr	r2, [pc, #64]	; (8007c98 <stmpe811_Init+0x44>)
 8007c56:	7813      	ldrb	r3, [r2, #0]
 8007c58:	4298      	cmp	r0, r3
 8007c5a:	d004      	beq.n	8007c66 <stmpe811_Init+0x12>
 8007c5c:	7851      	ldrb	r1, [r2, #1]
 8007c5e:	4288      	cmp	r0, r1
 8007c60:	d001      	beq.n	8007c66 <stmpe811_Init+0x12>
 8007c62:	b113      	cbz	r3, 8007c6a <stmpe811_Init+0x16>
 8007c64:	b101      	cbz	r1, 8007c68 <stmpe811_Init+0x14>
 8007c66:	4770      	bx	lr
 8007c68:	2301      	movs	r3, #1
{
 8007c6a:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 8007c6c:	b2c4      	uxtb	r4, r0
 8007c6e:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 8007c70:	f7f9 fe7c 	bl	800196c <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8007c74:	2202      	movs	r2, #2
 8007c76:	2103      	movs	r1, #3
 8007c78:	4620      	mov	r0, r4
 8007c7a:	f7f9 fe7b 	bl	8001974 <IOE_Write>
  IOE_Delay(10); 
 8007c7e:	200a      	movs	r0, #10
 8007c80:	f7f9 fec4 	bl	8001a0c <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8007c84:	4620      	mov	r0, r4
 8007c86:	2200      	movs	r2, #0
 8007c88:	2103      	movs	r1, #3
 8007c8a:	f7f9 fe73 	bl	8001974 <IOE_Write>
}
 8007c8e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8007c92:	2002      	movs	r0, #2
 8007c94:	f7f9 beba 	b.w	8001a0c <IOE_Delay>
 8007c98:	200029bc 	.word	0x200029bc

08007c9c <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8007c9c:	4b05      	ldr	r3, [pc, #20]	; (8007cb4 <SystemInit+0x18>)
 8007c9e:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8007ca2:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8007ca6:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8007caa:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8007cae:	6099      	str	r1, [r3, #8]
#endif
}
 8007cb0:	4770      	bx	lr
 8007cb2:	bf00      	nop
 8007cb4:	e000ed00 	.word	0xe000ed00

08007cb8 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8007cb8:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8007cba:	4b0b      	ldr	r3, [pc, #44]	; (8007ce8 <HAL_Init+0x30>)
 8007cbc:	681a      	ldr	r2, [r3, #0]
 8007cbe:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8007cc2:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8007cc4:	681a      	ldr	r2, [r3, #0]
 8007cc6:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8007cca:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8007ccc:	681a      	ldr	r2, [r3, #0]
 8007cce:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8007cd2:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8007cd4:	2003      	movs	r0, #3
 8007cd6:	f000 f82d 	bl	8007d34 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8007cda:	2000      	movs	r0, #0
 8007cdc:	f7fa f9c8 	bl	8002070 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8007ce0:	f7f9 ff46 	bl	8001b70 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8007ce4:	2000      	movs	r0, #0
 8007ce6:	bd08      	pop	{r3, pc}
 8007ce8:	40023c00 	.word	0x40023c00

08007cec <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8007cec:	4a03      	ldr	r2, [pc, #12]	; (8007cfc <HAL_IncTick+0x10>)
 8007cee:	4b04      	ldr	r3, [pc, #16]	; (8007d00 <HAL_IncTick+0x14>)
 8007cf0:	6811      	ldr	r1, [r2, #0]
 8007cf2:	781b      	ldrb	r3, [r3, #0]
 8007cf4:	440b      	add	r3, r1
 8007cf6:	6013      	str	r3, [r2, #0]
}
 8007cf8:	4770      	bx	lr
 8007cfa:	bf00      	nop
 8007cfc:	200029c0 	.word	0x200029c0
 8007d00:	2000007c 	.word	0x2000007c

08007d04 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8007d04:	4b01      	ldr	r3, [pc, #4]	; (8007d0c <HAL_GetTick+0x8>)
 8007d06:	6818      	ldr	r0, [r3, #0]
}
 8007d08:	4770      	bx	lr
 8007d0a:	bf00      	nop
 8007d0c:	200029c0 	.word	0x200029c0

08007d10 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8007d10:	b538      	push	{r3, r4, r5, lr}
 8007d12:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8007d14:	f7ff fff6 	bl	8007d04 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8007d18:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 8007d1a:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 8007d1c:	d002      	beq.n	8007d24 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 8007d1e:	4b04      	ldr	r3, [pc, #16]	; (8007d30 <HAL_Delay+0x20>)
 8007d20:	781b      	ldrb	r3, [r3, #0]
 8007d22:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8007d24:	f7ff ffee 	bl	8007d04 <HAL_GetTick>
 8007d28:	1b43      	subs	r3, r0, r5
 8007d2a:	42a3      	cmp	r3, r4
 8007d2c:	d3fa      	bcc.n	8007d24 <HAL_Delay+0x14>
  {
  }
}
 8007d2e:	bd38      	pop	{r3, r4, r5, pc}
 8007d30:	2000007c 	.word	0x2000007c

08007d34 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8007d34:	4907      	ldr	r1, [pc, #28]	; (8007d54 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8007d36:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8007d38:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8007d3a:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8007d3e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8007d42:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8007d44:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8007d46:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8007d4a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8007d4e:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8007d50:	4770      	bx	lr
 8007d52:	bf00      	nop
 8007d54:	e000ed00 	.word	0xe000ed00

08007d58 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8007d58:	4b1c      	ldr	r3, [pc, #112]	; (8007dcc <HAL_NVIC_SetPriority+0x74>)
 8007d5a:	68db      	ldr	r3, [r3, #12]
 8007d5c:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8007d60:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8007d62:	f1c3 0e07 	rsb	lr, r3, #7
 8007d66:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8007d6a:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8007d6e:	bf28      	it	cs
 8007d70:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8007d74:	f1bc 0f06 	cmp.w	ip, #6
 8007d78:	d91b      	bls.n	8007db2 <HAL_NVIC_SetPriority+0x5a>
 8007d7a:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8007d7c:	f04f 3cff 	mov.w	ip, #4294967295
 8007d80:	fa0c fc03 	lsl.w	ip, ip, r3
 8007d84:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8007d88:	f04f 3cff 	mov.w	ip, #4294967295
 8007d8c:	fa0c fc0e 	lsl.w	ip, ip, lr
 8007d90:	ea21 010c 	bic.w	r1, r1, ip
 8007d94:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 8007d96:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8007d98:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 8007d9c:	db0c      	blt.n	8007db8 <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007d9e:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8007da2:	0109      	lsls	r1, r1, #4
 8007da4:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 8007da8:	b2c9      	uxtb	r1, r1
 8007daa:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8007dae:	f85d fb04 	ldr.w	pc, [sp], #4
 8007db2:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8007db4:	4613      	mov	r3, r2
 8007db6:	e7e7      	b.n	8007d88 <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007db8:	4b05      	ldr	r3, [pc, #20]	; (8007dd0 <HAL_NVIC_SetPriority+0x78>)
 8007dba:	f000 000f 	and.w	r0, r0, #15
 8007dbe:	0109      	lsls	r1, r1, #4
 8007dc0:	4403      	add	r3, r0
 8007dc2:	b2c9      	uxtb	r1, r1
 8007dc4:	7619      	strb	r1, [r3, #24]
 8007dc6:	f85d fb04 	ldr.w	pc, [sp], #4
 8007dca:	bf00      	nop
 8007dcc:	e000ed00 	.word	0xe000ed00
 8007dd0:	e000ecfc 	.word	0xe000ecfc

08007dd4 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8007dd4:	2800      	cmp	r0, #0
 8007dd6:	db07      	blt.n	8007de8 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8007dd8:	0941      	lsrs	r1, r0, #5
 8007dda:	4a04      	ldr	r2, [pc, #16]	; (8007dec <HAL_NVIC_EnableIRQ+0x18>)
 8007ddc:	f000 001f 	and.w	r0, r0, #31
 8007de0:	2301      	movs	r3, #1
 8007de2:	4083      	lsls	r3, r0
 8007de4:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8007de8:	4770      	bx	lr
 8007dea:	bf00      	nop
 8007dec:	e000e100 	.word	0xe000e100

08007df0 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8007df0:	b180      	cbz	r0, 8007e14 <HAL_CRC_Init+0x24>
{
 8007df2:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8007df4:	7943      	ldrb	r3, [r0, #5]
 8007df6:	4604      	mov	r4, r0
 8007df8:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007dfc:	b11b      	cbz	r3, 8007e06 <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8007dfe:	2301      	movs	r3, #1
 8007e00:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8007e02:	2000      	movs	r0, #0
}
 8007e04:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 8007e06:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 8007e08:	f7f9 fed2 	bl	8001bb0 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 8007e0c:	2301      	movs	r3, #1
 8007e0e:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 8007e10:	2000      	movs	r0, #0
}
 8007e12:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8007e14:	2001      	movs	r0, #1
}
 8007e16:	4770      	bx	lr

08007e18 <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8007e18:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8007e1c:	2b02      	cmp	r3, #2
 8007e1e:	d003      	beq.n	8007e28 <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8007e20:	2380      	movs	r3, #128	; 0x80
 8007e22:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 8007e24:	2001      	movs	r0, #1
 8007e26:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 8007e28:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 8007e2a:	2305      	movs	r3, #5
 8007e2c:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 8007e30:	6813      	ldr	r3, [r2, #0]
 8007e32:	f023 0301 	bic.w	r3, r3, #1
  }

  return HAL_OK;
 8007e36:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 8007e38:	6013      	str	r3, [r2, #0]
}
 8007e3a:	4770      	bx	lr

08007e3c <HAL_DMA_GetState>:
  *               the configuration information for the specified DMA Stream.
  * @retval HAL state
  */
HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
{
  return hdma->State;
 8007e3c:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 8007e40:	4770      	bx	lr
 8007e42:	bf00      	nop

08007e44 <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8007e44:	b348      	cbz	r0, 8007e9a <HAL_DMA2D_Init+0x56>
{
 8007e46:	b510      	push	{r4, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8007e48:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8007e4c:	4604      	mov	r4, r0
 8007e4e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007e52:	b1eb      	cbz	r3, 8007e90 <HAL_DMA2D_Init+0x4c>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8007e54:	6822      	ldr	r2, [r4, #0]
 8007e56:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8007e58:	2302      	movs	r3, #2
 8007e5a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8007e5e:	6813      	ldr	r3, [r2, #0]
 8007e60:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8007e64:	430b      	orrs	r3, r1
 8007e66:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8007e68:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8007e6a:	68a1      	ldr	r1, [r4, #8]
 8007e6c:	f023 0307 	bic.w	r3, r3, #7
 8007e70:	430b      	orrs	r3, r1
 8007e72:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8007e74:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8007e76:	68e1      	ldr	r1, [r4, #12]
 8007e78:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8007e7c:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8007e80:	430b      	orrs	r3, r1
 8007e82:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8007e84:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8007e86:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8007e88:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8007e8a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 8007e8e:	bd10      	pop	{r4, pc}
    hdma2d->Lock = HAL_UNLOCKED;
 8007e90:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    HAL_DMA2D_MspInit(hdma2d);
 8007e94:	f7f9 fea6 	bl	8001be4 <HAL_DMA2D_MspInit>
 8007e98:	e7dc      	b.n	8007e54 <HAL_DMA2D_Init+0x10>
    return HAL_ERROR;
 8007e9a:	2001      	movs	r0, #1
}
 8007e9c:	4770      	bx	lr
 8007e9e:	bf00      	nop

08007ea0 <HAL_DMA2D_LineEventCallback>:
 8007ea0:	4770      	bx	lr
 8007ea2:	bf00      	nop

08007ea4 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8007ea4:	4770      	bx	lr
 8007ea6:	bf00      	nop

08007ea8 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8007ea8:	6803      	ldr	r3, [r0, #0]
{
 8007eaa:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8007eac:	685d      	ldr	r5, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8007eae:	681e      	ldr	r6, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8007eb0:	07ea      	lsls	r2, r5, #31
{
 8007eb2:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8007eb4:	d501      	bpl.n	8007eba <HAL_DMA2D_IRQHandler+0x12>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8007eb6:	05f1      	lsls	r1, r6, #23
 8007eb8:	d457      	bmi.n	8007f6a <HAL_DMA2D_IRQHandler+0xc2>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8007eba:	06aa      	lsls	r2, r5, #26
 8007ebc:	d501      	bpl.n	8007ec2 <HAL_DMA2D_IRQHandler+0x1a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8007ebe:	04b3      	lsls	r3, r6, #18
 8007ec0:	d43c      	bmi.n	8007f3c <HAL_DMA2D_IRQHandler+0x94>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8007ec2:	0728      	lsls	r0, r5, #28
 8007ec4:	d501      	bpl.n	8007eca <HAL_DMA2D_IRQHandler+0x22>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8007ec6:	0531      	lsls	r1, r6, #20
 8007ec8:	d421      	bmi.n	8007f0e <HAL_DMA2D_IRQHandler+0x66>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8007eca:	076a      	lsls	r2, r5, #29
 8007ecc:	d501      	bpl.n	8007ed2 <HAL_DMA2D_IRQHandler+0x2a>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8007ece:	0573      	lsls	r3, r6, #21
 8007ed0:	d473      	bmi.n	8007fba <HAL_DMA2D_IRQHandler+0x112>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8007ed2:	07a8      	lsls	r0, r5, #30
 8007ed4:	d501      	bpl.n	8007eda <HAL_DMA2D_IRQHandler+0x32>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8007ed6:	05b1      	lsls	r1, r6, #22
 8007ed8:	d404      	bmi.n	8007ee4 <HAL_DMA2D_IRQHandler+0x3c>
        hdma2d->XferCpltCallback(hdma2d);
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8007eda:	06ea      	lsls	r2, r5, #27
 8007edc:	d501      	bpl.n	8007ee2 <HAL_DMA2D_IRQHandler+0x3a>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8007ede:	04f3      	lsls	r3, r6, #19
 8007ee0:	d458      	bmi.n	8007f94 <HAL_DMA2D_IRQHandler+0xec>
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 8007ee2:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8007ee4:	6823      	ldr	r3, [r4, #0]
 8007ee6:	681a      	ldr	r2, [r3, #0]
 8007ee8:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8007eec:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8007eee:	2202      	movs	r2, #2
 8007ef0:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8007ef2:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8007ef4:	63e2      	str	r2, [r4, #60]	; 0x3c
      if (hdma2d->XferCpltCallback != NULL)
 8007ef6:	6923      	ldr	r3, [r4, #16]
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8007ef8:	2201      	movs	r2, #1
 8007efa:	f884 2039 	strb.w	r2, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8007efe:	2200      	movs	r2, #0
 8007f00:	f884 2038 	strb.w	r2, [r4, #56]	; 0x38
      if (hdma2d->XferCpltCallback != NULL)
 8007f04:	2b00      	cmp	r3, #0
 8007f06:	d0e8      	beq.n	8007eda <HAL_DMA2D_IRQHandler+0x32>
        hdma2d->XferCpltCallback(hdma2d);
 8007f08:	4620      	mov	r0, r4
 8007f0a:	4798      	blx	r3
 8007f0c:	e7e5      	b.n	8007eda <HAL_DMA2D_IRQHandler+0x32>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8007f0e:	6823      	ldr	r3, [r4, #0]
 8007f10:	681a      	ldr	r2, [r3, #0]
 8007f12:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8007f16:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8007f18:	2208      	movs	r2, #8
 8007f1a:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8007f1c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
      if (hdma2d->XferErrorCallback != NULL)
 8007f1e:	6962      	ldr	r2, [r4, #20]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8007f20:	f043 0304 	orr.w	r3, r3, #4
 8007f24:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8007f26:	2104      	movs	r1, #4
      __HAL_UNLOCK(hdma2d);
 8007f28:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8007f2a:	f884 1039 	strb.w	r1, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8007f2e:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8007f32:	2a00      	cmp	r2, #0
 8007f34:	d0c9      	beq.n	8007eca <HAL_DMA2D_IRQHandler+0x22>
        hdma2d->XferErrorCallback(hdma2d);
 8007f36:	4620      	mov	r0, r4
 8007f38:	4790      	blx	r2
 8007f3a:	e7c6      	b.n	8007eca <HAL_DMA2D_IRQHandler+0x22>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8007f3c:	6823      	ldr	r3, [r4, #0]
 8007f3e:	681a      	ldr	r2, [r3, #0]
 8007f40:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8007f44:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8007f46:	2220      	movs	r2, #32
 8007f48:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8007f4a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
      if (hdma2d->XferErrorCallback != NULL)
 8007f4c:	6962      	ldr	r2, [r4, #20]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8007f4e:	f043 0302 	orr.w	r3, r3, #2
 8007f52:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8007f54:	2104      	movs	r1, #4
      __HAL_UNLOCK(hdma2d);
 8007f56:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8007f58:	f884 1039 	strb.w	r1, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8007f5c:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8007f60:	2a00      	cmp	r2, #0
 8007f62:	d0ae      	beq.n	8007ec2 <HAL_DMA2D_IRQHandler+0x1a>
        hdma2d->XferErrorCallback(hdma2d);
 8007f64:	4620      	mov	r0, r4
 8007f66:	4790      	blx	r2
 8007f68:	e7ab      	b.n	8007ec2 <HAL_DMA2D_IRQHandler+0x1a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8007f6a:	681a      	ldr	r2, [r3, #0]
 8007f6c:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8007f70:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8007f72:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8007f74:	2101      	movs	r1, #1
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8007f76:	f042 0201 	orr.w	r2, r2, #1
 8007f7a:	63c2      	str	r2, [r0, #60]	; 0x3c
      if (hdma2d->XferErrorCallback != NULL)
 8007f7c:	6942      	ldr	r2, [r0, #20]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8007f7e:	6099      	str	r1, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8007f80:	2304      	movs	r3, #4
 8007f82:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8007f86:	2300      	movs	r3, #0
 8007f88:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8007f8c:	2a00      	cmp	r2, #0
 8007f8e:	d094      	beq.n	8007eba <HAL_DMA2D_IRQHandler+0x12>
        hdma2d->XferErrorCallback(hdma2d);
 8007f90:	4790      	blx	r2
 8007f92:	e792      	b.n	8007eba <HAL_DMA2D_IRQHandler+0x12>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8007f94:	6823      	ldr	r3, [r4, #0]
 8007f96:	681a      	ldr	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8007f98:	2010      	movs	r0, #16
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8007f9a:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8007f9e:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8007fa0:	6098      	str	r0, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8007fa2:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8007fa4:	63e2      	str	r2, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8007fa6:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma2d);
 8007fa8:	2300      	movs	r3, #0
 8007faa:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8007fae:	f884 1039 	strb.w	r1, [r4, #57]	; 0x39
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8007fb2:	4620      	mov	r0, r4
 8007fb4:	f7ff ff76 	bl	8007ea4 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 8007fb8:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8007fba:	6823      	ldr	r3, [r4, #0]
 8007fbc:	681a      	ldr	r2, [r3, #0]
 8007fbe:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007fc2:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8007fc4:	2204      	movs	r2, #4
 8007fc6:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 8007fc8:	4620      	mov	r0, r4
 8007fca:	f7ff ff69 	bl	8007ea0 <HAL_DMA2D_LineEventCallback>
 8007fce:	e780      	b.n	8007ed2 <HAL_DMA2D_IRQHandler+0x2a>

08007fd0 <HAL_DMA2D_ConfigLayer>:
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8007fd0:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8007fd4:	2b01      	cmp	r3, #1
 8007fd6:	d04d      	beq.n	8008074 <HAL_DMA2D_ConfigLayer+0xa4>
 8007fd8:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8007fda:	2302      	movs	r3, #2
{
 8007fdc:	b470      	push	{r4, r5, r6}

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8007fde:	eb00 1c01 	add.w	ip, r0, r1, lsl #4
  __HAL_LOCK(hdma2d);
 8007fe2:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8007fe6:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8007fea:	e9dc 2307 	ldrd	r2, r3, [ip, #28]
 8007fee:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8007ff2:	3a09      	subs	r2, #9
 8007ff4:	2a01      	cmp	r2, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8007ff6:	f8dc 2024 	ldr.w	r2, [ip, #36]	; 0x24
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8007ffa:	d91d      	bls.n	8008038 <HAL_DMA2D_ConfigLayer+0x68>
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8007ffc:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8008000:	b189      	cbz	r1, 8008026 <HAL_DMA2D_ConfigLayer+0x56>
  else
  {


    /* Write DMA2D FGPFCCR register */
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8008002:	6801      	ldr	r1, [r0, #0]
 8008004:	4a1c      	ldr	r2, [pc, #112]	; (8008078 <HAL_DMA2D_ConfigLayer+0xa8>)
 8008006:	69cd      	ldr	r5, [r1, #28]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8008008:	f8dc 4018 	ldr.w	r4, [ip, #24]
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800800c:	402a      	ands	r2, r5
 800800e:	431a      	orrs	r2, r3
 8008010:	61ca      	str	r2, [r1, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8008012:	610c      	str	r4, [r1, #16]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8008014:	2300      	movs	r3, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8008016:	2201      	movs	r2, #1
 8008018:	f880 2039 	strb.w	r2, [r0, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 800801c:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

  return HAL_OK;
}
 8008020:	bc70      	pop	{r4, r5, r6}
  return HAL_OK;
 8008022:	4618      	mov	r0, r3
}
 8008024:	4770      	bx	lr
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8008026:	6801      	ldr	r1, [r0, #0]
 8008028:	4a13      	ldr	r2, [pc, #76]	; (8008078 <HAL_DMA2D_ConfigLayer+0xa8>)
 800802a:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800802c:	4022      	ands	r2, r4
 800802e:	431a      	orrs	r2, r3
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8008030:	6984      	ldr	r4, [r0, #24]
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8008032:	624a      	str	r2, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8008034:	618c      	str	r4, [r1, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8008036:	e7ed      	b.n	8008014 <HAL_DMA2D_ConfigLayer+0x44>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8008038:	f002 447f 	and.w	r4, r2, #4278190080	; 0xff000000
 800803c:	4323      	orrs	r3, r4
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 800803e:	b961      	cbnz	r1, 800805a <HAL_DMA2D_ConfigLayer+0x8a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8008040:	6801      	ldr	r1, [r0, #0]
 8008042:	4a0d      	ldr	r2, [pc, #52]	; (8008078 <HAL_DMA2D_ConfigLayer+0xa8>)
 8008044:	6a4c      	ldr	r4, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8008046:	6985      	ldr	r5, [r0, #24]
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8008048:	4022      	ands	r2, r4
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 800804a:	6a44      	ldr	r4, [r0, #36]	; 0x24
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800804c:	431a      	orrs	r2, r3
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 800804e:	f024 447f 	bic.w	r4, r4, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8008052:	624a      	str	r2, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8008054:	618d      	str	r5, [r1, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8008056:	628c      	str	r4, [r1, #40]	; 0x28
 8008058:	e7dc      	b.n	8008014 <HAL_DMA2D_ConfigLayer+0x44>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800805a:	6804      	ldr	r4, [r0, #0]
 800805c:	4906      	ldr	r1, [pc, #24]	; (8008078 <HAL_DMA2D_ConfigLayer+0xa8>)
 800805e:	69e6      	ldr	r6, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8008060:	f8dc 5018 	ldr.w	r5, [ip, #24]
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8008064:	4031      	ands	r1, r6
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8008066:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800806a:	4319      	orrs	r1, r3
 800806c:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800806e:	6125      	str	r5, [r4, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8008070:	6222      	str	r2, [r4, #32]
 8008072:	e7cf      	b.n	8008014 <HAL_DMA2D_ConfigLayer+0x44>
  __HAL_LOCK(hdma2d);
 8008074:	2002      	movs	r0, #2
}
 8008076:	4770      	bx	lr
 8008078:	00fcfff0 	.word	0x00fcfff0

0800807c <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800807c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8008080:	2200      	movs	r2, #0
 8008082:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8008084:	f8df a260 	ldr.w	sl, [pc, #608]	; 80082e8 <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8008088:	4e90      	ldr	r6, [pc, #576]	; (80082cc <HAL_GPIO_Init+0x250>)
{
 800808a:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 800808c:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800808e:	4689      	mov	r9, r1
 8008090:	e005      	b.n	800809e <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8008092:	3301      	adds	r3, #1
 8008094:	2b10      	cmp	r3, #16
 8008096:	f102 0202 	add.w	r2, r2, #2
 800809a:	f000 8095 	beq.w	80081c8 <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 800809e:	2101      	movs	r1, #1
 80080a0:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80080a2:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 80080a6:	43a1      	bics	r1, r4
 80080a8:	d1f3      	bne.n	8008092 <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80080aa:	f8d9 c004 	ldr.w	ip, [r9, #4]
 80080ae:	f00c 0103 	and.w	r1, ip, #3
 80080b2:	1e4d      	subs	r5, r1, #1
 80080b4:	2d01      	cmp	r5, #1
 80080b6:	f240 808a 	bls.w	80081ce <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 80080ba:	2903      	cmp	r1, #3
 80080bc:	f040 80ca 	bne.w	8008254 <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80080c0:	4091      	lsls	r1, r2
 80080c2:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 80080c4:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80080c6:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80080c8:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 80080ca:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 80080ce:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 80080d0:	d0df      	beq.n	8008092 <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80080d2:	2100      	movs	r1, #0
 80080d4:	9103      	str	r1, [sp, #12]
 80080d6:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 80080da:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 80080de:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 80080e2:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 80080e6:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 80080ea:	9103      	str	r1, [sp, #12]
 80080ec:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 80080ee:	f023 0103 	bic.w	r1, r3, #3
 80080f2:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 80080f6:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 80080fa:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 80080fe:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8008100:	00bf      	lsls	r7, r7, #2
 8008102:	f04f 0e0f 	mov.w	lr, #15
 8008106:	fa0e fe07 	lsl.w	lr, lr, r7
 800810a:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800810e:	4d70      	ldr	r5, [pc, #448]	; (80082d0 <HAL_GPIO_Init+0x254>)
 8008110:	42a8      	cmp	r0, r5
 8008112:	d02e      	beq.n	8008172 <HAL_GPIO_Init+0xf6>
 8008114:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8008118:	42a8      	cmp	r0, r5
 800811a:	f000 809f 	beq.w	800825c <HAL_GPIO_Init+0x1e0>
 800811e:	4d6d      	ldr	r5, [pc, #436]	; (80082d4 <HAL_GPIO_Init+0x258>)
 8008120:	42a8      	cmp	r0, r5
 8008122:	f000 80a2 	beq.w	800826a <HAL_GPIO_Init+0x1ee>
 8008126:	4d6c      	ldr	r5, [pc, #432]	; (80082d8 <HAL_GPIO_Init+0x25c>)
 8008128:	42a8      	cmp	r0, r5
 800812a:	f000 80a5 	beq.w	8008278 <HAL_GPIO_Init+0x1fc>
 800812e:	4d6b      	ldr	r5, [pc, #428]	; (80082dc <HAL_GPIO_Init+0x260>)
 8008130:	42a8      	cmp	r0, r5
 8008132:	f000 80a8 	beq.w	8008286 <HAL_GPIO_Init+0x20a>
 8008136:	4d6a      	ldr	r5, [pc, #424]	; (80082e0 <HAL_GPIO_Init+0x264>)
 8008138:	42a8      	cmp	r0, r5
 800813a:	f000 80b2 	beq.w	80082a2 <HAL_GPIO_Init+0x226>
 800813e:	4d69      	ldr	r5, [pc, #420]	; (80082e4 <HAL_GPIO_Init+0x268>)
 8008140:	42a8      	cmp	r0, r5
 8008142:	f000 80b5 	beq.w	80082b0 <HAL_GPIO_Init+0x234>
 8008146:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 80082ec <HAL_GPIO_Init+0x270>
 800814a:	4570      	cmp	r0, lr
 800814c:	f000 80a2 	beq.w	8008294 <HAL_GPIO_Init+0x218>
 8008150:	f8df e19c 	ldr.w	lr, [pc, #412]	; 80082f0 <HAL_GPIO_Init+0x274>
 8008154:	4570      	cmp	r0, lr
 8008156:	f000 80b2 	beq.w	80082be <HAL_GPIO_Init+0x242>
 800815a:	f8df e198 	ldr.w	lr, [pc, #408]	; 80082f4 <HAL_GPIO_Init+0x278>
 800815e:	4570      	cmp	r0, lr
 8008160:	bf0c      	ite	eq
 8008162:	f04f 0e09 	moveq.w	lr, #9
 8008166:	f04f 0e0a 	movne.w	lr, #10
 800816a:	fa0e f707 	lsl.w	r7, lr, r7
 800816e:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 8008172:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 8008176:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 8008178:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800817c:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 8008180:	bf0c      	ite	eq
 8008182:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8008184:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 8008188:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 800818a:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 800818c:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 8008190:	bf0c      	ite	eq
 8008192:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8008194:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 8008198:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 800819a:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800819c:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 80081a0:	bf0c      	ite	eq
 80081a2:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 80081a4:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 80081a8:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80081aa:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 80081ac:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 80081b0:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 80081b4:	bf0c      	ite	eq
 80081b6:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 80081b8:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 80081bc:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 80081be:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80081c0:	f102 0202 	add.w	r2, r2, #2
 80081c4:	f47f af6b 	bne.w	800809e <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 80081c8:	b005      	add	sp, #20
 80081ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 80081ce:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 80081d2:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 80081d6:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80081da:	2503      	movs	r5, #3
 80081dc:	fa05 f802 	lsl.w	r8, r5, r2
 80081e0:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 80081e4:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 80081e8:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 80081ea:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80081ec:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 80081f0:	f3cc 1700 	ubfx	r7, ip, #4, #1
 80081f4:	409f      	lsls	r7, r3
 80081f6:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80081fa:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 80081fe:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8008200:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8008202:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8008206:	f8d9 7008 	ldr.w	r7, [r9, #8]
 800820a:	4097      	lsls	r7, r2
 800820c:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8008210:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 8008212:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8008214:	fa01 f102 	lsl.w	r1, r1, r2
 8008218:	f47f af54 	bne.w	80080c4 <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 800821c:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 8008220:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8008224:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8008228:	f8de 7020 	ldr.w	r7, [lr, #32]
 800822c:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800822e:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8008232:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8008236:	fa07 f708 	lsl.w	r7, r7, r8
 800823a:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800823c:	270f      	movs	r7, #15
 800823e:	fa07 f808 	lsl.w	r8, r7, r8
 8008242:	9f00      	ldr	r7, [sp, #0]
 8008244:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8008248:	9f01      	ldr	r7, [sp, #4]
 800824a:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 800824e:	f8ce 7020 	str.w	r7, [lr, #32]
 8008252:	e737      	b.n	80080c4 <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8008254:	2503      	movs	r5, #3
 8008256:	4095      	lsls	r5, r2
 8008258:	43ed      	mvns	r5, r5
 800825a:	e7d1      	b.n	8008200 <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800825c:	f04f 0e01 	mov.w	lr, #1
 8008260:	fa0e f707 	lsl.w	r7, lr, r7
 8008264:	ea48 0807 	orr.w	r8, r8, r7
 8008268:	e783      	b.n	8008172 <HAL_GPIO_Init+0xf6>
 800826a:	f04f 0e02 	mov.w	lr, #2
 800826e:	fa0e f707 	lsl.w	r7, lr, r7
 8008272:	ea48 0807 	orr.w	r8, r8, r7
 8008276:	e77c      	b.n	8008172 <HAL_GPIO_Init+0xf6>
 8008278:	f04f 0e03 	mov.w	lr, #3
 800827c:	fa0e f707 	lsl.w	r7, lr, r7
 8008280:	ea48 0807 	orr.w	r8, r8, r7
 8008284:	e775      	b.n	8008172 <HAL_GPIO_Init+0xf6>
 8008286:	f04f 0e04 	mov.w	lr, #4
 800828a:	fa0e f707 	lsl.w	r7, lr, r7
 800828e:	ea48 0807 	orr.w	r8, r8, r7
 8008292:	e76e      	b.n	8008172 <HAL_GPIO_Init+0xf6>
 8008294:	f04f 0e07 	mov.w	lr, #7
 8008298:	fa0e f707 	lsl.w	r7, lr, r7
 800829c:	ea48 0807 	orr.w	r8, r8, r7
 80082a0:	e767      	b.n	8008172 <HAL_GPIO_Init+0xf6>
 80082a2:	f04f 0e05 	mov.w	lr, #5
 80082a6:	fa0e f707 	lsl.w	r7, lr, r7
 80082aa:	ea48 0807 	orr.w	r8, r8, r7
 80082ae:	e760      	b.n	8008172 <HAL_GPIO_Init+0xf6>
 80082b0:	f04f 0e06 	mov.w	lr, #6
 80082b4:	fa0e f707 	lsl.w	r7, lr, r7
 80082b8:	ea48 0807 	orr.w	r8, r8, r7
 80082bc:	e759      	b.n	8008172 <HAL_GPIO_Init+0xf6>
 80082be:	f04f 0e08 	mov.w	lr, #8
 80082c2:	fa0e f707 	lsl.w	r7, lr, r7
 80082c6:	ea48 0807 	orr.w	r8, r8, r7
 80082ca:	e752      	b.n	8008172 <HAL_GPIO_Init+0xf6>
 80082cc:	40013c00 	.word	0x40013c00
 80082d0:	40020000 	.word	0x40020000
 80082d4:	40020800 	.word	0x40020800
 80082d8:	40020c00 	.word	0x40020c00
 80082dc:	40021000 	.word	0x40021000
 80082e0:	40021400 	.word	0x40021400
 80082e4:	40021800 	.word	0x40021800
 80082e8:	40023800 	.word	0x40023800
 80082ec:	40021c00 	.word	0x40021c00
 80082f0:	40022000 	.word	0x40022000
 80082f4:	40022400 	.word	0x40022400

080082f8 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 80082f8:	6903      	ldr	r3, [r0, #16]
 80082fa:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 80082fc:	bf14      	ite	ne
 80082fe:	2001      	movne	r0, #1
 8008300:	2000      	moveq	r0, #0
 8008302:	4770      	bx	lr

08008304 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8008304:	b902      	cbnz	r2, 8008308 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8008306:	0409      	lsls	r1, r1, #16
 8008308:	6181      	str	r1, [r0, #24]
  }
}
 800830a:	4770      	bx	lr

0800830c <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800830c:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800830e:	ea01 0203 	and.w	r2, r1, r3
 8008312:	ea21 0103 	bic.w	r1, r1, r3
 8008316:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800831a:	6181      	str	r1, [r0, #24]
}
 800831c:	4770      	bx	lr
 800831e:	bf00      	nop

08008320 <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 8008320:	4770      	bx	lr
 8008322:	bf00      	nop

08008324 <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 8008324:	4a04      	ldr	r2, [pc, #16]	; (8008338 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 8008326:	6951      	ldr	r1, [r2, #20]
 8008328:	4201      	tst	r1, r0
 800832a:	d100      	bne.n	800832e <HAL_GPIO_EXTI_IRQHandler+0xa>
 800832c:	4770      	bx	lr
{
 800832e:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 8008330:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 8008332:	f7ff fff5 	bl	8008320 <HAL_GPIO_EXTI_Callback>
}
 8008336:	bd08      	pop	{r3, pc}
 8008338:	40013c00 	.word	0x40013c00

0800833c <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 800833c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8008340:	6804      	ldr	r4, [r0, #0]
{
 8008342:	b083      	sub	sp, #12
 8008344:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8008346:	6823      	ldr	r3, [r4, #0]
{
 8008348:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 800834c:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8008350:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 8008354:	4606      	mov	r6, r0
 8008356:	468a      	mov	sl, r1
 8008358:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800835a:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800835c:	f1b9 3fff 	cmp.w	r9, #4294967295
 8008360:	d136      	bne.n	80083d0 <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8008362:	6965      	ldr	r5, [r4, #20]
 8008364:	07e8      	lsls	r0, r5, #31
 8008366:	d5fc      	bpl.n	8008362 <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8008368:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 800836c:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800836e:	f1b9 3fff 	cmp.w	r9, #4294967295
 8008372:	d003      	beq.n	800837c <I2C_RequestMemoryWrite+0x40>
 8008374:	e04f      	b.n	8008416 <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008376:	6961      	ldr	r1, [r4, #20]
 8008378:	054d      	lsls	r5, r1, #21
 800837a:	d45d      	bmi.n	8008438 <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800837c:	6961      	ldr	r1, [r4, #20]
 800837e:	078b      	lsls	r3, r1, #30
 8008380:	d5f9      	bpl.n	8008376 <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8008382:	2300      	movs	r3, #0
 8008384:	9301      	str	r3, [sp, #4]
 8008386:	6963      	ldr	r3, [r4, #20]
 8008388:	9301      	str	r3, [sp, #4]
 800838a:	69a3      	ldr	r3, [r4, #24]
 800838c:	9301      	str	r3, [sp, #4]
 800838e:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8008390:	f1b9 3fff 	cmp.w	r9, #4294967295
 8008394:	f040 8088 	bne.w	80084a8 <I2C_RequestMemoryWrite+0x16c>
 8008398:	6963      	ldr	r3, [r4, #20]
 800839a:	061a      	lsls	r2, r3, #24
 800839c:	d464      	bmi.n	8008468 <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800839e:	6963      	ldr	r3, [r4, #20]
 80083a0:	055b      	lsls	r3, r3, #21
 80083a2:	d5f9      	bpl.n	8008398 <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 80083a4:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80083a6:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 80083aa:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80083ac:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 80083ae:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 80083b0:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 80083b4:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80083b8:	6c33      	ldr	r3, [r6, #64]	; 0x40
 80083ba:	f043 0304 	orr.w	r3, r3, #4
 80083be:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80083c0:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80083c2:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80083c4:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 80083c6:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80083ca:	d066      	beq.n	800849a <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 80083cc:	2001      	movs	r0, #1
 80083ce:	e01f      	b.n	8008410 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80083d0:	6963      	ldr	r3, [r4, #20]
 80083d2:	07d9      	lsls	r1, r3, #31
 80083d4:	d4c8      	bmi.n	8008368 <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80083d6:	f7ff fc95 	bl	8007d04 <HAL_GetTick>
 80083da:	eba0 000b 	sub.w	r0, r0, fp
 80083de:	4581      	cmp	r9, r0
 80083e0:	d304      	bcc.n	80083ec <I2C_RequestMemoryWrite+0xb0>
 80083e2:	f1b9 0f00 	cmp.w	r9, #0
 80083e6:	d001      	beq.n	80083ec <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80083e8:	6834      	ldr	r4, [r6, #0]
 80083ea:	e7b7      	b.n	800835c <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80083ec:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80083ee:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80083f0:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80083f2:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80083f6:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80083fa:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80083fc:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 80083fe:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8008402:	f042 0220 	orr.w	r2, r2, #32
 8008406:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8008408:	680b      	ldr	r3, [r1, #0]
 800840a:	05dc      	lsls	r4, r3, #23
 800840c:	d435      	bmi.n	800847a <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 800840e:	2003      	movs	r0, #3
}
 8008410:	b003      	add	sp, #12
 8008412:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8008416:	6963      	ldr	r3, [r4, #20]
 8008418:	0798      	lsls	r0, r3, #30
 800841a:	d4b2      	bmi.n	8008382 <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800841c:	6963      	ldr	r3, [r4, #20]
 800841e:	055a      	lsls	r2, r3, #21
 8008420:	d40a      	bmi.n	8008438 <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008422:	f7ff fc6f 	bl	8007d04 <HAL_GetTick>
 8008426:	eba0 000b 	sub.w	r0, r0, fp
 800842a:	4581      	cmp	r9, r0
 800842c:	d34e      	bcc.n	80084cc <I2C_RequestMemoryWrite+0x190>
 800842e:	f1b9 0f00 	cmp.w	r9, #0
 8008432:	d04b      	beq.n	80084cc <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8008434:	6834      	ldr	r4, [r6, #0]
 8008436:	e79a      	b.n	800836e <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008438:	6823      	ldr	r3, [r4, #0]
 800843a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800843e:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8008440:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8008442:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 8008446:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8008448:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800844a:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800844c:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8008450:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8008454:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8008456:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800845a:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800845e:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8008460:	6433      	str	r3, [r6, #64]	; 0x40
}
 8008462:	b003      	add	sp, #12
 8008464:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8008468:	f1b8 0f01 	cmp.w	r8, #1
 800846c:	d109      	bne.n	8008482 <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800846e:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 8008470:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8008472:	6127      	str	r7, [r4, #16]
}
 8008474:	b003      	add	sp, #12
 8008476:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800847a:	f44f 7300 	mov.w	r3, #512	; 0x200
 800847e:	6433      	str	r3, [r6, #64]	; 0x40
 8008480:	e7c5      	b.n	800840e <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8008482:	0a3b      	lsrs	r3, r7, #8
 8008484:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8008486:	f1b9 3fff 	cmp.w	r9, #4294967295
 800848a:	d12e      	bne.n	80084ea <I2C_RequestMemoryWrite+0x1ae>
 800848c:	6963      	ldr	r3, [r4, #20]
 800848e:	0619      	lsls	r1, r3, #24
 8008490:	d4ed      	bmi.n	800846e <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008492:	6963      	ldr	r3, [r4, #20]
 8008494:	055a      	lsls	r2, r3, #21
 8008496:	d5f9      	bpl.n	800848c <I2C_RequestMemoryWrite+0x150>
 8008498:	e784      	b.n	80083a4 <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800849a:	6832      	ldr	r2, [r6, #0]
 800849c:	6813      	ldr	r3, [r2, #0]
 800849e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 80084a2:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80084a4:	6013      	str	r3, [r2, #0]
 80084a6:	e7b3      	b.n	8008410 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80084a8:	6963      	ldr	r3, [r4, #20]
 80084aa:	061d      	lsls	r5, r3, #24
 80084ac:	d4dc      	bmi.n	8008468 <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80084ae:	6963      	ldr	r3, [r4, #20]
 80084b0:	0559      	lsls	r1, r3, #21
 80084b2:	f53f af77 	bmi.w	80083a4 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80084b6:	f7ff fc25 	bl	8007d04 <HAL_GetTick>
 80084ba:	eba0 000b 	sub.w	r0, r0, fp
 80084be:	4581      	cmp	r9, r0
 80084c0:	d325      	bcc.n	800850e <I2C_RequestMemoryWrite+0x1d2>
 80084c2:	f1b9 0f00 	cmp.w	r9, #0
 80084c6:	d022      	beq.n	800850e <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80084c8:	6834      	ldr	r4, [r6, #0]
 80084ca:	e761      	b.n	8008390 <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80084cc:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80084ce:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80084d0:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80084d2:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80084d6:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80084da:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80084dc:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80084e0:	f043 0320 	orr.w	r3, r3, #32
 80084e4:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 80084e6:	2001      	movs	r0, #1
 80084e8:	e792      	b.n	8008410 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80084ea:	6963      	ldr	r3, [r4, #20]
 80084ec:	061b      	lsls	r3, r3, #24
 80084ee:	d4be      	bmi.n	800846e <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80084f0:	6963      	ldr	r3, [r4, #20]
 80084f2:	0558      	lsls	r0, r3, #21
 80084f4:	f53f af56 	bmi.w	80083a4 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80084f8:	f7ff fc04 	bl	8007d04 <HAL_GetTick>
 80084fc:	eba0 000b 	sub.w	r0, r0, fp
 8008500:	4581      	cmp	r9, r0
 8008502:	d304      	bcc.n	800850e <I2C_RequestMemoryWrite+0x1d2>
 8008504:	f1b9 0f00 	cmp.w	r9, #0
 8008508:	d001      	beq.n	800850e <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800850a:	6834      	ldr	r4, [r6, #0]
 800850c:	e7bb      	b.n	8008486 <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800850e:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8008510:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8008512:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8008514:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8008518:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800851c:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800851e:	4313      	orrs	r3, r2
 8008520:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 8008522:	e74d      	b.n	80083c0 <I2C_RequestMemoryWrite+0x84>

08008524 <I2C_RequestMemoryRead>:
{
 8008524:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8008528:	6804      	ldr	r4, [r0, #0]
{
 800852a:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800852c:	6823      	ldr	r3, [r4, #0]
 800852e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8008532:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8008534:	6823      	ldr	r3, [r4, #0]
{
 8008536:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8008538:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800853c:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8008540:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8008544:	6023      	str	r3, [r4, #0]
{
 8008546:	4606      	mov	r6, r0
 8008548:	468b      	mov	fp, r1
 800854a:	4617      	mov	r7, r2
 800854c:	f1ba 3fff 	cmp.w	sl, #4294967295
 8008550:	d13a      	bne.n	80085c8 <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8008552:	6965      	ldr	r5, [r4, #20]
 8008554:	07eb      	lsls	r3, r5, #31
 8008556:	d5fc      	bpl.n	8008552 <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8008558:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 800855c:	6123      	str	r3, [r4, #16]
 800855e:	fa5f fb8b 	uxtb.w	fp, fp
 8008562:	f1ba 3fff 	cmp.w	sl, #4294967295
 8008566:	d003      	beq.n	8008570 <I2C_RequestMemoryRead+0x4c>
 8008568:	e069      	b.n	800863e <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800856a:	6965      	ldr	r5, [r4, #20]
 800856c:	056a      	lsls	r2, r5, #21
 800856e:	d44e      	bmi.n	800860e <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8008570:	6965      	ldr	r5, [r4, #20]
 8008572:	07a9      	lsls	r1, r5, #30
 8008574:	d5f9      	bpl.n	800856a <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8008576:	2300      	movs	r3, #0
 8008578:	9301      	str	r3, [sp, #4]
 800857a:	6963      	ldr	r3, [r4, #20]
 800857c:	9301      	str	r3, [sp, #4]
 800857e:	69a3      	ldr	r3, [r4, #24]
 8008580:	9301      	str	r3, [sp, #4]
 8008582:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8008584:	f1ba 3fff 	cmp.w	sl, #4294967295
 8008588:	f040 80bd 	bne.w	8008706 <I2C_RequestMemoryRead+0x1e2>
 800858c:	6963      	ldr	r3, [r4, #20]
 800858e:	0618      	lsls	r0, r3, #24
 8008590:	d468      	bmi.n	8008664 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008592:	6963      	ldr	r3, [r4, #20]
 8008594:	0559      	lsls	r1, r3, #21
 8008596:	d5f9      	bpl.n	800858c <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 8008598:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800859a:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800859e:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80085a0:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 80085a2:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 80085a4:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 80085a8:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80085ac:	6c33      	ldr	r3, [r6, #64]	; 0x40
 80085ae:	f043 0304 	orr.w	r3, r3, #4
 80085b2:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80085b4:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 80085b6:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80085b8:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 80085ba:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80085be:	d070      	beq.n	80086a2 <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 80085c0:	2001      	movs	r0, #1
}
 80085c2:	b003      	add	sp, #12
 80085c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80085c8:	6963      	ldr	r3, [r4, #20]
 80085ca:	07dd      	lsls	r5, r3, #31
 80085cc:	d4c4      	bmi.n	8008558 <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80085ce:	f7ff fb99 	bl	8007d04 <HAL_GetTick>
 80085d2:	eba0 0009 	sub.w	r0, r0, r9
 80085d6:	4582      	cmp	sl, r0
 80085d8:	d304      	bcc.n	80085e4 <I2C_RequestMemoryRead+0xc0>
 80085da:	f1ba 0f00 	cmp.w	sl, #0
 80085de:	d001      	beq.n	80085e4 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80085e0:	6834      	ldr	r4, [r6, #0]
 80085e2:	e7b3      	b.n	800854c <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80085e4:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80085e6:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80085e8:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80085ea:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80085ee:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80085f2:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80085f4:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 80085f6:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80085fa:	f042 0220 	orr.w	r2, r2, #32
 80085fe:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8008600:	680b      	ldr	r3, [r1, #0]
 8008602:	05dc      	lsls	r4, r3, #23
 8008604:	d43d      	bmi.n	8008682 <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 8008606:	2003      	movs	r0, #3
}
 8008608:	b003      	add	sp, #12
 800860a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800860e:	6823      	ldr	r3, [r4, #0]
 8008610:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8008614:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8008616:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8008618:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800861c:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800861e:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8008620:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8008622:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8008626:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800862a:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800862c:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8008630:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 8008634:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8008636:	6433      	str	r3, [r6, #64]	; 0x40
}
 8008638:	b003      	add	sp, #12
 800863a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800863e:	6963      	ldr	r3, [r4, #20]
 8008640:	079b      	lsls	r3, r3, #30
 8008642:	d498      	bmi.n	8008576 <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008644:	6963      	ldr	r3, [r4, #20]
 8008646:	0558      	lsls	r0, r3, #21
 8008648:	d4e1      	bmi.n	800860e <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800864a:	f7ff fb5b 	bl	8007d04 <HAL_GetTick>
 800864e:	eba0 0009 	sub.w	r0, r0, r9
 8008652:	4582      	cmp	sl, r0
 8008654:	f0c0 808f 	bcc.w	8008776 <I2C_RequestMemoryRead+0x252>
 8008658:	f1ba 0f00 	cmp.w	sl, #0
 800865c:	f000 808b 	beq.w	8008776 <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8008660:	6834      	ldr	r4, [r6, #0]
 8008662:	e77e      	b.n	8008562 <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8008664:	f1b8 0f01 	cmp.w	r8, #1
 8008668:	d10f      	bne.n	800868a <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800866a:	b2ff      	uxtb	r7, r7
 800866c:	6127      	str	r7, [r4, #16]
 800866e:	f1ba 3fff 	cmp.w	sl, #4294967295
 8008672:	d16e      	bne.n	8008752 <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8008674:	6963      	ldr	r3, [r4, #20]
 8008676:	061b      	lsls	r3, r3, #24
 8008678:	d41a      	bmi.n	80086b0 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800867a:	6963      	ldr	r3, [r4, #20]
 800867c:	055f      	lsls	r7, r3, #21
 800867e:	d5f9      	bpl.n	8008674 <I2C_RequestMemoryRead+0x150>
 8008680:	e78a      	b.n	8008598 <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8008682:	f44f 7300 	mov.w	r3, #512	; 0x200
 8008686:	6433      	str	r3, [r6, #64]	; 0x40
 8008688:	e7bd      	b.n	8008606 <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800868a:	0a3b      	lsrs	r3, r7, #8
 800868c:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800868e:	f1ba 3fff 	cmp.w	sl, #4294967295
 8008692:	d17e      	bne.n	8008792 <I2C_RequestMemoryRead+0x26e>
 8008694:	6963      	ldr	r3, [r4, #20]
 8008696:	061d      	lsls	r5, r3, #24
 8008698:	d4e7      	bmi.n	800866a <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800869a:	6963      	ldr	r3, [r4, #20]
 800869c:	0558      	lsls	r0, r3, #21
 800869e:	d5f9      	bpl.n	8008694 <I2C_RequestMemoryRead+0x170>
 80086a0:	e77a      	b.n	8008598 <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80086a2:	6832      	ldr	r2, [r6, #0]
 80086a4:	6813      	ldr	r3, [r2, #0]
 80086a6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 80086aa:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80086ac:	6013      	str	r3, [r2, #0]
 80086ae:	e7ab      	b.n	8008608 <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80086b0:	6823      	ldr	r3, [r4, #0]
 80086b2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80086b6:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 80086b8:	f1ba 3fff 	cmp.w	sl, #4294967295
 80086bc:	d113      	bne.n	80086e6 <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80086be:	6963      	ldr	r3, [r4, #20]
 80086c0:	07d8      	lsls	r0, r3, #31
 80086c2:	d5fc      	bpl.n	80086be <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 80086c4:	f04b 0301 	orr.w	r3, fp, #1
 80086c8:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 80086ca:	f1ba 3fff 	cmp.w	sl, #4294967295
 80086ce:	d003      	beq.n	80086d8 <I2C_RequestMemoryRead+0x1b4>
 80086d0:	e02b      	b.n	800872a <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80086d2:	6963      	ldr	r3, [r4, #20]
 80086d4:	055b      	lsls	r3, r3, #21
 80086d6:	d49a      	bmi.n	800860e <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80086d8:	6963      	ldr	r3, [r4, #20]
 80086da:	43db      	mvns	r3, r3
 80086dc:	f013 0302 	ands.w	r3, r3, #2
 80086e0:	d1f7      	bne.n	80086d2 <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 80086e2:	4618      	mov	r0, r3
 80086e4:	e790      	b.n	8008608 <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80086e6:	6963      	ldr	r3, [r4, #20]
 80086e8:	07d9      	lsls	r1, r3, #31
 80086ea:	d4eb      	bmi.n	80086c4 <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80086ec:	f7ff fb0a 	bl	8007d04 <HAL_GetTick>
 80086f0:	eba0 0009 	sub.w	r0, r0, r9
 80086f4:	4582      	cmp	sl, r0
 80086f6:	f4ff af75 	bcc.w	80085e4 <I2C_RequestMemoryRead+0xc0>
 80086fa:	f1ba 0f00 	cmp.w	sl, #0
 80086fe:	f43f af71 	beq.w	80085e4 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8008702:	6834      	ldr	r4, [r6, #0]
 8008704:	e7d8      	b.n	80086b8 <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8008706:	6963      	ldr	r3, [r4, #20]
 8008708:	061a      	lsls	r2, r3, #24
 800870a:	d4ab      	bmi.n	8008664 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800870c:	6963      	ldr	r3, [r4, #20]
 800870e:	055d      	lsls	r5, r3, #21
 8008710:	f53f af42 	bmi.w	8008598 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008714:	f7ff faf6 	bl	8007d04 <HAL_GetTick>
 8008718:	eba0 0009 	sub.w	r0, r0, r9
 800871c:	4582      	cmp	sl, r0
 800871e:	d34b      	bcc.n	80087b8 <I2C_RequestMemoryRead+0x294>
 8008720:	f1ba 0f00 	cmp.w	sl, #0
 8008724:	d048      	beq.n	80087b8 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8008726:	6834      	ldr	r4, [r6, #0]
 8008728:	e72c      	b.n	8008584 <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800872a:	6963      	ldr	r3, [r4, #20]
 800872c:	43db      	mvns	r3, r3
 800872e:	f013 0302 	ands.w	r3, r3, #2
 8008732:	d0d6      	beq.n	80086e2 <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008734:	6963      	ldr	r3, [r4, #20]
 8008736:	055a      	lsls	r2, r3, #21
 8008738:	f53f af69 	bmi.w	800860e <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800873c:	f7ff fae2 	bl	8007d04 <HAL_GetTick>
 8008740:	eba0 0009 	sub.w	r0, r0, r9
 8008744:	4582      	cmp	sl, r0
 8008746:	d316      	bcc.n	8008776 <I2C_RequestMemoryRead+0x252>
 8008748:	f1ba 0f00 	cmp.w	sl, #0
 800874c:	d013      	beq.n	8008776 <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800874e:	6834      	ldr	r4, [r6, #0]
 8008750:	e7bb      	b.n	80086ca <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8008752:	6963      	ldr	r3, [r4, #20]
 8008754:	061d      	lsls	r5, r3, #24
 8008756:	d4ab      	bmi.n	80086b0 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008758:	6963      	ldr	r3, [r4, #20]
 800875a:	055a      	lsls	r2, r3, #21
 800875c:	f53f af1c 	bmi.w	8008598 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008760:	f7ff fad0 	bl	8007d04 <HAL_GetTick>
 8008764:	eba0 0009 	sub.w	r0, r0, r9
 8008768:	4582      	cmp	sl, r0
 800876a:	d325      	bcc.n	80087b8 <I2C_RequestMemoryRead+0x294>
 800876c:	f1ba 0f00 	cmp.w	sl, #0
 8008770:	d022      	beq.n	80087b8 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8008772:	6834      	ldr	r4, [r6, #0]
 8008774:	e77b      	b.n	800866e <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8008776:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8008778:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800877a:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800877c:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8008780:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8008784:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8008786:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800878a:	f043 0320 	orr.w	r3, r3, #32
 800878e:	6433      	str	r3, [r6, #64]	; 0x40
 8008790:	e716      	b.n	80085c0 <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8008792:	6963      	ldr	r3, [r4, #20]
 8008794:	0619      	lsls	r1, r3, #24
 8008796:	f53f af68 	bmi.w	800866a <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800879a:	6963      	ldr	r3, [r4, #20]
 800879c:	055b      	lsls	r3, r3, #21
 800879e:	f53f aefb 	bmi.w	8008598 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80087a2:	f7ff faaf 	bl	8007d04 <HAL_GetTick>
 80087a6:	eba0 0009 	sub.w	r0, r0, r9
 80087aa:	4582      	cmp	sl, r0
 80087ac:	d304      	bcc.n	80087b8 <I2C_RequestMemoryRead+0x294>
 80087ae:	f1ba 0f00 	cmp.w	sl, #0
 80087b2:	d001      	beq.n	80087b8 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80087b4:	6834      	ldr	r4, [r6, #0]
 80087b6:	e76a      	b.n	800868e <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80087b8:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80087ba:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80087bc:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80087be:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80087c2:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80087c6:	6c33      	ldr	r3, [r6, #64]	; 0x40
 80087c8:	4313      	orrs	r3, r2
 80087ca:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 80087cc:	e6f2      	b.n	80085b4 <I2C_RequestMemoryRead+0x90>
 80087ce:	bf00      	nop

080087d0 <HAL_I2C_Init>:
  if (hi2c == NULL)
 80087d0:	2800      	cmp	r0, #0
 80087d2:	f000 80b9 	beq.w	8008948 <HAL_I2C_Init+0x178>
{
 80087d6:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 80087d8:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80087dc:	4604      	mov	r4, r0
 80087de:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80087e2:	2b00      	cmp	r3, #0
 80087e4:	f000 8098 	beq.w	8008918 <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 80087e8:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 80087ea:	2224      	movs	r2, #36	; 0x24
 80087ec:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 80087f0:	681a      	ldr	r2, [r3, #0]
 80087f2:	f022 0201 	bic.w	r2, r2, #1
 80087f6:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 80087f8:	681a      	ldr	r2, [r3, #0]
 80087fa:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80087fe:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8008800:	681a      	ldr	r2, [r3, #0]
 8008802:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8008806:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8008808:	f001 fe70 	bl	800a4ec <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800880c:	6865      	ldr	r5, [r4, #4]
 800880e:	4b4f      	ldr	r3, [pc, #316]	; (800894c <HAL_I2C_Init+0x17c>)
 8008810:	429d      	cmp	r5, r3
 8008812:	d84f      	bhi.n	80088b4 <HAL_I2C_Init+0xe4>
 8008814:	4b4e      	ldr	r3, [pc, #312]	; (8008950 <HAL_I2C_Init+0x180>)
 8008816:	4298      	cmp	r0, r3
 8008818:	d97c      	bls.n	8008914 <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 800881a:	4b4e      	ldr	r3, [pc, #312]	; (8008954 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800881c:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 800881e:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8008822:	1e43      	subs	r3, r0, #1
 8008824:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8008828:	6822      	ldr	r2, [r4, #0]
 800882a:	6851      	ldr	r1, [r2, #4]
 800882c:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8008830:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 8008834:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8008836:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 8008838:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800883c:	f10c 0c01 	add.w	ip, ip, #1
 8008840:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8008844:	ea41 010c 	orr.w	r1, r1, ip
 8008848:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800884a:	69d1      	ldr	r1, [r2, #28]
 800884c:	f640 70fc 	movw	r0, #4092	; 0xffc
 8008850:	3301      	adds	r3, #1
 8008852:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8008856:	4203      	tst	r3, r0
 8008858:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800885c:	d161      	bne.n	8008922 <HAL_I2C_Init+0x152>
 800885e:	2304      	movs	r3, #4
 8008860:	430b      	orrs	r3, r1
 8008862:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8008864:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8008868:	6811      	ldr	r1, [r2, #0]
 800886a:	4303      	orrs	r3, r0
 800886c:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8008870:	430b      	orrs	r3, r1
 8008872:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8008874:	6891      	ldr	r1, [r2, #8]
 8008876:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800887a:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 800887e:	4303      	orrs	r3, r0
 8008880:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8008884:	430b      	orrs	r3, r1
 8008886:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8008888:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800888c:	68d1      	ldr	r1, [r2, #12]
 800888e:	4303      	orrs	r3, r0
 8008890:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8008894:	430b      	orrs	r3, r1
 8008896:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8008898:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800889a:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 800889c:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 80088a0:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 80088a2:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80088a4:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 80088a6:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 80088aa:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 80088ac:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 80088b0:	4618      	mov	r0, r3
}
 80088b2:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 80088b4:	4b28      	ldr	r3, [pc, #160]	; (8008958 <HAL_I2C_Init+0x188>)
 80088b6:	4298      	cmp	r0, r3
 80088b8:	d92c      	bls.n	8008914 <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80088ba:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 80088bc:	4b25      	ldr	r3, [pc, #148]	; (8008954 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80088be:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80088c0:	4e26      	ldr	r6, [pc, #152]	; (800895c <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 80088c2:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80088c6:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 80088ca:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 80088ce:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 80088d0:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80088d4:	f44f 7196 	mov.w	r1, #300	; 0x12c
 80088d8:	fb01 f303 	mul.w	r3, r1, r3
 80088dc:	fba6 6303 	umull	r6, r3, r6, r3
 80088e0:	6a11      	ldr	r1, [r2, #32]
 80088e2:	099b      	lsrs	r3, r3, #6
 80088e4:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 80088e8:	3301      	adds	r3, #1
 80088ea:	430b      	orrs	r3, r1
 80088ec:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80088ee:	69d1      	ldr	r1, [r2, #28]
 80088f0:	68a3      	ldr	r3, [r4, #8]
 80088f2:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 80088f6:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 80088fa:	b9ab      	cbnz	r3, 8008928 <HAL_I2C_Init+0x158>
 80088fc:	1e43      	subs	r3, r0, #1
 80088fe:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8008902:	fbb3 f3f5 	udiv	r3, r3, r5
 8008906:	3301      	adds	r3, #1
 8008908:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800890c:	b1d3      	cbz	r3, 8008944 <HAL_I2C_Init+0x174>
 800890e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8008912:	e7a5      	b.n	8008860 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 8008914:	2001      	movs	r0, #1
}
 8008916:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 8008918:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 800891c:	f7f9 f982 	bl	8001c24 <HAL_I2C_MspInit>
 8008920:	e762      	b.n	80087e8 <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8008922:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8008926:	e79b      	b.n	8008860 <HAL_I2C_Init+0x90>
 8008928:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800892c:	1e43      	subs	r3, r0, #1
 800892e:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 8008932:	fbb3 f3f5 	udiv	r3, r3, r5
 8008936:	3301      	adds	r3, #1
 8008938:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800893c:	b113      	cbz	r3, 8008944 <HAL_I2C_Init+0x174>
 800893e:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8008942:	e78d      	b.n	8008860 <HAL_I2C_Init+0x90>
 8008944:	2301      	movs	r3, #1
 8008946:	e78b      	b.n	8008860 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 8008948:	2001      	movs	r0, #1
}
 800894a:	4770      	bx	lr
 800894c:	000186a0 	.word	0x000186a0
 8008950:	001e847f 	.word	0x001e847f
 8008954:	431bde83 	.word	0x431bde83
 8008958:	003d08ff 	.word	0x003d08ff
 800895c:	10624dd3 	.word	0x10624dd3

08008960 <HAL_I2C_Mem_Write>:
{
 8008960:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008964:	4604      	mov	r4, r0
 8008966:	b083      	sub	sp, #12
 8008968:	4699      	mov	r9, r3
 800896a:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 800896e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8008970:	460f      	mov	r7, r1
 8008972:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8008974:	f7ff f9c6 	bl	8007d04 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8008978:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800897c:	2b20      	cmp	r3, #32
 800897e:	d004      	beq.n	800898a <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 8008980:	2702      	movs	r7, #2
}
 8008982:	4638      	mov	r0, r7
 8008984:	b003      	add	sp, #12
 8008986:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800898a:	4605      	mov	r5, r0
 800898c:	e005      	b.n	800899a <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800898e:	f7ff f9b9 	bl	8007d04 <HAL_GetTick>
 8008992:	1b40      	subs	r0, r0, r5
 8008994:	2819      	cmp	r0, #25
 8008996:	f200 80a8 	bhi.w	8008aea <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800899a:	6820      	ldr	r0, [r4, #0]
 800899c:	6983      	ldr	r3, [r0, #24]
 800899e:	ea6f 0c03 	mvn.w	ip, r3
 80089a2:	f01c 0b02 	ands.w	fp, ip, #2
 80089a6:	d0f2      	beq.n	800898e <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 80089a8:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 80089ac:	2b01      	cmp	r3, #1
 80089ae:	d0e7      	beq.n	8008980 <HAL_I2C_Mem_Write+0x20>
 80089b0:	2301      	movs	r3, #1
 80089b2:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80089b6:	6803      	ldr	r3, [r0, #0]
 80089b8:	07db      	lsls	r3, r3, #31
 80089ba:	d572      	bpl.n	8008aa2 <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80089bc:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80089be:	6807      	ldr	r7, [r0, #0]
 80089c0:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 80089c4:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 80089c6:	980c      	ldr	r0, [sp, #48]	; 0x30
 80089c8:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 80089ca:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80089cc:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 80089d0:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80089d4:	2040      	movs	r0, #64	; 0x40
 80089d6:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80089da:	2000      	movs	r0, #0
 80089dc:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 80089de:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80089e2:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 80089e4:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80089e6:	4856      	ldr	r0, [pc, #344]	; (8008b40 <HAL_I2C_Mem_Write+0x1e0>)
 80089e8:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80089ea:	464b      	mov	r3, r9
 80089ec:	4642      	mov	r2, r8
 80089ee:	4620      	mov	r0, r4
 80089f0:	f7ff fca4 	bl	800833c <I2C_RequestMemoryWrite>
 80089f4:	4607      	mov	r7, r0
 80089f6:	bb00      	cbnz	r0, 8008a3a <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 80089f8:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80089fa:	2b00      	cmp	r3, #0
 80089fc:	f000 809e 	beq.w	8008b3c <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8008a00:	6823      	ldr	r3, [r4, #0]
 8008a02:	1c72      	adds	r2, r6, #1
 8008a04:	d159      	bne.n	8008aba <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8008a06:	695a      	ldr	r2, [r3, #20]
 8008a08:	0610      	lsls	r0, r2, #24
 8008a0a:	d41b      	bmi.n	8008a44 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008a0c:	695a      	ldr	r2, [r3, #20]
 8008a0e:	0551      	lsls	r1, r2, #21
 8008a10:	d5f9      	bpl.n	8008a06 <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 8008a12:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8008a14:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 8008a18:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8008a1a:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 8008a1c:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8008a1e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8008a22:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8008a26:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8008a28:	f043 0304 	orr.w	r3, r3, #4
 8008a2c:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8008a2e:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 8008a30:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8008a32:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 8008a34:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8008a38:	d038      	beq.n	8008aac <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 8008a3a:	2701      	movs	r7, #1
}
 8008a3c:	4638      	mov	r0, r7
 8008a3e:	b003      	add	sp, #12
 8008a40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8008a44:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 8008a48:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8008a4c:	4661      	mov	r1, ip
      hi2c->XferSize--;
 8008a4e:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8008a52:	f811 2b01 	ldrb.w	r2, [r1], #1
 8008a56:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 8008a58:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 8008a5a:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8008a5c:	3a01      	subs	r2, #1
 8008a5e:	b292      	uxth	r2, r2
 8008a60:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8008a62:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8008a64:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 8008a66:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8008a68:	0740      	lsls	r0, r0, #29
 8008a6a:	d517      	bpl.n	8008a9c <HAL_I2C_Mem_Write+0x13c>
 8008a6c:	b942      	cbnz	r2, 8008a80 <HAL_I2C_Mem_Write+0x120>
 8008a6e:	1c72      	adds	r2, r6, #1
 8008a70:	d156      	bne.n	8008b20 <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8008a72:	695a      	ldr	r2, [r3, #20]
 8008a74:	0750      	lsls	r0, r2, #29
 8008a76:	d446      	bmi.n	8008b06 <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008a78:	695a      	ldr	r2, [r3, #20]
 8008a7a:	0551      	lsls	r1, r2, #21
 8008a7c:	d5f9      	bpl.n	8008a72 <HAL_I2C_Mem_Write+0x112>
 8008a7e:	e7c8      	b.n	8008a12 <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8008a80:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8008a84:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 8008a86:	f10c 0102 	add.w	r1, ip, #2
 8008a8a:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8008a8c:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 8008a8e:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 8008a92:	3901      	subs	r1, #1
        hi2c->XferSize--;
 8008a94:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 8008a96:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 8008a98:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8008a9a:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8008a9c:	2a00      	cmp	r2, #0
 8008a9e:	d1b0      	bne.n	8008a02 <HAL_I2C_Mem_Write+0xa2>
 8008aa0:	e7e5      	b.n	8008a6e <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 8008aa2:	6803      	ldr	r3, [r0, #0]
 8008aa4:	f043 0301 	orr.w	r3, r3, #1
 8008aa8:	6003      	str	r3, [r0, #0]
 8008aaa:	e787      	b.n	80089bc <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008aac:	6822      	ldr	r2, [r4, #0]
 8008aae:	6813      	ldr	r3, [r2, #0]
 8008ab0:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 8008ab4:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008ab6:	6013      	str	r3, [r2, #0]
 8008ab8:	e763      	b.n	8008982 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8008aba:	695a      	ldr	r2, [r3, #20]
 8008abc:	0612      	lsls	r2, r2, #24
 8008abe:	d4c1      	bmi.n	8008a44 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008ac0:	695a      	ldr	r2, [r3, #20]
 8008ac2:	0551      	lsls	r1, r2, #21
 8008ac4:	d4a5      	bmi.n	8008a12 <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008ac6:	f7ff f91d 	bl	8007d04 <HAL_GetTick>
 8008aca:	1b40      	subs	r0, r0, r5
 8008acc:	4286      	cmp	r6, r0
 8008ace:	d301      	bcc.n	8008ad4 <HAL_I2C_Mem_Write+0x174>
 8008ad0:	2e00      	cmp	r6, #0
 8008ad2:	d195      	bne.n	8008a00 <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8008ad4:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8008ad6:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8008ad8:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8008ada:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8008ade:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8008ae2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8008ae4:	4313      	orrs	r3, r2
 8008ae6:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 8008ae8:	e7a1      	b.n	8008a2e <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 8008aea:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8008aec:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8008af0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8008af4:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8008af8:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8008afa:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8008afe:	f043 0320 	orr.w	r3, r3, #32
 8008b02:	6423      	str	r3, [r4, #64]	; 0x40
 8008b04:	e73c      	b.n	8008980 <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008b06:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8008b08:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008b0a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 8008b0e:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008b10:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8008b12:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8008b16:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8008b1a:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 8008b1e:	e730      	b.n	8008982 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8008b20:	695a      	ldr	r2, [r3, #20]
 8008b22:	0752      	lsls	r2, r2, #29
 8008b24:	d4ef      	bmi.n	8008b06 <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008b26:	695a      	ldr	r2, [r3, #20]
 8008b28:	0551      	lsls	r1, r2, #21
 8008b2a:	f53f af72 	bmi.w	8008a12 <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008b2e:	f7ff f8e9 	bl	8007d04 <HAL_GetTick>
 8008b32:	1b40      	subs	r0, r0, r5
 8008b34:	4286      	cmp	r6, r0
 8008b36:	d3cd      	bcc.n	8008ad4 <HAL_I2C_Mem_Write+0x174>
 8008b38:	2e00      	cmp	r6, #0
 8008b3a:	d0cb      	beq.n	8008ad4 <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8008b3c:	6823      	ldr	r3, [r4, #0]
 8008b3e:	e796      	b.n	8008a6e <HAL_I2C_Mem_Write+0x10e>
 8008b40:	ffff0000 	.word	0xffff0000

08008b44 <HAL_I2C_Mem_Read>:
{
 8008b44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008b48:	4604      	mov	r4, r0
 8008b4a:	b087      	sub	sp, #28
 8008b4c:	4699      	mov	r9, r3
 8008b4e:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 8008b52:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8008b54:	460f      	mov	r7, r1
 8008b56:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8008b58:	f7ff f8d4 	bl	8007d04 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8008b5c:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8008b60:	2b20      	cmp	r3, #32
 8008b62:	d004      	beq.n	8008b6e <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 8008b64:	2702      	movs	r7, #2
}
 8008b66:	4638      	mov	r0, r7
 8008b68:	b007      	add	sp, #28
 8008b6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008b6e:	4606      	mov	r6, r0
 8008b70:	e005      	b.n	8008b7e <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008b72:	f7ff f8c7 	bl	8007d04 <HAL_GetTick>
 8008b76:	1b80      	subs	r0, r0, r6
 8008b78:	2819      	cmp	r0, #25
 8008b7a:	f200 80d2 	bhi.w	8008d22 <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8008b7e:	f8d4 c000 	ldr.w	ip, [r4]
 8008b82:	f8dc 0018 	ldr.w	r0, [ip, #24]
 8008b86:	43c0      	mvns	r0, r0
 8008b88:	f010 0b02 	ands.w	fp, r0, #2
 8008b8c:	d0f1      	beq.n	8008b72 <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 8008b8e:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8008b92:	2b01      	cmp	r3, #1
 8008b94:	d0e6      	beq.n	8008b64 <HAL_I2C_Mem_Read+0x20>
 8008b96:	2301      	movs	r3, #1
 8008b98:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8008b9c:	f8dc 3000 	ldr.w	r3, [ip]
 8008ba0:	07d9      	lsls	r1, r3, #31
 8008ba2:	d537      	bpl.n	8008c14 <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8008ba4:	f8dc 0000 	ldr.w	r0, [ip]
 8008ba8:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 8008bac:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 8008bb0:	9810      	ldr	r0, [sp, #64]	; 0x40
 8008bb2:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8008bb4:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8008bb6:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8008bba:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8008bbe:	2040      	movs	r0, #64	; 0x40
 8008bc0:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8008bc4:	2000      	movs	r0, #0
 8008bc6:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 8008bc8:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8008bcc:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 8008bce:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8008bd0:	4893      	ldr	r0, [pc, #588]	; (8008e20 <HAL_I2C_Mem_Read+0x2dc>)
 8008bd2:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8008bd4:	4639      	mov	r1, r7
 8008bd6:	464b      	mov	r3, r9
 8008bd8:	4642      	mov	r2, r8
 8008bda:	4620      	mov	r0, r4
 8008bdc:	f7ff fca2 	bl	8008524 <I2C_RequestMemoryRead>
 8008be0:	4607      	mov	r7, r0
 8008be2:	2800      	cmp	r0, #0
 8008be4:	f040 80ab 	bne.w	8008d3e <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 8008be8:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8008bea:	b9d2      	cbnz	r2, 8008c22 <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8008bec:	6823      	ldr	r3, [r4, #0]
 8008bee:	9002      	str	r0, [sp, #8]
 8008bf0:	695a      	ldr	r2, [r3, #20]
 8008bf2:	9202      	str	r2, [sp, #8]
 8008bf4:	699a      	ldr	r2, [r3, #24]
 8008bf6:	9202      	str	r2, [sp, #8]
 8008bf8:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008bfa:	681a      	ldr	r2, [r3, #0]
 8008bfc:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8008c00:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8008c02:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 8008c04:	2220      	movs	r2, #32
 8008c06:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8008c0a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8008c0e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8008c12:	e7a8      	b.n	8008b66 <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 8008c14:	f8dc 3000 	ldr.w	r3, [ip]
 8008c18:	f043 0301 	orr.w	r3, r3, #1
 8008c1c:	f8cc 3000 	str.w	r3, [ip]
 8008c20:	e7c0      	b.n	8008ba4 <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 8008c22:	2a01      	cmp	r2, #1
 8008c24:	f000 812c 	beq.w	8008e80 <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 8008c28:	2a02      	cmp	r2, #2
 8008c2a:	f000 80bd 	beq.w	8008da8 <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8008c2e:	6823      	ldr	r3, [r4, #0]
 8008c30:	9005      	str	r0, [sp, #20]
 8008c32:	6959      	ldr	r1, [r3, #20]
 8008c34:	9105      	str	r1, [sp, #20]
 8008c36:	6999      	ldr	r1, [r3, #24]
 8008c38:	9105      	str	r1, [sp, #20]
 8008c3a:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 8008c3c:	2a03      	cmp	r2, #3
 8008c3e:	d849      	bhi.n	8008cd4 <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 8008c40:	2a01      	cmp	r2, #1
 8008c42:	f000 80eb 	beq.w	8008e1c <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 8008c46:	2a02      	cmp	r2, #2
 8008c48:	f000 8089 	beq.w	8008d5e <HAL_I2C_Mem_Read+0x21a>
 8008c4c:	1c69      	adds	r1, r5, #1
 8008c4e:	f040 80bb 	bne.w	8008dc8 <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8008c52:	695a      	ldr	r2, [r3, #20]
 8008c54:	0752      	lsls	r2, r2, #29
 8008c56:	d5fc      	bpl.n	8008c52 <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8008c58:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008c5a:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8008c5c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8008c60:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008c62:	691b      	ldr	r3, [r3, #16]
 8008c64:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 8008c66:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 8008c68:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8008c6a:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8008c6c:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 8008c6e:	3101      	adds	r1, #1
          hi2c->XferSize--;
 8008c70:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 8008c72:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 8008c74:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8008c76:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8008c78:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 8008c7a:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8008c7c:	6822      	ldr	r2, [r4, #0]
 8008c7e:	f040 80af 	bne.w	8008de0 <HAL_I2C_Mem_Read+0x29c>
 8008c82:	6953      	ldr	r3, [r2, #20]
 8008c84:	075b      	lsls	r3, r3, #29
 8008c86:	d5fc      	bpl.n	8008c82 <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008c88:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008c8a:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008c8c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8008c90:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008c92:	6913      	ldr	r3, [r2, #16]
 8008c94:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 8008c96:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 8008c98:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 8008c9a:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008c9c:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 8008c9e:	3b01      	subs	r3, #1
 8008ca0:	b29b      	uxth	r3, r3
 8008ca2:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008ca4:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 8008ca6:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 8008ca8:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 8008cac:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 8008cae:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008cb2:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 8008cb4:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8008cb6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 8008cb8:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8008cba:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 8008cbc:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 8008cbe:	3101      	adds	r1, #1
          hi2c->XferSize--;
 8008cc0:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 8008cc2:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 8008cc4:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8008cc6:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8008cc8:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8008cca:	2a00      	cmp	r2, #0
 8008ccc:	d099      	beq.n	8008c02 <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 8008cce:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8008cd0:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 8008cd2:	d9b5      	bls.n	8008c40 <HAL_I2C_Mem_Read+0xfc>
 8008cd4:	b95d      	cbnz	r5, 8008cee <HAL_I2C_Mem_Read+0x1aa>
 8008cd6:	e0c5      	b.n	8008e64 <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8008cd8:	695a      	ldr	r2, [r3, #20]
 8008cda:	06d0      	lsls	r0, r2, #27
 8008cdc:	f100 80b2 	bmi.w	8008e44 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008ce0:	f7ff f810 	bl	8007d04 <HAL_GetTick>
 8008ce4:	1b80      	subs	r0, r0, r6
 8008ce6:	4285      	cmp	r5, r0
 8008ce8:	f0c0 8086 	bcc.w	8008df8 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8008cec:	6823      	ldr	r3, [r4, #0]
 8008cee:	695a      	ldr	r2, [r3, #20]
 8008cf0:	0652      	lsls	r2, r2, #25
 8008cf2:	d5f1      	bpl.n	8008cd8 <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008cf4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8008cf6:	691b      	ldr	r3, [r3, #16]
 8008cf8:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 8008cfa:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8008cfc:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 8008cfe:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 8008d00:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8008d02:	3b01      	subs	r3, #1
 8008d04:	b29b      	uxth	r3, r3
 8008d06:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8008d08:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 8008d0a:	3a01      	subs	r2, #1
 8008d0c:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 8008d0e:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8008d12:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 8008d14:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 8008d16:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8008d1a:	d5d6      	bpl.n	8008cca <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008d1c:	6903      	ldr	r3, [r0, #16]
 8008d1e:	704b      	strb	r3, [r1, #1]
 8008d20:	e036      	b.n	8008d90 <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 8008d22:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8008d24:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8008d28:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8008d2c:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8008d30:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8008d32:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8008d36:	f043 0320 	orr.w	r3, r3, #32
 8008d3a:	6423      	str	r3, [r4, #64]	; 0x40
 8008d3c:	e712      	b.n	8008b64 <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 8008d3e:	2701      	movs	r7, #1
}
 8008d40:	4638      	mov	r0, r7
 8008d42:	b007      	add	sp, #28
 8008d44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8008d48:	695a      	ldr	r2, [r3, #20]
 8008d4a:	0750      	lsls	r0, r2, #29
 8008d4c:	d40c      	bmi.n	8008d68 <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008d4e:	f7fe ffd9 	bl	8007d04 <HAL_GetTick>
 8008d52:	1b80      	subs	r0, r0, r6
 8008d54:	4285      	cmp	r5, r0
 8008d56:	d34f      	bcc.n	8008df8 <HAL_I2C_Mem_Read+0x2b4>
 8008d58:	2d00      	cmp	r5, #0
 8008d5a:	d04d      	beq.n	8008df8 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8008d5c:	6823      	ldr	r3, [r4, #0]
 8008d5e:	1c69      	adds	r1, r5, #1
 8008d60:	d1f2      	bne.n	8008d48 <HAL_I2C_Mem_Read+0x204>
 8008d62:	695a      	ldr	r2, [r3, #20]
 8008d64:	0752      	lsls	r2, r2, #29
 8008d66:	d5fc      	bpl.n	8008d62 <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008d68:	681a      	ldr	r2, [r3, #0]
 8008d6a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8008d6e:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008d70:	691a      	ldr	r2, [r3, #16]
 8008d72:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008d74:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 8008d76:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 8008d78:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 8008d7a:	3b01      	subs	r3, #1
 8008d7c:	b29b      	uxth	r3, r3
 8008d7e:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 8008d80:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8008d82:	3b01      	subs	r3, #1
 8008d84:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008d86:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 8008d88:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008d8a:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 8008d8c:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008d8e:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 8008d90:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8008d92:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 8008d94:	3301      	adds	r3, #1
 8008d96:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 8008d98:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 8008d9a:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 8008d9c:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 8008d9e:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 8008da0:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 8008da2:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8008da4:	8563      	strh	r3, [r4, #42]	; 0x2a
 8008da6:	e790      	b.n	8008cca <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8008da8:	6823      	ldr	r3, [r4, #0]
 8008daa:	6819      	ldr	r1, [r3, #0]
 8008dac:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8008db0:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8008db2:	6819      	ldr	r1, [r3, #0]
 8008db4:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 8008db8:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8008dba:	9004      	str	r0, [sp, #16]
 8008dbc:	6959      	ldr	r1, [r3, #20]
 8008dbe:	9104      	str	r1, [sp, #16]
 8008dc0:	6999      	ldr	r1, [r3, #24]
 8008dc2:	9104      	str	r1, [sp, #16]
 8008dc4:	9904      	ldr	r1, [sp, #16]
 8008dc6:	e739      	b.n	8008c3c <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8008dc8:	695a      	ldr	r2, [r3, #20]
 8008dca:	0750      	lsls	r0, r2, #29
 8008dcc:	f53f af44 	bmi.w	8008c58 <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008dd0:	f7fe ff98 	bl	8007d04 <HAL_GetTick>
 8008dd4:	1b80      	subs	r0, r0, r6
 8008dd6:	4285      	cmp	r5, r0
 8008dd8:	d30e      	bcc.n	8008df8 <HAL_I2C_Mem_Read+0x2b4>
 8008dda:	b16d      	cbz	r5, 8008df8 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8008ddc:	6823      	ldr	r3, [r4, #0]
 8008dde:	e735      	b.n	8008c4c <HAL_I2C_Mem_Read+0x108>
 8008de0:	6953      	ldr	r3, [r2, #20]
 8008de2:	0758      	lsls	r0, r3, #29
 8008de4:	f53f af50 	bmi.w	8008c88 <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008de8:	f7fe ff8c 	bl	8007d04 <HAL_GetTick>
 8008dec:	1b80      	subs	r0, r0, r6
 8008dee:	4285      	cmp	r5, r0
 8008df0:	d302      	bcc.n	8008df8 <HAL_I2C_Mem_Read+0x2b4>
 8008df2:	2d00      	cmp	r5, #0
 8008df4:	f47f af41 	bne.w	8008c7a <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8008df8:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8008dfa:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8008dfc:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8008dfe:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8008e02:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8008e06:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8008e08:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 8008e0c:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8008e0e:	f043 0320 	orr.w	r3, r3, #32
}
 8008e12:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8008e14:	6423      	str	r3, [r4, #64]	; 0x40
}
 8008e16:	b007      	add	sp, #28
 8008e18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008e1c:	b95d      	cbnz	r5, 8008e36 <HAL_I2C_Mem_Read+0x2f2>
 8008e1e:	e02b      	b.n	8008e78 <HAL_I2C_Mem_Read+0x334>
 8008e20:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8008e24:	695a      	ldr	r2, [r3, #20]
 8008e26:	06d2      	lsls	r2, r2, #27
 8008e28:	d40c      	bmi.n	8008e44 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008e2a:	f7fe ff6b 	bl	8007d04 <HAL_GetTick>
 8008e2e:	1b80      	subs	r0, r0, r6
 8008e30:	4285      	cmp	r5, r0
 8008e32:	d3e1      	bcc.n	8008df8 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8008e34:	6823      	ldr	r3, [r4, #0]
 8008e36:	695a      	ldr	r2, [r3, #20]
 8008e38:	0651      	lsls	r1, r2, #25
 8008e3a:	d5f3      	bpl.n	8008e24 <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008e3c:	691a      	ldr	r2, [r3, #16]
 8008e3e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008e40:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8008e42:	e7a5      	b.n	8008d90 <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 8008e44:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8008e46:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 8008e4a:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8008e4c:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8008e4e:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8008e50:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8008e54:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8008e58:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8008e5a:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8008e5c:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 8008e60:	2701      	movs	r7, #1
 8008e62:	e680      	b.n	8008b66 <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8008e64:	695a      	ldr	r2, [r3, #20]
 8008e66:	0652      	lsls	r2, r2, #25
 8008e68:	f53f af44 	bmi.w	8008cf4 <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8008e6c:	695a      	ldr	r2, [r3, #20]
 8008e6e:	06d1      	lsls	r1, r2, #27
 8008e70:	d4e8      	bmi.n	8008e44 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008e72:	f7fe ff47 	bl	8007d04 <HAL_GetTick>
 8008e76:	e7bf      	b.n	8008df8 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8008e78:	695a      	ldr	r2, [r3, #20]
 8008e7a:	0650      	lsls	r0, r2, #25
 8008e7c:	d5f6      	bpl.n	8008e6c <HAL_I2C_Mem_Read+0x328>
 8008e7e:	e7dd      	b.n	8008e3c <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8008e80:	6823      	ldr	r3, [r4, #0]
 8008e82:	6819      	ldr	r1, [r3, #0]
 8008e84:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8008e88:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8008e8a:	9003      	str	r0, [sp, #12]
 8008e8c:	6959      	ldr	r1, [r3, #20]
 8008e8e:	9103      	str	r1, [sp, #12]
 8008e90:	6999      	ldr	r1, [r3, #24]
 8008e92:	9103      	str	r1, [sp, #12]
 8008e94:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008e96:	6819      	ldr	r1, [r3, #0]
 8008e98:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 8008e9c:	6019      	str	r1, [r3, #0]
 8008e9e:	e6cd      	b.n	8008c3c <HAL_I2C_Mem_Read+0xf8>

08008ea0 <HAL_I2C_MasterTxCpltCallback>:
 8008ea0:	4770      	bx	lr
 8008ea2:	bf00      	nop

08008ea4 <HAL_I2C_MasterRxCpltCallback>:
 8008ea4:	4770      	bx	lr
 8008ea6:	bf00      	nop

08008ea8 <HAL_I2C_SlaveTxCpltCallback>:
 8008ea8:	4770      	bx	lr
 8008eaa:	bf00      	nop

08008eac <HAL_I2C_SlaveRxCpltCallback>:
 8008eac:	4770      	bx	lr
 8008eae:	bf00      	nop

08008eb0 <HAL_I2C_AddrCallback>:
}
 8008eb0:	4770      	bx	lr
 8008eb2:	bf00      	nop

08008eb4 <HAL_I2C_ListenCpltCallback>:
 8008eb4:	4770      	bx	lr
 8008eb6:	bf00      	nop

08008eb8 <HAL_I2C_MemTxCpltCallback>:
 8008eb8:	4770      	bx	lr
 8008eba:	bf00      	nop

08008ebc <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8008ebc:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 8008ec0:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 8008ec2:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 8008ec4:	b959      	cbnz	r1, 8008ede <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 8008ec6:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 8008ec8:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 8008eca:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 8008ecc:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 8008ece:	d00d      	beq.n	8008eec <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 8008ed0:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8008ed4:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 8008ed6:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8008ed8:	3201      	adds	r2, #1
 8008eda:	6502      	str	r2, [r0, #80]	; 0x50
 8008edc:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 8008ede:	6d01      	ldr	r1, [r0, #80]	; 0x50
 8008ee0:	2901      	cmp	r1, #1
 8008ee2:	d009      	beq.n	8008ef8 <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 8008ee4:	6d01      	ldr	r1, [r0, #80]	; 0x50
 8008ee6:	2902      	cmp	r1, #2
 8008ee8:	d00e      	beq.n	8008f08 <I2C_MemoryTransmit_TXE_BTF+0x4c>
 8008eea:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 8008eec:	b2d2      	uxtb	r2, r2
 8008eee:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 8008ef0:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8008ef2:	3202      	adds	r2, #2
 8008ef4:	6502      	str	r2, [r0, #80]	; 0x50
 8008ef6:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 8008ef8:	6c82      	ldr	r2, [r0, #72]	; 0x48
 8008efa:	6801      	ldr	r1, [r0, #0]
 8008efc:	b2d2      	uxtb	r2, r2
 8008efe:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 8008f00:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8008f02:	3201      	adds	r2, #1
 8008f04:	6502      	str	r2, [r0, #80]	; 0x50
 8008f06:	4770      	bx	lr
 8008f08:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 8008f0a:	2a22      	cmp	r2, #34	; 0x22
 8008f0c:	d01f      	beq.n	8008f4e <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 8008f0e:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 8008f10:	b289      	uxth	r1, r1
 8008f12:	b9c1      	cbnz	r1, 8008f46 <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 8008f14:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 8008f16:	b289      	uxth	r1, r1
 8008f18:	2900      	cmp	r1, #0
 8008f1a:	d1e6      	bne.n	8008eea <I2C_MemoryTransmit_TXE_BTF+0x2e>
 8008f1c:	2a21      	cmp	r2, #33	; 0x21
 8008f1e:	d1e4      	bne.n	8008eea <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 8008f20:	6802      	ldr	r2, [r0, #0]
{
 8008f22:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 8008f24:	6854      	ldr	r4, [r2, #4]
 8008f26:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 8008f2a:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008f2c:	6814      	ldr	r4, [r2, #0]
 8008f2e:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 8008f32:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 8008f34:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 8008f36:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 8008f38:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8008f3c:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 8008f40:	f7ff ffba 	bl	8008eb8 <HAL_I2C_MemTxCpltCallback>
}
 8008f44:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 8008f46:	2a21      	cmp	r2, #33	; 0x21
 8008f48:	d00a      	beq.n	8008f60 <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 8008f4a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8008f4c:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 8008f4e:	6801      	ldr	r1, [r0, #0]
 8008f50:	680a      	ldr	r2, [r1, #0]
 8008f52:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8008f56:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 8008f58:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8008f5a:	3201      	adds	r2, #1
 8008f5c:	6502      	str	r2, [r0, #80]	; 0x50
 8008f5e:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8008f60:	6a41      	ldr	r1, [r0, #36]	; 0x24
 8008f62:	6802      	ldr	r2, [r0, #0]
 8008f64:	f811 0b01 	ldrb.w	r0, [r1], #1
 8008f68:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 8008f6a:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 8008f6c:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 8008f6e:	3a01      	subs	r2, #1
 8008f70:	b292      	uxth	r2, r2
 8008f72:	855a      	strh	r2, [r3, #42]	; 0x2a
 8008f74:	4770      	bx	lr
 8008f76:	bf00      	nop

08008f78 <HAL_I2C_MemRxCpltCallback>:
 8008f78:	4770      	bx	lr
 8008f7a:	bf00      	nop

08008f7c <HAL_I2C_ErrorCallback>:
 8008f7c:	4770      	bx	lr
 8008f7e:	bf00      	nop

08008f80 <HAL_I2C_AbortCpltCallback>:
 8008f80:	4770      	bx	lr
 8008f82:	bf00      	nop

08008f84 <I2C_DMAAbort>:
{
 8008f84:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 8008f86:	4b3a      	ldr	r3, [pc, #232]	; (8009070 <I2C_DMAAbort+0xec>)
 8008f88:	4a3a      	ldr	r2, [pc, #232]	; (8009074 <I2C_DMAAbort+0xf0>)
 8008f8a:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 8008f8c:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 8008f8e:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 8008f90:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 8008f92:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 8008f94:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 8008f98:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 8008f9a:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8008f9c:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 8008fa0:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 8008fa2:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8008fa6:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8008faa:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 8008fac:	9301      	str	r3, [sp, #4]
 8008fae:	e005      	b.n	8008fbc <I2C_DMAAbort+0x38>
    count--;
 8008fb0:	9b01      	ldr	r3, [sp, #4]
 8008fb2:	3b01      	subs	r3, #1
 8008fb4:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 8008fb6:	6813      	ldr	r3, [r2, #0]
 8008fb8:	059b      	lsls	r3, r3, #22
 8008fba:	d506      	bpl.n	8008fca <I2C_DMAAbort+0x46>
    if (count == 0U)
 8008fbc:	9b01      	ldr	r3, [sp, #4]
 8008fbe:	2b00      	cmp	r3, #0
 8008fc0:	d1f6      	bne.n	8008fb0 <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8008fc2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008fc4:	f043 0320 	orr.w	r3, r3, #32
 8008fc8:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 8008fca:	6b44      	ldr	r4, [r0, #52]	; 0x34
 8008fcc:	b34c      	cbz	r4, 8009022 <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 8008fce:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 8008fd0:	2500      	movs	r5, #0
 8008fd2:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 8008fd4:	b1f3      	cbz	r3, 8009014 <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8008fd6:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 8008fd8:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8008fda:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 8008fde:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 8008fe0:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 8008fe2:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 8008fe4:	2400      	movs	r4, #0
 8008fe6:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 8008fe8:	6813      	ldr	r3, [r2, #0]
 8008fea:	f023 0301 	bic.w	r3, r3, #1
 8008fee:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 8008ff0:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8008ff4:	2b60      	cmp	r3, #96	; 0x60
 8008ff6:	d02a      	beq.n	800904e <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 8008ff8:	f001 0128 	and.w	r1, r1, #40	; 0x28
 8008ffc:	2928      	cmp	r1, #40	; 0x28
 8008ffe:	d019      	beq.n	8009034 <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 8009000:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8009002:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 8009004:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8009008:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 800900c:	f7ff ffb6 	bl	8008f7c <HAL_I2C_ErrorCallback>
}
 8009010:	b002      	add	sp, #8
 8009012:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009014:	6815      	ldr	r5, [r2, #0]
 8009016:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800901a:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800901c:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800901e:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 8009020:	e7e2      	b.n	8008fe8 <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 8009022:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8009024:	b1f3      	cbz	r3, 8009064 <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009026:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 8009028:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800902a:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800902e:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 8009030:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 8009032:	e7d7      	b.n	8008fe4 <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 8009034:	6813      	ldr	r3, [r2, #0]
 8009036:	f043 0301 	orr.w	r3, r3, #1
 800903a:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800903c:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800903e:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009040:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8009044:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 8009046:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 8009048:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 800904c:	e7de      	b.n	800900c <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800904e:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 8009050:	2220      	movs	r2, #32
 8009052:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 8009056:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800905a:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 800905c:	f7ff ff90 	bl	8008f80 <HAL_I2C_AbortCpltCallback>
}
 8009060:	b002      	add	sp, #8
 8009062:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009064:	6814      	ldr	r4, [r2, #0]
 8009066:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 800906a:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 800906c:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800906e:	e7bb      	b.n	8008fe8 <I2C_DMAAbort+0x64>
 8009070:	20000078 	.word	0x20000078
 8009074:	14f8b589 	.word	0x14f8b589

08009078 <I2C_ITError>:
{
 8009078:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800907a:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 800907e:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 8009082:	2b10      	cmp	r3, #16
{
 8009084:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8009086:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 8009088:	d039      	beq.n	80090fe <I2C_ITError+0x86>
 800908a:	b2d9      	uxtb	r1, r3
 800908c:	2940      	cmp	r1, #64	; 0x40
 800908e:	d036      	beq.n	80090fe <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 8009090:	f002 0128 	and.w	r1, r2, #40	; 0x28
 8009094:	2928      	cmp	r1, #40	; 0x28
 8009096:	d03d      	beq.n	8009114 <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 8009098:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800909a:	6859      	ldr	r1, [r3, #4]
 800909c:	0508      	lsls	r0, r1, #20
 800909e:	d407      	bmi.n	80090b0 <I2C_ITError+0x38>
 80090a0:	2a60      	cmp	r2, #96	; 0x60
 80090a2:	d005      	beq.n	80090b0 <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 80090a4:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 80090a6:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 80090a8:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 80090ac:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 80090b0:	2200      	movs	r2, #0
 80090b2:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 80090b4:	685a      	ldr	r2, [r3, #4]
 80090b6:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 80090ba:	d134      	bne.n	8009126 <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 80090bc:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 80090c0:	2960      	cmp	r1, #96	; 0x60
 80090c2:	d075      	beq.n	80091b0 <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 80090c4:	695a      	ldr	r2, [r3, #20]
 80090c6:	0650      	lsls	r0, r2, #25
 80090c8:	d505      	bpl.n	80090d6 <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80090ca:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80090cc:	691b      	ldr	r3, [r3, #16]
 80090ce:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 80090d0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80090d2:	3301      	adds	r3, #1
 80090d4:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 80090d6:	4620      	mov	r0, r4
 80090d8:	f7ff ff50 	bl	8008f7c <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 80090dc:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 80090de:	0719      	lsls	r1, r3, #28
 80090e0:	d004      	beq.n	80090ec <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 80090e2:	6822      	ldr	r2, [r4, #0]
 80090e4:	6853      	ldr	r3, [r2, #4]
 80090e6:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 80090ea:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 80090ec:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 80090f0:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80090f2:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 80090f4:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 80090f6:	d501      	bpl.n	80090fc <I2C_ITError+0x84>
 80090f8:	2b28      	cmp	r3, #40	; 0x28
 80090fa:	d02f      	beq.n	800915c <I2C_ITError+0xe4>
}
 80090fc:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 80090fe:	2a22      	cmp	r2, #34	; 0x22
 8009100:	d1c6      	bne.n	8009090 <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 8009102:	6823      	ldr	r3, [r4, #0]
 8009104:	681a      	ldr	r2, [r3, #0]
 8009106:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800910a:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800910c:	685a      	ldr	r2, [r3, #4]
 800910e:	0512      	lsls	r2, r2, #20
 8009110:	d5c8      	bpl.n	80090a4 <I2C_ITError+0x2c>
 8009112:	e7cd      	b.n	80090b0 <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 8009114:	2300      	movs	r3, #0
 8009116:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 8009118:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 800911a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800911e:	685a      	ldr	r2, [r3, #4]
 8009120:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 8009124:	d0ca      	beq.n	80090bc <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 8009126:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 8009128:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800912a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800912e:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 8009130:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8009134:	2b01      	cmp	r3, #1
 8009136:	d01e      	beq.n	8009176 <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 8009138:	4b28      	ldr	r3, [pc, #160]	; (80091dc <I2C_ITError+0x164>)
 800913a:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800913c:	f7fe fe6c 	bl	8007e18 <HAL_DMA_Abort_IT>
 8009140:	2800      	cmp	r0, #0
 8009142:	d0cb      	beq.n	80090dc <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 8009144:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 8009146:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 8009148:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800914a:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800914c:	f023 0301 	bic.w	r3, r3, #1
 8009150:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 8009152:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 8009156:	6d03      	ldr	r3, [r0, #80]	; 0x50
 8009158:	4798      	blx	r3
 800915a:	e7bf      	b.n	80090dc <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 800915c:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 800915e:	4920      	ldr	r1, [pc, #128]	; (80091e0 <I2C_ITError+0x168>)
 8009160:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 8009162:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 8009164:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 8009166:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 8009168:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800916c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 8009170:	f7ff fea0 	bl	8008eb4 <HAL_I2C_ListenCpltCallback>
}
 8009174:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 8009176:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8009178:	4b18      	ldr	r3, [pc, #96]	; (80091dc <I2C_ITError+0x164>)
 800917a:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800917c:	f7fe fe4c 	bl	8007e18 <HAL_DMA_Abort_IT>
 8009180:	2800      	cmp	r0, #0
 8009182:	d0ab      	beq.n	80090dc <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 8009184:	6823      	ldr	r3, [r4, #0]
 8009186:	695a      	ldr	r2, [r3, #20]
 8009188:	0651      	lsls	r1, r2, #25
 800918a:	d506      	bpl.n	800919a <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800918c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800918e:	691b      	ldr	r3, [r3, #16]
 8009190:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 8009192:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 8009194:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 8009196:	3201      	adds	r2, #1
 8009198:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800919a:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800919c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 800919e:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 80091a2:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 80091a4:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 80091a6:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 80091aa:	6d03      	ldr	r3, [r0, #80]	; 0x50
 80091ac:	4798      	blx	r3
 80091ae:	e795      	b.n	80090dc <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 80091b0:	2120      	movs	r1, #32
 80091b2:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80091b6:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 80091b8:	695a      	ldr	r2, [r3, #20]
 80091ba:	0652      	lsls	r2, r2, #25
 80091bc:	d506      	bpl.n	80091cc <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80091be:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80091c0:	691b      	ldr	r3, [r3, #16]
 80091c2:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 80091c4:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 80091c6:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 80091c8:	3201      	adds	r2, #1
 80091ca:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 80091cc:	681a      	ldr	r2, [r3, #0]
 80091ce:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 80091d2:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 80091d4:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 80091d6:	f7ff fed3 	bl	8008f80 <HAL_I2C_AbortCpltCallback>
 80091da:	e77f      	b.n	80090dc <I2C_ITError+0x64>
 80091dc:	08008f85 	.word	0x08008f85
 80091e0:	ffff0000 	.word	0xffff0000

080091e4 <HAL_I2C_EV_IRQHandler>:
{
 80091e4:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 80091e6:	6803      	ldr	r3, [r0, #0]
{
 80091e8:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 80091ea:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 80091ec:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 80091ee:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 80091f2:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 80091f6:	2910      	cmp	r1, #16
{
 80091f8:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 80091fa:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 80091fc:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 8009200:	d022      	beq.n	8009248 <HAL_I2C_EV_IRQHandler+0x64>
 8009202:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 8009206:	d01f      	beq.n	8009248 <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 8009208:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800920a:	2900      	cmp	r1, #0
 800920c:	f000 8094 	beq.w	8009338 <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 8009210:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 8009212:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 8009214:	f011 0602 	ands.w	r6, r1, #2
 8009218:	d059      	beq.n	80092ce <HAL_I2C_EV_IRQHandler+0xea>
 800921a:	0586      	lsls	r6, r0, #22
 800921c:	d559      	bpl.n	80092d2 <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800921e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8009220:	b102      	cbz	r2, 8009224 <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 8009222:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 8009224:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 8009228:	f002 0228 	and.w	r2, r2, #40	; 0x28
 800922c:	2a28      	cmp	r2, #40	; 0x28
 800922e:	f000 821e 	beq.w	800966e <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009232:	2200      	movs	r2, #0
 8009234:	920c      	str	r2, [sp, #48]	; 0x30
 8009236:	6959      	ldr	r1, [r3, #20]
 8009238:	910c      	str	r1, [sp, #48]	; 0x30
 800923a:	699b      	ldr	r3, [r3, #24]
 800923c:	930c      	str	r3, [sp, #48]	; 0x30
 800923e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 8009240:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 8009244:	b00e      	add	sp, #56	; 0x38
 8009246:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 8009248:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800924a:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 800924c:	f011 0f01 	tst.w	r1, #1
 8009250:	d11a      	bne.n	8009288 <HAL_I2C_EV_IRQHandler+0xa4>
 8009252:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 8009256:	d0f5      	beq.n	8009244 <HAL_I2C_EV_IRQHandler+0x60>
 8009258:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 800925c:	d0f2      	beq.n	8009244 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800925e:	070d      	lsls	r5, r1, #28
 8009260:	d56d      	bpl.n	800933e <HAL_I2C_EV_IRQHandler+0x15a>
 8009262:	0585      	lsls	r5, r0, #22
 8009264:	f140 8083 	bpl.w	800936e <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 8009268:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800926a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800926c:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800926e:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 8009270:	2900      	cmp	r1, #0
 8009272:	f000 81e3 	beq.w	800963c <HAL_I2C_EV_IRQHandler+0x458>
 8009276:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 8009278:	2a00      	cmp	r2, #0
 800927a:	f000 81df 	beq.w	800963c <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800927e:	685a      	ldr	r2, [r3, #4]
 8009280:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8009284:	605a      	str	r2, [r3, #4]
 8009286:	e7dd      	b.n	8009244 <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 8009288:	0585      	lsls	r5, r0, #22
 800928a:	d56e      	bpl.n	800936a <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 800928c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800928e:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 8009292:	f000 81e9 	beq.w	8009668 <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 8009296:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8009298:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 800929c:	bf04      	itt	eq
 800929e:	2208      	moveq	r2, #8
 80092a0:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 80092a2:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 80092a6:	2a40      	cmp	r2, #64	; 0x40
 80092a8:	f000 81d7 	beq.w	800965a <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 80092ac:	6922      	ldr	r2, [r4, #16]
 80092ae:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 80092b2:	f000 81b2 	beq.w	800961a <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 80092b6:	6d22      	ldr	r2, [r4, #80]	; 0x50
 80092b8:	2a00      	cmp	r2, #0
 80092ba:	f040 81ef 	bne.w	800969c <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 80092be:	6c62      	ldr	r2, [r4, #68]	; 0x44
 80092c0:	11d2      	asrs	r2, r2, #7
 80092c2:	f002 0206 	and.w	r2, r2, #6
 80092c6:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 80092ca:	611a      	str	r2, [r3, #16]
 80092cc:	e7ba      	b.n	8009244 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 80092ce:	06cd      	lsls	r5, r1, #27
 80092d0:	d47c      	bmi.n	80093cc <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 80092d2:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 80092d6:	2a21      	cmp	r2, #33	; 0x21
 80092d8:	f000 80f5 	beq.w	80094c6 <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 80092dc:	064e      	lsls	r6, r1, #25
 80092de:	f140 8132 	bpl.w	8009546 <HAL_I2C_EV_IRQHandler+0x362>
 80092e2:	0545      	lsls	r5, r0, #21
 80092e4:	f140 812f 	bpl.w	8009546 <HAL_I2C_EV_IRQHandler+0x362>
 80092e8:	0749      	lsls	r1, r1, #29
 80092ea:	f100 812f 	bmi.w	800954c <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 80092ee:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 80092f2:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 80092f4:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 80092f6:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 80092f8:	2a00      	cmp	r2, #0
 80092fa:	d0a3      	beq.n	8009244 <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80092fc:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80092fe:	691b      	ldr	r3, [r3, #16]
 8009300:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 8009302:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 8009304:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 8009306:	3b01      	subs	r3, #1
 8009308:	b29b      	uxth	r3, r3
 800930a:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800930c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800930e:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 8009310:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 8009312:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 8009314:	2b00      	cmp	r3, #0
 8009316:	d195      	bne.n	8009244 <HAL_I2C_EV_IRQHandler+0x60>
 8009318:	292a      	cmp	r1, #42	; 0x2a
 800931a:	d193      	bne.n	8009244 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800931c:	6822      	ldr	r2, [r4, #0]
 800931e:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 8009320:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 8009322:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 8009324:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8009328:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800932a:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800932c:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800932e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 8009332:	f7ff fdbb 	bl	8008eac <HAL_I2C_SlaveRxCpltCallback>
 8009336:	e785      	b.n	8009244 <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 8009338:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800933a:	6959      	ldr	r1, [r3, #20]
 800933c:	e76a      	b.n	8009214 <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800933e:	078d      	lsls	r5, r1, #30
 8009340:	d515      	bpl.n	800936e <HAL_I2C_EV_IRQHandler+0x18a>
 8009342:	0585      	lsls	r5, r0, #22
 8009344:	d513      	bpl.n	800936e <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 8009346:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 800934a:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 800934c:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800934e:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 8009352:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 8009354:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 8009356:	f000 81b3 	beq.w	80096c0 <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800935a:	2200      	movs	r2, #0
 800935c:	920a      	str	r2, [sp, #40]	; 0x28
 800935e:	695a      	ldr	r2, [r3, #20]
 8009360:	920a      	str	r2, [sp, #40]	; 0x28
 8009362:	699b      	ldr	r3, [r3, #24]
 8009364:	930a      	str	r3, [sp, #40]	; 0x28
 8009366:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009368:	e76c      	b.n	8009244 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800936a:	070d      	lsls	r5, r1, #28
 800936c:	d5e7      	bpl.n	800933e <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 800936e:	0776      	lsls	r6, r6, #29
 8009370:	f140 80f5 	bpl.w	800955e <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 8009374:	685d      	ldr	r5, [r3, #4]
 8009376:	052d      	lsls	r5, r5, #20
 8009378:	f53f af64 	bmi.w	8009244 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800937c:	060e      	lsls	r6, r1, #24
 800937e:	f140 8115 	bpl.w	80095ac <HAL_I2C_EV_IRQHandler+0x3c8>
 8009382:	0545      	lsls	r5, r0, #21
 8009384:	f140 8112 	bpl.w	80095ac <HAL_I2C_EV_IRQHandler+0x3c8>
 8009388:	074e      	lsls	r6, r1, #29
 800938a:	f100 8112 	bmi.w	80095b2 <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800938e:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 8009392:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 8009394:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 8009398:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800939a:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800939c:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800939e:	2800      	cmp	r0, #0
 80093a0:	f040 8235 	bne.w	800980e <HAL_I2C_EV_IRQHandler+0x62a>
 80093a4:	2a21      	cmp	r2, #33	; 0x21
 80093a6:	f000 8347 	beq.w	8009a38 <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 80093aa:	2940      	cmp	r1, #64	; 0x40
 80093ac:	f47f af4a 	bne.w	8009244 <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 80093b0:	2a22      	cmp	r2, #34	; 0x22
 80093b2:	f47f af47 	bne.w	8009244 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 80093b6:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 80093b8:	b292      	uxth	r2, r2
 80093ba:	2a00      	cmp	r2, #0
 80093bc:	f000 8268 	beq.w	8009890 <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 80093c0:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 80093c4:	2a40      	cmp	r2, #64	; 0x40
 80093c6:	f040 80b4 	bne.w	8009532 <HAL_I2C_EV_IRQHandler+0x34e>
 80093ca:	e0fc      	b.n	80095c6 <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 80093cc:	0585      	lsls	r5, r0, #22
 80093ce:	d580      	bpl.n	80092d2 <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 80093d0:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 80093d4:	685a      	ldr	r2, [r3, #4]
 80093d6:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 80093da:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 80093dc:	960d      	str	r6, [sp, #52]	; 0x34
 80093de:	695a      	ldr	r2, [r3, #20]
 80093e0:	920d      	str	r2, [sp, #52]	; 0x34
 80093e2:	681a      	ldr	r2, [r3, #0]
 80093e4:	f042 0201 	orr.w	r2, r2, #1
 80093e8:	601a      	str	r2, [r3, #0]
 80093ea:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80093ec:	681a      	ldr	r2, [r3, #0]
 80093ee:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80093f2:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 80093f4:	685a      	ldr	r2, [r3, #4]
 80093f6:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 80093f8:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 80093fa:	d521      	bpl.n	8009440 <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 80093fc:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 8009400:	2a22      	cmp	r2, #34	; 0x22
 8009402:	f000 817a 	beq.w	80096fa <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 8009406:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8009408:	6802      	ldr	r2, [r0, #0]
 800940a:	6852      	ldr	r2, [r2, #4]
 800940c:	b292      	uxth	r2, r2
 800940e:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 8009410:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8009412:	b292      	uxth	r2, r2
 8009414:	b11a      	cbz	r2, 800941e <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 8009416:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8009418:	f042 0204 	orr.w	r2, r2, #4
 800941c:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800941e:	685a      	ldr	r2, [r3, #4]
 8009420:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8009424:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 8009426:	f7fe fd09 	bl	8007e3c <HAL_DMA_GetState>
 800942a:	2801      	cmp	r0, #1
 800942c:	d008      	beq.n	8009440 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800942e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8009430:	4b99      	ldr	r3, [pc, #612]	; (8009698 <HAL_I2C_EV_IRQHandler+0x4b4>)
 8009432:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 8009434:	f7fe fcf0 	bl	8007e18 <HAL_DMA_Abort_IT>
 8009438:	b110      	cbz	r0, 8009440 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800943a:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800943c:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800943e:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 8009440:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8009442:	b29b      	uxth	r3, r3
 8009444:	b313      	cbz	r3, 800948c <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009446:	6823      	ldr	r3, [r4, #0]
 8009448:	695a      	ldr	r2, [r3, #20]
 800944a:	0752      	lsls	r2, r2, #29
 800944c:	d50a      	bpl.n	8009464 <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800944e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8009450:	691b      	ldr	r3, [r3, #16]
 8009452:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 8009454:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 8009456:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8009458:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800945a:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 800945c:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800945e:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 8009460:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8009462:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 8009464:	695a      	ldr	r2, [r3, #20]
 8009466:	0656      	lsls	r6, r2, #25
 8009468:	d509      	bpl.n	800947e <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800946a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800946c:	691b      	ldr	r3, [r3, #16]
 800946e:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 8009470:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 8009472:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8009474:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 8009476:	3201      	adds	r2, #1
      hi2c->XferCount--;
 8009478:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800947a:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800947c:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 800947e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8009480:	b29b      	uxth	r3, r3
 8009482:	b11b      	cbz	r3, 800948c <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 8009484:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009486:	f043 0304 	orr.w	r3, r3, #4
 800948a:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800948c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800948e:	2b00      	cmp	r3, #0
 8009490:	f040 80dd 	bne.w	800964e <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 8009494:	2d2a      	cmp	r5, #42	; 0x2a
 8009496:	f000 8151 	beq.w	800973c <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 800949a:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800949e:	2b28      	cmp	r3, #40	; 0x28
 80094a0:	f000 8154 	beq.w	800974c <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 80094a4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80094a6:	2b22      	cmp	r3, #34	; 0x22
 80094a8:	d002      	beq.n	80094b0 <HAL_I2C_EV_IRQHandler+0x2cc>
 80094aa:	2d22      	cmp	r5, #34	; 0x22
 80094ac:	f47f aeca 	bne.w	8009244 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 80094b0:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 80094b2:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 80094b4:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 80094b6:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 80094b8:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 80094bc:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 80094c0:	f7ff fcf4 	bl	8008eac <HAL_I2C_SlaveRxCpltCallback>
 80094c4:	e6be      	b.n	8009244 <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 80094c6:	060d      	lsls	r5, r1, #24
 80094c8:	d528      	bpl.n	800951c <HAL_I2C_EV_IRQHandler+0x338>
 80094ca:	0546      	lsls	r6, r0, #21
 80094cc:	d526      	bpl.n	800951c <HAL_I2C_EV_IRQHandler+0x338>
 80094ce:	074d      	lsls	r5, r1, #29
 80094d0:	d427      	bmi.n	8009522 <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 80094d2:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 80094d6:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 80094d8:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 80094da:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 80094dc:	2900      	cmp	r1, #0
 80094de:	f43f aeb1 	beq.w	8009244 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 80094e2:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80094e4:	f811 5b01 	ldrb.w	r5, [r1], #1
 80094e8:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 80094ea:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 80094ec:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 80094ee:	3901      	subs	r1, #1
 80094f0:	b289      	uxth	r1, r1
 80094f2:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 80094f4:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 80094f6:	b289      	uxth	r1, r1
 80094f8:	2900      	cmp	r1, #0
 80094fa:	f47f aea3 	bne.w	8009244 <HAL_I2C_EV_IRQHandler+0x60>
 80094fe:	2829      	cmp	r0, #41	; 0x29
 8009500:	f47f aea0 	bne.w	8009244 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 8009504:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 8009506:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 8009508:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800950c:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800950e:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 8009510:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 8009512:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 8009516:	f7ff fcc7 	bl	8008ea8 <HAL_I2C_SlaveTxCpltCallback>
 800951a:	e693      	b.n	8009244 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800951c:	0749      	lsls	r1, r1, #29
 800951e:	f57f ae91 	bpl.w	8009244 <HAL_I2C_EV_IRQHandler+0x60>
 8009522:	0582      	lsls	r2, r0, #22
 8009524:	f57f ae8e 	bpl.w	8009244 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 8009528:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800952a:	b292      	uxth	r2, r2
 800952c:	2a00      	cmp	r2, #0
 800952e:	f43f ae89 	beq.w	8009244 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009532:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8009534:	f812 1b01 	ldrb.w	r1, [r2], #1
 8009538:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 800953a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800953c:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800953e:	3b01      	subs	r3, #1
 8009540:	b29b      	uxth	r3, r3
 8009542:	8563      	strh	r3, [r4, #42]	; 0x2a
 8009544:	e67e      	b.n	8009244 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 8009546:	074a      	lsls	r2, r1, #29
 8009548:	f57f ae7c 	bpl.w	8009244 <HAL_I2C_EV_IRQHandler+0x60>
 800954c:	0586      	lsls	r6, r0, #22
 800954e:	f57f ae79 	bpl.w	8009244 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 8009552:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8009554:	b292      	uxth	r2, r2
 8009556:	2a00      	cmp	r2, #0
 8009558:	f43f ae74 	beq.w	8009244 <HAL_I2C_EV_IRQHandler+0x60>
 800955c:	e01b      	b.n	8009596 <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800955e:	685a      	ldr	r2, [r3, #4]
 8009560:	0512      	lsls	r2, r2, #20
 8009562:	f53f ae6f 	bmi.w	8009244 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 8009566:	064e      	lsls	r6, r1, #25
 8009568:	d433      	bmi.n	80095d2 <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800956a:	0749      	lsls	r1, r1, #29
 800956c:	f57f ae6a 	bpl.w	8009244 <HAL_I2C_EV_IRQHandler+0x60>
 8009570:	0582      	lsls	r2, r0, #22
 8009572:	f57f ae67 	bpl.w	8009244 <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 8009576:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 8009578:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800957a:	b292      	uxth	r2, r2
 800957c:	2a04      	cmp	r2, #4
 800957e:	f000 8113 	beq.w	80097a8 <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 8009582:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8009584:	b292      	uxth	r2, r2
 8009586:	2a03      	cmp	r2, #3
 8009588:	f000 8153 	beq.w	8009832 <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 800958c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800958e:	b292      	uxth	r2, r2
 8009590:	2a02      	cmp	r2, #2
 8009592:	f000 8182 	beq.w	800989a <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009596:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8009598:	691b      	ldr	r3, [r3, #16]
 800959a:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800959c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800959e:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 80095a0:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 80095a2:	3201      	adds	r2, #1
    hi2c->XferCount--;
 80095a4:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 80095a6:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 80095a8:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 80095aa:	e64b      	b.n	8009244 <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 80095ac:	074d      	lsls	r5, r1, #29
 80095ae:	f57f ae49 	bpl.w	8009244 <HAL_I2C_EV_IRQHandler+0x60>
 80095b2:	0581      	lsls	r1, r0, #22
 80095b4:	f57f ae46 	bpl.w	8009244 <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 80095b8:	2a21      	cmp	r2, #33	; 0x21
 80095ba:	f000 80fd 	beq.w	80097b8 <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 80095be:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 80095c2:	f47f ae3f 	bne.w	8009244 <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 80095c6:	4620      	mov	r0, r4
}
 80095c8:	b00e      	add	sp, #56	; 0x38
 80095ca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 80095ce:	f7ff bc75 	b.w	8008ebc <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 80095d2:	0545      	lsls	r5, r0, #21
 80095d4:	d5c9      	bpl.n	800956a <HAL_I2C_EV_IRQHandler+0x386>
 80095d6:	f011 0104 	ands.w	r1, r1, #4
 80095da:	d1c9      	bne.n	8009570 <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 80095dc:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 80095e0:	2a22      	cmp	r2, #34	; 0x22
 80095e2:	f47f ae2f 	bne.w	8009244 <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 80095e6:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 80095e8:	b292      	uxth	r2, r2
    if (tmp > 3U)
 80095ea:	2a03      	cmp	r2, #3
 80095ec:	f240 81ec 	bls.w	80099c8 <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80095f0:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80095f2:	691b      	ldr	r3, [r3, #16]
 80095f4:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 80095f6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 80095f8:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 80095fa:	3b01      	subs	r3, #1
 80095fc:	b29b      	uxth	r3, r3
 80095fe:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 8009600:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8009602:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 8009604:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 8009606:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 8009608:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 800960a:	f47f ae1b 	bne.w	8009244 <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800960e:	6822      	ldr	r2, [r4, #0]
 8009610:	6853      	ldr	r3, [r2, #4]
 8009612:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8009616:	6053      	str	r3, [r2, #4]
 8009618:	e614      	b.n	8009244 <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800961a:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800961e:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 8009620:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 8009622:	bf16      	itet	ne
 8009624:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 8009628:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800962c:	b2d2      	uxtbne	r2, r2
 800962e:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 8009630:	6b62      	ldr	r2, [r4, #52]	; 0x34
 8009632:	b11a      	cbz	r2, 800963c <HAL_I2C_EV_IRQHandler+0x458>
 8009634:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 8009636:	2a00      	cmp	r2, #0
 8009638:	f47f ae21 	bne.w	800927e <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 800963c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800963e:	2a00      	cmp	r2, #0
 8009640:	f43f ae00 	beq.w	8009244 <HAL_I2C_EV_IRQHandler+0x60>
 8009644:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 8009646:	2a00      	cmp	r2, #0
 8009648:	f47f ae19 	bne.w	800927e <HAL_I2C_EV_IRQHandler+0x9a>
 800964c:	e5fa      	b.n	8009244 <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 800964e:	4620      	mov	r0, r4
}
 8009650:	b00e      	add	sp, #56	; 0x38
 8009652:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 8009656:	f7ff bd0f 	b.w	8009078 <I2C_ITError>
    if (hi2c->EventCount == 0U)
 800965a:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800965c:	bb52      	cbnz	r2, 80096b4 <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800965e:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8009660:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8009664:	611a      	str	r2, [r3, #16]
 8009666:	e5ed      	b.n	8009244 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 8009668:	2201      	movs	r2, #1
 800966a:	62e2      	str	r2, [r4, #44]	; 0x2c
 800966c:	e619      	b.n	80092a2 <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 800966e:	685a      	ldr	r2, [r3, #4]
 8009670:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009674:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 8009676:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 8009678:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 800967c:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 8009680:	bf54      	ite	pl
 8009682:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 8009684:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 8009686:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 800968a:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 800968e:	4620      	mov	r0, r4
 8009690:	f7ff fc0e 	bl	8008eb0 <HAL_I2C_AddrCallback>
 8009694:	e5d6      	b.n	8009244 <HAL_I2C_EV_IRQHandler+0x60>
 8009696:	bf00      	nop
 8009698:	08008f85 	.word	0x08008f85
      else if (hi2c->EventCount == 1U)
 800969c:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800969e:	2a01      	cmp	r2, #1
 80096a0:	f47f add0 	bne.w	8009244 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 80096a4:	6c62      	ldr	r2, [r4, #68]	; 0x44
 80096a6:	11d2      	asrs	r2, r2, #7
 80096a8:	f002 0206 	and.w	r2, r2, #6
 80096ac:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 80096b0:	611a      	str	r2, [r3, #16]
 80096b2:	e5c7      	b.n	8009244 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 80096b4:	6c62      	ldr	r2, [r4, #68]	; 0x44
 80096b6:	f042 0201 	orr.w	r2, r2, #1
 80096ba:	b2d2      	uxtb	r2, r2
 80096bc:	611a      	str	r2, [r3, #16]
 80096be:	e5c1      	b.n	8009244 <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 80096c0:	6d21      	ldr	r1, [r4, #80]	; 0x50
 80096c2:	b911      	cbnz	r1, 80096ca <HAL_I2C_EV_IRQHandler+0x4e6>
 80096c4:	2a40      	cmp	r2, #64	; 0x40
 80096c6:	f000 809b 	beq.w	8009800 <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 80096ca:	6d22      	ldr	r2, [r4, #80]	; 0x50
 80096cc:	b922      	cbnz	r2, 80096d8 <HAL_I2C_EV_IRQHandler+0x4f4>
 80096ce:	6921      	ldr	r1, [r4, #16]
 80096d0:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 80096d4:	f000 809f 	beq.w	8009816 <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 80096d8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 80096da:	b292      	uxth	r2, r2
 80096dc:	2a00      	cmp	r2, #0
 80096de:	d142      	bne.n	8009766 <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80096e0:	9203      	str	r2, [sp, #12]
 80096e2:	695a      	ldr	r2, [r3, #20]
 80096e4:	9203      	str	r2, [sp, #12]
 80096e6:	699a      	ldr	r2, [r3, #24]
 80096e8:	9203      	str	r2, [sp, #12]
 80096ea:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80096ec:	681a      	ldr	r2, [r3, #0]
 80096ee:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80096f2:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 80096f4:	2300      	movs	r3, #0
 80096f6:	6523      	str	r3, [r4, #80]	; 0x50
 80096f8:	e5a4      	b.n	8009244 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 80096fa:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 80096fc:	6802      	ldr	r2, [r0, #0]
 80096fe:	6852      	ldr	r2, [r2, #4]
 8009700:	b292      	uxth	r2, r2
 8009702:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 8009704:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8009706:	b292      	uxth	r2, r2
 8009708:	b11a      	cbz	r2, 8009712 <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800970a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800970c:	f042 0204 	orr.w	r2, r2, #4
 8009710:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 8009712:	685a      	ldr	r2, [r3, #4]
 8009714:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8009718:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 800971a:	f7fe fb8f 	bl	8007e3c <HAL_DMA_GetState>
 800971e:	2801      	cmp	r0, #1
 8009720:	f43f ae8e 	beq.w	8009440 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 8009724:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8009726:	4b98      	ldr	r3, [pc, #608]	; (8009988 <HAL_I2C_EV_IRQHandler+0x7a4>)
 8009728:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800972a:	f7fe fb75 	bl	8007e18 <HAL_DMA_Abort_IT>
 800972e:	2800      	cmp	r0, #0
 8009730:	f43f ae86 	beq.w	8009440 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 8009734:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8009736:	6d03      	ldr	r3, [r0, #80]	; 0x50
 8009738:	4798      	blx	r3
 800973a:	e681      	b.n	8009440 <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800973c:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 800973e:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 8009740:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 8009742:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 8009746:	f7ff fbb1 	bl	8008eac <HAL_I2C_SlaveRxCpltCallback>
 800974a:	e6a6      	b.n	800949a <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 800974c:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800974e:	498f      	ldr	r1, [pc, #572]	; (800998c <HAL_I2C_EV_IRQHandler+0x7a8>)
 8009750:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 8009752:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 8009754:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 8009756:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 8009758:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800975c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 8009760:	f7ff fba8 	bl	8008eb4 <HAL_I2C_ListenCpltCallback>
 8009764:	e56e      	b.n	8009244 <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 8009766:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8009768:	b292      	uxth	r2, r2
 800976a:	2a01      	cmp	r2, #1
 800976c:	d070      	beq.n	8009850 <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 800976e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8009770:	b292      	uxth	r2, r2
 8009772:	2a02      	cmp	r2, #2
 8009774:	f000 80d6 	beq.w	8009924 <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009778:	681a      	ldr	r2, [r3, #0]
 800977a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800977e:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 8009780:	685a      	ldr	r2, [r3, #4]
 8009782:	0511      	lsls	r1, r2, #20
 8009784:	d508      	bpl.n	8009798 <HAL_I2C_EV_IRQHandler+0x5b4>
 8009786:	2820      	cmp	r0, #32
 8009788:	f200 80f8 	bhi.w	800997c <HAL_I2C_EV_IRQHandler+0x798>
 800978c:	2807      	cmp	r0, #7
 800978e:	f200 80ea 	bhi.w	8009966 <HAL_I2C_EV_IRQHandler+0x782>
 8009792:	2801      	cmp	r0, #1
 8009794:	f000 80ed 	beq.w	8009972 <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009798:	2200      	movs	r2, #0
 800979a:	9209      	str	r2, [sp, #36]	; 0x24
 800979c:	695a      	ldr	r2, [r3, #20]
 800979e:	9209      	str	r2, [sp, #36]	; 0x24
 80097a0:	699b      	ldr	r3, [r3, #24]
 80097a2:	9309      	str	r3, [sp, #36]	; 0x24
 80097a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80097a6:	e7a5      	b.n	80096f4 <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 80097a8:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80097aa:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 80097ac:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80097b0:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80097b2:	691b      	ldr	r3, [r3, #16]
 80097b4:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 80097b6:	e6f1      	b.n	800959c <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 80097b8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 80097ba:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 80097be:	2a21      	cmp	r2, #33	; 0x21
 80097c0:	f47f ad40 	bne.w	8009244 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 80097c4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 80097c6:	b292      	uxth	r2, r2
 80097c8:	2a00      	cmp	r2, #0
 80097ca:	f47f aeb2 	bne.w	8009532 <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 80097ce:	2908      	cmp	r1, #8
 80097d0:	f000 80e2 	beq.w	8009998 <HAL_I2C_EV_IRQHandler+0x7b4>
 80097d4:	2920      	cmp	r1, #32
 80097d6:	f000 80df 	beq.w	8009998 <HAL_I2C_EV_IRQHandler+0x7b4>
 80097da:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 80097de:	f000 80db 	beq.w	8009998 <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 80097e2:	6859      	ldr	r1, [r3, #4]
 80097e4:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 80097e8:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 80097ea:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 80097ec:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 80097ee:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 80097f0:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 80097f4:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 80097f6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 80097fa:	f7ff fb51 	bl	8008ea0 <HAL_I2C_MasterTxCpltCallback>
 80097fe:	e521      	b.n	8009244 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009800:	9101      	str	r1, [sp, #4]
 8009802:	695a      	ldr	r2, [r3, #20]
 8009804:	9201      	str	r2, [sp, #4]
 8009806:	699b      	ldr	r3, [r3, #24]
 8009808:	9301      	str	r3, [sp, #4]
 800980a:	9b01      	ldr	r3, [sp, #4]
 800980c:	e51a      	b.n	8009244 <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800980e:	2a21      	cmp	r2, #33	; 0x21
 8009810:	f43f add1 	beq.w	80093b6 <HAL_I2C_EV_IRQHandler+0x1d2>
 8009814:	e5c9      	b.n	80093aa <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009816:	9202      	str	r2, [sp, #8]
 8009818:	695a      	ldr	r2, [r3, #20]
 800981a:	9202      	str	r2, [sp, #8]
 800981c:	699a      	ldr	r2, [r3, #24]
 800981e:	9202      	str	r2, [sp, #8]
 8009820:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009822:	681a      	ldr	r2, [r3, #0]
 8009824:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8009828:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 800982a:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800982c:	3301      	adds	r3, #1
 800982e:	6523      	str	r3, [r4, #80]	; 0x50
 8009830:	e508      	b.n	8009244 <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 8009832:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 8009834:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 8009836:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800983a:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800983c:	f43f aeab 	beq.w	8009596 <HAL_I2C_EV_IRQHandler+0x3b2>
 8009840:	2902      	cmp	r1, #2
 8009842:	f43f aea8 	beq.w	8009596 <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009846:	681a      	ldr	r2, [r3, #0]
 8009848:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800984c:	601a      	str	r2, [r3, #0]
 800984e:	e6a2      	b.n	8009596 <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 8009850:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 8009854:	f000 811b 	beq.w	8009a8e <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 8009858:	2808      	cmp	r0, #8
 800985a:	f000 8108 	beq.w	8009a6e <HAL_I2C_EV_IRQHandler+0x88a>
 800985e:	2820      	cmp	r0, #32
 8009860:	f000 8105 	beq.w	8009a6e <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 8009864:	2d12      	cmp	r5, #18
 8009866:	f000 80ff 	beq.w	8009a68 <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800986a:	2810      	cmp	r0, #16
 800986c:	d804      	bhi.n	8009878 <HAL_I2C_EV_IRQHandler+0x694>
 800986e:	4a48      	ldr	r2, [pc, #288]	; (8009990 <HAL_I2C_EV_IRQHandler+0x7ac>)
 8009870:	40c2      	lsrs	r2, r0
 8009872:	07d1      	lsls	r1, r2, #31
 8009874:	f100 814c 	bmi.w	8009b10 <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009878:	681a      	ldr	r2, [r3, #0]
 800987a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800987e:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009880:	2200      	movs	r2, #0
 8009882:	9206      	str	r2, [sp, #24]
 8009884:	695a      	ldr	r2, [r3, #20]
 8009886:	9206      	str	r2, [sp, #24]
 8009888:	699b      	ldr	r3, [r3, #24]
 800988a:	9306      	str	r3, [sp, #24]
 800988c:	9b06      	ldr	r3, [sp, #24]
 800988e:	e731      	b.n	80096f4 <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 8009890:	685a      	ldr	r2, [r3, #4]
 8009892:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009896:	605a      	str	r2, [r3, #4]
 8009898:	e4d4      	b.n	8009244 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 800989a:	3901      	subs	r1, #1
 800989c:	290f      	cmp	r1, #15
 800989e:	d809      	bhi.n	80098b4 <HAL_I2C_EV_IRQHandler+0x6d0>
 80098a0:	e8df f001 	tbb	[pc, r1]
 80098a4:	3608363b 	.word	0x3608363b
 80098a8:	08080808 	.word	0x08080808
 80098ac:	08080808 	.word	0x08080808
 80098b0:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80098b4:	681a      	ldr	r2, [r3, #0]
 80098b6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80098ba:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80098bc:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80098be:	691b      	ldr	r3, [r3, #16]
 80098c0:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 80098c2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 80098c4:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80098c6:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 80098c8:	3b01      	subs	r3, #1
 80098ca:	b29b      	uxth	r3, r3
 80098cc:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80098ce:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 80098d0:	1c51      	adds	r1, r2, #1
 80098d2:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80098d4:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 80098d6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 80098d8:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 80098da:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 80098dc:	3b01      	subs	r3, #1
 80098de:	b29b      	uxth	r3, r3
 80098e0:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 80098e2:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 80098e4:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 80098e6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 80098ea:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 80098ec:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 80098ee:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 80098f0:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 80098f4:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 80098f8:	2b40      	cmp	r3, #64	; 0x40
 80098fa:	f000 80f5 	beq.w	8009ae8 <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 80098fe:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 8009900:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8009902:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 8009906:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 8009908:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800990a:	f7ff facb 	bl	8008ea4 <HAL_I2C_MasterRxCpltCallback>
 800990e:	e499      	b.n	8009244 <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009910:	681a      	ldr	r2, [r3, #0]
 8009912:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8009916:	601a      	str	r2, [r3, #0]
 8009918:	e7d0      	b.n	80098bc <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800991a:	681a      	ldr	r2, [r3, #0]
 800991c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009920:	601a      	str	r2, [r3, #0]
 8009922:	e7cb      	b.n	80098bc <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 8009924:	2810      	cmp	r0, #16
 8009926:	d804      	bhi.n	8009932 <HAL_I2C_EV_IRQHandler+0x74e>
 8009928:	4a19      	ldr	r2, [pc, #100]	; (8009990 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800992a:	40c2      	lsrs	r2, r0
 800992c:	07d2      	lsls	r2, r2, #31
 800992e:	f100 80c2 	bmi.w	8009ab6 <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009932:	681a      	ldr	r2, [r3, #0]
 8009934:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009938:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800993a:	681a      	ldr	r2, [r3, #0]
 800993c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8009940:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 8009942:	685a      	ldr	r2, [r3, #4]
 8009944:	0516      	lsls	r6, r2, #20
 8009946:	d506      	bpl.n	8009956 <HAL_I2C_EV_IRQHandler+0x772>
 8009948:	2820      	cmp	r0, #32
 800994a:	f240 80bc 	bls.w	8009ac6 <HAL_I2C_EV_IRQHandler+0x8e2>
 800994e:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 8009952:	f000 80bd 	beq.w	8009ad0 <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009956:	2200      	movs	r2, #0
 8009958:	9208      	str	r2, [sp, #32]
 800995a:	695a      	ldr	r2, [r3, #20]
 800995c:	9208      	str	r2, [sp, #32]
 800995e:	699b      	ldr	r3, [r3, #24]
 8009960:	9308      	str	r3, [sp, #32]
 8009962:	9b08      	ldr	r3, [sp, #32]
 8009964:	e6c6      	b.n	80096f4 <HAL_I2C_EV_IRQHandler+0x510>
 8009966:	4a0b      	ldr	r2, [pc, #44]	; (8009994 <HAL_I2C_EV_IRQHandler+0x7b0>)
 8009968:	3808      	subs	r0, #8
 800996a:	40c2      	lsrs	r2, r0
 800996c:	07d2      	lsls	r2, r2, #31
 800996e:	f57f af13 	bpl.w	8009798 <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 8009972:	685a      	ldr	r2, [r3, #4]
 8009974:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8009978:	605a      	str	r2, [r3, #4]
 800997a:	e70d      	b.n	8009798 <HAL_I2C_EV_IRQHandler+0x5b4>
 800997c:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 8009980:	f47f af0a 	bne.w	8009798 <HAL_I2C_EV_IRQHandler+0x5b4>
 8009984:	e7f5      	b.n	8009972 <HAL_I2C_EV_IRQHandler+0x78e>
 8009986:	bf00      	nop
 8009988:	08008f85 	.word	0x08008f85
 800998c:	ffff0000 	.word	0xffff0000
 8009990:	00010014 	.word	0x00010014
 8009994:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 8009998:	6859      	ldr	r1, [r3, #4]
 800999a:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800999e:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80099a0:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 80099a2:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 80099a4:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80099a6:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 80099aa:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 80099ac:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 80099ae:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 80099b2:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 80099b6:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 80099ba:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 80099bc:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 80099be:	f47f af1c 	bne.w	80097fa <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 80099c2:	f7ff fa79 	bl	8008eb8 <HAL_I2C_MemTxCpltCallback>
 80099c6:	e43d      	b.n	8009244 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 80099c8:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 80099ca:	2802      	cmp	r0, #2
 80099cc:	f43f af60 	beq.w	8009890 <HAL_I2C_EV_IRQHandler+0x6ac>
 80099d0:	2a01      	cmp	r2, #1
 80099d2:	f63f af5d 	bhi.w	8009890 <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 80099d6:	4a62      	ldr	r2, [pc, #392]	; (8009b60 <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 80099d8:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 80099da:	6812      	ldr	r2, [r2, #0]
 80099dc:	f246 10a8 	movw	r0, #25000	; 0x61a8
 80099e0:	fbb2 f2f0 	udiv	r2, r2, r0
 80099e4:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 80099e8:	920b      	str	r2, [sp, #44]	; 0x2c
 80099ea:	e004      	b.n	80099f6 <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 80099ec:	681a      	ldr	r2, [r3, #0]
 80099ee:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 80099f2:	f000 8092 	beq.w	8009b1a <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 80099f6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80099f8:	3a01      	subs	r2, #1
 80099fa:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 80099fc:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80099fe:	2900      	cmp	r1, #0
 8009a00:	d1f4      	bne.n	80099ec <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009a02:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009a04:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009a06:	f042 0220 	orr.w	r2, r2, #32
 8009a0a:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 8009a0c:	685a      	ldr	r2, [r3, #4]
 8009a0e:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8009a12:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009a14:	691b      	ldr	r3, [r3, #16]
 8009a16:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 8009a18:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 8009a1a:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8009a1c:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 8009a1e:	3201      	adds	r2, #1
        hi2c->XferCount--;
 8009a20:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 8009a22:	2020      	movs	r0, #32
        hi2c->XferCount--;
 8009a24:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 8009a26:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 8009a28:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 8009a2c:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8009a2e:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 8009a32:	f7ff faa3 	bl	8008f7c <HAL_I2C_ErrorCallback>
 8009a36:	e405      	b.n	8009244 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 8009a38:	2d08      	cmp	r5, #8
 8009a3a:	d0ad      	beq.n	8009998 <HAL_I2C_EV_IRQHandler+0x7b4>
 8009a3c:	2d20      	cmp	r5, #32
 8009a3e:	d0ab      	beq.n	8009998 <HAL_I2C_EV_IRQHandler+0x7b4>
 8009a40:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 8009a44:	d0a8      	beq.n	8009998 <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 8009a46:	685a      	ldr	r2, [r3, #4]
 8009a48:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8009a4c:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 8009a4e:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8009a50:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 8009a52:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 8009a54:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8009a56:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 8009a5a:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 8009a5c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 8009a60:	f7ff fa1e 	bl	8008ea0 <HAL_I2C_MasterTxCpltCallback>
 8009a64:	f7ff bbee 	b.w	8009244 <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 8009a68:	2801      	cmp	r0, #1
 8009a6a:	f43f af05 	beq.w	8009878 <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009a6e:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009a70:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009a72:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009a76:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009a78:	9107      	str	r1, [sp, #28]
 8009a7a:	695a      	ldr	r2, [r3, #20]
 8009a7c:	9207      	str	r2, [sp, #28]
 8009a7e:	699a      	ldr	r2, [r3, #24]
 8009a80:	9207      	str	r2, [sp, #28]
 8009a82:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009a84:	681a      	ldr	r2, [r3, #0]
 8009a86:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009a8a:	601a      	str	r2, [r3, #0]
 8009a8c:	e632      	b.n	80096f4 <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009a8e:	681a      	ldr	r2, [r3, #0]
 8009a90:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009a94:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 8009a96:	685a      	ldr	r2, [r3, #4]
 8009a98:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 8009a9c:	d02d      	beq.n	8009afa <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009a9e:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009aa0:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009aa2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009aa6:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009aa8:	9104      	str	r1, [sp, #16]
 8009aaa:	695a      	ldr	r2, [r3, #20]
 8009aac:	9204      	str	r2, [sp, #16]
 8009aae:	699b      	ldr	r3, [r3, #24]
 8009ab0:	9304      	str	r3, [sp, #16]
 8009ab2:	9b04      	ldr	r3, [sp, #16]
 8009ab4:	e61e      	b.n	80096f4 <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009ab6:	681a      	ldr	r2, [r3, #0]
 8009ab8:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8009abc:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 8009abe:	685a      	ldr	r2, [r3, #4]
 8009ac0:	0515      	lsls	r5, r2, #20
 8009ac2:	f57f af48 	bpl.w	8009956 <HAL_I2C_EV_IRQHandler+0x772>
 8009ac6:	2807      	cmp	r0, #7
 8009ac8:	d807      	bhi.n	8009ada <HAL_I2C_EV_IRQHandler+0x8f6>
 8009aca:	2801      	cmp	r0, #1
 8009acc:	f47f af43 	bne.w	8009956 <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 8009ad0:	685a      	ldr	r2, [r3, #4]
 8009ad2:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8009ad6:	605a      	str	r2, [r3, #4]
 8009ad8:	e73d      	b.n	8009956 <HAL_I2C_EV_IRQHandler+0x772>
 8009ada:	4a22      	ldr	r2, [pc, #136]	; (8009b64 <HAL_I2C_EV_IRQHandler+0x980>)
 8009adc:	3808      	subs	r0, #8
 8009ade:	40c2      	lsrs	r2, r0
 8009ae0:	07d0      	lsls	r0, r2, #31
 8009ae2:	f57f af38 	bpl.w	8009956 <HAL_I2C_EV_IRQHandler+0x772>
 8009ae6:	e7f3      	b.n	8009ad0 <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8009ae8:	2300      	movs	r3, #0
 8009aea:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 8009aee:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 8009af0:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 8009af2:	f7ff fa41 	bl	8008f78 <HAL_I2C_MemRxCpltCallback>
 8009af6:	f7ff bba5 	b.w	8009244 <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009afa:	9205      	str	r2, [sp, #20]
 8009afc:	695a      	ldr	r2, [r3, #20]
 8009afe:	9205      	str	r2, [sp, #20]
 8009b00:	699a      	ldr	r2, [r3, #24]
 8009b02:	9205      	str	r2, [sp, #20]
 8009b04:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009b06:	681a      	ldr	r2, [r3, #0]
 8009b08:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009b0c:	601a      	str	r2, [r3, #0]
 8009b0e:	e5f1      	b.n	80096f4 <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009b10:	681a      	ldr	r2, [r3, #0]
 8009b12:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8009b16:	601a      	str	r2, [r3, #0]
 8009b18:	e6b2      	b.n	8009880 <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009b1a:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009b1c:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009b1e:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8009b22:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 8009b24:	6859      	ldr	r1, [r3, #4]
 8009b26:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 8009b2a:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009b2c:	691b      	ldr	r3, [r3, #16]
 8009b2e:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 8009b30:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8009b32:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 8009b34:	2120      	movs	r1, #32
        hi2c->XferCount--;
 8009b36:	b29b      	uxth	r3, r3
 8009b38:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 8009b3a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 8009b3e:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 8009b40:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 8009b44:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 8009b46:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 8009b48:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 8009b4a:	f47f aed9 	bne.w	8009900 <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 8009b4e:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 8009b52:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 8009b54:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 8009b56:	f7ff fa0f 	bl	8008f78 <HAL_I2C_MemRxCpltCallback>
 8009b5a:	f7ff bb73 	b.w	8009244 <HAL_I2C_EV_IRQHandler+0x60>
 8009b5e:	bf00      	nop
 8009b60:	20000078 	.word	0x20000078
 8009b64:	01000101 	.word	0x01000101

08009b68 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8009b68:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 8009b6c:	2a20      	cmp	r2, #32
{
 8009b6e:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8009b70:	fa5f fc82 	uxtb.w	ip, r2
 8009b74:	d001      	beq.n	8009b7a <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 8009b76:	2002      	movs	r0, #2
  }
}
 8009b78:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 8009b7a:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8009b7c:	2024      	movs	r0, #36	; 0x24
 8009b7e:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 8009b82:	6810      	ldr	r0, [r2, #0]
 8009b84:	f020 0001 	bic.w	r0, r0, #1
 8009b88:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8009b8a:	6a50      	ldr	r0, [r2, #36]	; 0x24
 8009b8c:	f020 0010 	bic.w	r0, r0, #16
 8009b90:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 8009b92:	6a50      	ldr	r0, [r2, #36]	; 0x24
 8009b94:	4301      	orrs	r1, r0
 8009b96:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 8009b98:	6811      	ldr	r1, [r2, #0]
 8009b9a:	f041 0101 	orr.w	r1, r1, #1
 8009b9e:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 8009ba0:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 8009ba2:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 8009ba6:	4770      	bx	lr

08009ba8 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8009ba8:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 8009bac:	2a20      	cmp	r2, #32
 8009bae:	d001      	beq.n	8009bb4 <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 8009bb0:	2002      	movs	r0, #2
  }
}
 8009bb2:	4770      	bx	lr
{
 8009bb4:	b410      	push	{r4}
 8009bb6:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 8009bba:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8009bbc:	2224      	movs	r2, #36	; 0x24
 8009bbe:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 8009bc2:	6822      	ldr	r2, [r4, #0]
 8009bc4:	f022 0201 	bic.w	r2, r2, #1
 8009bc8:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 8009bca:	4603      	mov	r3, r0
 8009bcc:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 8009bce:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 8009bd2:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 8009bd4:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 8009bd6:	b289      	uxth	r1, r1
 8009bd8:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 8009bda:	6822      	ldr	r2, [r4, #0]
 8009bdc:	f042 0201 	orr.w	r2, r2, #1
 8009be0:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8009be2:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 8009be6:	2000      	movs	r0, #0
}
 8009be8:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009bec:	4770      	bx	lr
 8009bee:	bf00      	nop

08009bf0 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 8009bf0:	2800      	cmp	r0, #0
 8009bf2:	d069      	beq.n	8009cc8 <HAL_LTDC_Init+0xd8>
{
 8009bf4:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8009bf6:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 8009bfa:	4604      	mov	r4, r0
 8009bfc:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8009c00:	2b00      	cmp	r3, #0
 8009c02:	d05c      	beq.n	8009cbe <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8009c04:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8009c06:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8009c08:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8009c0c:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8009c10:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8009c12:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8009c14:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8009c18:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 8009c1c:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8009c1e:	6999      	ldr	r1, [r3, #24]
 8009c20:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8009c22:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8009c24:	430a      	orrs	r2, r1
 8009c26:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8009c28:	689a      	ldr	r2, [r3, #8]
 8009c2a:	4928      	ldr	r1, [pc, #160]	; (8009ccc <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8009c2c:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8009c2e:	400a      	ands	r2, r1
 8009c30:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8009c32:	689a      	ldr	r2, [r3, #8]
 8009c34:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8009c38:	69a0      	ldr	r0, [r4, #24]
 8009c3a:	4302      	orrs	r2, r0
 8009c3c:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8009c3e:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8009c40:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8009c42:	400a      	ands	r2, r1
 8009c44:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8009c46:	68da      	ldr	r2, [r3, #12]
 8009c48:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8009c4c:	6a20      	ldr	r0, [r4, #32]
 8009c4e:	4302      	orrs	r2, r0
 8009c50:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8009c52:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8009c54:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8009c56:	400a      	ands	r2, r1
 8009c58:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8009c5a:	691a      	ldr	r2, [r3, #16]
 8009c5c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8009c60:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8009c62:	4302      	orrs	r2, r0
 8009c64:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8009c66:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8009c68:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8009c6a:	400a      	ands	r2, r1
 8009c6c:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8009c6e:	695a      	ldr	r2, [r3, #20]
 8009c70:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8009c72:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8009c76:	430a      	orrs	r2, r1
 8009c78:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8009c7a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8009c7c:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8009c80:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8009c84:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 8009c88:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8009c8a:	6add      	ldr	r5, [r3, #44]	; 0x2c
 8009c8c:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 8009c90:	432a      	orrs	r2, r5
 8009c92:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8009c96:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8009c9a:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8009c9c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8009c9e:	f042 0206 	orr.w	r2, r2, #6
 8009ca2:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 8009ca4:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 8009ca6:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8009caa:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 8009cac:	ea42 020c 	orr.w	r2, r2, ip
 8009cb0:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8009cb2:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8009cb6:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 8009cba:	4608      	mov	r0, r1
}
 8009cbc:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 8009cbe:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 8009cc2:	f7f8 f817 	bl	8001cf4 <HAL_LTDC_MspInit>
 8009cc6:	e79d      	b.n	8009c04 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 8009cc8:	2001      	movs	r0, #1
}
 8009cca:	4770      	bx	lr
 8009ccc:	f000f800 	.word	0xf000f800

08009cd0 <HAL_LTDC_ErrorCallback>:
 8009cd0:	4770      	bx	lr
 8009cd2:	bf00      	nop

08009cd4 <HAL_LTDC_ReloadEventCallback>:
 8009cd4:	4770      	bx	lr
 8009cd6:	bf00      	nop

08009cd8 <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8009cd8:	6803      	ldr	r3, [r0, #0]
{
 8009cda:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8009cdc:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8009cde:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8009ce0:	076a      	lsls	r2, r5, #29
{
 8009ce2:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8009ce4:	d501      	bpl.n	8009cea <HAL_LTDC_IRQHandler+0x12>
 8009ce6:	0771      	lsls	r1, r6, #29
 8009ce8:	d41d      	bmi.n	8009d26 <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8009cea:	07aa      	lsls	r2, r5, #30
 8009cec:	d501      	bpl.n	8009cf2 <HAL_LTDC_IRQHandler+0x1a>
 8009cee:	07b3      	lsls	r3, r6, #30
 8009cf0:	d42d      	bmi.n	8009d4e <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8009cf2:	07e8      	lsls	r0, r5, #31
 8009cf4:	d501      	bpl.n	8009cfa <HAL_LTDC_IRQHandler+0x22>
 8009cf6:	07f1      	lsls	r1, r6, #31
 8009cf8:	d440      	bmi.n	8009d7c <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8009cfa:	072a      	lsls	r2, r5, #28
 8009cfc:	d501      	bpl.n	8009d02 <HAL_LTDC_IRQHandler+0x2a>
 8009cfe:	0733      	lsls	r3, r6, #28
 8009d00:	d400      	bmi.n	8009d04 <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 8009d02:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8009d04:	6823      	ldr	r3, [r4, #0]
 8009d06:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8009d08:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8009d0a:	f022 0208 	bic.w	r2, r2, #8
 8009d0e:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 8009d10:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8009d12:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 8009d14:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8009d16:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8009d1a:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8009d1e:	4620      	mov	r0, r4
 8009d20:	f7ff ffd8 	bl	8009cd4 <HAL_LTDC_ReloadEventCallback>
}
 8009d24:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8009d26:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8009d28:	f022 0204 	bic.w	r2, r2, #4
 8009d2c:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8009d2e:	2204      	movs	r2, #4
 8009d30:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8009d32:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8009d36:	f043 0301 	orr.w	r3, r3, #1
 8009d3a:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 8009d3e:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8009d40:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8009d44:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8009d48:	f7ff ffc2 	bl	8009cd0 <HAL_LTDC_ErrorCallback>
 8009d4c:	e7cd      	b.n	8009cea <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8009d4e:	6823      	ldr	r3, [r4, #0]
 8009d50:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8009d52:	f022 0202 	bic.w	r2, r2, #2
 8009d56:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8009d58:	2202      	movs	r2, #2
 8009d5a:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8009d5c:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8009d60:	f043 0302 	orr.w	r3, r3, #2
 8009d64:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8009d68:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 8009d6a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8009d6c:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8009d70:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8009d74:	4620      	mov	r0, r4
 8009d76:	f7ff ffab 	bl	8009cd0 <HAL_LTDC_ErrorCallback>
 8009d7a:	e7ba      	b.n	8009cf2 <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8009d7c:	6823      	ldr	r3, [r4, #0]
 8009d7e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8009d80:	f022 0201 	bic.w	r2, r2, #1
 8009d84:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8009d86:	2201      	movs	r2, #1
 8009d88:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 8009d8a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8009d8c:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8009d90:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8009d94:	4620      	mov	r0, r4
 8009d96:	f7f7 fac5 	bl	8001324 <HAL_LTDC_LineEventCallback>
 8009d9a:	e7ae      	b.n	8009cfa <HAL_LTDC_IRQHandler+0x22>

08009d9c <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 8009d9c:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8009da0:	2b01      	cmp	r3, #1
 8009da2:	f000 80c2 	beq.w	8009f2a <HAL_LTDC_ConfigLayer+0x18e>
{
 8009da6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8009daa:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8009dae:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8009db2:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8009db6:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8009db8:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8009dba:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8009dbe:	f102 0684 	add.w	r6, r2, #132	; 0x84
 8009dc2:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8009dc6:	f8d9 300c 	ldr.w	r3, [r9, #12]
 8009dca:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8009dce:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 8009dd2:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8009dd4:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8009dd8:	460c      	mov	r4, r1
 8009dda:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8009ddc:	9301      	str	r3, [sp, #4]
 8009dde:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8009de0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8009de2:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 8009de6:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 8009dea:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8009dec:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8009dee:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 8009df2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8009df4:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 8009df8:	6823      	ldr	r3, [r4, #0]
 8009dfa:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8009dfe:	9b01      	ldr	r3, [sp, #4]
 8009e00:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8009e04:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8009e08:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8009e0a:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8009e0c:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8009e10:	1c51      	adds	r1, r2, #1
 8009e12:	f3c3 430b 	ubfx	r3, r3, #16, #12
 8009e16:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8009e18:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8009e1a:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8009e1e:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8009e22:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8009e26:	f8dc 3008 	ldr.w	r3, [ip, #8]
 8009e2a:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 8009e2e:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8009e32:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8009e36:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8009e38:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8009e3a:	f8d9 000c 	ldr.w	r0, [r9, #12]
 8009e3e:	3301      	adds	r3, #1
 8009e40:	f3c0 000a 	ubfx	r0, r0, #0, #11
 8009e44:	4403      	add	r3, r0
 8009e46:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8009e4a:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8009e4e:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8009e52:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8009e54:	f023 0307 	bic.w	r3, r3, #7
 8009e58:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8009e5c:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8009e60:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8009e64:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8009e68:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8009e6c:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8009e70:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8009e74:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 8009e78:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 8009e7c:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 8009e80:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8009e84:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8009e88:	f8dc 3014 	ldr.w	r3, [ip, #20]
 8009e8c:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 8009e90:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8009e94:	696b      	ldr	r3, [r5, #20]
 8009e96:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8009e9a:	f8dc 301c 	ldr.w	r3, [ip, #28]
 8009e9e:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8009ea2:	f023 0307 	bic.w	r3, r3, #7
 8009ea6:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8009eaa:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 8009eae:	4303      	orrs	r3, r0
 8009eb0:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8009eb4:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8009eb8:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8009eba:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8009ebe:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8009ec2:	bb69      	cbnz	r1, 8009f20 <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 8009ec4:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8009ec6:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8009ec8:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8009eca:	fb03 f707 	mul.w	r7, r3, r7
 8009ece:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8009ed0:	fb02 f303 	mul.w	r3, r2, r3
 8009ed4:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8009ed8:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8009edc:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8009ede:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 8009ee2:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8009ee6:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8009eea:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 8009eee:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8009ef2:	f023 0307 	bic.w	r3, r3, #7
 8009ef6:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8009efa:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8009efe:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8009f02:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8009f04:	4313      	orrs	r3, r2
 8009f06:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 8009f0a:	2300      	movs	r3, #0
  return HAL_OK;
 8009f0c:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8009f0e:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8009f12:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8009f16:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 8009f1a:	b003      	add	sp, #12
 8009f1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8009f20:	3901      	subs	r1, #1
 8009f22:	2906      	cmp	r1, #6
 8009f24:	d903      	bls.n	8009f2e <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8009f26:	2301      	movs	r3, #1
 8009f28:	e7cd      	b.n	8009ec6 <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 8009f2a:	2002      	movs	r0, #2
}
 8009f2c:	4770      	bx	lr
 8009f2e:	4b02      	ldr	r3, [pc, #8]	; (8009f38 <HAL_LTDC_ConfigLayer+0x19c>)
 8009f30:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8009f34:	e7c7      	b.n	8009ec6 <HAL_LTDC_ConfigLayer+0x12a>
 8009f36:	bf00      	nop
 8009f38:	0802b044 	.word	0x0802b044

08009f3c <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8009f3c:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8009f40:	2b01      	cmp	r3, #1
 8009f42:	d019      	beq.n	8009f78 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8009f44:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8009f46:	2302      	movs	r3, #2
{
 8009f48:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8009f4a:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8009f4e:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8009f50:	4c0a      	ldr	r4, [pc, #40]	; (8009f7c <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8009f52:	f023 0301 	bic.w	r3, r3, #1
 8009f56:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8009f58:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8009f5a:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 8009f5c:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8009f5e:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 8009f62:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8009f66:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 8009f68:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8009f6c:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 8009f70:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 8009f74:	4618      	mov	r0, r3
}
 8009f76:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 8009f78:	2002      	movs	r0, #2
}
 8009f7a:	4770      	bx	lr
 8009f7c:	40016800 	.word	0x40016800

08009f80 <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8009f80:	2800      	cmp	r0, #0
 8009f82:	f000 81a2 	beq.w	800a2ca <HAL_RCC_OscConfig+0x34a>
{
 8009f86:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8009f8a:	6803      	ldr	r3, [r0, #0]
 8009f8c:	07dd      	lsls	r5, r3, #31
{
 8009f8e:	b082      	sub	sp, #8
 8009f90:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8009f92:	d52f      	bpl.n	8009ff4 <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8009f94:	499e      	ldr	r1, [pc, #632]	; (800a210 <HAL_RCC_OscConfig+0x290>)
 8009f96:	688a      	ldr	r2, [r1, #8]
 8009f98:	f002 020c 	and.w	r2, r2, #12
 8009f9c:	2a04      	cmp	r2, #4
 8009f9e:	f000 80ed 	beq.w	800a17c <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8009fa2:	688a      	ldr	r2, [r1, #8]
 8009fa4:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8009fa8:	2a08      	cmp	r2, #8
 8009faa:	f000 80e3 	beq.w	800a174 <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8009fae:	6863      	ldr	r3, [r4, #4]
 8009fb0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8009fb4:	f000 80ec 	beq.w	800a190 <HAL_RCC_OscConfig+0x210>
 8009fb8:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8009fbc:	f000 8175 	beq.w	800a2aa <HAL_RCC_OscConfig+0x32a>
 8009fc0:	4d93      	ldr	r5, [pc, #588]	; (800a210 <HAL_RCC_OscConfig+0x290>)
 8009fc2:	682a      	ldr	r2, [r5, #0]
 8009fc4:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8009fc8:	602a      	str	r2, [r5, #0]
 8009fca:	682a      	ldr	r2, [r5, #0]
 8009fcc:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8009fd0:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8009fd2:	2b00      	cmp	r3, #0
 8009fd4:	f040 80e1 	bne.w	800a19a <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8009fd8:	f7fd fe94 	bl	8007d04 <HAL_GetTick>
 8009fdc:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8009fde:	e005      	b.n	8009fec <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8009fe0:	f7fd fe90 	bl	8007d04 <HAL_GetTick>
 8009fe4:	1b80      	subs	r0, r0, r6
 8009fe6:	2864      	cmp	r0, #100	; 0x64
 8009fe8:	f200 8101 	bhi.w	800a1ee <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8009fec:	682b      	ldr	r3, [r5, #0]
 8009fee:	039b      	lsls	r3, r3, #14
 8009ff0:	d4f6      	bmi.n	8009fe0 <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8009ff2:	6823      	ldr	r3, [r4, #0]
 8009ff4:	079f      	lsls	r7, r3, #30
 8009ff6:	d528      	bpl.n	800a04a <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8009ff8:	4a85      	ldr	r2, [pc, #532]	; (800a210 <HAL_RCC_OscConfig+0x290>)
 8009ffa:	6891      	ldr	r1, [r2, #8]
 8009ffc:	f011 0f0c 	tst.w	r1, #12
 800a000:	f000 8090 	beq.w	800a124 <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800a004:	6891      	ldr	r1, [r2, #8]
 800a006:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800a00a:	2908      	cmp	r1, #8
 800a00c:	f000 8086 	beq.w	800a11c <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800a010:	68e3      	ldr	r3, [r4, #12]
 800a012:	2b00      	cmp	r3, #0
 800a014:	f000 810e 	beq.w	800a234 <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800a018:	4b7e      	ldr	r3, [pc, #504]	; (800a214 <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800a01a:	4e7d      	ldr	r6, [pc, #500]	; (800a210 <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 800a01c:	2201      	movs	r2, #1
 800a01e:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800a020:	f7fd fe70 	bl	8007d04 <HAL_GetTick>
 800a024:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800a026:	e005      	b.n	800a034 <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800a028:	f7fd fe6c 	bl	8007d04 <HAL_GetTick>
 800a02c:	1b40      	subs	r0, r0, r5
 800a02e:	2802      	cmp	r0, #2
 800a030:	f200 80dd 	bhi.w	800a1ee <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800a034:	6833      	ldr	r3, [r6, #0]
 800a036:	0798      	lsls	r0, r3, #30
 800a038:	d5f6      	bpl.n	800a028 <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800a03a:	6833      	ldr	r3, [r6, #0]
 800a03c:	6922      	ldr	r2, [r4, #16]
 800a03e:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800a042:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800a046:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800a048:	6823      	ldr	r3, [r4, #0]
 800a04a:	071a      	lsls	r2, r3, #28
 800a04c:	d451      	bmi.n	800a0f2 <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800a04e:	0758      	lsls	r0, r3, #29
 800a050:	d52f      	bpl.n	800a0b2 <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800a052:	4a6f      	ldr	r2, [pc, #444]	; (800a210 <HAL_RCC_OscConfig+0x290>)
 800a054:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800a056:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 800a05a:	d07f      	beq.n	800a15c <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 800a05c:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800a05e:	4e6e      	ldr	r6, [pc, #440]	; (800a218 <HAL_RCC_OscConfig+0x298>)
 800a060:	6833      	ldr	r3, [r6, #0]
 800a062:	05d9      	lsls	r1, r3, #23
 800a064:	f140 80b3 	bpl.w	800a1ce <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800a068:	68a3      	ldr	r3, [r4, #8]
 800a06a:	2b01      	cmp	r3, #1
 800a06c:	f000 80c3 	beq.w	800a1f6 <HAL_RCC_OscConfig+0x276>
 800a070:	2b05      	cmp	r3, #5
 800a072:	f000 812c 	beq.w	800a2ce <HAL_RCC_OscConfig+0x34e>
 800a076:	4e66      	ldr	r6, [pc, #408]	; (800a210 <HAL_RCC_OscConfig+0x290>)
 800a078:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800a07a:	f022 0201 	bic.w	r2, r2, #1
 800a07e:	6732      	str	r2, [r6, #112]	; 0x70
 800a080:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800a082:	f022 0204 	bic.w	r2, r2, #4
 800a086:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800a088:	2b00      	cmp	r3, #0
 800a08a:	f040 80b9 	bne.w	800a200 <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800a08e:	f7fd fe39 	bl	8007d04 <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800a092:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800a096:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800a098:	e005      	b.n	800a0a6 <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800a09a:	f7fd fe33 	bl	8007d04 <HAL_GetTick>
 800a09e:	1bc0      	subs	r0, r0, r7
 800a0a0:	4540      	cmp	r0, r8
 800a0a2:	f200 80a4 	bhi.w	800a1ee <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800a0a6:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800a0a8:	0798      	lsls	r0, r3, #30
 800a0aa:	d4f6      	bmi.n	800a09a <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800a0ac:	2d00      	cmp	r5, #0
 800a0ae:	f040 8106 	bne.w	800a2be <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800a0b2:	69a0      	ldr	r0, [r4, #24]
 800a0b4:	b1c8      	cbz	r0, 800a0ea <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800a0b6:	4d56      	ldr	r5, [pc, #344]	; (800a210 <HAL_RCC_OscConfig+0x290>)
 800a0b8:	68ab      	ldr	r3, [r5, #8]
 800a0ba:	f003 030c 	and.w	r3, r3, #12
 800a0be:	2b08      	cmp	r3, #8
 800a0c0:	f000 80c9 	beq.w	800a256 <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800a0c4:	4b53      	ldr	r3, [pc, #332]	; (800a214 <HAL_RCC_OscConfig+0x294>)
 800a0c6:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800a0c8:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800a0ca:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800a0cc:	f000 8109 	beq.w	800a2e2 <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800a0d0:	f7fd fe18 	bl	8007d04 <HAL_GetTick>
 800a0d4:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800a0d6:	e005      	b.n	800a0e4 <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800a0d8:	f7fd fe14 	bl	8007d04 <HAL_GetTick>
 800a0dc:	1b00      	subs	r0, r0, r4
 800a0de:	2802      	cmp	r0, #2
 800a0e0:	f200 8085 	bhi.w	800a1ee <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800a0e4:	682b      	ldr	r3, [r5, #0]
 800a0e6:	019b      	lsls	r3, r3, #6
 800a0e8:	d4f6      	bmi.n	800a0d8 <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800a0ea:	2000      	movs	r0, #0
}
 800a0ec:	b002      	add	sp, #8
 800a0ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800a0f2:	6963      	ldr	r3, [r4, #20]
 800a0f4:	b30b      	cbz	r3, 800a13a <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 800a0f6:	4b47      	ldr	r3, [pc, #284]	; (800a214 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800a0f8:	4e45      	ldr	r6, [pc, #276]	; (800a210 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 800a0fa:	2201      	movs	r2, #1
 800a0fc:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800a100:	f7fd fe00 	bl	8007d04 <HAL_GetTick>
 800a104:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800a106:	e004      	b.n	800a112 <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800a108:	f7fd fdfc 	bl	8007d04 <HAL_GetTick>
 800a10c:	1b40      	subs	r0, r0, r5
 800a10e:	2802      	cmp	r0, #2
 800a110:	d86d      	bhi.n	800a1ee <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800a112:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800a114:	079b      	lsls	r3, r3, #30
 800a116:	d5f7      	bpl.n	800a108 <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800a118:	6823      	ldr	r3, [r4, #0]
 800a11a:	e798      	b.n	800a04e <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800a11c:	6852      	ldr	r2, [r2, #4]
 800a11e:	0256      	lsls	r6, r2, #9
 800a120:	f53f af76 	bmi.w	800a010 <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800a124:	4a3a      	ldr	r2, [pc, #232]	; (800a210 <HAL_RCC_OscConfig+0x290>)
 800a126:	6812      	ldr	r2, [r2, #0]
 800a128:	0795      	lsls	r5, r2, #30
 800a12a:	d544      	bpl.n	800a1b6 <HAL_RCC_OscConfig+0x236>
 800a12c:	68e2      	ldr	r2, [r4, #12]
 800a12e:	2a01      	cmp	r2, #1
 800a130:	d041      	beq.n	800a1b6 <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 800a132:	2001      	movs	r0, #1
}
 800a134:	b002      	add	sp, #8
 800a136:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800a13a:	4a36      	ldr	r2, [pc, #216]	; (800a214 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800a13c:	4e34      	ldr	r6, [pc, #208]	; (800a210 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 800a13e:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800a142:	f7fd fddf 	bl	8007d04 <HAL_GetTick>
 800a146:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800a148:	e004      	b.n	800a154 <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800a14a:	f7fd fddb 	bl	8007d04 <HAL_GetTick>
 800a14e:	1b40      	subs	r0, r0, r5
 800a150:	2802      	cmp	r0, #2
 800a152:	d84c      	bhi.n	800a1ee <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800a154:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800a156:	079f      	lsls	r7, r3, #30
 800a158:	d4f7      	bmi.n	800a14a <HAL_RCC_OscConfig+0x1ca>
 800a15a:	e7dd      	b.n	800a118 <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800a15c:	9301      	str	r3, [sp, #4]
 800a15e:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800a160:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800a164:	6413      	str	r3, [r2, #64]	; 0x40
 800a166:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800a168:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800a16c:	9301      	str	r3, [sp, #4]
 800a16e:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800a170:	2501      	movs	r5, #1
 800a172:	e774      	b.n	800a05e <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800a174:	684a      	ldr	r2, [r1, #4]
 800a176:	0250      	lsls	r0, r2, #9
 800a178:	f57f af19 	bpl.w	8009fae <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800a17c:	4a24      	ldr	r2, [pc, #144]	; (800a210 <HAL_RCC_OscConfig+0x290>)
 800a17e:	6812      	ldr	r2, [r2, #0]
 800a180:	0391      	lsls	r1, r2, #14
 800a182:	f57f af37 	bpl.w	8009ff4 <HAL_RCC_OscConfig+0x74>
 800a186:	6862      	ldr	r2, [r4, #4]
 800a188:	2a00      	cmp	r2, #0
 800a18a:	f47f af33 	bne.w	8009ff4 <HAL_RCC_OscConfig+0x74>
 800a18e:	e7d0      	b.n	800a132 <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800a190:	4a1f      	ldr	r2, [pc, #124]	; (800a210 <HAL_RCC_OscConfig+0x290>)
 800a192:	6813      	ldr	r3, [r2, #0]
 800a194:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800a198:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800a19a:	f7fd fdb3 	bl	8007d04 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800a19e:	4e1c      	ldr	r6, [pc, #112]	; (800a210 <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 800a1a0:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800a1a2:	e004      	b.n	800a1ae <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800a1a4:	f7fd fdae 	bl	8007d04 <HAL_GetTick>
 800a1a8:	1b40      	subs	r0, r0, r5
 800a1aa:	2864      	cmp	r0, #100	; 0x64
 800a1ac:	d81f      	bhi.n	800a1ee <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800a1ae:	6833      	ldr	r3, [r6, #0]
 800a1b0:	039a      	lsls	r2, r3, #14
 800a1b2:	d5f7      	bpl.n	800a1a4 <HAL_RCC_OscConfig+0x224>
 800a1b4:	e71d      	b.n	8009ff2 <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800a1b6:	4916      	ldr	r1, [pc, #88]	; (800a210 <HAL_RCC_OscConfig+0x290>)
 800a1b8:	6920      	ldr	r0, [r4, #16]
 800a1ba:	680a      	ldr	r2, [r1, #0]
 800a1bc:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800a1c0:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800a1c4:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800a1c6:	071a      	lsls	r2, r3, #28
 800a1c8:	f57f af41 	bpl.w	800a04e <HAL_RCC_OscConfig+0xce>
 800a1cc:	e791      	b.n	800a0f2 <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800a1ce:	6833      	ldr	r3, [r6, #0]
 800a1d0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800a1d4:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800a1d6:	f7fd fd95 	bl	8007d04 <HAL_GetTick>
 800a1da:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800a1dc:	6833      	ldr	r3, [r6, #0]
 800a1de:	05da      	lsls	r2, r3, #23
 800a1e0:	f53f af42 	bmi.w	800a068 <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800a1e4:	f7fd fd8e 	bl	8007d04 <HAL_GetTick>
 800a1e8:	1bc0      	subs	r0, r0, r7
 800a1ea:	2802      	cmp	r0, #2
 800a1ec:	d9f6      	bls.n	800a1dc <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 800a1ee:	2003      	movs	r0, #3
}
 800a1f0:	b002      	add	sp, #8
 800a1f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800a1f6:	4a06      	ldr	r2, [pc, #24]	; (800a210 <HAL_RCC_OscConfig+0x290>)
 800a1f8:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800a1fa:	f043 0301 	orr.w	r3, r3, #1
 800a1fe:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 800a200:	f7fd fd80 	bl	8007d04 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800a204:	4f02      	ldr	r7, [pc, #8]	; (800a210 <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 800a206:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800a208:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800a20c:	e00b      	b.n	800a226 <HAL_RCC_OscConfig+0x2a6>
 800a20e:	bf00      	nop
 800a210:	40023800 	.word	0x40023800
 800a214:	42470000 	.word	0x42470000
 800a218:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800a21c:	f7fd fd72 	bl	8007d04 <HAL_GetTick>
 800a220:	1b80      	subs	r0, r0, r6
 800a222:	4540      	cmp	r0, r8
 800a224:	d8e3      	bhi.n	800a1ee <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800a226:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800a228:	079b      	lsls	r3, r3, #30
 800a22a:	d5f7      	bpl.n	800a21c <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 800a22c:	2d00      	cmp	r5, #0
 800a22e:	f43f af40 	beq.w	800a0b2 <HAL_RCC_OscConfig+0x132>
 800a232:	e044      	b.n	800a2be <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 800a234:	4a42      	ldr	r2, [pc, #264]	; (800a340 <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800a236:	4e43      	ldr	r6, [pc, #268]	; (800a344 <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 800a238:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800a23a:	f7fd fd63 	bl	8007d04 <HAL_GetTick>
 800a23e:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800a240:	e004      	b.n	800a24c <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800a242:	f7fd fd5f 	bl	8007d04 <HAL_GetTick>
 800a246:	1b40      	subs	r0, r0, r5
 800a248:	2802      	cmp	r0, #2
 800a24a:	d8d0      	bhi.n	800a1ee <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800a24c:	6833      	ldr	r3, [r6, #0]
 800a24e:	0799      	lsls	r1, r3, #30
 800a250:	d4f7      	bmi.n	800a242 <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800a252:	6823      	ldr	r3, [r4, #0]
 800a254:	e6f9      	b.n	800a04a <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800a256:	2801      	cmp	r0, #1
 800a258:	f43f af48 	beq.w	800a0ec <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 800a25c:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800a25e:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800a260:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800a264:	4291      	cmp	r1, r2
 800a266:	f47f af64 	bne.w	800a132 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800a26a:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800a26c:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800a270:	4291      	cmp	r1, r2
 800a272:	f47f af5e 	bne.w	800a132 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800a276:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800a278:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800a27c:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800a27e:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800a282:	f47f af56 	bne.w	800a132 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800a286:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800a288:	0852      	lsrs	r2, r2, #1
 800a28a:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800a28e:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800a290:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800a294:	f47f af4d 	bne.w	800a132 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800a298:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a29a:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800a29e:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 800a2a2:	bf14      	ite	ne
 800a2a4:	2001      	movne	r0, #1
 800a2a6:	2000      	moveq	r0, #0
 800a2a8:	e720      	b.n	800a0ec <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800a2aa:	4b26      	ldr	r3, [pc, #152]	; (800a344 <HAL_RCC_OscConfig+0x3c4>)
 800a2ac:	681a      	ldr	r2, [r3, #0]
 800a2ae:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800a2b2:	601a      	str	r2, [r3, #0]
 800a2b4:	681a      	ldr	r2, [r3, #0]
 800a2b6:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800a2ba:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800a2bc:	e76d      	b.n	800a19a <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 800a2be:	4a21      	ldr	r2, [pc, #132]	; (800a344 <HAL_RCC_OscConfig+0x3c4>)
 800a2c0:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800a2c2:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800a2c6:	6413      	str	r3, [r2, #64]	; 0x40
 800a2c8:	e6f3      	b.n	800a0b2 <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 800a2ca:	2001      	movs	r0, #1
}
 800a2cc:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800a2ce:	4b1d      	ldr	r3, [pc, #116]	; (800a344 <HAL_RCC_OscConfig+0x3c4>)
 800a2d0:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800a2d2:	f042 0204 	orr.w	r2, r2, #4
 800a2d6:	671a      	str	r2, [r3, #112]	; 0x70
 800a2d8:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800a2da:	f042 0201 	orr.w	r2, r2, #1
 800a2de:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800a2e0:	e78e      	b.n	800a200 <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 800a2e2:	f7fd fd0f 	bl	8007d04 <HAL_GetTick>
 800a2e6:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800a2e8:	e005      	b.n	800a2f6 <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800a2ea:	f7fd fd0b 	bl	8007d04 <HAL_GetTick>
 800a2ee:	1b80      	subs	r0, r0, r6
 800a2f0:	2802      	cmp	r0, #2
 800a2f2:	f63f af7c 	bhi.w	800a1ee <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800a2f6:	682b      	ldr	r3, [r5, #0]
 800a2f8:	0199      	lsls	r1, r3, #6
 800a2fa:	d4f6      	bmi.n	800a2ea <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800a2fc:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800a300:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a302:	430b      	orrs	r3, r1
 800a304:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800a308:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800a30c:	0852      	lsrs	r2, r2, #1
 800a30e:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800a312:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800a314:	490a      	ldr	r1, [pc, #40]	; (800a340 <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800a316:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800a31a:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800a31c:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800a31e:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 800a320:	f7fd fcf0 	bl	8007d04 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800a324:	4d07      	ldr	r5, [pc, #28]	; (800a344 <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 800a326:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800a328:	e005      	b.n	800a336 <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800a32a:	f7fd fceb 	bl	8007d04 <HAL_GetTick>
 800a32e:	1b00      	subs	r0, r0, r4
 800a330:	2802      	cmp	r0, #2
 800a332:	f63f af5c 	bhi.w	800a1ee <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800a336:	682b      	ldr	r3, [r5, #0]
 800a338:	019a      	lsls	r2, r3, #6
 800a33a:	d5f6      	bpl.n	800a32a <HAL_RCC_OscConfig+0x3aa>
 800a33c:	e6d5      	b.n	800a0ea <HAL_RCC_OscConfig+0x16a>
 800a33e:	bf00      	nop
 800a340:	42470000 	.word	0x42470000
 800a344:	40023800 	.word	0x40023800

0800a348 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800a348:	4916      	ldr	r1, [pc, #88]	; (800a3a4 <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800a34a:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800a34c:	688b      	ldr	r3, [r1, #8]
 800a34e:	f003 030c 	and.w	r3, r3, #12
 800a352:	2b04      	cmp	r3, #4
 800a354:	d01b      	beq.n	800a38e <HAL_RCC_GetSysClockFreq+0x46>
 800a356:	2b08      	cmp	r3, #8
 800a358:	d117      	bne.n	800a38a <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800a35a:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800a35c:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800a35e:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800a360:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800a364:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800a368:	d113      	bne.n	800a392 <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800a36a:	480f      	ldr	r0, [pc, #60]	; (800a3a8 <HAL_RCC_GetSysClockFreq+0x60>)
 800a36c:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800a370:	fba1 0100 	umull	r0, r1, r1, r0
 800a374:	f7f5 ff8c 	bl	8000290 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800a378:	4b0a      	ldr	r3, [pc, #40]	; (800a3a4 <HAL_RCC_GetSysClockFreq+0x5c>)
 800a37a:	685b      	ldr	r3, [r3, #4]
 800a37c:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800a380:	3301      	adds	r3, #1
 800a382:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800a384:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800a388:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800a38a:	4807      	ldr	r0, [pc, #28]	; (800a3a8 <HAL_RCC_GetSysClockFreq+0x60>)
}
 800a38c:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800a38e:	4807      	ldr	r0, [pc, #28]	; (800a3ac <HAL_RCC_GetSysClockFreq+0x64>)
}
 800a390:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800a392:	4806      	ldr	r0, [pc, #24]	; (800a3ac <HAL_RCC_GetSysClockFreq+0x64>)
 800a394:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800a398:	2300      	movs	r3, #0
 800a39a:	fba1 0100 	umull	r0, r1, r1, r0
 800a39e:	f7f5 ff77 	bl	8000290 <__aeabi_uldivmod>
 800a3a2:	e7e9      	b.n	800a378 <HAL_RCC_GetSysClockFreq+0x30>
 800a3a4:	40023800 	.word	0x40023800
 800a3a8:	00f42400 	.word	0x00f42400
 800a3ac:	007a1200 	.word	0x007a1200

0800a3b0 <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800a3b0:	2800      	cmp	r0, #0
 800a3b2:	f000 8087 	beq.w	800a4c4 <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800a3b6:	4a48      	ldr	r2, [pc, #288]	; (800a4d8 <HAL_RCC_ClockConfig+0x128>)
 800a3b8:	6813      	ldr	r3, [r2, #0]
 800a3ba:	f003 030f 	and.w	r3, r3, #15
 800a3be:	428b      	cmp	r3, r1
{
 800a3c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a3c4:	460d      	mov	r5, r1
 800a3c6:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800a3c8:	d209      	bcs.n	800a3de <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800a3ca:	b2cb      	uxtb	r3, r1
 800a3cc:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800a3ce:	6813      	ldr	r3, [r2, #0]
 800a3d0:	f003 030f 	and.w	r3, r3, #15
 800a3d4:	428b      	cmp	r3, r1
 800a3d6:	d002      	beq.n	800a3de <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800a3d8:	2001      	movs	r0, #1
}
 800a3da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800a3de:	6823      	ldr	r3, [r4, #0]
 800a3e0:	0798      	lsls	r0, r3, #30
 800a3e2:	d514      	bpl.n	800a40e <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800a3e4:	0759      	lsls	r1, r3, #29
 800a3e6:	d504      	bpl.n	800a3f2 <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800a3e8:	493c      	ldr	r1, [pc, #240]	; (800a4dc <HAL_RCC_ClockConfig+0x12c>)
 800a3ea:	688a      	ldr	r2, [r1, #8]
 800a3ec:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800a3f0:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800a3f2:	071a      	lsls	r2, r3, #28
 800a3f4:	d504      	bpl.n	800a400 <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800a3f6:	4939      	ldr	r1, [pc, #228]	; (800a4dc <HAL_RCC_ClockConfig+0x12c>)
 800a3f8:	688a      	ldr	r2, [r1, #8]
 800a3fa:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800a3fe:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800a400:	4936      	ldr	r1, [pc, #216]	; (800a4dc <HAL_RCC_ClockConfig+0x12c>)
 800a402:	68a0      	ldr	r0, [r4, #8]
 800a404:	688a      	ldr	r2, [r1, #8]
 800a406:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800a40a:	4302      	orrs	r2, r0
 800a40c:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800a40e:	07df      	lsls	r7, r3, #31
 800a410:	d521      	bpl.n	800a456 <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800a412:	6862      	ldr	r2, [r4, #4]
 800a414:	2a01      	cmp	r2, #1
 800a416:	d057      	beq.n	800a4c8 <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800a418:	1e93      	subs	r3, r2, #2
 800a41a:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800a41c:	4b2f      	ldr	r3, [pc, #188]	; (800a4dc <HAL_RCC_ClockConfig+0x12c>)
 800a41e:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800a420:	d94d      	bls.n	800a4be <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800a422:	0799      	lsls	r1, r3, #30
 800a424:	d5d8      	bpl.n	800a3d8 <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800a426:	4e2d      	ldr	r6, [pc, #180]	; (800a4dc <HAL_RCC_ClockConfig+0x12c>)
 800a428:	68b3      	ldr	r3, [r6, #8]
 800a42a:	f023 0303 	bic.w	r3, r3, #3
 800a42e:	4313      	orrs	r3, r2
 800a430:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800a432:	f7fd fc67 	bl	8007d04 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800a436:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800a43a:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800a43c:	e004      	b.n	800a448 <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800a43e:	f7fd fc61 	bl	8007d04 <HAL_GetTick>
 800a442:	1bc0      	subs	r0, r0, r7
 800a444:	4540      	cmp	r0, r8
 800a446:	d844      	bhi.n	800a4d2 <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800a448:	68b3      	ldr	r3, [r6, #8]
 800a44a:	6862      	ldr	r2, [r4, #4]
 800a44c:	f003 030c 	and.w	r3, r3, #12
 800a450:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800a454:	d1f3      	bne.n	800a43e <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800a456:	4a20      	ldr	r2, [pc, #128]	; (800a4d8 <HAL_RCC_ClockConfig+0x128>)
 800a458:	6813      	ldr	r3, [r2, #0]
 800a45a:	f003 030f 	and.w	r3, r3, #15
 800a45e:	42ab      	cmp	r3, r5
 800a460:	d906      	bls.n	800a470 <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800a462:	b2eb      	uxtb	r3, r5
 800a464:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800a466:	6813      	ldr	r3, [r2, #0]
 800a468:	f003 030f 	and.w	r3, r3, #15
 800a46c:	42ab      	cmp	r3, r5
 800a46e:	d1b3      	bne.n	800a3d8 <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800a470:	6823      	ldr	r3, [r4, #0]
 800a472:	075a      	lsls	r2, r3, #29
 800a474:	d506      	bpl.n	800a484 <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800a476:	4919      	ldr	r1, [pc, #100]	; (800a4dc <HAL_RCC_ClockConfig+0x12c>)
 800a478:	68e0      	ldr	r0, [r4, #12]
 800a47a:	688a      	ldr	r2, [r1, #8]
 800a47c:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800a480:	4302      	orrs	r2, r0
 800a482:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800a484:	071b      	lsls	r3, r3, #28
 800a486:	d507      	bpl.n	800a498 <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800a488:	4a14      	ldr	r2, [pc, #80]	; (800a4dc <HAL_RCC_ClockConfig+0x12c>)
 800a48a:	6921      	ldr	r1, [r4, #16]
 800a48c:	6893      	ldr	r3, [r2, #8]
 800a48e:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800a492:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800a496:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800a498:	f7ff ff56 	bl	800a348 <HAL_RCC_GetSysClockFreq>
 800a49c:	4a0f      	ldr	r2, [pc, #60]	; (800a4dc <HAL_RCC_ClockConfig+0x12c>)
 800a49e:	4c10      	ldr	r4, [pc, #64]	; (800a4e0 <HAL_RCC_ClockConfig+0x130>)
 800a4a0:	6892      	ldr	r2, [r2, #8]
 800a4a2:	4910      	ldr	r1, [pc, #64]	; (800a4e4 <HAL_RCC_ClockConfig+0x134>)
 800a4a4:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800a4a8:	4603      	mov	r3, r0
 800a4aa:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800a4ac:	480e      	ldr	r0, [pc, #56]	; (800a4e8 <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800a4ae:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800a4b0:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800a4b2:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800a4b4:	f7f7 fddc 	bl	8002070 <HAL_InitTick>
  return HAL_OK;
 800a4b8:	2000      	movs	r0, #0
}
 800a4ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800a4be:	0198      	lsls	r0, r3, #6
 800a4c0:	d4b1      	bmi.n	800a426 <HAL_RCC_ClockConfig+0x76>
 800a4c2:	e789      	b.n	800a3d8 <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800a4c4:	2001      	movs	r0, #1
}
 800a4c6:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800a4c8:	4b04      	ldr	r3, [pc, #16]	; (800a4dc <HAL_RCC_ClockConfig+0x12c>)
 800a4ca:	681b      	ldr	r3, [r3, #0]
 800a4cc:	039e      	lsls	r6, r3, #14
 800a4ce:	d4aa      	bmi.n	800a426 <HAL_RCC_ClockConfig+0x76>
 800a4d0:	e782      	b.n	800a3d8 <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800a4d2:	2003      	movs	r0, #3
 800a4d4:	e781      	b.n	800a3da <HAL_RCC_ClockConfig+0x2a>
 800a4d6:	bf00      	nop
 800a4d8:	40023c00 	.word	0x40023c00
 800a4dc:	40023800 	.word	0x40023800
 800a4e0:	0802b02c 	.word	0x0802b02c
 800a4e4:	20000078 	.word	0x20000078
 800a4e8:	20000080 	.word	0x20000080

0800a4ec <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800a4ec:	4b04      	ldr	r3, [pc, #16]	; (800a500 <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800a4ee:	4905      	ldr	r1, [pc, #20]	; (800a504 <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800a4f0:	689b      	ldr	r3, [r3, #8]
 800a4f2:	4a05      	ldr	r2, [pc, #20]	; (800a508 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800a4f4:	6808      	ldr	r0, [r1, #0]
 800a4f6:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800a4fa:	5cd3      	ldrb	r3, [r2, r3]
}
 800a4fc:	40d8      	lsrs	r0, r3
 800a4fe:	4770      	bx	lr
 800a500:	40023800 	.word	0x40023800
 800a504:	20000078 	.word	0x20000078
 800a508:	0802b03c 	.word	0x0802b03c

0800a50c <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800a50c:	4b0e      	ldr	r3, [pc, #56]	; (800a548 <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800a50e:	220f      	movs	r2, #15
 800a510:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800a512:	689a      	ldr	r2, [r3, #8]
 800a514:	f002 0203 	and.w	r2, r2, #3
 800a518:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800a51a:	689a      	ldr	r2, [r3, #8]
 800a51c:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800a520:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800a522:	689a      	ldr	r2, [r3, #8]
 800a524:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800a528:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800a52a:	689b      	ldr	r3, [r3, #8]
 800a52c:	08db      	lsrs	r3, r3, #3
{
 800a52e:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800a530:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800a534:	4c05      	ldr	r4, [pc, #20]	; (800a54c <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800a536:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800a538:	6823      	ldr	r3, [r4, #0]
}
 800a53a:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800a53e:	f003 030f 	and.w	r3, r3, #15
 800a542:	600b      	str	r3, [r1, #0]
}
 800a544:	4770      	bx	lr
 800a546:	bf00      	nop
 800a548:	40023800 	.word	0x40023800
 800a54c:	40023c00 	.word	0x40023c00

0800a550 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800a550:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800a552:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800a554:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800a558:	b083      	sub	sp, #12
 800a55a:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800a55c:	d111      	bne.n	800a582 <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800a55e:	f013 0f0c 	tst.w	r3, #12
 800a562:	d16f      	bne.n	800a644 <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800a564:	0698      	lsls	r0, r3, #26
 800a566:	f100 80c2 	bmi.w	800a6ee <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800a56a:	f013 0310 	ands.w	r3, r3, #16
 800a56e:	f000 80bb 	beq.w	800a6e8 <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800a572:	4b89      	ldr	r3, [pc, #548]	; (800a798 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800a574:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800a578:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800a57c:	2000      	movs	r0, #0
}
 800a57e:	b003      	add	sp, #12
 800a580:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800a582:	4b86      	ldr	r3, [pc, #536]	; (800a79c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800a584:	4e86      	ldr	r6, [pc, #536]	; (800a7a0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800a586:	2200      	movs	r2, #0
 800a588:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800a58a:	f7fd fbbb 	bl	8007d04 <HAL_GetTick>
 800a58e:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800a590:	e004      	b.n	800a59c <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800a592:	f7fd fbb7 	bl	8007d04 <HAL_GetTick>
 800a596:	1b43      	subs	r3, r0, r5
 800a598:	2b02      	cmp	r3, #2
 800a59a:	d850      	bhi.n	800a63e <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800a59c:	6833      	ldr	r3, [r6, #0]
 800a59e:	0118      	lsls	r0, r3, #4
 800a5a0:	d4f7      	bmi.n	800a592 <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800a5a2:	6823      	ldr	r3, [r4, #0]
 800a5a4:	07d9      	lsls	r1, r3, #31
 800a5a6:	d506      	bpl.n	800a5b6 <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800a5a8:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800a5ac:	0712      	lsls	r2, r2, #28
 800a5ae:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800a5b2:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800a5b6:	079a      	lsls	r2, r3, #30
 800a5b8:	d515      	bpl.n	800a5e6 <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800a5ba:	4979      	ldr	r1, [pc, #484]	; (800a7a0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800a5bc:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800a5be:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800a5c2:	6865      	ldr	r5, [r4, #4]
 800a5c4:	0612      	lsls	r2, r2, #24
 800a5c6:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800a5ca:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800a5ce:	4302      	orrs	r2, r0
 800a5d0:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800a5d4:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800a5d8:	69e2      	ldr	r2, [r4, #28]
 800a5da:	f020 001f 	bic.w	r0, r0, #31
 800a5de:	3a01      	subs	r2, #1
 800a5e0:	4302      	orrs	r2, r0
 800a5e2:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800a5e6:	065b      	lsls	r3, r3, #25
 800a5e8:	d509      	bpl.n	800a5fe <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800a5ea:	1d20      	adds	r0, r4, #4
 800a5ec:	c80b      	ldmia	r0, {r0, r1, r3}
 800a5ee:	061b      	lsls	r3, r3, #24
 800a5f0:	4a6b      	ldr	r2, [pc, #428]	; (800a7a0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800a5f2:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800a5f6:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800a5fa:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800a5fe:	4b67      	ldr	r3, [pc, #412]	; (800a79c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800a600:	4e67      	ldr	r6, [pc, #412]	; (800a7a0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800a602:	2201      	movs	r2, #1
 800a604:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800a606:	f7fd fb7d 	bl	8007d04 <HAL_GetTick>
 800a60a:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800a60c:	e004      	b.n	800a618 <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800a60e:	f7fd fb79 	bl	8007d04 <HAL_GetTick>
 800a612:	1b40      	subs	r0, r0, r5
 800a614:	2802      	cmp	r0, #2
 800a616:	d812      	bhi.n	800a63e <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800a618:	6833      	ldr	r3, [r6, #0]
 800a61a:	011f      	lsls	r7, r3, #4
 800a61c:	d5f7      	bpl.n	800a60e <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800a61e:	6823      	ldr	r3, [r4, #0]
 800a620:	e79d      	b.n	800a55e <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800a622:	f7fd fb6f 	bl	8007d04 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800a626:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800a62a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800a62c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800a62e:	079b      	lsls	r3, r3, #30
 800a630:	f100 80a5 	bmi.w	800a77e <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800a634:	f7fd fb66 	bl	8007d04 <HAL_GetTick>
 800a638:	1b80      	subs	r0, r0, r6
 800a63a:	42b8      	cmp	r0, r7
 800a63c:	d9f6      	bls.n	800a62c <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800a63e:	2003      	movs	r0, #3
}
 800a640:	b003      	add	sp, #12
 800a642:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800a644:	4b55      	ldr	r3, [pc, #340]	; (800a79c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800a646:	4e56      	ldr	r6, [pc, #344]	; (800a7a0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800a648:	2200      	movs	r2, #0
 800a64a:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800a64c:	f7fd fb5a 	bl	8007d04 <HAL_GetTick>
 800a650:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800a652:	e004      	b.n	800a65e <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800a654:	f7fd fb56 	bl	8007d04 <HAL_GetTick>
 800a658:	1b43      	subs	r3, r0, r5
 800a65a:	2b02      	cmp	r3, #2
 800a65c:	d8ef      	bhi.n	800a63e <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800a65e:	6833      	ldr	r3, [r6, #0]
 800a660:	0098      	lsls	r0, r3, #2
 800a662:	d4f7      	bmi.n	800a654 <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800a664:	6822      	ldr	r2, [r4, #0]
 800a666:	0751      	lsls	r1, r2, #29
 800a668:	d515      	bpl.n	800a696 <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800a66a:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800a66c:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800a670:	6920      	ldr	r0, [r4, #16]
 800a672:	061b      	lsls	r3, r3, #24
 800a674:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800a678:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800a67c:	430b      	orrs	r3, r1
 800a67e:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800a682:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800a686:	6a21      	ldr	r1, [r4, #32]
 800a688:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800a68c:	3901      	subs	r1, #1
 800a68e:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800a692:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800a696:	0713      	lsls	r3, r2, #28
 800a698:	d514      	bpl.n	800a6c4 <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800a69a:	4a41      	ldr	r2, [pc, #260]	; (800a7a0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800a69c:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800a69e:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800a6a2:	6920      	ldr	r0, [r4, #16]
 800a6a4:	071b      	lsls	r3, r3, #28
 800a6a6:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800a6aa:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800a6ae:	430b      	orrs	r3, r1
 800a6b0:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800a6b4:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800a6b8:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800a6ba:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800a6be:	430b      	orrs	r3, r1
 800a6c0:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800a6c4:	4b35      	ldr	r3, [pc, #212]	; (800a79c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800a6c6:	4e36      	ldr	r6, [pc, #216]	; (800a7a0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800a6c8:	2201      	movs	r2, #1
 800a6ca:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800a6cc:	f7fd fb1a 	bl	8007d04 <HAL_GetTick>
 800a6d0:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800a6d2:	e004      	b.n	800a6de <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800a6d4:	f7fd fb16 	bl	8007d04 <HAL_GetTick>
 800a6d8:	1b40      	subs	r0, r0, r5
 800a6da:	2802      	cmp	r0, #2
 800a6dc:	d8af      	bhi.n	800a63e <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800a6de:	6833      	ldr	r3, [r6, #0]
 800a6e0:	009f      	lsls	r7, r3, #2
 800a6e2:	d5f7      	bpl.n	800a6d4 <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800a6e4:	6823      	ldr	r3, [r4, #0]
 800a6e6:	e73d      	b.n	800a564 <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800a6e8:	4618      	mov	r0, r3
}
 800a6ea:	b003      	add	sp, #12
 800a6ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800a6ee:	4b2c      	ldr	r3, [pc, #176]	; (800a7a0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800a6f0:	4d2c      	ldr	r5, [pc, #176]	; (800a7a4 <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800a6f2:	2200      	movs	r2, #0
 800a6f4:	9201      	str	r2, [sp, #4]
 800a6f6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800a6f8:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800a6fc:	641a      	str	r2, [r3, #64]	; 0x40
 800a6fe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a700:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800a704:	9301      	str	r3, [sp, #4]
 800a706:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800a708:	682b      	ldr	r3, [r5, #0]
 800a70a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800a70e:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800a710:	f7fd faf8 	bl	8007d04 <HAL_GetTick>
 800a714:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800a716:	e004      	b.n	800a722 <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800a718:	f7fd faf4 	bl	8007d04 <HAL_GetTick>
 800a71c:	1b83      	subs	r3, r0, r6
 800a71e:	2b02      	cmp	r3, #2
 800a720:	d88d      	bhi.n	800a63e <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800a722:	682b      	ldr	r3, [r5, #0]
 800a724:	05d9      	lsls	r1, r3, #23
 800a726:	d5f7      	bpl.n	800a718 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800a728:	4d1d      	ldr	r5, [pc, #116]	; (800a7a0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800a72a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800a72c:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800a72e:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800a732:	d111      	bne.n	800a758 <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800a734:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800a738:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800a73c:	d021      	beq.n	800a782 <HAL_RCCEx_PeriphCLKConfig+0x232>
 800a73e:	4918      	ldr	r1, [pc, #96]	; (800a7a0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800a740:	688a      	ldr	r2, [r1, #8]
 800a742:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800a746:	608a      	str	r2, [r1, #8]
 800a748:	4a15      	ldr	r2, [pc, #84]	; (800a7a0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800a74a:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800a74c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a750:	430b      	orrs	r3, r1
 800a752:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800a754:	6823      	ldr	r3, [r4, #0]
 800a756:	e708      	b.n	800a56a <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800a758:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800a75c:	4291      	cmp	r1, r2
 800a75e:	d0eb      	beq.n	800a738 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800a760:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800a762:	4a0e      	ldr	r2, [pc, #56]	; (800a79c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800a764:	2101      	movs	r1, #1
 800a766:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800a76a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800a76e:	2100      	movs	r1, #0
 800a770:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800a774:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800a776:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800a778:	07da      	lsls	r2, r3, #31
 800a77a:	f53f af52 	bmi.w	800a622 <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800a77e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800a780:	e7d8      	b.n	800a734 <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800a782:	4807      	ldr	r0, [pc, #28]	; (800a7a0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800a784:	6882      	ldr	r2, [r0, #8]
 800a786:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800a78a:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800a78e:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800a792:	430a      	orrs	r2, r1
 800a794:	6082      	str	r2, [r0, #8]
 800a796:	e7d7      	b.n	800a748 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800a798:	42471000 	.word	0x42471000
 800a79c:	42470000 	.word	0x42470000
 800a7a0:	40023800 	.word	0x40023800
 800a7a4:	40007000 	.word	0x40007000

0800a7a8 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800a7a8:	b1f0      	cbz	r0, 800a7e8 <HAL_SDRAM_Init+0x40>
{
 800a7aa:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800a7ac:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800a7b0:	460d      	mov	r5, r1
 800a7b2:	4604      	mov	r4, r0
 800a7b4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800a7b8:	b18b      	cbz	r3, 800a7de <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800a7ba:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800a7bc:	2302      	movs	r3, #2
 800a7be:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800a7c2:	f851 0b04 	ldr.w	r0, [r1], #4
 800a7c6:	f000 ffcd 	bl	800b764 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800a7ca:	e9d4 0200 	ldrd	r0, r2, [r4]
 800a7ce:	4629      	mov	r1, r5
 800a7d0:	f001 f806 	bl	800b7e0 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800a7d4:	2301      	movs	r3, #1
 800a7d6:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800a7da:	2000      	movs	r0, #0
}
 800a7dc:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800a7de:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800a7e2:	f7f7 fbdd 	bl	8001fa0 <HAL_SDRAM_MspInit>
 800a7e6:	e7e8      	b.n	800a7ba <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800a7e8:	2001      	movs	r0, #1
}
 800a7ea:	4770      	bx	lr

0800a7ec <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800a7ec:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800a7ee:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800a7f2:	2b02      	cmp	r3, #2
{
 800a7f4:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800a7f6:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800a7f8:	d004      	beq.n	800a804 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800a7fa:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800a7fe:	2c01      	cmp	r4, #1
 800a800:	d001      	beq.n	800a806 <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800a802:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800a804:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800a806:	460e      	mov	r6, r1
 800a808:	2302      	movs	r3, #2
 800a80a:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800a80e:	6828      	ldr	r0, [r5, #0]
 800a810:	f001 f832 	bl	800b878 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800a814:	6833      	ldr	r3, [r6, #0]
 800a816:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800a818:	bf06      	itte	eq
 800a81a:	2305      	moveq	r3, #5
 800a81c:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800a820:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800a824:	2000      	movs	r0, #0
}
 800a826:	bd70      	pop	{r4, r5, r6, pc}

0800a828 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800a828:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800a82a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800a82e:	2b02      	cmp	r3, #2
{
 800a830:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800a832:	b2d8      	uxtb	r0, r3
 800a834:	d005      	beq.n	800a842 <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800a836:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800a83a:	2b01      	cmp	r3, #1
 800a83c:	b2dd      	uxtb	r5, r3
 800a83e:	d001      	beq.n	800a844 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800a840:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800a842:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800a844:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800a846:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800a848:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800a84c:	f001 f83e 	bl	800b8cc <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800a850:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800a854:	2000      	movs	r0, #0
}
 800a856:	bd38      	pop	{r3, r4, r5, pc}

0800a858 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800a858:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a85c:	b082      	sub	sp, #8
 800a85e:	461d      	mov	r5, r3
 800a860:	4616      	mov	r6, r2
 800a862:	460c      	mov	r4, r1
 800a864:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800a866:	f7fd fa4d 	bl	8007d04 <HAL_GetTick>
 800a86a:	4435      	add	r5, r6
 800a86c:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800a86e:	f7fd fa49 	bl	8007d04 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800a872:	4b27      	ldr	r3, [pc, #156]	; (800a910 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800a874:	681b      	ldr	r3, [r3, #0]
 800a876:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800a87a:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800a87e:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800a880:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800a882:	1c73      	adds	r3, r6, #1
 800a884:	6839      	ldr	r1, [r7, #0]
 800a886:	d107      	bne.n	800a898 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800a888:	688b      	ldr	r3, [r1, #8]
 800a88a:	ea34 0303 	bics.w	r3, r4, r3
 800a88e:	d0fb      	beq.n	800a888 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800a890:	2000      	movs	r0, #0
}
 800a892:	b002      	add	sp, #8
 800a894:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800a898:	688b      	ldr	r3, [r1, #8]
 800a89a:	ea34 0303 	bics.w	r3, r4, r3
 800a89e:	d1f7      	bne.n	800a890 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800a8a0:	f7fd fa30 	bl	8007d04 <HAL_GetTick>
 800a8a4:	eba0 0008 	sub.w	r0, r0, r8
 800a8a8:	42a8      	cmp	r0, r5
 800a8aa:	d208      	bcs.n	800a8be <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800a8ac:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800a8ae:	2b00      	cmp	r3, #0
      count--;
 800a8b0:	9b01      	ldr	r3, [sp, #4]
 800a8b2:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800a8b6:	bf08      	it	eq
 800a8b8:	2500      	moveq	r5, #0
      count--;
 800a8ba:	9301      	str	r3, [sp, #4]
 800a8bc:	e7e1      	b.n	800a882 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a8be:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800a8c2:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a8c4:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800a8c8:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800a8cc:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a8ce:	d013      	beq.n	800a8f8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800a8d0:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800a8d2:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800a8d6:	d107      	bne.n	800a8e8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800a8d8:	681a      	ldr	r2, [r3, #0]
 800a8da:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800a8de:	601a      	str	r2, [r3, #0]
 800a8e0:	681a      	ldr	r2, [r3, #0]
 800a8e2:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800a8e6:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800a8e8:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800a8ea:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800a8ec:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800a8f0:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800a8f4:	2003      	movs	r0, #3
 800a8f6:	e7cc      	b.n	800a892 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a8f8:	68ba      	ldr	r2, [r7, #8]
 800a8fa:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800a8fe:	d002      	beq.n	800a906 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800a900:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800a904:	d1e4      	bne.n	800a8d0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800a906:	681a      	ldr	r2, [r3, #0]
 800a908:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800a90c:	601a      	str	r2, [r3, #0]
 800a90e:	e7df      	b.n	800a8d0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800a910:	20000078 	.word	0x20000078

0800a914 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800a914:	b538      	push	{r3, r4, r5, lr}
 800a916:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a918:	6842      	ldr	r2, [r0, #4]
 800a91a:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800a91e:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a920:	d006      	beq.n	800a930 <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800a922:	460a      	mov	r2, r1
 800a924:	2101      	movs	r1, #1
 800a926:	f7ff ff97 	bl	800a858 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800a92a:	b978      	cbnz	r0, 800a94c <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800a92c:	2000      	movs	r0, #0
}
 800a92e:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a930:	6882      	ldr	r2, [r0, #8]
 800a932:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800a936:	d01c      	beq.n	800a972 <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800a938:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800a93c:	d00c      	beq.n	800a958 <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800a93e:	460a      	mov	r2, r1
 800a940:	4620      	mov	r0, r4
 800a942:	2180      	movs	r1, #128	; 0x80
 800a944:	f7ff ff88 	bl	800a858 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800a948:	2800      	cmp	r0, #0
 800a94a:	d0ef      	beq.n	800a92c <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800a94c:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800a94e:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800a952:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800a954:	6563      	str	r3, [r4, #84]	; 0x54
}
 800a956:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800a958:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800a95a:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800a95c:	6829      	ldr	r1, [r5, #0]
 800a95e:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800a962:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800a964:	2101      	movs	r1, #1
 800a966:	f7ff ff77 	bl	800a858 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800a96a:	2800      	cmp	r0, #0
 800a96c:	d1ee      	bne.n	800a94c <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800a96e:	2000      	movs	r0, #0
 800a970:	e7dd      	b.n	800a92e <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800a972:	6800      	ldr	r0, [r0, #0]
 800a974:	6802      	ldr	r2, [r0, #0]
 800a976:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800a97a:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800a97c:	460a      	mov	r2, r1
 800a97e:	4620      	mov	r0, r4
 800a980:	2180      	movs	r1, #128	; 0x80
 800a982:	f7ff ff69 	bl	800a858 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800a986:	2800      	cmp	r0, #0
 800a988:	d0d0      	beq.n	800a92c <SPI_EndRxTransaction+0x18>
 800a98a:	e7df      	b.n	800a94c <SPI_EndRxTransaction+0x38>

0800a98c <HAL_SPI_Init>:
  if (hspi == NULL)
 800a98c:	2800      	cmp	r0, #0
 800a98e:	d05c      	beq.n	800aa4a <HAL_SPI_Init+0xbe>
{
 800a990:	b570      	push	{r4, r5, r6, lr}
 800a992:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800a994:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800a996:	2800      	cmp	r0, #0
 800a998:	d047      	beq.n	800aa2a <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800a99a:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800a99c:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800a9a0:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800a9a4:	2200      	movs	r2, #0
 800a9a6:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800a9a8:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800a9ac:	2b00      	cmp	r3, #0
 800a9ae:	d042      	beq.n	800aa36 <HAL_SPI_Init+0xaa>
 800a9b0:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800a9b2:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800a9b4:	68a5      	ldr	r5, [r4, #8]
 800a9b6:	69a2      	ldr	r2, [r4, #24]
 800a9b8:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800a9ba:	2302      	movs	r3, #2
 800a9bc:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800a9c0:	680b      	ldr	r3, [r1, #0]
 800a9c2:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800a9c6:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800a9c8:	6863      	ldr	r3, [r4, #4]
 800a9ca:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800a9ce:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800a9d2:	432b      	orrs	r3, r5
 800a9d4:	68e5      	ldr	r5, [r4, #12]
 800a9d6:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800a9da:	432b      	orrs	r3, r5
 800a9dc:	6925      	ldr	r5, [r4, #16]
 800a9de:	f005 0502 	and.w	r5, r5, #2
 800a9e2:	432b      	orrs	r3, r5
 800a9e4:	6965      	ldr	r5, [r4, #20]
 800a9e6:	f005 0501 	and.w	r5, r5, #1
 800a9ea:	432b      	orrs	r3, r5
 800a9ec:	69e5      	ldr	r5, [r4, #28]
 800a9ee:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800a9f2:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800a9f6:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800a9fa:	4333      	orrs	r3, r6
 800a9fc:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800a9fe:	0c12      	lsrs	r2, r2, #16
 800aa00:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800aa04:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800aa08:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800aa0c:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800aa10:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800aa12:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800aa14:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800aa16:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800aa18:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800aa1a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800aa1e:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800aa20:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800aa22:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800aa24:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800aa28:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800aa2a:	6863      	ldr	r3, [r4, #4]
 800aa2c:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800aa30:	d0b6      	beq.n	800a9a0 <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800aa32:	61e0      	str	r0, [r4, #28]
 800aa34:	e7b4      	b.n	800a9a0 <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800aa36:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800aa38:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800aa3c:	f7f7 fa48 	bl	8001ed0 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800aa40:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800aa44:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800aa48:	e7b3      	b.n	800a9b2 <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800aa4a:	2001      	movs	r0, #1
}
 800aa4c:	4770      	bx	lr
 800aa4e:	bf00      	nop

0800aa50 <HAL_SPI_Transmit>:
{
 800aa50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800aa54:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800aa56:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800aa5a:	2801      	cmp	r0, #1
{
 800aa5c:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800aa5e:	f000 8085 	beq.w	800ab6c <HAL_SPI_Transmit+0x11c>
 800aa62:	461d      	mov	r5, r3
 800aa64:	2301      	movs	r3, #1
 800aa66:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800aa6a:	4688      	mov	r8, r1
 800aa6c:	4617      	mov	r7, r2
 800aa6e:	f7fd f949 	bl	8007d04 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800aa72:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800aa76:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800aa78:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800aa7a:	b2d8      	uxtb	r0, r3
 800aa7c:	d009      	beq.n	800aa92 <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800aa7e:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800aa80:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800aa82:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800aa84:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800aa88:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800aa8c:	b002      	add	sp, #8
 800aa8e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800aa92:	f1b8 0f00 	cmp.w	r8, #0
 800aa96:	d0f3      	beq.n	800aa80 <HAL_SPI_Transmit+0x30>
 800aa98:	2f00      	cmp	r7, #0
 800aa9a:	d0f1      	beq.n	800aa80 <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800aa9c:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800aa9e:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800aaa0:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800aaa4:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800aaa6:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800aaa8:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800aaac:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800aab0:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800aab4:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800aab6:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800aab8:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800aaba:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800aabc:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800aabe:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800aac0:	f000 8085 	beq.w	800abce <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800aac4:	6803      	ldr	r3, [r0, #0]
 800aac6:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800aac8:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800aaca:	d403      	bmi.n	800aad4 <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800aacc:	6803      	ldr	r3, [r0, #0]
 800aace:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800aad2:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800aad4:	68e3      	ldr	r3, [r4, #12]
 800aad6:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800aada:	d04b      	beq.n	800ab74 <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800aadc:	6863      	ldr	r3, [r4, #4]
 800aade:	2b00      	cmp	r3, #0
 800aae0:	f000 8097 	beq.w	800ac12 <HAL_SPI_Transmit+0x1c2>
 800aae4:	2f01      	cmp	r7, #1
 800aae6:	f000 8094 	beq.w	800ac12 <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800aaea:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800aaec:	b29b      	uxth	r3, r3
 800aaee:	b1ab      	cbz	r3, 800ab1c <HAL_SPI_Transmit+0xcc>
 800aaf0:	1c68      	adds	r0, r5, #1
 800aaf2:	f040 8083 	bne.w	800abfc <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800aaf6:	6823      	ldr	r3, [r4, #0]
 800aaf8:	689a      	ldr	r2, [r3, #8]
 800aafa:	0791      	lsls	r1, r2, #30
 800aafc:	f140 8094 	bpl.w	800ac28 <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800ab00:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800ab02:	7812      	ldrb	r2, [r2, #0]
 800ab04:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800ab06:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800ab08:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800ab0a:	3901      	subs	r1, #1
 800ab0c:	b289      	uxth	r1, r1
 800ab0e:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800ab10:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800ab12:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800ab14:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800ab16:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800ab18:	2900      	cmp	r1, #0
 800ab1a:	d1ec      	bne.n	800aaf6 <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800ab1c:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800ab1e:	4b5b      	ldr	r3, [pc, #364]	; (800ac8c <HAL_SPI_Transmit+0x23c>)
 800ab20:	4a5b      	ldr	r2, [pc, #364]	; (800ac90 <HAL_SPI_Transmit+0x240>)
 800ab22:	681b      	ldr	r3, [r3, #0]
 800ab24:	fba2 2303 	umull	r2, r3, r2, r3
 800ab28:	0d5b      	lsrs	r3, r3, #21
 800ab2a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800ab2e:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800ab32:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800ab36:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800ab38:	d107      	bne.n	800ab4a <HAL_SPI_Transmit+0xfa>
 800ab3a:	e098      	b.n	800ac6e <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800ab3c:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800ab3e:	6822      	ldr	r2, [r4, #0]
      count--;
 800ab40:	3b01      	subs	r3, #1
 800ab42:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800ab44:	6893      	ldr	r3, [r2, #8]
 800ab46:	061b      	lsls	r3, r3, #24
 800ab48:	d502      	bpl.n	800ab50 <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800ab4a:	9b01      	ldr	r3, [sp, #4]
 800ab4c:	2b00      	cmp	r3, #0
 800ab4e:	d1f5      	bne.n	800ab3c <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800ab50:	68a3      	ldr	r3, [r4, #8]
 800ab52:	b933      	cbnz	r3, 800ab62 <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800ab54:	6822      	ldr	r2, [r4, #0]
 800ab56:	9300      	str	r3, [sp, #0]
 800ab58:	68d3      	ldr	r3, [r2, #12]
 800ab5a:	9300      	str	r3, [sp, #0]
 800ab5c:	6893      	ldr	r3, [r2, #8]
 800ab5e:	9300      	str	r3, [sp, #0]
 800ab60:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800ab62:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800ab64:	3800      	subs	r0, #0
 800ab66:	bf18      	it	ne
 800ab68:	2001      	movne	r0, #1
error:
 800ab6a:	e789      	b.n	800aa80 <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800ab6c:	2002      	movs	r0, #2
}
 800ab6e:	b002      	add	sp, #8
 800ab70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800ab74:	6861      	ldr	r1, [r4, #4]
 800ab76:	2900      	cmp	r1, #0
 800ab78:	d176      	bne.n	800ac68 <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800ab7a:	4643      	mov	r3, r8
 800ab7c:	f833 7b02 	ldrh.w	r7, [r3], #2
 800ab80:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800ab82:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800ab84:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ab86:	3b01      	subs	r3, #1
 800ab88:	b29b      	uxth	r3, r3
 800ab8a:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800ab8c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ab8e:	b29b      	uxth	r3, r3
 800ab90:	2b00      	cmp	r3, #0
 800ab92:	d0c4      	beq.n	800ab1e <HAL_SPI_Transmit+0xce>
 800ab94:	1c6b      	adds	r3, r5, #1
 800ab96:	d15e      	bne.n	800ac56 <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800ab98:	6883      	ldr	r3, [r0, #8]
 800ab9a:	079f      	lsls	r7, r3, #30
 800ab9c:	d50f      	bpl.n	800abbe <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800ab9e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800aba0:	f832 3b02 	ldrh.w	r3, [r2], #2
 800aba4:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800aba6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800aba8:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800abaa:	3b01      	subs	r3, #1
 800abac:	b29b      	uxth	r3, r3
 800abae:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800abb0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800abb2:	b29b      	uxth	r3, r3
 800abb4:	2b00      	cmp	r3, #0
 800abb6:	d0b1      	beq.n	800ab1c <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800abb8:	6883      	ldr	r3, [r0, #8]
 800abba:	079f      	lsls	r7, r3, #30
 800abbc:	d4ef      	bmi.n	800ab9e <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800abbe:	f7fd f8a1 	bl	8007d04 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800abc2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800abc4:	b29b      	uxth	r3, r3
 800abc6:	2b00      	cmp	r3, #0
 800abc8:	d0a8      	beq.n	800ab1c <HAL_SPI_Transmit+0xcc>
 800abca:	6820      	ldr	r0, [r4, #0]
 800abcc:	e7e4      	b.n	800ab98 <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800abce:	6803      	ldr	r3, [r0, #0]
 800abd0:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800abd4:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800abd6:	6803      	ldr	r3, [r0, #0]
 800abd8:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800abdc:	6003      	str	r3, [r0, #0]
 800abde:	e771      	b.n	800aac4 <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800abe0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800abe2:	7812      	ldrb	r2, [r2, #0]
 800abe4:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800abe6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800abe8:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800abea:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800abec:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800abee:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800abf0:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800abf2:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800abf4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800abf6:	b29b      	uxth	r3, r3
 800abf8:	2b00      	cmp	r3, #0
 800abfa:	d08f      	beq.n	800ab1c <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800abfc:	6823      	ldr	r3, [r4, #0]
 800abfe:	689a      	ldr	r2, [r3, #8]
 800ac00:	0792      	lsls	r2, r2, #30
 800ac02:	d4ed      	bmi.n	800abe0 <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ac04:	f7fd f87e 	bl	8007d04 <HAL_GetTick>
 800ac08:	1b80      	subs	r0, r0, r6
 800ac0a:	42a8      	cmp	r0, r5
 800ac0c:	d3f2      	bcc.n	800abf4 <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800ac0e:	2003      	movs	r0, #3
 800ac10:	e736      	b.n	800aa80 <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800ac12:	f898 3000 	ldrb.w	r3, [r8]
 800ac16:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800ac18:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800ac1a:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800ac1c:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800ac1e:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800ac20:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800ac22:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800ac24:	86e3      	strh	r3, [r4, #54]	; 0x36
 800ac26:	e760      	b.n	800aaea <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ac28:	f7fd f86c 	bl	8007d04 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800ac2c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ac2e:	b29b      	uxth	r3, r3
 800ac30:	2b00      	cmp	r3, #0
 800ac32:	f47f af60 	bne.w	800aaf6 <HAL_SPI_Transmit+0xa6>
 800ac36:	e771      	b.n	800ab1c <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800ac38:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ac3a:	f831 3b02 	ldrh.w	r3, [r1], #2
 800ac3e:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800ac40:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800ac42:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800ac44:	3b01      	subs	r3, #1
 800ac46:	b29b      	uxth	r3, r3
 800ac48:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800ac4a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ac4c:	b29b      	uxth	r3, r3
 800ac4e:	2b00      	cmp	r3, #0
 800ac50:	f43f af64 	beq.w	800ab1c <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800ac54:	6822      	ldr	r2, [r4, #0]
 800ac56:	6893      	ldr	r3, [r2, #8]
 800ac58:	0799      	lsls	r1, r3, #30
 800ac5a:	d4ed      	bmi.n	800ac38 <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ac5c:	f7fd f852 	bl	8007d04 <HAL_GetTick>
 800ac60:	1b80      	subs	r0, r0, r6
 800ac62:	42a8      	cmp	r0, r5
 800ac64:	d3f1      	bcc.n	800ac4a <HAL_SPI_Transmit+0x1fa>
 800ac66:	e7d2      	b.n	800ac0e <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800ac68:	2f01      	cmp	r7, #1
 800ac6a:	d18f      	bne.n	800ab8c <HAL_SPI_Transmit+0x13c>
 800ac6c:	e785      	b.n	800ab7a <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800ac6e:	4633      	mov	r3, r6
 800ac70:	462a      	mov	r2, r5
 800ac72:	2180      	movs	r1, #128	; 0x80
 800ac74:	4620      	mov	r0, r4
 800ac76:	f7ff fdef 	bl	800a858 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800ac7a:	2800      	cmp	r0, #0
 800ac7c:	f43f af68 	beq.w	800ab50 <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800ac80:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800ac82:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800ac84:	4313      	orrs	r3, r2
 800ac86:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800ac88:	6562      	str	r2, [r4, #84]	; 0x54
 800ac8a:	e761      	b.n	800ab50 <HAL_SPI_Transmit+0x100>
 800ac8c:	20000078 	.word	0x20000078
 800ac90:	165e9f81 	.word	0x165e9f81

0800ac94 <HAL_SPI_TransmitReceive>:
{
 800ac94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ac98:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800ac9a:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800ac9e:	2801      	cmp	r0, #1
{
 800aca0:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800aca2:	f000 80ac 	beq.w	800adfe <HAL_SPI_TransmitReceive+0x16a>
 800aca6:	461e      	mov	r6, r3
 800aca8:	2301      	movs	r3, #1
 800acaa:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800acae:	4690      	mov	r8, r2
 800acb0:	460f      	mov	r7, r1
 800acb2:	f7fd f827 	bl	8007d04 <HAL_GetTick>
 800acb6:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800acb8:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800acbc:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800acbe:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800acc0:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800acc2:	d011      	beq.n	800ace8 <HAL_SPI_TransmitReceive+0x54>
 800acc4:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800acc8:	d009      	beq.n	800acde <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800acca:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800accc:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800acce:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800acd0:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800acd4:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800acd8:	b002      	add	sp, #8
 800acda:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800acde:	68a1      	ldr	r1, [r4, #8]
 800ace0:	2900      	cmp	r1, #0
 800ace2:	d1f2      	bne.n	800acca <HAL_SPI_TransmitReceive+0x36>
 800ace4:	2a04      	cmp	r2, #4
 800ace6:	d1f0      	bne.n	800acca <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800ace8:	2f00      	cmp	r7, #0
 800acea:	f000 808c 	beq.w	800ae06 <HAL_SPI_TransmitReceive+0x172>
 800acee:	f1b8 0f00 	cmp.w	r8, #0
 800acf2:	f000 8088 	beq.w	800ae06 <HAL_SPI_TransmitReceive+0x172>
 800acf6:	2e00      	cmp	r6, #0
 800acf8:	f000 8085 	beq.w	800ae06 <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800acfc:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800ad00:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800ad04:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800ad06:	bf1c      	itt	ne
 800ad08:	2205      	movne	r2, #5
 800ad0a:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800ad0e:	2200      	movs	r2, #0
 800ad10:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800ad12:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800ad16:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800ad18:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800ad1a:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800ad1c:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800ad1e:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800ad20:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800ad22:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800ad24:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800ad26:	d403      	bmi.n	800ad30 <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800ad28:	6811      	ldr	r1, [r2, #0]
 800ad2a:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800ad2e:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800ad30:	68e1      	ldr	r1, [r4, #12]
 800ad32:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800ad36:	f000 809e 	beq.w	800ae76 <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800ad3a:	2b00      	cmp	r3, #0
 800ad3c:	f000 8091 	beq.w	800ae62 <HAL_SPI_TransmitReceive+0x1ce>
 800ad40:	2e01      	cmp	r6, #1
 800ad42:	f000 808e 	beq.w	800ae62 <HAL_SPI_TransmitReceive+0x1ce>
 800ad46:	9b08      	ldr	r3, [sp, #32]
 800ad48:	3301      	adds	r3, #1
        txallowed = 1U;
 800ad4a:	f04f 0601 	mov.w	r6, #1
 800ad4e:	d028      	beq.n	800ada2 <HAL_SPI_TransmitReceive+0x10e>
 800ad50:	e05b      	b.n	800ae0a <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800ad52:	6821      	ldr	r1, [r4, #0]
 800ad54:	688b      	ldr	r3, [r1, #8]
 800ad56:	0798      	lsls	r0, r3, #30
 800ad58:	d50f      	bpl.n	800ad7a <HAL_SPI_TransmitReceive+0xe6>
 800ad5a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ad5c:	b29b      	uxth	r3, r3
 800ad5e:	b163      	cbz	r3, 800ad7a <HAL_SPI_TransmitReceive+0xe6>
 800ad60:	b15e      	cbz	r6, 800ad7a <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800ad62:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800ad64:	781b      	ldrb	r3, [r3, #0]
 800ad66:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800ad68:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800ad6a:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800ad6c:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800ad6e:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800ad70:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800ad72:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800ad74:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800ad76:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800ad78:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800ad7a:	688a      	ldr	r2, [r1, #8]
 800ad7c:	f012 0201 	ands.w	r2, r2, #1
 800ad80:	d00d      	beq.n	800ad9e <HAL_SPI_TransmitReceive+0x10a>
 800ad82:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ad84:	b29b      	uxth	r3, r3
 800ad86:	b153      	cbz	r3, 800ad9e <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800ad88:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ad8a:	68c9      	ldr	r1, [r1, #12]
 800ad8c:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800ad8e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800ad90:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ad92:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800ad94:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800ad96:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800ad98:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ad9a:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800ad9c:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800ad9e:	f7fc ffb1 	bl	8007d04 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800ada2:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800ada4:	b292      	uxth	r2, r2
 800ada6:	2a00      	cmp	r2, #0
 800ada8:	d1d3      	bne.n	800ad52 <HAL_SPI_TransmitReceive+0xbe>
 800adaa:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800adac:	b29b      	uxth	r3, r3
 800adae:	2b00      	cmp	r3, #0
 800adb0:	d1cf      	bne.n	800ad52 <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800adb2:	4b79      	ldr	r3, [pc, #484]	; (800af98 <HAL_SPI_TransmitReceive+0x304>)
 800adb4:	4a79      	ldr	r2, [pc, #484]	; (800af9c <HAL_SPI_TransmitReceive+0x308>)
 800adb6:	681b      	ldr	r3, [r3, #0]
 800adb8:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800adbc:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800adbe:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800adc2:	0d5b      	lsrs	r3, r3, #21
 800adc4:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800adc8:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800adcc:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800adce:	d107      	bne.n	800ade0 <HAL_SPI_TransmitReceive+0x14c>
 800add0:	e0d2      	b.n	800af78 <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800add2:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800add4:	6822      	ldr	r2, [r4, #0]
      count--;
 800add6:	3b01      	subs	r3, #1
 800add8:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800adda:	6893      	ldr	r3, [r2, #8]
 800addc:	061b      	lsls	r3, r3, #24
 800adde:	d502      	bpl.n	800ade6 <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800ade0:	9b01      	ldr	r3, [sp, #4]
 800ade2:	2b00      	cmp	r3, #0
 800ade4:	d1f5      	bne.n	800add2 <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800ade6:	68a0      	ldr	r0, [r4, #8]
 800ade8:	2800      	cmp	r0, #0
 800adea:	f040 8082 	bne.w	800aef2 <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800adee:	6823      	ldr	r3, [r4, #0]
 800adf0:	9000      	str	r0, [sp, #0]
 800adf2:	68da      	ldr	r2, [r3, #12]
 800adf4:	9200      	str	r2, [sp, #0]
 800adf6:	689b      	ldr	r3, [r3, #8]
 800adf8:	9300      	str	r3, [sp, #0]
 800adfa:	9b00      	ldr	r3, [sp, #0]
 800adfc:	e766      	b.n	800accc <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800adfe:	2002      	movs	r0, #2
}
 800ae00:	b002      	add	sp, #8
 800ae02:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800ae06:	2001      	movs	r0, #1
 800ae08:	e760      	b.n	800accc <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800ae0a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ae0c:	b29b      	uxth	r3, r3
 800ae0e:	b91b      	cbnz	r3, 800ae18 <HAL_SPI_TransmitReceive+0x184>
 800ae10:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ae12:	b29b      	uxth	r3, r3
 800ae14:	2b00      	cmp	r3, #0
 800ae16:	d0cc      	beq.n	800adb2 <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800ae18:	6822      	ldr	r2, [r4, #0]
 800ae1a:	6893      	ldr	r3, [r2, #8]
 800ae1c:	0799      	lsls	r1, r3, #30
 800ae1e:	d50f      	bpl.n	800ae40 <HAL_SPI_TransmitReceive+0x1ac>
 800ae20:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ae22:	b29b      	uxth	r3, r3
 800ae24:	b163      	cbz	r3, 800ae40 <HAL_SPI_TransmitReceive+0x1ac>
 800ae26:	b15e      	cbz	r6, 800ae40 <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800ae28:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800ae2a:	781b      	ldrb	r3, [r3, #0]
 800ae2c:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800ae2e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800ae30:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800ae32:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800ae34:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800ae36:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800ae38:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800ae3a:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800ae3c:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800ae3e:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800ae40:	6893      	ldr	r3, [r2, #8]
 800ae42:	f013 0301 	ands.w	r3, r3, #1
 800ae46:	d004      	beq.n	800ae52 <HAL_SPI_TransmitReceive+0x1be>
 800ae48:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800ae4a:	b289      	uxth	r1, r1
 800ae4c:	2900      	cmp	r1, #0
 800ae4e:	f040 8087 	bne.w	800af60 <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800ae52:	f7fc ff57 	bl	8007d04 <HAL_GetTick>
 800ae56:	9b08      	ldr	r3, [sp, #32]
 800ae58:	1b40      	subs	r0, r0, r5
 800ae5a:	4298      	cmp	r0, r3
 800ae5c:	d3d5      	bcc.n	800ae0a <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800ae5e:	2003      	movs	r0, #3
 800ae60:	e734      	b.n	800accc <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800ae62:	783b      	ldrb	r3, [r7, #0]
 800ae64:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800ae66:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800ae68:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800ae6a:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800ae6c:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800ae6e:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800ae70:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800ae72:	86e3      	strh	r3, [r4, #54]	; 0x36
 800ae74:	e767      	b.n	800ad46 <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800ae76:	2b00      	cmp	r3, #0
 800ae78:	d13d      	bne.n	800aef6 <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800ae7a:	f837 3b02 	ldrh.w	r3, [r7], #2
 800ae7e:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800ae80:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800ae82:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800ae84:	3b01      	subs	r3, #1
 800ae86:	b29b      	uxth	r3, r3
 800ae88:	86e3      	strh	r3, [r4, #54]	; 0x36
 800ae8a:	9b08      	ldr	r3, [sp, #32]
 800ae8c:	3301      	adds	r3, #1
{
 800ae8e:	f04f 0601 	mov.w	r6, #1
 800ae92:	d025      	beq.n	800aee0 <HAL_SPI_TransmitReceive+0x24c>
 800ae94:	e032      	b.n	800aefc <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800ae96:	6823      	ldr	r3, [r4, #0]
 800ae98:	689a      	ldr	r2, [r3, #8]
 800ae9a:	0792      	lsls	r2, r2, #30
 800ae9c:	d50d      	bpl.n	800aeba <HAL_SPI_TransmitReceive+0x226>
 800ae9e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800aea0:	b292      	uxth	r2, r2
 800aea2:	b152      	cbz	r2, 800aeba <HAL_SPI_TransmitReceive+0x226>
 800aea4:	b14e      	cbz	r6, 800aeba <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800aea6:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800aea8:	f831 2b02 	ldrh.w	r2, [r1], #2
 800aeac:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800aeae:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800aeb0:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800aeb2:	3a01      	subs	r2, #1
 800aeb4:	b292      	uxth	r2, r2
        txallowed = 0U;
 800aeb6:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800aeb8:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800aeba:	689a      	ldr	r2, [r3, #8]
 800aebc:	f012 0201 	ands.w	r2, r2, #1
 800aec0:	d00c      	beq.n	800aedc <HAL_SPI_TransmitReceive+0x248>
 800aec2:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800aec4:	b289      	uxth	r1, r1
 800aec6:	b149      	cbz	r1, 800aedc <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800aec8:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800aeca:	68db      	ldr	r3, [r3, #12]
 800aecc:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800aed0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800aed2:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800aed4:	3b01      	subs	r3, #1
 800aed6:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800aed8:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800aeda:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800aedc:	f7fc ff12 	bl	8007d04 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800aee0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800aee2:	b29b      	uxth	r3, r3
 800aee4:	2b00      	cmp	r3, #0
 800aee6:	d1d6      	bne.n	800ae96 <HAL_SPI_TransmitReceive+0x202>
 800aee8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800aeea:	b29b      	uxth	r3, r3
 800aeec:	2b00      	cmp	r3, #0
 800aeee:	d1d2      	bne.n	800ae96 <HAL_SPI_TransmitReceive+0x202>
 800aef0:	e75f      	b.n	800adb2 <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800aef2:	2000      	movs	r0, #0
 800aef4:	e6ea      	b.n	800accc <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800aef6:	2e01      	cmp	r6, #1
 800aef8:	d1c7      	bne.n	800ae8a <HAL_SPI_TransmitReceive+0x1f6>
 800aefa:	e7be      	b.n	800ae7a <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800aefc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800aefe:	b29b      	uxth	r3, r3
 800af00:	b923      	cbnz	r3, 800af0c <HAL_SPI_TransmitReceive+0x278>
 800af02:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800af04:	b29b      	uxth	r3, r3
 800af06:	2b00      	cmp	r3, #0
 800af08:	f43f af53 	beq.w	800adb2 <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800af0c:	6822      	ldr	r2, [r4, #0]
 800af0e:	6893      	ldr	r3, [r2, #8]
 800af10:	079f      	lsls	r7, r3, #30
 800af12:	d50d      	bpl.n	800af30 <HAL_SPI_TransmitReceive+0x29c>
 800af14:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800af16:	b29b      	uxth	r3, r3
 800af18:	b153      	cbz	r3, 800af30 <HAL_SPI_TransmitReceive+0x29c>
 800af1a:	b14e      	cbz	r6, 800af30 <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800af1c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800af1e:	f831 3b02 	ldrh.w	r3, [r1], #2
 800af22:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800af24:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800af26:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800af28:	3b01      	subs	r3, #1
 800af2a:	b29b      	uxth	r3, r3
 800af2c:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800af2e:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800af30:	6893      	ldr	r3, [r2, #8]
 800af32:	f013 0301 	ands.w	r3, r3, #1
 800af36:	d00c      	beq.n	800af52 <HAL_SPI_TransmitReceive+0x2be>
 800af38:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800af3a:	b289      	uxth	r1, r1
 800af3c:	b149      	cbz	r1, 800af52 <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800af3e:	68d1      	ldr	r1, [r2, #12]
 800af40:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800af42:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800af46:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800af48:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800af4a:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800af4c:	3b01      	subs	r3, #1
 800af4e:	b29b      	uxth	r3, r3
 800af50:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800af52:	f7fc fed7 	bl	8007d04 <HAL_GetTick>
 800af56:	9b08      	ldr	r3, [sp, #32]
 800af58:	1b40      	subs	r0, r0, r5
 800af5a:	4298      	cmp	r0, r3
 800af5c:	d3ce      	bcc.n	800aefc <HAL_SPI_TransmitReceive+0x268>
 800af5e:	e77e      	b.n	800ae5e <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800af60:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800af62:	68d2      	ldr	r2, [r2, #12]
 800af64:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800af66:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800af68:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800af6a:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800af6c:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800af6e:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800af70:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800af72:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800af74:	461e      	mov	r6, r3
 800af76:	e76c      	b.n	800ae52 <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800af78:	9a08      	ldr	r2, [sp, #32]
 800af7a:	462b      	mov	r3, r5
 800af7c:	2180      	movs	r1, #128	; 0x80
 800af7e:	4620      	mov	r0, r4
 800af80:	f7ff fc6a 	bl	800a858 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800af84:	2800      	cmp	r0, #0
 800af86:	f43f af2e 	beq.w	800ade6 <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800af8a:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800af8c:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800af8e:	4313      	orrs	r3, r2
 800af90:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800af92:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800af94:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800af96:	e699      	b.n	800accc <HAL_SPI_TransmitReceive+0x38>
 800af98:	20000078 	.word	0x20000078
 800af9c:	165e9f81 	.word	0x165e9f81

0800afa0 <HAL_SPI_Receive>:
{
 800afa0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800afa4:	6846      	ldr	r6, [r0, #4]
 800afa6:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800afaa:	b082      	sub	sp, #8
 800afac:	4604      	mov	r4, r0
 800afae:	4690      	mov	r8, r2
 800afb0:	461d      	mov	r5, r3
 800afb2:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800afb4:	d06e      	beq.n	800b094 <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800afb6:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800afba:	2b01      	cmp	r3, #1
 800afbc:	d076      	beq.n	800b0ac <HAL_SPI_Receive+0x10c>
 800afbe:	2301      	movs	r3, #1
 800afc0:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800afc4:	f7fc fe9e 	bl	8007d04 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800afc8:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800afcc:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800afd0:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800afd2:	fa5f f08c 	uxtb.w	r0, ip
 800afd6:	d009      	beq.n	800afec <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800afd8:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800afda:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800afdc:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800afde:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800afe2:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800afe6:	b002      	add	sp, #8
 800afe8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800afec:	2f00      	cmp	r7, #0
 800afee:	d0f4      	beq.n	800afda <HAL_SPI_Receive+0x3a>
 800aff0:	f1b8 0f00 	cmp.w	r8, #0
 800aff4:	d0f1      	beq.n	800afda <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800aff6:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800aff8:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800affa:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800affe:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800b000:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800b004:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800b008:	f04f 0104 	mov.w	r1, #4
 800b00c:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800b010:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800b014:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800b016:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800b018:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800b01a:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800b01e:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800b020:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b022:	d107      	bne.n	800b034 <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800b024:	6811      	ldr	r1, [r2, #0]
 800b026:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800b02a:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800b02c:	6811      	ldr	r1, [r2, #0]
 800b02e:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800b032:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800b034:	6811      	ldr	r1, [r2, #0]
 800b036:	0648      	lsls	r0, r1, #25
 800b038:	d403      	bmi.n	800b042 <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800b03a:	6811      	ldr	r1, [r2, #0]
 800b03c:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800b040:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800b042:	68e1      	ldr	r1, [r4, #12]
 800b044:	2900      	cmp	r1, #0
 800b046:	d054      	beq.n	800b0f2 <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800b048:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800b04a:	b289      	uxth	r1, r1
 800b04c:	b1a9      	cbz	r1, 800b07a <HAL_SPI_Receive+0xda>
 800b04e:	1c69      	adds	r1, r5, #1
 800b050:	d13e      	bne.n	800b0d0 <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800b052:	6893      	ldr	r3, [r2, #8]
 800b054:	07db      	lsls	r3, r3, #31
 800b056:	d544      	bpl.n	800b0e2 <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800b058:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800b05a:	68d1      	ldr	r1, [r2, #12]
 800b05c:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800b060:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800b064:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800b066:	f10c 3cff 	add.w	ip, ip, #4294967295
 800b06a:	fa1f fc8c 	uxth.w	ip, ip
 800b06e:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800b072:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800b074:	b29b      	uxth	r3, r3
 800b076:	2b00      	cmp	r3, #0
 800b078:	d1eb      	bne.n	800b052 <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800b07a:	4632      	mov	r2, r6
 800b07c:	4629      	mov	r1, r5
 800b07e:	4620      	mov	r0, r4
 800b080:	f7ff fc48 	bl	800a914 <SPI_EndRxTransaction>
 800b084:	b108      	cbz	r0, 800b08a <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800b086:	2320      	movs	r3, #32
 800b088:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800b08a:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800b08c:	3800      	subs	r0, #0
 800b08e:	bf18      	it	ne
 800b090:	2001      	movne	r0, #1
error :
 800b092:	e7a2      	b.n	800afda <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800b094:	6883      	ldr	r3, [r0, #8]
 800b096:	2b00      	cmp	r3, #0
 800b098:	d18d      	bne.n	800afb6 <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800b09a:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800b09c:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800b09e:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800b0a0:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800b0a4:	460a      	mov	r2, r1
 800b0a6:	f7ff fdf5 	bl	800ac94 <HAL_SPI_TransmitReceive>
 800b0aa:	e79c      	b.n	800afe6 <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800b0ac:	2002      	movs	r0, #2
}
 800b0ae:	b002      	add	sp, #8
 800b0b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800b0b4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800b0b6:	68db      	ldr	r3, [r3, #12]
 800b0b8:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800b0bc:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800b0be:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800b0c0:	3b01      	subs	r3, #1
 800b0c2:	b29b      	uxth	r3, r3
 800b0c4:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800b0c6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800b0c8:	b29b      	uxth	r3, r3
 800b0ca:	2b00      	cmp	r3, #0
 800b0cc:	d0d5      	beq.n	800b07a <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800b0ce:	6823      	ldr	r3, [r4, #0]
 800b0d0:	689a      	ldr	r2, [r3, #8]
 800b0d2:	07d2      	lsls	r2, r2, #31
 800b0d4:	d4ee      	bmi.n	800b0b4 <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800b0d6:	f7fc fe15 	bl	8007d04 <HAL_GetTick>
 800b0da:	1b80      	subs	r0, r0, r6
 800b0dc:	42a8      	cmp	r0, r5
 800b0de:	d243      	bcs.n	800b168 <HAL_SPI_Receive+0x1c8>
 800b0e0:	e7f1      	b.n	800b0c6 <HAL_SPI_Receive+0x126>
 800b0e2:	f7fc fe0f 	bl	8007d04 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800b0e6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800b0e8:	b29b      	uxth	r3, r3
 800b0ea:	2b00      	cmp	r3, #0
 800b0ec:	d0c5      	beq.n	800b07a <HAL_SPI_Receive+0xda>
 800b0ee:	6822      	ldr	r2, [r4, #0]
 800b0f0:	e7af      	b.n	800b052 <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800b0f2:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800b0f4:	b292      	uxth	r2, r2
 800b0f6:	2a00      	cmp	r2, #0
 800b0f8:	d0bf      	beq.n	800b07a <HAL_SPI_Receive+0xda>
 800b0fa:	1c6f      	adds	r7, r5, #1
 800b0fc:	d013      	beq.n	800b126 <HAL_SPI_Receive+0x186>
 800b0fe:	e02b      	b.n	800b158 <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800b100:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800b102:	7b1b      	ldrb	r3, [r3, #12]
 800b104:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800b106:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800b10a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800b10c:	f10c 3cff 	add.w	ip, ip, #4294967295
 800b110:	fa1f fc8c 	uxth.w	ip, ip
 800b114:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800b118:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800b11a:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800b11c:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800b11e:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800b120:	2b00      	cmp	r3, #0
 800b122:	d0aa      	beq.n	800b07a <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800b124:	6823      	ldr	r3, [r4, #0]
 800b126:	689a      	ldr	r2, [r3, #8]
 800b128:	07d0      	lsls	r0, r2, #31
 800b12a:	d4e9      	bmi.n	800b100 <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800b12c:	f7fc fdea 	bl	8007d04 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800b130:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800b132:	b29b      	uxth	r3, r3
 800b134:	2b00      	cmp	r3, #0
 800b136:	d1f5      	bne.n	800b124 <HAL_SPI_Receive+0x184>
 800b138:	e79f      	b.n	800b07a <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800b13a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800b13c:	7b1b      	ldrb	r3, [r3, #12]
 800b13e:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800b140:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800b142:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800b144:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800b146:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800b148:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800b14a:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800b14c:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800b14e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800b150:	b29b      	uxth	r3, r3
 800b152:	2b00      	cmp	r3, #0
 800b154:	d091      	beq.n	800b07a <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800b156:	6823      	ldr	r3, [r4, #0]
 800b158:	689a      	ldr	r2, [r3, #8]
 800b15a:	07d1      	lsls	r1, r2, #31
 800b15c:	d4ed      	bmi.n	800b13a <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800b15e:	f7fc fdd1 	bl	8007d04 <HAL_GetTick>
 800b162:	1b80      	subs	r0, r0, r6
 800b164:	42a8      	cmp	r0, r5
 800b166:	d3f2      	bcc.n	800b14e <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800b168:	2003      	movs	r0, #3
 800b16a:	e736      	b.n	800afda <HAL_SPI_Receive+0x3a>

0800b16c <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800b16c:	2800      	cmp	r0, #0
 800b16e:	f000 8087 	beq.w	800b280 <HAL_TIM_Base_Init+0x114>
{
 800b172:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800b174:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800b178:	4604      	mov	r4, r0
 800b17a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b17e:	2b00      	cmp	r3, #0
 800b180:	d079      	beq.n	800b276 <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800b182:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800b184:	493f      	ldr	r1, [pc, #252]	; (800b284 <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800b186:	2302      	movs	r3, #2
 800b188:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800b18c:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800b18e:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800b190:	d05d      	beq.n	800b24e <HAL_TIM_Base_Init+0xe2>
 800b192:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800b196:	d031      	beq.n	800b1fc <HAL_TIM_Base_Init+0x90>
 800b198:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800b19c:	428a      	cmp	r2, r1
 800b19e:	d02d      	beq.n	800b1fc <HAL_TIM_Base_Init+0x90>
 800b1a0:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800b1a4:	428a      	cmp	r2, r1
 800b1a6:	d029      	beq.n	800b1fc <HAL_TIM_Base_Init+0x90>
 800b1a8:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800b1ac:	428a      	cmp	r2, r1
 800b1ae:	d025      	beq.n	800b1fc <HAL_TIM_Base_Init+0x90>
 800b1b0:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800b1b4:	428a      	cmp	r2, r1
 800b1b6:	d04a      	beq.n	800b24e <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800b1b8:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800b1bc:	428a      	cmp	r2, r1
 800b1be:	d021      	beq.n	800b204 <HAL_TIM_Base_Init+0x98>
 800b1c0:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800b1c4:	428a      	cmp	r2, r1
 800b1c6:	d01d      	beq.n	800b204 <HAL_TIM_Base_Init+0x98>
 800b1c8:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800b1cc:	428a      	cmp	r2, r1
 800b1ce:	d019      	beq.n	800b204 <HAL_TIM_Base_Init+0x98>
 800b1d0:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800b1d4:	428a      	cmp	r2, r1
 800b1d6:	d015      	beq.n	800b204 <HAL_TIM_Base_Init+0x98>
 800b1d8:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800b1dc:	428a      	cmp	r2, r1
 800b1de:	d011      	beq.n	800b204 <HAL_TIM_Base_Init+0x98>
 800b1e0:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800b1e4:	428a      	cmp	r2, r1
 800b1e6:	d00d      	beq.n	800b204 <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800b1e8:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800b1ea:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800b1ec:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800b1f0:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800b1f2:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800b1f4:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800b1f6:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800b1f8:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800b1fa:	e010      	b.n	800b21e <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800b1fc:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800b1fe:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800b202:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800b204:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800b206:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800b208:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800b20c:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800b20e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800b212:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800b214:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800b216:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800b218:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800b21a:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800b21c:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800b21e:	2301      	movs	r3, #1
 800b220:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800b222:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800b226:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800b22a:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800b22e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800b232:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800b236:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800b23a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800b23e:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800b242:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800b246:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800b24a:	2000      	movs	r0, #0
}
 800b24c:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800b24e:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800b250:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800b252:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800b256:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800b258:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800b25c:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800b25e:	69a1      	ldr	r1, [r4, #24]
 800b260:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800b264:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800b266:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800b268:	68e3      	ldr	r3, [r4, #12]
 800b26a:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800b26c:	6863      	ldr	r3, [r4, #4]
 800b26e:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800b270:	6963      	ldr	r3, [r4, #20]
 800b272:	6313      	str	r3, [r2, #48]	; 0x30
 800b274:	e7d3      	b.n	800b21e <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800b276:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800b27a:	f7f6 fe65 	bl	8001f48 <HAL_TIM_Base_MspInit>
 800b27e:	e780      	b.n	800b182 <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800b280:	2001      	movs	r0, #1
}
 800b282:	4770      	bx	lr
 800b284:	40010000 	.word	0x40010000

0800b288 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800b288:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800b28c:	2b01      	cmp	r3, #1
 800b28e:	d12f      	bne.n	800b2f0 <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800b290:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800b292:	4919      	ldr	r1, [pc, #100]	; (800b2f8 <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800b294:	2202      	movs	r2, #2
 800b296:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800b29a:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800b29c:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800b29e:	f042 0201 	orr.w	r2, r2, #1
 800b2a2:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800b2a4:	d019      	beq.n	800b2da <HAL_TIM_Base_Start_IT+0x52>
 800b2a6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800b2aa:	d016      	beq.n	800b2da <HAL_TIM_Base_Start_IT+0x52>
 800b2ac:	4a13      	ldr	r2, [pc, #76]	; (800b2fc <HAL_TIM_Base_Start_IT+0x74>)
 800b2ae:	4293      	cmp	r3, r2
 800b2b0:	d013      	beq.n	800b2da <HAL_TIM_Base_Start_IT+0x52>
 800b2b2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800b2b6:	4293      	cmp	r3, r2
 800b2b8:	d00f      	beq.n	800b2da <HAL_TIM_Base_Start_IT+0x52>
 800b2ba:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800b2be:	4293      	cmp	r3, r2
 800b2c0:	d00b      	beq.n	800b2da <HAL_TIM_Base_Start_IT+0x52>
 800b2c2:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800b2c6:	4293      	cmp	r3, r2
 800b2c8:	d007      	beq.n	800b2da <HAL_TIM_Base_Start_IT+0x52>
 800b2ca:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800b2ce:	4293      	cmp	r3, r2
 800b2d0:	d003      	beq.n	800b2da <HAL_TIM_Base_Start_IT+0x52>
 800b2d2:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800b2d6:	4293      	cmp	r3, r2
 800b2d8:	d104      	bne.n	800b2e4 <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800b2da:	689a      	ldr	r2, [r3, #8]
 800b2dc:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800b2e0:	2a06      	cmp	r2, #6
 800b2e2:	d007      	beq.n	800b2f4 <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800b2e4:	681a      	ldr	r2, [r3, #0]
 800b2e6:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800b2ea:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800b2ec:	601a      	str	r2, [r3, #0]
 800b2ee:	4770      	bx	lr
    return HAL_ERROR;
 800b2f0:	2001      	movs	r0, #1
 800b2f2:	4770      	bx	lr
  return HAL_OK;
 800b2f4:	2000      	movs	r0, #0
}
 800b2f6:	4770      	bx	lr
 800b2f8:	40010000 	.word	0x40010000
 800b2fc:	40000400 	.word	0x40000400

0800b300 <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 800b300:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800b304:	2b01      	cmp	r3, #1
 800b306:	d075      	beq.n	800b3f4 <HAL_TIM_ConfigClockSource+0xf4>
 800b308:	4602      	mov	r2, r0
{
 800b30a:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800b30c:	2302      	movs	r3, #2
  tmpsmcr = htim->Instance->SMCR;
 800b30e:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800b310:	f882 303d 	strb.w	r3, [r2, #61]	; 0x3d
  __HAL_LOCK(htim);
 800b314:	2001      	movs	r0, #1
 800b316:	f882 003c 	strb.w	r0, [r2, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800b31a:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800b31c:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800b320:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 800b324:	60a3      	str	r3, [r4, #8]
  switch (sClockSourceConfig->ClockSource)
 800b326:	680b      	ldr	r3, [r1, #0]
 800b328:	2b60      	cmp	r3, #96	; 0x60
 800b32a:	d065      	beq.n	800b3f8 <HAL_TIM_ConfigClockSource+0xf8>
 800b32c:	d824      	bhi.n	800b378 <HAL_TIM_ConfigClockSource+0x78>
 800b32e:	2b40      	cmp	r3, #64	; 0x40
 800b330:	d07c      	beq.n	800b42c <HAL_TIM_ConfigClockSource+0x12c>
 800b332:	d94b      	bls.n	800b3cc <HAL_TIM_ConfigClockSource+0xcc>
 800b334:	2b50      	cmp	r3, #80	; 0x50
 800b336:	d117      	bne.n	800b368 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800b338:	684b      	ldr	r3, [r1, #4]
 800b33a:	68cd      	ldr	r5, [r1, #12]
{
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 800b33c:	6a21      	ldr	r1, [r4, #32]
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
  tmpccmr1 |= (TIM_ICFilter << 4U);

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800b33e:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800b342:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800b344:	6a23      	ldr	r3, [r4, #32]
 800b346:	f023 0301 	bic.w	r3, r3, #1
 800b34a:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800b34c:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800b34e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800b352:	ea43 1305 	orr.w	r3, r3, r5, lsl #4

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800b356:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800b358:	6221      	str	r1, [r4, #32]
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 800b35a:	68a3      	ldr	r3, [r4, #8]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 800b35c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800b360:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  HAL_StatusTypeDef status = HAL_OK;
 800b364:	2000      	movs	r0, #0
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800b366:	60a3      	str	r3, [r4, #8]
  htim->State = HAL_TIM_STATE_READY;
 800b368:	2101      	movs	r1, #1
  __HAL_UNLOCK(htim);
 800b36a:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800b36c:	f882 103d 	strb.w	r1, [r2, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800b370:	f882 303c 	strb.w	r3, [r2, #60]	; 0x3c
}
 800b374:	bc30      	pop	{r4, r5}
 800b376:	4770      	bx	lr
  switch (sClockSourceConfig->ClockSource)
 800b378:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800b37c:	d038      	beq.n	800b3f0 <HAL_TIM_ConfigClockSource+0xf0>
 800b37e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800b382:	d110      	bne.n	800b3a6 <HAL_TIM_ConfigClockSource+0xa6>

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800b384:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800b388:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800b38a:	432b      	orrs	r3, r5
 800b38c:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800b38e:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800b392:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800b396:	430b      	orrs	r3, r1

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800b398:	60a3      	str	r3, [r4, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800b39a:	68a3      	ldr	r3, [r4, #8]
 800b39c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  HAL_StatusTypeDef status = HAL_OK;
 800b3a0:	2000      	movs	r0, #0
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800b3a2:	60a3      	str	r3, [r4, #8]
      break;
 800b3a4:	e7e0      	b.n	800b368 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800b3a6:	2b70      	cmp	r3, #112	; 0x70
 800b3a8:	d1de      	bne.n	800b368 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800b3aa:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800b3ae:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800b3b0:	432b      	orrs	r3, r5
 800b3b2:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800b3b4:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800b3b8:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800b3bc:	430b      	orrs	r3, r1
  TIMx->SMCR = tmpsmcr;
 800b3be:	60a3      	str	r3, [r4, #8]
      tmpsmcr = htim->Instance->SMCR;
 800b3c0:	68a3      	ldr	r3, [r4, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800b3c2:	f043 0377 	orr.w	r3, r3, #119	; 0x77
  HAL_StatusTypeDef status = HAL_OK;
 800b3c6:	2000      	movs	r0, #0
      htim->Instance->SMCR = tmpsmcr;
 800b3c8:	60a3      	str	r3, [r4, #8]
      break;
 800b3ca:	e7cd      	b.n	800b368 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800b3cc:	2b20      	cmp	r3, #32
 800b3ce:	d002      	beq.n	800b3d6 <HAL_TIM_ConfigClockSource+0xd6>
 800b3d0:	d90a      	bls.n	800b3e8 <HAL_TIM_ConfigClockSource+0xe8>
 800b3d2:	2b30      	cmp	r3, #48	; 0x30
 800b3d4:	d1c8      	bne.n	800b368 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr = TIMx->SMCR;
 800b3d6:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800b3d8:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800b3dc:	430b      	orrs	r3, r1
 800b3de:	f043 0307 	orr.w	r3, r3, #7
  HAL_StatusTypeDef status = HAL_OK;
 800b3e2:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800b3e4:	60a3      	str	r3, [r4, #8]
}
 800b3e6:	e7bf      	b.n	800b368 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800b3e8:	f033 0110 	bics.w	r1, r3, #16
 800b3ec:	d1bc      	bne.n	800b368 <HAL_TIM_ConfigClockSource+0x68>
 800b3ee:	e7f2      	b.n	800b3d6 <HAL_TIM_ConfigClockSource+0xd6>
  HAL_StatusTypeDef status = HAL_OK;
 800b3f0:	2000      	movs	r0, #0
 800b3f2:	e7b9      	b.n	800b368 <HAL_TIM_ConfigClockSource+0x68>
  __HAL_LOCK(htim);
 800b3f4:	2002      	movs	r0, #2
}
 800b3f6:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800b3f8:	6a23      	ldr	r3, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800b3fa:	6848      	ldr	r0, [r1, #4]
 800b3fc:	68cd      	ldr	r5, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800b3fe:	f023 0310 	bic.w	r3, r3, #16
 800b402:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800b404:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800b406:	6a23      	ldr	r3, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800b408:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800b40c:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 800b410:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800b414:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 800b418:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800b41a:	6223      	str	r3, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800b41c:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800b41e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800b422:	f043 0367 	orr.w	r3, r3, #103	; 0x67
  HAL_StatusTypeDef status = HAL_OK;
 800b426:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800b428:	60a3      	str	r3, [r4, #8]
}
 800b42a:	e79d      	b.n	800b368 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800b42c:	684b      	ldr	r3, [r1, #4]
 800b42e:	68cd      	ldr	r5, [r1, #12]
  tmpccer = TIMx->CCER;
 800b430:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800b432:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800b436:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800b438:	6a23      	ldr	r3, [r4, #32]
 800b43a:	f023 0301 	bic.w	r3, r3, #1
 800b43e:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800b440:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800b442:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800b446:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800b44a:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800b44c:	6221      	str	r1, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800b44e:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800b450:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800b454:	f043 0347 	orr.w	r3, r3, #71	; 0x47
  HAL_StatusTypeDef status = HAL_OK;
 800b458:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800b45a:	60a3      	str	r3, [r4, #8]
}
 800b45c:	e784      	b.n	800b368 <HAL_TIM_ConfigClockSource+0x68>
 800b45e:	bf00      	nop

0800b460 <HAL_TIM_SlaveConfigSynchro>:
  __HAL_LOCK(htim);
 800b460:	f890 203c 	ldrb.w	r2, [r0, #60]	; 0x3c
 800b464:	2a01      	cmp	r2, #1
 800b466:	d050      	beq.n	800b50a <HAL_TIM_SlaveConfigSynchro+0xaa>
 800b468:	4603      	mov	r3, r0
{
 800b46a:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800b46c:	2202      	movs	r2, #2
  tmpsmcr = htim->Instance->SMCR;
 800b46e:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800b470:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  __HAL_LOCK(htim);
 800b474:	2001      	movs	r0, #1
 800b476:	f883 003c 	strb.w	r0, [r3, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800b47a:	68a2      	ldr	r2, [r4, #8]
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800b47c:	6848      	ldr	r0, [r1, #4]
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800b47e:	680d      	ldr	r5, [r1, #0]
  tmpsmcr &= ~TIM_SMCR_TS;
 800b480:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800b484:	4302      	orrs	r2, r0
  tmpsmcr &= ~TIM_SMCR_SMS;
 800b486:	f022 0207 	bic.w	r2, r2, #7
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800b48a:	432a      	orrs	r2, r5
  switch (sSlaveConfig->InputTrigger)
 800b48c:	2850      	cmp	r0, #80	; 0x50
  htim->Instance->SMCR = tmpsmcr;
 800b48e:	60a2      	str	r2, [r4, #8]
  switch (sSlaveConfig->InputTrigger)
 800b490:	d060      	beq.n	800b554 <HAL_TIM_SlaveConfigSynchro+0xf4>
 800b492:	d90f      	bls.n	800b4b4 <HAL_TIM_SlaveConfigSynchro+0x54>
 800b494:	2860      	cmp	r0, #96	; 0x60
 800b496:	d03a      	beq.n	800b50e <HAL_TIM_SlaveConfigSynchro+0xae>
 800b498:	2870      	cmp	r0, #112	; 0x70
 800b49a:	d10e      	bne.n	800b4ba <HAL_TIM_SlaveConfigSynchro+0x5a>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800b49c:	e9d1 5202 	ldrd	r5, r2, [r1, #8]
  tmpsmcr = TIMx->SMCR;
 800b4a0:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800b4a2:	432a      	orrs	r2, r5
 800b4a4:	690d      	ldr	r5, [r1, #16]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800b4a6:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800b4aa:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800b4ae:	430a      	orrs	r2, r1
  TIMx->SMCR = tmpsmcr;
 800b4b0:	60a2      	str	r2, [r4, #8]
 800b4b2:	e00f      	b.n	800b4d4 <HAL_TIM_SlaveConfigSynchro+0x74>
  switch (sSlaveConfig->InputTrigger)
 800b4b4:	2840      	cmp	r0, #64	; 0x40
 800b4b6:	d03d      	beq.n	800b534 <HAL_TIM_SlaveConfigSynchro+0xd4>
 800b4b8:	d907      	bls.n	800b4ca <HAL_TIM_SlaveConfigSynchro+0x6a>
    htim->State = HAL_TIM_STATE_READY;
 800b4ba:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800b4bc:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800b4be:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800b4c2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
 800b4c6:	bc30      	pop	{r4, r5}
 800b4c8:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800b4ca:	2820      	cmp	r0, #32
 800b4cc:	d002      	beq.n	800b4d4 <HAL_TIM_SlaveConfigSynchro+0x74>
 800b4ce:	d912      	bls.n	800b4f6 <HAL_TIM_SlaveConfigSynchro+0x96>
 800b4d0:	2830      	cmp	r0, #48	; 0x30
 800b4d2:	d1f2      	bne.n	800b4ba <HAL_TIM_SlaveConfigSynchro+0x5a>
  __HAL_TIM_DISABLE_IT(htim, TIM_IT_TRIGGER);
 800b4d4:	68e2      	ldr	r2, [r4, #12]
 800b4d6:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800b4da:	60e2      	str	r2, [r4, #12]
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800b4dc:	68e2      	ldr	r2, [r4, #12]
  __HAL_UNLOCK(htim);
 800b4de:	2100      	movs	r1, #0
  htim->State = HAL_TIM_STATE_READY;
 800b4e0:	2501      	movs	r5, #1
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800b4e2:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800b4e6:	60e2      	str	r2, [r4, #12]
  htim->State = HAL_TIM_STATE_READY;
 800b4e8:	f883 503d 	strb.w	r5, [r3, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800b4ec:	f883 103c 	strb.w	r1, [r3, #60]	; 0x3c
  return HAL_OK;
 800b4f0:	4608      	mov	r0, r1
}
 800b4f2:	bc30      	pop	{r4, r5}
 800b4f4:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800b4f6:	f030 0210 	bics.w	r2, r0, #16
 800b4fa:	d0eb      	beq.n	800b4d4 <HAL_TIM_SlaveConfigSynchro+0x74>
    htim->State = HAL_TIM_STATE_READY;
 800b4fc:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800b4fe:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800b500:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800b504:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    return HAL_ERROR;
 800b508:	e7dd      	b.n	800b4c6 <HAL_TIM_SlaveConfigSynchro+0x66>
  __HAL_LOCK(htim);
 800b50a:	2002      	movs	r0, #2
}
 800b50c:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800b50e:	6a22      	ldr	r2, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800b510:	6888      	ldr	r0, [r1, #8]
 800b512:	690d      	ldr	r5, [r1, #16]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800b514:	f022 0210 	bic.w	r2, r2, #16
 800b518:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800b51a:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800b51c:	6a22      	ldr	r2, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800b51e:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800b522:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800b526:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  tmpccer |= (TIM_ICPolarity << 4U);
 800b52a:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1 ;
 800b52e:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800b530:	6222      	str	r2, [r4, #32]
 800b532:	e7cf      	b.n	800b4d4 <HAL_TIM_SlaveConfigSynchro+0x74>
      if (sSlaveConfig->SlaveMode == TIM_SLAVEMODE_GATED)
 800b534:	2d05      	cmp	r5, #5
 800b536:	d0c0      	beq.n	800b4ba <HAL_TIM_SlaveConfigSynchro+0x5a>
      tmpccer = htim->Instance->CCER;
 800b538:	6a20      	ldr	r0, [r4, #32]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800b53a:	6a22      	ldr	r2, [r4, #32]
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800b53c:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800b53e:	f022 0201 	bic.w	r2, r2, #1
 800b542:	6222      	str	r2, [r4, #32]
      tmpccmr1 = htim->Instance->CCMR1;
 800b544:	69a2      	ldr	r2, [r4, #24]
      tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800b546:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800b54a:	ea42 1201 	orr.w	r2, r2, r1, lsl #4
      htim->Instance->CCMR1 = tmpccmr1;
 800b54e:	61a2      	str	r2, [r4, #24]
      htim->Instance->CCER = tmpccer;
 800b550:	6220      	str	r0, [r4, #32]
      break;
 800b552:	e7bf      	b.n	800b4d4 <HAL_TIM_SlaveConfigSynchro+0x74>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800b554:	688a      	ldr	r2, [r1, #8]
 800b556:	6908      	ldr	r0, [r1, #16]
  tmpccer = TIMx->CCER;
 800b558:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800b55a:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800b55e:	4311      	orrs	r1, r2
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800b560:	6a22      	ldr	r2, [r4, #32]
 800b562:	f022 0201 	bic.w	r2, r2, #1
 800b566:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800b568:	69a2      	ldr	r2, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800b56a:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800b56e:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800b572:	61a2      	str	r2, [r4, #24]
  TIMx->CCER = tmpccer;
 800b574:	6221      	str	r1, [r4, #32]
 800b576:	e7ad      	b.n	800b4d4 <HAL_TIM_SlaveConfigSynchro+0x74>

0800b578 <HAL_TIM_OC_DelayElapsedCallback>:
 800b578:	4770      	bx	lr
 800b57a:	bf00      	nop

0800b57c <HAL_TIM_IC_CaptureCallback>:
 800b57c:	4770      	bx	lr
 800b57e:	bf00      	nop

0800b580 <HAL_TIM_PWM_PulseFinishedCallback>:
 800b580:	4770      	bx	lr
 800b582:	bf00      	nop

0800b584 <HAL_TIM_TriggerCallback>:
 800b584:	4770      	bx	lr
 800b586:	bf00      	nop

0800b588 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800b588:	6803      	ldr	r3, [r0, #0]
 800b58a:	691a      	ldr	r2, [r3, #16]
 800b58c:	0791      	lsls	r1, r2, #30
{
 800b58e:	b510      	push	{r4, lr}
 800b590:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800b592:	d502      	bpl.n	800b59a <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800b594:	68da      	ldr	r2, [r3, #12]
 800b596:	0792      	lsls	r2, r2, #30
 800b598:	d45f      	bmi.n	800b65a <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800b59a:	691a      	ldr	r2, [r3, #16]
 800b59c:	0750      	lsls	r0, r2, #29
 800b59e:	d502      	bpl.n	800b5a6 <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800b5a0:	68da      	ldr	r2, [r3, #12]
 800b5a2:	0751      	lsls	r1, r2, #29
 800b5a4:	d446      	bmi.n	800b634 <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800b5a6:	691a      	ldr	r2, [r3, #16]
 800b5a8:	0712      	lsls	r2, r2, #28
 800b5aa:	d502      	bpl.n	800b5b2 <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800b5ac:	68da      	ldr	r2, [r3, #12]
 800b5ae:	0710      	lsls	r0, r2, #28
 800b5b0:	d42e      	bmi.n	800b610 <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800b5b2:	691a      	ldr	r2, [r3, #16]
 800b5b4:	06d2      	lsls	r2, r2, #27
 800b5b6:	d502      	bpl.n	800b5be <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800b5b8:	68da      	ldr	r2, [r3, #12]
 800b5ba:	06d0      	lsls	r0, r2, #27
 800b5bc:	d418      	bmi.n	800b5f0 <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800b5be:	691a      	ldr	r2, [r3, #16]
 800b5c0:	07d1      	lsls	r1, r2, #31
 800b5c2:	d502      	bpl.n	800b5ca <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800b5c4:	68da      	ldr	r2, [r3, #12]
 800b5c6:	07d2      	lsls	r2, r2, #31
 800b5c8:	d45d      	bmi.n	800b686 <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800b5ca:	691a      	ldr	r2, [r3, #16]
 800b5cc:	0610      	lsls	r0, r2, #24
 800b5ce:	d502      	bpl.n	800b5d6 <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800b5d0:	68da      	ldr	r2, [r3, #12]
 800b5d2:	0611      	lsls	r1, r2, #24
 800b5d4:	d45f      	bmi.n	800b696 <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800b5d6:	691a      	ldr	r2, [r3, #16]
 800b5d8:	0652      	lsls	r2, r2, #25
 800b5da:	d502      	bpl.n	800b5e2 <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800b5dc:	68da      	ldr	r2, [r3, #12]
 800b5de:	0650      	lsls	r0, r2, #25
 800b5e0:	d461      	bmi.n	800b6a6 <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800b5e2:	691a      	ldr	r2, [r3, #16]
 800b5e4:	0691      	lsls	r1, r2, #26
 800b5e6:	d502      	bpl.n	800b5ee <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800b5e8:	68da      	ldr	r2, [r3, #12]
 800b5ea:	0692      	lsls	r2, r2, #26
 800b5ec:	d443      	bmi.n	800b676 <HAL_TIM_IRQHandler+0xee>
}
 800b5ee:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800b5f0:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800b5f4:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800b5f6:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800b5f8:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800b5fa:	69db      	ldr	r3, [r3, #28]
 800b5fc:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800b600:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800b602:	d064      	beq.n	800b6ce <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800b604:	f7ff ffba 	bl	800b57c <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800b608:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800b60a:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800b60c:	7722      	strb	r2, [r4, #28]
 800b60e:	e7d6      	b.n	800b5be <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800b610:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800b614:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800b616:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800b618:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800b61a:	69db      	ldr	r3, [r3, #28]
 800b61c:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800b61e:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800b620:	d152      	bne.n	800b6c8 <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800b622:	f7ff ffa9 	bl	800b578 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800b626:	4620      	mov	r0, r4
 800b628:	f7ff ffaa 	bl	800b580 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800b62c:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800b62e:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800b630:	7722      	strb	r2, [r4, #28]
 800b632:	e7be      	b.n	800b5b2 <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800b634:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800b638:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800b63a:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800b63c:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800b63e:	699b      	ldr	r3, [r3, #24]
 800b640:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800b644:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800b646:	d13c      	bne.n	800b6c2 <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800b648:	f7ff ff96 	bl	800b578 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800b64c:	4620      	mov	r0, r4
 800b64e:	f7ff ff97 	bl	800b580 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800b652:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800b654:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800b656:	7722      	strb	r2, [r4, #28]
 800b658:	e7a5      	b.n	800b5a6 <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800b65a:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800b65e:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800b660:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800b662:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800b664:	699b      	ldr	r3, [r3, #24]
 800b666:	079b      	lsls	r3, r3, #30
 800b668:	d025      	beq.n	800b6b6 <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800b66a:	f7ff ff87 	bl	800b57c <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800b66e:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800b670:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800b672:	7722      	strb	r2, [r4, #28]
 800b674:	e791      	b.n	800b59a <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800b676:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800b67a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800b67c:	611a      	str	r2, [r3, #16]
}
 800b67e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800b682:	f000 b86b 	b.w	800b75c <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800b686:	f06f 0201 	mvn.w	r2, #1
 800b68a:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800b68c:	4620      	mov	r0, r4
 800b68e:	f7f6 fa63 	bl	8001b58 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800b692:	6823      	ldr	r3, [r4, #0]
 800b694:	e799      	b.n	800b5ca <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800b696:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800b69a:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800b69c:	4620      	mov	r0, r4
 800b69e:	f000 f85f 	bl	800b760 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800b6a2:	6823      	ldr	r3, [r4, #0]
 800b6a4:	e797      	b.n	800b5d6 <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800b6a6:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800b6aa:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800b6ac:	4620      	mov	r0, r4
 800b6ae:	f7ff ff69 	bl	800b584 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800b6b2:	6823      	ldr	r3, [r4, #0]
 800b6b4:	e795      	b.n	800b5e2 <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800b6b6:	f7ff ff5f 	bl	800b578 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800b6ba:	4620      	mov	r0, r4
 800b6bc:	f7ff ff60 	bl	800b580 <HAL_TIM_PWM_PulseFinishedCallback>
 800b6c0:	e7d5      	b.n	800b66e <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800b6c2:	f7ff ff5b 	bl	800b57c <HAL_TIM_IC_CaptureCallback>
 800b6c6:	e7c4      	b.n	800b652 <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800b6c8:	f7ff ff58 	bl	800b57c <HAL_TIM_IC_CaptureCallback>
 800b6cc:	e7ae      	b.n	800b62c <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800b6ce:	f7ff ff53 	bl	800b578 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800b6d2:	4620      	mov	r0, r4
 800b6d4:	f7ff ff54 	bl	800b580 <HAL_TIM_PWM_PulseFinishedCallback>
 800b6d8:	e796      	b.n	800b608 <HAL_TIM_IRQHandler+0x80>
 800b6da:	bf00      	nop

0800b6dc <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800b6dc:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800b6e0:	2b01      	cmp	r3, #1
 800b6e2:	d037      	beq.n	800b754 <HAL_TIMEx_MasterConfigSynchronization+0x78>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800b6e4:	6803      	ldr	r3, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800b6e6:	2202      	movs	r2, #2
{
 800b6e8:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800b6ea:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  tmpcr2 = htim->Instance->CR2;
 800b6ee:	685a      	ldr	r2, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800b6f0:	680d      	ldr	r5, [r1, #0]
  tmpsmcr = htim->Instance->SMCR;
 800b6f2:	689c      	ldr	r4, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800b6f4:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800b6f8:	432a      	orrs	r2, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800b6fa:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800b6fc:	4a16      	ldr	r2, [pc, #88]	; (800b758 <HAL_TIMEx_MasterConfigSynchronization+0x7c>)
 800b6fe:	4293      	cmp	r3, r2
 800b700:	d01a      	beq.n	800b738 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800b702:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800b706:	d017      	beq.n	800b738 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800b708:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800b70c:	4293      	cmp	r3, r2
 800b70e:	d013      	beq.n	800b738 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800b710:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800b714:	4293      	cmp	r3, r2
 800b716:	d00f      	beq.n	800b738 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800b718:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800b71c:	4293      	cmp	r3, r2
 800b71e:	d00b      	beq.n	800b738 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800b720:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800b724:	4293      	cmp	r3, r2
 800b726:	d007      	beq.n	800b738 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800b728:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800b72c:	4293      	cmp	r3, r2
 800b72e:	d003      	beq.n	800b738 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800b730:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800b734:	4293      	cmp	r3, r2
 800b736:	d104      	bne.n	800b742 <HAL_TIMEx_MasterConfigSynchronization+0x66>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800b738:	684a      	ldr	r2, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 800b73a:	f024 0480 	bic.w	r4, r4, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800b73e:	4314      	orrs	r4, r2

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800b740:	609c      	str	r4, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;

  __HAL_UNLOCK(htim);
 800b742:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800b744:	2201      	movs	r2, #1
 800b746:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800b74a:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c

  return HAL_OK;
}
 800b74e:	bc30      	pop	{r4, r5}
  return HAL_OK;
 800b750:	4618      	mov	r0, r3
}
 800b752:	4770      	bx	lr
  __HAL_LOCK(htim);
 800b754:	2002      	movs	r0, #2
}
 800b756:	4770      	bx	lr
 800b758:	40010000 	.word	0x40010000

0800b75c <HAL_TIMEx_CommutCallback>:
 800b75c:	4770      	bx	lr
 800b75e:	bf00      	nop

0800b760 <HAL_TIMEx_BreakCallback>:
 800b760:	4770      	bx	lr
 800b762:	bf00      	nop

0800b764 <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800b764:	680b      	ldr	r3, [r1, #0]
{
 800b766:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800b768:	b9d3      	cbnz	r3, 800b7a0 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800b76a:	6803      	ldr	r3, [r0, #0]
 800b76c:	684c      	ldr	r4, [r1, #4]
 800b76e:	688a      	ldr	r2, [r1, #8]
 800b770:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800b774:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800b778:	4323      	orrs	r3, r4
 800b77a:	4313      	orrs	r3, r2
 800b77c:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800b780:	4323      	orrs	r3, r4
 800b782:	4313      	orrs	r3, r2
 800b784:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800b788:	4323      	orrs	r3, r4
 800b78a:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800b78e:	4313      	orrs	r3, r2
 800b790:	432b      	orrs	r3, r5
 800b792:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800b794:	4323      	orrs	r3, r4
 800b796:	4313      	orrs	r3, r2
 800b798:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800b79a:	bc30      	pop	{r4, r5}
 800b79c:	2000      	movs	r0, #0
 800b79e:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800b7a0:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800b7a4:	6803      	ldr	r3, [r0, #0]
 800b7a6:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800b7aa:	4323      	orrs	r3, r4
 800b7ac:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800b7ae:	4313      	orrs	r3, r2
 800b7b0:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800b7b2:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800b7b4:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800b7b6:	6843      	ldr	r3, [r0, #4]
 800b7b8:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800b7bc:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800b7c0:	4313      	orrs	r3, r2
 800b7c2:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800b7c6:	4323      	orrs	r3, r4
 800b7c8:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800b7cc:	4313      	orrs	r3, r2
 800b7ce:	432b      	orrs	r3, r5
 800b7d0:	698a      	ldr	r2, [r1, #24]
 800b7d2:	4323      	orrs	r3, r4
 800b7d4:	4313      	orrs	r3, r2
 800b7d6:	6043      	str	r3, [r0, #4]
}
 800b7d8:	bc30      	pop	{r4, r5}
 800b7da:	2000      	movs	r0, #0
 800b7dc:	4770      	bx	lr
 800b7de:	bf00      	nop

0800b7e0 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800b7e0:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800b7e2:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800b7e4:	bb02      	cbnz	r2, 800b828 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800b7e6:	e9d1 2400 	ldrd	r2, r4, [r1]
 800b7ea:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800b7ee:	3c01      	subs	r4, #1
 800b7f0:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800b7f4:	3a01      	subs	r2, #1
 800b7f6:	4313      	orrs	r3, r2
 800b7f8:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800b7fc:	3c01      	subs	r4, #1
 800b7fe:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800b802:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800b806:	3a01      	subs	r2, #1
 800b808:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800b80c:	698a      	ldr	r2, [r1, #24]
 800b80e:	1e69      	subs	r1, r5, #1
 800b810:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800b814:	1e61      	subs	r1, r4, #1
 800b816:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800b81a:	3a01      	subs	r2, #1
 800b81c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800b820:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800b822:	bc30      	pop	{r4, r5}
 800b824:	2000      	movs	r0, #0
 800b826:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800b828:	68cc      	ldr	r4, [r1, #12]
 800b82a:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800b82c:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800b82e:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800b832:	3c01      	subs	r4, #1
 800b834:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800b838:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800b83c:	3a01      	subs	r2, #1
 800b83e:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800b842:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800b844:	e9d1 2400 	ldrd	r2, r4, [r1]
 800b848:	68c3      	ldr	r3, [r0, #12]
 800b84a:	3c01      	subs	r4, #1
 800b84c:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800b850:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800b854:	3a01      	subs	r2, #1
 800b856:	690c      	ldr	r4, [r1, #16]
 800b858:	4313      	orrs	r3, r2
 800b85a:	698a      	ldr	r2, [r1, #24]
 800b85c:	1e69      	subs	r1, r5, #1
 800b85e:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800b862:	1e61      	subs	r1, r4, #1
 800b864:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800b868:	3a01      	subs	r2, #1
 800b86a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800b86e:	60c3      	str	r3, [r0, #12]
}
 800b870:	bc30      	pop	{r4, r5}
 800b872:	2000      	movs	r0, #0
 800b874:	4770      	bx	lr
 800b876:	bf00      	nop

0800b878 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800b878:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800b87a:	680b      	ldr	r3, [r1, #0]
{
 800b87c:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800b87e:	684a      	ldr	r2, [r1, #4]
{
 800b880:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800b882:	4313      	orrs	r3, r2
 800b884:	6900      	ldr	r0, [r0, #16]
 800b886:	68ca      	ldr	r2, [r1, #12]
 800b888:	0d80      	lsrs	r0, r0, #22
 800b88a:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800b88e:	688a      	ldr	r2, [r1, #8]
 800b890:	0580      	lsls	r0, r0, #22
 800b892:	4303      	orrs	r3, r0
 800b894:	3a01      	subs	r2, #1
 800b896:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800b89a:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800b89c:	f7fc fa32 	bl	8007d04 <HAL_GetTick>
 800b8a0:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800b8a2:	1c6b      	adds	r3, r5, #1
 800b8a4:	d105      	bne.n	800b8b2 <FMC_SDRAM_SendCommand+0x3a>
 800b8a6:	69a3      	ldr	r3, [r4, #24]
 800b8a8:	f013 0320 	ands.w	r3, r3, #32
 800b8ac:	d1fb      	bne.n	800b8a6 <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800b8ae:	4618      	mov	r0, r3
}
 800b8b0:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800b8b2:	69a3      	ldr	r3, [r4, #24]
 800b8b4:	f013 0320 	ands.w	r3, r3, #32
 800b8b8:	d0f9      	beq.n	800b8ae <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800b8ba:	b125      	cbz	r5, 800b8c6 <FMC_SDRAM_SendCommand+0x4e>
 800b8bc:	f7fc fa22 	bl	8007d04 <HAL_GetTick>
 800b8c0:	1b80      	subs	r0, r0, r6
 800b8c2:	42a8      	cmp	r0, r5
 800b8c4:	d9ed      	bls.n	800b8a2 <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800b8c6:	2003      	movs	r0, #3
}
 800b8c8:	bd70      	pop	{r4, r5, r6, pc}
 800b8ca:	bf00      	nop

0800b8cc <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800b8cc:	6943      	ldr	r3, [r0, #20]
 800b8ce:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800b8d2:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800b8d4:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800b8d8:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800b8dc:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800b8de:	6151      	str	r1, [r2, #20]
}
 800b8e0:	4770      	bx	lr
 800b8e2:	bf00      	nop

0800b8e4 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800b8e4:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800b8e6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800b8ea:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800b8ec:	f002 fb02 	bl	800def4 <xTaskGetSchedulerState>
 800b8f0:	2801      	cmp	r0, #1
 800b8f2:	d100      	bne.n	800b8f6 <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800b8f4:	bd08      	pop	{r3, pc}
 800b8f6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800b8fa:	f000 bc43 	b.w	800c184 <xPortSysTickHandler>
 800b8fe:	bf00      	nop

0800b900 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800b900:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800b904:	b92b      	cbnz	r3, 800b912 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800b906:	4b06      	ldr	r3, [pc, #24]	; (800b920 <osKernelInitialize+0x20>)
 800b908:	6818      	ldr	r0, [r3, #0]
 800b90a:	b928      	cbnz	r0, 800b918 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800b90c:	2201      	movs	r2, #1
 800b90e:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800b910:	4770      	bx	lr
    stat = osErrorISR;
 800b912:	f06f 0005 	mvn.w	r0, #5
 800b916:	4770      	bx	lr
    } else {
      stat = osError;
 800b918:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800b91c:	4770      	bx	lr
 800b91e:	bf00      	nop
 800b920:	20002c70 	.word	0x20002c70

0800b924 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800b924:	b510      	push	{r4, lr}
 800b926:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800b92a:	b974      	cbnz	r4, 800b94a <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800b92c:	4b08      	ldr	r3, [pc, #32]	; (800b950 <osKernelStart+0x2c>)
 800b92e:	681a      	ldr	r2, [r3, #0]
 800b930:	2a01      	cmp	r2, #1
 800b932:	d107      	bne.n	800b944 <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800b934:	4907      	ldr	r1, [pc, #28]	; (800b954 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800b936:	2202      	movs	r2, #2
 800b938:	77cc      	strb	r4, [r1, #31]
 800b93a:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800b93c:	f002 f8b4 	bl	800daa8 <vTaskStartScheduler>
      stat = osOK;
 800b940:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800b942:	bd10      	pop	{r4, pc}
      stat = osError;
 800b944:	f04f 30ff 	mov.w	r0, #4294967295
}
 800b948:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800b94a:	f06f 0005 	mvn.w	r0, #5
}
 800b94e:	bd10      	pop	{r4, pc}
 800b950:	20002c70 	.word	0x20002c70
 800b954:	e000ed00 	.word	0xe000ed00

0800b958 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800b958:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b95a:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800b95c:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800b95e:	4615      	mov	r5, r2
  hTask = NULL;
 800b960:	9405      	str	r4, [sp, #20]
 800b962:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800b966:	b9ea      	cbnz	r2, 800b9a4 <osThreadNew+0x4c>
 800b968:	b350      	cbz	r0, 800b9c0 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800b96a:	b1f5      	cbz	r5, 800b9aa <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800b96c:	69ab      	ldr	r3, [r5, #24]
 800b96e:	bb5b      	cbnz	r3, 800b9c8 <osThreadNew+0x70>
 800b970:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800b972:	686a      	ldr	r2, [r5, #4]
 800b974:	07d2      	lsls	r2, r2, #31
 800b976:	d423      	bmi.n	800b9c0 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800b978:	696e      	ldr	r6, [r5, #20]
 800b97a:	b34e      	cbz	r6, 800b9d0 <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800b97c:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800b980:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800b982:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800b984:	b34c      	cbz	r4, 800b9da <osThreadNew+0x82>
 800b986:	68ea      	ldr	r2, [r5, #12]
 800b988:	2aab      	cmp	r2, #171	; 0xab
 800b98a:	d919      	bls.n	800b9c0 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800b98c:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800b98e:	b1bd      	cbz	r5, 800b9c0 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800b990:	b1b6      	cbz	r6, 800b9c0 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800b992:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800b996:	9300      	str	r3, [sp, #0]
 800b998:	4662      	mov	r2, ip
 800b99a:	460b      	mov	r3, r1
 800b99c:	4639      	mov	r1, r7
 800b99e:	f001 ffc1 	bl	800d924 <xTaskCreateStatic>
 800b9a2:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800b9a4:	4620      	mov	r0, r4
 800b9a6:	b007      	add	sp, #28
 800b9a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b9aa:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800b9ac:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800b9ae:	ac05      	add	r4, sp, #20
 800b9b0:	9300      	str	r3, [sp, #0]
 800b9b2:	9401      	str	r4, [sp, #4]
 800b9b4:	460b      	mov	r3, r1
 800b9b6:	4629      	mov	r1, r5
 800b9b8:	f001 ffee 	bl	800d998 <xTaskCreate>
 800b9bc:	2801      	cmp	r0, #1
 800b9be:	d00a      	beq.n	800b9d6 <osThreadNew+0x7e>
        return (NULL);
 800b9c0:	2400      	movs	r4, #0
}
 800b9c2:	4620      	mov	r0, r4
 800b9c4:	b007      	add	sp, #28
 800b9c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800b9c8:	1e5c      	subs	r4, r3, #1
 800b9ca:	2c37      	cmp	r4, #55	; 0x37
 800b9cc:	d9d1      	bls.n	800b972 <osThreadNew+0x1a>
 800b9ce:	e7f7      	b.n	800b9c0 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800b9d0:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800b9d4:	e7d4      	b.n	800b980 <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800b9d6:	9c05      	ldr	r4, [sp, #20]
 800b9d8:	e7e4      	b.n	800b9a4 <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800b9da:	68ee      	ldr	r6, [r5, #12]
 800b9dc:	2e00      	cmp	r6, #0
 800b9de:	d1e1      	bne.n	800b9a4 <osThreadNew+0x4c>
 800b9e0:	692d      	ldr	r5, [r5, #16]
 800b9e2:	2d00      	cmp	r5, #0
 800b9e4:	d1de      	bne.n	800b9a4 <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800b9e6:	fa1f f28c 	uxth.w	r2, ip
 800b9ea:	463d      	mov	r5, r7
 800b9ec:	e7df      	b.n	800b9ae <osThreadNew+0x56>
 800b9ee:	bf00      	nop

0800b9f0 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800b9f0:	b510      	push	{r4, lr}
 800b9f2:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800b9f6:	b92c      	cbnz	r4, 800ba04 <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800b9f8:	b900      	cbnz	r0, 800b9fc <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800b9fa:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800b9fc:	f001 fffe 	bl	800d9fc <vTaskDelay>
    stat = osOK;
 800ba00:	4620      	mov	r0, r4
}
 800ba02:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800ba04:	f06f 0005 	mvn.w	r0, #5
}
 800ba08:	bd10      	pop	{r4, pc}
 800ba0a:	bf00      	nop

0800ba0c <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800ba0c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ba0e:	b083      	sub	sp, #12
 800ba10:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800ba14:	b9fe      	cbnz	r6, 800ba56 <osSemaphoreNew+0x4a>
 800ba16:	b1f0      	cbz	r0, 800ba56 <osSemaphoreNew+0x4a>
 800ba18:	4288      	cmp	r0, r1
 800ba1a:	460f      	mov	r7, r1
 800ba1c:	d31b      	bcc.n	800ba56 <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800ba1e:	4615      	mov	r5, r2
 800ba20:	b192      	cbz	r2, 800ba48 <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800ba22:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800ba26:	b1d2      	cbz	r2, 800ba5e <osSemaphoreNew+0x52>
 800ba28:	2b4f      	cmp	r3, #79	; 0x4f
 800ba2a:	d914      	bls.n	800ba56 <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800ba2c:	2801      	cmp	r0, #1
 800ba2e:	d038      	beq.n	800baa2 <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800ba30:	f000 fd8e 	bl	800c550 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800ba34:	4604      	mov	r4, r0
 800ba36:	b170      	cbz	r0, 800ba56 <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800ba38:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800ba3a:	4620      	mov	r0, r4
 800ba3c:	4629      	mov	r1, r5
 800ba3e:	f001 fc39 	bl	800d2b4 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800ba42:	4620      	mov	r0, r4
 800ba44:	b003      	add	sp, #12
 800ba46:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800ba48:	2801      	cmp	r0, #1
 800ba4a:	d012      	beq.n	800ba72 <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800ba4c:	f000 fde0 	bl	800c610 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800ba50:	4604      	mov	r4, r0
 800ba52:	2800      	cmp	r0, #0
 800ba54:	d1f1      	bne.n	800ba3a <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800ba56:	2400      	movs	r4, #0
}
 800ba58:	4620      	mov	r0, r4
 800ba5a:	b003      	add	sp, #12
 800ba5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800ba5e:	2b00      	cmp	r3, #0
 800ba60:	d1f9      	bne.n	800ba56 <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800ba62:	2801      	cmp	r0, #1
 800ba64:	d005      	beq.n	800ba72 <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800ba66:	f000 fdd3 	bl	800c610 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800ba6a:	4604      	mov	r4, r0
 800ba6c:	2800      	cmp	r0, #0
 800ba6e:	d1e3      	bne.n	800ba38 <osSemaphoreNew+0x2c>
 800ba70:	e7f1      	b.n	800ba56 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800ba72:	2203      	movs	r2, #3
 800ba74:	2100      	movs	r1, #0
 800ba76:	2001      	movs	r0, #1
 800ba78:	f000 fd28 	bl	800c4cc <xQueueGenericCreate>
 800ba7c:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800ba7e:	2c00      	cmp	r4, #0
 800ba80:	d0e9      	beq.n	800ba56 <osSemaphoreNew+0x4a>
 800ba82:	b917      	cbnz	r7, 800ba8a <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800ba84:	2d00      	cmp	r5, #0
 800ba86:	d1d7      	bne.n	800ba38 <osSemaphoreNew+0x2c>
 800ba88:	e7d7      	b.n	800ba3a <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800ba8a:	2300      	movs	r3, #0
 800ba8c:	461a      	mov	r2, r3
 800ba8e:	4619      	mov	r1, r3
 800ba90:	4620      	mov	r0, r4
 800ba92:	f000 fe03 	bl	800c69c <xQueueGenericSend>
 800ba96:	2801      	cmp	r0, #1
 800ba98:	d0f4      	beq.n	800ba84 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800ba9a:	4620      	mov	r0, r4
 800ba9c:	f001 fbc4 	bl	800d228 <vQueueDelete>
 800baa0:	e7d9      	b.n	800ba56 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800baa2:	4613      	mov	r3, r2
 800baa4:	2203      	movs	r2, #3
 800baa6:	9200      	str	r2, [sp, #0]
 800baa8:	4631      	mov	r1, r6
 800baaa:	4632      	mov	r2, r6
 800baac:	f000 fca0 	bl	800c3f0 <xQueueGenericCreateStatic>
 800bab0:	4604      	mov	r4, r0
 800bab2:	e7e4      	b.n	800ba7e <osSemaphoreNew+0x72>

0800bab4 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800bab4:	b370      	cbz	r0, 800bb14 <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800bab6:	b510      	push	{r4, lr}
 800bab8:	460c      	mov	r4, r1
 800baba:	b082      	sub	sp, #8
 800babc:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800bac0:	b1c3      	cbz	r3, 800baf4 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800bac2:	bb21      	cbnz	r1, 800bb0e <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800bac4:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800bac6:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800bac8:	f001 fb2c 	bl	800d124 <xQueueReceiveFromISR>
 800bacc:	2801      	cmp	r0, #1
 800bace:	d11a      	bne.n	800bb06 <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800bad0:	9b01      	ldr	r3, [sp, #4]
 800bad2:	b913      	cbnz	r3, 800bada <osSemaphoreAcquire+0x26>
  stat = osOK;
 800bad4:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800bad6:	b002      	add	sp, #8
 800bad8:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800bada:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800bade:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800bae2:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800bae6:	f3bf 8f4f 	dsb	sy
 800baea:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800baee:	4620      	mov	r0, r4
}
 800baf0:	b002      	add	sp, #8
 800baf2:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800baf4:	f001 f98c 	bl	800ce10 <xQueueSemaphoreTake>
 800baf8:	2801      	cmp	r0, #1
 800bafa:	d0eb      	beq.n	800bad4 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800bafc:	b11c      	cbz	r4, 800bb06 <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800bafe:	f06f 0001 	mvn.w	r0, #1
}
 800bb02:	b002      	add	sp, #8
 800bb04:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800bb06:	f06f 0002 	mvn.w	r0, #2
}
 800bb0a:	b002      	add	sp, #8
 800bb0c:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800bb0e:	f06f 0003 	mvn.w	r0, #3
 800bb12:	e7e0      	b.n	800bad6 <osSemaphoreAcquire+0x22>
 800bb14:	f06f 0003 	mvn.w	r0, #3
}
 800bb18:	4770      	bx	lr
 800bb1a:	bf00      	nop

0800bb1c <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800bb1c:	b330      	cbz	r0, 800bb6c <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800bb1e:	b510      	push	{r4, lr}
 800bb20:	b082      	sub	sp, #8
 800bb22:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800bb26:	b1ab      	cbz	r3, 800bb54 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800bb28:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800bb2a:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800bb2c:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800bb2e:	f000 ff99 	bl	800ca64 <xQueueGiveFromISR>
 800bb32:	2801      	cmp	r0, #1
 800bb34:	d117      	bne.n	800bb66 <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800bb36:	9b01      	ldr	r3, [sp, #4]
 800bb38:	b193      	cbz	r3, 800bb60 <osSemaphoreRelease+0x44>
 800bb3a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800bb3e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800bb42:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800bb46:	f3bf 8f4f 	dsb	sy
 800bb4a:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800bb4e:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800bb50:	b002      	add	sp, #8
 800bb52:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800bb54:	461a      	mov	r2, r3
 800bb56:	4619      	mov	r1, r3
 800bb58:	f000 fda0 	bl	800c69c <xQueueGenericSend>
 800bb5c:	2801      	cmp	r0, #1
 800bb5e:	d102      	bne.n	800bb66 <osSemaphoreRelease+0x4a>
  stat = osOK;
 800bb60:	2000      	movs	r0, #0
}
 800bb62:	b002      	add	sp, #8
 800bb64:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800bb66:	f06f 0002 	mvn.w	r0, #2
 800bb6a:	e7fa      	b.n	800bb62 <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800bb6c:	f06f 0003 	mvn.w	r0, #3
}
 800bb70:	4770      	bx	lr
 800bb72:	bf00      	nop

0800bb74 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800bb74:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bb76:	b085      	sub	sp, #20
 800bb78:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800bb7c:	b987      	cbnz	r7, 800bba0 <osMessageQueueNew+0x2c>
 800bb7e:	4605      	mov	r5, r0
 800bb80:	b170      	cbz	r0, 800bba0 <osMessageQueueNew+0x2c>
 800bb82:	b169      	cbz	r1, 800bba0 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800bb84:	4614      	mov	r4, r2
 800bb86:	b1ea      	cbz	r2, 800bbc4 <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800bb88:	6893      	ldr	r3, [r2, #8]
 800bb8a:	b163      	cbz	r3, 800bba6 <osMessageQueueNew+0x32>
 800bb8c:	68d2      	ldr	r2, [r2, #12]
 800bb8e:	2a4f      	cmp	r2, #79	; 0x4f
 800bb90:	d906      	bls.n	800bba0 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800bb92:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800bb94:	b122      	cbz	r2, 800bba0 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800bb96:	6966      	ldr	r6, [r4, #20]
 800bb98:	fb01 f505 	mul.w	r5, r1, r5
 800bb9c:	42ae      	cmp	r6, r5
 800bb9e:	d21c      	bcs.n	800bbda <osMessageQueueNew+0x66>
  hQueue = NULL;
 800bba0:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800bba2:	b005      	add	sp, #20
 800bba4:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800bba6:	68d3      	ldr	r3, [r2, #12]
 800bba8:	2b00      	cmp	r3, #0
 800bbaa:	d1f9      	bne.n	800bba0 <osMessageQueueNew+0x2c>
 800bbac:	6913      	ldr	r3, [r2, #16]
 800bbae:	2b00      	cmp	r3, #0
 800bbb0:	d1f6      	bne.n	800bba0 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800bbb2:	6952      	ldr	r2, [r2, #20]
 800bbb4:	2a00      	cmp	r2, #0
 800bbb6:	d1f3      	bne.n	800bba0 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800bbb8:	f000 fc88 	bl	800c4cc <xQueueGenericCreate>
    if (hQueue != NULL) {
 800bbbc:	2800      	cmp	r0, #0
 800bbbe:	d0ef      	beq.n	800bba0 <osMessageQueueNew+0x2c>
        name = attr->name;
 800bbc0:	6824      	ldr	r4, [r4, #0]
 800bbc2:	e003      	b.n	800bbcc <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800bbc4:	f000 fc82 	bl	800c4cc <xQueueGenericCreate>
    if (hQueue != NULL) {
 800bbc8:	2800      	cmp	r0, #0
 800bbca:	d0e9      	beq.n	800bba0 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800bbcc:	4621      	mov	r1, r4
 800bbce:	9003      	str	r0, [sp, #12]
 800bbd0:	f001 fb70 	bl	800d2b4 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800bbd4:	9803      	ldr	r0, [sp, #12]
}
 800bbd6:	b005      	add	sp, #20
 800bbd8:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800bbda:	9700      	str	r7, [sp, #0]
 800bbdc:	f000 fc08 	bl	800c3f0 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800bbe0:	2800      	cmp	r0, #0
 800bbe2:	d1ed      	bne.n	800bbc0 <osMessageQueueNew+0x4c>
 800bbe4:	e7dc      	b.n	800bba0 <osMessageQueueNew+0x2c>
 800bbe6:	bf00      	nop

0800bbe8 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800bbe8:	b570      	push	{r4, r5, r6, lr}
 800bbea:	461c      	mov	r4, r3
 800bbec:	b082      	sub	sp, #8
 800bbee:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800bbf2:	b1be      	cbz	r6, 800bc24 <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800bbf4:	b350      	cbz	r0, 800bc4c <osMessageQueuePut+0x64>
 800bbf6:	b349      	cbz	r1, 800bc4c <osMessageQueuePut+0x64>
 800bbf8:	bb43      	cbnz	r3, 800bc4c <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800bbfa:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800bbfc:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800bbfe:	f000 fecb 	bl	800c998 <xQueueGenericSendFromISR>
 800bc02:	2801      	cmp	r0, #1
 800bc04:	d11e      	bne.n	800bc44 <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800bc06:	9b01      	ldr	r3, [sp, #4]
 800bc08:	b1cb      	cbz	r3, 800bc3e <osMessageQueuePut+0x56>
 800bc0a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800bc0e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800bc12:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800bc16:	f3bf 8f4f 	dsb	sy
 800bc1a:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800bc1e:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800bc20:	b002      	add	sp, #8
 800bc22:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800bc24:	b190      	cbz	r0, 800bc4c <osMessageQueuePut+0x64>
 800bc26:	b189      	cbz	r1, 800bc4c <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800bc28:	4633      	mov	r3, r6
 800bc2a:	4622      	mov	r2, r4
 800bc2c:	f000 fd36 	bl	800c69c <xQueueGenericSend>
 800bc30:	2801      	cmp	r0, #1
 800bc32:	d004      	beq.n	800bc3e <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800bc34:	b134      	cbz	r4, 800bc44 <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800bc36:	f06f 0001 	mvn.w	r0, #1
}
 800bc3a:	b002      	add	sp, #8
 800bc3c:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800bc3e:	2000      	movs	r0, #0
}
 800bc40:	b002      	add	sp, #8
 800bc42:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800bc44:	f06f 0002 	mvn.w	r0, #2
}
 800bc48:	b002      	add	sp, #8
 800bc4a:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800bc4c:	f06f 0003 	mvn.w	r0, #3
 800bc50:	e7e6      	b.n	800bc20 <osMessageQueuePut+0x38>
 800bc52:	bf00      	nop

0800bc54 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800bc54:	b530      	push	{r4, r5, lr}
 800bc56:	461c      	mov	r4, r3
 800bc58:	b083      	sub	sp, #12
 800bc5a:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800bc5e:	b1bb      	cbz	r3, 800bc90 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800bc60:	b348      	cbz	r0, 800bcb6 <osMessageQueueGet+0x62>
 800bc62:	b341      	cbz	r1, 800bcb6 <osMessageQueueGet+0x62>
 800bc64:	bb3c      	cbnz	r4, 800bcb6 <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800bc66:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800bc68:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800bc6a:	f001 fa5b 	bl	800d124 <xQueueReceiveFromISR>
 800bc6e:	2801      	cmp	r0, #1
 800bc70:	d11d      	bne.n	800bcae <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800bc72:	9b01      	ldr	r3, [sp, #4]
 800bc74:	b1c3      	cbz	r3, 800bca8 <osMessageQueueGet+0x54>
 800bc76:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800bc7a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800bc7e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800bc82:	f3bf 8f4f 	dsb	sy
 800bc86:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800bc8a:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800bc8c:	b003      	add	sp, #12
 800bc8e:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800bc90:	b188      	cbz	r0, 800bcb6 <osMessageQueueGet+0x62>
 800bc92:	b181      	cbz	r1, 800bcb6 <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800bc94:	4622      	mov	r2, r4
 800bc96:	f000 ff3d 	bl	800cb14 <xQueueReceive>
 800bc9a:	2801      	cmp	r0, #1
 800bc9c:	d004      	beq.n	800bca8 <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800bc9e:	b134      	cbz	r4, 800bcae <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800bca0:	f06f 0001 	mvn.w	r0, #1
}
 800bca4:	b003      	add	sp, #12
 800bca6:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800bca8:	2000      	movs	r0, #0
}
 800bcaa:	b003      	add	sp, #12
 800bcac:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800bcae:	f06f 0002 	mvn.w	r0, #2
}
 800bcb2:	b003      	add	sp, #12
 800bcb4:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800bcb6:	f06f 0003 	mvn.w	r0, #3
 800bcba:	e7e7      	b.n	800bc8c <osMessageQueueGet+0x38>

0800bcbc <osMessageQueueGetCount>:
 800bcbc:	b130      	cbz	r0, 800bccc <osMessageQueueGetCount+0x10>
 800bcbe:	f3ef 8305 	mrs	r3, IPSR
 800bcc2:	b10b      	cbz	r3, 800bcc8 <osMessageQueueGetCount+0xc>
 800bcc4:	f001 baa2 	b.w	800d20c <uxQueueMessagesWaitingFromISR>
 800bcc8:	f001 ba8a 	b.w	800d1e0 <uxQueueMessagesWaiting>
 800bccc:	4770      	bx	lr
 800bcce:	bf00      	nop

0800bcd0 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800bcd0:	4b04      	ldr	r3, [pc, #16]	; (800bce4 <vApplicationGetIdleTaskMemory+0x14>)
 800bcd2:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800bcd4:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800bcd6:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800bcd8:	4c03      	ldr	r4, [pc, #12]	; (800bce8 <vApplicationGetIdleTaskMemory+0x18>)
 800bcda:	600c      	str	r4, [r1, #0]
}
 800bcdc:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800bce0:	6013      	str	r3, [r2, #0]
}
 800bce2:	4770      	bx	lr
 800bce4:	20002bc4 	.word	0x20002bc4
 800bce8:	200029c4 	.word	0x200029c4

0800bcec <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800bcec:	4b05      	ldr	r3, [pc, #20]	; (800bd04 <vApplicationGetTimerTaskMemory+0x18>)
 800bcee:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800bcf0:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800bcf2:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800bcf6:	4c04      	ldr	r4, [pc, #16]	; (800bd08 <vApplicationGetTimerTaskMemory+0x1c>)
 800bcf8:	600c      	str	r4, [r1, #0]
}
 800bcfa:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800bcfe:	6013      	str	r3, [r2, #0]
}
 800bd00:	4770      	bx	lr
 800bd02:	bf00      	nop
 800bd04:	20003074 	.word	0x20003074
 800bd08:	20002c74 	.word	0x20002c74

0800bd0c <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800bd0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bd10:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800bd12:	f001 ff45 	bl	800dba0 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800bd16:	4a54      	ldr	r2, [pc, #336]	; (800be68 <pvPortMalloc+0x15c>)
 800bd18:	6816      	ldr	r6, [r2, #0]
 800bd1a:	2e00      	cmp	r6, #0
 800bd1c:	d06e      	beq.n	800bdfc <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800bd1e:	4b53      	ldr	r3, [pc, #332]	; (800be6c <pvPortMalloc+0x160>)
 800bd20:	681f      	ldr	r7, [r3, #0]
 800bd22:	423d      	tst	r5, r7
 800bd24:	d12e      	bne.n	800bd84 <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800bd26:	b36d      	cbz	r5, 800bd84 <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800bd28:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800bd2c:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800bd2e:	bf1c      	itt	ne
 800bd30:	f024 0407 	bicne.w	r4, r4, #7
 800bd34:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800bd36:	b32c      	cbz	r4, 800bd84 <pvPortMalloc+0x78>
 800bd38:	f8df c144 	ldr.w	ip, [pc, #324]	; 800be80 <pvPortMalloc+0x174>
 800bd3c:	f8dc 5000 	ldr.w	r5, [ip]
 800bd40:	42a5      	cmp	r5, r4
 800bd42:	d31f      	bcc.n	800bd84 <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800bd44:	484a      	ldr	r0, [pc, #296]	; (800be70 <pvPortMalloc+0x164>)
 800bd46:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800bd48:	e003      	b.n	800bd52 <pvPortMalloc+0x46>
 800bd4a:	681a      	ldr	r2, [r3, #0]
 800bd4c:	b122      	cbz	r2, 800bd58 <pvPortMalloc+0x4c>
 800bd4e:	4618      	mov	r0, r3
 800bd50:	4613      	mov	r3, r2
 800bd52:	6859      	ldr	r1, [r3, #4]
 800bd54:	42a1      	cmp	r1, r4
 800bd56:	d3f8      	bcc.n	800bd4a <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800bd58:	42b3      	cmp	r3, r6
 800bd5a:	d013      	beq.n	800bd84 <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800bd5c:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800bd5e:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800bd60:	f858 eb08 	ldr.w	lr, [r8], #8
 800bd64:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800bd68:	2a10      	cmp	r2, #16
 800bd6a:	d929      	bls.n	800bdc0 <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800bd6c:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800bd6e:	0748      	lsls	r0, r1, #29
 800bd70:	d00f      	beq.n	800bd92 <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800bd72:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bd76:	f383 8811 	msr	BASEPRI, r3
 800bd7a:	f3bf 8f6f 	isb	sy
 800bd7e:	f3bf 8f4f 	dsb	sy
 800bd82:	e7fe      	b.n	800bd82 <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800bd84:	f001 ff14 	bl	800dbb0 <xTaskResumeAll>
 800bd88:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800bd8c:	4640      	mov	r0, r8
 800bd8e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800bd92:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800bd94:	4a36      	ldr	r2, [pc, #216]	; (800be70 <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800bd96:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800bd98:	4614      	mov	r4, r2
 800bd9a:	6812      	ldr	r2, [r2, #0]
 800bd9c:	4291      	cmp	r1, r2
 800bd9e:	d8fb      	bhi.n	800bd98 <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800bda0:	6860      	ldr	r0, [r4, #4]
 800bda2:	eb04 0e00 	add.w	lr, r4, r0
 800bda6:	4571      	cmp	r1, lr
 800bda8:	d04b      	beq.n	800be42 <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800bdaa:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800bdae:	eb01 000e 	add.w	r0, r1, lr
 800bdb2:	4282      	cmp	r2, r0
 800bdb4:	d051      	beq.n	800be5a <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800bdb6:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800bdb8:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800bdba:	bf18      	it	ne
 800bdbc:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800bdbe:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800bdc0:	4a2c      	ldr	r2, [pc, #176]	; (800be74 <pvPortMalloc+0x168>)
 800bdc2:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800bdc4:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800bdc6:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800bdc8:	bf38      	it	cc
 800bdca:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800bdcc:	4a2a      	ldr	r2, [pc, #168]	; (800be78 <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800bdce:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800bdd2:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800bdd4:	2000      	movs	r0, #0
 800bdd6:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800bdda:	6813      	ldr	r3, [r2, #0]
 800bddc:	3301      	adds	r3, #1
 800bdde:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800bde0:	f001 fee6 	bl	800dbb0 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800bde4:	f018 0f07 	tst.w	r8, #7
 800bde8:	d0d0      	beq.n	800bd8c <pvPortMalloc+0x80>
 800bdea:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bdee:	f383 8811 	msr	BASEPRI, r3
 800bdf2:	f3bf 8f6f 	isb	sy
 800bdf6:	f3bf 8f4f 	dsb	sy
 800bdfa:	e7fe      	b.n	800bdfa <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800bdfc:	4b1f      	ldr	r3, [pc, #124]	; (800be7c <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800bdfe:	075e      	lsls	r6, r3, #29
 800be00:	d118      	bne.n	800be34 <pvPortMalloc+0x128>
 800be02:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800be06:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800be08:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800be0a:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800be0e:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800be10:	4a18      	ldr	r2, [pc, #96]	; (800be74 <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800be12:	4817      	ldr	r0, [pc, #92]	; (800be70 <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800be14:	4c15      	ldr	r4, [pc, #84]	; (800be6c <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800be16:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800be18:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800be1a:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800be1c:	4a18      	ldr	r2, [pc, #96]	; (800be80 <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800be1e:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800be22:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800be24:	2200      	movs	r2, #0
 800be26:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800be28:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800be2a:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800be2e:	e9c1 6300 	strd	r6, r3, [r1]
}
 800be32:	e776      	b.n	800bd22 <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800be34:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800be36:	f021 0107 	bic.w	r1, r1, #7
 800be3a:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800be3e:	460b      	mov	r3, r1
 800be40:	e7e2      	b.n	800be08 <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800be42:	6849      	ldr	r1, [r1, #4]
 800be44:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800be48:	eb04 010e 	add.w	r1, r4, lr
 800be4c:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800be4e:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800be52:	d001      	beq.n	800be58 <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800be54:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800be56:	e7b2      	b.n	800bdbe <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800be58:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800be5a:	42b2      	cmp	r2, r6
 800be5c:	d0ab      	beq.n	800bdb6 <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800be5e:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800be60:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800be62:	4470      	add	r0, lr
 800be64:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800be66:	e7a6      	b.n	800bdb6 <pvPortMalloc+0xaa>
 800be68:	20003120 	.word	0x20003120
 800be6c:	20013124 	.word	0x20013124
 800be70:	20013138 	.word	0x20013138
 800be74:	2001312c 	.word	0x2001312c
 800be78:	20013130 	.word	0x20013130
 800be7c:	20003124 	.word	0x20003124
 800be80:	20013128 	.word	0x20013128

0800be84 <vPortFree>:
	if( pv != NULL )
 800be84:	b1d0      	cbz	r0, 800bebc <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800be86:	4a2c      	ldr	r2, [pc, #176]	; (800bf38 <vPortFree+0xb4>)
 800be88:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800be8c:	6812      	ldr	r2, [r2, #0]
 800be8e:	4213      	tst	r3, r2
 800be90:	d00b      	beq.n	800beaa <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800be92:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800be96:	b191      	cbz	r1, 800bebe <vPortFree+0x3a>
 800be98:	f04f 0350 	mov.w	r3, #80	; 0x50
 800be9c:	f383 8811 	msr	BASEPRI, r3
 800bea0:	f3bf 8f6f 	isb	sy
 800bea4:	f3bf 8f4f 	dsb	sy
 800bea8:	e7fe      	b.n	800bea8 <vPortFree+0x24>
 800beaa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800beae:	f383 8811 	msr	BASEPRI, r3
 800beb2:	f3bf 8f6f 	isb	sy
 800beb6:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800beba:	e7fe      	b.n	800beba <vPortFree+0x36>
 800bebc:	4770      	bx	lr
{
 800bebe:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800bec0:	ea23 0302 	bic.w	r3, r3, r2
{
 800bec4:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800bec6:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800beca:	4c1c      	ldr	r4, [pc, #112]	; (800bf3c <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800becc:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800bece:	f001 fe67 	bl	800dba0 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800bed2:	9801      	ldr	r0, [sp, #4]
 800bed4:	6822      	ldr	r2, [r4, #0]
 800bed6:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800beda:	4b19      	ldr	r3, [pc, #100]	; (800bf40 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800bedc:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800bede:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800bee0:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800bee2:	461a      	mov	r2, r3
 800bee4:	681b      	ldr	r3, [r3, #0]
 800bee6:	4298      	cmp	r0, r3
 800bee8:	d8fb      	bhi.n	800bee2 <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800beea:	6854      	ldr	r4, [r2, #4]
 800beec:	eb02 0e04 	add.w	lr, r2, r4
 800bef0:	4570      	cmp	r0, lr
 800bef2:	d010      	beq.n	800bf16 <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800bef4:	eb00 0c01 	add.w	ip, r0, r1
 800bef8:	4563      	cmp	r3, ip
 800befa:	d014      	beq.n	800bf26 <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800befc:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800befe:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800bf00:	bf18      	it	ne
 800bf02:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800bf04:	4a0f      	ldr	r2, [pc, #60]	; (800bf44 <vPortFree+0xc0>)
 800bf06:	6813      	ldr	r3, [r2, #0]
 800bf08:	3301      	adds	r3, #1
 800bf0a:	6013      	str	r3, [r2, #0]
}
 800bf0c:	b002      	add	sp, #8
 800bf0e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800bf12:	f001 be4d 	b.w	800dbb0 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800bf16:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800bf18:	1850      	adds	r0, r2, r1
 800bf1a:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800bf1c:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800bf1e:	d001      	beq.n	800bf24 <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800bf20:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800bf22:	e7ef      	b.n	800bf04 <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800bf24:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800bf26:	4c08      	ldr	r4, [pc, #32]	; (800bf48 <vPortFree+0xc4>)
 800bf28:	6824      	ldr	r4, [r4, #0]
 800bf2a:	42a3      	cmp	r3, r4
 800bf2c:	d0e6      	beq.n	800befc <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800bf2e:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800bf32:	4421      	add	r1, r4
 800bf34:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800bf36:	e7e1      	b.n	800befc <vPortFree+0x78>
 800bf38:	20013124 	.word	0x20013124
 800bf3c:	20013128 	.word	0x20013128
 800bf40:	20013138 	.word	0x20013138
 800bf44:	20013134 	.word	0x20013134
 800bf48:	20003120 	.word	0x20003120

0800bf4c <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800bf4c:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800bf50:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800bf54:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800bf56:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800bf5a:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800bf5e:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800bf60:	4770      	bx	lr
 800bf62:	bf00      	nop

0800bf64 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800bf64:	2300      	movs	r3, #0
 800bf66:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800bf68:	4770      	bx	lr
 800bf6a:	bf00      	nop

0800bf6c <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800bf6c:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800bf6e:	689a      	ldr	r2, [r3, #8]
 800bf70:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800bf72:	6802      	ldr	r2, [r0, #0]
{
 800bf74:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800bf76:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800bf78:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800bf7a:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800bf7c:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800bf7e:	6099      	str	r1, [r3, #8]
}
 800bf80:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 800bf84:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800bf86:	6002      	str	r2, [r0, #0]
}
 800bf88:	4770      	bx	lr
 800bf8a:	bf00      	nop

0800bf8c <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800bf8c:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800bf8e:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800bf90:	1c6b      	adds	r3, r5, #1
 800bf92:	d010      	beq.n	800bfb6 <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800bf94:	f100 0308 	add.w	r3, r0, #8
 800bf98:	461c      	mov	r4, r3
 800bf9a:	685b      	ldr	r3, [r3, #4]
 800bf9c:	681a      	ldr	r2, [r3, #0]
 800bf9e:	42aa      	cmp	r2, r5
 800bfa0:	d9fa      	bls.n	800bf98 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800bfa2:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800bfa4:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800bfa6:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800bfa8:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800bfaa:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800bfac:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 800bfae:	6108      	str	r0, [r1, #16]
}
 800bfb0:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 800bfb2:	6002      	str	r2, [r0, #0]
}
 800bfb4:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 800bfb6:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800bfb8:	6863      	ldr	r3, [r4, #4]
 800bfba:	e7f2      	b.n	800bfa2 <vListInsert+0x16>

0800bfbc <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800bfbc:	6903      	ldr	r3, [r0, #16]
{
 800bfbe:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800bfc0:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800bfc4:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800bfc6:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 800bfc8:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800bfca:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800bfcc:	bf08      	it	eq
 800bfce:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 800bfd0:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 800bfd2:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 800bfd6:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 800bfd8:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 800bfda:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800bfdc:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 800bfde:	6818      	ldr	r0, [r3, #0]
}
 800bfe0:	4770      	bx	lr
 800bfe2:	bf00      	nop

0800bfe4 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800bfe4:	4808      	ldr	r0, [pc, #32]	; (800c008 <prvPortStartFirstTask+0x24>)
 800bfe6:	6800      	ldr	r0, [r0, #0]
 800bfe8:	6800      	ldr	r0, [r0, #0]
 800bfea:	f380 8808 	msr	MSP, r0
 800bfee:	f04f 0000 	mov.w	r0, #0
 800bff2:	f380 8814 	msr	CONTROL, r0
 800bff6:	b662      	cpsie	i
 800bff8:	b661      	cpsie	f
 800bffa:	f3bf 8f4f 	dsb	sy
 800bffe:	f3bf 8f6f 	isb	sy
 800c002:	df00      	svc	0
 800c004:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800c006:	0000      	.short	0x0000
 800c008:	e000ed08 	.word	0xe000ed08

0800c00c <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800c00c:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800c01c <vPortEnableVFP+0x10>
 800c010:	6801      	ldr	r1, [r0, #0]
 800c012:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800c016:	6001      	str	r1, [r0, #0]
 800c018:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800c01a:	0000      	.short	0x0000
 800c01c:	e000ed88 	.word	0xe000ed88

0800c020 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 800c020:	4b0e      	ldr	r3, [pc, #56]	; (800c05c <prvTaskExitError+0x3c>)
 800c022:	681b      	ldr	r3, [r3, #0]
{
 800c024:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800c026:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 800c028:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 800c02a:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800c02c:	d008      	beq.n	800c040 <prvTaskExitError+0x20>
 800c02e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c032:	f383 8811 	msr	BASEPRI, r3
 800c036:	f3bf 8f6f 	isb	sy
 800c03a:	f3bf 8f4f 	dsb	sy
 800c03e:	e7fe      	b.n	800c03e <prvTaskExitError+0x1e>
 800c040:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c044:	f383 8811 	msr	BASEPRI, r3
 800c048:	f3bf 8f6f 	isb	sy
 800c04c:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800c050:	9b01      	ldr	r3, [sp, #4]
 800c052:	2b00      	cmp	r3, #0
 800c054:	d0fc      	beq.n	800c050 <prvTaskExitError+0x30>
}
 800c056:	b002      	add	sp, #8
 800c058:	4770      	bx	lr
 800c05a:	bf00      	nop
 800c05c:	20000084 	.word	0x20000084

0800c060 <pxPortInitialiseStack>:
{
 800c060:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800c062:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800c066:	4c07      	ldr	r4, [pc, #28]	; (800c084 <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800c068:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800c06c:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800c070:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800c074:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800c078:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 800c07c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c080:	3844      	subs	r0, #68	; 0x44
 800c082:	4770      	bx	lr
 800c084:	0800c021 	.word	0x0800c021
	...

0800c090 <SVC_Handler>:
	__asm volatile (
 800c090:	4b07      	ldr	r3, [pc, #28]	; (800c0b0 <pxCurrentTCBConst2>)
 800c092:	6819      	ldr	r1, [r3, #0]
 800c094:	6808      	ldr	r0, [r1, #0]
 800c096:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c09a:	f380 8809 	msr	PSP, r0
 800c09e:	f3bf 8f6f 	isb	sy
 800c0a2:	f04f 0000 	mov.w	r0, #0
 800c0a6:	f380 8811 	msr	BASEPRI, r0
 800c0aa:	4770      	bx	lr
 800c0ac:	f3af 8000 	nop.w

0800c0b0 <pxCurrentTCBConst2>:
 800c0b0:	20013188 	.word	0x20013188

0800c0b4 <vPortEnterCritical>:
 800c0b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c0b8:	f383 8811 	msr	BASEPRI, r3
 800c0bc:	f3bf 8f6f 	isb	sy
 800c0c0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800c0c4:	4a0b      	ldr	r2, [pc, #44]	; (800c0f4 <vPortEnterCritical+0x40>)
 800c0c6:	6813      	ldr	r3, [r2, #0]
 800c0c8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800c0ca:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800c0cc:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800c0ce:	d000      	beq.n	800c0d2 <vPortEnterCritical+0x1e>
}
 800c0d0:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800c0d2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c0d6:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800c0da:	b2db      	uxtb	r3, r3
 800c0dc:	2b00      	cmp	r3, #0
 800c0de:	d0f7      	beq.n	800c0d0 <vPortEnterCritical+0x1c>
 800c0e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c0e4:	f383 8811 	msr	BASEPRI, r3
 800c0e8:	f3bf 8f6f 	isb	sy
 800c0ec:	f3bf 8f4f 	dsb	sy
 800c0f0:	e7fe      	b.n	800c0f0 <vPortEnterCritical+0x3c>
 800c0f2:	bf00      	nop
 800c0f4:	20000084 	.word	0x20000084

0800c0f8 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800c0f8:	4a08      	ldr	r2, [pc, #32]	; (800c11c <vPortExitCritical+0x24>)
 800c0fa:	6813      	ldr	r3, [r2, #0]
 800c0fc:	b943      	cbnz	r3, 800c110 <vPortExitCritical+0x18>
 800c0fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c102:	f383 8811 	msr	BASEPRI, r3
 800c106:	f3bf 8f6f 	isb	sy
 800c10a:	f3bf 8f4f 	dsb	sy
 800c10e:	e7fe      	b.n	800c10e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800c110:	3b01      	subs	r3, #1
 800c112:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800c114:	b90b      	cbnz	r3, 800c11a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800c116:	f383 8811 	msr	BASEPRI, r3
}
 800c11a:	4770      	bx	lr
 800c11c:	20000084 	.word	0x20000084

0800c120 <PendSV_Handler>:
	__asm volatile
 800c120:	f3ef 8009 	mrs	r0, PSP
 800c124:	f3bf 8f6f 	isb	sy
 800c128:	4b15      	ldr	r3, [pc, #84]	; (800c180 <pxCurrentTCBConst>)
 800c12a:	681a      	ldr	r2, [r3, #0]
 800c12c:	f01e 0f10 	tst.w	lr, #16
 800c130:	bf08      	it	eq
 800c132:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800c136:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c13a:	6010      	str	r0, [r2, #0]
 800c13c:	e92d 0009 	stmdb	sp!, {r0, r3}
 800c140:	f04f 0050 	mov.w	r0, #80	; 0x50
 800c144:	f380 8811 	msr	BASEPRI, r0
 800c148:	f3bf 8f4f 	dsb	sy
 800c14c:	f3bf 8f6f 	isb	sy
 800c150:	f001 fd54 	bl	800dbfc <vTaskSwitchContext>
 800c154:	f04f 0000 	mov.w	r0, #0
 800c158:	f380 8811 	msr	BASEPRI, r0
 800c15c:	bc09      	pop	{r0, r3}
 800c15e:	6819      	ldr	r1, [r3, #0]
 800c160:	6808      	ldr	r0, [r1, #0]
 800c162:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c166:	f01e 0f10 	tst.w	lr, #16
 800c16a:	bf08      	it	eq
 800c16c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800c170:	f380 8809 	msr	PSP, r0
 800c174:	f3bf 8f6f 	isb	sy
 800c178:	4770      	bx	lr
 800c17a:	bf00      	nop
 800c17c:	f3af 8000 	nop.w

0800c180 <pxCurrentTCBConst>:
 800c180:	20013188 	.word	0x20013188

0800c184 <xPortSysTickHandler>:
{
 800c184:	b508      	push	{r3, lr}
	__asm volatile
 800c186:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c18a:	f383 8811 	msr	BASEPRI, r3
 800c18e:	f3bf 8f6f 	isb	sy
 800c192:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800c196:	f001 fd21 	bl	800dbdc <xTaskIncrementTick>
 800c19a:	b128      	cbz	r0, 800c1a8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800c19c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c1a0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800c1a4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800c1a8:	2300      	movs	r3, #0
 800c1aa:	f383 8811 	msr	BASEPRI, r3
}
 800c1ae:	bd08      	pop	{r3, pc}

0800c1b0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800c1b0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800c1b4:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800c1b6:	4906      	ldr	r1, [pc, #24]	; (800c1d0 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800c1b8:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800c1ba:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800c1bc:	680b      	ldr	r3, [r1, #0]
 800c1be:	4905      	ldr	r1, [pc, #20]	; (800c1d4 <vPortSetupTimerInterrupt+0x24>)
 800c1c0:	fba1 1303 	umull	r1, r3, r1, r3
 800c1c4:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800c1c6:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800c1c8:	3b01      	subs	r3, #1
 800c1ca:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800c1cc:	6110      	str	r0, [r2, #16]
}
 800c1ce:	4770      	bx	lr
 800c1d0:	20000078 	.word	0x20000078
 800c1d4:	10624dd3 	.word	0x10624dd3

0800c1d8 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800c1d8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c1dc:	4a49      	ldr	r2, [pc, #292]	; (800c304 <xPortStartScheduler+0x12c>)
 800c1de:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800c1e2:	4291      	cmp	r1, r2
 800c1e4:	d043      	beq.n	800c26e <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800c1e6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800c1ea:	4b47      	ldr	r3, [pc, #284]	; (800c308 <xPortStartScheduler+0x130>)
 800c1ec:	429a      	cmp	r2, r3
 800c1ee:	d035      	beq.n	800c25c <xPortStartScheduler+0x84>
{
 800c1f0:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800c1f2:	4b46      	ldr	r3, [pc, #280]	; (800c30c <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800c1f4:	4846      	ldr	r0, [pc, #280]	; (800c310 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800c1f6:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800c1f8:	4c46      	ldr	r4, [pc, #280]	; (800c314 <xPortStartScheduler+0x13c>)
{
 800c1fa:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800c1fc:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800c1fe:	b2d2      	uxtb	r2, r2
 800c200:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800c202:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800c204:	781b      	ldrb	r3, [r3, #0]
 800c206:	b2db      	uxtb	r3, r3
 800c208:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800c20c:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800c210:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800c214:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800c218:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800c21a:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800c21c:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800c21e:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800c220:	bf48      	it	mi
 800c222:	2206      	movmi	r2, #6
 800c224:	d511      	bpl.n	800c24a <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800c226:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800c22a:	005b      	lsls	r3, r3, #1
 800c22c:	b2db      	uxtb	r3, r3
 800c22e:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800c232:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800c236:	0609      	lsls	r1, r1, #24
 800c238:	4610      	mov	r0, r2
 800c23a:	f102 32ff 	add.w	r2, r2, #4294967295
 800c23e:	d4f2      	bmi.n	800c226 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800c240:	2803      	cmp	r0, #3
 800c242:	6020      	str	r0, [r4, #0]
 800c244:	f88d 3007 	strb.w	r3, [sp, #7]
 800c248:	d01a      	beq.n	800c280 <xPortStartScheduler+0xa8>
	__asm volatile
 800c24a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c24e:	f383 8811 	msr	BASEPRI, r3
 800c252:	f3bf 8f6f 	isb	sy
 800c256:	f3bf 8f4f 	dsb	sy
 800c25a:	e7fe      	b.n	800c25a <xPortStartScheduler+0x82>
 800c25c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c260:	f383 8811 	msr	BASEPRI, r3
 800c264:	f3bf 8f6f 	isb	sy
 800c268:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800c26c:	e7fe      	b.n	800c26c <xPortStartScheduler+0x94>
 800c26e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c272:	f383 8811 	msr	BASEPRI, r3
 800c276:	f3bf 8f6f 	isb	sy
 800c27a:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800c27e:	e7fe      	b.n	800c27e <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800c280:	9b02      	ldr	r3, [sp, #8]
 800c282:	4a22      	ldr	r2, [pc, #136]	; (800c30c <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800c284:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800c288:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800c28c:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800c28e:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800c290:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800c292:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800c296:	4c20      	ldr	r4, [pc, #128]	; (800c318 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800c298:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800c29c:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800c2a0:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 800c2a4:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800c2a8:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800c2ac:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 800c2ae:	f7ff ff7f 	bl	800c1b0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800c2b2:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 800c2b4:	f7ff feaa 	bl	800c00c <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800c2b8:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 800c2bc:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800c2c0:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 800c2c4:	f7ff fe8e 	bl	800bfe4 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800c2c8:	f001 fc98 	bl	800dbfc <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 800c2cc:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 800c2ce:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 800c2d0:	3301      	adds	r3, #1
 800c2d2:	d008      	beq.n	800c2e6 <xPortStartScheduler+0x10e>
 800c2d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c2d8:	f383 8811 	msr	BASEPRI, r3
 800c2dc:	f3bf 8f6f 	isb	sy
 800c2e0:	f3bf 8f4f 	dsb	sy
 800c2e4:	e7fe      	b.n	800c2e4 <xPortStartScheduler+0x10c>
 800c2e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c2ea:	f383 8811 	msr	BASEPRI, r3
 800c2ee:	f3bf 8f6f 	isb	sy
 800c2f2:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800c2f6:	9b03      	ldr	r3, [sp, #12]
 800c2f8:	2b00      	cmp	r3, #0
 800c2fa:	d0fc      	beq.n	800c2f6 <xPortStartScheduler+0x11e>
}
 800c2fc:	2000      	movs	r0, #0
 800c2fe:	b004      	add	sp, #16
 800c300:	bd70      	pop	{r4, r5, r6, pc}
 800c302:	bf00      	nop
 800c304:	410fc271 	.word	0x410fc271
 800c308:	410fc270 	.word	0x410fc270
 800c30c:	e000e400 	.word	0xe000e400
 800c310:	20013140 	.word	0x20013140
 800c314:	20013144 	.word	0x20013144
 800c318:	20000084 	.word	0x20000084

0800c31c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800c31c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800c320:	2b0f      	cmp	r3, #15
 800c322:	d90e      	bls.n	800c342 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800c324:	4911      	ldr	r1, [pc, #68]	; (800c36c <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800c326:	4a12      	ldr	r2, [pc, #72]	; (800c370 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800c328:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800c32a:	7812      	ldrb	r2, [r2, #0]
 800c32c:	429a      	cmp	r2, r3
 800c32e:	d908      	bls.n	800c342 <vPortValidateInterruptPriority+0x26>
 800c330:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c334:	f383 8811 	msr	BASEPRI, r3
 800c338:	f3bf 8f6f 	isb	sy
 800c33c:	f3bf 8f4f 	dsb	sy
 800c340:	e7fe      	b.n	800c340 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800c342:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c346:	4a0b      	ldr	r2, [pc, #44]	; (800c374 <vPortValidateInterruptPriority+0x58>)
 800c348:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800c34c:	6812      	ldr	r2, [r2, #0]
 800c34e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800c352:	4293      	cmp	r3, r2
 800c354:	d908      	bls.n	800c368 <vPortValidateInterruptPriority+0x4c>
 800c356:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c35a:	f383 8811 	msr	BASEPRI, r3
 800c35e:	f3bf 8f6f 	isb	sy
 800c362:	f3bf 8f4f 	dsb	sy
 800c366:	e7fe      	b.n	800c366 <vPortValidateInterruptPriority+0x4a>
	}
 800c368:	4770      	bx	lr
 800c36a:	bf00      	nop
 800c36c:	e000e3f0 	.word	0xe000e3f0
 800c370:	20013140 	.word	0x20013140
 800c374:	20013144 	.word	0x20013144

0800c378 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 800c378:	b570      	push	{r4, r5, r6, lr}
 800c37a:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800c37c:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800c37e:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800c380:	b920      	cbnz	r0, 800c38c <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800c382:	6825      	ldr	r5, [r4, #0]
 800c384:	b34d      	cbz	r5, 800c3da <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800c386:	3601      	adds	r6, #1
 800c388:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 800c38a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800c38c:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800c38e:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 800c390:	b97d      	cbnz	r5, 800c3b2 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800c392:	6860      	ldr	r0, [r4, #4]
 800c394:	f01b fbaf 	bl	8027af6 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800c398:	6863      	ldr	r3, [r4, #4]
 800c39a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800c39c:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800c39e:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800c3a0:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800c3a2:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800c3a4:	bf24      	itt	cs
 800c3a6:	6823      	ldrcs	r3, [r4, #0]
 800c3a8:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800c3aa:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800c3ac:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800c3ae:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800c3b0:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800c3b2:	68e0      	ldr	r0, [r4, #12]
 800c3b4:	f01b fb9f 	bl	8027af6 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800c3b8:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800c3ba:	68e3      	ldr	r3, [r4, #12]
 800c3bc:	4251      	negs	r1, r2
 800c3be:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800c3c0:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800c3c2:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800c3c4:	4293      	cmp	r3, r2
 800c3c6:	d202      	bcs.n	800c3ce <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800c3c8:	68a3      	ldr	r3, [r4, #8]
 800c3ca:	440b      	add	r3, r1
 800c3cc:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800c3ce:	2d02      	cmp	r5, #2
 800c3d0:	d008      	beq.n	800c3e4 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800c3d2:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800c3d4:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800c3d6:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800c3d8:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800c3da:	68a0      	ldr	r0, [r4, #8]
 800c3dc:	f001 fde0 	bl	800dfa0 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800c3e0:	60a5      	str	r5, [r4, #8]
 800c3e2:	e7d0      	b.n	800c386 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800c3e4:	2e01      	cmp	r6, #1
 800c3e6:	bf38      	it	cc
 800c3e8:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 800c3ea:	2000      	movs	r0, #0
 800c3ec:	e7cc      	b.n	800c388 <prvCopyDataToQueue+0x10>
 800c3ee:	bf00      	nop

0800c3f0 <xQueueGenericCreateStatic>:
	{
 800c3f0:	b530      	push	{r4, r5, lr}
 800c3f2:	b083      	sub	sp, #12
 800c3f4:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800c3f8:	b940      	cbnz	r0, 800c40c <xQueueGenericCreateStatic+0x1c>
 800c3fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c3fe:	f383 8811 	msr	BASEPRI, r3
 800c402:	f3bf 8f6f 	isb	sy
 800c406:	f3bf 8f4f 	dsb	sy
 800c40a:	e7fe      	b.n	800c40a <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 800c40c:	461d      	mov	r5, r3
 800c40e:	b17b      	cbz	r3, 800c430 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800c410:	b302      	cbz	r2, 800c454 <xQueueGenericCreateStatic+0x64>
 800c412:	b1b1      	cbz	r1, 800c442 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800c414:	2350      	movs	r3, #80	; 0x50
 800c416:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800c418:	9b01      	ldr	r3, [sp, #4]
 800c41a:	2b50      	cmp	r3, #80	; 0x50
 800c41c:	d023      	beq.n	800c466 <xQueueGenericCreateStatic+0x76>
 800c41e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c422:	f383 8811 	msr	BASEPRI, r3
 800c426:	f3bf 8f6f 	isb	sy
 800c42a:	f3bf 8f4f 	dsb	sy
 800c42e:	e7fe      	b.n	800c42e <xQueueGenericCreateStatic+0x3e>
 800c430:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c434:	f383 8811 	msr	BASEPRI, r3
 800c438:	f3bf 8f6f 	isb	sy
 800c43c:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800c440:	e7fe      	b.n	800c440 <xQueueGenericCreateStatic+0x50>
 800c442:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c446:	f383 8811 	msr	BASEPRI, r3
 800c44a:	f3bf 8f6f 	isb	sy
 800c44e:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800c452:	e7fe      	b.n	800c452 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800c454:	bb89      	cbnz	r1, 800c4ba <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800c456:	2250      	movs	r2, #80	; 0x50
 800c458:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800c45a:	9a01      	ldr	r2, [sp, #4]
 800c45c:	2a50      	cmp	r2, #80	; 0x50
 800c45e:	d1de      	bne.n	800c41e <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800c460:	9a01      	ldr	r2, [sp, #4]
 800c462:	462a      	mov	r2, r5
 800c464:	e000      	b.n	800c468 <xQueueGenericCreateStatic+0x78>
 800c466:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 800c468:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800c46a:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800c46c:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800c470:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 800c474:	f7ff fe1e 	bl	800c0b4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c478:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 800c47c:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800c47e:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c480:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c484:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c486:	4401      	add	r1, r0
 800c488:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800c48a:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c48c:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800c48e:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800c490:	21ff      	movs	r1, #255	; 0xff
 800c492:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c496:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800c498:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800c49c:	f105 0010 	add.w	r0, r5, #16
 800c4a0:	f7ff fd54 	bl	800bf4c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800c4a4:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800c4a8:	f7ff fd50 	bl	800bf4c <vListInitialise>
	taskEXIT_CRITICAL();
 800c4ac:	f7ff fe24 	bl	800c0f8 <vPortExitCritical>
	}
 800c4b0:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800c4b2:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 800c4b6:	b003      	add	sp, #12
 800c4b8:	bd30      	pop	{r4, r5, pc}
 800c4ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c4be:	f383 8811 	msr	BASEPRI, r3
 800c4c2:	f3bf 8f6f 	isb	sy
 800c4c6:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800c4ca:	e7fe      	b.n	800c4ca <xQueueGenericCreateStatic+0xda>

0800c4cc <xQueueGenericCreate>:
	{
 800c4cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800c4ce:	b940      	cbnz	r0, 800c4e2 <xQueueGenericCreate+0x16>
 800c4d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c4d4:	f383 8811 	msr	BASEPRI, r3
 800c4d8:	f3bf 8f6f 	isb	sy
 800c4dc:	f3bf 8f4f 	dsb	sy
 800c4e0:	e7fe      	b.n	800c4e0 <xQueueGenericCreate+0x14>
 800c4e2:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800c4e4:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800c4e8:	3050      	adds	r0, #80	; 0x50
 800c4ea:	460e      	mov	r6, r1
 800c4ec:	4617      	mov	r7, r2
 800c4ee:	f7ff fc0d 	bl	800bd0c <pvPortMalloc>
		if( pxNewQueue != NULL )
 800c4f2:	4604      	mov	r4, r0
 800c4f4:	b340      	cbz	r0, 800c548 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800c4f6:	2300      	movs	r3, #0
 800c4f8:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800c4fc:	b336      	cbz	r6, 800c54c <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c4fe:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 800c502:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800c504:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 800c508:	f7ff fdd4 	bl	800c0b4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c50c:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 800c510:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800c512:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c514:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c518:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c51a:	440a      	add	r2, r1
 800c51c:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800c51e:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c520:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800c522:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800c524:	22ff      	movs	r2, #255	; 0xff
 800c526:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c52a:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800c52c:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800c530:	f104 0010 	add.w	r0, r4, #16
 800c534:	f7ff fd0a 	bl	800bf4c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800c538:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800c53c:	f7ff fd06 	bl	800bf4c <vListInitialise>
	taskEXIT_CRITICAL();
 800c540:	f7ff fdda 	bl	800c0f8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800c544:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800c548:	4620      	mov	r0, r4
 800c54a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c54c:	4603      	mov	r3, r0
 800c54e:	e7d8      	b.n	800c502 <xQueueGenericCreate+0x36>

0800c550 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 800c550:	b940      	cbnz	r0, 800c564 <xQueueCreateCountingSemaphoreStatic+0x14>
 800c552:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c556:	f383 8811 	msr	BASEPRI, r3
 800c55a:	f3bf 8f6f 	isb	sy
 800c55e:	f3bf 8f4f 	dsb	sy
 800c562:	e7fe      	b.n	800c562 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 800c564:	4288      	cmp	r0, r1
 800c566:	d208      	bcs.n	800c57a <xQueueCreateCountingSemaphoreStatic+0x2a>
 800c568:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c56c:	f383 8811 	msr	BASEPRI, r3
 800c570:	f3bf 8f6f 	isb	sy
 800c574:	f3bf 8f4f 	dsb	sy
 800c578:	e7fe      	b.n	800c578 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 800c57a:	b530      	push	{r4, r5, lr}
 800c57c:	4615      	mov	r5, r2
 800c57e:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 800c580:	2a00      	cmp	r2, #0
 800c582:	d03c      	beq.n	800c5fe <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800c584:	2350      	movs	r3, #80	; 0x50
 800c586:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 800c588:	9b03      	ldr	r3, [sp, #12]
 800c58a:	2b50      	cmp	r3, #80	; 0x50
 800c58c:	d008      	beq.n	800c5a0 <xQueueCreateCountingSemaphoreStatic+0x50>
 800c58e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c592:	f383 8811 	msr	BASEPRI, r3
 800c596:	f3bf 8f6f 	isb	sy
 800c59a:	f3bf 8f4f 	dsb	sy
 800c59e:	e7fe      	b.n	800c59e <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 800c5a0:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800c5a2:	2301      	movs	r3, #1
 800c5a4:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800c5a8:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800c5aa:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 800c5ae:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800c5b0:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 800c5b2:	f7ff fd7f 	bl	800c0b4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c5b6:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 800c5ba:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800c5bc:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c5be:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c5c2:	1ac3      	subs	r3, r0, r3
 800c5c4:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c5c6:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 800c5c8:	f04f 0eff 	mov.w	lr, #255	; 0xff
 800c5cc:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c5d0:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800c5d2:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800c5d4:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c5d8:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800c5da:	f105 0010 	add.w	r0, r5, #16
 800c5de:	f7ff fcb5 	bl	800bf4c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800c5e2:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800c5e6:	f7ff fcb1 	bl	800bf4c <vListInitialise>
	taskEXIT_CRITICAL();
 800c5ea:	f7ff fd85 	bl	800c0f8 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800c5ee:	9901      	ldr	r1, [sp, #4]
 800c5f0:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 800c5f2:	2302      	movs	r3, #2
	}
 800c5f4:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800c5f6:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 800c5fa:	b005      	add	sp, #20
 800c5fc:	bd30      	pop	{r4, r5, pc}
 800c5fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c602:	f383 8811 	msr	BASEPRI, r3
 800c606:	f3bf 8f6f 	isb	sy
 800c60a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800c60e:	e7fe      	b.n	800c60e <xQueueCreateCountingSemaphoreStatic+0xbe>

0800c610 <xQueueCreateCountingSemaphore>:
	{
 800c610:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 800c612:	b940      	cbnz	r0, 800c626 <xQueueCreateCountingSemaphore+0x16>
 800c614:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c618:	f383 8811 	msr	BASEPRI, r3
 800c61c:	f3bf 8f6f 	isb	sy
 800c620:	f3bf 8f4f 	dsb	sy
 800c624:	e7fe      	b.n	800c624 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 800c626:	4288      	cmp	r0, r1
 800c628:	460e      	mov	r6, r1
 800c62a:	4604      	mov	r4, r0
 800c62c:	d208      	bcs.n	800c640 <xQueueCreateCountingSemaphore+0x30>
 800c62e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c632:	f383 8811 	msr	BASEPRI, r3
 800c636:	f3bf 8f6f 	isb	sy
 800c63a:	f3bf 8f4f 	dsb	sy
 800c63e:	e7fe      	b.n	800c63e <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800c640:	2050      	movs	r0, #80	; 0x50
 800c642:	f7ff fb63 	bl	800bd0c <pvPortMalloc>
		if( pxNewQueue != NULL )
 800c646:	4605      	mov	r5, r0
 800c648:	b330      	cbz	r0, 800c698 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800c64a:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 800c64c:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800c650:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800c654:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 800c656:	f7ff fd2d 	bl	800c0b4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c65a:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 800c65e:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800c660:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c662:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c666:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c668:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c66a:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c66c:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800c66e:	22ff      	movs	r2, #255	; 0xff
 800c670:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c674:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800c676:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800c678:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800c67c:	f105 0010 	add.w	r0, r5, #16
 800c680:	f7ff fc64 	bl	800bf4c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800c684:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800c688:	f7ff fc60 	bl	800bf4c <vListInitialise>
	taskEXIT_CRITICAL();
 800c68c:	f7ff fd34 	bl	800c0f8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800c690:	2302      	movs	r3, #2
 800c692:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800c696:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 800c698:	4628      	mov	r0, r5
 800c69a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800c69c <xQueueGenericSend>:
{
 800c69c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c6a0:	b085      	sub	sp, #20
 800c6a2:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 800c6a4:	2800      	cmp	r0, #0
 800c6a6:	f000 80a4 	beq.w	800c7f2 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800c6aa:	4688      	mov	r8, r1
 800c6ac:	461f      	mov	r7, r3
 800c6ae:	4604      	mov	r4, r0
 800c6b0:	2900      	cmp	r1, #0
 800c6b2:	f000 8091 	beq.w	800c7d8 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800c6b6:	2f02      	cmp	r7, #2
 800c6b8:	d10b      	bne.n	800c6d2 <xQueueGenericSend+0x36>
 800c6ba:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800c6bc:	2b01      	cmp	r3, #1
 800c6be:	d008      	beq.n	800c6d2 <xQueueGenericSend+0x36>
 800c6c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c6c4:	f383 8811 	msr	BASEPRI, r3
 800c6c8:	f3bf 8f6f 	isb	sy
 800c6cc:	f3bf 8f4f 	dsb	sy
 800c6d0:	e7fe      	b.n	800c6d0 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800c6d2:	f001 fc0f 	bl	800def4 <xTaskGetSchedulerState>
 800c6d6:	4605      	mov	r5, r0
 800c6d8:	2800      	cmp	r0, #0
 800c6da:	f000 8093 	beq.w	800c804 <xQueueGenericSend+0x168>
 800c6de:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c6e0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800c6e4:	f7ff fce6 	bl	800c0b4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800c6e8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c6ea:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800c6ec:	429a      	cmp	r2, r3
 800c6ee:	f0c0 80ef 	bcc.w	800c8d0 <xQueueGenericSend+0x234>
 800c6f2:	2f02      	cmp	r7, #2
 800c6f4:	f000 80ec 	beq.w	800c8d0 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 800c6f8:	9801      	ldr	r0, [sp, #4]
 800c6fa:	2800      	cmp	r0, #0
 800c6fc:	f000 8101 	beq.w	800c902 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 800c700:	2d00      	cmp	r5, #0
 800c702:	f000 80e1 	beq.w	800c8c8 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 800c706:	f7ff fcf7 	bl	800c0f8 <vPortExitCritical>
		vTaskSuspendAll();
 800c70a:	f001 fa49 	bl	800dba0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800c70e:	f7ff fcd1 	bl	800c0b4 <vPortEnterCritical>
 800c712:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800c716:	2bff      	cmp	r3, #255	; 0xff
 800c718:	bf04      	itt	eq
 800c71a:	2300      	moveq	r3, #0
 800c71c:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800c720:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800c724:	2bff      	cmp	r3, #255	; 0xff
 800c726:	bf04      	itt	eq
 800c728:	2300      	moveq	r3, #0
 800c72a:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800c72e:	f7ff fce3 	bl	800c0f8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800c732:	a901      	add	r1, sp, #4
 800c734:	a802      	add	r0, sp, #8
 800c736:	f001 fb8f 	bl	800de58 <xTaskCheckForTimeOut>
 800c73a:	2800      	cmp	r0, #0
 800c73c:	f040 80e6 	bne.w	800c90c <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800c740:	f7ff fcb8 	bl	800c0b4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800c744:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c746:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800c748:	429a      	cmp	r2, r3
 800c74a:	d068      	beq.n	800c81e <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800c74c:	f7ff fcd4 	bl	800c0f8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800c750:	f7ff fcb0 	bl	800c0b4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800c754:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800c758:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800c75a:	2d00      	cmp	r5, #0
 800c75c:	dc04      	bgt.n	800c768 <xQueueGenericSend+0xcc>
 800c75e:	e011      	b.n	800c784 <xQueueGenericSend+0xe8>
			--cTxLock;
 800c760:	1e6a      	subs	r2, r5, #1
 800c762:	b2d3      	uxtb	r3, r2
 800c764:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800c766:	b16b      	cbz	r3, 800c784 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800c768:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c76a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800c76c:	b153      	cbz	r3, 800c784 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c76e:	f001 fb1f 	bl	800ddb0 <xTaskRemoveFromEventList>
 800c772:	2800      	cmp	r0, #0
 800c774:	d0f4      	beq.n	800c760 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 800c776:	f001 fbb7 	bl	800dee8 <vTaskMissedYield>
			--cTxLock;
 800c77a:	1e6a      	subs	r2, r5, #1
 800c77c:	b2d3      	uxtb	r3, r2
 800c77e:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800c780:	2b00      	cmp	r3, #0
 800c782:	d1f1      	bne.n	800c768 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 800c784:	23ff      	movs	r3, #255	; 0xff
 800c786:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800c78a:	f7ff fcb5 	bl	800c0f8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800c78e:	f7ff fc91 	bl	800c0b4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800c792:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 800c796:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800c798:	2d00      	cmp	r5, #0
 800c79a:	dd14      	ble.n	800c7c6 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c79c:	f104 0910 	add.w	r9, r4, #16
 800c7a0:	e003      	b.n	800c7aa <xQueueGenericSend+0x10e>
				--cRxLock;
 800c7a2:	1e6a      	subs	r2, r5, #1
 800c7a4:	b2d3      	uxtb	r3, r2
 800c7a6:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800c7a8:	b16b      	cbz	r3, 800c7c6 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800c7aa:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c7ac:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800c7ae:	b153      	cbz	r3, 800c7c6 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c7b0:	f001 fafe 	bl	800ddb0 <xTaskRemoveFromEventList>
 800c7b4:	2800      	cmp	r0, #0
 800c7b6:	d0f4      	beq.n	800c7a2 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 800c7b8:	f001 fb96 	bl	800dee8 <vTaskMissedYield>
				--cRxLock;
 800c7bc:	1e6a      	subs	r2, r5, #1
 800c7be:	b2d3      	uxtb	r3, r2
 800c7c0:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800c7c2:	2b00      	cmp	r3, #0
 800c7c4:	d1f1      	bne.n	800c7aa <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 800c7c6:	23ff      	movs	r3, #255	; 0xff
 800c7c8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800c7cc:	f7ff fc94 	bl	800c0f8 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800c7d0:	f001 f9ee 	bl	800dbb0 <xTaskResumeAll>
 800c7d4:	2501      	movs	r5, #1
 800c7d6:	e785      	b.n	800c6e4 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800c7d8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800c7da:	2b00      	cmp	r3, #0
 800c7dc:	f43f af6b 	beq.w	800c6b6 <xQueueGenericSend+0x1a>
 800c7e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c7e4:	f383 8811 	msr	BASEPRI, r3
 800c7e8:	f3bf 8f6f 	isb	sy
 800c7ec:	f3bf 8f4f 	dsb	sy
 800c7f0:	e7fe      	b.n	800c7f0 <xQueueGenericSend+0x154>
 800c7f2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c7f6:	f383 8811 	msr	BASEPRI, r3
 800c7fa:	f3bf 8f6f 	isb	sy
 800c7fe:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800c802:	e7fe      	b.n	800c802 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800c804:	9b01      	ldr	r3, [sp, #4]
 800c806:	2b00      	cmp	r3, #0
 800c808:	f43f af6a 	beq.w	800c6e0 <xQueueGenericSend+0x44>
 800c80c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c810:	f383 8811 	msr	BASEPRI, r3
 800c814:	f3bf 8f6f 	isb	sy
 800c818:	f3bf 8f4f 	dsb	sy
 800c81c:	e7fe      	b.n	800c81c <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800c81e:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 800c822:	f7ff fc69 	bl	800c0f8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800c826:	9901      	ldr	r1, [sp, #4]
 800c828:	4648      	mov	r0, r9
 800c82a:	f001 fa33 	bl	800dc94 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800c82e:	f7ff fc41 	bl	800c0b4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800c832:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800c836:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800c838:	2d00      	cmp	r5, #0
 800c83a:	dc04      	bgt.n	800c846 <xQueueGenericSend+0x1aa>
 800c83c:	e011      	b.n	800c862 <xQueueGenericSend+0x1c6>
			--cTxLock;
 800c83e:	1e6b      	subs	r3, r5, #1
 800c840:	b2da      	uxtb	r2, r3
 800c842:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800c844:	b16a      	cbz	r2, 800c862 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800c846:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c848:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800c84a:	b153      	cbz	r3, 800c862 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c84c:	f001 fab0 	bl	800ddb0 <xTaskRemoveFromEventList>
 800c850:	2800      	cmp	r0, #0
 800c852:	d0f4      	beq.n	800c83e <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 800c854:	f001 fb48 	bl	800dee8 <vTaskMissedYield>
			--cTxLock;
 800c858:	1e6b      	subs	r3, r5, #1
 800c85a:	b2da      	uxtb	r2, r3
 800c85c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800c85e:	2a00      	cmp	r2, #0
 800c860:	d1f1      	bne.n	800c846 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 800c862:	23ff      	movs	r3, #255	; 0xff
 800c864:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800c868:	f7ff fc46 	bl	800c0f8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800c86c:	f7ff fc22 	bl	800c0b4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800c870:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800c874:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800c876:	2d00      	cmp	r5, #0
 800c878:	dc04      	bgt.n	800c884 <xQueueGenericSend+0x1e8>
 800c87a:	e011      	b.n	800c8a0 <xQueueGenericSend+0x204>
				--cRxLock;
 800c87c:	1e6b      	subs	r3, r5, #1
 800c87e:	b2da      	uxtb	r2, r3
 800c880:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800c882:	b16a      	cbz	r2, 800c8a0 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800c884:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c886:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800c888:	b153      	cbz	r3, 800c8a0 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c88a:	f001 fa91 	bl	800ddb0 <xTaskRemoveFromEventList>
 800c88e:	2800      	cmp	r0, #0
 800c890:	d0f4      	beq.n	800c87c <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 800c892:	f001 fb29 	bl	800dee8 <vTaskMissedYield>
				--cRxLock;
 800c896:	1e6b      	subs	r3, r5, #1
 800c898:	b2da      	uxtb	r2, r3
 800c89a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800c89c:	2a00      	cmp	r2, #0
 800c89e:	d1f1      	bne.n	800c884 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 800c8a0:	23ff      	movs	r3, #255	; 0xff
 800c8a2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800c8a6:	f7ff fc27 	bl	800c0f8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800c8aa:	f001 f981 	bl	800dbb0 <xTaskResumeAll>
 800c8ae:	2800      	cmp	r0, #0
 800c8b0:	d190      	bne.n	800c7d4 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 800c8b2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c8b6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800c8ba:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800c8be:	f3bf 8f4f 	dsb	sy
 800c8c2:	f3bf 8f6f 	isb	sy
 800c8c6:	e785      	b.n	800c7d4 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800c8c8:	a802      	add	r0, sp, #8
 800c8ca:	f001 fab9 	bl	800de40 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800c8ce:	e71a      	b.n	800c706 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800c8d0:	463a      	mov	r2, r7
 800c8d2:	4641      	mov	r1, r8
 800c8d4:	4620      	mov	r0, r4
 800c8d6:	f7ff fd4f 	bl	800c378 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800c8da:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800c8dc:	2b00      	cmp	r3, #0
 800c8de:	d153      	bne.n	800c988 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 800c8e0:	b148      	cbz	r0, 800c8f6 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 800c8e2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c8e6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800c8ea:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800c8ee:	f3bf 8f4f 	dsb	sy
 800c8f2:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800c8f6:	f7ff fbff 	bl	800c0f8 <vPortExitCritical>
				return pdPASS;
 800c8fa:	2001      	movs	r0, #1
}
 800c8fc:	b005      	add	sp, #20
 800c8fe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c902:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 800c904:	f7ff fbf8 	bl	800c0f8 <vPortExitCritical>
					return errQUEUE_FULL;
 800c908:	9800      	ldr	r0, [sp, #0]
 800c90a:	e7f7      	b.n	800c8fc <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 800c90c:	f7ff fbd2 	bl	800c0b4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800c910:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800c914:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800c916:	2d00      	cmp	r5, #0
 800c918:	dd10      	ble.n	800c93c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c91a:	f104 0624 	add.w	r6, r4, #36	; 0x24
 800c91e:	e003      	b.n	800c928 <xQueueGenericSend+0x28c>
			--cTxLock;
 800c920:	1e6b      	subs	r3, r5, #1
 800c922:	b2da      	uxtb	r2, r3
 800c924:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800c926:	b14a      	cbz	r2, 800c93c <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800c928:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c92a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800c92c:	b133      	cbz	r3, 800c93c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c92e:	f001 fa3f 	bl	800ddb0 <xTaskRemoveFromEventList>
 800c932:	2800      	cmp	r0, #0
 800c934:	d0f4      	beq.n	800c920 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 800c936:	f001 fad7 	bl	800dee8 <vTaskMissedYield>
 800c93a:	e7f1      	b.n	800c920 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 800c93c:	23ff      	movs	r3, #255	; 0xff
 800c93e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800c942:	f7ff fbd9 	bl	800c0f8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800c946:	f7ff fbb5 	bl	800c0b4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800c94a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800c94e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800c950:	2d00      	cmp	r5, #0
 800c952:	dd10      	ble.n	800c976 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c954:	f104 0610 	add.w	r6, r4, #16
 800c958:	e003      	b.n	800c962 <xQueueGenericSend+0x2c6>
				--cRxLock;
 800c95a:	1e6b      	subs	r3, r5, #1
 800c95c:	b2da      	uxtb	r2, r3
 800c95e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800c960:	b14a      	cbz	r2, 800c976 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800c962:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c964:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800c966:	b133      	cbz	r3, 800c976 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c968:	f001 fa22 	bl	800ddb0 <xTaskRemoveFromEventList>
 800c96c:	2800      	cmp	r0, #0
 800c96e:	d0f4      	beq.n	800c95a <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 800c970:	f001 faba 	bl	800dee8 <vTaskMissedYield>
 800c974:	e7f1      	b.n	800c95a <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 800c976:	23ff      	movs	r3, #255	; 0xff
 800c978:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800c97c:	f7ff fbbc 	bl	800c0f8 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800c980:	f001 f916 	bl	800dbb0 <xTaskResumeAll>
			return errQUEUE_FULL;
 800c984:	2000      	movs	r0, #0
 800c986:	e7b9      	b.n	800c8fc <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c988:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800c98c:	f001 fa10 	bl	800ddb0 <xTaskRemoveFromEventList>
 800c990:	2800      	cmp	r0, #0
 800c992:	d0b0      	beq.n	800c8f6 <xQueueGenericSend+0x25a>
 800c994:	e7a5      	b.n	800c8e2 <xQueueGenericSend+0x246>
 800c996:	bf00      	nop

0800c998 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 800c998:	2800      	cmp	r0, #0
 800c99a:	d04b      	beq.n	800ca34 <xQueueGenericSendFromISR+0x9c>
{
 800c99c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c9a0:	460e      	mov	r6, r1
 800c9a2:	4617      	mov	r7, r2
 800c9a4:	461d      	mov	r5, r3
 800c9a6:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800c9a8:	b321      	cbz	r1, 800c9f4 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800c9aa:	2d02      	cmp	r5, #2
 800c9ac:	d10b      	bne.n	800c9c6 <xQueueGenericSendFromISR+0x2e>
 800c9ae:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800c9b0:	2b01      	cmp	r3, #1
 800c9b2:	d008      	beq.n	800c9c6 <xQueueGenericSendFromISR+0x2e>
 800c9b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c9b8:	f383 8811 	msr	BASEPRI, r3
 800c9bc:	f3bf 8f6f 	isb	sy
 800c9c0:	f3bf 8f4f 	dsb	sy
 800c9c4:	e7fe      	b.n	800c9c4 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800c9c6:	f7ff fca9 	bl	800c31c <vPortValidateInterruptPriority>
	__asm volatile
 800c9ca:	f3ef 8811 	mrs	r8, BASEPRI
 800c9ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c9d2:	f383 8811 	msr	BASEPRI, r3
 800c9d6:	f3bf 8f6f 	isb	sy
 800c9da:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800c9de:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c9e0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800c9e2:	429a      	cmp	r2, r3
 800c9e4:	d312      	bcc.n	800ca0c <xQueueGenericSendFromISR+0x74>
 800c9e6:	2d02      	cmp	r5, #2
 800c9e8:	d010      	beq.n	800ca0c <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 800c9ea:	2000      	movs	r0, #0
	__asm volatile
 800c9ec:	f388 8811 	msr	BASEPRI, r8
}
 800c9f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800c9f4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800c9f6:	2b00      	cmp	r3, #0
 800c9f8:	d0d7      	beq.n	800c9aa <xQueueGenericSendFromISR+0x12>
	__asm volatile
 800c9fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c9fe:	f383 8811 	msr	BASEPRI, r3
 800ca02:	f3bf 8f6f 	isb	sy
 800ca06:	f3bf 8f4f 	dsb	sy
 800ca0a:	e7fe      	b.n	800ca0a <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800ca0c:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 800ca0e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ca12:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800ca14:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 800ca16:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800ca18:	4620      	mov	r0, r4
 800ca1a:	f7ff fcad 	bl	800c378 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800ca1e:	1c6b      	adds	r3, r5, #1
 800ca20:	d011      	beq.n	800ca46 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800ca22:	1c6b      	adds	r3, r5, #1
 800ca24:	b25b      	sxtb	r3, r3
 800ca26:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 800ca2a:	2001      	movs	r0, #1
	__asm volatile
 800ca2c:	f388 8811 	msr	BASEPRI, r8
}
 800ca30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 800ca34:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ca38:	f383 8811 	msr	BASEPRI, r3
 800ca3c:	f3bf 8f6f 	isb	sy
 800ca40:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800ca44:	e7fe      	b.n	800ca44 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ca46:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ca48:	2b00      	cmp	r3, #0
 800ca4a:	d0ee      	beq.n	800ca2a <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ca4c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800ca50:	f001 f9ae 	bl	800ddb0 <xTaskRemoveFromEventList>
 800ca54:	2800      	cmp	r0, #0
 800ca56:	d0e8      	beq.n	800ca2a <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800ca58:	2f00      	cmp	r7, #0
 800ca5a:	d0e6      	beq.n	800ca2a <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800ca5c:	2001      	movs	r0, #1
 800ca5e:	6038      	str	r0, [r7, #0]
 800ca60:	e7c4      	b.n	800c9ec <xQueueGenericSendFromISR+0x54>
 800ca62:	bf00      	nop

0800ca64 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 800ca64:	b370      	cbz	r0, 800cac4 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 800ca66:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 800ca68:	b570      	push	{r4, r5, r6, lr}
 800ca6a:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 800ca6c:	b143      	cbz	r3, 800ca80 <xQueueGiveFromISR+0x1c>
 800ca6e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ca72:	f383 8811 	msr	BASEPRI, r3
 800ca76:	f3bf 8f6f 	isb	sy
 800ca7a:	f3bf 8f4f 	dsb	sy
 800ca7e:	e7fe      	b.n	800ca7e <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800ca80:	6803      	ldr	r3, [r0, #0]
 800ca82:	460c      	mov	r4, r1
 800ca84:	b33b      	cbz	r3, 800cad6 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800ca86:	f7ff fc49 	bl	800c31c <vPortValidateInterruptPriority>
	__asm volatile
 800ca8a:	f3ef 8511 	mrs	r5, BASEPRI
 800ca8e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ca92:	f383 8811 	msr	BASEPRI, r3
 800ca96:	f3bf 8f6f 	isb	sy
 800ca9a:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ca9e:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800caa0:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800caa2:	429a      	cmp	r2, r3
 800caa4:	d923      	bls.n	800caee <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 800caa6:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800caaa:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 800caac:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800caae:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800cab0:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 800cab2:	d020      	beq.n	800caf6 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800cab4:	3301      	adds	r3, #1
 800cab6:	b25b      	sxtb	r3, r3
 800cab8:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 800cabc:	2001      	movs	r0, #1
	__asm volatile
 800cabe:	f385 8811 	msr	BASEPRI, r5
}
 800cac2:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 800cac4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cac8:	f383 8811 	msr	BASEPRI, r3
 800cacc:	f3bf 8f6f 	isb	sy
 800cad0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800cad4:	e7fe      	b.n	800cad4 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800cad6:	6883      	ldr	r3, [r0, #8]
 800cad8:	2b00      	cmp	r3, #0
 800cada:	d0d4      	beq.n	800ca86 <xQueueGiveFromISR+0x22>
 800cadc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cae0:	f383 8811 	msr	BASEPRI, r3
 800cae4:	f3bf 8f6f 	isb	sy
 800cae8:	f3bf 8f4f 	dsb	sy
 800caec:	e7fe      	b.n	800caec <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 800caee:	2000      	movs	r0, #0
	__asm volatile
 800caf0:	f385 8811 	msr	BASEPRI, r5
}
 800caf4:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800caf6:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800caf8:	2b00      	cmp	r3, #0
 800cafa:	d0df      	beq.n	800cabc <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800cafc:	f106 0024 	add.w	r0, r6, #36	; 0x24
 800cb00:	f001 f956 	bl	800ddb0 <xTaskRemoveFromEventList>
 800cb04:	2800      	cmp	r0, #0
 800cb06:	d0d9      	beq.n	800cabc <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 800cb08:	2c00      	cmp	r4, #0
 800cb0a:	d0d7      	beq.n	800cabc <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800cb0c:	2001      	movs	r0, #1
 800cb0e:	6020      	str	r0, [r4, #0]
 800cb10:	e7ee      	b.n	800caf0 <xQueueGiveFromISR+0x8c>
 800cb12:	bf00      	nop

0800cb14 <xQueueReceive>:
{
 800cb14:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cb18:	b085      	sub	sp, #20
 800cb1a:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800cb1c:	2800      	cmp	r0, #0
 800cb1e:	f000 815c 	beq.w	800cdda <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800cb22:	460f      	mov	r7, r1
 800cb24:	4604      	mov	r4, r0
 800cb26:	2900      	cmp	r1, #0
 800cb28:	d079      	beq.n	800cc1e <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800cb2a:	f001 f9e3 	bl	800def4 <xTaskGetSchedulerState>
 800cb2e:	2800      	cmp	r0, #0
 800cb30:	f000 8081 	beq.w	800cc36 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 800cb34:	f7ff fabe 	bl	800c0b4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800cb38:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800cb3a:	2d00      	cmp	r5, #0
 800cb3c:	f040 8138 	bne.w	800cdb0 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800cb40:	9b01      	ldr	r3, [sp, #4]
 800cb42:	2b00      	cmp	r3, #0
 800cb44:	f000 80d5 	beq.w	800ccf2 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800cb48:	a802      	add	r0, sp, #8
 800cb4a:	f001 f979 	bl	800de40 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 800cb4e:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800cb50:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 800cb54:	f7ff fad0 	bl	800c0f8 <vPortExitCritical>
		vTaskSuspendAll();
 800cb58:	f001 f822 	bl	800dba0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800cb5c:	f7ff faaa 	bl	800c0b4 <vPortEnterCritical>
 800cb60:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800cb64:	2bff      	cmp	r3, #255	; 0xff
 800cb66:	bf08      	it	eq
 800cb68:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800cb6c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800cb70:	2bff      	cmp	r3, #255	; 0xff
 800cb72:	bf08      	it	eq
 800cb74:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800cb78:	f7ff fabe 	bl	800c0f8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800cb7c:	a901      	add	r1, sp, #4
 800cb7e:	a802      	add	r0, sp, #8
 800cb80:	f001 f96a 	bl	800de58 <xTaskCheckForTimeOut>
 800cb84:	2800      	cmp	r0, #0
 800cb86:	d163      	bne.n	800cc50 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 800cb88:	f7ff fa94 	bl	800c0b4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800cb8c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800cb8e:	2b00      	cmp	r3, #0
 800cb90:	f000 80b5 	beq.w	800ccfe <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 800cb94:	f7ff fab0 	bl	800c0f8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800cb98:	f7ff fa8c 	bl	800c0b4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800cb9c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800cba0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800cba2:	2d00      	cmp	r5, #0
 800cba4:	dc04      	bgt.n	800cbb0 <xQueueReceive+0x9c>
 800cba6:	e011      	b.n	800cbcc <xQueueReceive+0xb8>
			--cTxLock;
 800cba8:	1e6b      	subs	r3, r5, #1
 800cbaa:	b2da      	uxtb	r2, r3
 800cbac:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800cbae:	b16a      	cbz	r2, 800cbcc <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800cbb0:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800cbb2:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800cbb4:	b153      	cbz	r3, 800cbcc <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800cbb6:	f001 f8fb 	bl	800ddb0 <xTaskRemoveFromEventList>
 800cbba:	2800      	cmp	r0, #0
 800cbbc:	d0f4      	beq.n	800cba8 <xQueueReceive+0x94>
						vTaskMissedYield();
 800cbbe:	f001 f993 	bl	800dee8 <vTaskMissedYield>
			--cTxLock;
 800cbc2:	1e6b      	subs	r3, r5, #1
 800cbc4:	b2da      	uxtb	r2, r3
 800cbc6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800cbc8:	2a00      	cmp	r2, #0
 800cbca:	d1f1      	bne.n	800cbb0 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 800cbcc:	23ff      	movs	r3, #255	; 0xff
 800cbce:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800cbd2:	f7ff fa91 	bl	800c0f8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800cbd6:	f7ff fa6d 	bl	800c0b4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800cbda:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800cbde:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800cbe0:	2d00      	cmp	r5, #0
 800cbe2:	dd14      	ble.n	800cc0e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cbe4:	f104 0910 	add.w	r9, r4, #16
 800cbe8:	e003      	b.n	800cbf2 <xQueueReceive+0xde>
				--cRxLock;
 800cbea:	1e6b      	subs	r3, r5, #1
 800cbec:	b2da      	uxtb	r2, r3
 800cbee:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800cbf0:	b16a      	cbz	r2, 800cc0e <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800cbf2:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cbf4:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800cbf6:	b153      	cbz	r3, 800cc0e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cbf8:	f001 f8da 	bl	800ddb0 <xTaskRemoveFromEventList>
 800cbfc:	2800      	cmp	r0, #0
 800cbfe:	d0f4      	beq.n	800cbea <xQueueReceive+0xd6>
					vTaskMissedYield();
 800cc00:	f001 f972 	bl	800dee8 <vTaskMissedYield>
				--cRxLock;
 800cc04:	1e6b      	subs	r3, r5, #1
 800cc06:	b2da      	uxtb	r2, r3
 800cc08:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800cc0a:	2a00      	cmp	r2, #0
 800cc0c:	d1f1      	bne.n	800cbf2 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 800cc0e:	23ff      	movs	r3, #255	; 0xff
 800cc10:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800cc14:	f7ff fa70 	bl	800c0f8 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800cc18:	f000 ffca 	bl	800dbb0 <xTaskResumeAll>
		taskENTER_CRITICAL();
 800cc1c:	e060      	b.n	800cce0 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800cc1e:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800cc20:	2b00      	cmp	r3, #0
 800cc22:	d082      	beq.n	800cb2a <xQueueReceive+0x16>
	__asm volatile
 800cc24:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cc28:	f383 8811 	msr	BASEPRI, r3
 800cc2c:	f3bf 8f6f 	isb	sy
 800cc30:	f3bf 8f4f 	dsb	sy
 800cc34:	e7fe      	b.n	800cc34 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800cc36:	9b01      	ldr	r3, [sp, #4]
 800cc38:	2b00      	cmp	r3, #0
 800cc3a:	f43f af7b 	beq.w	800cb34 <xQueueReceive+0x20>
 800cc3e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cc42:	f383 8811 	msr	BASEPRI, r3
 800cc46:	f3bf 8f6f 	isb	sy
 800cc4a:	f3bf 8f4f 	dsb	sy
 800cc4e:	e7fe      	b.n	800cc4e <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 800cc50:	f7ff fa30 	bl	800c0b4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800cc54:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800cc58:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800cc5a:	2d00      	cmp	r5, #0
 800cc5c:	dc04      	bgt.n	800cc68 <xQueueReceive+0x154>
 800cc5e:	e011      	b.n	800cc84 <xQueueReceive+0x170>
			--cTxLock;
 800cc60:	1e6b      	subs	r3, r5, #1
 800cc62:	b2da      	uxtb	r2, r3
 800cc64:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800cc66:	b16a      	cbz	r2, 800cc84 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800cc68:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800cc6a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800cc6c:	b153      	cbz	r3, 800cc84 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800cc6e:	f001 f89f 	bl	800ddb0 <xTaskRemoveFromEventList>
 800cc72:	2800      	cmp	r0, #0
 800cc74:	d0f4      	beq.n	800cc60 <xQueueReceive+0x14c>
						vTaskMissedYield();
 800cc76:	f001 f937 	bl	800dee8 <vTaskMissedYield>
			--cTxLock;
 800cc7a:	1e6b      	subs	r3, r5, #1
 800cc7c:	b2da      	uxtb	r2, r3
 800cc7e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800cc80:	2a00      	cmp	r2, #0
 800cc82:	d1f1      	bne.n	800cc68 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 800cc84:	23ff      	movs	r3, #255	; 0xff
 800cc86:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800cc8a:	f7ff fa35 	bl	800c0f8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800cc8e:	f7ff fa11 	bl	800c0b4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800cc92:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800cc96:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800cc98:	2d00      	cmp	r5, #0
 800cc9a:	dd14      	ble.n	800ccc6 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cc9c:	f104 0910 	add.w	r9, r4, #16
 800cca0:	e003      	b.n	800ccaa <xQueueReceive+0x196>
				--cRxLock;
 800cca2:	1e6b      	subs	r3, r5, #1
 800cca4:	b2da      	uxtb	r2, r3
 800cca6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800cca8:	b16a      	cbz	r2, 800ccc6 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ccaa:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ccac:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ccae:	b153      	cbz	r3, 800ccc6 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ccb0:	f001 f87e 	bl	800ddb0 <xTaskRemoveFromEventList>
 800ccb4:	2800      	cmp	r0, #0
 800ccb6:	d0f4      	beq.n	800cca2 <xQueueReceive+0x18e>
					vTaskMissedYield();
 800ccb8:	f001 f916 	bl	800dee8 <vTaskMissedYield>
				--cRxLock;
 800ccbc:	1e6b      	subs	r3, r5, #1
 800ccbe:	b2da      	uxtb	r2, r3
 800ccc0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ccc2:	2a00      	cmp	r2, #0
 800ccc4:	d1f1      	bne.n	800ccaa <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 800ccc6:	23ff      	movs	r3, #255	; 0xff
 800ccc8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800cccc:	f7ff fa14 	bl	800c0f8 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800ccd0:	f000 ff6e 	bl	800dbb0 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800ccd4:	f7ff f9ee 	bl	800c0b4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800ccd8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ccda:	b153      	cbz	r3, 800ccf2 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 800ccdc:	f7ff fa0c 	bl	800c0f8 <vPortExitCritical>
		taskENTER_CRITICAL();
 800cce0:	f7ff f9e8 	bl	800c0b4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800cce4:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800cce6:	2d00      	cmp	r5, #0
 800cce8:	d162      	bne.n	800cdb0 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800ccea:	9b01      	ldr	r3, [sp, #4]
 800ccec:	2b00      	cmp	r3, #0
 800ccee:	f47f af31 	bne.w	800cb54 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 800ccf2:	f7ff fa01 	bl	800c0f8 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800ccf6:	2000      	movs	r0, #0
}
 800ccf8:	b005      	add	sp, #20
 800ccfa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800ccfe:	f7ff f9fb 	bl	800c0f8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800cd02:	9901      	ldr	r1, [sp, #4]
 800cd04:	4630      	mov	r0, r6
 800cd06:	f000 ffc5 	bl	800dc94 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800cd0a:	f7ff f9d3 	bl	800c0b4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800cd0e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800cd12:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800cd14:	2d00      	cmp	r5, #0
 800cd16:	dc04      	bgt.n	800cd22 <xQueueReceive+0x20e>
 800cd18:	e011      	b.n	800cd3e <xQueueReceive+0x22a>
			--cTxLock;
 800cd1a:	1e6b      	subs	r3, r5, #1
 800cd1c:	b2da      	uxtb	r2, r3
 800cd1e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800cd20:	b16a      	cbz	r2, 800cd3e <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800cd22:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800cd24:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800cd26:	b153      	cbz	r3, 800cd3e <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800cd28:	f001 f842 	bl	800ddb0 <xTaskRemoveFromEventList>
 800cd2c:	2800      	cmp	r0, #0
 800cd2e:	d0f4      	beq.n	800cd1a <xQueueReceive+0x206>
						vTaskMissedYield();
 800cd30:	f001 f8da 	bl	800dee8 <vTaskMissedYield>
			--cTxLock;
 800cd34:	1e6b      	subs	r3, r5, #1
 800cd36:	b2da      	uxtb	r2, r3
 800cd38:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800cd3a:	2a00      	cmp	r2, #0
 800cd3c:	d1f1      	bne.n	800cd22 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 800cd3e:	23ff      	movs	r3, #255	; 0xff
 800cd40:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800cd44:	f7ff f9d8 	bl	800c0f8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800cd48:	f7ff f9b4 	bl	800c0b4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800cd4c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800cd50:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800cd52:	2d00      	cmp	r5, #0
 800cd54:	dd14      	ble.n	800cd80 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cd56:	f104 0910 	add.w	r9, r4, #16
 800cd5a:	e003      	b.n	800cd64 <xQueueReceive+0x250>
				--cRxLock;
 800cd5c:	1e6b      	subs	r3, r5, #1
 800cd5e:	b2da      	uxtb	r2, r3
 800cd60:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800cd62:	b16a      	cbz	r2, 800cd80 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800cd64:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cd66:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800cd68:	b153      	cbz	r3, 800cd80 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cd6a:	f001 f821 	bl	800ddb0 <xTaskRemoveFromEventList>
 800cd6e:	2800      	cmp	r0, #0
 800cd70:	d0f4      	beq.n	800cd5c <xQueueReceive+0x248>
					vTaskMissedYield();
 800cd72:	f001 f8b9 	bl	800dee8 <vTaskMissedYield>
				--cRxLock;
 800cd76:	1e6b      	subs	r3, r5, #1
 800cd78:	b2da      	uxtb	r2, r3
 800cd7a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800cd7c:	2a00      	cmp	r2, #0
 800cd7e:	d1f1      	bne.n	800cd64 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 800cd80:	23ff      	movs	r3, #255	; 0xff
 800cd82:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800cd86:	f7ff f9b7 	bl	800c0f8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800cd8a:	f000 ff11 	bl	800dbb0 <xTaskResumeAll>
 800cd8e:	2800      	cmp	r0, #0
 800cd90:	d1a6      	bne.n	800cce0 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 800cd92:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cd96:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cd9a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800cd9e:	f3bf 8f4f 	dsb	sy
 800cda2:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 800cda6:	f7ff f985 	bl	800c0b4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800cdaa:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800cdac:	2d00      	cmp	r5, #0
 800cdae:	d09c      	beq.n	800ccea <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800cdb0:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800cdb2:	b152      	cbz	r2, 800cdca <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800cdb4:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800cdb6:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800cdb8:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800cdba:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800cdbc:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800cdbe:	bf24      	itt	cs
 800cdc0:	6821      	ldrcs	r1, [r4, #0]
 800cdc2:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800cdc4:	4638      	mov	r0, r7
 800cdc6:	f01a fe96 	bl	8027af6 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800cdca:	3d01      	subs	r5, #1
 800cdcc:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800cdce:	6923      	ldr	r3, [r4, #16]
 800cdd0:	b963      	cbnz	r3, 800cdec <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 800cdd2:	f7ff f991 	bl	800c0f8 <vPortExitCritical>
				return pdPASS;
 800cdd6:	2001      	movs	r0, #1
 800cdd8:	e78e      	b.n	800ccf8 <xQueueReceive+0x1e4>
 800cdda:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cdde:	f383 8811 	msr	BASEPRI, r3
 800cde2:	f3bf 8f6f 	isb	sy
 800cde6:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800cdea:	e7fe      	b.n	800cdea <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cdec:	f104 0010 	add.w	r0, r4, #16
 800cdf0:	f000 ffde 	bl	800ddb0 <xTaskRemoveFromEventList>
 800cdf4:	2800      	cmp	r0, #0
 800cdf6:	d0ec      	beq.n	800cdd2 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 800cdf8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cdfc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ce00:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ce04:	f3bf 8f4f 	dsb	sy
 800ce08:	f3bf 8f6f 	isb	sy
 800ce0c:	e7e1      	b.n	800cdd2 <xQueueReceive+0x2be>
 800ce0e:	bf00      	nop

0800ce10 <xQueueSemaphoreTake>:
{
 800ce10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ce14:	b084      	sub	sp, #16
 800ce16:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800ce18:	2800      	cmp	r0, #0
 800ce1a:	d05c      	beq.n	800ced6 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 800ce1c:	6c07      	ldr	r7, [r0, #64]	; 0x40
 800ce1e:	4604      	mov	r4, r0
 800ce20:	b147      	cbz	r7, 800ce34 <xQueueSemaphoreTake+0x24>
 800ce22:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ce26:	f383 8811 	msr	BASEPRI, r3
 800ce2a:	f3bf 8f6f 	isb	sy
 800ce2e:	f3bf 8f4f 	dsb	sy
 800ce32:	e7fe      	b.n	800ce32 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ce34:	f001 f85e 	bl	800def4 <xTaskGetSchedulerState>
 800ce38:	4605      	mov	r5, r0
 800ce3a:	2800      	cmp	r0, #0
 800ce3c:	d054      	beq.n	800cee8 <xQueueSemaphoreTake+0xd8>
 800ce3e:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ce40:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800ce44:	f7ff f936 	bl	800c0b4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800ce48:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800ce4a:	2b00      	cmp	r3, #0
 800ce4c:	f040 8148 	bne.w	800d0e0 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 800ce50:	9b01      	ldr	r3, [sp, #4]
 800ce52:	2b00      	cmp	r3, #0
 800ce54:	f000 813a 	beq.w	800d0cc <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 800ce58:	2d00      	cmp	r5, #0
 800ce5a:	f000 809d 	beq.w	800cf98 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 800ce5e:	f7ff f94b 	bl	800c0f8 <vPortExitCritical>
		vTaskSuspendAll();
 800ce62:	f000 fe9d 	bl	800dba0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800ce66:	f7ff f925 	bl	800c0b4 <vPortEnterCritical>
 800ce6a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ce6e:	2bff      	cmp	r3, #255	; 0xff
 800ce70:	bf04      	itt	eq
 800ce72:	2300      	moveq	r3, #0
 800ce74:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800ce78:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ce7c:	2bff      	cmp	r3, #255	; 0xff
 800ce7e:	bf04      	itt	eq
 800ce80:	2300      	moveq	r3, #0
 800ce82:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800ce86:	f7ff f937 	bl	800c0f8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800ce8a:	a901      	add	r1, sp, #4
 800ce8c:	a802      	add	r0, sp, #8
 800ce8e:	f000 ffe3 	bl	800de58 <xTaskCheckForTimeOut>
 800ce92:	2800      	cmp	r0, #0
 800ce94:	d135      	bne.n	800cf02 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 800ce96:	f7ff f90d 	bl	800c0b4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800ce9a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ce9c:	2b00      	cmp	r3, #0
 800ce9e:	f000 80a4 	beq.w	800cfea <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 800cea2:	f7ff f929 	bl	800c0f8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800cea6:	f7ff f905 	bl	800c0b4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ceaa:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ceae:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ceb0:	2d00      	cmp	r5, #0
 800ceb2:	dc05      	bgt.n	800cec0 <xQueueSemaphoreTake+0xb0>
 800ceb4:	e074      	b.n	800cfa0 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 800ceb6:	1e6b      	subs	r3, r5, #1
 800ceb8:	b2da      	uxtb	r2, r3
 800ceba:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800cebc:	2a00      	cmp	r2, #0
 800cebe:	d06f      	beq.n	800cfa0 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800cec0:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800cec2:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800cec4:	2b00      	cmp	r3, #0
 800cec6:	d06b      	beq.n	800cfa0 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800cec8:	f000 ff72 	bl	800ddb0 <xTaskRemoveFromEventList>
 800cecc:	2800      	cmp	r0, #0
 800cece:	d0f2      	beq.n	800ceb6 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 800ced0:	f001 f80a 	bl	800dee8 <vTaskMissedYield>
 800ced4:	e7ef      	b.n	800ceb6 <xQueueSemaphoreTake+0xa6>
 800ced6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ceda:	f383 8811 	msr	BASEPRI, r3
 800cede:	f3bf 8f6f 	isb	sy
 800cee2:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800cee6:	e7fe      	b.n	800cee6 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800cee8:	9b01      	ldr	r3, [sp, #4]
 800ceea:	2b00      	cmp	r3, #0
 800ceec:	f000 80d4 	beq.w	800d098 <xQueueSemaphoreTake+0x288>
 800cef0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cef4:	f383 8811 	msr	BASEPRI, r3
 800cef8:	f3bf 8f6f 	isb	sy
 800cefc:	f3bf 8f4f 	dsb	sy
 800cf00:	e7fe      	b.n	800cf00 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 800cf02:	f7ff f8d7 	bl	800c0b4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800cf06:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800cf0a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800cf0c:	2d00      	cmp	r5, #0
 800cf0e:	dc04      	bgt.n	800cf1a <xQueueSemaphoreTake+0x10a>
 800cf10:	e011      	b.n	800cf36 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 800cf12:	1e6b      	subs	r3, r5, #1
 800cf14:	b2da      	uxtb	r2, r3
 800cf16:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800cf18:	b16a      	cbz	r2, 800cf36 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800cf1a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800cf1c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800cf1e:	b153      	cbz	r3, 800cf36 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800cf20:	f000 ff46 	bl	800ddb0 <xTaskRemoveFromEventList>
 800cf24:	2800      	cmp	r0, #0
 800cf26:	d0f4      	beq.n	800cf12 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 800cf28:	f000 ffde 	bl	800dee8 <vTaskMissedYield>
			--cTxLock;
 800cf2c:	1e6b      	subs	r3, r5, #1
 800cf2e:	b2da      	uxtb	r2, r3
 800cf30:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800cf32:	2a00      	cmp	r2, #0
 800cf34:	d1f1      	bne.n	800cf1a <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 800cf36:	23ff      	movs	r3, #255	; 0xff
 800cf38:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800cf3c:	f7ff f8dc 	bl	800c0f8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800cf40:	f7ff f8b8 	bl	800c0b4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800cf44:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800cf48:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800cf4a:	2d00      	cmp	r5, #0
 800cf4c:	dd14      	ble.n	800cf78 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cf4e:	f104 0810 	add.w	r8, r4, #16
 800cf52:	e003      	b.n	800cf5c <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 800cf54:	1e6b      	subs	r3, r5, #1
 800cf56:	b2da      	uxtb	r2, r3
 800cf58:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800cf5a:	b16a      	cbz	r2, 800cf78 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800cf5c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cf5e:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800cf60:	b153      	cbz	r3, 800cf78 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cf62:	f000 ff25 	bl	800ddb0 <xTaskRemoveFromEventList>
 800cf66:	2800      	cmp	r0, #0
 800cf68:	d0f4      	beq.n	800cf54 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 800cf6a:	f000 ffbd 	bl	800dee8 <vTaskMissedYield>
				--cRxLock;
 800cf6e:	1e6b      	subs	r3, r5, #1
 800cf70:	b2da      	uxtb	r2, r3
 800cf72:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800cf74:	2a00      	cmp	r2, #0
 800cf76:	d1f1      	bne.n	800cf5c <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 800cf78:	23ff      	movs	r3, #255	; 0xff
 800cf7a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800cf7e:	f7ff f8bb 	bl	800c0f8 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800cf82:	f000 fe15 	bl	800dbb0 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800cf86:	f7ff f895 	bl	800c0b4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800cf8a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800cf8c:	2b00      	cmp	r3, #0
 800cf8e:	d07c      	beq.n	800d08a <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 800cf90:	f7ff f8b2 	bl	800c0f8 <vPortExitCritical>
	return xReturn;
 800cf94:	2501      	movs	r5, #1
 800cf96:	e755      	b.n	800ce44 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800cf98:	a802      	add	r0, sp, #8
 800cf9a:	f000 ff51 	bl	800de40 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800cf9e:	e75e      	b.n	800ce5e <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800cfa0:	23ff      	movs	r3, #255	; 0xff
 800cfa2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800cfa6:	f7ff f8a7 	bl	800c0f8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800cfaa:	f7ff f883 	bl	800c0b4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800cfae:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800cfb2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800cfb4:	2d00      	cmp	r5, #0
 800cfb6:	dd10      	ble.n	800cfda <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cfb8:	f104 0810 	add.w	r8, r4, #16
 800cfbc:	e003      	b.n	800cfc6 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 800cfbe:	1e6b      	subs	r3, r5, #1
 800cfc0:	b2da      	uxtb	r2, r3
 800cfc2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800cfc4:	b14a      	cbz	r2, 800cfda <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800cfc6:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cfc8:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800cfca:	b133      	cbz	r3, 800cfda <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cfcc:	f000 fef0 	bl	800ddb0 <xTaskRemoveFromEventList>
 800cfd0:	2800      	cmp	r0, #0
 800cfd2:	d0f4      	beq.n	800cfbe <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 800cfd4:	f000 ff88 	bl	800dee8 <vTaskMissedYield>
 800cfd8:	e7f1      	b.n	800cfbe <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 800cfda:	23ff      	movs	r3, #255	; 0xff
 800cfdc:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800cfe0:	f7ff f88a 	bl	800c0f8 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800cfe4:	f000 fde4 	bl	800dbb0 <xTaskResumeAll>
 800cfe8:	e7d4      	b.n	800cf94 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800cfea:	f7ff f885 	bl	800c0f8 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800cfee:	6823      	ldr	r3, [r4, #0]
 800cff0:	2b00      	cmp	r3, #0
 800cff2:	d062      	beq.n	800d0ba <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800cff4:	9901      	ldr	r1, [sp, #4]
 800cff6:	4630      	mov	r0, r6
 800cff8:	f000 fe4c 	bl	800dc94 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800cffc:	f7ff f85a 	bl	800c0b4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d000:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d004:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d006:	2d00      	cmp	r5, #0
 800d008:	dc04      	bgt.n	800d014 <xQueueSemaphoreTake+0x204>
 800d00a:	e00d      	b.n	800d028 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 800d00c:	1e6b      	subs	r3, r5, #1
 800d00e:	b2da      	uxtb	r2, r3
 800d010:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d012:	b14a      	cbz	r2, 800d028 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d014:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d016:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d018:	b133      	cbz	r3, 800d028 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d01a:	f000 fec9 	bl	800ddb0 <xTaskRemoveFromEventList>
 800d01e:	2800      	cmp	r0, #0
 800d020:	d0f4      	beq.n	800d00c <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 800d022:	f000 ff61 	bl	800dee8 <vTaskMissedYield>
 800d026:	e7f1      	b.n	800d00c <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 800d028:	23ff      	movs	r3, #255	; 0xff
 800d02a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800d02e:	f7ff f863 	bl	800c0f8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d032:	f7ff f83f 	bl	800c0b4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d036:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d03a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d03c:	2d00      	cmp	r5, #0
 800d03e:	dd10      	ble.n	800d062 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d040:	f104 0810 	add.w	r8, r4, #16
 800d044:	e003      	b.n	800d04e <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 800d046:	1e6b      	subs	r3, r5, #1
 800d048:	b2da      	uxtb	r2, r3
 800d04a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d04c:	b14a      	cbz	r2, 800d062 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d04e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d050:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d052:	b133      	cbz	r3, 800d062 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d054:	f000 feac 	bl	800ddb0 <xTaskRemoveFromEventList>
 800d058:	2800      	cmp	r0, #0
 800d05a:	d0f4      	beq.n	800d046 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 800d05c:	f000 ff44 	bl	800dee8 <vTaskMissedYield>
 800d060:	e7f1      	b.n	800d046 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 800d062:	23ff      	movs	r3, #255	; 0xff
 800d064:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800d068:	f7ff f846 	bl	800c0f8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800d06c:	f000 fda0 	bl	800dbb0 <xTaskResumeAll>
 800d070:	2800      	cmp	r0, #0
 800d072:	d18f      	bne.n	800cf94 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 800d074:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d078:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d07c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d080:	f3bf 8f4f 	dsb	sy
 800d084:	f3bf 8f6f 	isb	sy
 800d088:	e784      	b.n	800cf94 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800d08a:	f7ff f835 	bl	800c0f8 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 800d08e:	b92f      	cbnz	r7, 800d09c <xQueueSemaphoreTake+0x28c>
}
 800d090:	4638      	mov	r0, r7
 800d092:	b004      	add	sp, #16
 800d094:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d098:	4607      	mov	r7, r0
 800d09a:	e6d1      	b.n	800ce40 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 800d09c:	f7ff f80a 	bl	800c0b4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800d0a0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800d0a2:	b119      	cbz	r1, 800d0ac <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800d0a4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800d0a6:	6819      	ldr	r1, [r3, #0]
 800d0a8:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800d0ac:	68a0      	ldr	r0, [r4, #8]
 800d0ae:	f000 ffbd 	bl	800e02c <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800d0b2:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 800d0b4:	f7ff f820 	bl	800c0f8 <vPortExitCritical>
 800d0b8:	e7ea      	b.n	800d090 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 800d0ba:	f7fe fffb 	bl	800c0b4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800d0be:	68a0      	ldr	r0, [r4, #8]
 800d0c0:	f000 ff28 	bl	800df14 <xTaskPriorityInherit>
 800d0c4:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 800d0c6:	f7ff f817 	bl	800c0f8 <vPortExitCritical>
 800d0ca:	e793      	b.n	800cff4 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800d0cc:	b197      	cbz	r7, 800d0f4 <xQueueSemaphoreTake+0x2e4>
 800d0ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d0d2:	f383 8811 	msr	BASEPRI, r3
 800d0d6:	f3bf 8f6f 	isb	sy
 800d0da:	f3bf 8f4f 	dsb	sy
 800d0de:	e7fe      	b.n	800d0de <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800d0e0:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800d0e2:	3b01      	subs	r3, #1
 800d0e4:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800d0e6:	b1ca      	cbz	r2, 800d11c <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d0e8:	6923      	ldr	r3, [r4, #16]
 800d0ea:	b933      	cbnz	r3, 800d0fa <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 800d0ec:	f7ff f804 	bl	800c0f8 <vPortExitCritical>
				return pdPASS;
 800d0f0:	2701      	movs	r7, #1
 800d0f2:	e7cd      	b.n	800d090 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 800d0f4:	f7ff f800 	bl	800c0f8 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800d0f8:	e7ca      	b.n	800d090 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d0fa:	f104 0010 	add.w	r0, r4, #16
 800d0fe:	f000 fe57 	bl	800ddb0 <xTaskRemoveFromEventList>
 800d102:	2800      	cmp	r0, #0
 800d104:	d0f2      	beq.n	800d0ec <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 800d106:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d10a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d10e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d112:	f3bf 8f4f 	dsb	sy
 800d116:	f3bf 8f6f 	isb	sy
 800d11a:	e7e7      	b.n	800d0ec <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800d11c:	f000 ffda 	bl	800e0d4 <pvTaskIncrementMutexHeldCount>
 800d120:	60a0      	str	r0, [r4, #8]
 800d122:	e7e1      	b.n	800d0e8 <xQueueSemaphoreTake+0x2d8>

0800d124 <xQueueReceiveFromISR>:
{
 800d124:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 800d128:	b310      	cbz	r0, 800d170 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d12a:	460e      	mov	r6, r1
 800d12c:	4617      	mov	r7, r2
 800d12e:	4604      	mov	r4, r0
 800d130:	b191      	cbz	r1, 800d158 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800d132:	f7ff f8f3 	bl	800c31c <vPortValidateInterruptPriority>
	__asm volatile
 800d136:	f3ef 8911 	mrs	r9, BASEPRI
 800d13a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d13e:	f383 8811 	msr	BASEPRI, r3
 800d142:	f3bf 8f6f 	isb	sy
 800d146:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d14a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800d14c:	b9cd      	cbnz	r5, 800d182 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 800d14e:	4628      	mov	r0, r5
	__asm volatile
 800d150:	f389 8811 	msr	BASEPRI, r9
}
 800d154:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d158:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800d15a:	2b00      	cmp	r3, #0
 800d15c:	d0e9      	beq.n	800d132 <xQueueReceiveFromISR+0xe>
	__asm volatile
 800d15e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d162:	f383 8811 	msr	BASEPRI, r3
 800d166:	f3bf 8f6f 	isb	sy
 800d16a:	f3bf 8f4f 	dsb	sy
 800d16e:	e7fe      	b.n	800d16e <xQueueReceiveFromISR+0x4a>
 800d170:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d174:	f383 8811 	msr	BASEPRI, r3
 800d178:	f3bf 8f6f 	isb	sy
 800d17c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800d180:	e7fe      	b.n	800d180 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 800d182:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800d186:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 800d188:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800d18c:	b152      	cbz	r2, 800d1a4 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d18e:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800d190:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d192:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800d194:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d196:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800d198:	bf24      	itt	cs
 800d19a:	6821      	ldrcs	r1, [r4, #0]
 800d19c:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d19e:	4630      	mov	r0, r6
 800d1a0:	f01a fca9 	bl	8027af6 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800d1a4:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800d1a6:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800d1aa:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800d1ac:	d009      	beq.n	800d1c2 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800d1ae:	f108 0301 	add.w	r3, r8, #1
 800d1b2:	b25b      	sxtb	r3, r3
 800d1b4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 800d1b8:	2001      	movs	r0, #1
	__asm volatile
 800d1ba:	f389 8811 	msr	BASEPRI, r9
}
 800d1be:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d1c2:	6923      	ldr	r3, [r4, #16]
 800d1c4:	2b00      	cmp	r3, #0
 800d1c6:	d0f7      	beq.n	800d1b8 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d1c8:	f104 0010 	add.w	r0, r4, #16
 800d1cc:	f000 fdf0 	bl	800ddb0 <xTaskRemoveFromEventList>
 800d1d0:	2800      	cmp	r0, #0
 800d1d2:	d0f1      	beq.n	800d1b8 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 800d1d4:	2f00      	cmp	r7, #0
 800d1d6:	d0ef      	beq.n	800d1b8 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800d1d8:	2001      	movs	r0, #1
 800d1da:	6038      	str	r0, [r7, #0]
 800d1dc:	e7b8      	b.n	800d150 <xQueueReceiveFromISR+0x2c>
 800d1de:	bf00      	nop

0800d1e0 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 800d1e0:	b158      	cbz	r0, 800d1fa <uxQueueMessagesWaiting+0x1a>
{
 800d1e2:	b510      	push	{r4, lr}
 800d1e4:	4604      	mov	r4, r0
 800d1e6:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 800d1e8:	f7fe ff64 	bl	800c0b4 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 800d1ec:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800d1ee:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800d1f0:	f7fe ff82 	bl	800c0f8 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800d1f4:	9801      	ldr	r0, [sp, #4]
 800d1f6:	b002      	add	sp, #8
 800d1f8:	bd10      	pop	{r4, pc}
	__asm volatile
 800d1fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d1fe:	f383 8811 	msr	BASEPRI, r3
 800d202:	f3bf 8f6f 	isb	sy
 800d206:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 800d20a:	e7fe      	b.n	800d20a <uxQueueMessagesWaiting+0x2a>

0800d20c <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 800d20c:	b108      	cbz	r0, 800d212 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 800d20e:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800d210:	4770      	bx	lr
 800d212:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d216:	f383 8811 	msr	BASEPRI, r3
 800d21a:	f3bf 8f6f 	isb	sy
 800d21e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800d222:	e7fe      	b.n	800d222 <uxQueueMessagesWaitingFromISR+0x16>
 800d224:	0000      	movs	r0, r0
	...

0800d228 <vQueueDelete>:
	configASSERT( pxQueue );
 800d228:	b1f0      	cbz	r0, 800d268 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800d22a:	4b21      	ldr	r3, [pc, #132]	; (800d2b0 <vQueueDelete+0x88>)
 800d22c:	685a      	ldr	r2, [r3, #4]
 800d22e:	4290      	cmp	r0, r2
 800d230:	d025      	beq.n	800d27e <vQueueDelete+0x56>
 800d232:	68da      	ldr	r2, [r3, #12]
 800d234:	4290      	cmp	r0, r2
 800d236:	d02c      	beq.n	800d292 <vQueueDelete+0x6a>
 800d238:	695a      	ldr	r2, [r3, #20]
 800d23a:	4290      	cmp	r0, r2
 800d23c:	d02b      	beq.n	800d296 <vQueueDelete+0x6e>
 800d23e:	69da      	ldr	r2, [r3, #28]
 800d240:	4290      	cmp	r0, r2
 800d242:	d02a      	beq.n	800d29a <vQueueDelete+0x72>
 800d244:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800d246:	4290      	cmp	r0, r2
 800d248:	d029      	beq.n	800d29e <vQueueDelete+0x76>
 800d24a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800d24c:	4290      	cmp	r0, r2
 800d24e:	d01e      	beq.n	800d28e <vQueueDelete+0x66>
 800d250:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d252:	4290      	cmp	r0, r2
 800d254:	d025      	beq.n	800d2a2 <vQueueDelete+0x7a>
 800d256:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800d258:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800d25a:	bf08      	it	eq
 800d25c:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800d25e:	d00f      	beq.n	800d280 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800d260:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800d264:	b14b      	cbz	r3, 800d27a <vQueueDelete+0x52>
}
 800d266:	4770      	bx	lr
 800d268:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d26c:	f383 8811 	msr	BASEPRI, r3
 800d270:	f3bf 8f6f 	isb	sy
 800d274:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800d278:	e7fe      	b.n	800d278 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 800d27a:	f7fe be03 	b.w	800be84 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800d27e:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800d280:	ed9f 7b09 	vldr	d7, [pc, #36]	; 800d2a8 <vQueueDelete+0x80>
 800d284:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800d288:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 800d28c:	e7e8      	b.n	800d260 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800d28e:	2205      	movs	r2, #5
 800d290:	e7f6      	b.n	800d280 <vQueueDelete+0x58>
 800d292:	2201      	movs	r2, #1
 800d294:	e7f4      	b.n	800d280 <vQueueDelete+0x58>
 800d296:	2202      	movs	r2, #2
 800d298:	e7f2      	b.n	800d280 <vQueueDelete+0x58>
 800d29a:	2203      	movs	r2, #3
 800d29c:	e7f0      	b.n	800d280 <vQueueDelete+0x58>
 800d29e:	2204      	movs	r2, #4
 800d2a0:	e7ee      	b.n	800d280 <vQueueDelete+0x58>
 800d2a2:	2206      	movs	r2, #6
 800d2a4:	e7ec      	b.n	800d280 <vQueueDelete+0x58>
 800d2a6:	bf00      	nop
	...
 800d2b0:	20013148 	.word	0x20013148

0800d2b4 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800d2b4:	4b12      	ldr	r3, [pc, #72]	; (800d300 <vQueueAddToRegistry+0x4c>)
 800d2b6:	681a      	ldr	r2, [r3, #0]
 800d2b8:	b17a      	cbz	r2, 800d2da <vQueueAddToRegistry+0x26>
 800d2ba:	689a      	ldr	r2, [r3, #8]
 800d2bc:	b162      	cbz	r2, 800d2d8 <vQueueAddToRegistry+0x24>
 800d2be:	691a      	ldr	r2, [r3, #16]
 800d2c0:	b192      	cbz	r2, 800d2e8 <vQueueAddToRegistry+0x34>
 800d2c2:	699a      	ldr	r2, [r3, #24]
 800d2c4:	b192      	cbz	r2, 800d2ec <vQueueAddToRegistry+0x38>
 800d2c6:	6a1a      	ldr	r2, [r3, #32]
 800d2c8:	b192      	cbz	r2, 800d2f0 <vQueueAddToRegistry+0x3c>
 800d2ca:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800d2cc:	b192      	cbz	r2, 800d2f4 <vQueueAddToRegistry+0x40>
 800d2ce:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800d2d0:	b192      	cbz	r2, 800d2f8 <vQueueAddToRegistry+0x44>
 800d2d2:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800d2d4:	b192      	cbz	r2, 800d2fc <vQueueAddToRegistry+0x48>
	}
 800d2d6:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800d2d8:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 800d2da:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800d2de:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800d2e2:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 800d2e6:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800d2e8:	2202      	movs	r2, #2
 800d2ea:	e7f6      	b.n	800d2da <vQueueAddToRegistry+0x26>
 800d2ec:	2203      	movs	r2, #3
 800d2ee:	e7f4      	b.n	800d2da <vQueueAddToRegistry+0x26>
 800d2f0:	2204      	movs	r2, #4
 800d2f2:	e7f2      	b.n	800d2da <vQueueAddToRegistry+0x26>
 800d2f4:	2205      	movs	r2, #5
 800d2f6:	e7f0      	b.n	800d2da <vQueueAddToRegistry+0x26>
 800d2f8:	2206      	movs	r2, #6
 800d2fa:	e7ee      	b.n	800d2da <vQueueAddToRegistry+0x26>
 800d2fc:	2207      	movs	r2, #7
 800d2fe:	e7ec      	b.n	800d2da <vQueueAddToRegistry+0x26>
 800d300:	20013148 	.word	0x20013148

0800d304 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800d304:	b570      	push	{r4, r5, r6, lr}
 800d306:	4605      	mov	r5, r0
 800d308:	460e      	mov	r6, r1
 800d30a:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800d30c:	f7fe fed2 	bl	800c0b4 <vPortEnterCritical>
 800d310:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800d314:	2bff      	cmp	r3, #255	; 0xff
 800d316:	bf04      	itt	eq
 800d318:	2300      	moveq	r3, #0
 800d31a:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 800d31e:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800d322:	2bff      	cmp	r3, #255	; 0xff
 800d324:	bf04      	itt	eq
 800d326:	2300      	moveq	r3, #0
 800d328:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 800d32c:	f7fe fee4 	bl	800c0f8 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800d330:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800d332:	2b00      	cmp	r3, #0
 800d334:	d043      	beq.n	800d3be <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 800d336:	f7fe febd 	bl	800c0b4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d33a:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800d33e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d340:	2c00      	cmp	r4, #0
 800d342:	dd14      	ble.n	800d36e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d344:	f105 0624 	add.w	r6, r5, #36	; 0x24
 800d348:	e003      	b.n	800d352 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 800d34a:	1e63      	subs	r3, r4, #1
 800d34c:	b2da      	uxtb	r2, r3
 800d34e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d350:	b16a      	cbz	r2, 800d36e <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d352:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d354:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d356:	b153      	cbz	r3, 800d36e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d358:	f000 fd2a 	bl	800ddb0 <xTaskRemoveFromEventList>
 800d35c:	2800      	cmp	r0, #0
 800d35e:	d0f4      	beq.n	800d34a <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 800d360:	f000 fdc2 	bl	800dee8 <vTaskMissedYield>
			--cTxLock;
 800d364:	1e63      	subs	r3, r4, #1
 800d366:	b2da      	uxtb	r2, r3
 800d368:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d36a:	2a00      	cmp	r2, #0
 800d36c:	d1f1      	bne.n	800d352 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800d36e:	23ff      	movs	r3, #255	; 0xff
 800d370:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 800d374:	f7fe fec0 	bl	800c0f8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d378:	f7fe fe9c 	bl	800c0b4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d37c:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800d380:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d382:	2c00      	cmp	r4, #0
 800d384:	dd14      	ble.n	800d3b0 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d386:	f105 0610 	add.w	r6, r5, #16
 800d38a:	e003      	b.n	800d394 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 800d38c:	1e63      	subs	r3, r4, #1
 800d38e:	b2da      	uxtb	r2, r3
 800d390:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d392:	b16a      	cbz	r2, 800d3b0 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d394:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d396:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d398:	b153      	cbz	r3, 800d3b0 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d39a:	f000 fd09 	bl	800ddb0 <xTaskRemoveFromEventList>
 800d39e:	2800      	cmp	r0, #0
 800d3a0:	d0f4      	beq.n	800d38c <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 800d3a2:	f000 fda1 	bl	800dee8 <vTaskMissedYield>
				--cRxLock;
 800d3a6:	1e63      	subs	r3, r4, #1
 800d3a8:	b2da      	uxtb	r2, r3
 800d3aa:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d3ac:	2a00      	cmp	r2, #0
 800d3ae:	d1f1      	bne.n	800d394 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 800d3b0:	23ff      	movs	r3, #255	; 0xff
 800d3b2:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 800d3b6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800d3ba:	f7fe be9d 	b.w	800c0f8 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800d3be:	4622      	mov	r2, r4
 800d3c0:	4631      	mov	r1, r6
 800d3c2:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800d3c6:	f000 fca9 	bl	800dd1c <vTaskPlaceOnEventListRestricted>
 800d3ca:	e7b4      	b.n	800d336 <vQueueWaitForMessageRestricted+0x32>

0800d3cc <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800d3cc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800d3d0:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800d3d2:	f7fe fe6f 	bl	800c0b4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800d3d6:	4a34      	ldr	r2, [pc, #208]	; (800d4a8 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 800d3d8:	4e34      	ldr	r6, [pc, #208]	; (800d4ac <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 800d3da:	6813      	ldr	r3, [r2, #0]
 800d3dc:	3301      	adds	r3, #1
 800d3de:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 800d3e0:	6833      	ldr	r3, [r6, #0]
 800d3e2:	2b00      	cmp	r3, #0
 800d3e4:	d032      	beq.n	800d44c <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 800d3e6:	4c32      	ldr	r4, [pc, #200]	; (800d4b0 <prvAddNewTaskToReadyList+0xe4>)
 800d3e8:	6823      	ldr	r3, [r4, #0]
 800d3ea:	b33b      	cbz	r3, 800d43c <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800d3ec:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800d3ee:	4f31      	ldr	r7, [pc, #196]	; (800d4b4 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 800d3f0:	4a31      	ldr	r2, [pc, #196]	; (800d4b8 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 800d3f2:	4932      	ldr	r1, [pc, #200]	; (800d4bc <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 800d3f4:	6813      	ldr	r3, [r2, #0]
 800d3f6:	3301      	adds	r3, #1
 800d3f8:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800d3fa:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800d3fc:	680b      	ldr	r3, [r1, #0]
 800d3fe:	4283      	cmp	r3, r0
 800d400:	bf38      	it	cc
 800d402:	6008      	strcc	r0, [r1, #0]
 800d404:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800d408:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800d40c:	1d29      	adds	r1, r5, #4
 800d40e:	f7fe fdad 	bl	800bf6c <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 800d412:	f7fe fe71 	bl	800c0f8 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 800d416:	6823      	ldr	r3, [r4, #0]
 800d418:	b173      	cbz	r3, 800d438 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800d41a:	6832      	ldr	r2, [r6, #0]
 800d41c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800d41e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800d420:	429a      	cmp	r2, r3
 800d422:	d209      	bcs.n	800d438 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 800d424:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d428:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d42c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d430:	f3bf 8f4f 	dsb	sy
 800d434:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800d438:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800d43c:	6833      	ldr	r3, [r6, #0]
 800d43e:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800d440:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d442:	4f1c      	ldr	r7, [pc, #112]	; (800d4b4 <prvAddNewTaskToReadyList+0xe8>)
 800d444:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 800d446:	bf98      	it	ls
 800d448:	6035      	strls	r5, [r6, #0]
 800d44a:	e7d1      	b.n	800d3f0 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 800d44c:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800d44e:	6813      	ldr	r3, [r2, #0]
 800d450:	2b01      	cmp	r3, #1
 800d452:	d003      	beq.n	800d45c <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800d454:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800d456:	4f17      	ldr	r7, [pc, #92]	; (800d4b4 <prvAddNewTaskToReadyList+0xe8>)
 800d458:	4c15      	ldr	r4, [pc, #84]	; (800d4b0 <prvAddNewTaskToReadyList+0xe4>)
 800d45a:	e7c9      	b.n	800d3f0 <prvAddNewTaskToReadyList+0x24>
 800d45c:	4f15      	ldr	r7, [pc, #84]	; (800d4b4 <prvAddNewTaskToReadyList+0xe8>)
 800d45e:	463c      	mov	r4, r7
 800d460:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800d464:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800d466:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800d468:	f7fe fd70 	bl	800bf4c <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800d46c:	45a0      	cmp	r8, r4
 800d46e:	d1f9      	bne.n	800d464 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 800d470:	f8df 9060 	ldr.w	r9, [pc, #96]	; 800d4d4 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 800d474:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800d4d8 <prvAddNewTaskToReadyList+0x10c>
 800d478:	4c0d      	ldr	r4, [pc, #52]	; (800d4b0 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 800d47a:	4648      	mov	r0, r9
 800d47c:	f7fe fd66 	bl	800bf4c <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800d480:	4640      	mov	r0, r8
 800d482:	f7fe fd63 	bl	800bf4c <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800d486:	480e      	ldr	r0, [pc, #56]	; (800d4c0 <prvAddNewTaskToReadyList+0xf4>)
 800d488:	f7fe fd60 	bl	800bf4c <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800d48c:	480d      	ldr	r0, [pc, #52]	; (800d4c4 <prvAddNewTaskToReadyList+0xf8>)
 800d48e:	f7fe fd5d 	bl	800bf4c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800d492:	480d      	ldr	r0, [pc, #52]	; (800d4c8 <prvAddNewTaskToReadyList+0xfc>)
 800d494:	f7fe fd5a 	bl	800bf4c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800d498:	4b0c      	ldr	r3, [pc, #48]	; (800d4cc <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 800d49a:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 800d49c:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800d4a0:	4b0b      	ldr	r3, [pc, #44]	; (800d4d0 <prvAddNewTaskToReadyList+0x104>)
 800d4a2:	f8c3 8000 	str.w	r8, [r3]
}
 800d4a6:	e7a3      	b.n	800d3f0 <prvAddNewTaskToReadyList+0x24>
 800d4a8:	200135f4 	.word	0x200135f4
 800d4ac:	20013188 	.word	0x20013188
 800d4b0:	20013650 	.word	0x20013650
 800d4b4:	20013194 	.word	0x20013194
 800d4b8:	20013600 	.word	0x20013600
 800d4bc:	20013604 	.word	0x20013604
 800d4c0:	2001363c 	.word	0x2001363c
 800d4c4:	20013668 	.word	0x20013668
 800d4c8:	20013654 	.word	0x20013654
 800d4cc:	2001318c 	.word	0x2001318c
 800d4d0:	20013190 	.word	0x20013190
 800d4d4:	20013608 	.word	0x20013608
 800d4d8:	2001361c 	.word	0x2001361c

0800d4dc <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800d4dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d4e0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800d4e2:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800d4e6:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800d4ea:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800d4ec:	4606      	mov	r6, r0
 800d4ee:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800d4f0:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800d4f2:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800d4f4:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800d4f6:	f01a f9d8 	bl	80278aa <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800d4fa:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800d4fc:	f1a9 0904 	sub.w	r9, r9, #4
 800d500:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800d502:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 800d506:	2d00      	cmp	r5, #0
 800d508:	d079      	beq.n	800d5fe <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d50a:	782b      	ldrb	r3, [r5, #0]
 800d50c:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 800d510:	2b00      	cmp	r3, #0
 800d512:	d03b      	beq.n	800d58c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d514:	786b      	ldrb	r3, [r5, #1]
 800d516:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 800d51a:	2b00      	cmp	r3, #0
 800d51c:	d036      	beq.n	800d58c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d51e:	78ab      	ldrb	r3, [r5, #2]
 800d520:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 800d524:	b393      	cbz	r3, 800d58c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d526:	78eb      	ldrb	r3, [r5, #3]
 800d528:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 800d52c:	b373      	cbz	r3, 800d58c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d52e:	792b      	ldrb	r3, [r5, #4]
 800d530:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 800d534:	b353      	cbz	r3, 800d58c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d536:	796b      	ldrb	r3, [r5, #5]
 800d538:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 800d53c:	b333      	cbz	r3, 800d58c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d53e:	79ab      	ldrb	r3, [r5, #6]
 800d540:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 800d544:	b313      	cbz	r3, 800d58c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d546:	79eb      	ldrb	r3, [r5, #7]
 800d548:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 800d54c:	b1f3      	cbz	r3, 800d58c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d54e:	7a2b      	ldrb	r3, [r5, #8]
 800d550:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 800d554:	b1d3      	cbz	r3, 800d58c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d556:	7a6b      	ldrb	r3, [r5, #9]
 800d558:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 800d55c:	b1b3      	cbz	r3, 800d58c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d55e:	7aab      	ldrb	r3, [r5, #10]
 800d560:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 800d564:	b193      	cbz	r3, 800d58c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d566:	7aeb      	ldrb	r3, [r5, #11]
 800d568:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 800d56c:	b173      	cbz	r3, 800d58c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d56e:	7b2b      	ldrb	r3, [r5, #12]
 800d570:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 800d574:	b153      	cbz	r3, 800d58c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d576:	7b6b      	ldrb	r3, [r5, #13]
 800d578:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 800d57c:	b133      	cbz	r3, 800d58c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d57e:	7bab      	ldrb	r3, [r5, #14]
 800d580:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 800d584:	b113      	cbz	r3, 800d58c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d586:	7beb      	ldrb	r3, [r5, #15]
 800d588:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800d58c:	2300      	movs	r3, #0
 800d58e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800d592:	9d08      	ldr	r5, [sp, #32]
 800d594:	2d37      	cmp	r5, #55	; 0x37
 800d596:	bf28      	it	cs
 800d598:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800d59a:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800d59e:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800d5a0:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800d5a2:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800d5a4:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800d5a8:	f7fe fcdc 	bl	800bf64 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800d5ac:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800d5b0:	f104 0018 	add.w	r0, r4, #24
 800d5b4:	f7fe fcd6 	bl	800bf64 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800d5b8:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 800d5ba:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800d5be:	4651      	mov	r1, sl
 800d5c0:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800d5c2:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800d5c4:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800d5c6:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800d5ca:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800d5ce:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800d5d2:	f01a f96a 	bl	80278aa <memset>
 800d5d6:	4b0b      	ldr	r3, [pc, #44]	; (800d604 <prvInitialiseNewTask.constprop.0+0x128>)
 800d5d8:	65e3      	str	r3, [r4, #92]	; 0x5c
 800d5da:	f103 0568 	add.w	r5, r3, #104	; 0x68
 800d5de:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800d5e0:	463a      	mov	r2, r7
 800d5e2:	4631      	mov	r1, r6
 800d5e4:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800d5e6:	6625      	str	r5, [r4, #96]	; 0x60
 800d5e8:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800d5ea:	f7fe fd39 	bl	800c060 <pxPortInitialiseStack>
 800d5ee:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800d5f0:	f1b8 0f00 	cmp.w	r8, #0
 800d5f4:	d001      	beq.n	800d5fa <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800d5f6:	f8c8 4000 	str.w	r4, [r8]
}
 800d5fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800d5fe:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800d602:	e7c6      	b.n	800d592 <prvInitialiseNewTask.constprop.0+0xb6>
 800d604:	20014118 	.word	0x20014118

0800d608 <prvIdleTask>:
{
 800d608:	b580      	push	{r7, lr}
 800d60a:	4d23      	ldr	r5, [pc, #140]	; (800d698 <prvIdleTask+0x90>)
 800d60c:	4f23      	ldr	r7, [pc, #140]	; (800d69c <prvIdleTask+0x94>)
 800d60e:	4e24      	ldr	r6, [pc, #144]	; (800d6a0 <prvIdleTask+0x98>)
 800d610:	f8df 8090 	ldr.w	r8, [pc, #144]	; 800d6a4 <prvIdleTask+0x9c>
				taskYIELD();
 800d614:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 800d618:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800d61c:	682b      	ldr	r3, [r5, #0]
 800d61e:	b35b      	cbz	r3, 800d678 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 800d620:	f7fe fd48 	bl	800c0b4 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800d624:	68fb      	ldr	r3, [r7, #12]
 800d626:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800d628:	1d20      	adds	r0, r4, #4
 800d62a:	f7fe fcc7 	bl	800bfbc <uxListRemove>
				--uxCurrentNumberOfTasks;
 800d62e:	6833      	ldr	r3, [r6, #0]
 800d630:	3b01      	subs	r3, #1
 800d632:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 800d634:	682b      	ldr	r3, [r5, #0]
 800d636:	3b01      	subs	r3, #1
 800d638:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 800d63a:	f7fe fd5d 	bl	800c0f8 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800d63e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800d642:	f01a f97b 	bl	802793c <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800d646:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 800d64a:	b163      	cbz	r3, 800d666 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800d64c:	2b01      	cmp	r3, #1
 800d64e:	d01e      	beq.n	800d68e <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800d650:	2b02      	cmp	r3, #2
 800d652:	d0e3      	beq.n	800d61c <prvIdleTask+0x14>
 800d654:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d658:	f383 8811 	msr	BASEPRI, r3
 800d65c:	f3bf 8f6f 	isb	sy
 800d660:	f3bf 8f4f 	dsb	sy
 800d664:	e7fe      	b.n	800d664 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 800d666:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800d668:	f7fe fc0c 	bl	800be84 <vPortFree>
				vPortFree( pxTCB );
 800d66c:	4620      	mov	r0, r4
 800d66e:	f7fe fc09 	bl	800be84 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800d672:	682b      	ldr	r3, [r5, #0]
 800d674:	2b00      	cmp	r3, #0
 800d676:	d1d3      	bne.n	800d620 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800d678:	f8d8 3000 	ldr.w	r3, [r8]
 800d67c:	2b01      	cmp	r3, #1
 800d67e:	d9cd      	bls.n	800d61c <prvIdleTask+0x14>
				taskYIELD();
 800d680:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 800d684:	f3bf 8f4f 	dsb	sy
 800d688:	f3bf 8f6f 	isb	sy
 800d68c:	e7c6      	b.n	800d61c <prvIdleTask+0x14>
				vPortFree( pxTCB );
 800d68e:	4620      	mov	r0, r4
 800d690:	f7fe fbf8 	bl	800be84 <vPortFree>
 800d694:	e7c2      	b.n	800d61c <prvIdleTask+0x14>
 800d696:	bf00      	nop
 800d698:	200135f8 	.word	0x200135f8
 800d69c:	20013668 	.word	0x20013668
 800d6a0:	200135f4 	.word	0x200135f4
 800d6a4:	20013194 	.word	0x20013194

0800d6a8 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 800d6a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800d6ac:	4b47      	ldr	r3, [pc, #284]	; (800d7cc <xTaskIncrementTick.part.0+0x124>)
 800d6ae:	681e      	ldr	r6, [r3, #0]
 800d6b0:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 800d6b2:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 800d6b4:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800d6b6:	2e00      	cmp	r6, #0
 800d6b8:	d040      	beq.n	800d73c <xTaskIncrementTick.part.0+0x94>
 800d6ba:	f8df b124 	ldr.w	fp, [pc, #292]	; 800d7e0 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800d6be:	f8db 3000 	ldr.w	r3, [fp]
 800d6c2:	429e      	cmp	r6, r3
 800d6c4:	d347      	bcc.n	800d756 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800d6c6:	4f42      	ldr	r7, [pc, #264]	; (800d7d0 <xTaskIncrementTick.part.0+0x128>)
 800d6c8:	f8df 9118 	ldr.w	r9, [pc, #280]	; 800d7e4 <xTaskIncrementTick.part.0+0x13c>
 800d6cc:	683b      	ldr	r3, [r7, #0]
 800d6ce:	f8df a118 	ldr.w	sl, [pc, #280]	; 800d7e8 <xTaskIncrementTick.part.0+0x140>
 800d6d2:	681d      	ldr	r5, [r3, #0]
 800d6d4:	2d00      	cmp	r5, #0
 800d6d6:	d073      	beq.n	800d7c0 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 800d6d8:	f8df 8110 	ldr.w	r8, [pc, #272]	; 800d7ec <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 800d6dc:	2500      	movs	r5, #0
 800d6de:	e022      	b.n	800d726 <xTaskIncrementTick.part.0+0x7e>
 800d6e0:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800d6e2:	f7fe fc6b 	bl	800bfbc <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800d6e6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800d6e8:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800d6ea:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800d6ee:	b113      	cbz	r3, 800d6f6 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800d6f0:	f7fe fc64 	bl	800bfbc <uxListRemove>
 800d6f4:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800d6f6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800d6f8:	f8d8 2000 	ldr.w	r2, [r8]
 800d6fc:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800d700:	4293      	cmp	r3, r2
 800d702:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800d706:	bf88      	it	hi
 800d708:	f8c8 3000 	strhi.w	r3, [r8]
 800d70c:	f7fe fc2e 	bl	800bf6c <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800d710:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800d714:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800d716:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800d718:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800d71a:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 800d71c:	4291      	cmp	r1, r2
 800d71e:	bf28      	it	cs
 800d720:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800d722:	2b00      	cmp	r3, #0
 800d724:	d04c      	beq.n	800d7c0 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800d726:	683b      	ldr	r3, [r7, #0]
 800d728:	68db      	ldr	r3, [r3, #12]
 800d72a:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800d72c:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800d72e:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 800d730:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800d732:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 800d734:	d2d4      	bcs.n	800d6e0 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 800d736:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800d73a:	e011      	b.n	800d760 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 800d73c:	4b24      	ldr	r3, [pc, #144]	; (800d7d0 <xTaskIncrementTick.part.0+0x128>)
 800d73e:	681a      	ldr	r2, [r3, #0]
 800d740:	6812      	ldr	r2, [r2, #0]
 800d742:	b30a      	cbz	r2, 800d788 <xTaskIncrementTick.part.0+0xe0>
 800d744:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d748:	f383 8811 	msr	BASEPRI, r3
 800d74c:	f3bf 8f6f 	isb	sy
 800d750:	f3bf 8f4f 	dsb	sy
 800d754:	e7fe      	b.n	800d754 <xTaskIncrementTick.part.0+0xac>
 800d756:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800d7e4 <xTaskIncrementTick.part.0+0x13c>
 800d75a:	f8df a08c 	ldr.w	sl, [pc, #140]	; 800d7e8 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 800d75e:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800d760:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 800d764:	491b      	ldr	r1, [pc, #108]	; (800d7d4 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800d766:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d768:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800d76c:	009b      	lsls	r3, r3, #2
 800d76e:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 800d772:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 800d774:	2a02      	cmp	r2, #2
 800d776:	bf28      	it	cs
 800d778:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 800d77a:	2b00      	cmp	r3, #0
}
 800d77c:	bf0c      	ite	eq
 800d77e:	4628      	moveq	r0, r5
 800d780:	2001      	movne	r0, #1
 800d782:	b003      	add	sp, #12
 800d784:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 800d788:	4a13      	ldr	r2, [pc, #76]	; (800d7d8 <xTaskIncrementTick.part.0+0x130>)
 800d78a:	6818      	ldr	r0, [r3, #0]
 800d78c:	6811      	ldr	r1, [r2, #0]
 800d78e:	6019      	str	r1, [r3, #0]
 800d790:	4912      	ldr	r1, [pc, #72]	; (800d7dc <xTaskIncrementTick.part.0+0x134>)
 800d792:	6010      	str	r0, [r2, #0]
 800d794:	680a      	ldr	r2, [r1, #0]
 800d796:	3201      	adds	r2, #1
 800d798:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800d79a:	681a      	ldr	r2, [r3, #0]
 800d79c:	6812      	ldr	r2, [r2, #0]
 800d79e:	b932      	cbnz	r2, 800d7ae <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800d7a0:	f8df b03c 	ldr.w	fp, [pc, #60]	; 800d7e0 <xTaskIncrementTick.part.0+0x138>
 800d7a4:	f04f 33ff 	mov.w	r3, #4294967295
 800d7a8:	f8cb 3000 	str.w	r3, [fp]
 800d7ac:	e787      	b.n	800d6be <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800d7ae:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800d7b0:	f8df b02c 	ldr.w	fp, [pc, #44]	; 800d7e0 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800d7b4:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800d7b6:	68db      	ldr	r3, [r3, #12]
 800d7b8:	685b      	ldr	r3, [r3, #4]
 800d7ba:	f8cb 3000 	str.w	r3, [fp]
	}
}
 800d7be:	e77e      	b.n	800d6be <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800d7c0:	f04f 33ff 	mov.w	r3, #4294967295
 800d7c4:	f8cb 3000 	str.w	r3, [fp]
					break;
 800d7c8:	e7ca      	b.n	800d760 <xTaskIncrementTick.part.0+0xb8>
 800d7ca:	bf00      	nop
 800d7cc:	2001367c 	.word	0x2001367c
 800d7d0:	2001318c 	.word	0x2001318c
 800d7d4:	20013680 	.word	0x20013680
 800d7d8:	20013190 	.word	0x20013190
 800d7dc:	20013634 	.word	0x20013634
 800d7e0:	20013630 	.word	0x20013630
 800d7e4:	20013194 	.word	0x20013194
 800d7e8:	20013188 	.word	0x20013188
 800d7ec:	20013604 	.word	0x20013604

0800d7f0 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 800d7f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 800d7f4:	4d41      	ldr	r5, [pc, #260]	; (800d8fc <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 800d7f6:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 800d7f8:	f7fe fc5c 	bl	800c0b4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800d7fc:	682b      	ldr	r3, [r5, #0]
 800d7fe:	3b01      	subs	r3, #1
 800d800:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800d802:	682b      	ldr	r3, [r5, #0]
 800d804:	2b00      	cmp	r3, #0
 800d806:	d161      	bne.n	800d8cc <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800d808:	4b3d      	ldr	r3, [pc, #244]	; (800d900 <xTaskResumeAll.part.0+0x110>)
 800d80a:	681b      	ldr	r3, [r3, #0]
 800d80c:	2b00      	cmp	r3, #0
 800d80e:	d05d      	beq.n	800d8cc <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800d810:	4e3c      	ldr	r6, [pc, #240]	; (800d904 <xTaskResumeAll.part.0+0x114>)
 800d812:	6833      	ldr	r3, [r6, #0]
 800d814:	2b00      	cmp	r3, #0
 800d816:	d06e      	beq.n	800d8f6 <xTaskResumeAll.part.0+0x106>
 800d818:	4f3b      	ldr	r7, [pc, #236]	; (800d908 <xTaskResumeAll.part.0+0x118>)
 800d81a:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 800d918 <xTaskResumeAll.part.0+0x128>
 800d81e:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 800d91c <xTaskResumeAll.part.0+0x12c>
 800d822:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 800d920 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800d826:	68f3      	ldr	r3, [r6, #12]
 800d828:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800d82a:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800d82e:	f104 0018 	add.w	r0, r4, #24
 800d832:	f7fe fbc3 	bl	800bfbc <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800d836:	4658      	mov	r0, fp
 800d838:	f7fe fbc0 	bl	800bfbc <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800d83c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800d83e:	683a      	ldr	r2, [r7, #0]
 800d840:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800d844:	4293      	cmp	r3, r2
 800d846:	4659      	mov	r1, fp
 800d848:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800d84c:	bf88      	it	hi
 800d84e:	603b      	strhi	r3, [r7, #0]
 800d850:	f7fe fb8c 	bl	800bf6c <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800d854:	f8d8 3000 	ldr.w	r3, [r8]
 800d858:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d85a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d85c:	429a      	cmp	r2, r3
 800d85e:	d33d      	bcc.n	800d8dc <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 800d860:	2301      	movs	r3, #1
 800d862:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800d866:	6833      	ldr	r3, [r6, #0]
 800d868:	2b00      	cmp	r3, #0
 800d86a:	d1dc      	bne.n	800d826 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800d86c:	4b27      	ldr	r3, [pc, #156]	; (800d90c <xTaskResumeAll.part.0+0x11c>)
 800d86e:	681a      	ldr	r2, [r3, #0]
 800d870:	6812      	ldr	r2, [r2, #0]
 800d872:	2a00      	cmp	r2, #0
 800d874:	d03a      	beq.n	800d8ec <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800d876:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800d878:	4b25      	ldr	r3, [pc, #148]	; (800d910 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800d87a:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800d87c:	68d2      	ldr	r2, [r2, #12]
 800d87e:	6852      	ldr	r2, [r2, #4]
 800d880:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800d882:	4e24      	ldr	r6, [pc, #144]	; (800d914 <xTaskResumeAll.part.0+0x124>)
 800d884:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800d886:	b194      	cbz	r4, 800d8ae <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 800d888:	2701      	movs	r7, #1
 800d88a:	e006      	b.n	800d89a <xTaskResumeAll.part.0+0xaa>
 800d88c:	f7ff ff0c 	bl	800d6a8 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 800d890:	b108      	cbz	r0, 800d896 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 800d892:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800d896:	3c01      	subs	r4, #1
 800d898:	d008      	beq.n	800d8ac <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800d89a:	682b      	ldr	r3, [r5, #0]
 800d89c:	2b00      	cmp	r3, #0
 800d89e:	d0f5      	beq.n	800d88c <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 800d8a0:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800d8a2:	3c01      	subs	r4, #1
		++xPendedTicks;
 800d8a4:	f103 0301 	add.w	r3, r3, #1
 800d8a8:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800d8aa:	d1f6      	bne.n	800d89a <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 800d8ac:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 800d8ae:	f8da 3000 	ldr.w	r3, [sl]
 800d8b2:	b15b      	cbz	r3, 800d8cc <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 800d8b4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d8b8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d8bc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d8c0:	f3bf 8f4f 	dsb	sy
 800d8c4:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800d8c8:	2001      	movs	r0, #1
 800d8ca:	e000      	b.n	800d8ce <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 800d8cc:	2000      	movs	r0, #0
 800d8ce:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800d8d0:	f7fe fc12 	bl	800c0f8 <vPortExitCritical>
}
 800d8d4:	9801      	ldr	r0, [sp, #4]
 800d8d6:	b003      	add	sp, #12
 800d8d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800d8dc:	6833      	ldr	r3, [r6, #0]
 800d8de:	2b00      	cmp	r3, #0
 800d8e0:	d1a1      	bne.n	800d826 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800d8e2:	4b0a      	ldr	r3, [pc, #40]	; (800d90c <xTaskResumeAll.part.0+0x11c>)
 800d8e4:	681a      	ldr	r2, [r3, #0]
 800d8e6:	6812      	ldr	r2, [r2, #0]
 800d8e8:	2a00      	cmp	r2, #0
 800d8ea:	d1c4      	bne.n	800d876 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 800d8ec:	4b08      	ldr	r3, [pc, #32]	; (800d910 <xTaskResumeAll.part.0+0x120>)
 800d8ee:	f04f 32ff 	mov.w	r2, #4294967295
 800d8f2:	601a      	str	r2, [r3, #0]
 800d8f4:	e7c5      	b.n	800d882 <xTaskResumeAll.part.0+0x92>
 800d8f6:	f8df a028 	ldr.w	sl, [pc, #40]	; 800d920 <xTaskResumeAll.part.0+0x130>
 800d8fa:	e7c2      	b.n	800d882 <xTaskResumeAll.part.0+0x92>
 800d8fc:	200135fc 	.word	0x200135fc
 800d900:	200135f4 	.word	0x200135f4
 800d904:	2001363c 	.word	0x2001363c
 800d908:	20013604 	.word	0x20013604
 800d90c:	2001318c 	.word	0x2001318c
 800d910:	20013630 	.word	0x20013630
 800d914:	20013638 	.word	0x20013638
 800d918:	20013194 	.word	0x20013194
 800d91c:	20013188 	.word	0x20013188
 800d920:	20013680 	.word	0x20013680

0800d924 <xTaskCreateStatic>:
	{
 800d924:	b530      	push	{r4, r5, lr}
 800d926:	b087      	sub	sp, #28
 800d928:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800d92a:	b1c4      	cbz	r4, 800d95e <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 800d92c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800d92e:	b16d      	cbz	r5, 800d94c <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 800d930:	25ac      	movs	r5, #172	; 0xac
 800d932:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800d934:	9d05      	ldr	r5, [sp, #20]
 800d936:	2dac      	cmp	r5, #172	; 0xac
 800d938:	d01a      	beq.n	800d970 <xTaskCreateStatic+0x4c>
 800d93a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d93e:	f383 8811 	msr	BASEPRI, r3
 800d942:	f3bf 8f6f 	isb	sy
 800d946:	f3bf 8f4f 	dsb	sy
 800d94a:	e7fe      	b.n	800d94a <xTaskCreateStatic+0x26>
 800d94c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d950:	f383 8811 	msr	BASEPRI, r3
 800d954:	f3bf 8f6f 	isb	sy
 800d958:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800d95c:	e7fe      	b.n	800d95c <xTaskCreateStatic+0x38>
 800d95e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d962:	f383 8811 	msr	BASEPRI, r3
 800d966:	f3bf 8f6f 	isb	sy
 800d96a:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800d96e:	e7fe      	b.n	800d96e <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800d970:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800d972:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800d974:	2402      	movs	r4, #2
 800d976:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800d97a:	ac04      	add	r4, sp, #16
 800d97c:	e9cd 4501 	strd	r4, r5, [sp, #4]
 800d980:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800d982:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800d984:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800d986:	f7ff fda9 	bl	800d4dc <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800d98a:	980c      	ldr	r0, [sp, #48]	; 0x30
 800d98c:	f7ff fd1e 	bl	800d3cc <prvAddNewTaskToReadyList>
	}
 800d990:	9804      	ldr	r0, [sp, #16]
 800d992:	b007      	add	sp, #28
 800d994:	bd30      	pop	{r4, r5, pc}
 800d996:	bf00      	nop

0800d998 <xTaskCreate>:
	{
 800d998:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d99c:	4607      	mov	r7, r0
 800d99e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800d9a0:	0090      	lsls	r0, r2, #2
	{
 800d9a2:	4615      	mov	r5, r2
 800d9a4:	4688      	mov	r8, r1
 800d9a6:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800d9a8:	f7fe f9b0 	bl	800bd0c <pvPortMalloc>
			if( pxStack != NULL )
 800d9ac:	b1d8      	cbz	r0, 800d9e6 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800d9ae:	4604      	mov	r4, r0
 800d9b0:	20ac      	movs	r0, #172	; 0xac
 800d9b2:	f7fe f9ab 	bl	800bd0c <pvPortMalloc>
				if( pxNewTCB != NULL )
 800d9b6:	4606      	mov	r6, r0
 800d9b8:	b1d0      	cbz	r0, 800d9f0 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 800d9ba:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800d9bc:	2400      	movs	r4, #0
 800d9be:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800d9c2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800d9c4:	9401      	str	r4, [sp, #4]
 800d9c6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800d9c8:	9602      	str	r6, [sp, #8]
 800d9ca:	464b      	mov	r3, r9
 800d9cc:	462a      	mov	r2, r5
 800d9ce:	4641      	mov	r1, r8
 800d9d0:	4638      	mov	r0, r7
 800d9d2:	9400      	str	r4, [sp, #0]
 800d9d4:	f7ff fd82 	bl	800d4dc <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800d9d8:	4630      	mov	r0, r6
 800d9da:	f7ff fcf7 	bl	800d3cc <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800d9de:	2001      	movs	r0, #1
	}
 800d9e0:	b005      	add	sp, #20
 800d9e2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800d9e6:	f04f 30ff 	mov.w	r0, #4294967295
	}
 800d9ea:	b005      	add	sp, #20
 800d9ec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800d9f0:	4620      	mov	r0, r4
 800d9f2:	f7fe fa47 	bl	800be84 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800d9f6:	f04f 30ff 	mov.w	r0, #4294967295
 800d9fa:	e7f1      	b.n	800d9e0 <xTaskCreate+0x48>

0800d9fc <vTaskDelay>:
	{
 800d9fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800d9fe:	b950      	cbnz	r0, 800da16 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800da00:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800da04:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800da08:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800da0c:	f3bf 8f4f 	dsb	sy
 800da10:	f3bf 8f6f 	isb	sy
	}
 800da14:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800da16:	4d1e      	ldr	r5, [pc, #120]	; (800da90 <vTaskDelay+0x94>)
 800da18:	682b      	ldr	r3, [r5, #0]
 800da1a:	b143      	cbz	r3, 800da2e <vTaskDelay+0x32>
 800da1c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da20:	f383 8811 	msr	BASEPRI, r3
 800da24:	f3bf 8f6f 	isb	sy
 800da28:	f3bf 8f4f 	dsb	sy
 800da2c:	e7fe      	b.n	800da2c <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 800da2e:	682b      	ldr	r3, [r5, #0]
 800da30:	3301      	adds	r3, #1
 800da32:	4604      	mov	r4, r0
 800da34:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800da36:	4b17      	ldr	r3, [pc, #92]	; (800da94 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800da38:	4e17      	ldr	r6, [pc, #92]	; (800da98 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 800da3a:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800da3c:	6830      	ldr	r0, [r6, #0]
 800da3e:	3004      	adds	r0, #4
 800da40:	f7fe fabc 	bl	800bfbc <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800da44:	6833      	ldr	r3, [r6, #0]
 800da46:	19e4      	adds	r4, r4, r7
 800da48:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 800da4a:	d310      	bcc.n	800da6e <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800da4c:	4b13      	ldr	r3, [pc, #76]	; (800da9c <vTaskDelay+0xa0>)
 800da4e:	6818      	ldr	r0, [r3, #0]
 800da50:	6831      	ldr	r1, [r6, #0]
 800da52:	3104      	adds	r1, #4
 800da54:	f7fe fa9a 	bl	800bf8c <vListInsert>
	configASSERT( uxSchedulerSuspended );
 800da58:	682b      	ldr	r3, [r5, #0]
 800da5a:	b9a3      	cbnz	r3, 800da86 <vTaskDelay+0x8a>
 800da5c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da60:	f383 8811 	msr	BASEPRI, r3
 800da64:	f3bf 8f6f 	isb	sy
 800da68:	f3bf 8f4f 	dsb	sy
 800da6c:	e7fe      	b.n	800da6c <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800da6e:	4b0c      	ldr	r3, [pc, #48]	; (800daa0 <vTaskDelay+0xa4>)
 800da70:	6818      	ldr	r0, [r3, #0]
 800da72:	6831      	ldr	r1, [r6, #0]
 800da74:	3104      	adds	r1, #4
 800da76:	f7fe fa89 	bl	800bf8c <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 800da7a:	4b0a      	ldr	r3, [pc, #40]	; (800daa4 <vTaskDelay+0xa8>)
 800da7c:	681a      	ldr	r2, [r3, #0]
 800da7e:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 800da80:	bf38      	it	cc
 800da82:	601c      	strcc	r4, [r3, #0]
 800da84:	e7e8      	b.n	800da58 <vTaskDelay+0x5c>
 800da86:	f7ff feb3 	bl	800d7f0 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 800da8a:	2800      	cmp	r0, #0
 800da8c:	d0b8      	beq.n	800da00 <vTaskDelay+0x4>
	}
 800da8e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800da90:	200135fc 	.word	0x200135fc
 800da94:	2001367c 	.word	0x2001367c
 800da98:	20013188 	.word	0x20013188
 800da9c:	20013190 	.word	0x20013190
 800daa0:	2001318c 	.word	0x2001318c
 800daa4:	20013630 	.word	0x20013630

0800daa8 <vTaskStartScheduler>:
{
 800daa8:	b530      	push	{r4, r5, lr}
 800daaa:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800daac:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800daae:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800dab0:	a906      	add	r1, sp, #24
 800dab2:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800dab4:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800dab8:	f7fe f90a 	bl	800bcd0 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800dabc:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800dac0:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 800dac2:	b1bb      	cbz	r3, 800daf4 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 800dac4:	b16d      	cbz	r5, 800dae2 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 800dac6:	21ac      	movs	r1, #172	; 0xac
 800dac8:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 800daca:	9909      	ldr	r1, [sp, #36]	; 0x24
 800dacc:	29ac      	cmp	r1, #172	; 0xac
 800dace:	d01a      	beq.n	800db06 <vTaskStartScheduler+0x5e>
 800dad0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dad4:	f383 8811 	msr	BASEPRI, r3
 800dad8:	f3bf 8f6f 	isb	sy
 800dadc:	f3bf 8f4f 	dsb	sy
 800dae0:	e7fe      	b.n	800dae0 <vTaskStartScheduler+0x38>
 800dae2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dae6:	f383 8811 	msr	BASEPRI, r3
 800daea:	f3bf 8f6f 	isb	sy
 800daee:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800daf2:	e7fe      	b.n	800daf2 <vTaskStartScheduler+0x4a>
 800daf4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800daf8:	f383 8811 	msr	BASEPRI, r3
 800dafc:	f3bf 8f6f 	isb	sy
 800db00:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800db04:	e7fe      	b.n	800db04 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800db06:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800db08:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800db0a:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800db0c:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800db10:	4623      	mov	r3, r4
 800db12:	e9cd 0501 	strd	r0, r5, [sp, #4]
 800db16:	491b      	ldr	r1, [pc, #108]	; (800db84 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800db18:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800db1a:	9400      	str	r4, [sp, #0]
 800db1c:	481a      	ldr	r0, [pc, #104]	; (800db88 <vTaskStartScheduler+0xe0>)
 800db1e:	f7ff fcdd 	bl	800d4dc <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800db22:	4628      	mov	r0, r5
 800db24:	f7ff fc52 	bl	800d3cc <prvAddNewTaskToReadyList>
		return xReturn;
 800db28:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 800db2a:	b1eb      	cbz	r3, 800db68 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 800db2c:	f000 fc6e 	bl	800e40c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800db30:	2801      	cmp	r0, #1
 800db32:	d11b      	bne.n	800db6c <vTaskStartScheduler+0xc4>
 800db34:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db38:	f383 8811 	msr	BASEPRI, r3
 800db3c:	f3bf 8f6f 	isb	sy
 800db40:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800db44:	4b11      	ldr	r3, [pc, #68]	; (800db8c <vTaskStartScheduler+0xe4>)
 800db46:	4a12      	ldr	r2, [pc, #72]	; (800db90 <vTaskStartScheduler+0xe8>)
 800db48:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800db4a:	4912      	ldr	r1, [pc, #72]	; (800db94 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800db4c:	3358      	adds	r3, #88	; 0x58
 800db4e:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 800db50:	4a11      	ldr	r2, [pc, #68]	; (800db98 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800db52:	4b12      	ldr	r3, [pc, #72]	; (800db9c <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 800db54:	f04f 35ff 	mov.w	r5, #4294967295
 800db58:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 800db5a:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800db5c:	601c      	str	r4, [r3, #0]
}
 800db5e:	b00b      	add	sp, #44	; 0x2c
 800db60:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 800db64:	f7fe bb38 	b.w	800c1d8 <xPortStartScheduler>
}
 800db68:	b00b      	add	sp, #44	; 0x2c
 800db6a:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800db6c:	3001      	adds	r0, #1
 800db6e:	d1fb      	bne.n	800db68 <vTaskStartScheduler+0xc0>
 800db70:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db74:	f383 8811 	msr	BASEPRI, r3
 800db78:	f3bf 8f6f 	isb	sy
 800db7c:	f3bf 8f4f 	dsb	sy
 800db80:	e7fe      	b.n	800db80 <vTaskStartScheduler+0xd8>
 800db82:	bf00      	nop
 800db84:	0802b060 	.word	0x0802b060
 800db88:	0800d609 	.word	0x0800d609
 800db8c:	20013188 	.word	0x20013188
 800db90:	20000160 	.word	0x20000160
 800db94:	20013630 	.word	0x20013630
 800db98:	20013650 	.word	0x20013650
 800db9c:	2001367c 	.word	0x2001367c

0800dba0 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800dba0:	4a02      	ldr	r2, [pc, #8]	; (800dbac <vTaskSuspendAll+0xc>)
 800dba2:	6813      	ldr	r3, [r2, #0]
 800dba4:	3301      	adds	r3, #1
 800dba6:	6013      	str	r3, [r2, #0]
}
 800dba8:	4770      	bx	lr
 800dbaa:	bf00      	nop
 800dbac:	200135fc 	.word	0x200135fc

0800dbb0 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 800dbb0:	4b06      	ldr	r3, [pc, #24]	; (800dbcc <xTaskResumeAll+0x1c>)
 800dbb2:	681b      	ldr	r3, [r3, #0]
 800dbb4:	b943      	cbnz	r3, 800dbc8 <xTaskResumeAll+0x18>
 800dbb6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dbba:	f383 8811 	msr	BASEPRI, r3
 800dbbe:	f3bf 8f6f 	isb	sy
 800dbc2:	f3bf 8f4f 	dsb	sy
 800dbc6:	e7fe      	b.n	800dbc6 <xTaskResumeAll+0x16>
 800dbc8:	f7ff be12 	b.w	800d7f0 <xTaskResumeAll.part.0>
 800dbcc:	200135fc 	.word	0x200135fc

0800dbd0 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800dbd0:	4b01      	ldr	r3, [pc, #4]	; (800dbd8 <xTaskGetTickCount+0x8>)
 800dbd2:	6818      	ldr	r0, [r3, #0]
}
 800dbd4:	4770      	bx	lr
 800dbd6:	bf00      	nop
 800dbd8:	2001367c 	.word	0x2001367c

0800dbdc <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800dbdc:	4b05      	ldr	r3, [pc, #20]	; (800dbf4 <xTaskIncrementTick+0x18>)
 800dbde:	681b      	ldr	r3, [r3, #0]
 800dbe0:	b90b      	cbnz	r3, 800dbe6 <xTaskIncrementTick+0xa>
 800dbe2:	f7ff bd61 	b.w	800d6a8 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 800dbe6:	4a04      	ldr	r2, [pc, #16]	; (800dbf8 <xTaskIncrementTick+0x1c>)
 800dbe8:	6813      	ldr	r3, [r2, #0]
 800dbea:	3301      	adds	r3, #1
}
 800dbec:	2000      	movs	r0, #0
		++xPendedTicks;
 800dbee:	6013      	str	r3, [r2, #0]
}
 800dbf0:	4770      	bx	lr
 800dbf2:	bf00      	nop
 800dbf4:	200135fc 	.word	0x200135fc
 800dbf8:	20013638 	.word	0x20013638

0800dbfc <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800dbfc:	4b1f      	ldr	r3, [pc, #124]	; (800dc7c <vTaskSwitchContext+0x80>)
 800dbfe:	681b      	ldr	r3, [r3, #0]
 800dc00:	b11b      	cbz	r3, 800dc0a <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 800dc02:	4b1f      	ldr	r3, [pc, #124]	; (800dc80 <vTaskSwitchContext+0x84>)
 800dc04:	2201      	movs	r2, #1
 800dc06:	601a      	str	r2, [r3, #0]
 800dc08:	4770      	bx	lr
		xYieldPending = pdFALSE;
 800dc0a:	4a1d      	ldr	r2, [pc, #116]	; (800dc80 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800dc0c:	491d      	ldr	r1, [pc, #116]	; (800dc84 <vTaskSwitchContext+0x88>)
{
 800dc0e:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800dc10:	4c1d      	ldr	r4, [pc, #116]	; (800dc88 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 800dc12:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800dc14:	6823      	ldr	r3, [r4, #0]
 800dc16:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800dc1a:	0092      	lsls	r2, r2, #2
 800dc1c:	0098      	lsls	r0, r3, #2
 800dc1e:	588a      	ldr	r2, [r1, r2]
 800dc20:	b942      	cbnz	r2, 800dc34 <vTaskSwitchContext+0x38>
 800dc22:	b313      	cbz	r3, 800dc6a <vTaskSwitchContext+0x6e>
 800dc24:	3b01      	subs	r3, #1
 800dc26:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800dc2a:	0098      	lsls	r0, r3, #2
 800dc2c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800dc30:	2a00      	cmp	r2, #0
 800dc32:	d0f6      	beq.n	800dc22 <vTaskSwitchContext+0x26>
 800dc34:	4418      	add	r0, r3
 800dc36:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 800dc3a:	4662      	mov	r2, ip
 800dc3c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800dc40:	6849      	ldr	r1, [r1, #4]
 800dc42:	f8cc 1004 	str.w	r1, [ip, #4]
 800dc46:	3208      	adds	r2, #8
 800dc48:	4291      	cmp	r1, r2
 800dc4a:	bf08      	it	eq
 800dc4c:	6849      	ldreq	r1, [r1, #4]
 800dc4e:	4a0f      	ldr	r2, [pc, #60]	; (800dc8c <vTaskSwitchContext+0x90>)
 800dc50:	bf08      	it	eq
 800dc52:	f8cc 1004 	streq.w	r1, [ip, #4]
 800dc56:	68c9      	ldr	r1, [r1, #12]
 800dc58:	6011      	str	r1, [r2, #0]
 800dc5a:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800dc5c:	6813      	ldr	r3, [r2, #0]
 800dc5e:	4a0c      	ldr	r2, [pc, #48]	; (800dc90 <vTaskSwitchContext+0x94>)
}
 800dc60:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800dc64:	3358      	adds	r3, #88	; 0x58
 800dc66:	6013      	str	r3, [r2, #0]
}
 800dc68:	4770      	bx	lr
 800dc6a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc6e:	f383 8811 	msr	BASEPRI, r3
 800dc72:	f3bf 8f6f 	isb	sy
 800dc76:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800dc7a:	e7fe      	b.n	800dc7a <vTaskSwitchContext+0x7e>
 800dc7c:	200135fc 	.word	0x200135fc
 800dc80:	20013680 	.word	0x20013680
 800dc84:	20013194 	.word	0x20013194
 800dc88:	20013604 	.word	0x20013604
 800dc8c:	20013188 	.word	0x20013188
 800dc90:	20000160 	.word	0x20000160

0800dc94 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 800dc94:	b1d0      	cbz	r0, 800dccc <vTaskPlaceOnEventList+0x38>
{
 800dc96:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800dc98:	4d1a      	ldr	r5, [pc, #104]	; (800dd04 <vTaskPlaceOnEventList+0x70>)
 800dc9a:	460c      	mov	r4, r1
 800dc9c:	6829      	ldr	r1, [r5, #0]
 800dc9e:	3118      	adds	r1, #24
 800dca0:	f7fe f974 	bl	800bf8c <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800dca4:	4b18      	ldr	r3, [pc, #96]	; (800dd08 <vTaskPlaceOnEventList+0x74>)
 800dca6:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800dca8:	6828      	ldr	r0, [r5, #0]
 800dcaa:	3004      	adds	r0, #4
 800dcac:	f7fe f986 	bl	800bfbc <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800dcb0:	1c63      	adds	r3, r4, #1
 800dcb2:	d014      	beq.n	800dcde <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800dcb4:	682b      	ldr	r3, [r5, #0]
 800dcb6:	19a4      	adds	r4, r4, r6
 800dcb8:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800dcba:	d317      	bcc.n	800dcec <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800dcbc:	4b13      	ldr	r3, [pc, #76]	; (800dd0c <vTaskPlaceOnEventList+0x78>)
 800dcbe:	6818      	ldr	r0, [r3, #0]
 800dcc0:	6829      	ldr	r1, [r5, #0]
}
 800dcc2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800dcc6:	3104      	adds	r1, #4
 800dcc8:	f7fe b960 	b.w	800bf8c <vListInsert>
 800dccc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dcd0:	f383 8811 	msr	BASEPRI, r3
 800dcd4:	f3bf 8f6f 	isb	sy
 800dcd8:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 800dcdc:	e7fe      	b.n	800dcdc <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800dcde:	6829      	ldr	r1, [r5, #0]
 800dce0:	480b      	ldr	r0, [pc, #44]	; (800dd10 <vTaskPlaceOnEventList+0x7c>)
}
 800dce2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800dce6:	3104      	adds	r1, #4
 800dce8:	f7fe b940 	b.w	800bf6c <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800dcec:	4b09      	ldr	r3, [pc, #36]	; (800dd14 <vTaskPlaceOnEventList+0x80>)
 800dcee:	6818      	ldr	r0, [r3, #0]
 800dcf0:	6829      	ldr	r1, [r5, #0]
 800dcf2:	3104      	adds	r1, #4
 800dcf4:	f7fe f94a 	bl	800bf8c <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800dcf8:	4b07      	ldr	r3, [pc, #28]	; (800dd18 <vTaskPlaceOnEventList+0x84>)
 800dcfa:	681a      	ldr	r2, [r3, #0]
 800dcfc:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800dcfe:	bf38      	it	cc
 800dd00:	601c      	strcc	r4, [r3, #0]
}
 800dd02:	bd70      	pop	{r4, r5, r6, pc}
 800dd04:	20013188 	.word	0x20013188
 800dd08:	2001367c 	.word	0x2001367c
 800dd0c:	20013190 	.word	0x20013190
 800dd10:	20013654 	.word	0x20013654
 800dd14:	2001318c 	.word	0x2001318c
 800dd18:	20013630 	.word	0x20013630

0800dd1c <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 800dd1c:	b330      	cbz	r0, 800dd6c <vTaskPlaceOnEventListRestricted+0x50>
	{
 800dd1e:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800dd20:	4e1d      	ldr	r6, [pc, #116]	; (800dd98 <vTaskPlaceOnEventListRestricted+0x7c>)
 800dd22:	460c      	mov	r4, r1
 800dd24:	6831      	ldr	r1, [r6, #0]
 800dd26:	4615      	mov	r5, r2
 800dd28:	3118      	adds	r1, #24
 800dd2a:	f7fe f91f 	bl	800bf6c <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 800dd2e:	4b1b      	ldr	r3, [pc, #108]	; (800dd9c <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 800dd30:	b985      	cbnz	r5, 800dd54 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 800dd32:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800dd34:	6830      	ldr	r0, [r6, #0]
 800dd36:	3004      	adds	r0, #4
 800dd38:	f7fe f940 	bl	800bfbc <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800dd3c:	6833      	ldr	r3, [r6, #0]
 800dd3e:	1964      	adds	r4, r4, r5
 800dd40:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800dd42:	d31c      	bcc.n	800dd7e <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800dd44:	4b16      	ldr	r3, [pc, #88]	; (800dda0 <vTaskPlaceOnEventListRestricted+0x84>)
 800dd46:	6818      	ldr	r0, [r3, #0]
 800dd48:	6831      	ldr	r1, [r6, #0]
	}
 800dd4a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800dd4e:	3104      	adds	r1, #4
 800dd50:	f7fe b91c 	b.w	800bf8c <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800dd54:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800dd56:	6830      	ldr	r0, [r6, #0]
 800dd58:	3004      	adds	r0, #4
 800dd5a:	f7fe f92f 	bl	800bfbc <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800dd5e:	6831      	ldr	r1, [r6, #0]
 800dd60:	4810      	ldr	r0, [pc, #64]	; (800dda4 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 800dd62:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800dd66:	3104      	adds	r1, #4
 800dd68:	f7fe b900 	b.w	800bf6c <vListInsertEnd>
 800dd6c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd70:	f383 8811 	msr	BASEPRI, r3
 800dd74:	f3bf 8f6f 	isb	sy
 800dd78:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 800dd7c:	e7fe      	b.n	800dd7c <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800dd7e:	4b0a      	ldr	r3, [pc, #40]	; (800dda8 <vTaskPlaceOnEventListRestricted+0x8c>)
 800dd80:	6818      	ldr	r0, [r3, #0]
 800dd82:	6831      	ldr	r1, [r6, #0]
 800dd84:	3104      	adds	r1, #4
 800dd86:	f7fe f901 	bl	800bf8c <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800dd8a:	4b08      	ldr	r3, [pc, #32]	; (800ddac <vTaskPlaceOnEventListRestricted+0x90>)
 800dd8c:	681a      	ldr	r2, [r3, #0]
 800dd8e:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800dd90:	bf38      	it	cc
 800dd92:	601c      	strcc	r4, [r3, #0]
	}
 800dd94:	bd70      	pop	{r4, r5, r6, pc}
 800dd96:	bf00      	nop
 800dd98:	20013188 	.word	0x20013188
 800dd9c:	2001367c 	.word	0x2001367c
 800dda0:	20013190 	.word	0x20013190
 800dda4:	20013654 	.word	0x20013654
 800dda8:	2001318c 	.word	0x2001318c
 800ddac:	20013630 	.word	0x20013630

0800ddb0 <xTaskRemoveFromEventList>:
{
 800ddb0:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ddb2:	68c3      	ldr	r3, [r0, #12]
 800ddb4:	68dc      	ldr	r4, [r3, #12]
{
 800ddb6:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 800ddb8:	2c00      	cmp	r4, #0
 800ddba:	d02b      	beq.n	800de14 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800ddbc:	f104 0518 	add.w	r5, r4, #24
 800ddc0:	4628      	mov	r0, r5
 800ddc2:	f7fe f8fb 	bl	800bfbc <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ddc6:	4b18      	ldr	r3, [pc, #96]	; (800de28 <xTaskRemoveFromEventList+0x78>)
 800ddc8:	681b      	ldr	r3, [r3, #0]
 800ddca:	b17b      	cbz	r3, 800ddec <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800ddcc:	4817      	ldr	r0, [pc, #92]	; (800de2c <xTaskRemoveFromEventList+0x7c>)
 800ddce:	4629      	mov	r1, r5
 800ddd0:	f7fe f8cc 	bl	800bf6c <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800ddd4:	4b16      	ldr	r3, [pc, #88]	; (800de30 <xTaskRemoveFromEventList+0x80>)
 800ddd6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ddd8:	681b      	ldr	r3, [r3, #0]
 800ddda:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800dddc:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800ddde:	bf85      	ittet	hi
 800dde0:	4b14      	ldrhi	r3, [pc, #80]	; (800de34 <xTaskRemoveFromEventList+0x84>)
 800dde2:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800dde4:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800dde6:	6018      	strhi	r0, [r3, #0]
}
 800dde8:	b003      	add	sp, #12
 800ddea:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800ddec:	1d21      	adds	r1, r4, #4
 800ddee:	4608      	mov	r0, r1
 800ddf0:	9101      	str	r1, [sp, #4]
 800ddf2:	f7fe f8e3 	bl	800bfbc <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800ddf6:	4a10      	ldr	r2, [pc, #64]	; (800de38 <xTaskRemoveFromEventList+0x88>)
 800ddf8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800ddfa:	6810      	ldr	r0, [r2, #0]
 800ddfc:	9901      	ldr	r1, [sp, #4]
 800ddfe:	4283      	cmp	r3, r0
 800de00:	480e      	ldr	r0, [pc, #56]	; (800de3c <xTaskRemoveFromEventList+0x8c>)
 800de02:	bf88      	it	hi
 800de04:	6013      	strhi	r3, [r2, #0]
 800de06:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800de0a:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800de0e:	f7fe f8ad 	bl	800bf6c <vListInsertEnd>
 800de12:	e7df      	b.n	800ddd4 <xTaskRemoveFromEventList+0x24>
 800de14:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de18:	f383 8811 	msr	BASEPRI, r3
 800de1c:	f3bf 8f6f 	isb	sy
 800de20:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 800de24:	e7fe      	b.n	800de24 <xTaskRemoveFromEventList+0x74>
 800de26:	bf00      	nop
 800de28:	200135fc 	.word	0x200135fc
 800de2c:	2001363c 	.word	0x2001363c
 800de30:	20013188 	.word	0x20013188
 800de34:	20013680 	.word	0x20013680
 800de38:	20013604 	.word	0x20013604
 800de3c:	20013194 	.word	0x20013194

0800de40 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800de40:	4a03      	ldr	r2, [pc, #12]	; (800de50 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 800de42:	4b04      	ldr	r3, [pc, #16]	; (800de54 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800de44:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800de46:	681b      	ldr	r3, [r3, #0]
 800de48:	e9c0 2300 	strd	r2, r3, [r0]
}
 800de4c:	4770      	bx	lr
 800de4e:	bf00      	nop
 800de50:	20013634 	.word	0x20013634
 800de54:	2001367c 	.word	0x2001367c

0800de58 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 800de58:	b328      	cbz	r0, 800dea6 <xTaskCheckForTimeOut+0x4e>
{
 800de5a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800de5c:	460d      	mov	r5, r1
 800de5e:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 800de60:	b1c1      	cbz	r1, 800de94 <xTaskCheckForTimeOut+0x3c>
 800de62:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800de64:	f7fe f926 	bl	800c0b4 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 800de68:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 800de6a:	4a1d      	ldr	r2, [pc, #116]	; (800dee0 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 800de6c:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 800de6e:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800de70:	d030      	beq.n	800ded4 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800de72:	f8df c070 	ldr.w	ip, [pc, #112]	; 800dee4 <xTaskCheckForTimeOut+0x8c>
 800de76:	e9d4 6000 	ldrd	r6, r0, [r4]
 800de7a:	f8dc 7000 	ldr.w	r7, [ip]
 800de7e:	42be      	cmp	r6, r7
 800de80:	d01a      	beq.n	800deb8 <xTaskCheckForTimeOut+0x60>
 800de82:	4288      	cmp	r0, r1
 800de84:	d818      	bhi.n	800deb8 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 800de86:	2001      	movs	r0, #1
 800de88:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800de8a:	f7fe f935 	bl	800c0f8 <vPortExitCritical>
}
 800de8e:	9801      	ldr	r0, [sp, #4]
 800de90:	b003      	add	sp, #12
 800de92:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800de94:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de98:	f383 8811 	msr	BASEPRI, r3
 800de9c:	f3bf 8f6f 	isb	sy
 800dea0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 800dea4:	e7fe      	b.n	800dea4 <xTaskCheckForTimeOut+0x4c>
 800dea6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800deaa:	f383 8811 	msr	BASEPRI, r3
 800deae:	f3bf 8f6f 	isb	sy
 800deb2:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 800deb6:	e7fe      	b.n	800deb6 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800deb8:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800debc:	4573      	cmp	r3, lr
 800debe:	d90b      	bls.n	800ded8 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 800dec0:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800dec2:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800dec6:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 800dec8:	4403      	add	r3, r0
 800deca:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 800decc:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 800dece:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 800ded2:	e7d9      	b.n	800de88 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 800ded4:	2000      	movs	r0, #0
 800ded6:	e7d7      	b.n	800de88 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 800ded8:	2300      	movs	r3, #0
 800deda:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 800dedc:	2001      	movs	r0, #1
 800dede:	e7d3      	b.n	800de88 <xTaskCheckForTimeOut+0x30>
 800dee0:	2001367c 	.word	0x2001367c
 800dee4:	20013634 	.word	0x20013634

0800dee8 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800dee8:	4b01      	ldr	r3, [pc, #4]	; (800def0 <vTaskMissedYield+0x8>)
 800deea:	2201      	movs	r2, #1
 800deec:	601a      	str	r2, [r3, #0]
}
 800deee:	4770      	bx	lr
 800def0:	20013680 	.word	0x20013680

0800def4 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800def4:	4b05      	ldr	r3, [pc, #20]	; (800df0c <xTaskGetSchedulerState+0x18>)
 800def6:	681b      	ldr	r3, [r3, #0]
 800def8:	b133      	cbz	r3, 800df08 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800defa:	4b05      	ldr	r3, [pc, #20]	; (800df10 <xTaskGetSchedulerState+0x1c>)
 800defc:	6818      	ldr	r0, [r3, #0]
 800defe:	fab0 f080 	clz	r0, r0
 800df02:	0940      	lsrs	r0, r0, #5
 800df04:	0040      	lsls	r0, r0, #1
 800df06:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800df08:	2001      	movs	r0, #1
	}
 800df0a:	4770      	bx	lr
 800df0c:	20013650 	.word	0x20013650
 800df10:	200135fc 	.word	0x200135fc

0800df14 <xTaskPriorityInherit>:
	{
 800df14:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800df16:	4604      	mov	r4, r0
	{
 800df18:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 800df1a:	b1c8      	cbz	r0, 800df50 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800df1c:	4d1d      	ldr	r5, [pc, #116]	; (800df94 <xTaskPriorityInherit+0x80>)
 800df1e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800df20:	682a      	ldr	r2, [r5, #0]
 800df22:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800df24:	4293      	cmp	r3, r2
 800df26:	d215      	bcs.n	800df54 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800df28:	6982      	ldr	r2, [r0, #24]
 800df2a:	2a00      	cmp	r2, #0
 800df2c:	db04      	blt.n	800df38 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800df2e:	682a      	ldr	r2, [r5, #0]
 800df30:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800df32:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 800df36:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800df38:	4e17      	ldr	r6, [pc, #92]	; (800df98 <xTaskPriorityInherit+0x84>)
 800df3a:	6962      	ldr	r2, [r4, #20]
 800df3c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800df40:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800df44:	429a      	cmp	r2, r3
 800df46:	d00e      	beq.n	800df66 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800df48:	682b      	ldr	r3, [r5, #0]
 800df4a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800df4c:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 800df4e:	2001      	movs	r0, #1
	}
 800df50:	b002      	add	sp, #8
 800df52:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800df54:	682b      	ldr	r3, [r5, #0]
 800df56:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800df58:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800df5a:	4298      	cmp	r0, r3
 800df5c:	bf2c      	ite	cs
 800df5e:	2000      	movcs	r0, #0
 800df60:	2001      	movcc	r0, #1
	}
 800df62:	b002      	add	sp, #8
 800df64:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800df66:	1d21      	adds	r1, r4, #4
 800df68:	4608      	mov	r0, r1
 800df6a:	9101      	str	r1, [sp, #4]
 800df6c:	f7fe f826 	bl	800bfbc <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800df70:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800df72:	4b0a      	ldr	r3, [pc, #40]	; (800df9c <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800df74:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800df76:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800df78:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800df7a:	4290      	cmp	r0, r2
 800df7c:	bf88      	it	hi
 800df7e:	6018      	strhi	r0, [r3, #0]
 800df80:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800df84:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 800df88:	9901      	ldr	r1, [sp, #4]
 800df8a:	f7fd ffef 	bl	800bf6c <vListInsertEnd>
				xReturn = pdTRUE;
 800df8e:	2001      	movs	r0, #1
 800df90:	e7de      	b.n	800df50 <xTaskPriorityInherit+0x3c>
 800df92:	bf00      	nop
 800df94:	20013188 	.word	0x20013188
 800df98:	20013194 	.word	0x20013194
 800df9c:	20013604 	.word	0x20013604

0800dfa0 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 800dfa0:	b318      	cbz	r0, 800dfea <xTaskPriorityDisinherit+0x4a>
	{
 800dfa2:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 800dfa4:	4b1e      	ldr	r3, [pc, #120]	; (800e020 <xTaskPriorityDisinherit+0x80>)
 800dfa6:	681c      	ldr	r4, [r3, #0]
 800dfa8:	4284      	cmp	r4, r0
	{
 800dfaa:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 800dfac:	d008      	beq.n	800dfc0 <xTaskPriorityDisinherit+0x20>
 800dfae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dfb2:	f383 8811 	msr	BASEPRI, r3
 800dfb6:	f3bf 8f6f 	isb	sy
 800dfba:	f3bf 8f4f 	dsb	sy
 800dfbe:	e7fe      	b.n	800dfbe <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 800dfc0:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800dfc2:	b14b      	cbz	r3, 800dfd8 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800dfc4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800dfc6:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800dfc8:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800dfca:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800dfcc:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800dfce:	d000      	beq.n	800dfd2 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800dfd0:	b16b      	cbz	r3, 800dfee <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 800dfd2:	2000      	movs	r0, #0
	}
 800dfd4:	b002      	add	sp, #8
 800dfd6:	bd10      	pop	{r4, pc}
 800dfd8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dfdc:	f383 8811 	msr	BASEPRI, r3
 800dfe0:	f3bf 8f6f 	isb	sy
 800dfe4:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800dfe8:	e7fe      	b.n	800dfe8 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 800dfea:	2000      	movs	r0, #0
	}
 800dfec:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800dfee:	1d21      	adds	r1, r4, #4
 800dff0:	4608      	mov	r0, r1
 800dff2:	9101      	str	r1, [sp, #4]
 800dff4:	f7fd ffe2 	bl	800bfbc <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800dff8:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800dffa:	4a0a      	ldr	r2, [pc, #40]	; (800e024 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800dffc:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800dffe:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 800e002:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800e004:	6810      	ldr	r0, [r2, #0]
 800e006:	9901      	ldr	r1, [sp, #4]
 800e008:	4283      	cmp	r3, r0
 800e00a:	4807      	ldr	r0, [pc, #28]	; (800e028 <xTaskPriorityDisinherit+0x88>)
 800e00c:	bf88      	it	hi
 800e00e:	6013      	strhi	r3, [r2, #0]
 800e010:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800e014:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800e018:	f7fd ffa8 	bl	800bf6c <vListInsertEnd>
					xReturn = pdTRUE;
 800e01c:	2001      	movs	r0, #1
		return xReturn;
 800e01e:	e7d9      	b.n	800dfd4 <xTaskPriorityDisinherit+0x34>
 800e020:	20013188 	.word	0x20013188
 800e024:	20013604 	.word	0x20013604
 800e028:	20013194 	.word	0x20013194

0800e02c <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 800e02c:	2800      	cmp	r0, #0
 800e02e:	d041      	beq.n	800e0b4 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 800e030:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 800e032:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 800e034:	b083      	sub	sp, #12
 800e036:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 800e038:	b153      	cbz	r3, 800e050 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800e03a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 800e03c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e03e:	4281      	cmp	r1, r0
 800e040:	bf38      	it	cc
 800e042:	4601      	movcc	r1, r0
 800e044:	428a      	cmp	r2, r1
 800e046:	d001      	beq.n	800e04c <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800e048:	2b01      	cmp	r3, #1
 800e04a:	d00a      	beq.n	800e062 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 800e04c:	b003      	add	sp, #12
 800e04e:	bd30      	pop	{r4, r5, pc}
 800e050:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e054:	f383 8811 	msr	BASEPRI, r3
 800e058:	f3bf 8f6f 	isb	sy
 800e05c:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800e060:	e7fe      	b.n	800e060 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 800e062:	4b19      	ldr	r3, [pc, #100]	; (800e0c8 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 800e064:	681b      	ldr	r3, [r3, #0]
 800e066:	42a3      	cmp	r3, r4
 800e068:	d025      	beq.n	800e0b6 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800e06a:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 800e06c:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800e06e:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e070:	bfa8      	it	ge
 800e072:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800e076:	4d15      	ldr	r5, [pc, #84]	; (800e0cc <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e078:	bfa8      	it	ge
 800e07a:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800e07c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800e080:	6961      	ldr	r1, [r4, #20]
 800e082:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 800e086:	4299      	cmp	r1, r3
 800e088:	d1e0      	bne.n	800e04c <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e08a:	1d21      	adds	r1, r4, #4
 800e08c:	4608      	mov	r0, r1
 800e08e:	9101      	str	r1, [sp, #4]
 800e090:	f7fd ff94 	bl	800bfbc <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800e094:	4b0e      	ldr	r3, [pc, #56]	; (800e0d0 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 800e096:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800e098:	681a      	ldr	r2, [r3, #0]
 800e09a:	9901      	ldr	r1, [sp, #4]
 800e09c:	4290      	cmp	r0, r2
 800e09e:	bf88      	it	hi
 800e0a0:	6018      	strhi	r0, [r3, #0]
 800e0a2:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800e0a6:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 800e0aa:	b003      	add	sp, #12
 800e0ac:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800e0b0:	f7fd bf5c 	b.w	800bf6c <vListInsertEnd>
 800e0b4:	4770      	bx	lr
 800e0b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e0ba:	f383 8811 	msr	BASEPRI, r3
 800e0be:	f3bf 8f6f 	isb	sy
 800e0c2:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 800e0c6:	e7fe      	b.n	800e0c6 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 800e0c8:	20013188 	.word	0x20013188
 800e0cc:	20013194 	.word	0x20013194
 800e0d0:	20013604 	.word	0x20013604

0800e0d4 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800e0d4:	4b04      	ldr	r3, [pc, #16]	; (800e0e8 <pvTaskIncrementMutexHeldCount+0x14>)
 800e0d6:	681a      	ldr	r2, [r3, #0]
 800e0d8:	b11a      	cbz	r2, 800e0e2 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800e0da:	6819      	ldr	r1, [r3, #0]
 800e0dc:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800e0de:	3201      	adds	r2, #1
 800e0e0:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800e0e2:	6818      	ldr	r0, [r3, #0]
	}
 800e0e4:	4770      	bx	lr
 800e0e6:	bf00      	nop
 800e0e8:	20013188 	.word	0x20013188

0800e0ec <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 800e0ec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e0f0:	4e22      	ldr	r6, [pc, #136]	; (800e17c <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 800e0f2:	f8df 9090 	ldr.w	r9, [pc, #144]	; 800e184 <prvSwitchTimerLists+0x98>
{
 800e0f6:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 800e0f8:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800e0fc:	e00d      	b.n	800e11a <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800e0fe:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e100:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800e102:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800e104:	1d25      	adds	r5, r4, #4
 800e106:	4628      	mov	r0, r5
 800e108:	f7fd ff58 	bl	800bfbc <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800e10c:	6a23      	ldr	r3, [r4, #32]
 800e10e:	4620      	mov	r0, r4
 800e110:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800e112:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800e116:	075b      	lsls	r3, r3, #29
 800e118:	d40a      	bmi.n	800e130 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800e11a:	6833      	ldr	r3, [r6, #0]
 800e11c:	681a      	ldr	r2, [r3, #0]
 800e11e:	2a00      	cmp	r2, #0
 800e120:	d1ed      	bne.n	800e0fe <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 800e122:	4a17      	ldr	r2, [pc, #92]	; (800e180 <prvSwitchTimerLists+0x94>)
 800e124:	6811      	ldr	r1, [r2, #0]
 800e126:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 800e128:	6013      	str	r3, [r2, #0]
}
 800e12a:	b005      	add	sp, #20
 800e12c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800e130:	69a3      	ldr	r3, [r4, #24]
 800e132:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 800e134:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800e136:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 800e138:	d205      	bcs.n	800e146 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800e13a:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800e13c:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800e13e:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800e140:	f7fd ff24 	bl	800bf8c <vListInsert>
 800e144:	e7e9      	b.n	800e11a <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 800e146:	f8d9 3000 	ldr.w	r3, [r9]
 800e14a:	b16b      	cbz	r3, 800e168 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800e14c:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800e150:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800e152:	f7ff fecf 	bl	800def4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800e156:	2300      	movs	r3, #0
 800e158:	f8d9 0000 	ldr.w	r0, [r9]
 800e15c:	461a      	mov	r2, r3
 800e15e:	4669      	mov	r1, sp
 800e160:	f7fe fa9c 	bl	800c69c <xQueueGenericSend>
				configASSERT( xResult );
 800e164:	2800      	cmp	r0, #0
 800e166:	d1d8      	bne.n	800e11a <prvSwitchTimerLists+0x2e>
 800e168:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e16c:	f383 8811 	msr	BASEPRI, r3
 800e170:	f3bf 8f6f 	isb	sy
 800e174:	f3bf 8f4f 	dsb	sy
 800e178:	e7fe      	b.n	800e178 <prvSwitchTimerLists+0x8c>
 800e17a:	bf00      	nop
 800e17c:	20013684 	.word	0x20013684
 800e180:	20013688 	.word	0x20013688
 800e184:	200137a8 	.word	0x200137a8

0800e188 <prvTimerTask>:
{
 800e188:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e18c:	4e9b      	ldr	r6, [pc, #620]	; (800e3fc <prvTimerTask+0x274>)
 800e18e:	4d9c      	ldr	r5, [pc, #624]	; (800e400 <prvTimerTask+0x278>)
 800e190:	4c9c      	ldr	r4, [pc, #624]	; (800e404 <prvTimerTask+0x27c>)
 800e192:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 800e194:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 800e198:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800e19c:	6833      	ldr	r3, [r6, #0]
 800e19e:	681f      	ldr	r7, [r3, #0]
 800e1a0:	2f00      	cmp	r7, #0
 800e1a2:	f000 80a8 	beq.w	800e2f6 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800e1a6:	68db      	ldr	r3, [r3, #12]
 800e1a8:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 800e1aa:	f7ff fcf9 	bl	800dba0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800e1ae:	f7ff fd0f 	bl	800dbd0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800e1b2:	682a      	ldr	r2, [r5, #0]
 800e1b4:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 800e1b6:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800e1b8:	f0c0 80ae 	bcc.w	800e318 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800e1bc:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 800e1be:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800e1c0:	f240 80b4 	bls.w	800e32c <prvTimerTask+0x1a4>
 800e1c4:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800e1c6:	6820      	ldr	r0, [r4, #0]
 800e1c8:	eba7 010a 	sub.w	r1, r7, sl
 800e1cc:	f7ff f89a 	bl	800d304 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800e1d0:	f7ff fcee 	bl	800dbb0 <xTaskResumeAll>
 800e1d4:	b928      	cbnz	r0, 800e1e2 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 800e1d6:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 800e1da:	f3bf 8f4f 	dsb	sy
 800e1de:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800e1e2:	6820      	ldr	r0, [r4, #0]
 800e1e4:	2200      	movs	r2, #0
 800e1e6:	a902      	add	r1, sp, #8
 800e1e8:	f7fe fc94 	bl	800cb14 <xQueueReceive>
 800e1ec:	2800      	cmp	r0, #0
 800e1ee:	d0d5      	beq.n	800e19c <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800e1f0:	9b02      	ldr	r3, [sp, #8]
 800e1f2:	2b00      	cmp	r3, #0
 800e1f4:	db76      	blt.n	800e2e4 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800e1f6:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800e1f8:	697b      	ldr	r3, [r7, #20]
 800e1fa:	b113      	cbz	r3, 800e202 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800e1fc:	1d38      	adds	r0, r7, #4
 800e1fe:	f7fd fedd 	bl	800bfbc <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 800e202:	f7ff fce5 	bl	800dbd0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800e206:	682b      	ldr	r3, [r5, #0]
 800e208:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 800e20a:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800e20c:	f0c0 808b 	bcc.w	800e326 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 800e210:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 800e212:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 800e216:	2b09      	cmp	r3, #9
 800e218:	d8e3      	bhi.n	800e1e2 <prvTimerTask+0x5a>
 800e21a:	e8df f003 	tbb	[pc, r3]
 800e21e:	0505      	.short	0x0505
 800e220:	5a3d5305 	.word	0x5a3d5305
 800e224:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800e228:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800e22c:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800e22e:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800e230:	f043 0301 	orr.w	r3, r3, #1
 800e234:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800e238:	9b03      	ldr	r3, [sp, #12]
 800e23a:	1899      	adds	r1, r3, r2
 800e23c:	bf2c      	ite	cs
 800e23e:	2001      	movcs	r0, #1
 800e240:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 800e242:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800e244:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 800e246:	f200 808c 	bhi.w	800e362 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e24a:	ebaa 0303 	sub.w	r3, sl, r3
 800e24e:	429a      	cmp	r2, r3
 800e250:	d832      	bhi.n	800e2b8 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800e252:	6a3b      	ldr	r3, [r7, #32]
 800e254:	4638      	mov	r0, r7
 800e256:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800e258:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800e25c:	075b      	lsls	r3, r3, #29
 800e25e:	d5c0      	bpl.n	800e1e2 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 800e260:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800e262:	9903      	ldr	r1, [sp, #12]
 800e264:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 800e266:	b172      	cbz	r2, 800e286 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800e268:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800e26a:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 800e26e:	2300      	movs	r3, #0
 800e270:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800e272:	f7ff fe3f 	bl	800def4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800e276:	2300      	movs	r3, #0
 800e278:	6820      	ldr	r0, [r4, #0]
 800e27a:	461a      	mov	r2, r3
 800e27c:	a906      	add	r1, sp, #24
 800e27e:	f7fe fa0d 	bl	800c69c <xQueueGenericSend>
							configASSERT( xResult );
 800e282:	2800      	cmp	r0, #0
 800e284:	d1ad      	bne.n	800e1e2 <prvTimerTask+0x5a>
 800e286:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e28a:	f383 8811 	msr	BASEPRI, r3
 800e28e:	f3bf 8f6f 	isb	sy
 800e292:	f3bf 8f4f 	dsb	sy
 800e296:	e7fe      	b.n	800e296 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800e298:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800e29c:	f043 0301 	orr.w	r3, r3, #1
 800e2a0:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800e2a4:	9b03      	ldr	r3, [sp, #12]
 800e2a6:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800e2a8:	2b00      	cmp	r3, #0
 800e2aa:	f000 809d 	beq.w	800e3e8 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800e2ae:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 800e2b0:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800e2b2:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800e2b4:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 800e2b6:	d85e      	bhi.n	800e376 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800e2b8:	4b53      	ldr	r3, [pc, #332]	; (800e408 <prvTimerTask+0x280>)
 800e2ba:	1d39      	adds	r1, r7, #4
 800e2bc:	6818      	ldr	r0, [r3, #0]
 800e2be:	f7fd fe65 	bl	800bf8c <vListInsert>
	return xProcessTimerNow;
 800e2c2:	e78e      	b.n	800e1e2 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800e2c4:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800e2c8:	f023 0301 	bic.w	r3, r3, #1
 800e2cc:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 800e2d0:	e787      	b.n	800e1e2 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800e2d2:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800e2d6:	079a      	lsls	r2, r3, #30
 800e2d8:	d552      	bpl.n	800e380 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800e2da:	f023 0301 	bic.w	r3, r3, #1
 800e2de:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 800e2e2:	e77e      	b.n	800e1e2 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800e2e4:	9b03      	ldr	r3, [sp, #12]
 800e2e6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800e2ea:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800e2ec:	9b02      	ldr	r3, [sp, #8]
 800e2ee:	2b00      	cmp	r3, #0
 800e2f0:	f6ff af77 	blt.w	800e1e2 <prvTimerTask+0x5a>
 800e2f4:	e77f      	b.n	800e1f6 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 800e2f6:	f7ff fc53 	bl	800dba0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800e2fa:	f7ff fc69 	bl	800dbd0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800e2fe:	682a      	ldr	r2, [r5, #0]
 800e300:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 800e302:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800e304:	d808      	bhi.n	800e318 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800e306:	4b40      	ldr	r3, [pc, #256]	; (800e408 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 800e308:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800e30c:	681a      	ldr	r2, [r3, #0]
 800e30e:	6812      	ldr	r2, [r2, #0]
 800e310:	fab2 f282 	clz	r2, r2
 800e314:	0952      	lsrs	r2, r2, #5
 800e316:	e756      	b.n	800e1c6 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 800e318:	f7ff fee8 	bl	800e0ec <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 800e31c:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 800e320:	f7ff fc46 	bl	800dbb0 <xTaskResumeAll>
 800e324:	e75d      	b.n	800e1e2 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 800e326:	f7ff fee1 	bl	800e0ec <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 800e32a:	e771      	b.n	800e210 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 800e32c:	f7ff fc40 	bl	800dbb0 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e330:	6832      	ldr	r2, [r6, #0]
 800e332:	68d2      	ldr	r2, [r2, #12]
 800e334:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800e338:	f10b 0104 	add.w	r1, fp, #4
 800e33c:	4608      	mov	r0, r1
 800e33e:	9101      	str	r1, [sp, #4]
 800e340:	f7fd fe3c 	bl	800bfbc <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800e344:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 800e348:	9901      	ldr	r1, [sp, #4]
 800e34a:	f010 0f04 	tst.w	r0, #4
 800e34e:	d11b      	bne.n	800e388 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800e350:	f020 0001 	bic.w	r0, r0, #1
 800e354:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800e358:	f8db 3020 	ldr.w	r3, [fp, #32]
 800e35c:	4658      	mov	r0, fp
 800e35e:	4798      	blx	r3
}
 800e360:	e73f      	b.n	800e1e2 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800e362:	4553      	cmp	r3, sl
 800e364:	d902      	bls.n	800e36c <prvTimerTask+0x1e4>
 800e366:	2800      	cmp	r0, #0
 800e368:	f43f af73 	beq.w	800e252 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800e36c:	6830      	ldr	r0, [r6, #0]
 800e36e:	1d39      	adds	r1, r7, #4
 800e370:	f7fd fe0c 	bl	800bf8c <vListInsert>
	return xProcessTimerNow;
 800e374:	e735      	b.n	800e1e2 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800e376:	6830      	ldr	r0, [r6, #0]
 800e378:	1d39      	adds	r1, r7, #4
 800e37a:	f7fd fe07 	bl	800bf8c <vListInsert>
 800e37e:	e730      	b.n	800e1e2 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 800e380:	4638      	mov	r0, r7
 800e382:	f7fd fd7f 	bl	800be84 <vPortFree>
 800e386:	e72c      	b.n	800e1e2 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800e388:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800e38c:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800e390:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 800e392:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800e394:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 800e398:	d903      	bls.n	800e3a2 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800e39a:	6830      	ldr	r0, [r6, #0]
 800e39c:	f7fd fdf6 	bl	800bf8c <vListInsert>
	return xProcessTimerNow;
 800e3a0:	e7da      	b.n	800e358 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e3a2:	ebaa 0307 	sub.w	r3, sl, r7
 800e3a6:	429a      	cmp	r2, r3
 800e3a8:	d819      	bhi.n	800e3de <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 800e3aa:	6823      	ldr	r3, [r4, #0]
 800e3ac:	b173      	cbz	r3, 800e3cc <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 800e3ae:	2300      	movs	r3, #0
 800e3b0:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800e3b2:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800e3b4:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800e3b8:	f7ff fd9c 	bl	800def4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800e3bc:	2300      	movs	r3, #0
 800e3be:	6820      	ldr	r0, [r4, #0]
 800e3c0:	461a      	mov	r2, r3
 800e3c2:	a906      	add	r1, sp, #24
 800e3c4:	f7fe f96a 	bl	800c69c <xQueueGenericSend>
			configASSERT( xResult );
 800e3c8:	2800      	cmp	r0, #0
 800e3ca:	d1c5      	bne.n	800e358 <prvTimerTask+0x1d0>
 800e3cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e3d0:	f383 8811 	msr	BASEPRI, r3
 800e3d4:	f3bf 8f6f 	isb	sy
 800e3d8:	f3bf 8f4f 	dsb	sy
 800e3dc:	e7fe      	b.n	800e3dc <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800e3de:	4b0a      	ldr	r3, [pc, #40]	; (800e408 <prvTimerTask+0x280>)
 800e3e0:	6818      	ldr	r0, [r3, #0]
 800e3e2:	f7fd fdd3 	bl	800bf8c <vListInsert>
	return xProcessTimerNow;
 800e3e6:	e7b7      	b.n	800e358 <prvTimerTask+0x1d0>
 800e3e8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e3ec:	f383 8811 	msr	BASEPRI, r3
 800e3f0:	f3bf 8f6f 	isb	sy
 800e3f4:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800e3f8:	e7fe      	b.n	800e3f8 <prvTimerTask+0x270>
 800e3fa:	bf00      	nop
 800e3fc:	20013684 	.word	0x20013684
 800e400:	20013754 	.word	0x20013754
 800e404:	200137a8 	.word	0x200137a8
 800e408:	20013688 	.word	0x20013688

0800e40c <xTimerCreateTimerTask>:
{
 800e40c:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800e40e:	4c23      	ldr	r4, [pc, #140]	; (800e49c <xTimerCreateTimerTask+0x90>)
{
 800e410:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 800e412:	f7fd fe4f 	bl	800c0b4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800e416:	6825      	ldr	r5, [r4, #0]
 800e418:	b335      	cbz	r5, 800e468 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 800e41a:	f7fd fe6d 	bl	800c0f8 <vPortExitCritical>
	if( xTimerQueue != NULL )
 800e41e:	6823      	ldr	r3, [r4, #0]
 800e420:	b1cb      	cbz	r3, 800e456 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800e422:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800e424:	aa07      	add	r2, sp, #28
 800e426:	a906      	add	r1, sp, #24
 800e428:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800e42a:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800e42e:	f7fd fc5d 	bl	800bcec <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800e432:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 800e436:	2302      	movs	r3, #2
 800e438:	e9cd 1001 	strd	r1, r0, [sp, #4]
 800e43c:	9300      	str	r3, [sp, #0]
 800e43e:	9a07      	ldr	r2, [sp, #28]
 800e440:	4917      	ldr	r1, [pc, #92]	; (800e4a0 <xTimerCreateTimerTask+0x94>)
 800e442:	4818      	ldr	r0, [pc, #96]	; (800e4a4 <xTimerCreateTimerTask+0x98>)
 800e444:	4623      	mov	r3, r4
 800e446:	f7ff fa6d 	bl	800d924 <xTaskCreateStatic>
 800e44a:	4b17      	ldr	r3, [pc, #92]	; (800e4a8 <xTimerCreateTimerTask+0x9c>)
 800e44c:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800e44e:	b110      	cbz	r0, 800e456 <xTimerCreateTimerTask+0x4a>
}
 800e450:	2001      	movs	r0, #1
 800e452:	b009      	add	sp, #36	; 0x24
 800e454:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e456:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e45a:	f383 8811 	msr	BASEPRI, r3
 800e45e:	f3bf 8f6f 	isb	sy
 800e462:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800e466:	e7fe      	b.n	800e466 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 800e468:	4f10      	ldr	r7, [pc, #64]	; (800e4ac <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 800e46a:	4e11      	ldr	r6, [pc, #68]	; (800e4b0 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 800e46c:	4638      	mov	r0, r7
 800e46e:	f7fd fd6d 	bl	800bf4c <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800e472:	4630      	mov	r0, r6
 800e474:	f7fd fd6a 	bl	800bf4c <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800e478:	4a0e      	ldr	r2, [pc, #56]	; (800e4b4 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800e47a:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 800e47c:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800e47e:	4a0e      	ldr	r2, [pc, #56]	; (800e4b8 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800e480:	4b0e      	ldr	r3, [pc, #56]	; (800e4bc <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 800e482:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800e484:	2110      	movs	r1, #16
 800e486:	4a0e      	ldr	r2, [pc, #56]	; (800e4c0 <xTimerCreateTimerTask+0xb4>)
 800e488:	200a      	movs	r0, #10
 800e48a:	f7fd ffb1 	bl	800c3f0 <xQueueGenericCreateStatic>
 800e48e:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 800e490:	2800      	cmp	r0, #0
 800e492:	d0c2      	beq.n	800e41a <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800e494:	490b      	ldr	r1, [pc, #44]	; (800e4c4 <xTimerCreateTimerTask+0xb8>)
 800e496:	f7fe ff0d 	bl	800d2b4 <vQueueAddToRegistry>
 800e49a:	e7be      	b.n	800e41a <xTimerCreateTimerTask+0xe>
 800e49c:	200137a8 	.word	0x200137a8
 800e4a0:	0802b070 	.word	0x0802b070
 800e4a4:	0800e189 	.word	0x0800e189
 800e4a8:	200137ac 	.word	0x200137ac
 800e4ac:	2001372c 	.word	0x2001372c
 800e4b0:	20013740 	.word	0x20013740
 800e4b4:	20013684 	.word	0x20013684
 800e4b8:	20013688 	.word	0x20013688
 800e4bc:	20013758 	.word	0x20013758
 800e4c0:	2001368c 	.word	0x2001368c
 800e4c4:	0802b068 	.word	0x0802b068

0800e4c8 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800e4c8:	8880      	ldrh	r0, [r0, #4]
 800e4ca:	4770      	bx	lr

0800e4cc <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800e4cc:	b570      	push	{r4, r5, r6, lr}
 800e4ce:	6803      	ldr	r3, [r0, #0]
 800e4d0:	4605      	mov	r5, r0
 800e4d2:	460c      	mov	r4, r1
 800e4d4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e4d6:	2100      	movs	r1, #0
 800e4d8:	4798      	blx	r3
 800e4da:	682b      	ldr	r3, [r5, #0]
 800e4dc:	4606      	mov	r6, r0
 800e4de:	6a1b      	ldr	r3, [r3, #32]
 800e4e0:	4628      	mov	r0, r5
 800e4e2:	4798      	blx	r3
 800e4e4:	1ba4      	subs	r4, r4, r6
 800e4e6:	b2a4      	uxth	r4, r4
 800e4e8:	fbb4 f0f0 	udiv	r0, r4, r0
 800e4ec:	bd70      	pop	{r4, r5, r6, pc}

0800e4ee <_ZN8touchgfx17AbstractPartition5clearEv>:
 800e4ee:	2300      	movs	r3, #0
 800e4f0:	8083      	strh	r3, [r0, #4]
 800e4f2:	4770      	bx	lr

0800e4f4 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800e4f4:	b510      	push	{r4, lr}
 800e4f6:	6803      	ldr	r3, [r0, #0]
 800e4f8:	8881      	ldrh	r1, [r0, #4]
 800e4fa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e4fc:	4604      	mov	r4, r0
 800e4fe:	4798      	blx	r3
 800e500:	88a3      	ldrh	r3, [r4, #4]
 800e502:	3301      	adds	r3, #1
 800e504:	80a3      	strh	r3, [r4, #4]
 800e506:	bd10      	pop	{r4, pc}

0800e508 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800e508:	6803      	ldr	r3, [r0, #0]
 800e50a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e50c:	4718      	bx	r3

0800e50e <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800e50e:	4770      	bx	lr

0800e510 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800e510:	4a02      	ldr	r2, [pc, #8]	; (800e51c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800e512:	6002      	str	r2, [r0, #0]
 800e514:	2200      	movs	r2, #0
 800e516:	8082      	strh	r2, [r0, #4]
 800e518:	4770      	bx	lr
 800e51a:	bf00      	nop
 800e51c:	0802b080 	.word	0x0802b080

0800e520 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 800e520:	b510      	push	{r4, lr}
 800e522:	6803      	ldr	r3, [r0, #0]
 800e524:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800e528:	4604      	mov	r4, r0
 800e52a:	4798      	blx	r3
 800e52c:	b110      	cbz	r0, 800e534 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 800e52e:	4620      	mov	r0, r4
 800e530:	f7f2 fea0 	bl	8001274 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800e534:	bd10      	pop	{r4, pc}

0800e536 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 800e536:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 800e53a:	4770      	bx	lr

0800e53c <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 800e53c:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 800e540:	4770      	bx	lr

0800e542 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 800e542:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 800e546:	4770      	bx	lr

0800e548 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 800e548:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 800e54c:	4770      	bx	lr

0800e54e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 800e54e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e550:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 800e554:	461e      	mov	r6, r3
 800e556:	6803      	ldr	r3, [r0, #0]
 800e558:	460f      	mov	r7, r1
 800e55a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800e55e:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 800e562:	4604      	mov	r4, r0
 800e564:	4615      	mov	r5, r2
 800e566:	4798      	blx	r3
 800e568:	b93e      	cbnz	r6, 800e57a <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 800e56a:	1bed      	subs	r5, r5, r7
 800e56c:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 800e570:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800e574:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800e578:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e57a:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 800e57e:	e7f7      	b.n	800e570 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

0800e580 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 800e580:	b510      	push	{r4, lr}
 800e582:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800e586:	600c      	str	r4, [r1, #0]
 800e588:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800e58c:	6011      	str	r1, [r2, #0]
 800e58e:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800e592:	801a      	strh	r2, [r3, #0]
 800e594:	9b02      	ldr	r3, [sp, #8]
 800e596:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 800e59a:	801a      	strh	r2, [r3, #0]
 800e59c:	bd10      	pop	{r4, pc}

0800e59e <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 800e59e:	b510      	push	{r4, lr}
 800e5a0:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800e5a4:	600c      	str	r4, [r1, #0]
 800e5a6:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800e5aa:	6011      	str	r1, [r2, #0]
 800e5ac:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800e5b0:	801a      	strh	r2, [r3, #0]
 800e5b2:	bd10      	pop	{r4, pc}

0800e5b4 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 800e5b4:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800e5b8:	600b      	str	r3, [r1, #0]
 800e5ba:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800e5be:	6013      	str	r3, [r2, #0]
 800e5c0:	4770      	bx	lr

0800e5c2 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 800e5c2:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 800e5c6:	4770      	bx	lr

0800e5c8 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 800e5c8:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 800e5cc:	4770      	bx	lr

0800e5ce <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 800e5ce:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 800e5d2:	4770      	bx	lr

0800e5d4 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 800e5d4:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 800e5d8:	4770      	bx	lr

0800e5da <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 800e5da:	4770      	bx	lr

0800e5dc <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 800e5dc:	b510      	push	{r4, lr}
 800e5de:	21b4      	movs	r1, #180	; 0xb4
 800e5e0:	4604      	mov	r4, r0
 800e5e2:	f018 f96c 	bl	80268be <_ZdlPvj>
 800e5e6:	4620      	mov	r0, r4
 800e5e8:	bd10      	pop	{r4, pc}

0800e5ea <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 800e5ea:	b570      	push	{r4, r5, r6, lr}
 800e5ec:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 800e5f0:	428d      	cmp	r5, r1
 800e5f2:	bfb8      	it	lt
 800e5f4:	460d      	movlt	r5, r1
 800e5f6:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800e5fa:	428d      	cmp	r5, r1
 800e5fc:	4604      	mov	r4, r0
 800e5fe:	bfa8      	it	ge
 800e600:	460d      	movge	r5, r1
 800e602:	4616      	mov	r6, r2
 800e604:	b99a      	cbnz	r2, 800e62e <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 800e606:	6803      	ldr	r3, [r0, #0]
 800e608:	4629      	mov	r1, r5
 800e60a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800e60e:	4798      	blx	r3
 800e610:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800e614:	b368      	cbz	r0, 800e672 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800e616:	6803      	ldr	r3, [r0, #0]
 800e618:	68db      	ldr	r3, [r3, #12]
 800e61a:	4798      	blx	r3
 800e61c:	b348      	cbz	r0, 800e672 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800e61e:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800e622:	6803      	ldr	r3, [r0, #0]
 800e624:	4621      	mov	r1, r4
 800e626:	689b      	ldr	r3, [r3, #8]
 800e628:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e62c:	4718      	bx	r3
 800e62e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800e632:	2b00      	cmp	r3, #0
 800e634:	dd08      	ble.n	800e648 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 800e636:	f005 fbe3 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
 800e63a:	4621      	mov	r1, r4
 800e63c:	3004      	adds	r0, #4
 800e63e:	f005 fc2c 	bl	8013e9a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800e642:	2300      	movs	r3, #0
 800e644:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800e648:	6823      	ldr	r3, [r4, #0]
 800e64a:	4620      	mov	r0, r4
 800e64c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800e650:	4798      	blx	r3
 800e652:	2300      	movs	r3, #0
 800e654:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 800e658:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 800e65c:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 800e660:	f005 fbce 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
 800e664:	4621      	mov	r1, r4
 800e666:	3004      	adds	r0, #4
 800e668:	f005 fcc0 	bl	8013fec <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 800e66c:	2301      	movs	r3, #1
 800e66e:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800e672:	bd70      	pop	{r4, r5, r6, pc}

0800e674 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 800e674:	b510      	push	{r4, lr}
 800e676:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800e67a:	4299      	cmp	r1, r3
 800e67c:	bfb8      	it	lt
 800e67e:	4619      	movlt	r1, r3
 800e680:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800e684:	4299      	cmp	r1, r3
 800e686:	bfa8      	it	ge
 800e688:	4619      	movge	r1, r3
 800e68a:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 800e68e:	428b      	cmp	r3, r1
 800e690:	4604      	mov	r4, r0
 800e692:	d010      	beq.n	800e6b6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800e694:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 800e698:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 800e69c:	b158      	cbz	r0, 800e6b6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800e69e:	6803      	ldr	r3, [r0, #0]
 800e6a0:	68db      	ldr	r3, [r3, #12]
 800e6a2:	4798      	blx	r3
 800e6a4:	b138      	cbz	r0, 800e6b6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800e6a6:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 800e6aa:	6803      	ldr	r3, [r0, #0]
 800e6ac:	4621      	mov	r1, r4
 800e6ae:	689b      	ldr	r3, [r3, #8]
 800e6b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e6b4:	4718      	bx	r3
 800e6b6:	bd10      	pop	{r4, pc}

0800e6b8 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 800e6b8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e6ba:	4604      	mov	r4, r0
 800e6bc:	460d      	mov	r5, r1
 800e6be:	b1a9      	cbz	r1, 800e6ec <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 800e6c0:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 800e6c4:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 800e6c8:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 800e6cc:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 800e6d0:	ab01      	add	r3, sp, #4
 800e6d2:	1a12      	subs	r2, r2, r0
 800e6d4:	1b89      	subs	r1, r1, r6
 800e6d6:	1a38      	subs	r0, r7, r0
 800e6d8:	f006 fe48 	bl	801536c <_ZN8touchgfx6muldivElllRl>
 800e6dc:	4629      	mov	r1, r5
 800e6de:	ab01      	add	r3, sp, #4
 800e6e0:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 800e6e4:	4430      	add	r0, r6
 800e6e6:	f006 fe41 	bl	801536c <_ZN8touchgfx6muldivElllRl>
 800e6ea:	b285      	uxth	r5, r0
 800e6ec:	4628      	mov	r0, r5
 800e6ee:	b003      	add	sp, #12
 800e6f0:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e6f2 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 800e6f2:	b570      	push	{r4, r5, r6, lr}
 800e6f4:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 800e6f8:	4604      	mov	r4, r0
 800e6fa:	2b00      	cmp	r3, #0
 800e6fc:	d035      	beq.n	800e76a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800e6fe:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 800e702:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 800e706:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 800e70a:	3001      	adds	r0, #1
 800e70c:	1ad2      	subs	r2, r2, r3
 800e70e:	b212      	sxth	r2, r2
 800e710:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 800e714:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 800e718:	2100      	movs	r1, #0
 800e71a:	b280      	uxth	r0, r0
 800e71c:	47a8      	blx	r5
 800e71e:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 800e722:	6823      	ldr	r3, [r4, #0]
 800e724:	4401      	add	r1, r0
 800e726:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800e72a:	4620      	mov	r0, r4
 800e72c:	4798      	blx	r3
 800e72e:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 800e732:	429a      	cmp	r2, r3
 800e734:	db19      	blt.n	800e76a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800e736:	2500      	movs	r5, #0
 800e738:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800e73c:	f005 fb60 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
 800e740:	4621      	mov	r1, r4
 800e742:	3004      	adds	r0, #4
 800e744:	f005 fba9 	bl	8013e9a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800e748:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800e74c:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800e750:	b158      	cbz	r0, 800e76a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800e752:	6803      	ldr	r3, [r0, #0]
 800e754:	68db      	ldr	r3, [r3, #12]
 800e756:	4798      	blx	r3
 800e758:	b138      	cbz	r0, 800e76a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800e75a:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800e75e:	6803      	ldr	r3, [r0, #0]
 800e760:	4621      	mov	r1, r4
 800e762:	689b      	ldr	r3, [r3, #8]
 800e764:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e768:	4718      	bx	r3
 800e76a:	bd70      	pop	{r4, r5, r6, pc}

0800e76c <_ZN8touchgfx8DrawableC1Ev>:
 800e76c:	4a0a      	ldr	r2, [pc, #40]	; (800e798 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 800e76e:	6002      	str	r2, [r0, #0]
 800e770:	2200      	movs	r2, #0
 800e772:	8082      	strh	r2, [r0, #4]
 800e774:	80c2      	strh	r2, [r0, #6]
 800e776:	8102      	strh	r2, [r0, #8]
 800e778:	8142      	strh	r2, [r0, #10]
 800e77a:	8182      	strh	r2, [r0, #12]
 800e77c:	81c2      	strh	r2, [r0, #14]
 800e77e:	8202      	strh	r2, [r0, #16]
 800e780:	8242      	strh	r2, [r0, #18]
 800e782:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800e786:	61c2      	str	r2, [r0, #28]
 800e788:	8402      	strh	r2, [r0, #32]
 800e78a:	8442      	strh	r2, [r0, #34]	; 0x22
 800e78c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800e790:	2201      	movs	r2, #1
 800e792:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800e796:	4770      	bx	lr
 800e798:	0802b820 	.word	0x0802b820

0800e79c <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800e79c:	b570      	push	{r4, r5, r6, lr}
 800e79e:	6803      	ldr	r3, [r0, #0]
 800e7a0:	4604      	mov	r4, r0
 800e7a2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e7a4:	4615      	mov	r5, r2
 800e7a6:	4798      	blx	r3
 800e7a8:	6823      	ldr	r3, [r4, #0]
 800e7aa:	4629      	mov	r1, r5
 800e7ac:	4620      	mov	r0, r4
 800e7ae:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e7b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e7b4:	4718      	bx	r3

0800e7b6 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 800e7b6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e7ba:	4604      	mov	r4, r0
 800e7bc:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 800e7c0:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 800e7c4:	460e      	mov	r6, r1
 800e7c6:	4615      	mov	r5, r2
 800e7c8:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800e7cc:	4619      	mov	r1, r3
 800e7ce:	463a      	mov	r2, r7
 800e7d0:	3058      	adds	r0, #88	; 0x58
 800e7d2:	4698      	mov	r8, r3
 800e7d4:	f7ff ffe2 	bl	800e79c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800e7d8:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800e7dc:	4446      	add	r6, r8
 800e7de:	42b3      	cmp	r3, r6
 800e7e0:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800e7e4:	bfb8      	it	lt
 800e7e6:	8126      	strhlt	r6, [r4, #8]
 800e7e8:	443d      	add	r5, r7
 800e7ea:	42ab      	cmp	r3, r5
 800e7ec:	bfb8      	it	lt
 800e7ee:	8165      	strhlt	r5, [r4, #10]
 800e7f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e7f4 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 800e7f4:	b510      	push	{r4, lr}
 800e7f6:	4604      	mov	r4, r0
 800e7f8:	302c      	adds	r0, #44	; 0x2c
 800e7fa:	f002 fdf8 	bl	80113ee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800e7fe:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 800e802:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 800e806:	4620      	mov	r0, r4
 800e808:	f7ff ffc8 	bl	800e79c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800e80c:	bd10      	pop	{r4, pc}
	...

0800e810 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 800e810:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e812:	4604      	mov	r4, r0
 800e814:	4626      	mov	r6, r4
 800e816:	2500      	movs	r5, #0
 800e818:	f7ff ffa8 	bl	800e76c <_ZN8touchgfx8DrawableC1Ev>
 800e81c:	4b23      	ldr	r3, [pc, #140]	; (800e8ac <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 800e81e:	62a5      	str	r5, [r4, #40]	; 0x28
 800e820:	f846 3b2c 	str.w	r3, [r6], #44
 800e824:	2226      	movs	r2, #38	; 0x26
 800e826:	4629      	mov	r1, r5
 800e828:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800e82c:	4630      	mov	r0, r6
 800e82e:	f8ad 7004 	strh.w	r7, [sp, #4]
 800e832:	f019 f83a 	bl	80278aa <memset>
 800e836:	4630      	mov	r0, r6
 800e838:	f7ff ff98 	bl	800e76c <_ZN8touchgfx8DrawableC1Ev>
 800e83c:	a902      	add	r1, sp, #8
 800e83e:	4b1c      	ldr	r3, [pc, #112]	; (800e8b0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 800e840:	62e3      	str	r3, [r4, #44]	; 0x2c
 800e842:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 800e846:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800e84a:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 800e84e:	4630      	mov	r0, r6
 800e850:	f104 0758 	add.w	r7, r4, #88	; 0x58
 800e854:	f002 fdcb 	bl	80113ee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800e858:	4638      	mov	r0, r7
 800e85a:	f7ff ff87 	bl	800e76c <_ZN8touchgfx8DrawableC1Ev>
 800e85e:	4b15      	ldr	r3, [pc, #84]	; (800e8b4 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 800e860:	65a3      	str	r3, [r4, #88]	; 0x58
 800e862:	2364      	movs	r3, #100	; 0x64
 800e864:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 800e868:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 800e86c:	4b12      	ldr	r3, [pc, #72]	; (800e8b8 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 800e86e:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 800e872:	4629      	mov	r1, r5
 800e874:	4630      	mov	r0, r6
 800e876:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 800e87a:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800e87e:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 800e882:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800e886:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 800e88a:	f7f2 fc55 	bl	8001138 <_ZN8touchgfx8Drawable4setXEs>
 800e88e:	4629      	mov	r1, r5
 800e890:	4630      	mov	r0, r6
 800e892:	f7f2 fc53 	bl	800113c <_ZN8touchgfx8Drawable4setYEs>
 800e896:	4631      	mov	r1, r6
 800e898:	4620      	mov	r0, r4
 800e89a:	f000 f819 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800e89e:	4620      	mov	r0, r4
 800e8a0:	4639      	mov	r1, r7
 800e8a2:	f000 f815 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800e8a6:	4620      	mov	r0, r4
 800e8a8:	b003      	add	sp, #12
 800e8aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e8ac:	0802b0b4 	.word	0x0802b0b4
 800e8b0:	0802b6dc 	.word	0x0802b6dc
 800e8b4:	0802b188 	.word	0x0802b188
 800e8b8:	08015acb 	.word	0x08015acb

0800e8bc <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800e8bc:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800e8be:	2000      	movs	r0, #0
 800e8c0:	b12b      	cbz	r3, 800e8ce <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800e8c2:	b920      	cbnz	r0, 800e8ce <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800e8c4:	1a5a      	subs	r2, r3, r1
 800e8c6:	4250      	negs	r0, r2
 800e8c8:	4150      	adcs	r0, r2
 800e8ca:	699b      	ldr	r3, [r3, #24]
 800e8cc:	e7f8      	b.n	800e8c0 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800e8ce:	4770      	bx	lr

0800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800e8d0:	2300      	movs	r3, #0
 800e8d2:	6148      	str	r0, [r1, #20]
 800e8d4:	618b      	str	r3, [r1, #24]
 800e8d6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800e8d8:	b913      	cbnz	r3, 800e8e0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800e8da:	6281      	str	r1, [r0, #40]	; 0x28
 800e8dc:	4770      	bx	lr
 800e8de:	4613      	mov	r3, r2
 800e8e0:	699a      	ldr	r2, [r3, #24]
 800e8e2:	2a00      	cmp	r2, #0
 800e8e4:	d1fb      	bne.n	800e8de <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800e8e6:	6199      	str	r1, [r3, #24]
 800e8e8:	4770      	bx	lr

0800e8ea <_ZN8touchgfx9Container9removeAllEv>:
 800e8ea:	2200      	movs	r2, #0
 800e8ec:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800e8ee:	b123      	cbz	r3, 800e8fa <_ZN8touchgfx9Container9removeAllEv+0x10>
 800e8f0:	6999      	ldr	r1, [r3, #24]
 800e8f2:	6281      	str	r1, [r0, #40]	; 0x28
 800e8f4:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800e8f8:	e7f8      	b.n	800e8ec <_ZN8touchgfx9Container9removeAllEv+0x2>
 800e8fa:	4770      	bx	lr

0800e8fc <_ZN8touchgfx9Container6unlinkEv>:
 800e8fc:	2300      	movs	r3, #0
 800e8fe:	6283      	str	r3, [r0, #40]	; 0x28
 800e900:	4770      	bx	lr

0800e902 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800e902:	2200      	movs	r2, #0
 800e904:	8002      	strh	r2, [r0, #0]
 800e906:	8042      	strh	r2, [r0, #2]
 800e908:	8082      	strh	r2, [r0, #4]
 800e90a:	80c2      	strh	r2, [r0, #6]
 800e90c:	4770      	bx	lr

0800e90e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800e90e:	b570      	push	{r4, r5, r6, lr}
 800e910:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800e912:	460d      	mov	r5, r1
 800e914:	4616      	mov	r6, r2
 800e916:	b13c      	cbz	r4, 800e928 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800e918:	6823      	ldr	r3, [r4, #0]
 800e91a:	4620      	mov	r0, r4
 800e91c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800e91e:	4632      	mov	r2, r6
 800e920:	4629      	mov	r1, r5
 800e922:	4798      	blx	r3
 800e924:	69a4      	ldr	r4, [r4, #24]
 800e926:	e7f6      	b.n	800e916 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800e928:	bd70      	pop	{r4, r5, r6, pc}

0800e92a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800e92a:	b538      	push	{r3, r4, r5, lr}
 800e92c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800e92e:	460d      	mov	r5, r1
 800e930:	b134      	cbz	r4, 800e940 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800e932:	682b      	ldr	r3, [r5, #0]
 800e934:	4621      	mov	r1, r4
 800e936:	689b      	ldr	r3, [r3, #8]
 800e938:	4628      	mov	r0, r5
 800e93a:	4798      	blx	r3
 800e93c:	69a4      	ldr	r4, [r4, #24]
 800e93e:	e7f7      	b.n	800e930 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800e940:	bd38      	pop	{r3, r4, r5, pc}

0800e942 <_ZN8touchgfx9ContainerD1Ev>:
 800e942:	4770      	bx	lr

0800e944 <_ZN8touchgfx9ContainerD0Ev>:
 800e944:	b510      	push	{r4, lr}
 800e946:	212c      	movs	r1, #44	; 0x2c
 800e948:	4604      	mov	r4, r0
 800e94a:	f017 ffb8 	bl	80268be <_ZdlPvj>
 800e94e:	4620      	mov	r0, r4
 800e950:	bd10      	pop	{r4, pc}

0800e952 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800e952:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800e954:	b19b      	cbz	r3, 800e97e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800e956:	428b      	cmp	r3, r1
 800e958:	d109      	bne.n	800e96e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800e95a:	699a      	ldr	r2, [r3, #24]
 800e95c:	2100      	movs	r1, #0
 800e95e:	6159      	str	r1, [r3, #20]
 800e960:	6282      	str	r2, [r0, #40]	; 0x28
 800e962:	b902      	cbnz	r2, 800e966 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800e964:	4770      	bx	lr
 800e966:	6199      	str	r1, [r3, #24]
 800e968:	4770      	bx	lr
 800e96a:	4613      	mov	r3, r2
 800e96c:	b13a      	cbz	r2, 800e97e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800e96e:	699a      	ldr	r2, [r3, #24]
 800e970:	428a      	cmp	r2, r1
 800e972:	d1fa      	bne.n	800e96a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800e974:	698a      	ldr	r2, [r1, #24]
 800e976:	619a      	str	r2, [r3, #24]
 800e978:	2300      	movs	r3, #0
 800e97a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800e97e:	4770      	bx	lr

0800e980 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800e980:	b410      	push	{r4}
 800e982:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800e984:	4604      	mov	r4, r0
 800e986:	b92b      	cbnz	r3, 800e994 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800e988:	6803      	ldr	r3, [r0, #0]
 800e98a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e98e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800e990:	4611      	mov	r1, r2
 800e992:	4718      	bx	r3
 800e994:	b941      	cbnz	r1, 800e9a8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800e996:	6193      	str	r3, [r2, #24]
 800e998:	6282      	str	r2, [r0, #40]	; 0x28
 800e99a:	6154      	str	r4, [r2, #20]
 800e99c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e9a0:	4770      	bx	lr
 800e9a2:	4603      	mov	r3, r0
 800e9a4:	2800      	cmp	r0, #0
 800e9a6:	d0f9      	beq.n	800e99c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800e9a8:	4299      	cmp	r1, r3
 800e9aa:	6998      	ldr	r0, [r3, #24]
 800e9ac:	d1f9      	bne.n	800e9a2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800e9ae:	6190      	str	r0, [r2, #24]
 800e9b0:	618a      	str	r2, [r1, #24]
 800e9b2:	e7f2      	b.n	800e99a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800e9b4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800e9b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e9b8:	461f      	mov	r7, r3
 800e9ba:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800e9be:	460d      	mov	r5, r1
 800e9c0:	4616      	mov	r6, r2
 800e9c2:	b103      	cbz	r3, 800e9c6 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800e9c4:	6038      	str	r0, [r7, #0]
 800e9c6:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800e9c8:	b314      	cbz	r4, 800ea10 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800e9ca:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800e9ce:	b1eb      	cbz	r3, 800ea0c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800e9d0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800e9d4:	428d      	cmp	r5, r1
 800e9d6:	db19      	blt.n	800ea0c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800e9d8:	8923      	ldrh	r3, [r4, #8]
 800e9da:	b289      	uxth	r1, r1
 800e9dc:	440b      	add	r3, r1
 800e9de:	b21b      	sxth	r3, r3
 800e9e0:	429d      	cmp	r5, r3
 800e9e2:	da13      	bge.n	800ea0c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800e9e4:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800e9e8:	4296      	cmp	r6, r2
 800e9ea:	db0f      	blt.n	800ea0c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800e9ec:	8963      	ldrh	r3, [r4, #10]
 800e9ee:	b292      	uxth	r2, r2
 800e9f0:	4413      	add	r3, r2
 800e9f2:	b21b      	sxth	r3, r3
 800e9f4:	429e      	cmp	r6, r3
 800e9f6:	da09      	bge.n	800ea0c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800e9f8:	6823      	ldr	r3, [r4, #0]
 800e9fa:	1ab2      	subs	r2, r6, r2
 800e9fc:	1a69      	subs	r1, r5, r1
 800e9fe:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800ea02:	b212      	sxth	r2, r2
 800ea04:	463b      	mov	r3, r7
 800ea06:	b209      	sxth	r1, r1
 800ea08:	4620      	mov	r0, r4
 800ea0a:	47c0      	blx	r8
 800ea0c:	69a4      	ldr	r4, [r4, #24]
 800ea0e:	e7db      	b.n	800e9c8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800ea10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ea14 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800ea14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ea18:	4c6e      	ldr	r4, [pc, #440]	; (800ebd4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800ea1a:	b0a1      	sub	sp, #132	; 0x84
 800ea1c:	6824      	ldr	r4, [r4, #0]
 800ea1e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800ea20:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800ea24:	9303      	str	r3, [sp, #12]
 800ea26:	2400      	movs	r4, #0
 800ea28:	802c      	strh	r4, [r5, #0]
 800ea2a:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800ea2c:	802c      	strh	r4, [r5, #0]
 800ea2e:	601c      	str	r4, [r3, #0]
 800ea30:	4606      	mov	r6, r0
 800ea32:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800ea36:	f7ff ffbd 	bl	800e9b4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800ea3a:	f1b9 0f03 	cmp.w	r9, #3
 800ea3e:	f340 80c2 	ble.w	800ebc6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800ea42:	4631      	mov	r1, r6
 800ea44:	a80c      	add	r0, sp, #48	; 0x30
 800ea46:	f006 fb5f 	bl	8015108 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ea4a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800ea4e:	9306      	str	r3, [sp, #24]
 800ea50:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800ea54:	9307      	str	r3, [sp, #28]
 800ea56:	9b03      	ldr	r3, [sp, #12]
 800ea58:	f8d3 a000 	ldr.w	sl, [r3]
 800ea5c:	f1ba 0f00 	cmp.w	sl, #0
 800ea60:	f000 80b4 	beq.w	800ebcc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800ea64:	4651      	mov	r1, sl
 800ea66:	a810      	add	r0, sp, #64	; 0x40
 800ea68:	f006 fb4e 	bl	8015108 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ea6c:	9b01      	ldr	r3, [sp, #4]
 800ea6e:	9a06      	ldr	r2, [sp, #24]
 800ea70:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800ea74:	189d      	adds	r5, r3, r2
 800ea76:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800ea7a:	9a07      	ldr	r2, [sp, #28]
 800ea7c:	2002      	movs	r0, #2
 800ea7e:	fb91 f1f0 	sdiv	r1, r1, r0
 800ea82:	4419      	add	r1, r3
 800ea84:	1a6d      	subs	r5, r5, r1
 800ea86:	9b02      	ldr	r3, [sp, #8]
 800ea88:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800ea8c:	4413      	add	r3, r2
 800ea8e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800ea92:	fb92 f2f0 	sdiv	r2, r2, r0
 800ea96:	440a      	add	r2, r1
 800ea98:	1a9b      	subs	r3, r3, r2
 800ea9a:	435b      	muls	r3, r3
 800ea9c:	fb05 3505 	mla	r5, r5, r5, r3
 800eaa0:	4f4d      	ldr	r7, [pc, #308]	; (800ebd8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800eaa2:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800eaa4:	ac10      	add	r4, sp, #64	; 0x40
 800eaa6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800eaa8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800eaaa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800eaac:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800eaae:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800eab0:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800eab4:	f1b9 0f0c 	cmp.w	r9, #12
 800eab8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800eabc:	f04f 0303 	mov.w	r3, #3
 800eac0:	bfc8      	it	gt
 800eac2:	4698      	movgt	r8, r3
 800eac4:	f8cd 9000 	str.w	r9, [sp]
 800eac8:	f04f 0400 	mov.w	r4, #0
 800eacc:	bfdc      	itt	le
 800eace:	f109 32ff 	addle.w	r2, r9, #4294967295
 800ead2:	fb92 f8f3 	sdivle	r8, r2, r3
 800ead6:	1c63      	adds	r3, r4, #1
 800ead8:	aa10      	add	r2, sp, #64	; 0x40
 800eada:	f004 0401 	and.w	r4, r4, #1
 800eade:	9308      	str	r3, [sp, #32]
 800eae0:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800eae4:	9b00      	ldr	r3, [sp, #0]
 800eae6:	fb93 f3f8 	sdiv	r3, r3, r8
 800eaea:	b29b      	uxth	r3, r3
 800eaec:	3404      	adds	r4, #4
 800eaee:	f04f 0b00 	mov.w	fp, #0
 800eaf2:	9304      	str	r3, [sp, #16]
 800eaf4:	9a04      	ldr	r2, [sp, #16]
 800eaf6:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800eafa:	fb13 f302 	smulbb	r3, r3, r2
 800eafe:	9a01      	ldr	r2, [sp, #4]
 800eb00:	b29b      	uxth	r3, r3
 800eb02:	1899      	adds	r1, r3, r2
 800eb04:	9305      	str	r3, [sp, #20]
 800eb06:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800eb0a:	b209      	sxth	r1, r1
 800eb0c:	4299      	cmp	r1, r3
 800eb0e:	db4d      	blt.n	800ebac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800eb10:	8932      	ldrh	r2, [r6, #8]
 800eb12:	4413      	add	r3, r2
 800eb14:	b21b      	sxth	r3, r3
 800eb16:	4299      	cmp	r1, r3
 800eb18:	da48      	bge.n	800ebac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800eb1a:	9b04      	ldr	r3, [sp, #16]
 800eb1c:	6827      	ldr	r7, [r4, #0]
 800eb1e:	fb17 f703 	smulbb	r7, r7, r3
 800eb22:	9b02      	ldr	r3, [sp, #8]
 800eb24:	b2bf      	uxth	r7, r7
 800eb26:	18fa      	adds	r2, r7, r3
 800eb28:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800eb2c:	b212      	sxth	r2, r2
 800eb2e:	429a      	cmp	r2, r3
 800eb30:	db3c      	blt.n	800ebac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800eb32:	8970      	ldrh	r0, [r6, #10]
 800eb34:	4403      	add	r3, r0
 800eb36:	b21b      	sxth	r3, r3
 800eb38:	429a      	cmp	r2, r3
 800eb3a:	da37      	bge.n	800ebac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800eb3c:	2300      	movs	r3, #0
 800eb3e:	930b      	str	r3, [sp, #44]	; 0x2c
 800eb40:	4630      	mov	r0, r6
 800eb42:	ab0b      	add	r3, sp, #44	; 0x2c
 800eb44:	f7ff ff36 	bl	800e9b4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800eb48:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800eb4a:	b37a      	cbz	r2, 800ebac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800eb4c:	4552      	cmp	r2, sl
 800eb4e:	d02d      	beq.n	800ebac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800eb50:	4611      	mov	r1, r2
 800eb52:	a80e      	add	r0, sp, #56	; 0x38
 800eb54:	9209      	str	r2, [sp, #36]	; 0x24
 800eb56:	f006 fad7 	bl	8015108 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800eb5a:	9a06      	ldr	r2, [sp, #24]
 800eb5c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800eb60:	9b01      	ldr	r3, [sp, #4]
 800eb62:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800eb66:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800eb6a:	4413      	add	r3, r2
 800eb6c:	f04f 0e02 	mov.w	lr, #2
 800eb70:	fb91 f1fe 	sdiv	r1, r1, lr
 800eb74:	4401      	add	r1, r0
 800eb76:	1a58      	subs	r0, r3, r1
 800eb78:	9a07      	ldr	r2, [sp, #28]
 800eb7a:	9b02      	ldr	r3, [sp, #8]
 800eb7c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800eb80:	fb9c fcfe 	sdiv	ip, ip, lr
 800eb84:	4413      	add	r3, r2
 800eb86:	448c      	add	ip, r1
 800eb88:	eba3 030c 	sub.w	r3, r3, ip
 800eb8c:	435b      	muls	r3, r3
 800eb8e:	fb00 3300 	mla	r3, r0, r0, r3
 800eb92:	42ab      	cmp	r3, r5
 800eb94:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800eb96:	d208      	bcs.n	800ebaa <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800eb98:	9803      	ldr	r0, [sp, #12]
 800eb9a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800eb9c:	6001      	str	r1, [r0, #0]
 800eb9e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800eba0:	9805      	ldr	r0, [sp, #20]
 800eba2:	8008      	strh	r0, [r1, #0]
 800eba4:	992b      	ldr	r1, [sp, #172]	; 0xac
 800eba6:	461d      	mov	r5, r3
 800eba8:	800f      	strh	r7, [r1, #0]
 800ebaa:	4692      	mov	sl, r2
 800ebac:	f10b 0b01 	add.w	fp, fp, #1
 800ebb0:	f1bb 0f04 	cmp.w	fp, #4
 800ebb4:	f104 0408 	add.w	r4, r4, #8
 800ebb8:	d19c      	bne.n	800eaf4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800ebba:	9b00      	ldr	r3, [sp, #0]
 800ebbc:	9c08      	ldr	r4, [sp, #32]
 800ebbe:	444b      	add	r3, r9
 800ebc0:	4544      	cmp	r4, r8
 800ebc2:	9300      	str	r3, [sp, #0]
 800ebc4:	d187      	bne.n	800ead6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800ebc6:	b021      	add	sp, #132	; 0x84
 800ebc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ebcc:	f04f 35ff 	mov.w	r5, #4294967295
 800ebd0:	e766      	b.n	800eaa0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800ebd2:	bf00      	nop
 800ebd4:	200137bc 	.word	0x200137bc
 800ebd8:	080285b8 	.word	0x080285b8

0800ebdc <_ZN8touchgfx4RectaNERKS0_>:
 800ebdc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ebe0:	f9b1 7000 	ldrsh.w	r7, [r1]
 800ebe4:	888c      	ldrh	r4, [r1, #4]
 800ebe6:	f9b0 9000 	ldrsh.w	r9, [r0]
 800ebea:	443c      	add	r4, r7
 800ebec:	b2a4      	uxth	r4, r4
 800ebee:	fa0f f884 	sxth.w	r8, r4
 800ebf2:	45c1      	cmp	r9, r8
 800ebf4:	da2f      	bge.n	800ec56 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ebf6:	8882      	ldrh	r2, [r0, #4]
 800ebf8:	444a      	add	r2, r9
 800ebfa:	b292      	uxth	r2, r2
 800ebfc:	fa0f fe82 	sxth.w	lr, r2
 800ec00:	4577      	cmp	r7, lr
 800ec02:	da28      	bge.n	800ec56 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ec04:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800ec08:	88cb      	ldrh	r3, [r1, #6]
 800ec0a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800ec0e:	442b      	add	r3, r5
 800ec10:	b21b      	sxth	r3, r3
 800ec12:	429e      	cmp	r6, r3
 800ec14:	da1f      	bge.n	800ec56 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ec16:	88c3      	ldrh	r3, [r0, #6]
 800ec18:	4433      	add	r3, r6
 800ec1a:	b29b      	uxth	r3, r3
 800ec1c:	fa0f fc83 	sxth.w	ip, r3
 800ec20:	4565      	cmp	r5, ip
 800ec22:	da18      	bge.n	800ec56 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ec24:	454f      	cmp	r7, r9
 800ec26:	bfb8      	it	lt
 800ec28:	464f      	movlt	r7, r9
 800ec2a:	42b5      	cmp	r5, r6
 800ec2c:	bfb8      	it	lt
 800ec2e:	4635      	movlt	r5, r6
 800ec30:	45f0      	cmp	r8, lr
 800ec32:	bfd8      	it	le
 800ec34:	4622      	movle	r2, r4
 800ec36:	1bd2      	subs	r2, r2, r7
 800ec38:	8082      	strh	r2, [r0, #4]
 800ec3a:	884a      	ldrh	r2, [r1, #2]
 800ec3c:	88c9      	ldrh	r1, [r1, #6]
 800ec3e:	8007      	strh	r7, [r0, #0]
 800ec40:	440a      	add	r2, r1
 800ec42:	b292      	uxth	r2, r2
 800ec44:	b211      	sxth	r1, r2
 800ec46:	458c      	cmp	ip, r1
 800ec48:	bfa8      	it	ge
 800ec4a:	4613      	movge	r3, r2
 800ec4c:	1b5b      	subs	r3, r3, r5
 800ec4e:	80c3      	strh	r3, [r0, #6]
 800ec50:	8045      	strh	r5, [r0, #2]
 800ec52:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ec56:	2300      	movs	r3, #0
 800ec58:	8003      	strh	r3, [r0, #0]
 800ec5a:	8043      	strh	r3, [r0, #2]
 800ec5c:	8083      	strh	r3, [r0, #4]
 800ec5e:	80c3      	strh	r3, [r0, #6]
 800ec60:	e7f7      	b.n	800ec52 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800ec62 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800ec62:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800ec66:	2b00      	cmp	r3, #0
 800ec68:	dd06      	ble.n	800ec78 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800ec6a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800ec6e:	2800      	cmp	r0, #0
 800ec70:	bfcc      	ite	gt
 800ec72:	2000      	movgt	r0, #0
 800ec74:	2001      	movle	r0, #1
 800ec76:	4770      	bx	lr
 800ec78:	2001      	movs	r0, #1
 800ec7a:	4770      	bx	lr

0800ec7c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800ec7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ec80:	2300      	movs	r3, #0
 800ec82:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800ec84:	8003      	strh	r3, [r0, #0]
 800ec86:	4604      	mov	r4, r0
 800ec88:	8043      	strh	r3, [r0, #2]
 800ec8a:	8083      	strh	r3, [r0, #4]
 800ec8c:	80c3      	strh	r3, [r0, #6]
 800ec8e:	2d00      	cmp	r5, #0
 800ec90:	d040      	beq.n	800ed14 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800ec92:	1d28      	adds	r0, r5, #4
 800ec94:	f7ff ffe5 	bl	800ec62 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ec98:	b988      	cbnz	r0, 800ecbe <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800ec9a:	4620      	mov	r0, r4
 800ec9c:	f7ff ffe1 	bl	800ec62 <_ZNK8touchgfx4Rect7isEmptyEv>
 800eca0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800eca4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800eca8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800ecac:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800ecb0:	b138      	cbz	r0, 800ecc2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800ecb2:	8022      	strh	r2, [r4, #0]
 800ecb4:	8063      	strh	r3, [r4, #2]
 800ecb6:	f8a4 e004 	strh.w	lr, [r4, #4]
 800ecba:	f8a4 c006 	strh.w	ip, [r4, #6]
 800ecbe:	69ad      	ldr	r5, [r5, #24]
 800ecc0:	e7e5      	b.n	800ec8e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800ecc2:	f9b4 0000 	ldrsh.w	r0, [r4]
 800ecc6:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800ecca:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800ecce:	4290      	cmp	r0, r2
 800ecd0:	4607      	mov	r7, r0
 800ecd2:	bfa8      	it	ge
 800ecd4:	4617      	movge	r7, r2
 800ecd6:	4472      	add	r2, lr
 800ecd8:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800ecdc:	8027      	strh	r7, [r4, #0]
 800ecde:	4299      	cmp	r1, r3
 800ece0:	460e      	mov	r6, r1
 800ece2:	4440      	add	r0, r8
 800ece4:	bfa8      	it	ge
 800ece6:	461e      	movge	r6, r3
 800ece8:	4471      	add	r1, lr
 800ecea:	4463      	add	r3, ip
 800ecec:	b200      	sxth	r0, r0
 800ecee:	b212      	sxth	r2, r2
 800ecf0:	b209      	sxth	r1, r1
 800ecf2:	b21b      	sxth	r3, r3
 800ecf4:	4290      	cmp	r0, r2
 800ecf6:	bfac      	ite	ge
 800ecf8:	ebc7 0200 	rsbge	r2, r7, r0
 800ecfc:	ebc7 0202 	rsblt	r2, r7, r2
 800ed00:	4299      	cmp	r1, r3
 800ed02:	bfac      	ite	ge
 800ed04:	ebc6 0301 	rsbge	r3, r6, r1
 800ed08:	ebc6 0303 	rsblt	r3, r6, r3
 800ed0c:	8066      	strh	r6, [r4, #2]
 800ed0e:	80a2      	strh	r2, [r4, #4]
 800ed10:	80e3      	strh	r3, [r4, #6]
 800ed12:	e7d4      	b.n	800ecbe <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800ed14:	4620      	mov	r0, r4
 800ed16:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ed1a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800ed1a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800ed1e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800ed22:	b383      	cbz	r3, 800ed86 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800ed24:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ed26:	b374      	cbz	r4, 800ed86 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800ed28:	f9b1 5000 	ldrsh.w	r5, [r1]
 800ed2c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800ed30:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800ed34:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800ed38:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800ed3c:	b303      	cbz	r3, 800ed80 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800ed3e:	4668      	mov	r0, sp
 800ed40:	1d21      	adds	r1, r4, #4
 800ed42:	f8ad 5000 	strh.w	r5, [sp]
 800ed46:	f8ad 6002 	strh.w	r6, [sp, #2]
 800ed4a:	f8ad 7004 	strh.w	r7, [sp, #4]
 800ed4e:	f8ad 8006 	strh.w	r8, [sp, #6]
 800ed52:	f7ff ff43 	bl	800ebdc <_ZN8touchgfx4RectaNERKS0_>
 800ed56:	4668      	mov	r0, sp
 800ed58:	f7ff ff83 	bl	800ec62 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ed5c:	b980      	cbnz	r0, 800ed80 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800ed5e:	f8bd 3000 	ldrh.w	r3, [sp]
 800ed62:	88a2      	ldrh	r2, [r4, #4]
 800ed64:	1a9b      	subs	r3, r3, r2
 800ed66:	f8ad 3000 	strh.w	r3, [sp]
 800ed6a:	88e2      	ldrh	r2, [r4, #6]
 800ed6c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ed70:	1a9b      	subs	r3, r3, r2
 800ed72:	f8ad 3002 	strh.w	r3, [sp, #2]
 800ed76:	6823      	ldr	r3, [r4, #0]
 800ed78:	4669      	mov	r1, sp
 800ed7a:	689b      	ldr	r3, [r3, #8]
 800ed7c:	4620      	mov	r0, r4
 800ed7e:	4798      	blx	r3
 800ed80:	69a4      	ldr	r4, [r4, #24]
 800ed82:	2c00      	cmp	r4, #0
 800ed84:	d1d8      	bne.n	800ed38 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800ed86:	b002      	add	sp, #8
 800ed88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ed8c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800ed8c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ed8e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800ed92:	460d      	mov	r5, r1
 800ed94:	4616      	mov	r6, r2
 800ed96:	b323      	cbz	r3, 800ede2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800ed98:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ed9a:	b314      	cbz	r4, 800ede2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800ed9c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800eda0:	b1eb      	cbz	r3, 800edde <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800eda2:	6828      	ldr	r0, [r5, #0]
 800eda4:	6869      	ldr	r1, [r5, #4]
 800eda6:	466b      	mov	r3, sp
 800eda8:	c303      	stmia	r3!, {r0, r1}
 800edaa:	4668      	mov	r0, sp
 800edac:	1d21      	adds	r1, r4, #4
 800edae:	f7ff ff15 	bl	800ebdc <_ZN8touchgfx4RectaNERKS0_>
 800edb2:	4668      	mov	r0, sp
 800edb4:	f7ff ff55 	bl	800ec62 <_ZNK8touchgfx4Rect7isEmptyEv>
 800edb8:	b988      	cbnz	r0, 800edde <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800edba:	f8bd 3000 	ldrh.w	r3, [sp]
 800edbe:	88a2      	ldrh	r2, [r4, #4]
 800edc0:	1a9b      	subs	r3, r3, r2
 800edc2:	f8ad 3000 	strh.w	r3, [sp]
 800edc6:	88e2      	ldrh	r2, [r4, #6]
 800edc8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800edcc:	1a9b      	subs	r3, r3, r2
 800edce:	f8ad 3002 	strh.w	r3, [sp, #2]
 800edd2:	6823      	ldr	r3, [r4, #0]
 800edd4:	4632      	mov	r2, r6
 800edd6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800edd8:	4669      	mov	r1, sp
 800edda:	4620      	mov	r0, r4
 800eddc:	4798      	blx	r3
 800edde:	69a4      	ldr	r4, [r4, #24]
 800ede0:	e7db      	b.n	800ed9a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800ede2:	b002      	add	sp, #8
 800ede4:	bd70      	pop	{r4, r5, r6, pc}

0800ede6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800ede6:	b513      	push	{r0, r1, r4, lr}
 800ede8:	6803      	ldr	r3, [r0, #0]
 800edea:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800edee:	2300      	movs	r3, #0
 800edf0:	e9cd 3300 	strd	r3, r3, [sp]
 800edf4:	466b      	mov	r3, sp
 800edf6:	47a0      	blx	r4
 800edf8:	b002      	add	sp, #8
 800edfa:	bd10      	pop	{r4, pc}

0800edfc <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800edfc:	2301      	movs	r3, #1
 800edfe:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800ee02:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800ee06:	4770      	bx	lr

0800ee08 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800ee08:	2301      	movs	r3, #1
 800ee0a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800ee0e:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800ee12:	4770      	bx	lr

0800ee14 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800ee14:	6843      	ldr	r3, [r0, #4]
 800ee16:	2201      	movs	r2, #1
 800ee18:	725a      	strb	r2, [r3, #9]
 800ee1a:	6840      	ldr	r0, [r0, #4]
 800ee1c:	6803      	ldr	r3, [r0, #0]
 800ee1e:	691b      	ldr	r3, [r3, #16]
 800ee20:	4718      	bx	r3

0800ee22 <_ZN8touchgfx3HAL8flushDMAEv>:
 800ee22:	6840      	ldr	r0, [r0, #4]
 800ee24:	6803      	ldr	r3, [r0, #0]
 800ee26:	689b      	ldr	r3, [r3, #8]
 800ee28:	4718      	bx	r3

0800ee2a <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800ee2a:	b530      	push	{r4, r5, lr}
 800ee2c:	b08b      	sub	sp, #44	; 0x2c
 800ee2e:	6804      	ldr	r4, [r0, #0]
 800ee30:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800ee34:	9509      	str	r5, [sp, #36]	; 0x24
 800ee36:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800ee3a:	9508      	str	r5, [sp, #32]
 800ee3c:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800ee40:	9507      	str	r5, [sp, #28]
 800ee42:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800ee46:	9506      	str	r5, [sp, #24]
 800ee48:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800ee4c:	9505      	str	r5, [sp, #20]
 800ee4e:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800ee52:	9504      	str	r5, [sp, #16]
 800ee54:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800ee58:	9503      	str	r5, [sp, #12]
 800ee5a:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800ee5e:	9502      	str	r5, [sp, #8]
 800ee60:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800ee64:	e9cd 3500 	strd	r3, r5, [sp]
 800ee68:	4613      	mov	r3, r2
 800ee6a:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800ee6c:	2200      	movs	r2, #0
 800ee6e:	47a0      	blx	r4
 800ee70:	b00b      	add	sp, #44	; 0x2c
 800ee72:	bd30      	pop	{r4, r5, pc}

0800ee74 <_ZN8touchgfx3HAL10beginFrameEv>:
 800ee74:	4b04      	ldr	r3, [pc, #16]	; (800ee88 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800ee76:	781b      	ldrb	r3, [r3, #0]
 800ee78:	b123      	cbz	r3, 800ee84 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800ee7a:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 800ee7e:	f080 0001 	eor.w	r0, r0, #1
 800ee82:	4770      	bx	lr
 800ee84:	2001      	movs	r0, #1
 800ee86:	4770      	bx	lr
 800ee88:	200137ba 	.word	0x200137ba

0800ee8c <_ZN8touchgfx3HAL8endFrameEv>:
 800ee8c:	b510      	push	{r4, lr}
 800ee8e:	4604      	mov	r4, r0
 800ee90:	6840      	ldr	r0, [r0, #4]
 800ee92:	6803      	ldr	r3, [r0, #0]
 800ee94:	689b      	ldr	r3, [r3, #8]
 800ee96:	4798      	blx	r3
 800ee98:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 800ee9c:	b113      	cbz	r3, 800eea4 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800ee9e:	2301      	movs	r3, #1
 800eea0:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 800eea4:	bd10      	pop	{r4, pc}

0800eea6 <_ZN8touchgfx3HAL10initializeEv>:
 800eea6:	b510      	push	{r4, lr}
 800eea8:	4604      	mov	r4, r0
 800eeaa:	f7f1 fd9f 	bl	80009ec <_ZN8touchgfx10OSWrappers10initializeEv>
 800eeae:	f7f1 fcab 	bl	8000808 <_ZN8touchgfx4GPIO4initEv>
 800eeb2:	6860      	ldr	r0, [r4, #4]
 800eeb4:	6803      	ldr	r3, [r0, #0]
 800eeb6:	68db      	ldr	r3, [r3, #12]
 800eeb8:	4798      	blx	r3
 800eeba:	68e0      	ldr	r0, [r4, #12]
 800eebc:	6803      	ldr	r3, [r0, #0]
 800eebe:	689b      	ldr	r3, [r3, #8]
 800eec0:	4798      	blx	r3
 800eec2:	6823      	ldr	r3, [r4, #0]
 800eec4:	4620      	mov	r0, r4
 800eec6:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800eec8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800eecc:	4718      	bx	r3
	...

0800eed0 <_ZN8touchgfx3HAL4tickEv>:
 800eed0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800eed2:	6803      	ldr	r3, [r0, #0]
 800eed4:	4d5b      	ldr	r5, [pc, #364]	; (800f044 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800eed6:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800eeda:	4604      	mov	r4, r0
 800eedc:	4798      	blx	r3
 800eede:	2800      	cmp	r0, #0
 800eee0:	f000 8095 	beq.w	800f00e <_ZN8touchgfx3HAL4tickEv+0x13e>
 800eee4:	2001      	movs	r0, #1
 800eee6:	f7f1 fc41 	bl	800076c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800eeea:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 800eeee:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800eef2:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 800eef6:	2600      	movs	r6, #0
 800eef8:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 800eefc:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800ef00:	b133      	cbz	r3, 800ef10 <_ZN8touchgfx3HAL4tickEv+0x40>
 800ef02:	6823      	ldr	r3, [r4, #0]
 800ef04:	4620      	mov	r0, r4
 800ef06:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800ef0a:	4798      	blx	r3
 800ef0c:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 800ef10:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800ef14:	6862      	ldr	r2, [r4, #4]
 800ef16:	f083 0301 	eor.w	r3, r3, #1
 800ef1a:	7253      	strb	r3, [r2, #9]
 800ef1c:	2601      	movs	r6, #1
 800ef1e:	702e      	strb	r6, [r5, #0]
 800ef20:	f004 ff6e 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
 800ef24:	6803      	ldr	r3, [r0, #0]
 800ef26:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ef28:	4798      	blx	r3
 800ef2a:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 800ef2e:	b90b      	cbnz	r3, 800ef34 <_ZN8touchgfx3HAL4tickEv+0x64>
 800ef30:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 800ef34:	f004 ff64 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
 800ef38:	6803      	ldr	r3, [r0, #0]
 800ef3a:	695b      	ldr	r3, [r3, #20]
 800ef3c:	4798      	blx	r3
 800ef3e:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800ef40:	6803      	ldr	r3, [r0, #0]
 800ef42:	691b      	ldr	r3, [r3, #16]
 800ef44:	4798      	blx	r3
 800ef46:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 800ef4a:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 800ef4e:	3b01      	subs	r3, #1
 800ef50:	b2db      	uxtb	r3, r3
 800ef52:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800ef56:	b10a      	cbz	r2, 800ef5c <_ZN8touchgfx3HAL4tickEv+0x8c>
 800ef58:	2b00      	cmp	r3, #0
 800ef5a:	d1eb      	bne.n	800ef34 <_ZN8touchgfx3HAL4tickEv+0x64>
 800ef5c:	4a3a      	ldr	r2, [pc, #232]	; (800f048 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800ef5e:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 800ef62:	7813      	ldrb	r3, [r2, #0]
 800ef64:	3301      	adds	r3, #1
 800ef66:	b25b      	sxtb	r3, r3
 800ef68:	4299      	cmp	r1, r3
 800ef6a:	7013      	strb	r3, [r2, #0]
 800ef6c:	dc10      	bgt.n	800ef90 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800ef6e:	68e0      	ldr	r0, [r4, #12]
 800ef70:	2300      	movs	r3, #0
 800ef72:	7013      	strb	r3, [r2, #0]
 800ef74:	6803      	ldr	r3, [r0, #0]
 800ef76:	aa03      	add	r2, sp, #12
 800ef78:	68db      	ldr	r3, [r3, #12]
 800ef7a:	a902      	add	r1, sp, #8
 800ef7c:	4798      	blx	r3
 800ef7e:	6823      	ldr	r3, [r4, #0]
 800ef80:	2800      	cmp	r0, #0
 800ef82:	d050      	beq.n	800f026 <_ZN8touchgfx3HAL4tickEv+0x156>
 800ef84:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800ef88:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800ef8c:	4620      	mov	r0, r4
 800ef8e:	4798      	blx	r3
 800ef90:	6960      	ldr	r0, [r4, #20]
 800ef92:	2300      	movs	r3, #0
 800ef94:	f88d 3007 	strb.w	r3, [sp, #7]
 800ef98:	b158      	cbz	r0, 800efb2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800ef9a:	6803      	ldr	r3, [r0, #0]
 800ef9c:	f10d 0107 	add.w	r1, sp, #7
 800efa0:	68db      	ldr	r3, [r3, #12]
 800efa2:	4798      	blx	r3
 800efa4:	b128      	cbz	r0, 800efb2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800efa6:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800efa8:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800efac:	6803      	ldr	r3, [r0, #0]
 800efae:	68db      	ldr	r3, [r3, #12]
 800efb0:	4798      	blx	r3
 800efb2:	f104 001c 	add.w	r0, r4, #28
 800efb6:	f015 fcc5 	bl	8024944 <_ZN8touchgfx8Gestures4tickEv>
 800efba:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 800efbe:	b30b      	cbz	r3, 800f004 <_ZN8touchgfx3HAL4tickEv+0x134>
 800efc0:	6920      	ldr	r0, [r4, #16]
 800efc2:	6803      	ldr	r3, [r0, #0]
 800efc4:	691b      	ldr	r3, [r3, #16]
 800efc6:	4798      	blx	r3
 800efc8:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800efca:	4606      	mov	r6, r0
 800efcc:	b903      	cbnz	r3, 800efd0 <_ZN8touchgfx3HAL4tickEv+0x100>
 800efce:	6760      	str	r0, [r4, #116]	; 0x74
 800efd0:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800efd2:	4a1e      	ldr	r2, [pc, #120]	; (800f04c <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800efd4:	1af3      	subs	r3, r6, r3
 800efd6:	4293      	cmp	r3, r2
 800efd8:	d914      	bls.n	800f004 <_ZN8touchgfx3HAL4tickEv+0x134>
 800efda:	6920      	ldr	r0, [r4, #16]
 800efdc:	6803      	ldr	r3, [r0, #0]
 800efde:	699b      	ldr	r3, [r3, #24]
 800efe0:	4798      	blx	r3
 800efe2:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800efe4:	2264      	movs	r2, #100	; 0x64
 800efe6:	1af3      	subs	r3, r6, r3
 800efe8:	fbb3 f3f2 	udiv	r3, r3, r2
 800efec:	fbb0 f0f3 	udiv	r0, r0, r3
 800eff0:	2800      	cmp	r0, #0
 800eff2:	dc1d      	bgt.n	800f030 <_ZN8touchgfx3HAL4tickEv+0x160>
 800eff4:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 800eff8:	6920      	ldr	r0, [r4, #16]
 800effa:	6803      	ldr	r3, [r0, #0]
 800effc:	2100      	movs	r1, #0
 800effe:	69db      	ldr	r3, [r3, #28]
 800f000:	4798      	blx	r3
 800f002:	6766      	str	r6, [r4, #116]	; 0x74
 800f004:	f004 fefc 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
 800f008:	6803      	ldr	r3, [r0, #0]
 800f00a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800f00c:	4798      	blx	r3
 800f00e:	6823      	ldr	r3, [r4, #0]
 800f010:	4620      	mov	r0, r4
 800f012:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800f016:	4798      	blx	r3
 800f018:	2001      	movs	r0, #1
 800f01a:	f7f1 fbbf 	bl	800079c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800f01e:	2300      	movs	r3, #0
 800f020:	702b      	strb	r3, [r5, #0]
 800f022:	b004      	add	sp, #16
 800f024:	bd70      	pop	{r4, r5, r6, pc}
 800f026:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800f02a:	4620      	mov	r0, r4
 800f02c:	4798      	blx	r3
 800f02e:	e7af      	b.n	800ef90 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800f030:	2863      	cmp	r0, #99	; 0x63
 800f032:	bfcb      	itete	gt
 800f034:	2300      	movgt	r3, #0
 800f036:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800f03a:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 800f03e:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 800f042:	e7d9      	b.n	800eff8 <_ZN8touchgfx3HAL4tickEv+0x128>
 800f044:	200137c0 	.word	0x200137c0
 800f048:	200137c1 	.word	0x200137c1
 800f04c:	05f5e100 	.word	0x05f5e100

0800f050 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800f050:	b510      	push	{r4, lr}
 800f052:	4604      	mov	r4, r0
 800f054:	f7f1 fcfa 	bl	8000a4c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800f058:	6863      	ldr	r3, [r4, #4]
 800f05a:	2200      	movs	r2, #0
 800f05c:	729a      	strb	r2, [r3, #10]
 800f05e:	bd10      	pop	{r4, pc}

0800f060 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800f060:	65c1      	str	r1, [r0, #92]	; 0x5c
 800f062:	301c      	adds	r0, #28
 800f064:	f015 bc6c 	b.w	8024940 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800f068 <_ZN8touchgfx3HAL5touchEll>:
 800f068:	b530      	push	{r4, r5, lr}
 800f06a:	b087      	sub	sp, #28
 800f06c:	4604      	mov	r4, r0
 800f06e:	a804      	add	r0, sp, #16
 800f070:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800f074:	f004 fc90 	bl	8013998 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800f078:	9b04      	ldr	r3, [sp, #16]
 800f07a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800f07e:	a906      	add	r1, sp, #24
 800f080:	9b05      	ldr	r3, [sp, #20]
 800f082:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800f086:	a803      	add	r0, sp, #12
 800f088:	f004 fcd8 	bl	8013a3c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800f08c:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 800f090:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800f094:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800f098:	f104 001c 	add.w	r0, r4, #28
 800f09c:	b189      	cbz	r1, 800f0c2 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800f09e:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 800f0a2:	9300      	str	r3, [sp, #0]
 800f0a4:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 800f0a8:	4613      	mov	r3, r2
 800f0aa:	462a      	mov	r2, r5
 800f0ac:	f015 fc58 	bl	8024960 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800f0b0:	b128      	cbz	r0, 800f0be <_ZN8touchgfx3HAL5touchEll+0x56>
 800f0b2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800f0b6:	6623      	str	r3, [r4, #96]	; 0x60
 800f0b8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800f0bc:	6663      	str	r3, [r4, #100]	; 0x64
 800f0be:	b007      	add	sp, #28
 800f0c0:	bd30      	pop	{r4, r5, pc}
 800f0c2:	f015 fc8d 	bl	80249e0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800f0c6:	2301      	movs	r3, #1
 800f0c8:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 800f0cc:	e7f1      	b.n	800f0b2 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800f0ce <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800f0ce:	b510      	push	{r4, lr}
 800f0d0:	2b00      	cmp	r3, #0
 800f0d2:	d046      	beq.n	800f162 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800f0d4:	ea81 0002 	eor.w	r0, r1, r2
 800f0d8:	07c4      	lsls	r4, r0, #31
 800f0da:	d508      	bpl.n	800f0ee <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800f0dc:	440b      	add	r3, r1
 800f0de:	3a01      	subs	r2, #1
 800f0e0:	428b      	cmp	r3, r1
 800f0e2:	d93e      	bls.n	800f162 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800f0e4:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800f0e8:	f801 0b01 	strb.w	r0, [r1], #1
 800f0ec:	e7f8      	b.n	800f0e0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800f0ee:	07d0      	lsls	r0, r2, #31
 800f0f0:	bf42      	ittt	mi
 800f0f2:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800f0f6:	f801 0b01 	strbmi.w	r0, [r1], #1
 800f0fa:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800f0fe:	2b01      	cmp	r3, #1
 800f100:	d911      	bls.n	800f126 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800f102:	ea81 0402 	eor.w	r4, r1, r2
 800f106:	07a4      	lsls	r4, r4, #30
 800f108:	4610      	mov	r0, r2
 800f10a:	d022      	beq.n	800f152 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800f10c:	f023 0401 	bic.w	r4, r3, #1
 800f110:	440c      	add	r4, r1
 800f112:	428c      	cmp	r4, r1
 800f114:	4602      	mov	r2, r0
 800f116:	d904      	bls.n	800f122 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800f118:	8812      	ldrh	r2, [r2, #0]
 800f11a:	f821 2b02 	strh.w	r2, [r1], #2
 800f11e:	3002      	adds	r0, #2
 800f120:	e7f7      	b.n	800f112 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800f122:	f003 0301 	and.w	r3, r3, #1
 800f126:	f023 0003 	bic.w	r0, r3, #3
 800f12a:	4408      	add	r0, r1
 800f12c:	4288      	cmp	r0, r1
 800f12e:	4614      	mov	r4, r2
 800f130:	d904      	bls.n	800f13c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800f132:	6824      	ldr	r4, [r4, #0]
 800f134:	f841 4b04 	str.w	r4, [r1], #4
 800f138:	3204      	adds	r2, #4
 800f13a:	e7f7      	b.n	800f12c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800f13c:	f003 0303 	and.w	r3, r3, #3
 800f140:	440b      	add	r3, r1
 800f142:	3a01      	subs	r2, #1
 800f144:	428b      	cmp	r3, r1
 800f146:	d90c      	bls.n	800f162 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800f148:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800f14c:	f801 0b01 	strb.w	r0, [r1], #1
 800f150:	e7f8      	b.n	800f144 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800f152:	0790      	lsls	r0, r2, #30
 800f154:	d0e7      	beq.n	800f126 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800f156:	f832 0b02 	ldrh.w	r0, [r2], #2
 800f15a:	f821 0b02 	strh.w	r0, [r1], #2
 800f15e:	3b02      	subs	r3, #2
 800f160:	e7e1      	b.n	800f126 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800f162:	2001      	movs	r0, #1
 800f164:	bd10      	pop	{r4, pc}

0800f166 <_ZN8touchgfx3HAL7noTouchEv>:
 800f166:	b510      	push	{r4, lr}
 800f168:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 800f16c:	4604      	mov	r4, r0
 800f16e:	b153      	cbz	r3, 800f186 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800f170:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 800f174:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 800f178:	2101      	movs	r1, #1
 800f17a:	301c      	adds	r0, #28
 800f17c:	f015 fc30 	bl	80249e0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800f180:	2300      	movs	r3, #0
 800f182:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 800f186:	bd10      	pop	{r4, pc}

0800f188 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800f188:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f18c:	b085      	sub	sp, #20
 800f18e:	ad04      	add	r5, sp, #16
 800f190:	4604      	mov	r4, r0
 800f192:	2000      	movs	r0, #0
 800f194:	f845 0d04 	str.w	r0, [r5, #-4]!
 800f198:	69a0      	ldr	r0, [r4, #24]
 800f19a:	6806      	ldr	r6, [r0, #0]
 800f19c:	9501      	str	r5, [sp, #4]
 800f19e:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800f1a2:	9500      	str	r5, [sp, #0]
 800f1a4:	6835      	ldr	r5, [r6, #0]
 800f1a6:	4699      	mov	r9, r3
 800f1a8:	460f      	mov	r7, r1
 800f1aa:	4690      	mov	r8, r2
 800f1ac:	47a8      	blx	r5
 800f1ae:	4d10      	ldr	r5, [pc, #64]	; (800f1f0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800f1b0:	4606      	mov	r6, r0
 800f1b2:	f8a5 9000 	strh.w	r9, [r5]
 800f1b6:	f7f3 fe89 	bl	8002ecc <_ZN8touchgfx3HAL3lcdEv>
 800f1ba:	6803      	ldr	r3, [r0, #0]
 800f1bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f1be:	4798      	blx	r3
 800f1c0:	b128      	cbz	r0, 800f1ce <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800f1c2:	2801      	cmp	r0, #1
 800f1c4:	d00b      	beq.n	800f1de <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800f1c6:	4630      	mov	r0, r6
 800f1c8:	b005      	add	sp, #20
 800f1ca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f1ce:	882b      	ldrh	r3, [r5, #0]
 800f1d0:	fb08 7203 	mla	r2, r8, r3, r7
 800f1d4:	9b03      	ldr	r3, [sp, #12]
 800f1d6:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800f1da:	63e3      	str	r3, [r4, #60]	; 0x3c
 800f1dc:	e7f3      	b.n	800f1c6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800f1de:	882a      	ldrh	r2, [r5, #0]
 800f1e0:	9b03      	ldr	r3, [sp, #12]
 800f1e2:	fb08 7202 	mla	r2, r8, r2, r7
 800f1e6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800f1ea:	1a9a      	subs	r2, r3, r2
 800f1ec:	63e2      	str	r2, [r4, #60]	; 0x3c
 800f1ee:	e7ea      	b.n	800f1c6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800f1f0:	200137b6 	.word	0x200137b6

0800f1f4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800f1f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f1f6:	b08b      	sub	sp, #44	; 0x2c
 800f1f8:	4617      	mov	r7, r2
 800f1fa:	4604      	mov	r4, r0
 800f1fc:	460e      	mov	r6, r1
 800f1fe:	461d      	mov	r5, r3
 800f200:	f7f3 fe64 	bl	8002ecc <_ZN8touchgfx3HAL3lcdEv>
 800f204:	6803      	ldr	r3, [r0, #0]
 800f206:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f208:	4798      	blx	r3
 800f20a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800f20e:	9007      	str	r0, [sp, #28]
 800f210:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800f214:	4b0d      	ldr	r3, [pc, #52]	; (800f24c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800f216:	6822      	ldr	r2, [r4, #0]
 800f218:	881b      	ldrh	r3, [r3, #0]
 800f21a:	9306      	str	r3, [sp, #24]
 800f21c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800f220:	9305      	str	r3, [sp, #20]
 800f222:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800f226:	9304      	str	r3, [sp, #16]
 800f228:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800f22c:	9303      	str	r3, [sp, #12]
 800f22e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800f232:	9302      	str	r3, [sp, #8]
 800f234:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800f238:	e9cd 5300 	strd	r5, r3, [sp]
 800f23c:	4631      	mov	r1, r6
 800f23e:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800f240:	463b      	mov	r3, r7
 800f242:	2200      	movs	r2, #0
 800f244:	4620      	mov	r0, r4
 800f246:	47a8      	blx	r5
 800f248:	b00b      	add	sp, #44	; 0x2c
 800f24a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f24c:	200137b6 	.word	0x200137b6

0800f250 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800f250:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f254:	4698      	mov	r8, r3
 800f256:	6803      	ldr	r3, [r0, #0]
 800f258:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800f25a:	4b15      	ldr	r3, [pc, #84]	; (800f2b0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800f25c:	b08b      	sub	sp, #44	; 0x2c
 800f25e:	4617      	mov	r7, r2
 800f260:	f8b3 9000 	ldrh.w	r9, [r3]
 800f264:	460e      	mov	r6, r1
 800f266:	4604      	mov	r4, r0
 800f268:	f7f3 fe30 	bl	8002ecc <_ZN8touchgfx3HAL3lcdEv>
 800f26c:	6803      	ldr	r3, [r0, #0]
 800f26e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f270:	4798      	blx	r3
 800f272:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800f276:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800f27a:	2302      	movs	r3, #2
 800f27c:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800f280:	2301      	movs	r3, #1
 800f282:	9305      	str	r3, [sp, #20]
 800f284:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800f288:	9304      	str	r3, [sp, #16]
 800f28a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800f28e:	9303      	str	r3, [sp, #12]
 800f290:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800f294:	9302      	str	r3, [sp, #8]
 800f296:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800f29a:	2200      	movs	r2, #0
 800f29c:	e9cd 8300 	strd	r8, r3, [sp]
 800f2a0:	4631      	mov	r1, r6
 800f2a2:	463b      	mov	r3, r7
 800f2a4:	4620      	mov	r0, r4
 800f2a6:	47a8      	blx	r5
 800f2a8:	b00b      	add	sp, #44	; 0x2c
 800f2aa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f2ae:	bf00      	nop
 800f2b0:	200137b6 	.word	0x200137b6

0800f2b4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800f2b4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f2b8:	4698      	mov	r8, r3
 800f2ba:	6803      	ldr	r3, [r0, #0]
 800f2bc:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800f2be:	4b11      	ldr	r3, [pc, #68]	; (800f304 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800f2c0:	b087      	sub	sp, #28
 800f2c2:	f8b3 9000 	ldrh.w	r9, [r3]
 800f2c6:	460e      	mov	r6, r1
 800f2c8:	4617      	mov	r7, r2
 800f2ca:	4604      	mov	r4, r0
 800f2cc:	f7f3 fdfe 	bl	8002ecc <_ZN8touchgfx3HAL3lcdEv>
 800f2d0:	6803      	ldr	r3, [r0, #0]
 800f2d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f2d4:	4798      	blx	r3
 800f2d6:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800f2da:	f8cd 900c 	str.w	r9, [sp, #12]
 800f2de:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800f2e2:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800f2e6:	9302      	str	r3, [sp, #8]
 800f2e8:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800f2ec:	9301      	str	r3, [sp, #4]
 800f2ee:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800f2f2:	9300      	str	r3, [sp, #0]
 800f2f4:	463a      	mov	r2, r7
 800f2f6:	4643      	mov	r3, r8
 800f2f8:	4631      	mov	r1, r6
 800f2fa:	4620      	mov	r0, r4
 800f2fc:	47a8      	blx	r5
 800f2fe:	b007      	add	sp, #28
 800f300:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f304:	200137b6 	.word	0x200137b6

0800f308 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800f308:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f30c:	4604      	mov	r4, r0
 800f30e:	b08f      	sub	sp, #60	; 0x3c
 800f310:	4610      	mov	r0, r2
 800f312:	460d      	mov	r5, r1
 800f314:	4691      	mov	r9, r2
 800f316:	461e      	mov	r6, r3
 800f318:	f007 fefc 	bl	8017114 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800f31c:	2800      	cmp	r0, #0
 800f31e:	f000 809d 	beq.w	800f45c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800f322:	6823      	ldr	r3, [r4, #0]
 800f324:	f8df b198 	ldr.w	fp, [pc, #408]	; 800f4c0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800f328:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f32a:	f8df a198 	ldr.w	sl, [pc, #408]	; 800f4c4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800f32e:	4f61      	ldr	r7, [pc, #388]	; (800f4b4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800f330:	4620      	mov	r0, r4
 800f332:	4798      	blx	r3
 800f334:	6823      	ldr	r3, [r4, #0]
 800f336:	4620      	mov	r0, r4
 800f338:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f33a:	4798      	blx	r3
 800f33c:	f8bb 3000 	ldrh.w	r3, [fp]
 800f340:	9301      	str	r3, [sp, #4]
 800f342:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800f346:	f8ba 3000 	ldrh.w	r3, [sl]
 800f34a:	9302      	str	r3, [sp, #8]
 800f34c:	883b      	ldrh	r3, [r7, #0]
 800f34e:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800f352:	9303      	str	r3, [sp, #12]
 800f354:	4b58      	ldr	r3, [pc, #352]	; (800f4b8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800f356:	9305      	str	r3, [sp, #20]
 800f358:	881a      	ldrh	r2, [r3, #0]
 800f35a:	9204      	str	r2, [sp, #16]
 800f35c:	4640      	mov	r0, r8
 800f35e:	f007 ff6d 	bl	801723c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800f362:	8038      	strh	r0, [r7, #0]
 800f364:	4640      	mov	r0, r8
 800f366:	f007 ff9d 	bl	80172a4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800f36a:	9b05      	ldr	r3, [sp, #20]
 800f36c:	b280      	uxth	r0, r0
 800f36e:	8018      	strh	r0, [r3, #0]
 800f370:	4b52      	ldr	r3, [pc, #328]	; (800f4bc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800f372:	781b      	ldrb	r3, [r3, #0]
 800f374:	2b00      	cmp	r3, #0
 800f376:	d174      	bne.n	800f462 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800f378:	883b      	ldrh	r3, [r7, #0]
 800f37a:	f8ab 3000 	strh.w	r3, [fp]
 800f37e:	f8aa 0000 	strh.w	r0, [sl]
 800f382:	4648      	mov	r0, r9
 800f384:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800f388:	f007 fec4 	bl	8017114 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800f38c:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800f390:	2200      	movs	r2, #0
 800f392:	4611      	mov	r1, r2
 800f394:	4628      	mov	r0, r5
 800f396:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800f39a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800f39e:	f7f3 f86c 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 800f3a2:	2301      	movs	r3, #1
 800f3a4:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800f3a8:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800f3ac:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800f3b0:	2b00      	cmp	r3, #0
 800f3b2:	dd5c      	ble.n	800f46e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800f3b4:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800f3b8:	2b00      	cmp	r3, #0
 800f3ba:	dd58      	ble.n	800f46e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800f3bc:	462a      	mov	r2, r5
 800f3be:	ab0a      	add	r3, sp, #40	; 0x28
 800f3c0:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800f3c4:	6851      	ldr	r1, [r2, #4]
 800f3c6:	c303      	stmia	r3!, {r0, r1}
 800f3c8:	4631      	mov	r1, r6
 800f3ca:	a80a      	add	r0, sp, #40	; 0x28
 800f3cc:	f7ff fc06 	bl	800ebdc <_ZN8touchgfx4RectaNERKS0_>
 800f3d0:	4b38      	ldr	r3, [pc, #224]	; (800f4b4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800f3d2:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f3d6:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800f3da:	2100      	movs	r1, #0
 800f3dc:	aa0a      	add	r2, sp, #40	; 0x28
 800f3de:	4b36      	ldr	r3, [pc, #216]	; (800f4b8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800f3e0:	910c      	str	r1, [sp, #48]	; 0x30
 800f3e2:	e892 0003 	ldmia.w	r2, {r0, r1}
 800f3e6:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f3ea:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800f3ee:	ab08      	add	r3, sp, #32
 800f3f0:	e883 0003 	stmia.w	r3, {r0, r1}
 800f3f4:	4618      	mov	r0, r3
 800f3f6:	a90c      	add	r1, sp, #48	; 0x30
 800f3f8:	f7ff fbf0 	bl	800ebdc <_ZN8touchgfx4RectaNERKS0_>
 800f3fc:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800f3fe:	2b00      	cmp	r3, #0
 800f400:	d13c      	bne.n	800f47c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800f402:	2000      	movs	r0, #0
 800f404:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 800f408:	2600      	movs	r6, #0
 800f40a:	682a      	ldr	r2, [r5, #0]
 800f40c:	696b      	ldr	r3, [r5, #20]
 800f40e:	616e      	str	r6, [r5, #20]
 800f410:	9305      	str	r3, [sp, #20]
 800f412:	6892      	ldr	r2, [r2, #8]
 800f414:	a908      	add	r1, sp, #32
 800f416:	4628      	mov	r0, r5
 800f418:	4790      	blx	r2
 800f41a:	9b05      	ldr	r3, [sp, #20]
 800f41c:	616b      	str	r3, [r5, #20]
 800f41e:	4652      	mov	r2, sl
 800f420:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 800f424:	4649      	mov	r1, r9
 800f426:	4628      	mov	r0, r5
 800f428:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800f42c:	f7f3 f825 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 800f430:	4b23      	ldr	r3, [pc, #140]	; (800f4c0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800f432:	9a01      	ldr	r2, [sp, #4]
 800f434:	801a      	strh	r2, [r3, #0]
 800f436:	4b23      	ldr	r3, [pc, #140]	; (800f4c4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800f438:	9a02      	ldr	r2, [sp, #8]
 800f43a:	801a      	strh	r2, [r3, #0]
 800f43c:	4b1d      	ldr	r3, [pc, #116]	; (800f4b4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800f43e:	9a03      	ldr	r2, [sp, #12]
 800f440:	801a      	strh	r2, [r3, #0]
 800f442:	4b1d      	ldr	r3, [pc, #116]	; (800f4b8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800f444:	9a04      	ldr	r2, [sp, #16]
 800f446:	801a      	strh	r2, [r3, #0]
 800f448:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800f44c:	6823      	ldr	r3, [r4, #0]
 800f44e:	4620      	mov	r0, r4
 800f450:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f452:	4798      	blx	r3
 800f454:	6823      	ldr	r3, [r4, #0]
 800f456:	4620      	mov	r0, r4
 800f458:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f45a:	4798      	blx	r3
 800f45c:	b00f      	add	sp, #60	; 0x3c
 800f45e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f462:	883b      	ldrh	r3, [r7, #0]
 800f464:	f8ab 0000 	strh.w	r0, [fp]
 800f468:	f8aa 3000 	strh.w	r3, [sl]
 800f46c:	e789      	b.n	800f382 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800f46e:	462a      	mov	r2, r5
 800f470:	ab0a      	add	r3, sp, #40	; 0x28
 800f472:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800f476:	6851      	ldr	r1, [r2, #4]
 800f478:	c303      	stmia	r3!, {r0, r1}
 800f47a:	e7a9      	b.n	800f3d0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800f47c:	a807      	add	r0, sp, #28
 800f47e:	f008 f84d 	bl	801751c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800f482:	4606      	mov	r6, r0
 800f484:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800f486:	6803      	ldr	r3, [r0, #0]
 800f488:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f48a:	4798      	blx	r3
 800f48c:	4286      	cmp	r6, r0
 800f48e:	d1b8      	bne.n	800f402 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800f490:	f7f3 fd1c 	bl	8002ecc <_ZN8touchgfx3HAL3lcdEv>
 800f494:	6803      	ldr	r3, [r0, #0]
 800f496:	4606      	mov	r6, r0
 800f498:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800f49a:	9305      	str	r3, [sp, #20]
 800f49c:	a807      	add	r0, sp, #28
 800f49e:	f008 f83d 	bl	801751c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800f4a2:	9b05      	ldr	r3, [sp, #20]
 800f4a4:	4601      	mov	r1, r0
 800f4a6:	4630      	mov	r0, r6
 800f4a8:	4798      	blx	r3
 800f4aa:	f080 0001 	eor.w	r0, r0, #1
 800f4ae:	b2c0      	uxtb	r0, r0
 800f4b0:	e7a8      	b.n	800f404 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800f4b2:	bf00      	nop
 800f4b4:	200137b0 	.word	0x200137b0
 800f4b8:	200137b2 	.word	0x200137b2
 800f4bc:	200137b4 	.word	0x200137b4
 800f4c0:	200137b6 	.word	0x200137b6
 800f4c4:	200137b8 	.word	0x200137b8

0800f4c8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800f4c8:	b510      	push	{r4, lr}
 800f4ca:	4b07      	ldr	r3, [pc, #28]	; (800f4e8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800f4cc:	781b      	ldrb	r3, [r3, #0]
 800f4ce:	4604      	mov	r4, r0
 800f4d0:	b13b      	cbz	r3, 800f4e2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800f4d2:	6803      	ldr	r3, [r0, #0]
 800f4d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f4d6:	4798      	blx	r3
 800f4d8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800f4da:	4283      	cmp	r3, r0
 800f4dc:	d101      	bne.n	800f4e2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800f4de:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800f4e0:	bd10      	pop	{r4, pc}
 800f4e2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800f4e4:	e7fc      	b.n	800f4e0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800f4e6:	bf00      	nop
 800f4e8:	200137ba 	.word	0x200137ba

0800f4ec <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800f4ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f4f0:	b08a      	sub	sp, #40	; 0x28
 800f4f2:	461d      	mov	r5, r3
 800f4f4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800f4f8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800f4fc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800f500:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f504:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800f508:	f8ad 301a 	strh.w	r3, [sp, #26]
 800f50c:	2400      	movs	r4, #0
 800f50e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800f512:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800f516:	f8ad 301c 	strh.w	r3, [sp, #28]
 800f51a:	4690      	mov	r8, r2
 800f51c:	4607      	mov	r7, r0
 800f51e:	9404      	str	r4, [sp, #16]
 800f520:	f88d 4020 	strb.w	r4, [sp, #32]
 800f524:	f7ff ffd0 	bl	800f4c8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f528:	fb06 8505 	mla	r5, r6, r5, r8
 800f52c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800f530:	6878      	ldr	r0, [r7, #4]
 800f532:	9505      	str	r5, [sp, #20]
 800f534:	f8ad 601e 	strh.w	r6, [sp, #30]
 800f538:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800f53c:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 800f540:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800f544:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800f548:	6803      	ldr	r3, [r0, #0]
 800f54a:	a901      	add	r1, sp, #4
 800f54c:	685b      	ldr	r3, [r3, #4]
 800f54e:	4798      	blx	r3
 800f550:	b00a      	add	sp, #40	; 0x28
 800f552:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f556 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800f556:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f55a:	b08b      	sub	sp, #44	; 0x2c
 800f55c:	2400      	movs	r4, #0
 800f55e:	461d      	mov	r5, r3
 800f560:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800f564:	4688      	mov	r8, r1
 800f566:	4691      	mov	r9, r2
 800f568:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 800f56c:	9404      	str	r4, [sp, #16]
 800f56e:	4607      	mov	r7, r0
 800f570:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800f574:	f7ff ffa8 	bl	800f4c8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f578:	fb06 9505 	mla	r5, r6, r5, r9
 800f57c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800f580:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f584:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800f588:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800f58c:	6878      	ldr	r0, [r7, #4]
 800f58e:	9505      	str	r5, [sp, #20]
 800f590:	f8ad 301a 	strh.w	r3, [sp, #26]
 800f594:	f8ad 401c 	strh.w	r4, [sp, #28]
 800f598:	f8ad 601e 	strh.w	r6, [sp, #30]
 800f59c:	f8cd 8010 	str.w	r8, [sp, #16]
 800f5a0:	f8ad 4020 	strh.w	r4, [sp, #32]
 800f5a4:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800f5a8:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800f5ac:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800f5b0:	6803      	ldr	r3, [r0, #0]
 800f5b2:	a901      	add	r1, sp, #4
 800f5b4:	685b      	ldr	r3, [r3, #4]
 800f5b6:	4798      	blx	r3
 800f5b8:	b00b      	add	sp, #44	; 0x2c
 800f5ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800f5c0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800f5c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f5c4:	b08a      	sub	sp, #40	; 0x28
 800f5c6:	4698      	mov	r8, r3
 800f5c8:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 800f5cc:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 800f5d0:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 800f5d4:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 800f5d8:	2300      	movs	r3, #0
 800f5da:	2d0b      	cmp	r5, #11
 800f5dc:	4606      	mov	r6, r0
 800f5de:	9304      	str	r3, [sp, #16]
 800f5e0:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 800f5e4:	d138      	bne.n	800f658 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800f5e6:	2380      	movs	r3, #128	; 0x80
 800f5e8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800f5ec:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800f5f0:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f5f4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800f5f8:	f8ad 301a 	strh.w	r3, [sp, #26]
 800f5fc:	f88d 0020 	strb.w	r0, [sp, #32]
 800f600:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800f604:	f8ad 301c 	strh.w	r3, [sp, #28]
 800f608:	4630      	mov	r0, r6
 800f60a:	9203      	str	r2, [sp, #12]
 800f60c:	f7ff ff5c 	bl	800f4c8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f610:	2c0b      	cmp	r4, #11
 800f612:	bf98      	it	ls
 800f614:	4b1b      	ldrls	r3, [pc, #108]	; (800f684 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800f616:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800f61a:	bf98      	it	ls
 800f61c:	5d19      	ldrbls	r1, [r3, r4]
 800f61e:	f8ad 701e 	strh.w	r7, [sp, #30]
 800f622:	bf88      	it	hi
 800f624:	2100      	movhi	r1, #0
 800f626:	fb02 8307 	mla	r3, r2, r7, r8
 800f62a:	10c9      	asrs	r1, r1, #3
 800f62c:	fb01 0003 	mla	r0, r1, r3, r0
 800f630:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 800f634:	9005      	str	r0, [sp, #20]
 800f636:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800f63a:	6870      	ldr	r0, [r6, #4]
 800f63c:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 800f640:	2300      	movs	r3, #0
 800f642:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800f646:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800f64a:	6803      	ldr	r3, [r0, #0]
 800f64c:	a901      	add	r1, sp, #4
 800f64e:	685b      	ldr	r3, [r3, #4]
 800f650:	4798      	blx	r3
 800f652:	b00a      	add	sp, #40	; 0x28
 800f654:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f658:	2d02      	cmp	r5, #2
 800f65a:	d109      	bne.n	800f670 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800f65c:	28ff      	cmp	r0, #255	; 0xff
 800f65e:	d105      	bne.n	800f66c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800f660:	f1bc 0f00 	cmp.w	ip, #0
 800f664:	bf14      	ite	ne
 800f666:	2340      	movne	r3, #64	; 0x40
 800f668:	2320      	moveq	r3, #32
 800f66a:	e7bd      	b.n	800f5e8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800f66c:	2340      	movs	r3, #64	; 0x40
 800f66e:	e7bb      	b.n	800f5e8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800f670:	28ff      	cmp	r0, #255	; 0xff
 800f672:	d105      	bne.n	800f680 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800f674:	f1bc 0f00 	cmp.w	ip, #0
 800f678:	bf14      	ite	ne
 800f67a:	2304      	movne	r3, #4
 800f67c:	2301      	moveq	r3, #1
 800f67e:	e7b3      	b.n	800f5e8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800f680:	2304      	movs	r3, #4
 800f682:	e7b1      	b.n	800f5e8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800f684:	0802b210 	.word	0x0802b210

0800f688 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800f688:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f68c:	b08b      	sub	sp, #44	; 0x2c
 800f68e:	461d      	mov	r5, r3
 800f690:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800f694:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 800f698:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 800f69c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 800f6a0:	bf14      	ite	ne
 800f6a2:	2308      	movne	r3, #8
 800f6a4:	2302      	moveq	r3, #2
 800f6a6:	2400      	movs	r4, #0
 800f6a8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800f6ac:	4688      	mov	r8, r1
 800f6ae:	4693      	mov	fp, r2
 800f6b0:	9404      	str	r4, [sp, #16]
 800f6b2:	4607      	mov	r7, r0
 800f6b4:	f7ff ff08 	bl	800f4c8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f6b8:	2e0b      	cmp	r6, #11
 800f6ba:	bf98      	it	ls
 800f6bc:	4b15      	ldrls	r3, [pc, #84]	; (800f714 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800f6be:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800f6c2:	bf98      	it	ls
 800f6c4:	5d9c      	ldrbls	r4, [r3, r6]
 800f6c6:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800f6ca:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f6ce:	fb05 b50a 	mla	r5, r5, sl, fp
 800f6d2:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800f6d6:	f8ad 301a 	strh.w	r3, [sp, #26]
 800f6da:	10e4      	asrs	r4, r4, #3
 800f6dc:	fb04 0405 	mla	r4, r4, r5, r0
 800f6e0:	2300      	movs	r3, #0
 800f6e2:	6878      	ldr	r0, [r7, #4]
 800f6e4:	9405      	str	r4, [sp, #20]
 800f6e6:	f8ad 301c 	strh.w	r3, [sp, #28]
 800f6ea:	f8ad a01e 	strh.w	sl, [sp, #30]
 800f6ee:	f8cd 8010 	str.w	r8, [sp, #16]
 800f6f2:	f88d 9020 	strb.w	r9, [sp, #32]
 800f6f6:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 800f6fa:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800f6fe:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 800f702:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 800f706:	6803      	ldr	r3, [r0, #0]
 800f708:	a901      	add	r1, sp, #4
 800f70a:	685b      	ldr	r3, [r3, #4]
 800f70c:	4798      	blx	r3
 800f70e:	b00b      	add	sp, #44	; 0x2c
 800f710:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f714:	0802b210 	.word	0x0802b210

0800f718 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800f718:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f71c:	461e      	mov	r6, r3
 800f71e:	4b0a      	ldr	r3, [pc, #40]	; (800f748 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800f720:	460f      	mov	r7, r1
 800f722:	881d      	ldrh	r5, [r3, #0]
 800f724:	4690      	mov	r8, r2
 800f726:	f7f3 fbd1 	bl	8002ecc <_ZN8touchgfx3HAL3lcdEv>
 800f72a:	6803      	ldr	r3, [r0, #0]
 800f72c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f72e:	4798      	blx	r3
 800f730:	280b      	cmp	r0, #11
 800f732:	bf9a      	itte	ls
 800f734:	4b05      	ldrls	r3, [pc, #20]	; (800f74c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800f736:	5c1c      	ldrbls	r4, [r3, r0]
 800f738:	2400      	movhi	r4, #0
 800f73a:	fb08 7005 	mla	r0, r8, r5, r7
 800f73e:	10e4      	asrs	r4, r4, #3
 800f740:	fb04 6000 	mla	r0, r4, r0, r6
 800f744:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f748:	200137b6 	.word	0x200137b6
 800f74c:	0802b210 	.word	0x0802b210

0800f750 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800f750:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f752:	b08b      	sub	sp, #44	; 0x2c
 800f754:	461f      	mov	r7, r3
 800f756:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800f75a:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800f75e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800f762:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f766:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800f76a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800f76e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800f772:	f8ad 301c 	strh.w	r3, [sp, #28]
 800f776:	2500      	movs	r5, #0
 800f778:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800f77c:	f88d 3020 	strb.w	r3, [sp, #32]
 800f780:	4604      	mov	r4, r0
 800f782:	4616      	mov	r6, r2
 800f784:	9504      	str	r5, [sp, #16]
 800f786:	f7ff fe9f 	bl	800f4c8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f78a:	463a      	mov	r2, r7
 800f78c:	4631      	mov	r1, r6
 800f78e:	4603      	mov	r3, r0
 800f790:	4620      	mov	r0, r4
 800f792:	f7ff ffc1 	bl	800f718 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800f796:	4b0e      	ldr	r3, [pc, #56]	; (800f7d0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800f798:	9005      	str	r0, [sp, #20]
 800f79a:	881b      	ldrh	r3, [r3, #0]
 800f79c:	f8ad 301e 	strh.w	r3, [sp, #30]
 800f7a0:	f7f3 fb94 	bl	8002ecc <_ZN8touchgfx3HAL3lcdEv>
 800f7a4:	6803      	ldr	r3, [r0, #0]
 800f7a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f7a8:	4798      	blx	r3
 800f7aa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800f7ac:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800f7b0:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800f7b4:	9304      	str	r3, [sp, #16]
 800f7b6:	6860      	ldr	r0, [r4, #4]
 800f7b8:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800f7bc:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800f7c0:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 800f7c4:	6803      	ldr	r3, [r0, #0]
 800f7c6:	a901      	add	r1, sp, #4
 800f7c8:	685b      	ldr	r3, [r3, #4]
 800f7ca:	4798      	blx	r3
 800f7cc:	b00b      	add	sp, #44	; 0x2c
 800f7ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f7d0:	200137b6 	.word	0x200137b6

0800f7d4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800f7d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f7d6:	b08d      	sub	sp, #52	; 0x34
 800f7d8:	466b      	mov	r3, sp
 800f7da:	e883 0006 	stmia.w	r3, {r1, r2}
 800f7de:	2300      	movs	r3, #0
 800f7e0:	9306      	str	r3, [sp, #24]
 800f7e2:	6803      	ldr	r3, [r0, #0]
 800f7e4:	f8bd 6000 	ldrh.w	r6, [sp]
 800f7e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f7ea:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800f7ee:	2501      	movs	r5, #1
 800f7f0:	9503      	str	r5, [sp, #12]
 800f7f2:	4604      	mov	r4, r0
 800f7f4:	4798      	blx	r3
 800f7f6:	463a      	mov	r2, r7
 800f7f8:	4631      	mov	r1, r6
 800f7fa:	4603      	mov	r3, r0
 800f7fc:	4620      	mov	r0, r4
 800f7fe:	f7ff ff8b 	bl	800f718 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800f802:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800f804:	9307      	str	r3, [sp, #28]
 800f806:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800f80a:	f8ad 3020 	strh.w	r3, [sp, #32]
 800f80e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800f812:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800f816:	4b0f      	ldr	r3, [pc, #60]	; (800f854 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800f818:	9004      	str	r0, [sp, #16]
 800f81a:	881b      	ldrh	r3, [r3, #0]
 800f81c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800f820:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800f824:	f7f3 fb52 	bl	8002ecc <_ZN8touchgfx3HAL3lcdEv>
 800f828:	6803      	ldr	r3, [r0, #0]
 800f82a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f82c:	4798      	blx	r3
 800f82e:	23ff      	movs	r3, #255	; 0xff
 800f830:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800f834:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800f838:	6860      	ldr	r0, [r4, #4]
 800f83a:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800f83e:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800f842:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800f846:	6803      	ldr	r3, [r0, #0]
 800f848:	a903      	add	r1, sp, #12
 800f84a:	685b      	ldr	r3, [r3, #4]
 800f84c:	4798      	blx	r3
 800f84e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800f850:	b00d      	add	sp, #52	; 0x34
 800f852:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f854:	200137b6 	.word	0x200137b6

0800f858 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800f858:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f85c:	b08c      	sub	sp, #48	; 0x30
 800f85e:	461e      	mov	r6, r3
 800f860:	466d      	mov	r5, sp
 800f862:	2300      	movs	r3, #0
 800f864:	e885 0006 	stmia.w	r5, {r1, r2}
 800f868:	9306      	str	r3, [sp, #24]
 800f86a:	6803      	ldr	r3, [r0, #0]
 800f86c:	f8bd 7000 	ldrh.w	r7, [sp]
 800f870:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f872:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800f876:	2501      	movs	r5, #1
 800f878:	9503      	str	r5, [sp, #12]
 800f87a:	4604      	mov	r4, r0
 800f87c:	4798      	blx	r3
 800f87e:	4642      	mov	r2, r8
 800f880:	4639      	mov	r1, r7
 800f882:	4603      	mov	r3, r0
 800f884:	4620      	mov	r0, r4
 800f886:	f7ff ff47 	bl	800f718 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800f88a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800f88e:	f8ad 3020 	strh.w	r3, [sp, #32]
 800f892:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800f896:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800f89a:	4b11      	ldr	r3, [pc, #68]	; (800f8e0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800f89c:	9004      	str	r0, [sp, #16]
 800f89e:	881b      	ldrh	r3, [r3, #0]
 800f8a0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800f8a4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800f8a6:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800f8aa:	9607      	str	r6, [sp, #28]
 800f8ac:	f7f3 fb0e 	bl	8002ecc <_ZN8touchgfx3HAL3lcdEv>
 800f8b0:	6803      	ldr	r3, [r0, #0]
 800f8b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f8b4:	4798      	blx	r3
 800f8b6:	23ff      	movs	r3, #255	; 0xff
 800f8b8:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800f8bc:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800f8c0:	6860      	ldr	r0, [r4, #4]
 800f8c2:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800f8c6:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800f8ca:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800f8ce:	6803      	ldr	r3, [r0, #0]
 800f8d0:	a903      	add	r1, sp, #12
 800f8d2:	685b      	ldr	r3, [r3, #4]
 800f8d4:	4798      	blx	r3
 800f8d6:	4630      	mov	r0, r6
 800f8d8:	b00c      	add	sp, #48	; 0x30
 800f8da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f8de:	bf00      	nop
 800f8e0:	200137b6 	.word	0x200137b6

0800f8e4 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800f8e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f8e6:	b085      	sub	sp, #20
 800f8e8:	ac02      	add	r4, sp, #8
 800f8ea:	e884 0006 	stmia.w	r4, {r1, r2}
 800f8ee:	4605      	mov	r5, r0
 800f8f0:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800f8f4:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800f8f8:	f7ff fde6 	bl	800f4c8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f8fc:	463a      	mov	r2, r7
 800f8fe:	4603      	mov	r3, r0
 800f900:	4631      	mov	r1, r6
 800f902:	4628      	mov	r0, r5
 800f904:	f7ff ff08 	bl	800f718 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800f908:	4a05      	ldr	r2, [pc, #20]	; (800f920 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800f90a:	682b      	ldr	r3, [r5, #0]
 800f90c:	8812      	ldrh	r2, [r2, #0]
 800f90e:	9200      	str	r2, [sp, #0]
 800f910:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 800f912:	e894 0006 	ldmia.w	r4, {r1, r2}
 800f916:	4603      	mov	r3, r0
 800f918:	4628      	mov	r0, r5
 800f91a:	47b0      	blx	r6
 800f91c:	b005      	add	sp, #20
 800f91e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f920:	200137b6 	.word	0x200137b6

0800f924 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800f924:	b570      	push	{r4, r5, r6, lr}
 800f926:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 800f92a:	4604      	mov	r4, r0
 800f92c:	b19b      	cbz	r3, 800f956 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800f92e:	2002      	movs	r0, #2
 800f930:	f7f0 ff4c 	bl	80007cc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800f934:	2300      	movs	r3, #0
 800f936:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 800f93a:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 800f93e:	6823      	ldr	r3, [r4, #0]
 800f940:	4620      	mov	r0, r4
 800f942:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800f946:	f7ff fdbf 	bl	800f4c8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f94a:	462b      	mov	r3, r5
 800f94c:	4601      	mov	r1, r0
 800f94e:	4620      	mov	r0, r4
 800f950:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f954:	4718      	bx	r3
 800f956:	bd70      	pop	{r4, r5, r6, pc}

0800f958 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800f958:	b538      	push	{r3, r4, r5, lr}
 800f95a:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 800f95e:	428b      	cmp	r3, r1
 800f960:	4604      	mov	r4, r0
 800f962:	460d      	mov	r5, r1
 800f964:	d006      	beq.n	800f974 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800f966:	6803      	ldr	r3, [r0, #0]
 800f968:	b929      	cbnz	r1, 800f976 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800f96a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800f96e:	4798      	blx	r3
 800f970:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 800f974:	bd38      	pop	{r3, r4, r5, pc}
 800f976:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800f97a:	e7f8      	b.n	800f96e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800f97c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800f97c:	b510      	push	{r4, lr}
 800f97e:	4b0d      	ldr	r3, [pc, #52]	; (800f9b4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800f980:	781b      	ldrb	r3, [r3, #0]
 800f982:	4604      	mov	r4, r0
 800f984:	b95b      	cbnz	r3, 800f99e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800f986:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800f98a:	2b02      	cmp	r3, #2
 800f98c:	d007      	beq.n	800f99e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800f98e:	6840      	ldr	r0, [r0, #4]
 800f990:	f000 f92c 	bl	800fbec <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800f994:	b118      	cbz	r0, 800f99e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800f996:	6862      	ldr	r2, [r4, #4]
 800f998:	7a53      	ldrb	r3, [r2, #9]
 800f99a:	2b00      	cmp	r3, #0
 800f99c:	d0fc      	beq.n	800f998 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800f99e:	f7f1 f84d 	bl	8000a3c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800f9a2:	4620      	mov	r0, r4
 800f9a4:	2100      	movs	r1, #0
 800f9a6:	f7ff ffd7 	bl	800f958 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800f9aa:	4620      	mov	r0, r4
 800f9ac:	f7ff fd8c 	bl	800f4c8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f9b0:	bd10      	pop	{r4, pc}
 800f9b2:	bf00      	nop
 800f9b4:	200137ba 	.word	0x200137ba

0800f9b8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800f9b8:	b570      	push	{r4, r5, r6, lr}
 800f9ba:	4604      	mov	r4, r0
 800f9bc:	6803      	ldr	r3, [r0, #0]
 800f9be:	b919      	cbnz	r1, 800f9c8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800f9c0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f9c2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f9c6:	4718      	bx	r3
 800f9c8:	2200      	movs	r2, #0
 800f9ca:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 800f9ce:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 800f9d2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f9d4:	4798      	blx	r3
 800f9d6:	6863      	ldr	r3, [r4, #4]
 800f9d8:	2101      	movs	r1, #1
 800f9da:	4605      	mov	r5, r0
 800f9dc:	7299      	strb	r1, [r3, #10]
 800f9de:	4620      	mov	r0, r4
 800f9e0:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 800f9e4:	f7ff ffb8 	bl	800f958 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800f9e8:	4628      	mov	r0, r5
 800f9ea:	bd70      	pop	{r4, r5, r6, pc}

0800f9ec <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800f9ec:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800f9f0:	1a13      	subs	r3, r2, r0
 800f9f2:	4258      	negs	r0, r3
 800f9f4:	4158      	adcs	r0, r3
 800f9f6:	4770      	bx	lr

0800f9f8 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800f9f8:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800f9fc:	1a9b      	subs	r3, r3, r2
 800f9fe:	2b00      	cmp	r3, #0
 800fa00:	bfdc      	itt	le
 800fa02:	6882      	ldrle	r2, [r0, #8]
 800fa04:	189b      	addle	r3, r3, r2
 800fa06:	2b01      	cmp	r3, #1
 800fa08:	bfcc      	ite	gt
 800fa0a:	2000      	movgt	r0, #0
 800fa0c:	2001      	movle	r0, #1
 800fa0e:	4770      	bx	lr

0800fa10 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800fa10:	6902      	ldr	r2, [r0, #16]
 800fa12:	6843      	ldr	r3, [r0, #4]
 800fa14:	2024      	movs	r0, #36	; 0x24
 800fa16:	fb00 3002 	mla	r0, r0, r2, r3
 800fa1a:	4770      	bx	lr

0800fa1c <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800fa1c:	6803      	ldr	r3, [r0, #0]
 800fa1e:	691b      	ldr	r3, [r3, #16]
 800fa20:	4718      	bx	r3

0800fa22 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800fa22:	b570      	push	{r4, r5, r6, lr}
 800fa24:	2301      	movs	r3, #1
 800fa26:	7203      	strb	r3, [r0, #8]
 800fa28:	4604      	mov	r4, r0
 800fa2a:	6840      	ldr	r0, [r0, #4]
 800fa2c:	6803      	ldr	r3, [r0, #0]
 800fa2e:	699b      	ldr	r3, [r3, #24]
 800fa30:	4798      	blx	r3
 800fa32:	6803      	ldr	r3, [r0, #0]
 800fa34:	2b40      	cmp	r3, #64	; 0x40
 800fa36:	4605      	mov	r5, r0
 800fa38:	d00c      	beq.n	800fa54 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800fa3a:	d810      	bhi.n	800fa5e <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800fa3c:	2b04      	cmp	r3, #4
 800fa3e:	d01d      	beq.n	800fa7c <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800fa40:	d804      	bhi.n	800fa4c <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800fa42:	2b01      	cmp	r3, #1
 800fa44:	d006      	beq.n	800fa54 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800fa46:	2b02      	cmp	r3, #2
 800fa48:	d02c      	beq.n	800faa4 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800fa4a:	bd70      	pop	{r4, r5, r6, pc}
 800fa4c:	2b08      	cmp	r3, #8
 800fa4e:	d01d      	beq.n	800fa8c <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800fa50:	2b20      	cmp	r3, #32
 800fa52:	d1fa      	bne.n	800fa4a <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800fa54:	6823      	ldr	r3, [r4, #0]
 800fa56:	4620      	mov	r0, r4
 800fa58:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800fa5a:	4798      	blx	r3
 800fa5c:	e013      	b.n	800fa86 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800fa5e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800fa62:	d0f7      	beq.n	800fa54 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800fa64:	d804      	bhi.n	800fa70 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800fa66:	2b80      	cmp	r3, #128	; 0x80
 800fa68:	d0f4      	beq.n	800fa54 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800fa6a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800fa6e:	e7f0      	b.n	800fa52 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800fa70:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800fa74:	d0ee      	beq.n	800fa54 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800fa76:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800fa7a:	e7e5      	b.n	800fa48 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800fa7c:	6823      	ldr	r3, [r4, #0]
 800fa7e:	7f01      	ldrb	r1, [r0, #28]
 800fa80:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800fa82:	4620      	mov	r0, r4
 800fa84:	4798      	blx	r3
 800fa86:	6823      	ldr	r3, [r4, #0]
 800fa88:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800fa8a:	e006      	b.n	800fa9a <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800fa8c:	6823      	ldr	r3, [r4, #0]
 800fa8e:	7f01      	ldrb	r1, [r0, #28]
 800fa90:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800fa92:	4620      	mov	r0, r4
 800fa94:	4798      	blx	r3
 800fa96:	6823      	ldr	r3, [r4, #0]
 800fa98:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800fa9a:	4629      	mov	r1, r5
 800fa9c:	4620      	mov	r0, r4
 800fa9e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800faa2:	4718      	bx	r3
 800faa4:	6823      	ldr	r3, [r4, #0]
 800faa6:	4620      	mov	r0, r4
 800faa8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800faaa:	4798      	blx	r3
 800faac:	e7f3      	b.n	800fa96 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800faae <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800faae:	4770      	bx	lr

0800fab0 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800fab0:	4770      	bx	lr

0800fab2 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800fab2:	4770      	bx	lr

0800fab4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800fab4:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800fab8:	1ad2      	subs	r2, r2, r3
 800faba:	2a00      	cmp	r2, #0
 800fabc:	b510      	push	{r4, lr}
 800fabe:	bfdc      	itt	le
 800fac0:	6884      	ldrle	r4, [r0, #8]
 800fac2:	1912      	addle	r2, r2, r4
 800fac4:	2a01      	cmp	r2, #1
 800fac6:	dd16      	ble.n	800faf6 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800fac8:	6842      	ldr	r2, [r0, #4]
 800faca:	2424      	movs	r4, #36	; 0x24
 800facc:	fb04 2303 	mla	r3, r4, r3, r2
 800fad0:	f101 0220 	add.w	r2, r1, #32
 800fad4:	f851 4b04 	ldr.w	r4, [r1], #4
 800fad8:	f843 4b04 	str.w	r4, [r3], #4
 800fadc:	4291      	cmp	r1, r2
 800fade:	d1f9      	bne.n	800fad4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800fae0:	780a      	ldrb	r2, [r1, #0]
 800fae2:	701a      	strb	r2, [r3, #0]
 800fae4:	68c3      	ldr	r3, [r0, #12]
 800fae6:	6882      	ldr	r2, [r0, #8]
 800fae8:	f3bf 8f5b 	dmb	ish
 800faec:	3301      	adds	r3, #1
 800faee:	429a      	cmp	r2, r3
 800faf0:	bfd8      	it	le
 800faf2:	1a9b      	suble	r3, r3, r2
 800faf4:	60c3      	str	r3, [r0, #12]
 800faf6:	bd10      	pop	{r4, pc}

0800faf8 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800faf8:	6903      	ldr	r3, [r0, #16]
 800fafa:	6882      	ldr	r2, [r0, #8]
 800fafc:	f3bf 8f5b 	dmb	ish
 800fb00:	3301      	adds	r3, #1
 800fb02:	429a      	cmp	r2, r3
 800fb04:	bfd8      	it	le
 800fb06:	1a9b      	suble	r3, r3, r2
 800fb08:	6103      	str	r3, [r0, #16]
 800fb0a:	4770      	bx	lr

0800fb0c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800fb0c:	b570      	push	{r4, r5, r6, lr}
 800fb0e:	4604      	mov	r4, r0
 800fb10:	460e      	mov	r6, r1
 800fb12:	6860      	ldr	r0, [r4, #4]
 800fb14:	6803      	ldr	r3, [r0, #0]
 800fb16:	685b      	ldr	r3, [r3, #4]
 800fb18:	4798      	blx	r3
 800fb1a:	2800      	cmp	r0, #0
 800fb1c:	d1f9      	bne.n	800fb12 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800fb1e:	4d0d      	ldr	r5, [pc, #52]	; (800fb54 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800fb20:	6828      	ldr	r0, [r5, #0]
 800fb22:	6803      	ldr	r3, [r0, #0]
 800fb24:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800fb26:	4798      	blx	r3
 800fb28:	f7f0 ff96 	bl	8000a58 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800fb2c:	6828      	ldr	r0, [r5, #0]
 800fb2e:	2101      	movs	r1, #1
 800fb30:	f7ff ff12 	bl	800f958 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800fb34:	6860      	ldr	r0, [r4, #4]
 800fb36:	6803      	ldr	r3, [r0, #0]
 800fb38:	4631      	mov	r1, r6
 800fb3a:	689b      	ldr	r3, [r3, #8]
 800fb3c:	4798      	blx	r3
 800fb3e:	6823      	ldr	r3, [r4, #0]
 800fb40:	4620      	mov	r0, r4
 800fb42:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fb44:	4798      	blx	r3
 800fb46:	6828      	ldr	r0, [r5, #0]
 800fb48:	6803      	ldr	r3, [r0, #0]
 800fb4a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fb4e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800fb50:	4718      	bx	r3
 800fb52:	bf00      	nop
 800fb54:	200137bc 	.word	0x200137bc

0800fb58 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800fb58:	b508      	push	{r3, lr}
 800fb5a:	f7f0 ff6f 	bl	8000a3c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800fb5e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800fb62:	f7f0 bf73 	b.w	8000a4c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800fb66 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800fb66:	b510      	push	{r4, lr}
 800fb68:	2114      	movs	r1, #20
 800fb6a:	4604      	mov	r4, r0
 800fb6c:	f016 fea7 	bl	80268be <_ZdlPvj>
 800fb70:	4620      	mov	r0, r4
 800fb72:	bd10      	pop	{r4, pc}

0800fb74 <_ZN8touchgfx13DMA_Interface5startEv>:
 800fb74:	b510      	push	{r4, lr}
 800fb76:	4604      	mov	r4, r0
 800fb78:	6840      	ldr	r0, [r0, #4]
 800fb7a:	6803      	ldr	r3, [r0, #0]
 800fb7c:	681b      	ldr	r3, [r3, #0]
 800fb7e:	4798      	blx	r3
 800fb80:	b948      	cbnz	r0, 800fb96 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800fb82:	7a63      	ldrb	r3, [r4, #9]
 800fb84:	b13b      	cbz	r3, 800fb96 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800fb86:	7a23      	ldrb	r3, [r4, #8]
 800fb88:	b92b      	cbnz	r3, 800fb96 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800fb8a:	6823      	ldr	r3, [r4, #0]
 800fb8c:	4620      	mov	r0, r4
 800fb8e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fb90:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fb94:	4718      	bx	r3
 800fb96:	bd10      	pop	{r4, pc}

0800fb98 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800fb98:	b570      	push	{r4, r5, r6, lr}
 800fb9a:	4604      	mov	r4, r0
 800fb9c:	6840      	ldr	r0, [r0, #4]
 800fb9e:	6803      	ldr	r3, [r0, #0]
 800fba0:	681b      	ldr	r3, [r3, #0]
 800fba2:	4798      	blx	r3
 800fba4:	4605      	mov	r5, r0
 800fba6:	b930      	cbnz	r0, 800fbb6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800fba8:	7a23      	ldrb	r3, [r4, #8]
 800fbaa:	b123      	cbz	r3, 800fbb6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800fbac:	6860      	ldr	r0, [r4, #4]
 800fbae:	6803      	ldr	r3, [r0, #0]
 800fbb0:	695b      	ldr	r3, [r3, #20]
 800fbb2:	4798      	blx	r3
 800fbb4:	7225      	strb	r5, [r4, #8]
 800fbb6:	6860      	ldr	r0, [r4, #4]
 800fbb8:	6803      	ldr	r3, [r0, #0]
 800fbba:	681b      	ldr	r3, [r3, #0]
 800fbbc:	4798      	blx	r3
 800fbbe:	b928      	cbnz	r0, 800fbcc <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800fbc0:	6823      	ldr	r3, [r4, #0]
 800fbc2:	4620      	mov	r0, r4
 800fbc4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fbc6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fbca:	4718      	bx	r3
 800fbcc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fbd0:	f7f0 bf4a 	b.w	8000a68 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800fbd4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800fbd4:	b510      	push	{r4, lr}
 800fbd6:	4c04      	ldr	r4, [pc, #16]	; (800fbe8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800fbd8:	6082      	str	r2, [r0, #8]
 800fbda:	2200      	movs	r2, #0
 800fbdc:	e9c0 4100 	strd	r4, r1, [r0]
 800fbe0:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800fbe4:	bd10      	pop	{r4, pc}
 800fbe6:	bf00      	nop
 800fbe8:	0802b224 	.word	0x0802b224

0800fbec <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800fbec:	6840      	ldr	r0, [r0, #4]
 800fbee:	6803      	ldr	r3, [r0, #0]
 800fbf0:	681b      	ldr	r3, [r3, #0]
 800fbf2:	4718      	bx	r3

0800fbf4 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800fbf4:	4b06      	ldr	r3, [pc, #24]	; (800fc10 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 800fbf6:	60c1      	str	r1, [r0, #12]
 800fbf8:	094a      	lsrs	r2, r1, #5
 800fbfa:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 800fbfe:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800fc02:	4313      	orrs	r3, r2
 800fc04:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800fc08:	4319      	orrs	r1, r3
 800fc0a:	8201      	strh	r1, [r0, #16]
 800fc0c:	4770      	bx	lr
 800fc0e:	bf00      	nop
 800fc10:	fffff800 	.word	0xfffff800

0800fc14 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800fc14:	f1a0 0008 	sub.w	r0, r0, #8
 800fc18:	e7ec      	b.n	800fbf4 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 800fc1a:	bf00      	nop

0800fc1c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 800fc1c:	b508      	push	{r3, lr}
 800fc1e:	4b05      	ldr	r3, [pc, #20]	; (800fc34 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 800fc20:	6818      	ldr	r0, [r3, #0]
 800fc22:	6803      	ldr	r3, [r0, #0]
 800fc24:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800fc28:	4798      	blx	r3
 800fc2a:	1e43      	subs	r3, r0, #1
 800fc2c:	4258      	negs	r0, r3
 800fc2e:	4158      	adcs	r0, r3
 800fc30:	bd08      	pop	{r3, pc}
 800fc32:	bf00      	nop
 800fc34:	200137bc 	.word	0x200137bc

0800fc38 <_ZN8touchgfx13PainterRGB565D1Ev>:
 800fc38:	4770      	bx	lr

0800fc3a <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 800fc3a:	3808      	subs	r0, #8
 800fc3c:	4770      	bx	lr

0800fc3e <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 800fc3e:	b430      	push	{r4, r5}
 800fc40:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800fc44:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 800fc48:	8a02      	ldrh	r2, [r0, #16]
 800fc4a:	9202      	str	r2, [sp, #8]
 800fc4c:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800fc50:	68c2      	ldr	r2, [r0, #12]
 800fc52:	4629      	mov	r1, r5
 800fc54:	4620      	mov	r0, r4
 800fc56:	bc30      	pop	{r4, r5}
 800fc58:	f7f1 b8ca 	b.w	8000df0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0800fc5c <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 800fc5c:	f7f1 b8be 	b.w	8000ddc <_ZN8touchgfx5paint8tearDownEv>

0800fc60 <_ZN8touchgfx13PainterRGB565D0Ev>:
 800fc60:	b510      	push	{r4, lr}
 800fc62:	2114      	movs	r1, #20
 800fc64:	4604      	mov	r4, r0
 800fc66:	f016 fe2a 	bl	80268be <_ZdlPvj>
 800fc6a:	4620      	mov	r0, r4
 800fc6c:	bd10      	pop	{r4, pc}

0800fc6e <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 800fc6e:	f1a0 0008 	sub.w	r0, r0, #8
 800fc72:	e7f5      	b.n	800fc60 <_ZN8touchgfx13PainterRGB565D0Ev>

0800fc74 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800fc74:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800fc76:	6803      	ldr	r3, [r0, #0]
 800fc78:	460d      	mov	r5, r1
 800fc7a:	4604      	mov	r4, r0
 800fc7c:	4601      	mov	r1, r0
 800fc7e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800fc80:	a802      	add	r0, sp, #8
 800fc82:	4798      	blx	r3
 800fc84:	6828      	ldr	r0, [r5, #0]
 800fc86:	6869      	ldr	r1, [r5, #4]
 800fc88:	466b      	mov	r3, sp
 800fc8a:	c303      	stmia	r3!, {r0, r1}
 800fc8c:	4668      	mov	r0, sp
 800fc8e:	4619      	mov	r1, r3
 800fc90:	f7fe ffa4 	bl	800ebdc <_ZN8touchgfx4RectaNERKS0_>
 800fc94:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800fc96:	b188      	cbz	r0, 800fcbc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800fc98:	6803      	ldr	r3, [r0, #0]
 800fc9a:	1d21      	adds	r1, r4, #4
 800fc9c:	68db      	ldr	r3, [r3, #12]
 800fc9e:	4798      	blx	r3
 800fca0:	b160      	cbz	r0, 800fcbc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800fca2:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800fca6:	2b00      	cmp	r3, #0
 800fca8:	dd08      	ble.n	800fcbc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800fcaa:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 800fcae:	2d00      	cmp	r5, #0
 800fcb0:	dd04      	ble.n	800fcbc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800fcb2:	4a2b      	ldr	r2, [pc, #172]	; (800fd60 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 800fcb4:	7812      	ldrb	r2, [r2, #0]
 800fcb6:	b11a      	cbz	r2, 800fcc0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 800fcb8:	2a01      	cmp	r2, #1
 800fcba:	d029      	beq.n	800fd10 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 800fcbc:	b004      	add	sp, #16
 800fcbe:	bd70      	pop	{r4, r5, r6, pc}
 800fcc0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800fcc4:	441d      	add	r5, r3
 800fcc6:	b2ad      	uxth	r5, r5
 800fcc8:	b22e      	sxth	r6, r5
 800fcca:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800fcce:	42b3      	cmp	r3, r6
 800fcd0:	daf4      	bge.n	800fcbc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800fcd2:	6823      	ldr	r3, [r4, #0]
 800fcd4:	4669      	mov	r1, sp
 800fcd6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800fcd8:	4620      	mov	r0, r4
 800fcda:	4798      	blx	r3
 800fcdc:	b940      	cbnz	r0, 800fcf0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 800fcde:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800fce2:	2b01      	cmp	r3, #1
 800fce4:	d004      	beq.n	800fcf0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 800fce6:	3301      	adds	r3, #1
 800fce8:	105b      	asrs	r3, r3, #1
 800fcea:	f8ad 3006 	strh.w	r3, [sp, #6]
 800fcee:	e7f0      	b.n	800fcd2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800fcf0:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800fcf4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800fcf8:	4413      	add	r3, r2
 800fcfa:	b29b      	uxth	r3, r3
 800fcfc:	441a      	add	r2, r3
 800fcfe:	b212      	sxth	r2, r2
 800fd00:	4296      	cmp	r6, r2
 800fd02:	f8ad 3002 	strh.w	r3, [sp, #2]
 800fd06:	dae0      	bge.n	800fcca <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 800fd08:	1aeb      	subs	r3, r5, r3
 800fd0a:	f8ad 3006 	strh.w	r3, [sp, #6]
 800fd0e:	e7dc      	b.n	800fcca <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 800fd10:	f8bd 5000 	ldrh.w	r5, [sp]
 800fd14:	441d      	add	r5, r3
 800fd16:	b2ad      	uxth	r5, r5
 800fd18:	b22e      	sxth	r6, r5
 800fd1a:	f9bd 3000 	ldrsh.w	r3, [sp]
 800fd1e:	42b3      	cmp	r3, r6
 800fd20:	dacc      	bge.n	800fcbc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800fd22:	6823      	ldr	r3, [r4, #0]
 800fd24:	4669      	mov	r1, sp
 800fd26:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800fd28:	4620      	mov	r0, r4
 800fd2a:	4798      	blx	r3
 800fd2c:	b940      	cbnz	r0, 800fd40 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 800fd2e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800fd32:	2b01      	cmp	r3, #1
 800fd34:	d004      	beq.n	800fd40 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 800fd36:	3301      	adds	r3, #1
 800fd38:	105b      	asrs	r3, r3, #1
 800fd3a:	f8ad 3004 	strh.w	r3, [sp, #4]
 800fd3e:	e7f0      	b.n	800fd22 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800fd40:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800fd44:	f8bd 3000 	ldrh.w	r3, [sp]
 800fd48:	4413      	add	r3, r2
 800fd4a:	b29b      	uxth	r3, r3
 800fd4c:	441a      	add	r2, r3
 800fd4e:	b212      	sxth	r2, r2
 800fd50:	4296      	cmp	r6, r2
 800fd52:	f8ad 3000 	strh.w	r3, [sp]
 800fd56:	dae0      	bge.n	800fd1a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 800fd58:	1aeb      	subs	r3, r5, r3
 800fd5a:	f8ad 3004 	strh.w	r3, [sp, #4]
 800fd5e:	e7dc      	b.n	800fd1a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 800fd60:	200137b4 	.word	0x200137b4

0800fd64 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800fd64:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800fd66:	6803      	ldr	r3, [r0, #0]
 800fd68:	4604      	mov	r4, r0
 800fd6a:	4601      	mov	r1, r0
 800fd6c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800fd6e:	4668      	mov	r0, sp
 800fd70:	4798      	blx	r3
 800fd72:	2100      	movs	r1, #0
 800fd74:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800fd78:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800fd7c:	9102      	str	r1, [sp, #8]
 800fd7e:	4668      	mov	r0, sp
 800fd80:	a902      	add	r1, sp, #8
 800fd82:	f8ad 200c 	strh.w	r2, [sp, #12]
 800fd86:	f8ad 300e 	strh.w	r3, [sp, #14]
 800fd8a:	f7fe ff27 	bl	800ebdc <_ZN8touchgfx4RectaNERKS0_>
 800fd8e:	6823      	ldr	r3, [r4, #0]
 800fd90:	4669      	mov	r1, sp
 800fd92:	691b      	ldr	r3, [r3, #16]
 800fd94:	4620      	mov	r0, r4
 800fd96:	4798      	blx	r3
 800fd98:	b004      	add	sp, #16
 800fd9a:	bd10      	pop	{r4, pc}

0800fd9c <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800fd9c:	2101      	movs	r1, #1
 800fd9e:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800fda2:	490b      	ldr	r1, [pc, #44]	; (800fdd0 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 800fda4:	6001      	str	r1, [r0, #0]
 800fda6:	2200      	movs	r2, #0
 800fda8:	21ff      	movs	r1, #255	; 0xff
 800fdaa:	8082      	strh	r2, [r0, #4]
 800fdac:	80c2      	strh	r2, [r0, #6]
 800fdae:	8102      	strh	r2, [r0, #8]
 800fdb0:	8142      	strh	r2, [r0, #10]
 800fdb2:	8182      	strh	r2, [r0, #12]
 800fdb4:	81c2      	strh	r2, [r0, #14]
 800fdb6:	8202      	strh	r2, [r0, #16]
 800fdb8:	8242      	strh	r2, [r0, #18]
 800fdba:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800fdbe:	61c2      	str	r2, [r0, #28]
 800fdc0:	8402      	strh	r2, [r0, #32]
 800fdc2:	8442      	strh	r2, [r0, #34]	; 0x22
 800fdc4:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800fdc8:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 800fdcc:	6282      	str	r2, [r0, #40]	; 0x28
 800fdce:	4770      	bx	lr
 800fdd0:	0802b280 	.word	0x0802b280

0800fdd4 <_ZNK8touchgfx4Line14getMinimalRectEv>:
 800fdd4:	f101 0364 	add.w	r3, r1, #100	; 0x64
 800fdd8:	4602      	mov	r2, r0
 800fdda:	cb03      	ldmia	r3!, {r0, r1}
 800fddc:	6010      	str	r0, [r2, #0]
 800fdde:	6051      	str	r1, [r2, #4]
 800fde0:	4610      	mov	r0, r2
 800fde2:	4770      	bx	lr

0800fde4 <_ZN8touchgfx4LineD1Ev>:
 800fde4:	4770      	bx	lr

0800fde6 <_ZN8touchgfx4LineD0Ev>:
 800fde6:	b510      	push	{r4, lr}
 800fde8:	2170      	movs	r1, #112	; 0x70
 800fdea:	4604      	mov	r4, r0
 800fdec:	f016 fd67 	bl	80268be <_ZdlPvj>
 800fdf0:	4620      	mov	r0, r4
 800fdf2:	bd10      	pop	{r4, pc}

0800fdf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 800fdf4:	b507      	push	{r0, r1, r2, lr}
 800fdf6:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 800fdfa:	ab01      	add	r3, sp, #4
 800fdfc:	6809      	ldr	r1, [r1, #0]
 800fdfe:	6800      	ldr	r0, [r0, #0]
 800fe00:	f005 fab4 	bl	801536c <_ZN8touchgfx6muldivElllRl>
 800fe04:	b003      	add	sp, #12
 800fe06:	f85d fb04 	ldr.w	pc, [sp], #4

0800fe0a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 800fe0a:	6800      	ldr	r0, [r0, #0]
 800fe0c:	2800      	cmp	r0, #0
 800fe0e:	bfb9      	ittee	lt
 800fe10:	2320      	movlt	r3, #32
 800fe12:	fb90 f0f3 	sdivlt	r0, r0, r3
 800fe16:	301f      	addge	r0, #31
 800fe18:	1140      	asrge	r0, r0, #5
 800fe1a:	4770      	bx	lr

0800fe1c <_ZNK8touchgfx4Line17invalidateContentEv>:
 800fe1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fe20:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 800fe24:	b089      	sub	sp, #36	; 0x24
 800fe26:	4604      	mov	r4, r0
 800fe28:	b353      	cbz	r3, 800fe80 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 800fe2a:	6803      	ldr	r3, [r0, #0]
 800fe2c:	4601      	mov	r1, r0
 800fe2e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800fe30:	a802      	add	r0, sp, #8
 800fe32:	4798      	blx	r3
 800fe34:	2220      	movs	r2, #32
 800fe36:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 800fe3a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800fe3c:	fb9a f0f2 	sdiv	r0, sl, r2
 800fe40:	fb91 f5f2 	sdiv	r5, r1, r2
 800fe44:	1b40      	subs	r0, r0, r5
 800fe46:	2800      	cmp	r0, #0
 800fe48:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800fe4a:	fb93 f6f2 	sdiv	r6, r3, r2
 800fe4e:	bfb8      	it	lt
 800fe50:	4240      	neglt	r0, r0
 800fe52:	0076      	lsls	r6, r6, #1
 800fe54:	4286      	cmp	r6, r0
 800fe56:	f8d4 b000 	ldr.w	fp, [r4]
 800fe5a:	dc0c      	bgt.n	800fe76 <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 800fe5c:	6b25      	ldr	r5, [r4, #48]	; 0x30
 800fe5e:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 800fe62:	fb95 f0f2 	sdiv	r0, r5, r2
 800fe66:	fb98 f7f2 	sdiv	r7, r8, r2
 800fe6a:	1bc0      	subs	r0, r0, r7
 800fe6c:	2800      	cmp	r0, #0
 800fe6e:	bfb8      	it	lt
 800fe70:	4240      	neglt	r0, r0
 800fe72:	4286      	cmp	r6, r0
 800fe74:	dd07      	ble.n	800fe86 <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 800fe76:	f8db 3010 	ldr.w	r3, [fp, #16]
 800fe7a:	a902      	add	r1, sp, #8
 800fe7c:	4620      	mov	r0, r4
 800fe7e:	4798      	blx	r3
 800fe80:	b009      	add	sp, #36	; 0x24
 800fe82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fe86:	3301      	adds	r3, #1
 800fe88:	2002      	movs	r0, #2
 800fe8a:	f10d 0920 	add.w	r9, sp, #32
 800fe8e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 800fe92:	4103      	asrs	r3, r0
 800fe94:	f849 3d08 	str.w	r3, [r9, #-8]!
 800fe98:	eb01 060a 	add.w	r6, r1, sl
 800fe9c:	eb08 0705 	add.w	r7, r8, r5
 800fea0:	fb96 f6f0 	sdiv	r6, r6, r0
 800fea4:	fb97 f7f0 	sdiv	r7, r7, r0
 800fea8:	4648      	mov	r0, r9
 800feaa:	9101      	str	r1, [sp, #4]
 800feac:	b236      	sxth	r6, r6
 800feae:	b23f      	sxth	r7, r7
 800feb0:	fb96 f6f2 	sdiv	r6, r6, r2
 800feb4:	fb97 f7f2 	sdiv	r7, r7, r2
 800feb8:	f7ff ffa7 	bl	800fe0a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800febc:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800fec0:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 800fec4:	9901      	ldr	r1, [sp, #4]
 800fec6:	4293      	cmp	r3, r2
 800fec8:	fa1f fe87 	uxth.w	lr, r7
 800fecc:	fa1f fc86 	uxth.w	ip, r6
 800fed0:	eba1 0a0a 	sub.w	sl, r1, sl
 800fed4:	b280      	uxth	r0, r0
 800fed6:	da54      	bge.n	800ff82 <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 800fed8:	ebac 0100 	sub.w	r1, ip, r0
 800fedc:	b289      	uxth	r1, r1
 800fede:	4460      	add	r0, ip
 800fee0:	f1ba 0f00 	cmp.w	sl, #0
 800fee4:	b20e      	sxth	r6, r1
 800fee6:	b280      	uxth	r0, r0
 800fee8:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 800feec:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 800fef0:	da29      	bge.n	800ff46 <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 800fef2:	eba8 0505 	sub.w	r5, r8, r5
 800fef6:	2d00      	cmp	r5, #0
 800fef8:	da2a      	bge.n	800ff50 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 800fefa:	fa1f f88a 	uxth.w	r8, sl
 800fefe:	eba0 0008 	sub.w	r0, r0, r8
 800ff02:	fa1f f58c 	uxth.w	r5, ip
 800ff06:	4443      	add	r3, r8
 800ff08:	f8ad 0014 	strh.w	r0, [sp, #20]
 800ff0c:	1a59      	subs	r1, r3, r1
 800ff0e:	ebae 0005 	sub.w	r0, lr, r5
 800ff12:	f8ad a010 	strh.w	sl, [sp, #16]
 800ff16:	f8ad c012 	strh.w	ip, [sp, #18]
 800ff1a:	f8ad 0016 	strh.w	r0, [sp, #22]
 800ff1e:	f8ad 6018 	strh.w	r6, [sp, #24]
 800ff22:	f8ad 701a 	strh.w	r7, [sp, #26]
 800ff26:	f8ad 101c 	strh.w	r1, [sp, #28]
 800ff2a:	442a      	add	r2, r5
 800ff2c:	eba2 0e0e 	sub.w	lr, r2, lr
 800ff30:	f8ad e01e 	strh.w	lr, [sp, #30]
 800ff34:	f8db 3010 	ldr.w	r3, [fp, #16]
 800ff38:	a904      	add	r1, sp, #16
 800ff3a:	4620      	mov	r0, r4
 800ff3c:	4798      	blx	r3
 800ff3e:	6823      	ldr	r3, [r4, #0]
 800ff40:	4649      	mov	r1, r9
 800ff42:	691b      	ldr	r3, [r3, #16]
 800ff44:	e79a      	b.n	800fe7c <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 800ff46:	d003      	beq.n	800ff50 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 800ff48:	eba8 0505 	sub.w	r5, r8, r5
 800ff4c:	2d00      	cmp	r5, #0
 800ff4e:	dcd4      	bgt.n	800fefa <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 800ff50:	fa1f f88a 	uxth.w	r8, sl
 800ff54:	4443      	add	r3, r8
 800ff56:	fa1f f58c 	uxth.w	r5, ip
 800ff5a:	1a59      	subs	r1, r3, r1
 800ff5c:	eba0 0008 	sub.w	r0, r0, r8
 800ff60:	ebae 0305 	sub.w	r3, lr, r5
 800ff64:	f8ad 6010 	strh.w	r6, [sp, #16]
 800ff68:	f8ad c012 	strh.w	ip, [sp, #18]
 800ff6c:	f8ad 1014 	strh.w	r1, [sp, #20]
 800ff70:	f8ad 3016 	strh.w	r3, [sp, #22]
 800ff74:	f8ad a018 	strh.w	sl, [sp, #24]
 800ff78:	f8ad 701a 	strh.w	r7, [sp, #26]
 800ff7c:	f8ad 001c 	strh.w	r0, [sp, #28]
 800ff80:	e7d3      	b.n	800ff2a <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 800ff82:	ebae 0100 	sub.w	r1, lr, r0
 800ff86:	b289      	uxth	r1, r1
 800ff88:	4470      	add	r0, lr
 800ff8a:	f1ba 0f00 	cmp.w	sl, #0
 800ff8e:	b20f      	sxth	r7, r1
 800ff90:	b280      	uxth	r0, r0
 800ff92:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 800ff96:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 800ff9a:	da20      	bge.n	800ffde <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 800ff9c:	eba8 0505 	sub.w	r5, r8, r5
 800ffa0:	2d00      	cmp	r5, #0
 800ffa2:	da21      	bge.n	800ffe8 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 800ffa4:	fa1f f88e 	uxth.w	r8, lr
 800ffa8:	fa1f f58a 	uxth.w	r5, sl
 800ffac:	4443      	add	r3, r8
 800ffae:	442a      	add	r2, r5
 800ffb0:	f8ad e010 	strh.w	lr, [sp, #16]
 800ffb4:	1b40      	subs	r0, r0, r5
 800ffb6:	ebac 0e08 	sub.w	lr, ip, r8
 800ffba:	1a51      	subs	r1, r2, r1
 800ffbc:	eba3 0c0c 	sub.w	ip, r3, ip
 800ffc0:	f8ad a012 	strh.w	sl, [sp, #18]
 800ffc4:	f8ad e014 	strh.w	lr, [sp, #20]
 800ffc8:	f8ad 0016 	strh.w	r0, [sp, #22]
 800ffcc:	f8ad 6018 	strh.w	r6, [sp, #24]
 800ffd0:	f8ad 701a 	strh.w	r7, [sp, #26]
 800ffd4:	f8ad c01c 	strh.w	ip, [sp, #28]
 800ffd8:	f8ad 101e 	strh.w	r1, [sp, #30]
 800ffdc:	e7aa      	b.n	800ff34 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 800ffde:	d003      	beq.n	800ffe8 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 800ffe0:	eba8 0505 	sub.w	r5, r8, r5
 800ffe4:	2d00      	cmp	r5, #0
 800ffe6:	dcdd      	bgt.n	800ffa4 <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 800ffe8:	fa1f f58e 	uxth.w	r5, lr
 800ffec:	fa1f f88a 	uxth.w	r8, sl
 800fff0:	4442      	add	r2, r8
 800fff2:	442b      	add	r3, r5
 800fff4:	f8ad 7012 	strh.w	r7, [sp, #18]
 800fff8:	1a51      	subs	r1, r2, r1
 800fffa:	ebac 0705 	sub.w	r7, ip, r5
 800fffe:	eba0 0008 	sub.w	r0, r0, r8
 8010002:	eba3 0c0c 	sub.w	ip, r3, ip
 8010006:	f8ad e010 	strh.w	lr, [sp, #16]
 801000a:	f8ad 7014 	strh.w	r7, [sp, #20]
 801000e:	f8ad 1016 	strh.w	r1, [sp, #22]
 8010012:	f8ad 6018 	strh.w	r6, [sp, #24]
 8010016:	f8ad a01a 	strh.w	sl, [sp, #26]
 801001a:	f8ad c01c 	strh.w	ip, [sp, #28]
 801001e:	f8ad 001e 	strh.w	r0, [sp, #30]
 8010022:	e787      	b.n	800ff34 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

08010024 <_ZN8touchgfx7CWRUtil4sineEi>:
 8010024:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8010028:	fb90 f2f3 	sdiv	r2, r0, r3
 801002c:	fb02 0013 	mls	r0, r2, r3, r0
 8010030:	2800      	cmp	r0, #0
 8010032:	bfb8      	it	lt
 8010034:	18c0      	addlt	r0, r0, r3
 8010036:	285a      	cmp	r0, #90	; 0x5a
 8010038:	4b09      	ldr	r3, [pc, #36]	; (8010060 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 801003a:	dc02      	bgt.n	8010042 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 801003c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8010040:	4770      	bx	lr
 8010042:	28b4      	cmp	r0, #180	; 0xb4
 8010044:	dc02      	bgt.n	801004c <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 8010046:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 801004a:	e7f7      	b.n	801003c <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 801004c:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 8010050:	bfd4      	ite	le
 8010052:	38b4      	suble	r0, #180	; 0xb4
 8010054:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 8010058:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801005c:	4240      	negs	r0, r0
 801005e:	4770      	bx	lr
 8010060:	0802b34c 	.word	0x0802b34c

08010064 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 8010064:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 8010068:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801006a:	fb90 f2f3 	sdiv	r2, r0, r3
 801006e:	fb02 0013 	mls	r0, r2, r3, r0
 8010072:	2800      	cmp	r0, #0
 8010074:	bfb8      	it	lt
 8010076:	18c0      	addlt	r0, r0, r3
 8010078:	1144      	asrs	r4, r0, #5
 801007a:	f000 061f 	and.w	r6, r0, #31
 801007e:	4620      	mov	r0, r4
 8010080:	f7ff ffd0 	bl	8010024 <_ZN8touchgfx7CWRUtil4sineEi>
 8010084:	4605      	mov	r5, r0
 8010086:	b90e      	cbnz	r6, 801008c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 8010088:	b002      	add	sp, #8
 801008a:	bd70      	pop	{r4, r5, r6, pc}
 801008c:	1c60      	adds	r0, r4, #1
 801008e:	f7ff ffc9 	bl	8010024 <_ZN8touchgfx7CWRUtil4sineEi>
 8010092:	ab01      	add	r3, sp, #4
 8010094:	2220      	movs	r2, #32
 8010096:	4631      	mov	r1, r6
 8010098:	1b40      	subs	r0, r0, r5
 801009a:	f005 f967 	bl	801536c <_ZN8touchgfx6muldivElllRl>
 801009e:	4428      	add	r0, r5
 80100a0:	e7f2      	b.n	8010088 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

080100a2 <_ZN8touchgfx7CWRUtil5isqrtEm>:
 80100a2:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 80100a6:	bf2c      	ite	cs
 80100a8:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 80100ac:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 80100b0:	2300      	movs	r3, #0
 80100b2:	1899      	adds	r1, r3, r2
 80100b4:	4288      	cmp	r0, r1
 80100b6:	bf24      	itt	cs
 80100b8:	1853      	addcs	r3, r2, r1
 80100ba:	1a40      	subcs	r0, r0, r1
 80100bc:	0892      	lsrs	r2, r2, #2
 80100be:	ea4f 0353 	mov.w	r3, r3, lsr #1
 80100c2:	d1f6      	bne.n	80100b2 <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 80100c4:	4618      	mov	r0, r3
 80100c6:	4770      	bx	lr

080100c8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 80100c8:	b510      	push	{r4, lr}
 80100ca:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 80100ce:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 80100d2:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 80100d6:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 80100da:	13a4      	asrs	r4, r4, #14
 80100dc:	139b      	asrs	r3, r3, #14
 80100de:	429c      	cmp	r4, r3
 80100e0:	bfb8      	it	lt
 80100e2:	461c      	movlt	r4, r3
 80100e4:	2c01      	cmp	r4, #1
 80100e6:	dd07      	ble.n	80100f8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 80100e8:	fb91 f1f4 	sdiv	r1, r1, r4
 80100ec:	fb90 f0f4 	sdiv	r0, r0, r4
 80100f0:	f7ff ffea 	bl	80100c8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 80100f4:	4360      	muls	r0, r4
 80100f6:	bd10      	pop	{r4, pc}
 80100f8:	4340      	muls	r0, r0
 80100fa:	fb01 0001 	mla	r0, r1, r1, r0
 80100fe:	f7ff ffd0 	bl	80100a2 <_ZN8touchgfx7CWRUtil5isqrtEm>
 8010102:	e7f8      	b.n	80100f6 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

08010104 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 8010104:	2800      	cmp	r0, #0
 8010106:	b508      	push	{r3, lr}
 8010108:	da05      	bge.n	8010116 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 801010a:	4240      	negs	r0, r0
 801010c:	f7ff fffa 	bl	8010104 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8010110:	4240      	negs	r0, r0
 8010112:	b240      	sxtb	r0, r0
 8010114:	bd08      	pop	{r3, pc}
 8010116:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 801011a:	dc11      	bgt.n	8010140 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 801011c:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 8010120:	dd09      	ble.n	8010136 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 8010122:	4340      	muls	r0, r0
 8010124:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 8010128:	f7ff ffbb 	bl	80100a2 <_ZN8touchgfx7CWRUtil5isqrtEm>
 801012c:	f7ff ffea 	bl	8010104 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8010130:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8010134:	e7ed      	b.n	8010112 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 8010136:	3003      	adds	r0, #3
 8010138:	10c0      	asrs	r0, r0, #3
 801013a:	4b02      	ldr	r3, [pc, #8]	; (8010144 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 801013c:	5618      	ldrsb	r0, [r3, r0]
 801013e:	e7e9      	b.n	8010114 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8010140:	2000      	movs	r0, #0
 8010142:	e7e7      	b.n	8010114 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8010144:	0802b2f0 	.word	0x0802b2f0

08010148 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 8010148:	4281      	cmp	r1, r0
 801014a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801014c:	460c      	mov	r4, r1
 801014e:	4615      	mov	r5, r2
 8010150:	dd07      	ble.n	8010162 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 8010152:	4601      	mov	r1, r0
 8010154:	4620      	mov	r0, r4
 8010156:	f7ff fff7 	bl	8010148 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 801015a:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 801015e:	b003      	add	sp, #12
 8010160:	bd30      	pop	{r4, r5, pc}
 8010162:	f7ff ffb1 	bl	80100c8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8010166:	6028      	str	r0, [r5, #0]
 8010168:	2800      	cmp	r0, #0
 801016a:	d0f8      	beq.n	801015e <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 801016c:	4602      	mov	r2, r0
 801016e:	ab01      	add	r3, sp, #4
 8010170:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8010174:	4620      	mov	r0, r4
 8010176:	f005 f8f9 	bl	801536c <_ZN8touchgfx6muldivElllRl>
 801017a:	f7ff ffc3 	bl	8010104 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 801017e:	e7ee      	b.n	801015e <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

08010180 <_ZN8touchgfx4LineC1Ev>:
 8010180:	b510      	push	{r4, lr}
 8010182:	4604      	mov	r4, r0
 8010184:	f7ff fe0a 	bl	800fd9c <_ZN8touchgfx12CanvasWidgetC1Ev>
 8010188:	4b0c      	ldr	r3, [pc, #48]	; (80101bc <_ZN8touchgfx4LineC1Ev+0x3c>)
 801018a:	6023      	str	r3, [r4, #0]
 801018c:	2220      	movs	r2, #32
 801018e:	2300      	movs	r3, #0
 8010190:	63e2      	str	r2, [r4, #60]	; 0x3c
 8010192:	2212      	movs	r2, #18
 8010194:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8010198:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 801019c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 80101a0:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 80101a4:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 80101a8:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 80101ac:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 80101b0:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 80101b4:	66e2      	str	r2, [r4, #108]	; 0x6c
 80101b6:	60a3      	str	r3, [r4, #8]
 80101b8:	4620      	mov	r0, r4
 80101ba:	bd10      	pop	{r4, pc}
 80101bc:	0802b40c 	.word	0x0802b40c

080101c0 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 80101c0:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80101c4:	6b47      	ldr	r7, [r0, #52]	; 0x34
 80101c6:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80101c8:	6b85      	ldr	r5, [r0, #56]	; 0x38
 80101ca:	6b02      	ldr	r2, [r0, #48]	; 0x30
 80101cc:	1aff      	subs	r7, r7, r3
 80101ce:	4604      	mov	r4, r0
 80101d0:	eba5 0502 	sub.w	r5, r5, r2
 80101d4:	d142      	bne.n	801025c <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 80101d6:	b955      	cbnz	r5, 80101ee <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 80101d8:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 80101dc:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 80101e0:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 80101e4:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 80101e8:	b002      	add	sp, #8
 80101ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80101ee:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 80101f2:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 80101f6:	4629      	mov	r1, r5
 80101f8:	4642      	mov	r2, r8
 80101fa:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 80101fc:	f005 f8d5 	bl	80153aa <_ZN8touchgfx6muldivElll>
 8010200:	2502      	movs	r5, #2
 8010202:	4642      	mov	r2, r8
 8010204:	fb90 f6f5 	sdiv	r6, r0, r5
 8010208:	4639      	mov	r1, r7
 801020a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 801020c:	f005 f8cd 	bl	80153aa <_ZN8touchgfx6muldivElll>
 8010210:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 8010214:	fb90 f5f5 	sdiv	r5, r0, r5
 8010218:	f1b9 0f00 	cmp.w	r9, #0
 801021c:	d067      	beq.n	80102ee <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 801021e:	f1b9 0f02 	cmp.w	r9, #2
 8010222:	d878      	bhi.n	8010316 <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 8010224:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8010226:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8010228:	1b93      	subs	r3, r2, r6
 801022a:	1b5b      	subs	r3, r3, r5
 801022c:	6463      	str	r3, [r4, #68]	; 0x44
 801022e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8010230:	18e9      	adds	r1, r5, r3
 8010232:	1b89      	subs	r1, r1, r6
 8010234:	6561      	str	r1, [r4, #84]	; 0x54
 8010236:	1b81      	subs	r1, r0, r6
 8010238:	4429      	add	r1, r5
 801023a:	64a1      	str	r1, [r4, #72]	; 0x48
 801023c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 801023e:	4430      	add	r0, r6
 8010240:	186f      	adds	r7, r5, r1
 8010242:	4432      	add	r2, r6
 8010244:	1b49      	subs	r1, r1, r5
 8010246:	4437      	add	r7, r6
 8010248:	4428      	add	r0, r5
 801024a:	4431      	add	r1, r6
 801024c:	1b52      	subs	r2, r2, r5
 801024e:	1b5b      	subs	r3, r3, r5
 8010250:	65a7      	str	r7, [r4, #88]	; 0x58
 8010252:	64e0      	str	r0, [r4, #76]	; 0x4c
 8010254:	65e1      	str	r1, [r4, #92]	; 0x5c
 8010256:	6522      	str	r2, [r4, #80]	; 0x50
 8010258:	1b9b      	subs	r3, r3, r6
 801025a:	e05b      	b.n	8010314 <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 801025c:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 8010260:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 8010264:	2d00      	cmp	r5, #0
 8010266:	d0c6      	beq.n	80101f6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8010268:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 801026c:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 8010270:	fb93 f2f8 	sdiv	r2, r3, r8
 8010274:	fb08 3312 	mls	r3, r8, r2, r3
 8010278:	b353      	cbz	r3, 80102d0 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 801027a:	fb98 f2f3 	sdiv	r2, r8, r3
 801027e:	fb03 8812 	mls	r8, r3, r2, r8
 8010282:	f1b8 0f00 	cmp.w	r8, #0
 8010286:	d1f3      	bne.n	8010270 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 8010288:	2b01      	cmp	r3, #1
 801028a:	bf1c      	itt	ne
 801028c:	fb95 f5f3 	sdivne	r5, r5, r3
 8010290:	fb97 f7f3 	sdivne	r7, r7, r3
 8010294:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 8010298:	f24b 5104 	movw	r1, #46340	; 0xb504
 801029c:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 80102a0:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 80102a4:	428b      	cmp	r3, r1
 80102a6:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 80102aa:	4608      	mov	r0, r1
 80102ac:	dd01      	ble.n	80102b2 <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 80102ae:	428a      	cmp	r2, r1
 80102b0:	dc10      	bgt.n	80102d4 <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 80102b2:	fb90 f3f3 	sdiv	r3, r0, r3
 80102b6:	fb90 f2f2 	sdiv	r2, r0, r2
 80102ba:	4293      	cmp	r3, r2
 80102bc:	bfa8      	it	ge
 80102be:	4613      	movge	r3, r2
 80102c0:	435f      	muls	r7, r3
 80102c2:	435d      	muls	r5, r3
 80102c4:	4629      	mov	r1, r5
 80102c6:	4638      	mov	r0, r7
 80102c8:	f7ff fefe 	bl	80100c8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 80102cc:	4680      	mov	r8, r0
 80102ce:	e792      	b.n	80101f6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 80102d0:	4643      	mov	r3, r8
 80102d2:	e7d9      	b.n	8010288 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 80102d4:	fb93 f3f1 	sdiv	r3, r3, r1
 80102d8:	fb92 f2f1 	sdiv	r2, r2, r1
 80102dc:	4293      	cmp	r3, r2
 80102de:	bfcc      	ite	gt
 80102e0:	3301      	addgt	r3, #1
 80102e2:	1c53      	addle	r3, r2, #1
 80102e4:	fb97 f7f3 	sdiv	r7, r7, r3
 80102e8:	fb95 f5f3 	sdiv	r5, r5, r3
 80102ec:	e7ea      	b.n	80102c4 <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 80102ee:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80102f0:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80102f2:	1b93      	subs	r3, r2, r6
 80102f4:	6463      	str	r3, [r4, #68]	; 0x44
 80102f6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80102f8:	18e9      	adds	r1, r5, r3
 80102fa:	6561      	str	r1, [r4, #84]	; 0x54
 80102fc:	1b81      	subs	r1, r0, r6
 80102fe:	64a1      	str	r1, [r4, #72]	; 0x48
 8010300:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8010302:	4430      	add	r0, r6
 8010304:	186f      	adds	r7, r5, r1
 8010306:	4432      	add	r2, r6
 8010308:	1b49      	subs	r1, r1, r5
 801030a:	65a7      	str	r7, [r4, #88]	; 0x58
 801030c:	64e0      	str	r0, [r4, #76]	; 0x4c
 801030e:	65e1      	str	r1, [r4, #92]	; 0x5c
 8010310:	6522      	str	r2, [r4, #80]	; 0x50
 8010312:	1b5b      	subs	r3, r3, r5
 8010314:	6623      	str	r3, [r4, #96]	; 0x60
 8010316:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8010318:	6d63      	ldr	r3, [r4, #84]	; 0x54
 801031a:	9200      	str	r2, [sp, #0]
 801031c:	9301      	str	r3, [sp, #4]
 801031e:	f104 0148 	add.w	r1, r4, #72	; 0x48
 8010322:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 8010326:	680f      	ldr	r7, [r1, #0]
 8010328:	9800      	ldr	r0, [sp, #0]
 801032a:	42ba      	cmp	r2, r7
 801032c:	bfa8      	it	ge
 801032e:	463a      	movge	r2, r7
 8010330:	4287      	cmp	r7, r0
 8010332:	bfc8      	it	gt
 8010334:	9700      	strgt	r7, [sp, #0]
 8010336:	690f      	ldr	r7, [r1, #16]
 8010338:	9801      	ldr	r0, [sp, #4]
 801033a:	42bb      	cmp	r3, r7
 801033c:	bfa8      	it	ge
 801033e:	463b      	movge	r3, r7
 8010340:	3104      	adds	r1, #4
 8010342:	4287      	cmp	r7, r0
 8010344:	bfc8      	it	gt
 8010346:	9701      	strgt	r7, [sp, #4]
 8010348:	458c      	cmp	ip, r1
 801034a:	d1ec      	bne.n	8010326 <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 801034c:	4668      	mov	r0, sp
 801034e:	2720      	movs	r7, #32
 8010350:	fb92 f8f7 	sdiv	r8, r2, r7
 8010354:	fb93 f7f7 	sdiv	r7, r3, r7
 8010358:	f7ff fd57 	bl	800fe0a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 801035c:	4682      	mov	sl, r0
 801035e:	a801      	add	r0, sp, #4
 8010360:	f7ff fd53 	bl	800fe0a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8010364:	ebaa 0208 	sub.w	r2, sl, r8
 8010368:	1bc0      	subs	r0, r0, r7
 801036a:	f1b9 0f01 	cmp.w	r9, #1
 801036e:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 8010372:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 8010376:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 801037a:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 801037e:	f47f af33 	bne.w	80101e8 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 8010382:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8010384:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8010386:	1b83      	subs	r3, r0, r6
 8010388:	6463      	str	r3, [r4, #68]	; 0x44
 801038a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 801038c:	18ea      	adds	r2, r5, r3
 801038e:	6562      	str	r2, [r4, #84]	; 0x54
 8010390:	1b8a      	subs	r2, r1, r6
 8010392:	64a2      	str	r2, [r4, #72]	; 0x48
 8010394:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8010396:	4431      	add	r1, r6
 8010398:	18af      	adds	r7, r5, r2
 801039a:	4406      	add	r6, r0
 801039c:	1b52      	subs	r2, r2, r5
 801039e:	1b5d      	subs	r5, r3, r5
 80103a0:	65a7      	str	r7, [r4, #88]	; 0x58
 80103a2:	64e1      	str	r1, [r4, #76]	; 0x4c
 80103a4:	65e2      	str	r2, [r4, #92]	; 0x5c
 80103a6:	6526      	str	r6, [r4, #80]	; 0x50
 80103a8:	6625      	str	r5, [r4, #96]	; 0x60
 80103aa:	e71d      	b.n	80101e8 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

080103ac <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 80103ac:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80103ae:	428b      	cmp	r3, r1
 80103b0:	d102      	bne.n	80103b8 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 80103b2:	6b03      	ldr	r3, [r0, #48]	; 0x30
 80103b4:	4293      	cmp	r3, r2
 80103b6:	d003      	beq.n	80103c0 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 80103b8:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 80103bc:	f7ff bf00 	b.w	80101c0 <_ZN8touchgfx4Line17updateCachedShapeEv>
 80103c0:	4770      	bx	lr

080103c2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 80103c2:	6b43      	ldr	r3, [r0, #52]	; 0x34
 80103c4:	428b      	cmp	r3, r1
 80103c6:	d102      	bne.n	80103ce <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 80103c8:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80103ca:	4293      	cmp	r3, r2
 80103cc:	d003      	beq.n	80103d6 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 80103ce:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 80103d2:	f7ff bef5 	b.w	80101c0 <_ZN8touchgfx4Line17updateCachedShapeEv>
 80103d6:	4770      	bx	lr

080103d8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 80103d8:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 80103dc:	f7ff bef0 	b.w	80101c0 <_ZN8touchgfx4Line17updateCachedShapeEv>

080103e0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 80103e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80103e4:	b0a0      	sub	sp, #128	; 0x80
 80103e6:	4604      	mov	r4, r0
 80103e8:	460a      	mov	r2, r1
 80103ea:	4601      	mov	r1, r0
 80103ec:	a804      	add	r0, sp, #16
 80103ee:	f014 fc47 	bl	8024c80 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 80103f2:	2300      	movs	r3, #0
 80103f4:	9301      	str	r3, [sp, #4]
 80103f6:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80103fa:	2b01      	cmp	r3, #1
 80103fc:	d17c      	bne.n	80104f8 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 80103fe:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8010400:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8010402:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8010404:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8010406:	1ac0      	subs	r0, r0, r3
 8010408:	eba1 0102 	sub.w	r1, r1, r2
 801040c:	d437      	bmi.n	801047e <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 801040e:	2900      	cmp	r1, #0
 8010410:	aa01      	add	r2, sp, #4
 8010412:	db2e      	blt.n	8010472 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 8010414:	f7ff fe98 	bl	8010148 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8010418:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 801041c:	6d62      	ldr	r2, [r4, #84]	; 0x54
 801041e:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8010420:	a804      	add	r0, sp, #16
 8010422:	f014 fdad 	bl	8024f80 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8010426:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8010428:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 801042a:	a804      	add	r0, sp, #16
 801042c:	f014 fdf5 	bl	802501a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8010430:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8010432:	2db3      	cmp	r5, #179	; 0xb3
 8010434:	dc33      	bgt.n	801049e <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 8010436:	eba6 0805 	sub.w	r8, r6, r5
 801043a:	4640      	mov	r0, r8
 801043c:	f7ff fdf2 	bl	8010024 <_ZN8touchgfx7CWRUtil4sineEi>
 8010440:	a902      	add	r1, sp, #8
 8010442:	9002      	str	r0, [sp, #8]
 8010444:	a801      	add	r0, sp, #4
 8010446:	f7ff fcd5 	bl	800fdf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801044a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801044c:	1847      	adds	r7, r0, r1
 801044e:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8010452:	f7ff fde7 	bl	8010024 <_ZN8touchgfx7CWRUtil4sineEi>
 8010456:	a903      	add	r1, sp, #12
 8010458:	9003      	str	r0, [sp, #12]
 801045a:	a801      	add	r0, sp, #4
 801045c:	f7ff fcca 	bl	800fdf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010460:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8010462:	4639      	mov	r1, r7
 8010464:	1a12      	subs	r2, r2, r0
 8010466:	a804      	add	r0, sp, #16
 8010468:	f014 fdd7 	bl	802501a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801046c:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 801046e:	441d      	add	r5, r3
 8010470:	e7df      	b.n	8010432 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 8010472:	4249      	negs	r1, r1
 8010474:	f7ff fe68 	bl	8010148 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8010478:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 801047c:	e7ce      	b.n	801041c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 801047e:	2900      	cmp	r1, #0
 8010480:	f1c0 0000 	rsb	r0, r0, #0
 8010484:	aa01      	add	r2, sp, #4
 8010486:	db04      	blt.n	8010492 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 8010488:	f7ff fe5e 	bl	8010148 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 801048c:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 8010490:	e7c4      	b.n	801041c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8010492:	4249      	negs	r1, r1
 8010494:	f7ff fe58 	bl	8010148 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8010498:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 801049c:	e7be      	b.n	801041c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 801049e:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 80104a0:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 80104a2:	a804      	add	r0, sp, #16
 80104a4:	f014 fdb9 	bl	802501a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80104a8:	6e22      	ldr	r2, [r4, #96]	; 0x60
 80104aa:	6d21      	ldr	r1, [r4, #80]	; 0x50
 80104ac:	a804      	add	r0, sp, #16
 80104ae:	f014 fdb4 	bl	802501a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80104b2:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 80104b4:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 80104b8:	2d00      	cmp	r5, #0
 80104ba:	dd31      	ble.n	8010520 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 80104bc:	eb05 0806 	add.w	r8, r5, r6
 80104c0:	4640      	mov	r0, r8
 80104c2:	f7ff fdaf 	bl	8010024 <_ZN8touchgfx7CWRUtil4sineEi>
 80104c6:	a902      	add	r1, sp, #8
 80104c8:	9002      	str	r0, [sp, #8]
 80104ca:	a801      	add	r0, sp, #4
 80104cc:	f7ff fc92 	bl	800fdf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80104d0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80104d2:	1847      	adds	r7, r0, r1
 80104d4:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 80104d8:	f7ff fda4 	bl	8010024 <_ZN8touchgfx7CWRUtil4sineEi>
 80104dc:	a903      	add	r1, sp, #12
 80104de:	9003      	str	r0, [sp, #12]
 80104e0:	a801      	add	r0, sp, #4
 80104e2:	f7ff fc87 	bl	800fdf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80104e6:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80104e8:	4639      	mov	r1, r7
 80104ea:	1a12      	subs	r2, r2, r0
 80104ec:	a804      	add	r0, sp, #16
 80104ee:	f014 fd94 	bl	802501a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80104f2:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 80104f4:	1aed      	subs	r5, r5, r3
 80104f6:	e7df      	b.n	80104b8 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 80104f8:	6d62      	ldr	r2, [r4, #84]	; 0x54
 80104fa:	6c61      	ldr	r1, [r4, #68]	; 0x44
 80104fc:	a804      	add	r0, sp, #16
 80104fe:	f014 fd3f 	bl	8024f80 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8010502:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8010504:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8010506:	a804      	add	r0, sp, #16
 8010508:	f014 fd87 	bl	802501a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801050c:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 801050e:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8010510:	a804      	add	r0, sp, #16
 8010512:	f014 fd82 	bl	802501a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8010516:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8010518:	6d21      	ldr	r1, [r4, #80]	; 0x50
 801051a:	a804      	add	r0, sp, #16
 801051c:	f014 fd7d 	bl	802501a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8010520:	21ff      	movs	r1, #255	; 0xff
 8010522:	a804      	add	r0, sp, #16
 8010524:	f014 fc68 	bl	8024df8 <_ZN8touchgfx6Canvas6renderEh>
 8010528:	4b04      	ldr	r3, [pc, #16]	; (801053c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 801052a:	9304      	str	r3, [sp, #16]
 801052c:	4604      	mov	r4, r0
 801052e:	a80c      	add	r0, sp, #48	; 0x30
 8010530:	f001 f8cc 	bl	80116cc <_ZN8touchgfx7OutlineD1Ev>
 8010534:	4620      	mov	r0, r4
 8010536:	b020      	add	sp, #128	; 0x80
 8010538:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801053c:	0802bc34 	.word	0x0802bc34

08010540 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8010540:	2000      	movs	r0, #0
 8010542:	4770      	bx	lr

08010544 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8010544:	4b07      	ldr	r3, [pc, #28]	; (8010564 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 8010546:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8010548:	881b      	ldrh	r3, [r3, #0]
 801054a:	4293      	cmp	r3, r2
 801054c:	bf81      	itttt	hi
 801054e:	4b06      	ldrhi	r3, [pc, #24]	; (8010568 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8010550:	681b      	ldrhi	r3, [r3, #0]
 8010552:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 8010556:	7858      	ldrbhi	r0, [r3, #1]
 8010558:	bf8c      	ite	hi
 801055a:	f000 0003 	andhi.w	r0, r0, #3
 801055e:	2000      	movls	r0, #0
 8010560:	4770      	bx	lr
 8010562:	bf00      	nop
 8010564:	20013818 	.word	0x20013818
 8010568:	20013814 	.word	0x20013814

0801056c <_ZN8touchgfx8TextAreaD1Ev>:
 801056c:	4770      	bx	lr
	...

08010570 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8010570:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010574:	4b10      	ldr	r3, [pc, #64]	; (80105b8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8010576:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8010578:	881b      	ldrh	r3, [r3, #0]
 801057a:	428b      	cmp	r3, r1
 801057c:	4604      	mov	r4, r0
 801057e:	d918      	bls.n	80105b2 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8010580:	6803      	ldr	r3, [r0, #0]
 8010582:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 8010584:	4b0d      	ldr	r3, [pc, #52]	; (80105bc <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8010586:	6818      	ldr	r0, [r3, #0]
 8010588:	f7f6 fd18 	bl	8006fbc <_ZNK8touchgfx5Texts7getTextEt>
 801058c:	6823      	ldr	r3, [r4, #0]
 801058e:	4606      	mov	r6, r0
 8010590:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8010592:	4620      	mov	r0, r4
 8010594:	4798      	blx	r3
 8010596:	6823      	ldr	r3, [r4, #0]
 8010598:	4607      	mov	r7, r0
 801059a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801059e:	4620      	mov	r0, r4
 80105a0:	4798      	blx	r3
 80105a2:	463a      	mov	r2, r7
 80105a4:	4603      	mov	r3, r0
 80105a6:	4631      	mov	r1, r6
 80105a8:	4620      	mov	r0, r4
 80105aa:	46ac      	mov	ip, r5
 80105ac:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80105b0:	4760      	bx	ip
 80105b2:	2000      	movs	r0, #0
 80105b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80105b8:	20013818 	.word	0x20013818
 80105bc:	20013820 	.word	0x20013820

080105c0 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 80105c0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80105c4:	4b17      	ldr	r3, [pc, #92]	; (8010624 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 80105c6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80105c8:	881b      	ldrh	r3, [r3, #0]
 80105ca:	428b      	cmp	r3, r1
 80105cc:	4604      	mov	r4, r0
 80105ce:	d926      	bls.n	801061e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 80105d0:	4b15      	ldr	r3, [pc, #84]	; (8010628 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 80105d2:	681b      	ldr	r3, [r3, #0]
 80105d4:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 80105d8:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 80105dc:	4b13      	ldr	r3, [pc, #76]	; (801062c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 80105de:	7855      	ldrb	r5, [r2, #1]
 80105e0:	681b      	ldr	r3, [r3, #0]
 80105e2:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 80105e6:	6833      	ldr	r3, [r6, #0]
 80105e8:	69df      	ldr	r7, [r3, #28]
 80105ea:	4b11      	ldr	r3, [pc, #68]	; (8010630 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 80105ec:	6818      	ldr	r0, [r3, #0]
 80105ee:	f7f6 fce5 	bl	8006fbc <_ZNK8touchgfx5Texts7getTextEt>
 80105f2:	6823      	ldr	r3, [r4, #0]
 80105f4:	4680      	mov	r8, r0
 80105f6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80105f8:	4620      	mov	r0, r4
 80105fa:	4798      	blx	r3
 80105fc:	6823      	ldr	r3, [r4, #0]
 80105fe:	4681      	mov	r9, r0
 8010600:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8010604:	4620      	mov	r0, r4
 8010606:	4798      	blx	r3
 8010608:	f3c5 0581 	ubfx	r5, r5, #2, #2
 801060c:	9000      	str	r0, [sp, #0]
 801060e:	464b      	mov	r3, r9
 8010610:	4642      	mov	r2, r8
 8010612:	4629      	mov	r1, r5
 8010614:	4630      	mov	r0, r6
 8010616:	47b8      	blx	r7
 8010618:	b003      	add	sp, #12
 801061a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801061e:	2000      	movs	r0, #0
 8010620:	e7fa      	b.n	8010618 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8010622:	bf00      	nop
 8010624:	20013818 	.word	0x20013818
 8010628:	20013814 	.word	0x20013814
 801062c:	2001381c 	.word	0x2001381c
 8010630:	20013820 	.word	0x20013820

08010634 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8010634:	b40e      	push	{r1, r2, r3}
 8010636:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801063a:	4b2f      	ldr	r3, [pc, #188]	; (80106f8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 801063c:	881a      	ldrh	r2, [r3, #0]
 801063e:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8010640:	429a      	cmp	r2, r3
 8010642:	b09d      	sub	sp, #116	; 0x74
 8010644:	4604      	mov	r4, r0
 8010646:	d954      	bls.n	80106f2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8010648:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 80106fc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 801064c:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8010700 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8010650:	aa26      	add	r2, sp, #152	; 0x98
 8010652:	9202      	str	r2, [sp, #8]
 8010654:	f8d9 2000 	ldr.w	r2, [r9]
 8010658:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 801065c:	f8d8 3000 	ldr.w	r3, [r8]
 8010660:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8010664:	682b      	ldr	r3, [r5, #0]
 8010666:	4628      	mov	r0, r5
 8010668:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801066a:	4798      	blx	r3
 801066c:	b207      	sxth	r7, r0
 801066e:	4606      	mov	r6, r0
 8010670:	a803      	add	r0, sp, #12
 8010672:	f005 fa57 	bl	8015b24 <_ZN8touchgfx12TextProviderC1Ev>
 8010676:	682b      	ldr	r3, [r5, #0]
 8010678:	4628      	mov	r0, r5
 801067a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801067c:	4798      	blx	r3
 801067e:	682b      	ldr	r3, [r5, #0]
 8010680:	4682      	mov	sl, r0
 8010682:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8010684:	4628      	mov	r0, r5
 8010686:	4798      	blx	r3
 8010688:	4653      	mov	r3, sl
 801068a:	9000      	str	r0, [sp, #0]
 801068c:	9a02      	ldr	r2, [sp, #8]
 801068e:	9925      	ldr	r1, [sp, #148]	; 0x94
 8010690:	a803      	add	r0, sp, #12
 8010692:	f005 faa2 	bl	8015bda <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010696:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8010698:	f8d9 3000 	ldr.w	r3, [r9]
 801069c:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 80106a0:	8925      	ldrh	r5, [r4, #8]
 80106a2:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 80106a6:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 80106aa:	eba5 050c 	sub.w	r5, r5, ip
 80106ae:	784a      	ldrb	r2, [r1, #1]
 80106b0:	f8d8 3000 	ldr.w	r3, [r8]
 80106b4:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 80106b8:	b22d      	sxth	r5, r5
 80106ba:	9500      	str	r5, [sp, #0]
 80106bc:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 80106c0:	f3c2 0281 	ubfx	r2, r2, #2, #2
 80106c4:	a803      	add	r0, sp, #12
 80106c6:	f002 feed 	bl	80134a4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 80106ca:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 80106ce:	18b9      	adds	r1, r7, r2
 80106d0:	2900      	cmp	r1, #0
 80106d2:	b203      	sxth	r3, r0
 80106d4:	dd0b      	ble.n	80106ee <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 80106d6:	3b01      	subs	r3, #1
 80106d8:	fb13 f302 	smulbb	r3, r3, r2
 80106dc:	fb16 3300 	smlabb	r3, r6, r0, r3
 80106e0:	b21f      	sxth	r7, r3
 80106e2:	4638      	mov	r0, r7
 80106e4:	b01d      	add	sp, #116	; 0x74
 80106e6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80106ea:	b003      	add	sp, #12
 80106ec:	4770      	bx	lr
 80106ee:	2b00      	cmp	r3, #0
 80106f0:	dcf7      	bgt.n	80106e2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 80106f2:	2700      	movs	r7, #0
 80106f4:	e7f5      	b.n	80106e2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 80106f6:	bf00      	nop
 80106f8:	20013818 	.word	0x20013818
 80106fc:	20013814 	.word	0x20013814
 8010700:	2001381c 	.word	0x2001381c

08010704 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8010704:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010708:	4bbc      	ldr	r3, [pc, #752]	; (80109fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 801070a:	460c      	mov	r4, r1
 801070c:	881b      	ldrh	r3, [r3, #0]
 801070e:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8010710:	428b      	cmp	r3, r1
 8010712:	b0a9      	sub	sp, #164	; 0xa4
 8010714:	4680      	mov	r8, r0
 8010716:	d809      	bhi.n	801072c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8010718:	2300      	movs	r3, #0
 801071a:	f04f 32ff 	mov.w	r2, #4294967295
 801071e:	e9c0 3200 	strd	r3, r2, [r0]
 8010722:	6083      	str	r3, [r0, #8]
 8010724:	4640      	mov	r0, r8
 8010726:	b029      	add	sp, #164	; 0xa4
 8010728:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801072c:	4eb4      	ldr	r6, [pc, #720]	; (8010a00 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 801072e:	6833      	ldr	r3, [r6, #0]
 8010730:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8010734:	4bb3      	ldr	r3, [pc, #716]	; (8010a04 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8010736:	681b      	ldr	r3, [r3, #0]
 8010738:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801073c:	4bb2      	ldr	r3, [pc, #712]	; (8010a08 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 801073e:	6818      	ldr	r0, [r3, #0]
 8010740:	f7f6 fc3c 	bl	8006fbc <_ZNK8touchgfx5Texts7getTextEt>
 8010744:	682b      	ldr	r3, [r5, #0]
 8010746:	4681      	mov	r9, r0
 8010748:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801074a:	4628      	mov	r0, r5
 801074c:	4798      	blx	r3
 801074e:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 8010750:	b203      	sxth	r3, r0
 8010752:	4407      	add	r7, r0
 8010754:	9304      	str	r3, [sp, #16]
 8010756:	b2bb      	uxth	r3, r7
 8010758:	9303      	str	r3, [sp, #12]
 801075a:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 801075e:	4682      	mov	sl, r0
 8010760:	a80f      	add	r0, sp, #60	; 0x3c
 8010762:	2b00      	cmp	r3, #0
 8010764:	f040 80a6 	bne.w	80108b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8010768:	f005 f9dc 	bl	8015b24 <_ZN8touchgfx12TextProviderC1Ev>
 801076c:	682b      	ldr	r3, [r5, #0]
 801076e:	4628      	mov	r0, r5
 8010770:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8010772:	4798      	blx	r3
 8010774:	682b      	ldr	r3, [r5, #0]
 8010776:	4606      	mov	r6, r0
 8010778:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801077a:	4628      	mov	r0, r5
 801077c:	4798      	blx	r3
 801077e:	6823      	ldr	r3, [r4, #0]
 8010780:	4607      	mov	r7, r0
 8010782:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8010784:	4620      	mov	r0, r4
 8010786:	4798      	blx	r3
 8010788:	6823      	ldr	r3, [r4, #0]
 801078a:	4683      	mov	fp, r0
 801078c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8010790:	4620      	mov	r0, r4
 8010792:	4798      	blx	r3
 8010794:	463b      	mov	r3, r7
 8010796:	e9cd b000 	strd	fp, r0, [sp]
 801079a:	4649      	mov	r1, r9
 801079c:	4632      	mov	r2, r6
 801079e:	a80f      	add	r0, sp, #60	; 0x3c
 80107a0:	f005 fa30 	bl	8015c04 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 80107a4:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80107a8:	f8df b254 	ldr.w	fp, [pc, #596]	; 8010a00 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 80107ac:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80107b0:	f04f 0600 	mov.w	r6, #0
 80107b4:	bf0c      	ite	eq
 80107b6:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 80107ba:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 80107be:	4637      	mov	r7, r6
 80107c0:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80107c2:	f8db 3000 	ldr.w	r3, [fp]
 80107c6:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80107ca:	4629      	mov	r1, r5
 80107cc:	785b      	ldrb	r3, [r3, #1]
 80107ce:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80107d2:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80107d6:	a80f      	add	r0, sp, #60	; 0x3c
 80107d8:	f002 fb7f 	bl	8012eda <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80107dc:	9b03      	ldr	r3, [sp, #12]
 80107de:	4286      	cmp	r6, r0
 80107e0:	bfb8      	it	lt
 80107e2:	4606      	movlt	r6, r0
 80107e4:	3701      	adds	r7, #1
 80107e6:	eba9 0903 	sub.w	r9, r9, r3
 80107ea:	a80f      	add	r0, sp, #60	; 0x3c
 80107ec:	b236      	sxth	r6, r6
 80107ee:	b2bf      	uxth	r7, r7
 80107f0:	fa0f f989 	sxth.w	r9, r9
 80107f4:	f005 f9bd 	bl	8015b72 <_ZN8touchgfx12TextProvider11endOfStringEv>
 80107f8:	b918      	cbnz	r0, 8010802 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80107fa:	7a2b      	ldrb	r3, [r5, #8]
 80107fc:	444b      	add	r3, r9
 80107fe:	2b00      	cmp	r3, #0
 8010800:	dcde      	bgt.n	80107c0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 8010802:	9b03      	ldr	r3, [sp, #12]
 8010804:	9a04      	ldr	r2, [sp, #16]
 8010806:	f895 9009 	ldrb.w	r9, [r5, #9]
 801080a:	fb13 f707 	smulbb	r7, r3, r7
 801080e:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8010810:	1aff      	subs	r7, r7, r3
 8010812:	b2bf      	uxth	r7, r7
 8010814:	b23b      	sxth	r3, r7
 8010816:	429a      	cmp	r2, r3
 8010818:	bfa8      	it	ge
 801081a:	4657      	movge	r7, sl
 801081c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8010820:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8010824:	6823      	ldr	r3, [r4, #0]
 8010826:	bf08      	it	eq
 8010828:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 801082c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 801082e:	bf18      	it	ne
 8010830:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 8010834:	4620      	mov	r0, r4
 8010836:	4798      	blx	r3
 8010838:	444f      	add	r7, r9
 801083a:	fa1f f987 	uxth.w	r9, r7
 801083e:	2801      	cmp	r0, #1
 8010840:	fa0f f789 	sxth.w	r7, r9
 8010844:	b2b3      	uxth	r3, r6
 8010846:	f000 80e1 	beq.w	8010a0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 801084a:	2802      	cmp	r0, #2
 801084c:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 8010850:	f000 80e2 	beq.w	8010a18 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 8010854:	7aea      	ldrb	r2, [r5, #11]
 8010856:	7b2d      	ldrb	r5, [r5, #12]
 8010858:	b236      	sxth	r6, r6
 801085a:	1ab6      	subs	r6, r6, r2
 801085c:	442a      	add	r2, r5
 801085e:	4413      	add	r3, r2
 8010860:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 8010864:	fa1f fa86 	uxth.w	sl, r6
 8010868:	b29b      	uxth	r3, r3
 801086a:	2a02      	cmp	r2, #2
 801086c:	fa0f fb8a 	sxth.w	fp, sl
 8010870:	b21e      	sxth	r6, r3
 8010872:	f000 80d5 	beq.w	8010a20 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 8010876:	2a03      	cmp	r2, #3
 8010878:	f000 80dd 	beq.w	8010a36 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 801087c:	2a01      	cmp	r2, #1
 801087e:	f040 80e5 	bne.w	8010a4c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 8010882:	8925      	ldrh	r5, [r4, #8]
 8010884:	4633      	mov	r3, r6
 8010886:	eba5 0909 	sub.w	r9, r5, r9
 801088a:	463e      	mov	r6, r7
 801088c:	465d      	mov	r5, fp
 801088e:	461f      	mov	r7, r3
 8010890:	fa0f fb89 	sxth.w	fp, r9
 8010894:	4b5c      	ldr	r3, [pc, #368]	; (8010a08 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8010896:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8010898:	6818      	ldr	r0, [r3, #0]
 801089a:	f7f6 fb8f 	bl	8006fbc <_ZNK8touchgfx5Texts7getTextEt>
 801089e:	f8a8 b000 	strh.w	fp, [r8]
 80108a2:	f8a8 5002 	strh.w	r5, [r8, #2]
 80108a6:	f8a8 6004 	strh.w	r6, [r8, #4]
 80108aa:	f8a8 7006 	strh.w	r7, [r8, #6]
 80108ae:	f8c8 0008 	str.w	r0, [r8, #8]
 80108b2:	e737      	b.n	8010724 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 80108b4:	f005 f936 	bl	8015b24 <_ZN8touchgfx12TextProviderC1Ev>
 80108b8:	682b      	ldr	r3, [r5, #0]
 80108ba:	4628      	mov	r0, r5
 80108bc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80108be:	4798      	blx	r3
 80108c0:	682b      	ldr	r3, [r5, #0]
 80108c2:	4607      	mov	r7, r0
 80108c4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80108c6:	4628      	mov	r0, r5
 80108c8:	4798      	blx	r3
 80108ca:	6823      	ldr	r3, [r4, #0]
 80108cc:	4683      	mov	fp, r0
 80108ce:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80108d0:	4620      	mov	r0, r4
 80108d2:	4798      	blx	r3
 80108d4:	6822      	ldr	r2, [r4, #0]
 80108d6:	9005      	str	r0, [sp, #20]
 80108d8:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 80108dc:	4620      	mov	r0, r4
 80108de:	4790      	blx	r2
 80108e0:	9b05      	ldr	r3, [sp, #20]
 80108e2:	9001      	str	r0, [sp, #4]
 80108e4:	463a      	mov	r2, r7
 80108e6:	4649      	mov	r1, r9
 80108e8:	9300      	str	r3, [sp, #0]
 80108ea:	a80f      	add	r0, sp, #60	; 0x3c
 80108ec:	465b      	mov	r3, fp
 80108ee:	f005 f989 	bl	8015c04 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 80108f2:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80108f6:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 80108fa:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80108fc:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8010900:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8010904:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8010908:	bf0a      	itet	eq
 801090a:	464a      	moveq	r2, r9
 801090c:	461a      	movne	r2, r3
 801090e:	4699      	moveq	r9, r3
 8010910:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 8010914:	1ad2      	subs	r2, r2, r3
 8010916:	6833      	ldr	r3, [r6, #0]
 8010918:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 801091c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8010920:	af0f      	add	r7, sp, #60	; 0x3c
 8010922:	7859      	ldrb	r1, [r3, #1]
 8010924:	9707      	str	r7, [sp, #28]
 8010926:	2300      	movs	r3, #0
 8010928:	f3c1 0181 	ubfx	r1, r1, #2, #2
 801092c:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010930:	f88d 1020 	strb.w	r1, [sp, #32]
 8010934:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8010938:	9509      	str	r5, [sp, #36]	; 0x24
 801093a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801093e:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8010942:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8010946:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801094a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801094e:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8010952:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8010956:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801095a:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 801095e:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 8010962:	b350      	cbz	r0, 80109ba <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8010964:	682b      	ldr	r3, [r5, #0]
 8010966:	4628      	mov	r0, r5
 8010968:	695b      	ldr	r3, [r3, #20]
 801096a:	4798      	blx	r3
 801096c:	4607      	mov	r7, r0
 801096e:	b320      	cbz	r0, 80109ba <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8010970:	9809      	ldr	r0, [sp, #36]	; 0x24
 8010972:	6803      	ldr	r3, [r0, #0]
 8010974:	4639      	mov	r1, r7
 8010976:	68db      	ldr	r3, [r3, #12]
 8010978:	4798      	blx	r3
 801097a:	4606      	mov	r6, r0
 801097c:	b1e8      	cbz	r0, 80109ba <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801097e:	7b43      	ldrb	r3, [r0, #13]
 8010980:	7a82      	ldrb	r2, [r0, #10]
 8010982:	005b      	lsls	r3, r3, #1
 8010984:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8010988:	4313      	orrs	r3, r2
 801098a:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 801098e:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 8010992:	2b06      	cmp	r3, #6
 8010994:	d111      	bne.n	80109ba <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8010996:	9809      	ldr	r0, [sp, #36]	; 0x24
 8010998:	6803      	ldr	r3, [r0, #0]
 801099a:	4632      	mov	r2, r6
 801099c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801099e:	4639      	mov	r1, r7
 80109a0:	4798      	blx	r3
 80109a2:	7b73      	ldrb	r3, [r6, #13]
 80109a4:	005b      	lsls	r3, r3, #1
 80109a6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80109aa:	7ab3      	ldrb	r3, [r6, #10]
 80109ac:	4313      	orrs	r3, r2
 80109ae:	4418      	add	r0, r3
 80109b0:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80109b4:	4418      	add	r0, r3
 80109b6:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 80109ba:	2600      	movs	r6, #0
 80109bc:	4637      	mov	r7, r6
 80109be:	a806      	add	r0, sp, #24
 80109c0:	f002 fc6c 	bl	801329c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80109c4:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 80109c8:	9b03      	ldr	r3, [sp, #12]
 80109ca:	4286      	cmp	r6, r0
 80109cc:	eba9 0903 	sub.w	r9, r9, r3
 80109d0:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 80109d4:	bfb8      	it	lt
 80109d6:	4606      	movlt	r6, r0
 80109d8:	3701      	adds	r7, #1
 80109da:	b236      	sxth	r6, r6
 80109dc:	b2bf      	uxth	r7, r7
 80109de:	fa0f f989 	sxth.w	r9, r9
 80109e2:	2b00      	cmp	r3, #0
 80109e4:	f43f af0d 	beq.w	8010802 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80109e8:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 80109ec:	2b00      	cmp	r3, #0
 80109ee:	f47f af08 	bne.w	8010802 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80109f2:	7a2b      	ldrb	r3, [r5, #8]
 80109f4:	444b      	add	r3, r9
 80109f6:	2b00      	cmp	r3, #0
 80109f8:	dce1      	bgt.n	80109be <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 80109fa:	e702      	b.n	8010802 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80109fc:	20013818 	.word	0x20013818
 8010a00:	20013814 	.word	0x20013814
 8010a04:	2001381c 	.word	0x2001381c
 8010a08:	20013820 	.word	0x20013820
 8010a0c:	ebaa 0606 	sub.w	r6, sl, r6
 8010a10:	2002      	movs	r0, #2
 8010a12:	fb96 f6f0 	sdiv	r6, r6, r0
 8010a16:	e71d      	b.n	8010854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8010a18:	441e      	add	r6, r3
 8010a1a:	ebaa 0606 	sub.w	r6, sl, r6
 8010a1e:	e719      	b.n	8010854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8010a20:	8925      	ldrh	r5, [r4, #8]
 8010a22:	1aed      	subs	r5, r5, r3
 8010a24:	eba5 050a 	sub.w	r5, r5, sl
 8010a28:	fa0f fb85 	sxth.w	fp, r5
 8010a2c:	8965      	ldrh	r5, [r4, #10]
 8010a2e:	eba5 0509 	sub.w	r5, r5, r9
 8010a32:	b22d      	sxth	r5, r5
 8010a34:	e72e      	b.n	8010894 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8010a36:	8965      	ldrh	r5, [r4, #10]
 8010a38:	1aed      	subs	r5, r5, r3
 8010a3a:	eba5 050a 	sub.w	r5, r5, sl
 8010a3e:	4633      	mov	r3, r6
 8010a40:	b22d      	sxth	r5, r5
 8010a42:	463e      	mov	r6, r7
 8010a44:	f04f 0b00 	mov.w	fp, #0
 8010a48:	461f      	mov	r7, r3
 8010a4a:	e723      	b.n	8010894 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8010a4c:	2500      	movs	r5, #0
 8010a4e:	e721      	b.n	8010894 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08010a50 <_ZN8touchgfx8TextAreaD0Ev>:
 8010a50:	b510      	push	{r4, lr}
 8010a52:	2148      	movs	r1, #72	; 0x48
 8010a54:	4604      	mov	r4, r0
 8010a56:	f015 ff32 	bl	80268be <_ZdlPvj>
 8010a5a:	4620      	mov	r0, r4
 8010a5c:	bd10      	pop	{r4, pc}
	...

08010a60 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8010a60:	b513      	push	{r0, r1, r4, lr}
 8010a62:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 8010a66:	4604      	mov	r4, r0
 8010a68:	b1fb      	cbz	r3, 8010aaa <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8010a6a:	4b16      	ldr	r3, [pc, #88]	; (8010ac4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8010a6c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8010a6e:	881b      	ldrh	r3, [r3, #0]
 8010a70:	428b      	cmp	r3, r1
 8010a72:	d91a      	bls.n	8010aaa <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8010a74:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8010a78:	2b00      	cmp	r3, #0
 8010a7a:	dd16      	ble.n	8010aaa <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8010a7c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8010a80:	2b00      	cmp	r3, #0
 8010a82:	dd12      	ble.n	8010aaa <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8010a84:	4b10      	ldr	r3, [pc, #64]	; (8010ac8 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8010a86:	6818      	ldr	r0, [r3, #0]
 8010a88:	f7f6 fa98 	bl	8006fbc <_ZNK8touchgfx5Texts7getTextEt>
 8010a8c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8010a90:	6822      	ldr	r2, [r4, #0]
 8010a92:	2b00      	cmp	r3, #0
 8010a94:	db06      	blt.n	8010aa4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8010a96:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8010a9a:	2b00      	cmp	r3, #0
 8010a9c:	db02      	blt.n	8010aa4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8010a9e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8010aa0:	4298      	cmp	r0, r3
 8010aa2:	d004      	beq.n	8010aae <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 8010aa4:	6953      	ldr	r3, [r2, #20]
 8010aa6:	4620      	mov	r0, r4
 8010aa8:	4798      	blx	r3
 8010aaa:	b002      	add	sp, #8
 8010aac:	bd10      	pop	{r4, pc}
 8010aae:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 8010ab2:	c903      	ldmia	r1, {r0, r1}
 8010ab4:	466b      	mov	r3, sp
 8010ab6:	e883 0003 	stmia.w	r3, {r0, r1}
 8010aba:	6912      	ldr	r2, [r2, #16]
 8010abc:	4619      	mov	r1, r3
 8010abe:	4620      	mov	r0, r4
 8010ac0:	4790      	blx	r2
 8010ac2:	e7f2      	b.n	8010aaa <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8010ac4:	20013818 	.word	0x20013818
 8010ac8:	20013820 	.word	0x20013820

08010acc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8010acc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010ad0:	4b44      	ldr	r3, [pc, #272]	; (8010be4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 8010ad2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8010ad4:	881b      	ldrh	r3, [r3, #0]
 8010ad6:	4293      	cmp	r3, r2
 8010ad8:	b08e      	sub	sp, #56	; 0x38
 8010ada:	4604      	mov	r4, r0
 8010adc:	d97e      	bls.n	8010bdc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8010ade:	6808      	ldr	r0, [r1, #0]
 8010ae0:	4d41      	ldr	r5, [pc, #260]	; (8010be8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 8010ae2:	6849      	ldr	r1, [r1, #4]
 8010ae4:	ab05      	add	r3, sp, #20
 8010ae6:	c303      	stmia	r3!, {r0, r1}
 8010ae8:	4611      	mov	r1, r2
 8010aea:	6828      	ldr	r0, [r5, #0]
 8010aec:	f7f6 fa66 	bl	8006fbc <_ZNK8touchgfx5Texts7getTextEt>
 8010af0:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8010af4:	2b00      	cmp	r3, #0
 8010af6:	db11      	blt.n	8010b1c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8010af8:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8010afc:	2b00      	cmp	r3, #0
 8010afe:	db0d      	blt.n	8010b1c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8010b00:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8010b02:	4298      	cmp	r0, r3
 8010b04:	d10a      	bne.n	8010b1c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8010b06:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 8010b0a:	e892 0003 	ldmia.w	r2, {r0, r1}
 8010b0e:	ab09      	add	r3, sp, #36	; 0x24
 8010b10:	e883 0003 	stmia.w	r3, {r0, r1}
 8010b14:	4619      	mov	r1, r3
 8010b16:	a805      	add	r0, sp, #20
 8010b18:	f7fe f860 	bl	800ebdc <_ZN8touchgfx4RectaNERKS0_>
 8010b1c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8010b20:	2b00      	cmp	r3, #0
 8010b22:	dd5b      	ble.n	8010bdc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8010b24:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8010b28:	2b00      	cmp	r3, #0
 8010b2a:	dd57      	ble.n	8010bdc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8010b2c:	4f2f      	ldr	r7, [pc, #188]	; (8010bec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 8010b2e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8010b30:	683b      	ldr	r3, [r7, #0]
 8010b32:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8010b36:	4b2e      	ldr	r3, [pc, #184]	; (8010bf0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8010b38:	681b      	ldr	r3, [r3, #0]
 8010b3a:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8010b3e:	2e00      	cmp	r6, #0
 8010b40:	d04c      	beq.n	8010bdc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8010b42:	6823      	ldr	r3, [r4, #0]
 8010b44:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8010b48:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8010b4a:	4620      	mov	r0, r4
 8010b4c:	4798      	blx	r3
 8010b4e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8010b50:	683b      	ldr	r3, [r7, #0]
 8010b52:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 8010b56:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 8010b5a:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 8010b5e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8010b60:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8010b64:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8010b68:	785b      	ldrb	r3, [r3, #1]
 8010b6a:	9609      	str	r6, [sp, #36]	; 0x24
 8010b6c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8010b70:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8010b74:	4b1f      	ldr	r3, [pc, #124]	; (8010bf4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 8010b76:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 8010b7a:	681b      	ldr	r3, [r3, #0]
 8010b7c:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8010b80:	910b      	str	r1, [sp, #44]	; 0x2c
 8010b82:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 8010b86:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 8010b8a:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 8010b8e:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 8010b92:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8010b96:	b10a      	cbz	r2, 8010b9c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8010b98:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 8010b9a:	b906      	cbnz	r6, 8010b9e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8010b9c:	689e      	ldr	r6, [r3, #8]
 8010b9e:	af07      	add	r7, sp, #28
 8010ba0:	4621      	mov	r1, r4
 8010ba2:	4638      	mov	r0, r7
 8010ba4:	f004 fab0 	bl	8015108 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010ba8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8010baa:	6828      	ldr	r0, [r5, #0]
 8010bac:	f7f6 fa06 	bl	8006fbc <_ZNK8touchgfx5Texts7getTextEt>
 8010bb0:	6823      	ldr	r3, [r4, #0]
 8010bb2:	4605      	mov	r5, r0
 8010bb4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8010bb6:	4620      	mov	r0, r4
 8010bb8:	4798      	blx	r3
 8010bba:	6823      	ldr	r3, [r4, #0]
 8010bbc:	4680      	mov	r8, r0
 8010bbe:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8010bc2:	4620      	mov	r0, r4
 8010bc4:	4798      	blx	r3
 8010bc6:	e9cd 8002 	strd	r8, r0, [sp, #8]
 8010bca:	ab09      	add	r3, sp, #36	; 0x24
 8010bcc:	9300      	str	r3, [sp, #0]
 8010bce:	9501      	str	r5, [sp, #4]
 8010bd0:	ab05      	add	r3, sp, #20
 8010bd2:	e897 0006 	ldmia.w	r7, {r1, r2}
 8010bd6:	4630      	mov	r0, r6
 8010bd8:	f7f6 f9a2 	bl	8006f20 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8010bdc:	b00e      	add	sp, #56	; 0x38
 8010bde:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010be2:	bf00      	nop
 8010be4:	20013818 	.word	0x20013818
 8010be8:	20013820 	.word	0x20013820
 8010bec:	20013814 	.word	0x20013814
 8010bf0:	2001381c 	.word	0x2001381c
 8010bf4:	200137bc 	.word	0x200137bc

08010bf8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8010bf8:	b538      	push	{r3, r4, r5, lr}
 8010bfa:	4b0e      	ldr	r3, [pc, #56]	; (8010c34 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8010bfc:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8010bfe:	881b      	ldrh	r3, [r3, #0]
 8010c00:	429a      	cmp	r2, r3
 8010c02:	4604      	mov	r4, r0
 8010c04:	d214      	bcs.n	8010c30 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 8010c06:	6803      	ldr	r3, [r0, #0]
 8010c08:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8010c0a:	4798      	blx	r3
 8010c0c:	6823      	ldr	r3, [r4, #0]
 8010c0e:	4605      	mov	r5, r0
 8010c10:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8010c12:	4620      	mov	r0, r4
 8010c14:	4798      	blx	r3
 8010c16:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8010c1a:	b22d      	sxth	r5, r5
 8010c1c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8010c20:	4601      	mov	r1, r0
 8010c22:	bf06      	itte	eq
 8010c24:	4602      	moveq	r2, r0
 8010c26:	4629      	moveq	r1, r5
 8010c28:	462a      	movne	r2, r5
 8010c2a:	4620      	mov	r0, r4
 8010c2c:	f7fd fdb6 	bl	800e79c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010c30:	bd38      	pop	{r3, r4, r5, pc}
 8010c32:	bf00      	nop
 8010c34:	20013818 	.word	0x20013818

08010c38 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8010c38:	b530      	push	{r4, r5, lr}
 8010c3a:	888b      	ldrh	r3, [r1, #4]
 8010c3c:	8583      	strh	r3, [r0, #44]	; 0x2c
 8010c3e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8010c42:	b085      	sub	sp, #20
 8010c44:	4604      	mov	r4, r0
 8010c46:	b923      	cbnz	r3, 8010c52 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8010c48:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8010c4c:	b90b      	cbnz	r3, 8010c52 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8010c4e:	f7ff ffd3 	bl	8010bf8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8010c52:	6823      	ldr	r3, [r4, #0]
 8010c54:	466d      	mov	r5, sp
 8010c56:	4621      	mov	r1, r4
 8010c58:	4628      	mov	r0, r5
 8010c5a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8010c5e:	4798      	blx	r3
 8010c60:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8010c64:	343c      	adds	r4, #60	; 0x3c
 8010c66:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8010c6a:	b005      	add	sp, #20
 8010c6c:	bd30      	pop	{r4, r5, pc}

08010c6e <_ZNK8touchgfx3Box12getSolidRectEv>:
 8010c6e:	2300      	movs	r3, #0
 8010c70:	8083      	strh	r3, [r0, #4]
 8010c72:	80c3      	strh	r3, [r0, #6]
 8010c74:	8003      	strh	r3, [r0, #0]
 8010c76:	8043      	strh	r3, [r0, #2]
 8010c78:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8010c7c:	2bff      	cmp	r3, #255	; 0xff
 8010c7e:	bf01      	itttt	eq
 8010c80:	890b      	ldrheq	r3, [r1, #8]
 8010c82:	8083      	strheq	r3, [r0, #4]
 8010c84:	894b      	ldrheq	r3, [r1, #10]
 8010c86:	80c3      	strheq	r3, [r0, #6]
 8010c88:	4770      	bx	lr
	...

08010c8c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8010c8c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010c8e:	4604      	mov	r4, r0
 8010c90:	6808      	ldr	r0, [r1, #0]
 8010c92:	6849      	ldr	r1, [r1, #4]
 8010c94:	466b      	mov	r3, sp
 8010c96:	c303      	stmia	r3!, {r0, r1}
 8010c98:	6823      	ldr	r3, [r4, #0]
 8010c9a:	4669      	mov	r1, sp
 8010c9c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010c9e:	4620      	mov	r0, r4
 8010ca0:	4798      	blx	r3
 8010ca2:	4b08      	ldr	r3, [pc, #32]	; (8010cc4 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8010ca4:	681b      	ldr	r3, [r3, #0]
 8010ca6:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8010caa:	b10a      	cbz	r2, 8010cb0 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8010cac:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8010cae:	b900      	cbnz	r0, 8010cb2 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8010cb0:	6898      	ldr	r0, [r3, #8]
 8010cb2:	6803      	ldr	r3, [r0, #0]
 8010cb4:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8010cb6:	6a1d      	ldr	r5, [r3, #32]
 8010cb8:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8010cbc:	4669      	mov	r1, sp
 8010cbe:	47a8      	blx	r5
 8010cc0:	b003      	add	sp, #12
 8010cc2:	bd30      	pop	{r4, r5, pc}
 8010cc4:	200137bc 	.word	0x200137bc

08010cc8 <_ZN8touchgfx3BoxD1Ev>:
 8010cc8:	4770      	bx	lr

08010cca <_ZN8touchgfx3BoxD0Ev>:
 8010cca:	b510      	push	{r4, lr}
 8010ccc:	212c      	movs	r1, #44	; 0x2c
 8010cce:	4604      	mov	r4, r0
 8010cd0:	f015 fdf5 	bl	80268be <_ZdlPvj>
 8010cd4:	4620      	mov	r0, r4
 8010cd6:	bd10      	pop	{r4, pc}

08010cd8 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8010cd8:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 8010cdc:	b12a      	cbz	r2, 8010cea <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8010cde:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8010ce2:	b112      	cbz	r2, 8010cea <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8010ce4:	6803      	ldr	r3, [r0, #0]
 8010ce6:	695b      	ldr	r3, [r3, #20]
 8010ce8:	4718      	bx	r3
 8010cea:	4770      	bx	lr

08010cec <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 8010cec:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 8010cf0:	600b      	str	r3, [r1, #0]
 8010cf2:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 8010cf6:	6013      	str	r3, [r2, #0]
 8010cf8:	4770      	bx	lr

08010cfa <_ZN8touchgfx5Gauge8setWidthEs>:
 8010cfa:	8101      	strh	r1, [r0, #8]
 8010cfc:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 8010d00:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 8010d04:	4770      	bx	lr

08010d06 <_ZN8touchgfx5Gauge9setHeightEs>:
 8010d06:	8141      	strh	r1, [r0, #10]
 8010d08:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 8010d0c:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 8010d10:	4770      	bx	lr

08010d12 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 8010d12:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 8010d16:	4770      	bx	lr

08010d18 <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 8010d18:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 8010d1c:	4770      	bx	lr

08010d1e <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 8010d1e:	4770      	bx	lr

08010d20 <_ZN8touchgfx5GaugeD1Ev>:
 8010d20:	4770      	bx	lr

08010d22 <_ZN8touchgfx5Gauge8setAlphaEh>:
 8010d22:	b538      	push	{r3, r4, r5, lr}
 8010d24:	4604      	mov	r4, r0
 8010d26:	460d      	mov	r5, r1
 8010d28:	f7fd fc51 	bl	800e5ce <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 8010d2c:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 8010d30:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 8010d34:	bd38      	pop	{r3, r4, r5, pc}

08010d36 <_ZN8touchgfx5GaugeD0Ev>:
 8010d36:	b510      	push	{r4, lr}
 8010d38:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 8010d3c:	4604      	mov	r4, r0
 8010d3e:	f015 fdbe 	bl	80268be <_ZdlPvj>
 8010d42:	4620      	mov	r0, r4
 8010d44:	bd10      	pop	{r4, pc}

08010d46 <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 8010d46:	b510      	push	{r4, lr}
 8010d48:	6803      	ldr	r3, [r0, #0]
 8010d4a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8010d4e:	4604      	mov	r4, r0
 8010d50:	4798      	blx	r3
 8010d52:	b170      	cbz	r0, 8010d72 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8010d54:	6823      	ldr	r3, [r4, #0]
 8010d56:	4620      	mov	r0, r4
 8010d58:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8010d5c:	4798      	blx	r3
 8010d5e:	b140      	cbz	r0, 8010d72 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8010d60:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010d64:	b12b      	cbz	r3, 8010d72 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8010d66:	6823      	ldr	r3, [r4, #0]
 8010d68:	4620      	mov	r0, r4
 8010d6a:	695b      	ldr	r3, [r3, #20]
 8010d6c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010d70:	4718      	bx	r3
 8010d72:	bd10      	pop	{r4, pc}

08010d74 <_ZN8touchgfx5GaugeC1Ev>:
 8010d74:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010d76:	4604      	mov	r4, r0
 8010d78:	4626      	mov	r6, r4
 8010d7a:	f7fd fd49 	bl	800e810 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8010d7e:	4b18      	ldr	r3, [pc, #96]	; (8010de0 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 8010d80:	f846 3bb4 	str.w	r3, [r6], #180
 8010d84:	a902      	add	r1, sp, #8
 8010d86:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8010d8a:	f821 3d04 	strh.w	r3, [r1, #-4]!
 8010d8e:	4630      	mov	r0, r6
 8010d90:	f014 ff7c 	bl	8025c8c <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 8010d94:	2500      	movs	r5, #0
 8010d96:	2301      	movs	r3, #1
 8010d98:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 8010d9c:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 8010da0:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 8010da4:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8010da8:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8010dac:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8010db0:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8010db4:	4638      	mov	r0, r7
 8010db6:	f014 f9ad 	bl	8025114 <_ZN8touchgfx6CircleC1Ev>
 8010dba:	f104 0158 	add.w	r1, r4, #88	; 0x58
 8010dbe:	4620      	mov	r0, r4
 8010dc0:	f7fd fdc7 	bl	800e952 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8010dc4:	4639      	mov	r1, r7
 8010dc6:	4620      	mov	r0, r4
 8010dc8:	f7fd fd82 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010dcc:	4620      	mov	r0, r4
 8010dce:	4631      	mov	r1, r6
 8010dd0:	f7fd fd7e 	bl	800e8d0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010dd4:	4620      	mov	r0, r4
 8010dd6:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 8010dda:	b003      	add	sp, #12
 8010ddc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010dde:	bf00      	nop
 8010de0:	0802b57c 	.word	0x0802b57c

08010de4 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8010de4:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 8010de8:	4770      	bx	lr

08010dea <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8010dea:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 8010dee:	4770      	bx	lr

08010df0 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 8010df0:	b538      	push	{r3, r4, r5, lr}
 8010df2:	8902      	ldrh	r2, [r0, #8]
 8010df4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8010df8:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 8010dfc:	4604      	mov	r4, r0
 8010dfe:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 8010e02:	2200      	movs	r2, #0
 8010e04:	4611      	mov	r1, r2
 8010e06:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 8010e0a:	4628      	mov	r0, r5
 8010e0c:	f7f1 fb35 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8010e10:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 8010e14:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8010e18:	1a9b      	subs	r3, r3, r2
 8010e1a:	ee07 3a90 	vmov	s15, r3
 8010e1e:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 8010e22:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 8010e26:	1a9b      	subs	r3, r3, r2
 8010e28:	ee07 3a10 	vmov	s14, r3
 8010e2c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010e30:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010e34:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 8010e38:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 8010e3c:	4628      	mov	r0, r5
 8010e3e:	f014 ff71 	bl	8025d24 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8010e42:	4b16      	ldr	r3, [pc, #88]	; (8010e9c <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 8010e44:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8010e48:	4628      	mov	r0, r5
 8010e4a:	f014 ff6b 	bl	8025d24 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8010e4e:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8010e52:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 8010e56:	ee07 3a90 	vmov	s15, r3
 8010e5a:	ee07 2a10 	vmov	s14, r2
 8010e5e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010e62:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010e66:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8010e6a:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 8010e6e:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 8010e72:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8010e76:	4628      	mov	r0, r5
 8010e78:	f014 ff54 	bl	8025d24 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8010e7c:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 8010e80:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 8010e84:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8010e88:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 8010e8c:	4628      	mov	r0, r5
 8010e8e:	f014 ff49 	bl	8025d24 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8010e92:	2301      	movs	r3, #1
 8010e94:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8010e98:	bd38      	pop	{r3, r4, r5, pc}
 8010e9a:	bf00      	nop
 8010e9c:	43960000 	.word	0x43960000

08010ea0 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 8010ea0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010ea2:	4604      	mov	r4, r0
 8010ea4:	a802      	add	r0, sp, #8
 8010ea6:	4616      	mov	r6, r2
 8010ea8:	f820 1d04 	strh.w	r1, [r0, #-4]!
 8010eac:	461d      	mov	r5, r3
 8010eae:	4601      	mov	r1, r0
 8010eb0:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8010eb4:	f015 f88c 	bl	8025fd0 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 8010eb8:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 8010ebc:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 8010ec0:	4620      	mov	r0, r4
 8010ec2:	f7ff ff95 	bl	8010df0 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8010ec6:	b002      	add	sp, #8
 8010ec8:	bd70      	pop	{r4, r5, r6, pc}

08010eca <_ZN8touchgfx5Gauge9setCenterEii>:
 8010eca:	b570      	push	{r4, r5, r6, lr}
 8010ecc:	4606      	mov	r6, r0
 8010ece:	460d      	mov	r5, r1
 8010ed0:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 8010ed4:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 8010ed8:	4614      	mov	r4, r2
 8010eda:	f7ff ff89 	bl	8010df0 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8010ede:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 8010ee2:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 8010ee6:	1aa4      	subs	r4, r4, r2
 8010ee8:	1a6d      	subs	r5, r5, r1
 8010eea:	0164      	lsls	r4, r4, #5
 8010eec:	016d      	lsls	r5, r5, #5
 8010eee:	3410      	adds	r4, #16
 8010ef0:	3510      	adds	r5, #16
 8010ef2:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 8010ef6:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 8010efa:	bd70      	pop	{r4, r5, r6, pc}

08010efc <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 8010efc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010efe:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8010f00:	0149      	lsls	r1, r1, #5
 8010f02:	4299      	cmp	r1, r3
 8010f04:	4604      	mov	r4, r0
 8010f06:	9101      	str	r1, [sp, #4]
 8010f08:	d00b      	beq.n	8010f22 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 8010f0a:	4601      	mov	r1, r0
 8010f0c:	aa01      	add	r2, sp, #4
 8010f0e:	a802      	add	r0, sp, #8
 8010f10:	f014 fafe 	bl	8025510 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8010f14:	9b01      	ldr	r3, [sp, #4]
 8010f16:	63e3      	str	r3, [r4, #60]	; 0x3c
 8010f18:	6823      	ldr	r3, [r4, #0]
 8010f1a:	a902      	add	r1, sp, #8
 8010f1c:	691b      	ldr	r3, [r3, #16]
 8010f1e:	4620      	mov	r0, r4
 8010f20:	4798      	blx	r3
 8010f22:	b004      	add	sp, #16
 8010f24:	bd10      	pop	{r4, pc}
	...

08010f28 <_ZN8touchgfx5Gauge8setValueEi>:
 8010f28:	b570      	push	{r4, r5, r6, lr}
 8010f2a:	4604      	mov	r4, r0
 8010f2c:	f7fd fba2 	bl	800e674 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8010f30:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8010f34:	429a      	cmp	r2, r3
 8010f36:	bfac      	ite	ge
 8010f38:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 8010f3c:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 8010f40:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8010f44:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 8010f48:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8010f4c:	1ac9      	subs	r1, r1, r3
 8010f4e:	2900      	cmp	r1, #0
 8010f50:	bfb8      	it	lt
 8010f52:	4249      	neglt	r1, r1
 8010f54:	b289      	uxth	r1, r1
 8010f56:	4620      	mov	r0, r4
 8010f58:	f7fd fbae 	bl	800e6b8 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8010f5c:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8010f60:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8010f64:	eddf 6a19 	vldr	s13, [pc, #100]	; 8010fcc <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 8010f68:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8010fd0 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 8010f6c:	429a      	cmp	r2, r3
 8010f6e:	4605      	mov	r5, r0
 8010f70:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 8010f74:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8010f78:	da15      	bge.n	8010fa6 <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 8010f7a:	1b5b      	subs	r3, r3, r5
 8010f7c:	ee07 3a90 	vmov	s15, r3
 8010f80:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010f84:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8010f88:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8010f8c:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8010f90:	ee21 1a07 	vmul.f32	s2, s2, s14
 8010f94:	f014 fe35 	bl	8025c02 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8010f98:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8010f9c:	1b49      	subs	r1, r1, r5
 8010f9e:	4630      	mov	r0, r6
 8010fa0:	f7ff ffac 	bl	8010efc <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 8010fa4:	bd70      	pop	{r4, r5, r6, pc}
 8010fa6:	442b      	add	r3, r5
 8010fa8:	ee07 3a90 	vmov	s15, r3
 8010fac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010fb0:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8010fb4:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8010fb8:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8010fbc:	ee21 1a07 	vmul.f32	s2, s2, s14
 8010fc0:	f014 fe1f 	bl	8025c02 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8010fc4:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8010fc8:	4429      	add	r1, r5
 8010fca:	e7e8      	b.n	8010f9e <_ZN8touchgfx5Gauge8setValueEi+0x76>
 8010fcc:	43340000 	.word	0x43340000
 8010fd0:	40490fdb 	.word	0x40490fdb

08010fd4 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 8010fd4:	b510      	push	{r4, lr}
 8010fd6:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 8010fda:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 8010fde:	0149      	lsls	r1, r1, #5
 8010fe0:	0152      	lsls	r2, r2, #5
 8010fe2:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 8010fe6:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 8010fea:	4604      	mov	r4, r0
 8010fec:	f7fd faec 	bl	800e5c8 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8010ff0:	4601      	mov	r1, r0
 8010ff2:	4620      	mov	r0, r4
 8010ff4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010ff8:	f7ff bf96 	b.w	8010f28 <_ZN8touchgfx5Gauge8setValueEi>

08010ffc <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8010ffc:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8011000:	4770      	bx	lr

08011002 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8011002:	b570      	push	{r4, r5, r6, lr}
 8011004:	880b      	ldrh	r3, [r1, #0]
 8011006:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8011008:	4605      	mov	r5, r0
 801100a:	8813      	ldrh	r3, [r2, #0]
 801100c:	f825 3f30 	strh.w	r3, [r5, #48]!
 8011010:	4604      	mov	r4, r0
 8011012:	4628      	mov	r0, r5
 8011014:	f006 f912 	bl	801723c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011018:	4606      	mov	r6, r0
 801101a:	4628      	mov	r0, r5
 801101c:	f006 f942 	bl	80172a4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011020:	6823      	ldr	r3, [r4, #0]
 8011022:	4605      	mov	r5, r0
 8011024:	4631      	mov	r1, r6
 8011026:	4620      	mov	r0, r4
 8011028:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801102a:	4798      	blx	r3
 801102c:	6823      	ldr	r3, [r4, #0]
 801102e:	4629      	mov	r1, r5
 8011030:	4620      	mov	r0, r4
 8011032:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011034:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011038:	4718      	bx	r3

0801103a <_ZN8touchgfx14AbstractButton13executeActionEv>:
 801103a:	b510      	push	{r4, lr}
 801103c:	4604      	mov	r4, r0
 801103e:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8011040:	b150      	cbz	r0, 8011058 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8011042:	6803      	ldr	r3, [r0, #0]
 8011044:	68db      	ldr	r3, [r3, #12]
 8011046:	4798      	blx	r3
 8011048:	b130      	cbz	r0, 8011058 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 801104a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 801104c:	6803      	ldr	r3, [r0, #0]
 801104e:	4621      	mov	r1, r4
 8011050:	689b      	ldr	r3, [r3, #8]
 8011052:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011056:	4718      	bx	r3
 8011058:	bd10      	pop	{r4, pc}

0801105a <_ZNK8touchgfx6Button12getSolidRectEv>:
 801105a:	b510      	push	{r4, lr}
 801105c:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8011060:	2bff      	cmp	r3, #255	; 0xff
 8011062:	4604      	mov	r4, r0
 8011064:	d006      	beq.n	8011074 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8011066:	2300      	movs	r3, #0
 8011068:	8003      	strh	r3, [r0, #0]
 801106a:	8043      	strh	r3, [r0, #2]
 801106c:	8083      	strh	r3, [r0, #4]
 801106e:	80c3      	strh	r3, [r0, #6]
 8011070:	4620      	mov	r0, r4
 8011072:	bd10      	pop	{r4, pc}
 8011074:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8011078:	b11b      	cbz	r3, 8011082 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 801107a:	3130      	adds	r1, #48	; 0x30
 801107c:	f006 f946 	bl	801730c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8011080:	e7f6      	b.n	8011070 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8011082:	312e      	adds	r1, #46	; 0x2e
 8011084:	e7fa      	b.n	801107c <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

08011088 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8011088:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801108c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8011090:	b08a      	sub	sp, #40	; 0x28
 8011092:	4604      	mov	r4, r0
 8011094:	4688      	mov	r8, r1
 8011096:	2b00      	cmp	r3, #0
 8011098:	d066      	beq.n	8011168 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 801109a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 801109c:	f8ad 3014 	strh.w	r3, [sp, #20]
 80110a0:	a805      	add	r0, sp, #20
 80110a2:	f006 f8cb 	bl	801723c <_ZNK8touchgfx6Bitmap8getWidthEv>
 80110a6:	4607      	mov	r7, r0
 80110a8:	a805      	add	r0, sp, #20
 80110aa:	f006 f8fb 	bl	80172a4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80110ae:	f9b8 6000 	ldrsh.w	r6, [r8]
 80110b2:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 80110b6:	4432      	add	r2, r6
 80110b8:	b292      	uxth	r2, r2
 80110ba:	2300      	movs	r3, #0
 80110bc:	fa0f fc82 	sxth.w	ip, r2
 80110c0:	459c      	cmp	ip, r3
 80110c2:	9306      	str	r3, [sp, #24]
 80110c4:	dd52      	ble.n	801116c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80110c6:	42b7      	cmp	r7, r6
 80110c8:	dd50      	ble.n	801116c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80110ca:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 80110ce:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 80110d2:	442b      	add	r3, r5
 80110d4:	b29b      	uxth	r3, r3
 80110d6:	b219      	sxth	r1, r3
 80110d8:	2900      	cmp	r1, #0
 80110da:	dd47      	ble.n	801116c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80110dc:	42a8      	cmp	r0, r5
 80110de:	dd45      	ble.n	801116c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80110e0:	4567      	cmp	r7, ip
 80110e2:	bfb8      	it	lt
 80110e4:	b2ba      	uxthlt	r2, r7
 80110e6:	4288      	cmp	r0, r1
 80110e8:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 80110ec:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80110f0:	bfb8      	it	lt
 80110f2:	b283      	uxthlt	r3, r0
 80110f4:	1b92      	subs	r2, r2, r6
 80110f6:	1b5b      	subs	r3, r3, r5
 80110f8:	f8ad 201c 	strh.w	r2, [sp, #28]
 80110fc:	f8ad 301e 	strh.w	r3, [sp, #30]
 8011100:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011104:	f8ad 501a 	strh.w	r5, [sp, #26]
 8011108:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801110c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8011110:	429a      	cmp	r2, r3
 8011112:	d026      	beq.n	8011162 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8011114:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8011118:	2b00      	cmp	r3, #0
 801111a:	dd22      	ble.n	8011162 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 801111c:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8011120:	2b00      	cmp	r3, #0
 8011122:	dd1e      	ble.n	8011162 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8011124:	2300      	movs	r3, #0
 8011126:	e9cd 3308 	strd	r3, r3, [sp, #32]
 801112a:	6823      	ldr	r3, [r4, #0]
 801112c:	a908      	add	r1, sp, #32
 801112e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011130:	4620      	mov	r0, r4
 8011132:	4798      	blx	r3
 8011134:	4b0f      	ldr	r3, [pc, #60]	; (8011174 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 8011136:	681b      	ldr	r3, [r3, #0]
 8011138:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801113c:	b10a      	cbz	r2, 8011142 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 801113e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8011140:	b900      	cbnz	r0, 8011144 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8011142:	6898      	ldr	r0, [r3, #8]
 8011144:	6801      	ldr	r1, [r0, #0]
 8011146:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801114a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801114e:	2501      	movs	r5, #1
 8011150:	9502      	str	r5, [sp, #8]
 8011152:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8011156:	9401      	str	r4, [sp, #4]
 8011158:	ac06      	add	r4, sp, #24
 801115a:	9400      	str	r4, [sp, #0]
 801115c:	688c      	ldr	r4, [r1, #8]
 801115e:	a905      	add	r1, sp, #20
 8011160:	47a0      	blx	r4
 8011162:	b00a      	add	sp, #40	; 0x28
 8011164:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011168:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 801116a:	e797      	b.n	801109c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 801116c:	2300      	movs	r3, #0
 801116e:	9307      	str	r3, [sp, #28]
 8011170:	e7ca      	b.n	8011108 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8011172:	bf00      	nop
 8011174:	200137bc 	.word	0x200137bc

08011178 <_ZNK8touchgfx6Button17invalidateContentEv>:
 8011178:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 801117c:	b12a      	cbz	r2, 801118a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 801117e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8011182:	b112      	cbz	r2, 801118a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8011184:	6803      	ldr	r3, [r0, #0]
 8011186:	695b      	ldr	r3, [r3, #20]
 8011188:	4718      	bx	r3
 801118a:	4770      	bx	lr

0801118c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 801118c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011190:	4b2f      	ldr	r3, [pc, #188]	; (8011250 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8011192:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8011194:	881b      	ldrh	r3, [r3, #0]
 8011196:	4293      	cmp	r3, r2
 8011198:	b08d      	sub	sp, #52	; 0x34
 801119a:	4604      	mov	r4, r0
 801119c:	460f      	mov	r7, r1
 801119e:	d954      	bls.n	801124a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 80111a0:	4b2c      	ldr	r3, [pc, #176]	; (8011254 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 80111a2:	6819      	ldr	r1, [r3, #0]
 80111a4:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 80111a8:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 80111ac:	4a2a      	ldr	r2, [pc, #168]	; (8011258 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 80111ae:	6812      	ldr	r2, [r2, #0]
 80111b0:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 80111b4:	2900      	cmp	r1, #0
 80111b6:	d048      	beq.n	801124a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 80111b8:	785a      	ldrb	r2, [r3, #1]
 80111ba:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 80111be:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 80111c2:	4b26      	ldr	r3, [pc, #152]	; (801125c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 80111c4:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 80111c8:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 80111cc:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 80111d0:	6b26      	ldr	r6, [r4, #48]	; 0x30
 80111d2:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 80111d6:	9107      	str	r1, [sp, #28]
 80111d8:	f3c2 0801 	ubfx	r8, r2, #0, #2
 80111dc:	f3c2 0281 	ubfx	r2, r2, #2, #2
 80111e0:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 80111e4:	681a      	ldr	r2, [r3, #0]
 80111e6:	f88d 8020 	strb.w	r8, [sp, #32]
 80111ea:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 80111ee:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 80111f2:	9609      	str	r6, [sp, #36]	; 0x24
 80111f4:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 80111f8:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 80111fc:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8011200:	b10b      	cbz	r3, 8011206 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8011202:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 8011204:	b905      	cbnz	r5, 8011208 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 8011206:	6895      	ldr	r5, [r2, #8]
 8011208:	ae05      	add	r6, sp, #20
 801120a:	4621      	mov	r1, r4
 801120c:	4630      	mov	r0, r6
 801120e:	f003 ff7b 	bl	8015108 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011212:	4b13      	ldr	r3, [pc, #76]	; (8011260 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8011214:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8011216:	6818      	ldr	r0, [r3, #0]
 8011218:	f7f5 fed0 	bl	8006fbc <_ZNK8touchgfx5Texts7getTextEt>
 801121c:	6823      	ldr	r3, [r4, #0]
 801121e:	4680      	mov	r8, r0
 8011220:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011222:	4620      	mov	r0, r4
 8011224:	4798      	blx	r3
 8011226:	6823      	ldr	r3, [r4, #0]
 8011228:	4681      	mov	r9, r0
 801122a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801122e:	4620      	mov	r0, r4
 8011230:	4798      	blx	r3
 8011232:	e9cd 9002 	strd	r9, r0, [sp, #8]
 8011236:	ab07      	add	r3, sp, #28
 8011238:	9300      	str	r3, [sp, #0]
 801123a:	f8cd 8004 	str.w	r8, [sp, #4]
 801123e:	463b      	mov	r3, r7
 8011240:	e896 0006 	ldmia.w	r6, {r1, r2}
 8011244:	4628      	mov	r0, r5
 8011246:	f7f5 fe6b 	bl	8006f20 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801124a:	b00d      	add	sp, #52	; 0x34
 801124c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011250:	20013818 	.word	0x20013818
 8011254:	20013814 	.word	0x20013814
 8011258:	2001381c 	.word	0x2001381c
 801125c:	200137bc 	.word	0x200137bc
 8011260:	20013820 	.word	0x20013820

08011264 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 8011264:	4770      	bx	lr

08011266 <_ZN8touchgfx14ButtonWithIconD1Ev>:
 8011266:	4770      	bx	lr

08011268 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 8011268:	b510      	push	{r4, lr}
 801126a:	213c      	movs	r1, #60	; 0x3c
 801126c:	4604      	mov	r4, r0
 801126e:	f015 fb26 	bl	80268be <_ZdlPvj>
 8011272:	4620      	mov	r0, r4
 8011274:	bd10      	pop	{r4, pc}

08011276 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 8011276:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801127a:	461c      	mov	r4, r3
 801127c:	4606      	mov	r6, r0
 801127e:	9f06      	ldr	r7, [sp, #24]
 8011280:	f7ff febf 	bl	8011002 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8011284:	8823      	ldrh	r3, [r4, #0]
 8011286:	86b3      	strh	r3, [r6, #52]	; 0x34
 8011288:	883b      	ldrh	r3, [r7, #0]
 801128a:	86f3      	strh	r3, [r6, #54]	; 0x36
 801128c:	4638      	mov	r0, r7
 801128e:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 8011292:	f005 ffd3 	bl	801723c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011296:	f04f 0802 	mov.w	r8, #2
 801129a:	fb95 f5f8 	sdiv	r5, r5, r8
 801129e:	b2ad      	uxth	r5, r5
 80112a0:	fb90 f0f8 	sdiv	r0, r0, r8
 80112a4:	1a2d      	subs	r5, r5, r0
 80112a6:	8735      	strh	r5, [r6, #56]	; 0x38
 80112a8:	4638      	mov	r0, r7
 80112aa:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 80112ae:	fb94 f4f8 	sdiv	r4, r4, r8
 80112b2:	f005 fff7 	bl	80172a4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80112b6:	b2a4      	uxth	r4, r4
 80112b8:	fb90 f0f8 	sdiv	r0, r0, r8
 80112bc:	1a24      	subs	r4, r4, r0
 80112be:	8774      	strh	r4, [r6, #58]	; 0x3a
 80112c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080112c4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 80112c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80112c8:	4604      	mov	r4, r0
 80112ca:	b08c      	sub	sp, #48	; 0x30
 80112cc:	460d      	mov	r5, r1
 80112ce:	f7ff fedb 	bl	8011088 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 80112d2:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 80112d6:	2b00      	cmp	r3, #0
 80112d8:	d05d      	beq.n	8011396 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 80112da:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80112dc:	f8ad 3014 	strh.w	r3, [sp, #20]
 80112e0:	a805      	add	r0, sp, #20
 80112e2:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 80112e6:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 80112ea:	f005 ffa7 	bl	801723c <_ZNK8touchgfx6Bitmap8getWidthEv>
 80112ee:	4606      	mov	r6, r0
 80112f0:	a805      	add	r0, sp, #20
 80112f2:	f005 ffd7 	bl	80172a4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80112f6:	6869      	ldr	r1, [r5, #4]
 80112f8:	f8ad 001e 	strh.w	r0, [sp, #30]
 80112fc:	6828      	ldr	r0, [r5, #0]
 80112fe:	f8ad 8018 	strh.w	r8, [sp, #24]
 8011302:	ab08      	add	r3, sp, #32
 8011304:	ad08      	add	r5, sp, #32
 8011306:	c303      	stmia	r3!, {r0, r1}
 8011308:	a906      	add	r1, sp, #24
 801130a:	4628      	mov	r0, r5
 801130c:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011310:	f8ad 601c 	strh.w	r6, [sp, #28]
 8011314:	f7fd fc62 	bl	800ebdc <_ZN8touchgfx4RectaNERKS0_>
 8011318:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801131c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8011320:	429a      	cmp	r2, r3
 8011322:	d035      	beq.n	8011390 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8011324:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8011328:	2b00      	cmp	r3, #0
 801132a:	dd31      	ble.n	8011390 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 801132c:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 8011330:	2b00      	cmp	r3, #0
 8011332:	dd2d      	ble.n	8011390 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8011334:	2300      	movs	r3, #0
 8011336:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 801133a:	6823      	ldr	r3, [r4, #0]
 801133c:	a90a      	add	r1, sp, #40	; 0x28
 801133e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011340:	4620      	mov	r0, r4
 8011342:	4798      	blx	r3
 8011344:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8011348:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 801134a:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 801134e:	1a9b      	subs	r3, r3, r2
 8011350:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011354:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 8011356:	1ac9      	subs	r1, r1, r3
 8011358:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 801135c:	490f      	ldr	r1, [pc, #60]	; (801139c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 801135e:	6809      	ldr	r1, [r1, #0]
 8011360:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 8011364:	b108      	cbz	r0, 801136a <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 8011366:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 8011368:	b900      	cbnz	r0, 801136c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 801136a:	6888      	ldr	r0, [r1, #8]
 801136c:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 8011370:	440b      	add	r3, r1
 8011372:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8011376:	2601      	movs	r6, #1
 8011378:	440a      	add	r2, r1
 801137a:	6801      	ldr	r1, [r0, #0]
 801137c:	9602      	str	r6, [sp, #8]
 801137e:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8011382:	e9cd 5400 	strd	r5, r4, [sp]
 8011386:	b21b      	sxth	r3, r3
 8011388:	688c      	ldr	r4, [r1, #8]
 801138a:	b212      	sxth	r2, r2
 801138c:	a905      	add	r1, sp, #20
 801138e:	47a0      	blx	r4
 8011390:	b00c      	add	sp, #48	; 0x30
 8011392:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011396:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8011398:	e7a0      	b.n	80112dc <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 801139a:	bf00      	nop
 801139c:	200137bc 	.word	0x200137bc

080113a0 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 80113a0:	b510      	push	{r4, lr}
 80113a2:	2101      	movs	r1, #1
 80113a4:	2200      	movs	r2, #0
 80113a6:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80113aa:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 80113ae:	4c0e      	ldr	r4, [pc, #56]	; (80113e8 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 80113b0:	8082      	strh	r2, [r0, #4]
 80113b2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80113b6:	80c2      	strh	r2, [r0, #6]
 80113b8:	8102      	strh	r2, [r0, #8]
 80113ba:	8142      	strh	r2, [r0, #10]
 80113bc:	8182      	strh	r2, [r0, #12]
 80113be:	81c2      	strh	r2, [r0, #14]
 80113c0:	8202      	strh	r2, [r0, #16]
 80113c2:	8242      	strh	r2, [r0, #18]
 80113c4:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80113c8:	61c2      	str	r2, [r0, #28]
 80113ca:	8402      	strh	r2, [r0, #32]
 80113cc:	8442      	strh	r2, [r0, #34]	; 0x22
 80113ce:	6282      	str	r2, [r0, #40]	; 0x28
 80113d0:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 80113d4:	85c1      	strh	r1, [r0, #46]	; 0x2e
 80113d6:	8601      	strh	r1, [r0, #48]	; 0x30
 80113d8:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 80113dc:	6004      	str	r4, [r0, #0]
 80113de:	8681      	strh	r1, [r0, #52]	; 0x34
 80113e0:	86c1      	strh	r1, [r0, #54]	; 0x36
 80113e2:	8702      	strh	r2, [r0, #56]	; 0x38
 80113e4:	8742      	strh	r2, [r0, #58]	; 0x3a
 80113e6:	bd10      	pop	{r4, pc}
 80113e8:	0802b664 	.word	0x0802b664

080113ec <_ZN8touchgfx5ImageD1Ev>:
 80113ec:	4770      	bx	lr

080113ee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 80113ee:	b570      	push	{r4, r5, r6, lr}
 80113f0:	880b      	ldrh	r3, [r1, #0]
 80113f2:	84c3      	strh	r3, [r0, #38]	; 0x26
 80113f4:	4604      	mov	r4, r0
 80113f6:	4608      	mov	r0, r1
 80113f8:	460d      	mov	r5, r1
 80113fa:	f005 ff1f 	bl	801723c <_ZNK8touchgfx6Bitmap8getWidthEv>
 80113fe:	4606      	mov	r6, r0
 8011400:	4628      	mov	r0, r5
 8011402:	f005 ff4f 	bl	80172a4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011406:	6823      	ldr	r3, [r4, #0]
 8011408:	4605      	mov	r5, r0
 801140a:	4631      	mov	r1, r6
 801140c:	4620      	mov	r0, r4
 801140e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011410:	4798      	blx	r3
 8011412:	6823      	ldr	r3, [r4, #0]
 8011414:	4629      	mov	r1, r5
 8011416:	4620      	mov	r0, r4
 8011418:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801141a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801141e:	4718      	bx	r3

08011420 <_ZN8touchgfx5ImageD0Ev>:
 8011420:	b510      	push	{r4, lr}
 8011422:	212c      	movs	r1, #44	; 0x2c
 8011424:	4604      	mov	r4, r0
 8011426:	f015 fa4a 	bl	80268be <_ZdlPvj>
 801142a:	4620      	mov	r0, r4
 801142c:	bd10      	pop	{r4, pc}

0801142e <_ZNK8touchgfx5Image12getSolidRectEv>:
 801142e:	b510      	push	{r4, lr}
 8011430:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8011434:	2bff      	cmp	r3, #255	; 0xff
 8011436:	4604      	mov	r4, r0
 8011438:	d006      	beq.n	8011448 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 801143a:	2300      	movs	r3, #0
 801143c:	8003      	strh	r3, [r0, #0]
 801143e:	8043      	strh	r3, [r0, #2]
 8011440:	8083      	strh	r3, [r0, #4]
 8011442:	80c3      	strh	r3, [r0, #6]
 8011444:	4620      	mov	r0, r4
 8011446:	bd10      	pop	{r4, pc}
 8011448:	3126      	adds	r1, #38	; 0x26
 801144a:	f005 ff5f 	bl	801730c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801144e:	e7f9      	b.n	8011444 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

08011450 <_ZNK8touchgfx5Image17invalidateContentEv>:
 8011450:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 8011454:	b12a      	cbz	r2, 8011462 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8011456:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 801145a:	b112      	cbz	r2, 8011462 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 801145c:	6803      	ldr	r3, [r0, #0]
 801145e:	695b      	ldr	r3, [r3, #20]
 8011460:	4718      	bx	r3
 8011462:	4770      	bx	lr

08011464 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8011464:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011468:	4604      	mov	r4, r0
 801146a:	b088      	sub	sp, #32
 801146c:	f854 3b26 	ldr.w	r3, [r4], #38
 8011470:	2500      	movs	r5, #0
 8011472:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011474:	460f      	mov	r7, r1
 8011476:	e9cd 5504 	strd	r5, r5, [sp, #16]
 801147a:	a904      	add	r1, sp, #16
 801147c:	4606      	mov	r6, r0
 801147e:	4798      	blx	r3
 8011480:	4620      	mov	r0, r4
 8011482:	f005 fedb 	bl	801723c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011486:	4680      	mov	r8, r0
 8011488:	4620      	mov	r0, r4
 801148a:	f005 ff0b 	bl	80172a4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801148e:	9506      	str	r5, [sp, #24]
 8011490:	ad06      	add	r5, sp, #24
 8011492:	f8ad 001e 	strh.w	r0, [sp, #30]
 8011496:	4639      	mov	r1, r7
 8011498:	4628      	mov	r0, r5
 801149a:	f8ad 801c 	strh.w	r8, [sp, #28]
 801149e:	f7fd fb9d 	bl	800ebdc <_ZN8touchgfx4RectaNERKS0_>
 80114a2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80114a6:	2b00      	cmp	r3, #0
 80114a8:	dd19      	ble.n	80114de <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 80114aa:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80114ae:	2b00      	cmp	r3, #0
 80114b0:	dd15      	ble.n	80114de <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 80114b2:	4b0c      	ldr	r3, [pc, #48]	; (80114e4 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 80114b4:	681b      	ldr	r3, [r3, #0]
 80114b6:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80114ba:	b10a      	cbz	r2, 80114c0 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 80114bc:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80114be:	b900      	cbnz	r0, 80114c2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 80114c0:	6898      	ldr	r0, [r3, #8]
 80114c2:	6801      	ldr	r1, [r0, #0]
 80114c4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80114c8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80114cc:	2701      	movs	r7, #1
 80114ce:	9702      	str	r7, [sp, #8]
 80114d0:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 80114d4:	e9cd 5600 	strd	r5, r6, [sp]
 80114d8:	688d      	ldr	r5, [r1, #8]
 80114da:	4621      	mov	r1, r4
 80114dc:	47a8      	blx	r5
 80114de:	b008      	add	sp, #32
 80114e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80114e4:	200137bc 	.word	0x200137bc

080114e8 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 80114e8:	4770      	bx	lr

080114ea <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 80114ea:	b510      	push	{r4, lr}
 80114ec:	2148      	movs	r1, #72	; 0x48
 80114ee:	4604      	mov	r4, r0
 80114f0:	f015 f9e5 	bl	80268be <_ZdlPvj>
 80114f4:	4620      	mov	r0, r4
 80114f6:	bd10      	pop	{r4, pc}

080114f8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 80114f8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80114fc:	b08d      	sub	sp, #52	; 0x34
 80114fe:	4604      	mov	r4, r0
 8011500:	460f      	mov	r7, r1
 8011502:	f7ff fdc1 	bl	8011088 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8011506:	4a55      	ldr	r2, [pc, #340]	; (801165c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 8011508:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801150a:	8812      	ldrh	r2, [r2, #0]
 801150c:	429a      	cmp	r2, r3
 801150e:	f240 8082 	bls.w	8011616 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8011512:	4d53      	ldr	r5, [pc, #332]	; (8011660 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 8011514:	682a      	ldr	r2, [r5, #0]
 8011516:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 801151a:	4b52      	ldr	r3, [pc, #328]	; (8011664 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 801151c:	681b      	ldr	r3, [r3, #0]
 801151e:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8011522:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 8011526:	2200      	movs	r2, #0
 8011528:	e9cd 2203 	strd	r2, r2, [sp, #12]
 801152c:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 8011530:	2a03      	cmp	r2, #3
 8011532:	d811      	bhi.n	8011558 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8011534:	e8df f002 	tbb	[pc, r2]
 8011538:	89727902 	.word	0x89727902
 801153c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8011540:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8011544:	1ad2      	subs	r2, r2, r3
 8011546:	2002      	movs	r0, #2
 8011548:	f8ad 1010 	strh.w	r1, [sp, #16]
 801154c:	fb92 f2f0 	sdiv	r2, r2, r0
 8011550:	f8ad 3012 	strh.w	r3, [sp, #18]
 8011554:	f8ad 200e 	strh.w	r2, [sp, #14]
 8011558:	f10d 080c 	add.w	r8, sp, #12
 801155c:	e898 0003 	ldmia.w	r8, {r0, r1}
 8011560:	f10d 0914 	add.w	r9, sp, #20
 8011564:	e889 0003 	stmia.w	r9, {r0, r1}
 8011568:	4639      	mov	r1, r7
 801156a:	4648      	mov	r0, r9
 801156c:	f7fd fb36 	bl	800ebdc <_ZN8touchgfx4RectaNERKS0_>
 8011570:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8011574:	2b00      	cmp	r3, #0
 8011576:	dd4e      	ble.n	8011616 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8011578:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 801157c:	2b00      	cmp	r3, #0
 801157e:	dd4a      	ble.n	8011616 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8011580:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8011584:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8011588:	1a9b      	subs	r3, r3, r2
 801158a:	f8ad 3014 	strh.w	r3, [sp, #20]
 801158e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8011592:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8011596:	1a9b      	subs	r3, r3, r2
 8011598:	f8ad 3016 	strh.w	r3, [sp, #22]
 801159c:	6823      	ldr	r3, [r4, #0]
 801159e:	4641      	mov	r1, r8
 80115a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80115a2:	4620      	mov	r0, r4
 80115a4:	4798      	blx	r3
 80115a6:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 80115aa:	2b00      	cmp	r3, #0
 80115ac:	d053      	beq.n	8011656 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 80115ae:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80115b0:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 80115b2:	682b      	ldr	r3, [r5, #0]
 80115b4:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 80115b8:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 80115bc:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 80115c0:	785b      	ldrb	r3, [r3, #1]
 80115c2:	9209      	str	r2, [sp, #36]	; 0x24
 80115c4:	f3c3 0501 	ubfx	r5, r3, #0, #2
 80115c8:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80115cc:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 80115d0:	2300      	movs	r3, #0
 80115d2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80115d6:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 80115da:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 80115de:	4b22      	ldr	r3, [pc, #136]	; (8011668 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 80115e0:	9607      	str	r6, [sp, #28]
 80115e2:	681b      	ldr	r3, [r3, #0]
 80115e4:	f88d 5020 	strb.w	r5, [sp, #32]
 80115e8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80115ec:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80115f0:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80115f4:	b10a      	cbz	r2, 80115fa <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 80115f6:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 80115f8:	b904      	cbnz	r4, 80115fc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 80115fa:	689c      	ldr	r4, [r3, #8]
 80115fc:	4b1b      	ldr	r3, [pc, #108]	; (801166c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 80115fe:	6818      	ldr	r0, [r3, #0]
 8011600:	f7f5 fcdc 	bl	8006fbc <_ZNK8touchgfx5Texts7getTextEt>
 8011604:	ab07      	add	r3, sp, #28
 8011606:	9001      	str	r0, [sp, #4]
 8011608:	9300      	str	r3, [sp, #0]
 801160a:	e898 0006 	ldmia.w	r8, {r1, r2}
 801160e:	464b      	mov	r3, r9
 8011610:	4620      	mov	r0, r4
 8011612:	f7f5 fc85 	bl	8006f20 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8011616:	b00d      	add	sp, #52	; 0x34
 8011618:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801161c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8011620:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8011624:	1ad2      	subs	r2, r2, r3
 8011626:	3201      	adds	r2, #1
 8011628:	e78d      	b.n	8011546 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 801162a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 801162e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8011632:	1ad2      	subs	r2, r2, r3
 8011634:	3201      	adds	r2, #1
 8011636:	2002      	movs	r0, #2
 8011638:	f8ad 3010 	strh.w	r3, [sp, #16]
 801163c:	fb92 f2f0 	sdiv	r2, r2, r0
 8011640:	f8ad 1012 	strh.w	r1, [sp, #18]
 8011644:	f8ad 200c 	strh.w	r2, [sp, #12]
 8011648:	e786      	b.n	8011558 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 801164a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 801164e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8011652:	1ad2      	subs	r2, r2, r3
 8011654:	e7ef      	b.n	8011636 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 8011656:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8011658:	e7aa      	b.n	80115b0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 801165a:	bf00      	nop
 801165c:	20013818 	.word	0x20013818
 8011660:	20013814 	.word	0x20013814
 8011664:	2001381c 	.word	0x2001381c
 8011668:	200137bc 	.word	0x200137bc
 801166c:	20013820 	.word	0x20013820

08011670 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8011670:	b510      	push	{r4, lr}
 8011672:	2101      	movs	r1, #1
 8011674:	4c13      	ldr	r4, [pc, #76]	; (80116c4 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 8011676:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801167a:	2200      	movs	r2, #0
 801167c:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8011680:	6004      	str	r4, [r0, #0]
 8011682:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8011686:	4c10      	ldr	r4, [pc, #64]	; (80116c8 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 8011688:	8082      	strh	r2, [r0, #4]
 801168a:	80c2      	strh	r2, [r0, #6]
 801168c:	8102      	strh	r2, [r0, #8]
 801168e:	8142      	strh	r2, [r0, #10]
 8011690:	8182      	strh	r2, [r0, #12]
 8011692:	81c2      	strh	r2, [r0, #14]
 8011694:	8202      	strh	r2, [r0, #16]
 8011696:	8242      	strh	r2, [r0, #18]
 8011698:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801169c:	61c2      	str	r2, [r0, #28]
 801169e:	8402      	strh	r2, [r0, #32]
 80116a0:	8442      	strh	r2, [r0, #34]	; 0x22
 80116a2:	6282      	str	r2, [r0, #40]	; 0x28
 80116a4:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 80116a8:	85c1      	strh	r1, [r0, #46]	; 0x2e
 80116aa:	8601      	strh	r1, [r0, #48]	; 0x30
 80116ac:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 80116b0:	6344      	str	r4, [r0, #52]	; 0x34
 80116b2:	8701      	strh	r1, [r0, #56]	; 0x38
 80116b4:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 80116b8:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 80116bc:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 80116c0:	bd10      	pop	{r4, pc}
 80116c2:	bf00      	nop
 80116c4:	0802b748 	.word	0x0802b748
 80116c8:	080290ac 	.word	0x080290ac

080116cc <_ZN8touchgfx7OutlineD1Ev>:
 80116cc:	4770      	bx	lr

080116ce <_ZN8touchgfx7OutlineD0Ev>:
 80116ce:	b510      	push	{r4, lr}
 80116d0:	2130      	movs	r1, #48	; 0x30
 80116d2:	4604      	mov	r4, r0
 80116d4:	f015 f8f3 	bl	80268be <_ZdlPvj>
 80116d8:	4620      	mov	r0, r4
 80116da:	bd10      	pop	{r4, pc}

080116dc <_ZN8touchgfx7Outline5resetEv>:
 80116dc:	b510      	push	{r4, lr}
 80116de:	4604      	mov	r4, r0
 80116e0:	f000 fe96 	bl	8012410 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 80116e4:	60e0      	str	r0, [r4, #12]
 80116e6:	f000 fe99 	bl	801241c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 80116ea:	68e3      	ldr	r3, [r4, #12]
 80116ec:	6123      	str	r3, [r4, #16]
 80116ee:	08c0      	lsrs	r0, r0, #3
 80116f0:	2200      	movs	r2, #0
 80116f2:	f647 71ff 	movw	r1, #32767	; 0x7fff
 80116f6:	3801      	subs	r0, #1
 80116f8:	6060      	str	r0, [r4, #4]
 80116fa:	60a2      	str	r2, [r4, #8]
 80116fc:	8019      	strh	r1, [r3, #0]
 80116fe:	8059      	strh	r1, [r3, #2]
 8011700:	809a      	strh	r2, [r3, #4]
 8011702:	80da      	strh	r2, [r3, #6]
 8011704:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8011706:	f023 0301 	bic.w	r3, r3, #1
 801170a:	f043 0302 	orr.w	r3, r3, #2
 801170e:	6263      	str	r3, [r4, #36]	; 0x24
 8011710:	bd10      	pop	{r4, pc}
	...

08011714 <_ZN8touchgfx7OutlineC1Ev>:
 8011714:	b510      	push	{r4, lr}
 8011716:	4b0a      	ldr	r3, [pc, #40]	; (8011740 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 8011718:	6003      	str	r3, [r0, #0]
 801171a:	2300      	movs	r3, #0
 801171c:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8011720:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8011724:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8011728:	e9c0 3307 	strd	r3, r3, [r0, #28]
 801172c:	6243      	str	r3, [r0, #36]	; 0x24
 801172e:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8011732:	4604      	mov	r4, r0
 8011734:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 8011738:	f7ff ffd0 	bl	80116dc <_ZN8touchgfx7Outline5resetEv>
 801173c:	4620      	mov	r0, r4
 801173e:	bd10      	pop	{r4, pc}
 8011740:	0802b7bc 	.word	0x0802b7bc

08011744 <_ZN8touchgfx7Outline10renderLineEiiii>:
 8011744:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011748:	b093      	sub	sp, #76	; 0x4c
 801174a:	1156      	asrs	r6, r2, #5
 801174c:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801174e:	9305      	str	r3, [sp, #20]
 8011750:	f004 051f 	and.w	r5, r4, #31
 8011754:	1153      	asrs	r3, r2, #5
 8011756:	9504      	str	r5, [sp, #16]
 8011758:	1165      	asrs	r5, r4, #5
 801175a:	9303      	str	r3, [sp, #12]
 801175c:	42ae      	cmp	r6, r5
 801175e:	ea4f 1364 	mov.w	r3, r4, asr #5
 8011762:	9306      	str	r3, [sp, #24]
 8011764:	f002 031f 	and.w	r3, r2, #31
 8011768:	f040 80f8 	bne.w	801195c <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 801176c:	9c04      	ldr	r4, [sp, #16]
 801176e:	9a05      	ldr	r2, [sp, #20]
 8011770:	42a3      	cmp	r3, r4
 8011772:	ea4f 1e62 	mov.w	lr, r2, asr #5
 8011776:	6902      	ldr	r2, [r0, #16]
 8011778:	d125      	bne.n	80117c6 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 801177a:	f9b2 3000 	ldrsh.w	r3, [r2]
 801177e:	459e      	cmp	lr, r3
 8011780:	d103      	bne.n	801178a <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8011782:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8011786:	429e      	cmp	r6, r3
 8011788:	d035      	beq.n	80117f6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801178a:	88d1      	ldrh	r1, [r2, #6]
 801178c:	8893      	ldrh	r3, [r2, #4]
 801178e:	430b      	orrs	r3, r1
 8011790:	d010      	beq.n	80117b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8011792:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8011796:	2b00      	cmp	r3, #0
 8011798:	db0c      	blt.n	80117b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 801179a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801179c:	428b      	cmp	r3, r1
 801179e:	da09      	bge.n	80117b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 80117a0:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 80117a4:	428b      	cmp	r3, r1
 80117a6:	bf38      	it	cc
 80117a8:	3208      	addcc	r2, #8
 80117aa:	f103 0301 	add.w	r3, r3, #1
 80117ae:	bf38      	it	cc
 80117b0:	6102      	strcc	r2, [r0, #16]
 80117b2:	6083      	str	r3, [r0, #8]
 80117b4:	6903      	ldr	r3, [r0, #16]
 80117b6:	9a03      	ldr	r2, [sp, #12]
 80117b8:	f8a3 e000 	strh.w	lr, [r3]
 80117bc:	805a      	strh	r2, [r3, #2]
 80117be:	2200      	movs	r2, #0
 80117c0:	809a      	strh	r2, [r3, #4]
 80117c2:	80da      	strh	r2, [r3, #6]
 80117c4:	e017      	b.n	80117f6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80117c6:	9c05      	ldr	r4, [sp, #20]
 80117c8:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 80117cc:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 80117d0:	f004 041f 	and.w	r4, r4, #31
 80117d4:	114e      	asrs	r6, r1, #5
 80117d6:	9402      	str	r4, [sp, #8]
 80117d8:	9c04      	ldr	r4, [sp, #16]
 80117da:	4576      	cmp	r6, lr
 80117dc:	f001 0c1f 	and.w	ip, r1, #31
 80117e0:	eba4 0403 	sub.w	r4, r4, r3
 80117e4:	d10a      	bne.n	80117fc <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 80117e6:	9b02      	ldr	r3, [sp, #8]
 80117e8:	449c      	add	ip, r3
 80117ea:	44a0      	add	r8, r4
 80117ec:	fb04 a40c 	mla	r4, r4, ip, sl
 80117f0:	f8a2 8004 	strh.w	r8, [r2, #4]
 80117f4:	80d4      	strh	r4, [r2, #6]
 80117f6:	b013      	add	sp, #76	; 0x4c
 80117f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80117fc:	9d05      	ldr	r5, [sp, #20]
 80117fe:	1a69      	subs	r1, r5, r1
 8011800:	bf5b      	ittet	pl
 8011802:	f1cc 0520 	rsbpl	r5, ip, #32
 8011806:	436c      	mulpl	r4, r5
 8011808:	2500      	movmi	r5, #0
 801180a:	2520      	movpl	r5, #32
 801180c:	bf44      	itt	mi
 801180e:	fb04 f40c 	mulmi.w	r4, r4, ip
 8011812:	4249      	negmi	r1, r1
 8011814:	9501      	str	r5, [sp, #4]
 8011816:	9f01      	ldr	r7, [sp, #4]
 8011818:	fb94 f5f1 	sdiv	r5, r4, r1
 801181c:	fb01 4415 	mls	r4, r1, r5, r4
 8011820:	bf54      	ite	pl
 8011822:	f04f 0901 	movpl.w	r9, #1
 8011826:	f04f 39ff 	movmi.w	r9, #4294967295
 801182a:	2c00      	cmp	r4, #0
 801182c:	bfb8      	it	lt
 801182e:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8011832:	44bc      	add	ip, r7
 8011834:	44a8      	add	r8, r5
 8011836:	fb05 ac0c 	mla	ip, r5, ip, sl
 801183a:	f8a2 8004 	strh.w	r8, [r2, #4]
 801183e:	f8a2 c006 	strh.w	ip, [r2, #6]
 8011842:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8011846:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 801184a:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 801184e:	bfb8      	it	lt
 8011850:	1864      	addlt	r4, r4, r1
 8011852:	ea58 0202 	orrs.w	r2, r8, r2
 8011856:	444e      	add	r6, r9
 8011858:	d011      	beq.n	801187e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801185a:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 801185e:	f1b8 0f00 	cmp.w	r8, #0
 8011862:	db0c      	blt.n	801187e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8011864:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8011866:	4590      	cmp	r8, r2
 8011868:	da09      	bge.n	801187e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801186a:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 801186e:	4590      	cmp	r8, r2
 8011870:	bf3c      	itt	cc
 8011872:	f10c 0208 	addcc.w	r2, ip, #8
 8011876:	6102      	strcc	r2, [r0, #16]
 8011878:	f108 0201 	add.w	r2, r8, #1
 801187c:	6082      	str	r2, [r0, #8]
 801187e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8011882:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8011886:	f8ac 6000 	strh.w	r6, [ip]
 801188a:	2700      	movs	r7, #0
 801188c:	45b6      	cmp	lr, r6
 801188e:	f8ac 2002 	strh.w	r2, [ip, #2]
 8011892:	f8ac 7004 	strh.w	r7, [ip, #4]
 8011896:	f8ac 7006 	strh.w	r7, [ip, #6]
 801189a:	442b      	add	r3, r5
 801189c:	d04d      	beq.n	801193a <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 801189e:	9f04      	ldr	r7, [sp, #16]
 80118a0:	1aff      	subs	r7, r7, r3
 80118a2:	443d      	add	r5, r7
 80118a4:	016d      	lsls	r5, r5, #5
 80118a6:	fb95 f8f1 	sdiv	r8, r5, r1
 80118aa:	fb01 5518 	mls	r5, r1, r8, r5
 80118ae:	2d00      	cmp	r5, #0
 80118b0:	bfb8      	it	lt
 80118b2:	f108 38ff 	addlt.w	r8, r8, #4294967295
 80118b6:	f108 0701 	add.w	r7, r8, #1
 80118ba:	bfb8      	it	lt
 80118bc:	186d      	addlt	r5, r5, r1
 80118be:	1a64      	subs	r4, r4, r1
 80118c0:	9703      	str	r7, [sp, #12]
 80118c2:	f04f 0a00 	mov.w	sl, #0
 80118c6:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80118ca:	1964      	adds	r4, r4, r5
 80118cc:	bf58      	it	pl
 80118ce:	9f03      	ldrpl	r7, [sp, #12]
 80118d0:	f8bc b004 	ldrh.w	fp, [ip, #4]
 80118d4:	bf48      	it	mi
 80118d6:	4647      	movmi	r7, r8
 80118d8:	44bb      	add	fp, r7
 80118da:	f8ac b004 	strh.w	fp, [ip, #4]
 80118de:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80118e2:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 80118e6:	f8ac b006 	strh.w	fp, [ip, #6]
 80118ea:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80118ee:	443b      	add	r3, r7
 80118f0:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80118f4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80118f8:	bf58      	it	pl
 80118fa:	1a64      	subpl	r4, r4, r1
 80118fc:	ea5b 0707 	orrs.w	r7, fp, r7
 8011900:	444e      	add	r6, r9
 8011902:	d011      	beq.n	8011928 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8011904:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8011908:	f1bb 0f00 	cmp.w	fp, #0
 801190c:	db0c      	blt.n	8011928 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 801190e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8011910:	45bb      	cmp	fp, r7
 8011912:	da09      	bge.n	8011928 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8011914:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8011918:	45bb      	cmp	fp, r7
 801191a:	bf3c      	itt	cc
 801191c:	f10c 0708 	addcc.w	r7, ip, #8
 8011920:	6107      	strcc	r7, [r0, #16]
 8011922:	f10b 0701 	add.w	r7, fp, #1
 8011926:	6087      	str	r7, [r0, #8]
 8011928:	6907      	ldr	r7, [r0, #16]
 801192a:	45b6      	cmp	lr, r6
 801192c:	803e      	strh	r6, [r7, #0]
 801192e:	807a      	strh	r2, [r7, #2]
 8011930:	f8a7 a004 	strh.w	sl, [r7, #4]
 8011934:	f8a7 a006 	strh.w	sl, [r7, #6]
 8011938:	d1c5      	bne.n	80118c6 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 801193a:	9a04      	ldr	r2, [sp, #16]
 801193c:	1ad3      	subs	r3, r2, r3
 801193e:	6902      	ldr	r2, [r0, #16]
 8011940:	8891      	ldrh	r1, [r2, #4]
 8011942:	88d6      	ldrh	r6, [r2, #6]
 8011944:	4419      	add	r1, r3
 8011946:	8091      	strh	r1, [r2, #4]
 8011948:	9902      	ldr	r1, [sp, #8]
 801194a:	f101 0c20 	add.w	ip, r1, #32
 801194e:	9901      	ldr	r1, [sp, #4]
 8011950:	ebac 0c01 	sub.w	ip, ip, r1
 8011954:	fb03 630c 	mla	r3, r3, ip, r6
 8011958:	80d3      	strh	r3, [r2, #6]
 801195a:	e74c      	b.n	80117f6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801195c:	9d05      	ldr	r5, [sp, #20]
 801195e:	1aa2      	subs	r2, r4, r2
 8011960:	eba5 0501 	sub.w	r5, r5, r1
 8011964:	9508      	str	r5, [sp, #32]
 8011966:	9202      	str	r2, [sp, #8]
 8011968:	f140 8128 	bpl.w	8011bbc <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 801196c:	9a03      	ldr	r2, [sp, #12]
 801196e:	2a00      	cmp	r2, #0
 8011970:	f6ff af41 	blt.w	80117f6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8011974:	9a02      	ldr	r2, [sp, #8]
 8011976:	4252      	negs	r2, r2
 8011978:	9202      	str	r2, [sp, #8]
 801197a:	9a06      	ldr	r2, [sp, #24]
 801197c:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8011980:	f04f 34ff 	mov.w	r4, #4294967295
 8011984:	9206      	str	r2, [sp, #24]
 8011986:	462a      	mov	r2, r5
 8011988:	940b      	str	r4, [sp, #44]	; 0x2c
 801198a:	435a      	muls	r2, r3
 801198c:	2400      	movs	r4, #0
 801198e:	9d02      	ldr	r5, [sp, #8]
 8011990:	9401      	str	r4, [sp, #4]
 8011992:	9c02      	ldr	r4, [sp, #8]
 8011994:	fb92 f4f4 	sdiv	r4, r2, r4
 8011998:	fb05 2214 	mls	r2, r5, r4, r2
 801199c:	2a00      	cmp	r2, #0
 801199e:	9207      	str	r2, [sp, #28]
 80119a0:	bfbc      	itt	lt
 80119a2:	1952      	addlt	r2, r2, r5
 80119a4:	9207      	strlt	r2, [sp, #28]
 80119a6:	9a01      	ldr	r2, [sp, #4]
 80119a8:	6905      	ldr	r5, [r0, #16]
 80119aa:	bfb8      	it	lt
 80119ac:	f104 34ff 	addlt.w	r4, r4, #4294967295
 80119b0:	eb04 0901 	add.w	r9, r4, r1
 80119b4:	429a      	cmp	r2, r3
 80119b6:	ea4f 1669 	mov.w	r6, r9, asr #5
 80119ba:	f040 8112 	bne.w	8011be2 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 80119be:	f9b5 3000 	ldrsh.w	r3, [r5]
 80119c2:	429e      	cmp	r6, r3
 80119c4:	d104      	bne.n	80119d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 80119c6:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80119ca:	9a03      	ldr	r2, [sp, #12]
 80119cc:	429a      	cmp	r2, r3
 80119ce:	d01b      	beq.n	8011a08 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80119d0:	88ea      	ldrh	r2, [r5, #6]
 80119d2:	88ab      	ldrh	r3, [r5, #4]
 80119d4:	4313      	orrs	r3, r2
 80119d6:	d010      	beq.n	80119fa <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80119d8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80119dc:	2a00      	cmp	r2, #0
 80119de:	db0c      	blt.n	80119fa <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80119e0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80119e2:	429a      	cmp	r2, r3
 80119e4:	da09      	bge.n	80119fa <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80119e6:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 80119ea:	429a      	cmp	r2, r3
 80119ec:	bf38      	it	cc
 80119ee:	3508      	addcc	r5, #8
 80119f0:	f102 0201 	add.w	r2, r2, #1
 80119f4:	bf38      	it	cc
 80119f6:	6105      	strcc	r5, [r0, #16]
 80119f8:	6082      	str	r2, [r0, #8]
 80119fa:	6903      	ldr	r3, [r0, #16]
 80119fc:	9a03      	ldr	r2, [sp, #12]
 80119fe:	805a      	strh	r2, [r3, #2]
 8011a00:	2200      	movs	r2, #0
 8011a02:	801e      	strh	r6, [r3, #0]
 8011a04:	809a      	strh	r2, [r3, #4]
 8011a06:	80da      	strh	r2, [r3, #6]
 8011a08:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8011a0a:	9a03      	ldr	r2, [sp, #12]
 8011a0c:	6901      	ldr	r1, [r0, #16]
 8011a0e:	441a      	add	r2, r3
 8011a10:	f9b1 3000 	ldrsh.w	r3, [r1]
 8011a14:	42b3      	cmp	r3, r6
 8011a16:	d103      	bne.n	8011a20 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 8011a18:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8011a1c:	429a      	cmp	r2, r3
 8011a1e:	d01a      	beq.n	8011a56 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 8011a20:	88cc      	ldrh	r4, [r1, #6]
 8011a22:	888b      	ldrh	r3, [r1, #4]
 8011a24:	4323      	orrs	r3, r4
 8011a26:	d010      	beq.n	8011a4a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8011a28:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8011a2c:	2c00      	cmp	r4, #0
 8011a2e:	db0c      	blt.n	8011a4a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8011a30:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8011a32:	429c      	cmp	r4, r3
 8011a34:	da09      	bge.n	8011a4a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8011a36:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8011a3a:	429c      	cmp	r4, r3
 8011a3c:	bf38      	it	cc
 8011a3e:	3108      	addcc	r1, #8
 8011a40:	f104 0401 	add.w	r4, r4, #1
 8011a44:	bf38      	it	cc
 8011a46:	6101      	strcc	r1, [r0, #16]
 8011a48:	6084      	str	r4, [r0, #8]
 8011a4a:	6903      	ldr	r3, [r0, #16]
 8011a4c:	2100      	movs	r1, #0
 8011a4e:	801e      	strh	r6, [r3, #0]
 8011a50:	805a      	strh	r2, [r3, #2]
 8011a52:	8099      	strh	r1, [r3, #4]
 8011a54:	80d9      	strh	r1, [r3, #6]
 8011a56:	9b06      	ldr	r3, [sp, #24]
 8011a58:	4293      	cmp	r3, r2
 8011a5a:	f000 8082 	beq.w	8011b62 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 8011a5e:	9b08      	ldr	r3, [sp, #32]
 8011a60:	9c02      	ldr	r4, [sp, #8]
 8011a62:	9902      	ldr	r1, [sp, #8]
 8011a64:	015b      	lsls	r3, r3, #5
 8011a66:	fb93 f1f1 	sdiv	r1, r3, r1
 8011a6a:	fb04 3311 	mls	r3, r4, r1, r3
 8011a6e:	2b00      	cmp	r3, #0
 8011a70:	9103      	str	r1, [sp, #12]
 8011a72:	9308      	str	r3, [sp, #32]
 8011a74:	da04      	bge.n	8011a80 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 8011a76:	1e4b      	subs	r3, r1, #1
 8011a78:	9303      	str	r3, [sp, #12]
 8011a7a:	9b08      	ldr	r3, [sp, #32]
 8011a7c:	4423      	add	r3, r4
 8011a7e:	9308      	str	r3, [sp, #32]
 8011a80:	9b07      	ldr	r3, [sp, #28]
 8011a82:	9902      	ldr	r1, [sp, #8]
 8011a84:	1a5b      	subs	r3, r3, r1
 8011a86:	9307      	str	r3, [sp, #28]
 8011a88:	9b01      	ldr	r3, [sp, #4]
 8011a8a:	f1c3 0320 	rsb	r3, r3, #32
 8011a8e:	930e      	str	r3, [sp, #56]	; 0x38
 8011a90:	990e      	ldr	r1, [sp, #56]	; 0x38
 8011a92:	9b01      	ldr	r3, [sp, #4]
 8011a94:	1a5b      	subs	r3, r3, r1
 8011a96:	464f      	mov	r7, r9
 8011a98:	930a      	str	r3, [sp, #40]	; 0x28
 8011a9a:	2600      	movs	r6, #0
 8011a9c:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8011aa0:	185b      	adds	r3, r3, r1
 8011aa2:	bf58      	it	pl
 8011aa4:	9902      	ldrpl	r1, [sp, #8]
 8011aa6:	9307      	str	r3, [sp, #28]
 8011aa8:	bf5d      	ittte	pl
 8011aaa:	1a5b      	subpl	r3, r3, r1
 8011aac:	9307      	strpl	r3, [sp, #28]
 8011aae:	9b03      	ldrpl	r3, [sp, #12]
 8011ab0:	9903      	ldrmi	r1, [sp, #12]
 8011ab2:	bf58      	it	pl
 8011ab4:	1c59      	addpl	r1, r3, #1
 8011ab6:	4489      	add	r9, r1
 8011ab8:	2a00      	cmp	r2, #0
 8011aba:	ea4f 1a69 	mov.w	sl, r9, asr #5
 8011abe:	db2e      	blt.n	8011b1e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8011ac0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8011ac2:	4293      	cmp	r3, r2
 8011ac4:	dd2b      	ble.n	8011b1e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8011ac6:	9c01      	ldr	r4, [sp, #4]
 8011ac8:	6905      	ldr	r5, [r0, #16]
 8011aca:	46a0      	mov	r8, r4
 8011acc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8011ace:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8011ad2:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8011ad6:	45a0      	cmp	r8, r4
 8011ad8:	f040 814f 	bne.w	8011d7a <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 8011adc:	f9b5 1000 	ldrsh.w	r1, [r5]
 8011ae0:	4551      	cmp	r1, sl
 8011ae2:	d103      	bne.n	8011aec <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 8011ae4:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8011ae8:	4291      	cmp	r1, r2
 8011aea:	d018      	beq.n	8011b1e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8011aec:	ea5c 010e 	orrs.w	r1, ip, lr
 8011af0:	d00f      	beq.n	8011b12 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8011af2:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8011af6:	2900      	cmp	r1, #0
 8011af8:	db0b      	blt.n	8011b12 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8011afa:	428b      	cmp	r3, r1
 8011afc:	dd09      	ble.n	8011b12 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8011afe:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 8011b02:	4299      	cmp	r1, r3
 8011b04:	bf38      	it	cc
 8011b06:	3508      	addcc	r5, #8
 8011b08:	f101 0101 	add.w	r1, r1, #1
 8011b0c:	bf38      	it	cc
 8011b0e:	6105      	strcc	r5, [r0, #16]
 8011b10:	6081      	str	r1, [r0, #8]
 8011b12:	6903      	ldr	r3, [r0, #16]
 8011b14:	f8a3 a000 	strh.w	sl, [r3]
 8011b18:	805a      	strh	r2, [r3, #2]
 8011b1a:	809e      	strh	r6, [r3, #4]
 8011b1c:	80de      	strh	r6, [r3, #6]
 8011b1e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8011b20:	6901      	ldr	r1, [r0, #16]
 8011b22:	441a      	add	r2, r3
 8011b24:	88cc      	ldrh	r4, [r1, #6]
 8011b26:	888b      	ldrh	r3, [r1, #4]
 8011b28:	4323      	orrs	r3, r4
 8011b2a:	d010      	beq.n	8011b4e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8011b2c:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8011b30:	2c00      	cmp	r4, #0
 8011b32:	db0c      	blt.n	8011b4e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8011b34:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8011b36:	429c      	cmp	r4, r3
 8011b38:	da09      	bge.n	8011b4e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8011b3a:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8011b3e:	429c      	cmp	r4, r3
 8011b40:	bf38      	it	cc
 8011b42:	3108      	addcc	r1, #8
 8011b44:	f104 0401 	add.w	r4, r4, #1
 8011b48:	bf38      	it	cc
 8011b4a:	6101      	strcc	r1, [r0, #16]
 8011b4c:	6084      	str	r4, [r0, #8]
 8011b4e:	6903      	ldr	r3, [r0, #16]
 8011b50:	f8a3 a000 	strh.w	sl, [r3]
 8011b54:	805a      	strh	r2, [r3, #2]
 8011b56:	809e      	strh	r6, [r3, #4]
 8011b58:	80de      	strh	r6, [r3, #6]
 8011b5a:	9b06      	ldr	r3, [sp, #24]
 8011b5c:	4293      	cmp	r3, r2
 8011b5e:	464f      	mov	r7, r9
 8011b60:	d19c      	bne.n	8011a9c <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8011b62:	9b01      	ldr	r3, [sp, #4]
 8011b64:	6907      	ldr	r7, [r0, #16]
 8011b66:	f1c3 0620 	rsb	r6, r3, #32
 8011b6a:	9b05      	ldr	r3, [sp, #20]
 8011b6c:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8011b70:	9b04      	ldr	r3, [sp, #16]
 8011b72:	429e      	cmp	r6, r3
 8011b74:	f040 81cc 	bne.w	8011f10 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8011b78:	f9b7 3000 	ldrsh.w	r3, [r7]
 8011b7c:	459e      	cmp	lr, r3
 8011b7e:	d104      	bne.n	8011b8a <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8011b80:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8011b84:	429a      	cmp	r2, r3
 8011b86:	f43f ae36 	beq.w	80117f6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8011b8a:	88f9      	ldrh	r1, [r7, #6]
 8011b8c:	88bb      	ldrh	r3, [r7, #4]
 8011b8e:	430b      	orrs	r3, r1
 8011b90:	d010      	beq.n	8011bb4 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8011b92:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8011b96:	2b00      	cmp	r3, #0
 8011b98:	db0c      	blt.n	8011bb4 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8011b9a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8011b9c:	428b      	cmp	r3, r1
 8011b9e:	da09      	bge.n	8011bb4 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8011ba0:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8011ba4:	428b      	cmp	r3, r1
 8011ba6:	bf38      	it	cc
 8011ba8:	3708      	addcc	r7, #8
 8011baa:	f103 0301 	add.w	r3, r3, #1
 8011bae:	bf38      	it	cc
 8011bb0:	6107      	strcc	r7, [r0, #16]
 8011bb2:	6083      	str	r3, [r0, #8]
 8011bb4:	6903      	ldr	r3, [r0, #16]
 8011bb6:	f8a3 e000 	strh.w	lr, [r3]
 8011bba:	e5ff      	b.n	80117bc <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 8011bbc:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8011bbe:	9c03      	ldr	r4, [sp, #12]
 8011bc0:	42a2      	cmp	r2, r4
 8011bc2:	f6ff ae18 	blt.w	80117f6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8011bc6:	9c06      	ldr	r4, [sp, #24]
 8011bc8:	42a2      	cmp	r2, r4
 8011bca:	bfb8      	it	lt
 8011bcc:	3201      	addlt	r2, #1
 8011bce:	9c08      	ldr	r4, [sp, #32]
 8011bd0:	bfb8      	it	lt
 8011bd2:	9206      	strlt	r2, [sp, #24]
 8011bd4:	f1c3 0220 	rsb	r2, r3, #32
 8011bd8:	4362      	muls	r2, r4
 8011bda:	2401      	movs	r4, #1
 8011bdc:	940b      	str	r4, [sp, #44]	; 0x2c
 8011bde:	2420      	movs	r4, #32
 8011be0:	e6d5      	b.n	801198e <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8011be2:	f009 021f 	and.w	r2, r9, #31
 8011be6:	ea4f 1861 	mov.w	r8, r1, asr #5
 8011bea:	920c      	str	r2, [sp, #48]	; 0x30
 8011bec:	9a01      	ldr	r2, [sp, #4]
 8011bee:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 8011bf2:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 8011bf6:	45b0      	cmp	r8, r6
 8011bf8:	f001 011f 	and.w	r1, r1, #31
 8011bfc:	eba2 0203 	sub.w	r2, r2, r3
 8011c00:	d108      	bne.n	8011c14 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 8011c02:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8011c04:	4419      	add	r1, r3
 8011c06:	4496      	add	lr, r2
 8011c08:	fb02 a101 	mla	r1, r2, r1, sl
 8011c0c:	f8a5 e004 	strh.w	lr, [r5, #4]
 8011c10:	80e9      	strh	r1, [r5, #6]
 8011c12:	e6f9      	b.n	8011a08 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8011c14:	2c00      	cmp	r4, #0
 8011c16:	f2c0 80a9 	blt.w	8011d6c <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 8011c1a:	2701      	movs	r7, #1
 8011c1c:	f1c1 0c20 	rsb	ip, r1, #32
 8011c20:	970a      	str	r7, [sp, #40]	; 0x28
 8011c22:	fb02 f20c 	mul.w	r2, r2, ip
 8011c26:	2720      	movs	r7, #32
 8011c28:	9709      	str	r7, [sp, #36]	; 0x24
 8011c2a:	fb92 fcf4 	sdiv	ip, r2, r4
 8011c2e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8011c30:	fb04 221c 	mls	r2, r4, ip, r2
 8011c34:	2a00      	cmp	r2, #0
 8011c36:	bfb8      	it	lt
 8011c38:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 8011c3c:	4439      	add	r1, r7
 8011c3e:	fb0c a101 	mla	r1, ip, r1, sl
 8011c42:	80e9      	strh	r1, [r5, #6]
 8011c44:	44e6      	add	lr, ip
 8011c46:	990a      	ldr	r1, [sp, #40]	; 0x28
 8011c48:	f8a5 e004 	strh.w	lr, [r5, #4]
 8011c4c:	eb08 0501 	add.w	r5, r8, r1
 8011c50:	6901      	ldr	r1, [r0, #16]
 8011c52:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 8011c56:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 8011c5a:	bfb8      	it	lt
 8011c5c:	1912      	addlt	r2, r2, r4
 8011c5e:	ea58 070e 	orrs.w	r7, r8, lr
 8011c62:	d010      	beq.n	8011c86 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8011c64:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8011c68:	f1be 0f00 	cmp.w	lr, #0
 8011c6c:	db0b      	blt.n	8011c86 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8011c6e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8011c70:	45be      	cmp	lr, r7
 8011c72:	da08      	bge.n	8011c86 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8011c74:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8011c78:	45be      	cmp	lr, r7
 8011c7a:	bf3c      	itt	cc
 8011c7c:	3108      	addcc	r1, #8
 8011c7e:	6101      	strcc	r1, [r0, #16]
 8011c80:	f10e 0101 	add.w	r1, lr, #1
 8011c84:	6081      	str	r1, [r0, #8]
 8011c86:	6901      	ldr	r1, [r0, #16]
 8011c88:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8011c8c:	800d      	strh	r5, [r1, #0]
 8011c8e:	f04f 0e00 	mov.w	lr, #0
 8011c92:	42ae      	cmp	r6, r5
 8011c94:	f8a1 8002 	strh.w	r8, [r1, #2]
 8011c98:	f8a1 e004 	strh.w	lr, [r1, #4]
 8011c9c:	f8a1 e006 	strh.w	lr, [r1, #6]
 8011ca0:	4463      	add	r3, ip
 8011ca2:	d054      	beq.n	8011d4e <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8011ca4:	9901      	ldr	r1, [sp, #4]
 8011ca6:	1ac9      	subs	r1, r1, r3
 8011ca8:	4461      	add	r1, ip
 8011caa:	0149      	lsls	r1, r1, #5
 8011cac:	fb91 fef4 	sdiv	lr, r1, r4
 8011cb0:	fb04 111e 	mls	r1, r4, lr, r1
 8011cb4:	2900      	cmp	r1, #0
 8011cb6:	bfb8      	it	lt
 8011cb8:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 8011cbc:	f10e 0701 	add.w	r7, lr, #1
 8011cc0:	bfb8      	it	lt
 8011cc2:	1909      	addlt	r1, r1, r4
 8011cc4:	1b12      	subs	r2, r2, r4
 8011cc6:	970d      	str	r7, [sp, #52]	; 0x34
 8011cc8:	f8d0 a010 	ldr.w	sl, [r0, #16]
 8011ccc:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8011cce:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8011cd2:	1852      	adds	r2, r2, r1
 8011cd4:	bf54      	ite	pl
 8011cd6:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 8011cda:	46f4      	movmi	ip, lr
 8011cdc:	44e3      	add	fp, ip
 8011cde:	f8aa b004 	strh.w	fp, [sl, #4]
 8011ce2:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8011ce6:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 8011cea:	f8aa b006 	strh.w	fp, [sl, #6]
 8011cee:	4463      	add	r3, ip
 8011cf0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8011cf4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8011cf8:	f8bc a004 	ldrh.w	sl, [ip, #4]
 8011cfc:	bf58      	it	pl
 8011cfe:	1b12      	subpl	r2, r2, r4
 8011d00:	443d      	add	r5, r7
 8011d02:	ea5b 070a 	orrs.w	r7, fp, sl
 8011d06:	d014      	beq.n	8011d32 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8011d08:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 8011d0c:	f1ba 0f00 	cmp.w	sl, #0
 8011d10:	db0f      	blt.n	8011d32 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8011d12:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8011d14:	45ba      	cmp	sl, r7
 8011d16:	da0c      	bge.n	8011d32 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8011d18:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 8011d1c:	45ba      	cmp	sl, r7
 8011d1e:	bf38      	it	cc
 8011d20:	f10c 0c08 	addcc.w	ip, ip, #8
 8011d24:	f10a 0a01 	add.w	sl, sl, #1
 8011d28:	bf38      	it	cc
 8011d2a:	f8c0 c010 	strcc.w	ip, [r0, #16]
 8011d2e:	f8c0 a008 	str.w	sl, [r0, #8]
 8011d32:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8011d36:	f04f 0700 	mov.w	r7, #0
 8011d3a:	42ae      	cmp	r6, r5
 8011d3c:	f8ac 5000 	strh.w	r5, [ip]
 8011d40:	f8ac 8002 	strh.w	r8, [ip, #2]
 8011d44:	f8ac 7004 	strh.w	r7, [ip, #4]
 8011d48:	f8ac 7006 	strh.w	r7, [ip, #6]
 8011d4c:	d1bc      	bne.n	8011cc8 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 8011d4e:	6904      	ldr	r4, [r0, #16]
 8011d50:	9a01      	ldr	r2, [sp, #4]
 8011d52:	990c      	ldr	r1, [sp, #48]	; 0x30
 8011d54:	1ad3      	subs	r3, r2, r3
 8011d56:	88a2      	ldrh	r2, [r4, #4]
 8011d58:	441a      	add	r2, r3
 8011d5a:	80a2      	strh	r2, [r4, #4]
 8011d5c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8011d5e:	3120      	adds	r1, #32
 8011d60:	1a89      	subs	r1, r1, r2
 8011d62:	88e2      	ldrh	r2, [r4, #6]
 8011d64:	fb03 2301 	mla	r3, r3, r1, r2
 8011d68:	80e3      	strh	r3, [r4, #6]
 8011d6a:	e64d      	b.n	8011a08 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8011d6c:	f04f 37ff 	mov.w	r7, #4294967295
 8011d70:	970a      	str	r7, [sp, #40]	; 0x28
 8011d72:	434a      	muls	r2, r1
 8011d74:	4264      	negs	r4, r4
 8011d76:	2700      	movs	r7, #0
 8011d78:	e756      	b.n	8011c28 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 8011d7a:	ea4f 1867 	mov.w	r8, r7, asr #5
 8011d7e:	f009 031f 	and.w	r3, r9, #31
 8011d82:	45d0      	cmp	r8, sl
 8011d84:	f007 071f 	and.w	r7, r7, #31
 8011d88:	930f      	str	r3, [sp, #60]	; 0x3c
 8011d8a:	fa1f fc8c 	uxth.w	ip, ip
 8011d8e:	fa1f fe8e 	uxth.w	lr, lr
 8011d92:	d10a      	bne.n	8011daa <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8011d94:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8011d96:	449c      	add	ip, r3
 8011d98:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8011d9a:	f8a5 c004 	strh.w	ip, [r5, #4]
 8011d9e:	441f      	add	r7, r3
 8011da0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8011da2:	fb03 e707 	mla	r7, r3, r7, lr
 8011da6:	80ef      	strh	r7, [r5, #6]
 8011da8:	e6b9      	b.n	8011b1e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8011daa:	2900      	cmp	r1, #0
 8011dac:	f2c0 80a8 	blt.w	8011f00 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8011db0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8011db2:	f1c7 0320 	rsb	r3, r7, #32
 8011db6:	4363      	muls	r3, r4
 8011db8:	2401      	movs	r4, #1
 8011dba:	940d      	str	r4, [sp, #52]	; 0x34
 8011dbc:	2420      	movs	r4, #32
 8011dbe:	940c      	str	r4, [sp, #48]	; 0x30
 8011dc0:	fb93 f4f1 	sdiv	r4, r3, r1
 8011dc4:	fb01 3b14 	mls	fp, r1, r4, r3
 8011dc8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8011dca:	f1bb 0f00 	cmp.w	fp, #0
 8011dce:	bfb8      	it	lt
 8011dd0:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8011dd4:	441f      	add	r7, r3
 8011dd6:	fb04 e707 	mla	r7, r4, r7, lr
 8011dda:	44a4      	add	ip, r4
 8011ddc:	f8a5 c004 	strh.w	ip, [r5, #4]
 8011de0:	80ef      	strh	r7, [r5, #6]
 8011de2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8011de6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8011de8:	f8bc e006 	ldrh.w	lr, [ip, #6]
 8011dec:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8011df0:	bfb8      	it	lt
 8011df2:	448b      	addlt	fp, r1
 8011df4:	eb08 0503 	add.w	r5, r8, r3
 8011df8:	ea5e 0307 	orrs.w	r3, lr, r7
 8011dfc:	d011      	beq.n	8011e22 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8011dfe:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8011e02:	f1be 0f00 	cmp.w	lr, #0
 8011e06:	db0c      	blt.n	8011e22 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8011e08:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8011e0a:	45be      	cmp	lr, r7
 8011e0c:	da09      	bge.n	8011e22 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8011e0e:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8011e12:	45be      	cmp	lr, r7
 8011e14:	bf3c      	itt	cc
 8011e16:	f10c 0708 	addcc.w	r7, ip, #8
 8011e1a:	6107      	strcc	r7, [r0, #16]
 8011e1c:	f10e 0701 	add.w	r7, lr, #1
 8011e20:	6087      	str	r7, [r0, #8]
 8011e22:	6907      	ldr	r7, [r0, #16]
 8011e24:	b213      	sxth	r3, r2
 8011e26:	9310      	str	r3, [sp, #64]	; 0x40
 8011e28:	807b      	strh	r3, [r7, #2]
 8011e2a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011e2c:	803d      	strh	r5, [r7, #0]
 8011e2e:	4555      	cmp	r5, sl
 8011e30:	80be      	strh	r6, [r7, #4]
 8011e32:	80fe      	strh	r6, [r7, #6]
 8011e34:	eb04 0c03 	add.w	ip, r4, r3
 8011e38:	d051      	beq.n	8011ede <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 8011e3a:	9b01      	ldr	r3, [sp, #4]
 8011e3c:	eba3 070c 	sub.w	r7, r3, ip
 8011e40:	443c      	add	r4, r7
 8011e42:	0164      	lsls	r4, r4, #5
 8011e44:	fb94 f8f1 	sdiv	r8, r4, r1
 8011e48:	fb01 4418 	mls	r4, r1, r8, r4
 8011e4c:	2c00      	cmp	r4, #0
 8011e4e:	bfb8      	it	lt
 8011e50:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8011e54:	ebab 0301 	sub.w	r3, fp, r1
 8011e58:	f108 0701 	add.w	r7, r8, #1
 8011e5c:	bfb8      	it	lt
 8011e5e:	1864      	addlt	r4, r4, r1
 8011e60:	9309      	str	r3, [sp, #36]	; 0x24
 8011e62:	9711      	str	r7, [sp, #68]	; 0x44
 8011e64:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011e66:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8011e6a:	191b      	adds	r3, r3, r4
 8011e6c:	bf58      	it	pl
 8011e6e:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8011e70:	f8be b004 	ldrh.w	fp, [lr, #4]
 8011e74:	9309      	str	r3, [sp, #36]	; 0x24
 8011e76:	bf48      	it	mi
 8011e78:	4647      	movmi	r7, r8
 8011e7a:	44bb      	add	fp, r7
 8011e7c:	f8ae b004 	strh.w	fp, [lr, #4]
 8011e80:	f8be b006 	ldrh.w	fp, [lr, #6]
 8011e84:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8011e88:	f8ae b006 	strh.w	fp, [lr, #6]
 8011e8c:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8011e90:	44bc      	add	ip, r7
 8011e92:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8011e94:	f8be b006 	ldrh.w	fp, [lr, #6]
 8011e98:	443d      	add	r5, r7
 8011e9a:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8011e9e:	bf5c      	itt	pl
 8011ea0:	1a5b      	subpl	r3, r3, r1
 8011ea2:	9309      	strpl	r3, [sp, #36]	; 0x24
 8011ea4:	ea5b 0307 	orrs.w	r3, fp, r7
 8011ea8:	d011      	beq.n	8011ece <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8011eaa:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8011eae:	f1bb 0f00 	cmp.w	fp, #0
 8011eb2:	db0c      	blt.n	8011ece <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8011eb4:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8011eb6:	45bb      	cmp	fp, r7
 8011eb8:	da09      	bge.n	8011ece <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8011eba:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8011ebe:	45bb      	cmp	fp, r7
 8011ec0:	bf3c      	itt	cc
 8011ec2:	f10e 0708 	addcc.w	r7, lr, #8
 8011ec6:	6107      	strcc	r7, [r0, #16]
 8011ec8:	f10b 0701 	add.w	r7, fp, #1
 8011ecc:	6087      	str	r7, [r0, #8]
 8011ece:	6907      	ldr	r7, [r0, #16]
 8011ed0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011ed2:	803d      	strh	r5, [r7, #0]
 8011ed4:	4555      	cmp	r5, sl
 8011ed6:	807b      	strh	r3, [r7, #2]
 8011ed8:	80be      	strh	r6, [r7, #4]
 8011eda:	80fe      	strh	r6, [r7, #6]
 8011edc:	d1c2      	bne.n	8011e64 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8011ede:	9b01      	ldr	r3, [sp, #4]
 8011ee0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8011ee2:	eba3 0c0c 	sub.w	ip, r3, ip
 8011ee6:	6903      	ldr	r3, [r0, #16]
 8011ee8:	8899      	ldrh	r1, [r3, #4]
 8011eea:	4461      	add	r1, ip
 8011eec:	8099      	strh	r1, [r3, #4]
 8011eee:	990c      	ldr	r1, [sp, #48]	; 0x30
 8011ef0:	3720      	adds	r7, #32
 8011ef2:	1a7f      	subs	r7, r7, r1
 8011ef4:	88d9      	ldrh	r1, [r3, #6]
 8011ef6:	fb0c 1c07 	mla	ip, ip, r7, r1
 8011efa:	f8a3 c006 	strh.w	ip, [r3, #6]
 8011efe:	e60e      	b.n	8011b1e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8011f00:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8011f02:	f04f 34ff 	mov.w	r4, #4294967295
 8011f06:	940d      	str	r4, [sp, #52]	; 0x34
 8011f08:	437b      	muls	r3, r7
 8011f0a:	4249      	negs	r1, r1
 8011f0c:	2400      	movs	r4, #0
 8011f0e:	e756      	b.n	8011dbe <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8011f10:	9905      	ldr	r1, [sp, #20]
 8011f12:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8011f16:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 8011f1a:	f001 011f 	and.w	r1, r1, #31
 8011f1e:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8011f22:	9102      	str	r1, [sp, #8]
 8011f24:	9904      	ldr	r1, [sp, #16]
 8011f26:	45f3      	cmp	fp, lr
 8011f28:	f009 0c1f 	and.w	ip, r9, #31
 8011f2c:	eba1 0406 	sub.w	r4, r1, r6
 8011f30:	d108      	bne.n	8011f44 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8011f32:	9b02      	ldr	r3, [sp, #8]
 8011f34:	449c      	add	ip, r3
 8011f36:	44a0      	add	r8, r4
 8011f38:	fb04 a40c 	mla	r4, r4, ip, sl
 8011f3c:	f8a7 8004 	strh.w	r8, [r7, #4]
 8011f40:	80fc      	strh	r4, [r7, #6]
 8011f42:	e458      	b.n	80117f6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8011f44:	9905      	ldr	r1, [sp, #20]
 8011f46:	ebb1 0109 	subs.w	r1, r1, r9
 8011f4a:	bf5b      	ittet	pl
 8011f4c:	f1cc 0520 	rsbpl	r5, ip, #32
 8011f50:	436c      	mulpl	r4, r5
 8011f52:	2500      	movmi	r5, #0
 8011f54:	2520      	movpl	r5, #32
 8011f56:	bf44      	itt	mi
 8011f58:	fb04 f40c 	mulmi.w	r4, r4, ip
 8011f5c:	4249      	negmi	r1, r1
 8011f5e:	9501      	str	r5, [sp, #4]
 8011f60:	9b01      	ldr	r3, [sp, #4]
 8011f62:	fb94 f5f1 	sdiv	r5, r4, r1
 8011f66:	fb01 4415 	mls	r4, r1, r5, r4
 8011f6a:	bf54      	ite	pl
 8011f6c:	f04f 0901 	movpl.w	r9, #1
 8011f70:	f04f 39ff 	movmi.w	r9, #4294967295
 8011f74:	2c00      	cmp	r4, #0
 8011f76:	bfb8      	it	lt
 8011f78:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8011f7c:	449c      	add	ip, r3
 8011f7e:	44a8      	add	r8, r5
 8011f80:	fb05 ac0c 	mla	ip, r5, ip, sl
 8011f84:	f8a7 8004 	strh.w	r8, [r7, #4]
 8011f88:	f8a7 c006 	strh.w	ip, [r7, #6]
 8011f8c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8011f90:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8011f94:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8011f98:	bfb8      	it	lt
 8011f9a:	1864      	addlt	r4, r4, r1
 8011f9c:	ea58 0707 	orrs.w	r7, r8, r7
 8011fa0:	eb0b 0309 	add.w	r3, fp, r9
 8011fa4:	d011      	beq.n	8011fca <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8011fa6:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8011faa:	f1b8 0f00 	cmp.w	r8, #0
 8011fae:	db0c      	blt.n	8011fca <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8011fb0:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8011fb2:	45b8      	cmp	r8, r7
 8011fb4:	da09      	bge.n	8011fca <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8011fb6:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8011fba:	45b8      	cmp	r8, r7
 8011fbc:	bf3c      	itt	cc
 8011fbe:	f10c 0708 	addcc.w	r7, ip, #8
 8011fc2:	6107      	strcc	r7, [r0, #16]
 8011fc4:	f108 0701 	add.w	r7, r8, #1
 8011fc8:	6087      	str	r7, [r0, #8]
 8011fca:	6907      	ldr	r7, [r0, #16]
 8011fcc:	f04f 0c00 	mov.w	ip, #0
 8011fd0:	b212      	sxth	r2, r2
 8011fd2:	459e      	cmp	lr, r3
 8011fd4:	803b      	strh	r3, [r7, #0]
 8011fd6:	807a      	strh	r2, [r7, #2]
 8011fd8:	f8a7 c004 	strh.w	ip, [r7, #4]
 8011fdc:	f8a7 c006 	strh.w	ip, [r7, #6]
 8011fe0:	442e      	add	r6, r5
 8011fe2:	d04d      	beq.n	8012080 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8011fe4:	9f04      	ldr	r7, [sp, #16]
 8011fe6:	1bbf      	subs	r7, r7, r6
 8011fe8:	443d      	add	r5, r7
 8011fea:	016d      	lsls	r5, r5, #5
 8011fec:	fb95 f8f1 	sdiv	r8, r5, r1
 8011ff0:	fb01 5518 	mls	r5, r1, r8, r5
 8011ff4:	4565      	cmp	r5, ip
 8011ff6:	bfb8      	it	lt
 8011ff8:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8011ffc:	f108 0701 	add.w	r7, r8, #1
 8012000:	bfb8      	it	lt
 8012002:	186d      	addlt	r5, r5, r1
 8012004:	1a64      	subs	r4, r4, r1
 8012006:	9703      	str	r7, [sp, #12]
 8012008:	f04f 0a00 	mov.w	sl, #0
 801200c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012010:	1964      	adds	r4, r4, r5
 8012012:	bf58      	it	pl
 8012014:	9f03      	ldrpl	r7, [sp, #12]
 8012016:	f8bc b004 	ldrh.w	fp, [ip, #4]
 801201a:	bf48      	it	mi
 801201c:	4647      	movmi	r7, r8
 801201e:	44bb      	add	fp, r7
 8012020:	f8ac b004 	strh.w	fp, [ip, #4]
 8012024:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012028:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 801202c:	f8ac b006 	strh.w	fp, [ip, #6]
 8012030:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012034:	443e      	add	r6, r7
 8012036:	f8bc b006 	ldrh.w	fp, [ip, #6]
 801203a:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 801203e:	bf58      	it	pl
 8012040:	1a64      	subpl	r4, r4, r1
 8012042:	ea5b 0707 	orrs.w	r7, fp, r7
 8012046:	444b      	add	r3, r9
 8012048:	d011      	beq.n	801206e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 801204a:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 801204e:	f1bb 0f00 	cmp.w	fp, #0
 8012052:	db0c      	blt.n	801206e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8012054:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012056:	45bb      	cmp	fp, r7
 8012058:	da09      	bge.n	801206e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 801205a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 801205e:	45bb      	cmp	fp, r7
 8012060:	bf3c      	itt	cc
 8012062:	f10c 0708 	addcc.w	r7, ip, #8
 8012066:	6107      	strcc	r7, [r0, #16]
 8012068:	f10b 0701 	add.w	r7, fp, #1
 801206c:	6087      	str	r7, [r0, #8]
 801206e:	6907      	ldr	r7, [r0, #16]
 8012070:	459e      	cmp	lr, r3
 8012072:	803b      	strh	r3, [r7, #0]
 8012074:	807a      	strh	r2, [r7, #2]
 8012076:	f8a7 a004 	strh.w	sl, [r7, #4]
 801207a:	f8a7 a006 	strh.w	sl, [r7, #6]
 801207e:	d1c5      	bne.n	801200c <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8012080:	9b04      	ldr	r3, [sp, #16]
 8012082:	1b9e      	subs	r6, r3, r6
 8012084:	6903      	ldr	r3, [r0, #16]
 8012086:	889a      	ldrh	r2, [r3, #4]
 8012088:	4432      	add	r2, r6
 801208a:	809a      	strh	r2, [r3, #4]
 801208c:	9a02      	ldr	r2, [sp, #8]
 801208e:	f102 0c20 	add.w	ip, r2, #32
 8012092:	9a01      	ldr	r2, [sp, #4]
 8012094:	ebac 0c02 	sub.w	ip, ip, r2
 8012098:	88da      	ldrh	r2, [r3, #6]
 801209a:	fb06 260c 	mla	r6, r6, ip, r2
 801209e:	80de      	strh	r6, [r3, #6]
 80120a0:	f7ff bba9 	b.w	80117f6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

080120a4 <_ZN8touchgfx7Outline6lineToEii>:
 80120a4:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80120a6:	079b      	lsls	r3, r3, #30
 80120a8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80120aa:	460e      	mov	r6, r1
 80120ac:	4615      	mov	r5, r2
 80120ae:	d511      	bpl.n	80120d4 <_ZN8touchgfx7Outline6lineToEii+0x30>
 80120b0:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 80120b4:	ea86 0701 	eor.w	r7, r6, r1
 80120b8:	ea85 0302 	eor.w	r3, r5, r2
 80120bc:	433b      	orrs	r3, r7
 80120be:	d009      	beq.n	80120d4 <_ZN8touchgfx7Outline6lineToEii+0x30>
 80120c0:	4633      	mov	r3, r6
 80120c2:	9500      	str	r5, [sp, #0]
 80120c4:	f7ff fb3e 	bl	8011744 <_ZN8touchgfx7Outline10renderLineEiiii>
 80120c8:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80120ca:	e9c0 6505 	strd	r6, r5, [r0, #20]
 80120ce:	f043 0301 	orr.w	r3, r3, #1
 80120d2:	6243      	str	r3, [r0, #36]	; 0x24
 80120d4:	b003      	add	sp, #12
 80120d6:	bdf0      	pop	{r4, r5, r6, r7, pc}

080120d8 <_ZN8touchgfx7Outline6moveToEii>:
 80120d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80120da:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80120dc:	4615      	mov	r5, r2
 80120de:	079a      	lsls	r2, r3, #30
 80120e0:	4604      	mov	r4, r0
 80120e2:	460e      	mov	r6, r1
 80120e4:	d401      	bmi.n	80120ea <_ZN8touchgfx7Outline6moveToEii+0x12>
 80120e6:	f7ff faf9 	bl	80116dc <_ZN8touchgfx7Outline5resetEv>
 80120ea:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80120ec:	07db      	lsls	r3, r3, #31
 80120ee:	d504      	bpl.n	80120fa <_ZN8touchgfx7Outline6moveToEii+0x22>
 80120f0:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 80120f4:	4620      	mov	r0, r4
 80120f6:	f7ff ffd5 	bl	80120a4 <_ZN8touchgfx7Outline6lineToEii>
 80120fa:	6923      	ldr	r3, [r4, #16]
 80120fc:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012100:	1170      	asrs	r0, r6, #5
 8012102:	4290      	cmp	r0, r2
 8012104:	ea4f 1165 	mov.w	r1, r5, asr #5
 8012108:	d103      	bne.n	8012112 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 801210a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801210e:	4291      	cmp	r1, r2
 8012110:	d01a      	beq.n	8012148 <_ZN8touchgfx7Outline6moveToEii+0x70>
 8012112:	88df      	ldrh	r7, [r3, #6]
 8012114:	889a      	ldrh	r2, [r3, #4]
 8012116:	433a      	orrs	r2, r7
 8012118:	d010      	beq.n	801213c <_ZN8touchgfx7Outline6moveToEii+0x64>
 801211a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801211e:	2a00      	cmp	r2, #0
 8012120:	db0c      	blt.n	801213c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8012122:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8012124:	42ba      	cmp	r2, r7
 8012126:	da09      	bge.n	801213c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8012128:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 801212c:	42ba      	cmp	r2, r7
 801212e:	bf38      	it	cc
 8012130:	3308      	addcc	r3, #8
 8012132:	f102 0201 	add.w	r2, r2, #1
 8012136:	bf38      	it	cc
 8012138:	6123      	strcc	r3, [r4, #16]
 801213a:	60a2      	str	r2, [r4, #8]
 801213c:	6923      	ldr	r3, [r4, #16]
 801213e:	2200      	movs	r2, #0
 8012140:	8018      	strh	r0, [r3, #0]
 8012142:	8059      	strh	r1, [r3, #2]
 8012144:	809a      	strh	r2, [r3, #4]
 8012146:	80da      	strh	r2, [r3, #6]
 8012148:	6166      	str	r6, [r4, #20]
 801214a:	e9c4 5606 	strd	r5, r6, [r4, #24]
 801214e:	6225      	str	r5, [r4, #32]
 8012150:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08012152 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8012152:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012156:	b0d0      	sub	sp, #320	; 0x140
 8012158:	466c      	mov	r4, sp
 801215a:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 801215e:	4627      	mov	r7, r4
 8012160:	1a0d      	subs	r5, r1, r0
 8012162:	2d48      	cmp	r5, #72	; 0x48
 8012164:	f100 0308 	add.w	r3, r0, #8
 8012168:	f340 80d5 	ble.w	8012316 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 801216c:	112d      	asrs	r5, r5, #4
 801216e:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8012172:	f9b0 9000 	ldrsh.w	r9, [r0]
 8012176:	6816      	ldr	r6, [r2, #0]
 8012178:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 801217c:	6006      	str	r6, [r0, #0]
 801217e:	6856      	ldr	r6, [r2, #4]
 8012180:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8012184:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8012188:	6046      	str	r6, [r0, #4]
 801218a:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801218e:	f8a2 8002 	strh.w	r8, [r2, #2]
 8012192:	f8a2 e004 	strh.w	lr, [r2, #4]
 8012196:	f8a2 c006 	strh.w	ip, [r2, #6]
 801219a:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 801219e:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 80121a2:	4565      	cmp	r5, ip
 80121a4:	f1a1 0208 	sub.w	r2, r1, #8
 80121a8:	db06      	blt.n	80121b8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 80121aa:	d119      	bne.n	80121e0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 80121ac:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 80121b0:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 80121b4:	42ae      	cmp	r6, r5
 80121b6:	dd13      	ble.n	80121e0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 80121b8:	460e      	mov	r6, r1
 80121ba:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 80121be:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 80121c2:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 80121c6:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 80121ca:	601d      	str	r5, [r3, #0]
 80121cc:	6875      	ldr	r5, [r6, #4]
 80121ce:	605d      	str	r5, [r3, #4]
 80121d0:	f821 9c08 	strh.w	r9, [r1, #-8]
 80121d4:	f821 cc06 	strh.w	ip, [r1, #-6]
 80121d8:	f821 8c04 	strh.w	r8, [r1, #-4]
 80121dc:	f821 ec02 	strh.w	lr, [r1, #-2]
 80121e0:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 80121e4:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 80121e8:	42ae      	cmp	r6, r5
 80121ea:	db06      	blt.n	80121fa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 80121ec:	d116      	bne.n	801221c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 80121ee:	f9b0 c000 	ldrsh.w	ip, [r0]
 80121f2:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 80121f6:	45ac      	cmp	ip, r5
 80121f8:	da10      	bge.n	801221c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 80121fa:	681d      	ldr	r5, [r3, #0]
 80121fc:	f9b0 8000 	ldrsh.w	r8, [r0]
 8012200:	6005      	str	r5, [r0, #0]
 8012202:	685d      	ldr	r5, [r3, #4]
 8012204:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8012208:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 801220c:	f8a0 8008 	strh.w	r8, [r0, #8]
 8012210:	6045      	str	r5, [r0, #4]
 8012212:	8146      	strh	r6, [r0, #10]
 8012214:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8012218:	f8a0 c00e 	strh.w	ip, [r0, #14]
 801221c:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8012220:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8012224:	4565      	cmp	r5, ip
 8012226:	db06      	blt.n	8012236 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 8012228:	d119      	bne.n	801225e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801222a:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 801222e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8012232:	42ae      	cmp	r6, r5
 8012234:	da13      	bge.n	801225e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8012236:	460e      	mov	r6, r1
 8012238:	f9b0 9000 	ldrsh.w	r9, [r0]
 801223c:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8012240:	6005      	str	r5, [r0, #0]
 8012242:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8012246:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 801224a:	6875      	ldr	r5, [r6, #4]
 801224c:	6045      	str	r5, [r0, #4]
 801224e:	f821 9c08 	strh.w	r9, [r1, #-8]
 8012252:	f821 cc06 	strh.w	ip, [r1, #-6]
 8012256:	f821 8c04 	strh.w	r8, [r1, #-4]
 801225a:	f821 ec02 	strh.w	lr, [r1, #-2]
 801225e:	3308      	adds	r3, #8
 8012260:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8012264:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8012268:	45e6      	cmp	lr, ip
 801226a:	dbf8      	blt.n	801225e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801226c:	d105      	bne.n	801227a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 801226e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8012272:	f9b0 5000 	ldrsh.w	r5, [r0]
 8012276:	42ae      	cmp	r6, r5
 8012278:	dbf1      	blt.n	801225e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801227a:	4615      	mov	r5, r2
 801227c:	3a08      	subs	r2, #8
 801227e:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8012282:	45b4      	cmp	ip, r6
 8012284:	dbf9      	blt.n	801227a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8012286:	d105      	bne.n	8012294 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8012288:	f9b0 8000 	ldrsh.w	r8, [r0]
 801228c:	f9b2 6000 	ldrsh.w	r6, [r2]
 8012290:	45b0      	cmp	r8, r6
 8012292:	dbf2      	blt.n	801227a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8012294:	4293      	cmp	r3, r2
 8012296:	f1a5 0608 	sub.w	r6, r5, #8
 801229a:	d816      	bhi.n	80122ca <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 801229c:	f8d6 c000 	ldr.w	ip, [r6]
 80122a0:	f9b3 a000 	ldrsh.w	sl, [r3]
 80122a4:	f8c3 c000 	str.w	ip, [r3]
 80122a8:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 80122ac:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 80122b0:	f8d6 c004 	ldr.w	ip, [r6, #4]
 80122b4:	f8c3 c004 	str.w	ip, [r3, #4]
 80122b8:	f825 ac08 	strh.w	sl, [r5, #-8]
 80122bc:	f825 ec06 	strh.w	lr, [r5, #-6]
 80122c0:	f825 9c04 	strh.w	r9, [r5, #-4]
 80122c4:	f825 8c02 	strh.w	r8, [r5, #-2]
 80122c8:	e7c9      	b.n	801225e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80122ca:	f8d6 e000 	ldr.w	lr, [r6]
 80122ce:	f9b0 a000 	ldrsh.w	sl, [r0]
 80122d2:	f8c0 e000 	str.w	lr, [r0]
 80122d6:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 80122da:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 80122de:	f8d6 e004 	ldr.w	lr, [r6, #4]
 80122e2:	f8c0 e004 	str.w	lr, [r0, #4]
 80122e6:	f825 ac08 	strh.w	sl, [r5, #-8]
 80122ea:	f825 cc06 	strh.w	ip, [r5, #-6]
 80122ee:	f825 9c04 	strh.w	r9, [r5, #-4]
 80122f2:	f825 8c02 	strh.w	r8, [r5, #-2]
 80122f6:	1acd      	subs	r5, r1, r3
 80122f8:	1a16      	subs	r6, r2, r0
 80122fa:	10ed      	asrs	r5, r5, #3
 80122fc:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8012300:	bfb5      	itete	lt
 8012302:	e9c4 0200 	strdlt	r0, r2, [r4]
 8012306:	e9c4 3100 	strdge	r3, r1, [r4]
 801230a:	460a      	movlt	r2, r1
 801230c:	4603      	movge	r3, r0
 801230e:	3408      	adds	r4, #8
 8012310:	4618      	mov	r0, r3
 8012312:	4611      	mov	r1, r2
 8012314:	e724      	b.n	8012160 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8012316:	4299      	cmp	r1, r3
 8012318:	d928      	bls.n	801236c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 801231a:	f1a3 0210 	sub.w	r2, r3, #16
 801231e:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 8012322:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 8012326:	45ac      	cmp	ip, r5
 8012328:	db06      	blt.n	8012338 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 801232a:	d11d      	bne.n	8012368 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 801232c:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 8012330:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 8012334:	42ae      	cmp	r6, r5
 8012336:	da17      	bge.n	8012368 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8012338:	4615      	mov	r5, r2
 801233a:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 801233e:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8012342:	6116      	str	r6, [r2, #16]
 8012344:	686e      	ldr	r6, [r5, #4]
 8012346:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 801234a:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 801234e:	f8a2 9008 	strh.w	r9, [r2, #8]
 8012352:	42a8      	cmp	r0, r5
 8012354:	6156      	str	r6, [r2, #20]
 8012356:	f8a2 c00a 	strh.w	ip, [r2, #10]
 801235a:	f8a2 800c 	strh.w	r8, [r2, #12]
 801235e:	f8a2 e00e 	strh.w	lr, [r2, #14]
 8012362:	f1a2 0208 	sub.w	r2, r2, #8
 8012366:	d1da      	bne.n	801231e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 8012368:	3308      	adds	r3, #8
 801236a:	e7d4      	b.n	8012316 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 801236c:	42bc      	cmp	r4, r7
 801236e:	d903      	bls.n	8012378 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8012370:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8012374:	3c08      	subs	r4, #8
 8012376:	e6f3      	b.n	8012160 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8012378:	b050      	add	sp, #320	; 0x140
 801237a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801237e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 801237e:	b510      	push	{r4, lr}
 8012380:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8012382:	07da      	lsls	r2, r3, #31
 8012384:	4604      	mov	r4, r0
 8012386:	d507      	bpl.n	8012398 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8012388:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 801238c:	f7ff fe8a 	bl	80120a4 <_ZN8touchgfx7Outline6lineToEii>
 8012390:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8012392:	f023 0301 	bic.w	r3, r3, #1
 8012396:	6243      	str	r3, [r0, #36]	; 0x24
 8012398:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801239a:	079b      	lsls	r3, r3, #30
 801239c:	d521      	bpl.n	80123e2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 801239e:	6923      	ldr	r3, [r4, #16]
 80123a0:	88d9      	ldrh	r1, [r3, #6]
 80123a2:	889a      	ldrh	r2, [r3, #4]
 80123a4:	430a      	orrs	r2, r1
 80123a6:	d010      	beq.n	80123ca <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 80123a8:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80123ac:	2a00      	cmp	r2, #0
 80123ae:	db0c      	blt.n	80123ca <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 80123b0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80123b2:	428a      	cmp	r2, r1
 80123b4:	da09      	bge.n	80123ca <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 80123b6:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 80123ba:	4291      	cmp	r1, r2
 80123bc:	bf88      	it	hi
 80123be:	3308      	addhi	r3, #8
 80123c0:	f102 0201 	add.w	r2, r2, #1
 80123c4:	bf88      	it	hi
 80123c6:	6123      	strhi	r3, [r4, #16]
 80123c8:	60a2      	str	r2, [r4, #8]
 80123ca:	68a1      	ldr	r1, [r4, #8]
 80123cc:	b129      	cbz	r1, 80123da <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 80123ce:	6863      	ldr	r3, [r4, #4]
 80123d0:	4299      	cmp	r1, r3
 80123d2:	d802      	bhi.n	80123da <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 80123d4:	68e0      	ldr	r0, [r4, #12]
 80123d6:	f7ff febc 	bl	8012152 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 80123da:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80123dc:	f023 0302 	bic.w	r3, r3, #2
 80123e0:	6263      	str	r3, [r4, #36]	; 0x24
 80123e2:	68e0      	ldr	r0, [r4, #12]
 80123e4:	bd10      	pop	{r4, pc}
	...

080123e8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 80123e8:	4b02      	ldr	r3, [pc, #8]	; (80123f4 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 80123ea:	6018      	str	r0, [r3, #0]
 80123ec:	4b02      	ldr	r3, [pc, #8]	; (80123f8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 80123ee:	6019      	str	r1, [r3, #0]
 80123f0:	4770      	bx	lr
 80123f2:	bf00      	nop
 80123f4:	200137c4 	.word	0x200137c4
 80123f8:	200137c8 	.word	0x200137c8

080123fc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 80123fc:	4a02      	ldr	r2, [pc, #8]	; (8012408 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 80123fe:	2300      	movs	r3, #0
 8012400:	6013      	str	r3, [r2, #0]
 8012402:	4a02      	ldr	r2, [pc, #8]	; (801240c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 8012404:	6013      	str	r3, [r2, #0]
 8012406:	4770      	bx	lr
 8012408:	200137c4 	.word	0x200137c4
 801240c:	200137c8 	.word	0x200137c8

08012410 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8012410:	4b01      	ldr	r3, [pc, #4]	; (8012418 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8012412:	6818      	ldr	r0, [r3, #0]
 8012414:	4770      	bx	lr
 8012416:	bf00      	nop
 8012418:	200137c4 	.word	0x200137c4

0801241c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 801241c:	4b01      	ldr	r3, [pc, #4]	; (8012424 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 801241e:	6818      	ldr	r0, [r3, #0]
 8012420:	4770      	bx	lr
 8012422:	bf00      	nop
 8012424:	200137c8 	.word	0x200137c8

08012428 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8012428:	b510      	push	{r4, lr}
 801242a:	6803      	ldr	r3, [r0, #0]
 801242c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801242e:	460c      	mov	r4, r1
 8012430:	4798      	blx	r3
 8012432:	1b03      	subs	r3, r0, r4
 8012434:	4258      	negs	r0, r3
 8012436:	4158      	adcs	r0, r3
 8012438:	bd10      	pop	{r4, pc}
	...

0801243c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 801243c:	4b01      	ldr	r3, [pc, #4]	; (8012444 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 801243e:	6019      	str	r1, [r3, #0]
 8012440:	4770      	bx	lr
 8012442:	bf00      	nop
 8012444:	200137cc 	.word	0x200137cc

08012448 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8012448:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801244c:	4696      	mov	lr, r2
 801244e:	4605      	mov	r5, r0
 8012450:	4614      	mov	r4, r2
 8012452:	460e      	mov	r6, r1
 8012454:	461f      	mov	r7, r3
 8012456:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801245a:	b097      	sub	sp, #92	; 0x5c
 801245c:	f10d 0c1c 	add.w	ip, sp, #28
 8012460:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8012464:	f8de 3000 	ldr.w	r3, [lr]
 8012468:	f8cc 3000 	str.w	r3, [ip]
 801246c:	f104 0e14 	add.w	lr, r4, #20
 8012470:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8012474:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8012478:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801247c:	f8de 3000 	ldr.w	r3, [lr]
 8012480:	f8cc 3000 	str.w	r3, [ip]
 8012484:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8012488:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801248c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8012490:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8012494:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8012498:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 801249c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 80124a0:	f8de 3000 	ldr.w	r3, [lr]
 80124a4:	f8cc 3000 	str.w	r3, [ip]
 80124a8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80124aa:	682b      	ldr	r3, [r5, #0]
 80124ac:	9201      	str	r2, [sp, #4]
 80124ae:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80124b2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80124b4:	9200      	str	r2, [sp, #0]
 80124b6:	f8cd 8008 	str.w	r8, [sp, #8]
 80124ba:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 80124be:	aa07      	add	r2, sp, #28
 80124c0:	463b      	mov	r3, r7
 80124c2:	4631      	mov	r1, r6
 80124c4:	4628      	mov	r0, r5
 80124c6:	47d8      	blx	fp
 80124c8:	46a6      	mov	lr, r4
 80124ca:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80124ce:	f10d 0c1c 	add.w	ip, sp, #28
 80124d2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80124d6:	f8de 3000 	ldr.w	r3, [lr]
 80124da:	f8cc 3000 	str.w	r3, [ip]
 80124de:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 80124e2:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80124e6:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80124ea:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80124ee:	343c      	adds	r4, #60	; 0x3c
 80124f0:	f8de 3000 	ldr.w	r3, [lr]
 80124f4:	f8cc 3000 	str.w	r3, [ip]
 80124f8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80124fa:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 80124fe:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8012502:	6823      	ldr	r3, [r4, #0]
 8012504:	f8cc 3000 	str.w	r3, [ip]
 8012508:	682b      	ldr	r3, [r5, #0]
 801250a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 801250e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8012510:	9201      	str	r2, [sp, #4]
 8012512:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8012514:	9200      	str	r2, [sp, #0]
 8012516:	f8cd 8008 	str.w	r8, [sp, #8]
 801251a:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 801251c:	aa07      	add	r2, sp, #28
 801251e:	463b      	mov	r3, r7
 8012520:	4631      	mov	r1, r6
 8012522:	4628      	mov	r0, r5
 8012524:	47a0      	blx	r4
 8012526:	b017      	add	sp, #92	; 0x5c
 8012528:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801252c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 801252c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012530:	b08d      	sub	sp, #52	; 0x34
 8012532:	4688      	mov	r8, r1
 8012534:	9916      	ldr	r1, [sp, #88]	; 0x58
 8012536:	f8d3 c000 	ldr.w	ip, [r3]
 801253a:	680f      	ldr	r7, [r1, #0]
 801253c:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8012540:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8012544:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8012548:	edd3 6a07 	vldr	s13, [r3, #28]
 801254c:	9918      	ldr	r1, [sp, #96]	; 0x60
 801254e:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8012552:	f9b1 9000 	ldrsh.w	r9, [r1]
 8012556:	f9ba 1000 	ldrsh.w	r1, [sl]
 801255a:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 801255e:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8012562:	eba7 070c 	sub.w	r7, r7, ip
 8012566:	42bc      	cmp	r4, r7
 8012568:	bfa8      	it	ge
 801256a:	463c      	movge	r4, r7
 801256c:	ee07 4a90 	vmov	s15, r4
 8012570:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8012574:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8012578:	ee25 4a04 	vmul.f32	s8, s10, s8
 801257c:	ee65 4a24 	vmul.f32	s9, s10, s9
 8012580:	ee25 5a27 	vmul.f32	s10, s10, s15
 8012584:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8012588:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801258c:	eb09 0e0c 	add.w	lr, r9, ip
 8012590:	4571      	cmp	r1, lr
 8012592:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8012596:	ee32 1a05 	vadd.f32	s2, s4, s10
 801259a:	ee36 0a84 	vadd.f32	s0, s13, s8
 801259e:	ee61 1a87 	vmul.f32	s3, s3, s14
 80125a2:	ee22 2a07 	vmul.f32	s4, s4, s14
 80125a6:	f340 808d 	ble.w	80126c4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 80125aa:	eba1 060e 	sub.w	r6, r1, lr
 80125ae:	fb96 f5f4 	sdiv	r5, r6, r4
 80125b2:	ee07 5a10 	vmov	s14, r5
 80125b6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80125ba:	2d00      	cmp	r5, #0
 80125bc:	fb04 6615 	mls	r6, r4, r5, r6
 80125c0:	eea7 0a04 	vfma.f32	s0, s14, s8
 80125c4:	eee7 0a24 	vfma.f32	s1, s14, s9
 80125c8:	eea7 1a05 	vfma.f32	s2, s14, s10
 80125cc:	dd13      	ble.n	80125f6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 80125ce:	ee70 6a44 	vsub.f32	s13, s0, s8
 80125d2:	ee70 1ae4 	vsub.f32	s3, s1, s9
 80125d6:	eef5 6a40 	vcmp.f32	s13, #0.0
 80125da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80125de:	bf18      	it	ne
 80125e0:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 80125e4:	ee31 2a45 	vsub.f32	s4, s2, s10
 80125e8:	bf08      	it	eq
 80125ea:	eeb0 7a67 	vmoveq.f32	s14, s15
 80125ee:	ee61 1a87 	vmul.f32	s3, s3, s14
 80125f2:	ee22 2a07 	vmul.f32	s4, s4, s14
 80125f6:	fb05 f204 	mul.w	r2, r5, r4
 80125fa:	1abf      	subs	r7, r7, r2
 80125fc:	4494      	add	ip, r2
 80125fe:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8012602:	4411      	add	r1, r2
 8012604:	eb09 020c 	add.w	r2, r9, ip
 8012608:	443a      	add	r2, r7
 801260a:	b209      	sxth	r1, r1
 801260c:	428a      	cmp	r2, r1
 801260e:	bfc4      	itt	gt
 8012610:	eba1 0209 	subgt.w	r2, r1, r9
 8012614:	eba2 070c 	subgt.w	r7, r2, ip
 8012618:	2f00      	cmp	r7, #0
 801261a:	dd50      	ble.n	80126be <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 801261c:	fb97 f1f4 	sdiv	r1, r7, r4
 8012620:	fb04 7211 	mls	r2, r4, r1, r7
 8012624:	b90a      	cbnz	r2, 801262a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 8012626:	3901      	subs	r1, #1
 8012628:	4622      	mov	r2, r4
 801262a:	eec7 3a80 	vdiv.f32	s7, s15, s0
 801262e:	6840      	ldr	r0, [r0, #4]
 8012630:	900b      	str	r0, [sp, #44]	; 0x2c
 8012632:	f8d0 a000 	ldr.w	sl, [r0]
 8012636:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8012638:	9008      	str	r0, [sp, #32]
 801263a:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 801263e:	9818      	ldr	r0, [sp, #96]	; 0x60
 8012640:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8012644:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8012648:	695b      	ldr	r3, [r3, #20]
 801264a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801264c:	445b      	add	r3, fp
 801264e:	eef0 6a42 	vmov.f32	s13, s4
 8012652:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8012656:	ee21 3a23 	vmul.f32	s6, s2, s7
 801265a:	ee72 7ae1 	vsub.f32	s15, s5, s3
 801265e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012662:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8012666:	9307      	str	r3, [sp, #28]
 8012668:	ee17 7a90 	vmov	r7, s15
 801266c:	ee73 7a42 	vsub.f32	s15, s6, s4
 8012670:	eeb0 7a61 	vmov.f32	s14, s3
 8012674:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8012678:	ee16 3a90 	vmov	r3, s13
 801267c:	fb97 f7f4 	sdiv	r7, r7, r4
 8012680:	ee17 ca90 	vmov	ip, s15
 8012684:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8012688:	fb9c fcf4 	sdiv	ip, ip, r4
 801268c:	fb0c 3306 	mla	r3, ip, r6, r3
 8012690:	9302      	str	r3, [sp, #8]
 8012692:	ee17 3a10 	vmov	r3, s14
 8012696:	44b6      	add	lr, r6
 8012698:	fb04 e505 	mla	r5, r4, r5, lr
 801269c:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 80126a0:	fb07 3706 	mla	r7, r7, r6, r3
 80126a4:	e9cd 8505 	strd	r8, r5, [sp, #20]
 80126a8:	e9cd 4700 	strd	r4, r7, [sp]
 80126ac:	2900      	cmp	r1, #0
 80126ae:	bfcc      	ite	gt
 80126b0:	46a1      	movgt	r9, r4
 80126b2:	4691      	movle	r9, r2
 80126b4:	eba9 0306 	sub.w	r3, r9, r6
 80126b8:	f8da 4008 	ldr.w	r4, [sl, #8]
 80126bc:	47a0      	blx	r4
 80126be:	b00d      	add	sp, #52	; 0x34
 80126c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80126c4:	2500      	movs	r5, #0
 80126c6:	462e      	mov	r6, r5
 80126c8:	e799      	b.n	80125fe <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

080126cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80126cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80126d0:	b0db      	sub	sp, #364	; 0x16c
 80126d2:	461d      	mov	r5, r3
 80126d4:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 80126d8:	930a      	str	r3, [sp, #40]	; 0x28
 80126da:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 80126de:	930b      	str	r3, [sp, #44]	; 0x2c
 80126e0:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 80126e4:	9310      	str	r3, [sp, #64]	; 0x40
 80126e6:	6803      	ldr	r3, [r0, #0]
 80126e8:	910f      	str	r1, [sp, #60]	; 0x3c
 80126ea:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 80126ec:	9009      	str	r0, [sp, #36]	; 0x24
 80126ee:	4614      	mov	r4, r2
 80126f0:	4629      	mov	r1, r5
 80126f2:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 80126f6:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 80126fa:	47b8      	blx	r7
 80126fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80126fe:	6058      	str	r0, [r3, #4]
 8012700:	2800      	cmp	r0, #0
 8012702:	f000 83a1 	beq.w	8012e48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012706:	682b      	ldr	r3, [r5, #0]
 8012708:	9314      	str	r3, [sp, #80]	; 0x50
 801270a:	686b      	ldr	r3, [r5, #4]
 801270c:	9315      	str	r3, [sp, #84]	; 0x54
 801270e:	4bc4      	ldr	r3, [pc, #784]	; (8012a20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8012710:	ed94 7a02 	vldr	s14, [r4, #8]
 8012714:	7819      	ldrb	r1, [r3, #0]
 8012716:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 801271a:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 801271e:	2900      	cmp	r1, #0
 8012720:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8012724:	bf16      	itet	ne
 8012726:	4619      	movne	r1, r3
 8012728:	4611      	moveq	r1, r2
 801272a:	4613      	movne	r3, r2
 801272c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012730:	9116      	str	r1, [sp, #88]	; 0x58
 8012732:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 8012736:	f240 8387 	bls.w	8012e48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801273a:	ed94 7a07 	vldr	s14, [r4, #28]
 801273e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8012742:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012746:	f240 837f 	bls.w	8012e48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801274a:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 801274e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8012752:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012756:	f240 8377 	bls.w	8012e48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801275a:	6822      	ldr	r2, [r4, #0]
 801275c:	4bb1      	ldr	r3, [pc, #708]	; (8012a24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 801275e:	429a      	cmp	r2, r3
 8012760:	f2c0 8372 	blt.w	8012e48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012764:	49b0      	ldr	r1, [pc, #704]	; (8012a28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8012766:	6963      	ldr	r3, [r4, #20]
 8012768:	428a      	cmp	r2, r1
 801276a:	f300 836d 	bgt.w	8012e48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801276e:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8012772:	48ae      	ldr	r0, [pc, #696]	; (8012a2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8012774:	33ff      	adds	r3, #255	; 0xff
 8012776:	4283      	cmp	r3, r0
 8012778:	f200 8366 	bhi.w	8012e48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801277c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 801277e:	4dac      	ldr	r5, [pc, #688]	; (8012a30 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8012780:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8012784:	33ff      	adds	r3, #255	; 0xff
 8012786:	42ab      	cmp	r3, r5
 8012788:	f200 835e 	bhi.w	8012e48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801278c:	6862      	ldr	r2, [r4, #4]
 801278e:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8012792:	33ff      	adds	r3, #255	; 0xff
 8012794:	4283      	cmp	r3, r0
 8012796:	f200 8357 	bhi.w	8012e48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801279a:	69a1      	ldr	r1, [r4, #24]
 801279c:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 80127a0:	33ff      	adds	r3, #255	; 0xff
 80127a2:	4283      	cmp	r3, r0
 80127a4:	f200 8350 	bhi.w	8012e48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80127a8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80127aa:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 80127ae:	30ff      	adds	r0, #255	; 0xff
 80127b0:	42a8      	cmp	r0, r5
 80127b2:	f200 8349 	bhi.w	8012e48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80127b6:	428a      	cmp	r2, r1
 80127b8:	f280 8110 	bge.w	80129dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 80127bc:	429a      	cmp	r2, r3
 80127be:	f300 8119 	bgt.w	80129f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 80127c2:	4299      	cmp	r1, r3
 80127c4:	f280 811d 	bge.w	8012a02 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 80127c8:	2502      	movs	r5, #2
 80127ca:	2701      	movs	r7, #1
 80127cc:	46a9      	mov	r9, r5
 80127ce:	46b8      	mov	r8, r7
 80127d0:	f04f 0a00 	mov.w	sl, #0
 80127d4:	4621      	mov	r1, r4
 80127d6:	a849      	add	r0, sp, #292	; 0x124
 80127d8:	f003 feec 	bl	80165b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 80127dc:	4622      	mov	r2, r4
 80127de:	4653      	mov	r3, sl
 80127e0:	a949      	add	r1, sp, #292	; 0x124
 80127e2:	f8cd 9000 	str.w	r9, [sp]
 80127e6:	a819      	add	r0, sp, #100	; 0x64
 80127e8:	f004 f814 	bl	8016814 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80127ec:	4622      	mov	r2, r4
 80127ee:	4653      	mov	r3, sl
 80127f0:	a949      	add	r1, sp, #292	; 0x124
 80127f2:	f8cd 8000 	str.w	r8, [sp]
 80127f6:	a829      	add	r0, sp, #164	; 0xa4
 80127f8:	f004 f80c 	bl	8016814 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80127fc:	4643      	mov	r3, r8
 80127fe:	4622      	mov	r2, r4
 8012800:	a949      	add	r1, sp, #292	; 0x124
 8012802:	f8cd 9000 	str.w	r9, [sp]
 8012806:	a839      	add	r0, sp, #228	; 0xe4
 8012808:	f004 f804 	bl	8016814 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801280c:	42af      	cmp	r7, r5
 801280e:	bfb5      	itete	lt
 8012810:	2300      	movlt	r3, #0
 8012812:	2301      	movge	r3, #1
 8012814:	930e      	strlt	r3, [sp, #56]	; 0x38
 8012816:	930e      	strge	r3, [sp, #56]	; 0x38
 8012818:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801281a:	e893 0003 	ldmia.w	r3, {r0, r1}
 801281e:	af12      	add	r7, sp, #72	; 0x48
 8012820:	bfb9      	ittee	lt
 8012822:	ad29      	addlt	r5, sp, #164	; 0xa4
 8012824:	ac19      	addlt	r4, sp, #100	; 0x64
 8012826:	ad19      	addge	r5, sp, #100	; 0x64
 8012828:	ac29      	addge	r4, sp, #164	; 0xa4
 801282a:	e887 0003 	stmia.w	r7, {r0, r1}
 801282e:	b928      	cbnz	r0, 801283c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8012830:	4b80      	ldr	r3, [pc, #512]	; (8012a34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8012832:	6818      	ldr	r0, [r3, #0]
 8012834:	6803      	ldr	r3, [r0, #0]
 8012836:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012838:	4798      	blx	r3
 801283a:	6038      	str	r0, [r7, #0]
 801283c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801283e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8012842:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8012846:	930c      	str	r3, [sp, #48]	; 0x30
 8012848:	990c      	ldr	r1, [sp, #48]	; 0x30
 801284a:	6963      	ldr	r3, [r4, #20]
 801284c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801284e:	440b      	add	r3, r1
 8012850:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8012854:	4408      	add	r0, r1
 8012856:	b200      	sxth	r0, r0
 8012858:	4283      	cmp	r3, r0
 801285a:	900d      	str	r0, [sp, #52]	; 0x34
 801285c:	f280 80dd 	bge.w	8012a1a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8012860:	428b      	cmp	r3, r1
 8012862:	da08      	bge.n	8012876 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8012864:	2a00      	cmp	r2, #0
 8012866:	dd06      	ble.n	8012876 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8012868:	1acb      	subs	r3, r1, r3
 801286a:	429a      	cmp	r2, r3
 801286c:	f2c0 80e4 	blt.w	8012a38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8012870:	2b00      	cmp	r3, #0
 8012872:	f300 80e2 	bgt.w	8012a3a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8012876:	6967      	ldr	r7, [r4, #20]
 8012878:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801287a:	443b      	add	r3, r7
 801287c:	461f      	mov	r7, r3
 801287e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012880:	1bdf      	subs	r7, r3, r7
 8012882:	4297      	cmp	r7, r2
 8012884:	bfa8      	it	ge
 8012886:	4617      	movge	r7, r2
 8012888:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801288c:	2f00      	cmp	r7, #0
 801288e:	f340 8166 	ble.w	8012b5e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8012892:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8012894:	6829      	ldr	r1, [r5, #0]
 8012896:	f9b3 2000 	ldrsh.w	r2, [r3]
 801289a:	f9bb 3000 	ldrsh.w	r3, [fp]
 801289e:	6820      	ldr	r0, [r4, #0]
 80128a0:	4411      	add	r1, r2
 80128a2:	4299      	cmp	r1, r3
 80128a4:	dd1a      	ble.n	80128dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80128a6:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 80128aa:	440b      	add	r3, r1
 80128ac:	4402      	add	r2, r0
 80128ae:	b21b      	sxth	r3, r3
 80128b0:	429a      	cmp	r2, r3
 80128b2:	dc13      	bgt.n	80128dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80128b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80128b6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80128b8:	681b      	ldr	r3, [r3, #0]
 80128ba:	9206      	str	r2, [sp, #24]
 80128bc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80128be:	9205      	str	r2, [sp, #20]
 80128c0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80128c2:	9500      	str	r5, [sp, #0]
 80128c4:	e9cd b203 	strd	fp, r2, [sp, #12]
 80128c8:	9a64      	ldr	r2, [sp, #400]	; 0x190
 80128ca:	9809      	ldr	r0, [sp, #36]	; 0x24
 80128cc:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80128d0:	a912      	add	r1, sp, #72	; 0x48
 80128d2:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 80128d6:	aa49      	add	r2, sp, #292	; 0x124
 80128d8:	4623      	mov	r3, r4
 80128da:	47c8      	blx	r9
 80128dc:	e9d4 2300 	ldrd	r2, r3, [r4]
 80128e0:	441a      	add	r2, r3
 80128e2:	6963      	ldr	r3, [r4, #20]
 80128e4:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 80128e8:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 80128ec:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 80128f0:	68a1      	ldr	r1, [r4, #8]
 80128f2:	ed94 6a08 	vldr	s12, [r4, #32]
 80128f6:	6022      	str	r2, [r4, #0]
 80128f8:	3301      	adds	r3, #1
 80128fa:	6163      	str	r3, [r4, #20]
 80128fc:	69a3      	ldr	r3, [r4, #24]
 80128fe:	ee37 7a27 	vadd.f32	s14, s14, s15
 8012902:	3b01      	subs	r3, #1
 8012904:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8012908:	61a3      	str	r3, [r4, #24]
 801290a:	6923      	ldr	r3, [r4, #16]
 801290c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8012910:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012914:	edd4 6a07 	vldr	s13, [r4, #28]
 8012918:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801291c:	440b      	add	r3, r1
 801291e:	68e1      	ldr	r1, [r4, #12]
 8012920:	6123      	str	r3, [r4, #16]
 8012922:	ee76 6a86 	vadd.f32	s13, s13, s12
 8012926:	428b      	cmp	r3, r1
 8012928:	edc4 6a07 	vstr	s13, [r4, #28]
 801292c:	db15      	blt.n	801295a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 801292e:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8012932:	ee76 6a26 	vadd.f32	s13, s12, s13
 8012936:	3201      	adds	r2, #1
 8012938:	edc4 6a07 	vstr	s13, [r4, #28]
 801293c:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8012940:	6022      	str	r2, [r4, #0]
 8012942:	ee36 7a87 	vadd.f32	s14, s13, s14
 8012946:	1a5b      	subs	r3, r3, r1
 8012948:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801294c:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8012950:	6123      	str	r3, [r4, #16]
 8012952:	ee77 7a27 	vadd.f32	s15, s14, s15
 8012956:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801295a:	e9d5 2300 	ldrd	r2, r3, [r5]
 801295e:	441a      	add	r2, r3
 8012960:	696b      	ldr	r3, [r5, #20]
 8012962:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8012966:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 801296a:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801296e:	68a9      	ldr	r1, [r5, #8]
 8012970:	ed95 6a08 	vldr	s12, [r5, #32]
 8012974:	602a      	str	r2, [r5, #0]
 8012976:	3301      	adds	r3, #1
 8012978:	616b      	str	r3, [r5, #20]
 801297a:	69ab      	ldr	r3, [r5, #24]
 801297c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8012980:	3b01      	subs	r3, #1
 8012982:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8012986:	61ab      	str	r3, [r5, #24]
 8012988:	692b      	ldr	r3, [r5, #16]
 801298a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801298e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012992:	edd5 6a07 	vldr	s13, [r5, #28]
 8012996:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801299a:	440b      	add	r3, r1
 801299c:	68e9      	ldr	r1, [r5, #12]
 801299e:	612b      	str	r3, [r5, #16]
 80129a0:	ee76 6a86 	vadd.f32	s13, s13, s12
 80129a4:	428b      	cmp	r3, r1
 80129a6:	edc5 6a07 	vstr	s13, [r5, #28]
 80129aa:	db15      	blt.n	80129d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 80129ac:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 80129b0:	ee76 6a26 	vadd.f32	s13, s12, s13
 80129b4:	3201      	adds	r2, #1
 80129b6:	edc5 6a07 	vstr	s13, [r5, #28]
 80129ba:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 80129be:	602a      	str	r2, [r5, #0]
 80129c0:	ee36 7a87 	vadd.f32	s14, s13, s14
 80129c4:	1a5b      	subs	r3, r3, r1
 80129c6:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80129ca:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 80129ce:	612b      	str	r3, [r5, #16]
 80129d0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80129d4:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80129d8:	3f01      	subs	r7, #1
 80129da:	e757      	b.n	801288c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 80129dc:	4299      	cmp	r1, r3
 80129de:	dc13      	bgt.n	8012a08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 80129e0:	429a      	cmp	r2, r3
 80129e2:	da14      	bge.n	8012a0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 80129e4:	2502      	movs	r5, #2
 80129e6:	2703      	movs	r7, #3
 80129e8:	46a9      	mov	r9, r5
 80129ea:	f04f 0800 	mov.w	r8, #0
 80129ee:	f04f 0a01 	mov.w	sl, #1
 80129f2:	e6ef      	b.n	80127d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80129f4:	2501      	movs	r5, #1
 80129f6:	2700      	movs	r7, #0
 80129f8:	46a9      	mov	r9, r5
 80129fa:	46b8      	mov	r8, r7
 80129fc:	f04f 0a02 	mov.w	sl, #2
 8012a00:	e6e8      	b.n	80127d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8012a02:	2501      	movs	r5, #1
 8012a04:	2702      	movs	r7, #2
 8012a06:	e6e1      	b.n	80127cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8012a08:	2500      	movs	r5, #0
 8012a0a:	2701      	movs	r7, #1
 8012a0c:	e7f4      	b.n	80129f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 8012a0e:	2702      	movs	r7, #2
 8012a10:	2503      	movs	r5, #3
 8012a12:	f04f 0900 	mov.w	r9, #0
 8012a16:	46b8      	mov	r8, r7
 8012a18:	e7e9      	b.n	80129ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 8012a1a:	4613      	mov	r3, r2
 8012a1c:	e728      	b.n	8012870 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 8012a1e:	bf00      	nop
 8012a20:	200137b4 	.word	0x200137b4
 8012a24:	fffd8f01 	.word	0xfffd8f01
 8012a28:	00027100 	.word	0x00027100
 8012a2c:	0004e1ff 	.word	0x0004e1ff
 8012a30:	0004e1fe 	.word	0x0004e1fe
 8012a34:	200137bc 	.word	0x200137bc
 8012a38:	4613      	mov	r3, r2
 8012a3a:	992b      	ldr	r1, [sp, #172]	; 0xac
 8012a3c:	9111      	str	r1, [sp, #68]	; 0x44
 8012a3e:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8012a42:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8012a46:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8012a48:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 8012a4c:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8012a50:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8012a54:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8012a58:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 8012a5c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8012a60:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8012a64:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8012a68:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 8012a6c:	469e      	mov	lr, r3
 8012a6e:	469c      	mov	ip, r3
 8012a70:	f04f 0900 	mov.w	r9, #0
 8012a74:	f1bc 0f00 	cmp.w	ip, #0
 8012a78:	d147      	bne.n	8012b0a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 8012a7a:	eb03 0c07 	add.w	ip, r3, r7
 8012a7e:	1ad7      	subs	r7, r2, r3
 8012a80:	f1b9 0f00 	cmp.w	r9, #0
 8012a84:	d009      	beq.n	8012a9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8012a86:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 8012a8a:	9029      	str	r0, [sp, #164]	; 0xa4
 8012a8c:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8012a90:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8012a94:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8012a98:	912d      	str	r1, [sp, #180]	; 0xb4
 8012a9a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8012a9c:	9111      	str	r1, [sp, #68]	; 0x44
 8012a9e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8012aa2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8012aa6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8012aaa:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8012aae:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8012ab2:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8012ab6:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8012aba:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8012abe:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8012ac2:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8012ac6:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8012aca:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8012ace:	f04f 0800 	mov.w	r8, #0
 8012ad2:	f1be 0f00 	cmp.w	lr, #0
 8012ad6:	d031      	beq.n	8012b3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8012ad8:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8012ada:	4431      	add	r1, r6
 8012adc:	4549      	cmp	r1, r9
 8012ade:	4450      	add	r0, sl
 8012ae0:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8012ae4:	ee37 7a04 	vadd.f32	s14, s14, s8
 8012ae8:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8012aec:	db08      	blt.n	8012b00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8012aee:	ee77 7a85 	vadd.f32	s15, s15, s10
 8012af2:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8012af6:	ee37 7a06 	vadd.f32	s14, s14, s12
 8012afa:	3001      	adds	r0, #1
 8012afc:	eba1 0109 	sub.w	r1, r1, r9
 8012b00:	f10e 3eff 	add.w	lr, lr, #4294967295
 8012b04:	f04f 0801 	mov.w	r8, #1
 8012b08:	e7e3      	b.n	8012ad2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 8012b0a:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8012b0c:	4431      	add	r1, r6
 8012b0e:	4541      	cmp	r1, r8
 8012b10:	4450      	add	r0, sl
 8012b12:	ee37 7a24 	vadd.f32	s14, s14, s9
 8012b16:	ee77 7a84 	vadd.f32	s15, s15, s8
 8012b1a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8012b1e:	db08      	blt.n	8012b32 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8012b20:	ee76 6a85 	vadd.f32	s13, s13, s10
 8012b24:	ee37 7a25 	vadd.f32	s14, s14, s11
 8012b28:	ee77 7a86 	vadd.f32	s15, s15, s12
 8012b2c:	3001      	adds	r0, #1
 8012b2e:	eba1 0108 	sub.w	r1, r1, r8
 8012b32:	f10c 3cff 	add.w	ip, ip, #4294967295
 8012b36:	f04f 0901 	mov.w	r9, #1
 8012b3a:	e79b      	b.n	8012a74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8012b3c:	449c      	add	ip, r3
 8012b3e:	1aff      	subs	r7, r7, r3
 8012b40:	f1b8 0f00 	cmp.w	r8, #0
 8012b44:	d009      	beq.n	8012b5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8012b46:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8012b4a:	9019      	str	r0, [sp, #100]	; 0x64
 8012b4c:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8012b50:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8012b54:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8012b58:	911d      	str	r1, [sp, #116]	; 0x74
 8012b5a:	1ad2      	subs	r2, r2, r3
 8012b5c:	e68b      	b.n	8012876 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8012b5e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012b60:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8012b62:	2b00      	cmp	r3, #0
 8012b64:	f000 80d1 	beq.w	8012d0a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8012b68:	ad19      	add	r5, sp, #100	; 0x64
 8012b6a:	ac39      	add	r4, sp, #228	; 0xe4
 8012b6c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8012b6e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8012b72:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8012b76:	930c      	str	r3, [sp, #48]	; 0x30
 8012b78:	990c      	ldr	r1, [sp, #48]	; 0x30
 8012b7a:	6963      	ldr	r3, [r4, #20]
 8012b7c:	440b      	add	r3, r1
 8012b7e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8012b82:	4408      	add	r0, r1
 8012b84:	b200      	sxth	r0, r0
 8012b86:	4283      	cmp	r3, r0
 8012b88:	900d      	str	r0, [sp, #52]	; 0x34
 8012b8a:	f280 80c1 	bge.w	8012d10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8012b8e:	428b      	cmp	r3, r1
 8012b90:	da08      	bge.n	8012ba4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8012b92:	2a00      	cmp	r2, #0
 8012b94:	dd06      	ble.n	8012ba4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8012b96:	1acb      	subs	r3, r1, r3
 8012b98:	429a      	cmp	r2, r3
 8012b9a:	f2c0 80bb 	blt.w	8012d14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8012b9e:	2b00      	cmp	r3, #0
 8012ba0:	f300 80b9 	bgt.w	8012d16 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8012ba4:	6967      	ldr	r7, [r4, #20]
 8012ba6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012ba8:	443b      	add	r3, r7
 8012baa:	461f      	mov	r7, r3
 8012bac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012bae:	1bdf      	subs	r7, r3, r7
 8012bb0:	4297      	cmp	r7, r2
 8012bb2:	bfa8      	it	ge
 8012bb4:	4617      	movge	r7, r2
 8012bb6:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8012bba:	2f00      	cmp	r7, #0
 8012bbc:	f340 813c 	ble.w	8012e38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8012bc0:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8012bc2:	6829      	ldr	r1, [r5, #0]
 8012bc4:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012bc8:	f9bb 3000 	ldrsh.w	r3, [fp]
 8012bcc:	6820      	ldr	r0, [r4, #0]
 8012bce:	4411      	add	r1, r2
 8012bd0:	4299      	cmp	r1, r3
 8012bd2:	dd1a      	ble.n	8012c0a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8012bd4:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8012bd8:	440b      	add	r3, r1
 8012bda:	4402      	add	r2, r0
 8012bdc:	b21b      	sxth	r3, r3
 8012bde:	429a      	cmp	r2, r3
 8012be0:	dc13      	bgt.n	8012c0a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8012be2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012be4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8012be6:	681b      	ldr	r3, [r3, #0]
 8012be8:	9206      	str	r2, [sp, #24]
 8012bea:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8012bec:	9205      	str	r2, [sp, #20]
 8012bee:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8012bf0:	9500      	str	r5, [sp, #0]
 8012bf2:	e9cd b203 	strd	fp, r2, [sp, #12]
 8012bf6:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8012bf8:	9809      	ldr	r0, [sp, #36]	; 0x24
 8012bfa:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8012bfe:	a912      	add	r1, sp, #72	; 0x48
 8012c00:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8012c04:	aa49      	add	r2, sp, #292	; 0x124
 8012c06:	4623      	mov	r3, r4
 8012c08:	47c8      	blx	r9
 8012c0a:	e9d4 2300 	ldrd	r2, r3, [r4]
 8012c0e:	441a      	add	r2, r3
 8012c10:	6963      	ldr	r3, [r4, #20]
 8012c12:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8012c16:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8012c1a:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8012c1e:	68a1      	ldr	r1, [r4, #8]
 8012c20:	ed94 6a08 	vldr	s12, [r4, #32]
 8012c24:	6022      	str	r2, [r4, #0]
 8012c26:	3301      	adds	r3, #1
 8012c28:	6163      	str	r3, [r4, #20]
 8012c2a:	69a3      	ldr	r3, [r4, #24]
 8012c2c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8012c30:	3b01      	subs	r3, #1
 8012c32:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8012c36:	61a3      	str	r3, [r4, #24]
 8012c38:	6923      	ldr	r3, [r4, #16]
 8012c3a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8012c3e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012c42:	edd4 6a07 	vldr	s13, [r4, #28]
 8012c46:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8012c4a:	440b      	add	r3, r1
 8012c4c:	68e1      	ldr	r1, [r4, #12]
 8012c4e:	6123      	str	r3, [r4, #16]
 8012c50:	ee76 6a86 	vadd.f32	s13, s13, s12
 8012c54:	428b      	cmp	r3, r1
 8012c56:	edc4 6a07 	vstr	s13, [r4, #28]
 8012c5a:	db15      	blt.n	8012c88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8012c5c:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8012c60:	ee76 6a26 	vadd.f32	s13, s12, s13
 8012c64:	3201      	adds	r2, #1
 8012c66:	edc4 6a07 	vstr	s13, [r4, #28]
 8012c6a:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8012c6e:	6022      	str	r2, [r4, #0]
 8012c70:	ee36 7a87 	vadd.f32	s14, s13, s14
 8012c74:	1a5b      	subs	r3, r3, r1
 8012c76:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8012c7a:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8012c7e:	6123      	str	r3, [r4, #16]
 8012c80:	ee77 7a27 	vadd.f32	s15, s14, s15
 8012c84:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8012c88:	e9d5 2300 	ldrd	r2, r3, [r5]
 8012c8c:	441a      	add	r2, r3
 8012c8e:	696b      	ldr	r3, [r5, #20]
 8012c90:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8012c94:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8012c98:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8012c9c:	68a9      	ldr	r1, [r5, #8]
 8012c9e:	ed95 6a08 	vldr	s12, [r5, #32]
 8012ca2:	602a      	str	r2, [r5, #0]
 8012ca4:	3301      	adds	r3, #1
 8012ca6:	616b      	str	r3, [r5, #20]
 8012ca8:	69ab      	ldr	r3, [r5, #24]
 8012caa:	ee37 7a27 	vadd.f32	s14, s14, s15
 8012cae:	3b01      	subs	r3, #1
 8012cb0:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8012cb4:	61ab      	str	r3, [r5, #24]
 8012cb6:	692b      	ldr	r3, [r5, #16]
 8012cb8:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8012cbc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012cc0:	edd5 6a07 	vldr	s13, [r5, #28]
 8012cc4:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8012cc8:	440b      	add	r3, r1
 8012cca:	68e9      	ldr	r1, [r5, #12]
 8012ccc:	612b      	str	r3, [r5, #16]
 8012cce:	ee76 6a86 	vadd.f32	s13, s13, s12
 8012cd2:	428b      	cmp	r3, r1
 8012cd4:	edc5 6a07 	vstr	s13, [r5, #28]
 8012cd8:	db15      	blt.n	8012d06 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8012cda:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8012cde:	ee76 6a26 	vadd.f32	s13, s12, s13
 8012ce2:	3201      	adds	r2, #1
 8012ce4:	edc5 6a07 	vstr	s13, [r5, #28]
 8012ce8:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8012cec:	602a      	str	r2, [r5, #0]
 8012cee:	ee36 7a87 	vadd.f32	s14, s13, s14
 8012cf2:	1a5b      	subs	r3, r3, r1
 8012cf4:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8012cf8:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8012cfc:	612b      	str	r3, [r5, #16]
 8012cfe:	ee77 7a27 	vadd.f32	s15, s14, s15
 8012d02:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8012d06:	3f01      	subs	r7, #1
 8012d08:	e757      	b.n	8012bba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8012d0a:	ad39      	add	r5, sp, #228	; 0xe4
 8012d0c:	ac19      	add	r4, sp, #100	; 0x64
 8012d0e:	e72d      	b.n	8012b6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8012d10:	4613      	mov	r3, r2
 8012d12:	e744      	b.n	8012b9e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8012d14:	4613      	mov	r3, r2
 8012d16:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 8012d1a:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8012d1c:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8012d20:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8012d24:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8012d28:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8012d2c:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8012d30:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8012d34:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8012d38:	993d      	ldr	r1, [sp, #244]	; 0xf4
 8012d3a:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8012d3e:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8012d42:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8012d46:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 8012d4a:	960e      	str	r6, [sp, #56]	; 0x38
 8012d4c:	469e      	mov	lr, r3
 8012d4e:	461f      	mov	r7, r3
 8012d50:	f04f 0900 	mov.w	r9, #0
 8012d54:	2f00      	cmp	r7, #0
 8012d56:	d146      	bne.n	8012de6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8012d58:	449c      	add	ip, r3
 8012d5a:	1ad7      	subs	r7, r2, r3
 8012d5c:	f1b9 0f00 	cmp.w	r9, #0
 8012d60:	d009      	beq.n	8012d76 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8012d62:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8012d66:	9039      	str	r0, [sp, #228]	; 0xe4
 8012d68:	913d      	str	r1, [sp, #244]	; 0xf4
 8012d6a:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8012d6e:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8012d72:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8012d76:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8012d78:	910e      	str	r1, [sp, #56]	; 0x38
 8012d7a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8012d7e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8012d82:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8012d86:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8012d8a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8012d8e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8012d92:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8012d96:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8012d9a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8012d9e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8012da2:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8012da6:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8012daa:	f04f 0800 	mov.w	r8, #0
 8012dae:	f1be 0f00 	cmp.w	lr, #0
 8012db2:	d030      	beq.n	8012e16 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8012db4:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8012db6:	4431      	add	r1, r6
 8012db8:	4549      	cmp	r1, r9
 8012dba:	4450      	add	r0, sl
 8012dbc:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8012dc0:	ee37 7a04 	vadd.f32	s14, s14, s8
 8012dc4:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8012dc8:	db08      	blt.n	8012ddc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8012dca:	ee77 7a85 	vadd.f32	s15, s15, s10
 8012dce:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8012dd2:	ee37 7a06 	vadd.f32	s14, s14, s12
 8012dd6:	3001      	adds	r0, #1
 8012dd8:	eba1 0109 	sub.w	r1, r1, r9
 8012ddc:	f10e 3eff 	add.w	lr, lr, #4294967295
 8012de0:	f04f 0801 	mov.w	r8, #1
 8012de4:	e7e3      	b.n	8012dae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8012de6:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8012de8:	4431      	add	r1, r6
 8012dea:	4541      	cmp	r1, r8
 8012dec:	4450      	add	r0, sl
 8012dee:	ee37 7a24 	vadd.f32	s14, s14, s9
 8012df2:	ee77 7a84 	vadd.f32	s15, s15, s8
 8012df6:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8012dfa:	db08      	blt.n	8012e0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8012dfc:	ee76 6a85 	vadd.f32	s13, s13, s10
 8012e00:	ee37 7a25 	vadd.f32	s14, s14, s11
 8012e04:	ee77 7a86 	vadd.f32	s15, s15, s12
 8012e08:	3001      	adds	r0, #1
 8012e0a:	eba1 0108 	sub.w	r1, r1, r8
 8012e0e:	3f01      	subs	r7, #1
 8012e10:	f04f 0901 	mov.w	r9, #1
 8012e14:	e79e      	b.n	8012d54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8012e16:	449c      	add	ip, r3
 8012e18:	1aff      	subs	r7, r7, r3
 8012e1a:	f1b8 0f00 	cmp.w	r8, #0
 8012e1e:	d009      	beq.n	8012e34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8012e20:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8012e24:	9019      	str	r0, [sp, #100]	; 0x64
 8012e26:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8012e2a:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8012e2e:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8012e32:	911d      	str	r1, [sp, #116]	; 0x74
 8012e34:	1ad2      	subs	r2, r2, r3
 8012e36:	e6b5      	b.n	8012ba4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8012e38:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012e3a:	681b      	ldr	r3, [r3, #0]
 8012e3c:	b923      	cbnz	r3, 8012e48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012e3e:	4b04      	ldr	r3, [pc, #16]	; (8012e50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8012e40:	6818      	ldr	r0, [r3, #0]
 8012e42:	6803      	ldr	r3, [r0, #0]
 8012e44:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012e46:	4798      	blx	r3
 8012e48:	b05b      	add	sp, #364	; 0x16c
 8012e4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012e4e:	bf00      	nop
 8012e50:	200137bc 	.word	0x200137bc

08012e54 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8012e54:	b570      	push	{r4, r5, r6, lr}
 8012e56:	4604      	mov	r4, r0
 8012e58:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8012e5c:	9805      	ldr	r0, [sp, #20]
 8012e5e:	6061      	str	r1, [r4, #4]
 8012e60:	2500      	movs	r5, #0
 8012e62:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8012e66:	8263      	strh	r3, [r4, #18]
 8012e68:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8012e6c:	8025      	strh	r5, [r4, #0]
 8012e6e:	7221      	strb	r1, [r4, #8]
 8012e70:	7266      	strb	r6, [r4, #9]
 8012e72:	60e0      	str	r0, [r4, #12]
 8012e74:	8222      	strh	r2, [r4, #16]
 8012e76:	82a3      	strh	r3, [r4, #20]
 8012e78:	82e5      	strh	r5, [r4, #22]
 8012e7a:	8325      	strh	r5, [r4, #24]
 8012e7c:	8365      	strh	r5, [r4, #26]
 8012e7e:	83a5      	strh	r5, [r4, #28]
 8012e80:	83e5      	strh	r5, [r4, #30]
 8012e82:	8425      	strh	r5, [r4, #32]
 8012e84:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8012e88:	b32e      	cbz	r6, 8012ed6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8012e8a:	6803      	ldr	r3, [r0, #0]
 8012e8c:	695b      	ldr	r3, [r3, #20]
 8012e8e:	4798      	blx	r3
 8012e90:	4606      	mov	r6, r0
 8012e92:	b300      	cbz	r0, 8012ed6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8012e94:	68e0      	ldr	r0, [r4, #12]
 8012e96:	6803      	ldr	r3, [r0, #0]
 8012e98:	4631      	mov	r1, r6
 8012e9a:	68db      	ldr	r3, [r3, #12]
 8012e9c:	4798      	blx	r3
 8012e9e:	4605      	mov	r5, r0
 8012ea0:	b1c8      	cbz	r0, 8012ed6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8012ea2:	7b43      	ldrb	r3, [r0, #13]
 8012ea4:	7a82      	ldrb	r2, [r0, #10]
 8012ea6:	005b      	lsls	r3, r3, #1
 8012ea8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012eac:	4313      	orrs	r3, r2
 8012eae:	8423      	strh	r3, [r4, #32]
 8012eb0:	7a63      	ldrb	r3, [r4, #9]
 8012eb2:	2b06      	cmp	r3, #6
 8012eb4:	d10f      	bne.n	8012ed6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8012eb6:	68e0      	ldr	r0, [r4, #12]
 8012eb8:	6803      	ldr	r3, [r0, #0]
 8012eba:	462a      	mov	r2, r5
 8012ebc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012ebe:	4631      	mov	r1, r6
 8012ec0:	4798      	blx	r3
 8012ec2:	7b6b      	ldrb	r3, [r5, #13]
 8012ec4:	005b      	lsls	r3, r3, #1
 8012ec6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012eca:	7aab      	ldrb	r3, [r5, #10]
 8012ecc:	4313      	orrs	r3, r2
 8012ece:	4418      	add	r0, r3
 8012ed0:	8c23      	ldrh	r3, [r4, #32]
 8012ed2:	4418      	add	r0, r3
 8012ed4:	8420      	strh	r0, [r4, #32]
 8012ed6:	4620      	mov	r0, r4
 8012ed8:	bd70      	pop	{r4, r5, r6, pc}

08012eda <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8012eda:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012ede:	2400      	movs	r4, #0
 8012ee0:	b085      	sub	sp, #20
 8012ee2:	4681      	mov	r9, r0
 8012ee4:	4688      	mov	r8, r1
 8012ee6:	4692      	mov	sl, r2
 8012ee8:	469b      	mov	fp, r3
 8012eea:	4627      	mov	r7, r4
 8012eec:	4625      	mov	r5, r4
 8012eee:	4626      	mov	r6, r4
 8012ef0:	4554      	cmp	r4, sl
 8012ef2:	da2a      	bge.n	8012f4a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8012ef4:	2300      	movs	r3, #0
 8012ef6:	9303      	str	r3, [sp, #12]
 8012ef8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8012efc:	429d      	cmp	r5, r3
 8012efe:	d004      	beq.n	8012f0a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8012f00:	f242 030b 	movw	r3, #8203	; 0x200b
 8012f04:	429d      	cmp	r5, r3
 8012f06:	bf18      	it	ne
 8012f08:	462f      	movne	r7, r5
 8012f0a:	ab03      	add	r3, sp, #12
 8012f0c:	4642      	mov	r2, r8
 8012f0e:	4659      	mov	r1, fp
 8012f10:	4648      	mov	r0, r9
 8012f12:	f003 f965 	bl	80161e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8012f16:	4605      	mov	r5, r0
 8012f18:	b1b8      	cbz	r0, 8012f4a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8012f1a:	280a      	cmp	r0, #10
 8012f1c:	d015      	beq.n	8012f4a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8012f1e:	9a03      	ldr	r2, [sp, #12]
 8012f20:	b18a      	cbz	r2, 8012f46 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8012f22:	7b50      	ldrb	r0, [r2, #13]
 8012f24:	7a93      	ldrb	r3, [r2, #10]
 8012f26:	8895      	ldrh	r5, [r2, #4]
 8012f28:	0040      	lsls	r0, r0, #1
 8012f2a:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8012f2e:	4303      	orrs	r3, r0
 8012f30:	9301      	str	r3, [sp, #4]
 8012f32:	f8d8 3000 	ldr.w	r3, [r8]
 8012f36:	4639      	mov	r1, r7
 8012f38:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012f3a:	4640      	mov	r0, r8
 8012f3c:	4798      	blx	r3
 8012f3e:	9b01      	ldr	r3, [sp, #4]
 8012f40:	4418      	add	r0, r3
 8012f42:	4406      	add	r6, r0
 8012f44:	b2b6      	uxth	r6, r6
 8012f46:	3401      	adds	r4, #1
 8012f48:	e7d2      	b.n	8012ef0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8012f4a:	4630      	mov	r0, r6
 8012f4c:	b005      	add	sp, #20
 8012f4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012f52 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8012f52:	2a02      	cmp	r2, #2
 8012f54:	b530      	push	{r4, r5, lr}
 8012f56:	d011      	beq.n	8012f7c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8012f58:	2a03      	cmp	r2, #3
 8012f5a:	d01c      	beq.n	8012f96 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8012f5c:	2a01      	cmp	r2, #1
 8012f5e:	d10c      	bne.n	8012f7a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8012f60:	888b      	ldrh	r3, [r1, #4]
 8012f62:	8801      	ldrh	r1, [r0, #0]
 8012f64:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8012f68:	8844      	ldrh	r4, [r0, #2]
 8012f6a:	8004      	strh	r4, [r0, #0]
 8012f6c:	1a5b      	subs	r3, r3, r1
 8012f6e:	1a9b      	subs	r3, r3, r2
 8012f70:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8012f74:	8043      	strh	r3, [r0, #2]
 8012f76:	8081      	strh	r1, [r0, #4]
 8012f78:	80c2      	strh	r2, [r0, #6]
 8012f7a:	bd30      	pop	{r4, r5, pc}
 8012f7c:	88cb      	ldrh	r3, [r1, #6]
 8012f7e:	8842      	ldrh	r2, [r0, #2]
 8012f80:	1a9b      	subs	r3, r3, r2
 8012f82:	88c2      	ldrh	r2, [r0, #6]
 8012f84:	1a9b      	subs	r3, r3, r2
 8012f86:	888a      	ldrh	r2, [r1, #4]
 8012f88:	8801      	ldrh	r1, [r0, #0]
 8012f8a:	8043      	strh	r3, [r0, #2]
 8012f8c:	1a52      	subs	r2, r2, r1
 8012f8e:	8881      	ldrh	r1, [r0, #4]
 8012f90:	1a52      	subs	r2, r2, r1
 8012f92:	8002      	strh	r2, [r0, #0]
 8012f94:	e7f1      	b.n	8012f7a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8012f96:	88cb      	ldrh	r3, [r1, #6]
 8012f98:	8841      	ldrh	r1, [r0, #2]
 8012f9a:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8012f9e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8012fa2:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8012fa6:	8045      	strh	r5, [r0, #2]
 8012fa8:	1a5b      	subs	r3, r3, r1
 8012faa:	1a9b      	subs	r3, r3, r2
 8012fac:	8003      	strh	r3, [r0, #0]
 8012fae:	8082      	strh	r2, [r0, #4]
 8012fb0:	80c4      	strh	r4, [r0, #6]
 8012fb2:	e7e2      	b.n	8012f7a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08012fb4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8012fb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012fb8:	b09f      	sub	sp, #124	; 0x7c
 8012fba:	9116      	str	r1, [sp, #88]	; 0x58
 8012fbc:	9317      	str	r3, [sp, #92]	; 0x5c
 8012fbe:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8012fc0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8012fc2:	8809      	ldrh	r1, [r1, #0]
 8012fc4:	889b      	ldrh	r3, [r3, #4]
 8012fc6:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8012fca:	9212      	str	r2, [sp, #72]	; 0x48
 8012fcc:	440b      	add	r3, r1
 8012fce:	b21b      	sxth	r3, r3
 8012fd0:	9310      	str	r3, [sp, #64]	; 0x40
 8012fd2:	f8d8 3000 	ldr.w	r3, [r8]
 8012fd6:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8012fda:	7b19      	ldrb	r1, [r3, #12]
 8012fdc:	7adb      	ldrb	r3, [r3, #11]
 8012fde:	9011      	str	r0, [sp, #68]	; 0x44
 8012fe0:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8012fe4:	9114      	str	r1, [sp, #80]	; 0x50
 8012fe6:	9315      	str	r3, [sp, #84]	; 0x54
 8012fe8:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 8012fec:	2a00      	cmp	r2, #0
 8012fee:	d06a      	beq.n	80130c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8012ff0:	f898 3010 	ldrb.w	r3, [r8, #16]
 8012ff4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8012ff6:	2b06      	cmp	r3, #6
 8012ff8:	bf14      	ite	ne
 8012ffa:	2301      	movne	r3, #1
 8012ffc:	2302      	moveq	r3, #2
 8012ffe:	4413      	add	r3, r2
 8013000:	f04f 0900 	mov.w	r9, #0
 8013004:	930f      	str	r3, [sp, #60]	; 0x3c
 8013006:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 801300a:	464c      	mov	r4, r9
 801300c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8013010:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8013014:	4293      	cmp	r3, r2
 8013016:	f280 808f 	bge.w	8013138 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 801301a:	2300      	movs	r3, #0
 801301c:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8013020:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8013024:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8013028:	429c      	cmp	r4, r3
 801302a:	d006      	beq.n	801303a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 801302c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801302e:	f242 020b 	movw	r2, #8203	; 0x200b
 8013032:	4294      	cmp	r4, r2
 8013034:	bf18      	it	ne
 8013036:	4623      	movne	r3, r4
 8013038:	930d      	str	r3, [sp, #52]	; 0x34
 801303a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801303c:	992d      	ldr	r1, [sp, #180]	; 0xb4
 801303e:	f8d8 2000 	ldr.w	r2, [r8]
 8013042:	428b      	cmp	r3, r1
 8013044:	db41      	blt.n	80130ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8013046:	6813      	ldr	r3, [r2, #0]
 8013048:	4610      	mov	r0, r2
 801304a:	695b      	ldr	r3, [r3, #20]
 801304c:	4798      	blx	r3
 801304e:	4604      	mov	r4, r0
 8013050:	f8d8 0000 	ldr.w	r0, [r8]
 8013054:	6803      	ldr	r3, [r0, #0]
 8013056:	aa1d      	add	r2, sp, #116	; 0x74
 8013058:	689d      	ldr	r5, [r3, #8]
 801305a:	4621      	mov	r1, r4
 801305c:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8013060:	47a8      	blx	r5
 8013062:	901c      	str	r0, [sp, #112]	; 0x70
 8013064:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8013068:	429c      	cmp	r4, r3
 801306a:	f000 80eb 	beq.w	8013244 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801306e:	f242 030b 	movw	r3, #8203	; 0x200b
 8013072:	429c      	cmp	r4, r3
 8013074:	f000 80e6 	beq.w	8013244 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013078:	2c00      	cmp	r4, #0
 801307a:	f000 80f8 	beq.w	801326e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 801307e:	2c0a      	cmp	r4, #10
 8013080:	d060      	beq.n	8013144 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8013082:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8013084:	b36a      	cbz	r2, 80130e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8013086:	8894      	ldrh	r4, [r2, #4]
 8013088:	f1bb 0f00 	cmp.w	fp, #0
 801308c:	d03b      	beq.n	8013106 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 801308e:	f892 900d 	ldrb.w	r9, [r2, #13]
 8013092:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8013096:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801309a:	f892 900a 	ldrb.w	r9, [r2, #10]
 801309e:	f1bb 0f01 	cmp.w	fp, #1
 80130a2:	ea49 0903 	orr.w	r9, r9, r3
 80130a6:	d134      	bne.n	8013112 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 80130a8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80130aa:	eba6 0609 	sub.w	r6, r6, r9
 80130ae:	2b00      	cmp	r3, #0
 80130b0:	d14f      	bne.n	8013152 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 80130b2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80130b4:	eb09 0306 	add.w	r3, r9, r6
 80130b8:	4413      	add	r3, r2
 80130ba:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80130bc:	f9b2 2000 	ldrsh.w	r2, [r2]
 80130c0:	4293      	cmp	r3, r2
 80130c2:	da51      	bge.n	8013168 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 80130c4:	e038      	b.n	8013138 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 80130c6:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80130c8:	e79a      	b.n	8013000 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 80130ca:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 80130ce:	9301      	str	r3, [sp, #4]
 80130d0:	ab1d      	add	r3, sp, #116	; 0x74
 80130d2:	9300      	str	r3, [sp, #0]
 80130d4:	4659      	mov	r1, fp
 80130d6:	ab1c      	add	r3, sp, #112	; 0x70
 80130d8:	982c      	ldr	r0, [sp, #176]	; 0xb0
 80130da:	f003 f8ca 	bl	8016272 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 80130de:	4604      	mov	r4, r0
 80130e0:	e7c0      	b.n	8013064 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 80130e2:	f8d8 0000 	ldr.w	r0, [r8]
 80130e6:	6803      	ldr	r3, [r0, #0]
 80130e8:	691b      	ldr	r3, [r3, #16]
 80130ea:	4798      	blx	r3
 80130ec:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80130f0:	4298      	cmp	r0, r3
 80130f2:	f000 80a7 	beq.w	8013244 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80130f6:	f242 030b 	movw	r3, #8203	; 0x200b
 80130fa:	4298      	cmp	r0, r3
 80130fc:	f000 80a2 	beq.w	8013244 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013100:	f1bb 0f00 	cmp.w	fp, #0
 8013104:	d100      	bne.n	8013108 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8013106:	444e      	add	r6, r9
 8013108:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801310a:	2a00      	cmp	r2, #0
 801310c:	d1bf      	bne.n	801308e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 801310e:	4691      	mov	r9, r2
 8013110:	e098      	b.n	8013244 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013112:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013114:	2b00      	cmp	r3, #0
 8013116:	f000 80ac 	beq.w	8013272 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 801311a:	f1bb 0f00 	cmp.w	fp, #0
 801311e:	d118      	bne.n	8013152 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8013120:	f8d8 0000 	ldr.w	r0, [r8]
 8013124:	990d      	ldr	r1, [sp, #52]	; 0x34
 8013126:	6803      	ldr	r3, [r0, #0]
 8013128:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801312a:	4798      	blx	r3
 801312c:	4406      	add	r6, r0
 801312e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8013130:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013132:	1af3      	subs	r3, r6, r3
 8013134:	4293      	cmp	r3, r2
 8013136:	dd17      	ble.n	8013168 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8013138:	2c00      	cmp	r4, #0
 801313a:	f000 8098 	beq.w	801326e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 801313e:	2c0a      	cmp	r4, #10
 8013140:	f040 8086 	bne.w	8013250 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 8013144:	240a      	movs	r4, #10
 8013146:	fab4 f084 	clz	r0, r4
 801314a:	0940      	lsrs	r0, r0, #5
 801314c:	b01f      	add	sp, #124	; 0x7c
 801314e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013152:	f8d8 0000 	ldr.w	r0, [r8]
 8013156:	990d      	ldr	r1, [sp, #52]	; 0x34
 8013158:	6803      	ldr	r3, [r0, #0]
 801315a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801315c:	4798      	blx	r3
 801315e:	f1bb 0f01 	cmp.w	fp, #1
 8013162:	eba6 0600 	sub.w	r6, r6, r0
 8013166:	d0a4      	beq.n	80130b2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8013168:	981c      	ldr	r0, [sp, #112]	; 0x70
 801316a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801316c:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8013170:	f9b3 7000 	ldrsh.w	r7, [r3]
 8013174:	7b43      	ldrb	r3, [r0, #13]
 8013176:	015b      	lsls	r3, r3, #5
 8013178:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801317c:	7983      	ldrb	r3, [r0, #6]
 801317e:	4431      	add	r1, r6
 8013180:	4313      	orrs	r3, r2
 8013182:	440b      	add	r3, r1
 8013184:	42bb      	cmp	r3, r7
 8013186:	db5d      	blt.n	8013244 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013188:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801318a:	4299      	cmp	r1, r3
 801318c:	da5a      	bge.n	8013244 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801318e:	f8d8 0000 	ldr.w	r0, [r8]
 8013192:	6803      	ldr	r3, [r0, #0]
 8013194:	42b7      	cmp	r7, r6
 8013196:	bfc8      	it	gt
 8013198:	1bbf      	subgt	r7, r7, r6
 801319a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801319c:	bfcc      	ite	gt
 801319e:	b2bf      	uxthgt	r7, r7
 80131a0:	2700      	movle	r7, #0
 80131a2:	4798      	blx	r3
 80131a4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80131a6:	7b5a      	ldrb	r2, [r3, #13]
 80131a8:	00d1      	lsls	r1, r2, #3
 80131aa:	f401 7580 	and.w	r5, r1, #256	; 0x100
 80131ae:	7a19      	ldrb	r1, [r3, #8]
 80131b0:	4329      	orrs	r1, r5
 80131b2:	0655      	lsls	r5, r2, #25
 80131b4:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 80131b6:	bf44      	itt	mi
 80131b8:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 80131bc:	b209      	sxthmi	r1, r1
 80131be:	1945      	adds	r5, r0, r5
 80131c0:	1a6d      	subs	r5, r5, r1
 80131c2:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80131c4:	b2ad      	uxth	r5, r5
 80131c6:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 80131ca:	fa0f fa85 	sxth.w	sl, r5
 80131ce:	4551      	cmp	r1, sl
 80131d0:	dd3c      	ble.n	801324c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 80131d2:	0112      	lsls	r2, r2, #4
 80131d4:	79d8      	ldrb	r0, [r3, #7]
 80131d6:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80131da:	4302      	orrs	r2, r0
 80131dc:	4492      	add	sl, r2
 80131de:	4551      	cmp	r1, sl
 80131e0:	dc30      	bgt.n	8013244 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80131e2:	1b4d      	subs	r5, r1, r5
 80131e4:	b22d      	sxth	r5, r5
 80131e6:	468a      	mov	sl, r1
 80131e8:	9319      	str	r3, [sp, #100]	; 0x64
 80131ea:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80131ec:	f8d8 0000 	ldr.w	r0, [r8]
 80131f0:	681a      	ldr	r2, [r3, #0]
 80131f2:	6801      	ldr	r1, [r0, #0]
 80131f4:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 80131f6:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 80131f8:	9313      	str	r3, [sp, #76]	; 0x4c
 80131fa:	9218      	str	r2, [sp, #96]	; 0x60
 80131fc:	6c09      	ldr	r1, [r1, #64]	; 0x40
 80131fe:	4788      	blx	r1
 8013200:	f898 1006 	ldrb.w	r1, [r8, #6]
 8013204:	910b      	str	r1, [sp, #44]	; 0x2c
 8013206:	f898 100e 	ldrb.w	r1, [r8, #14]
 801320a:	910a      	str	r1, [sp, #40]	; 0x28
 801320c:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8013210:	9109      	str	r1, [sp, #36]	; 0x24
 8013212:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8013216:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8013218:	9305      	str	r3, [sp, #20]
 801321a:	b2ad      	uxth	r5, r5
 801321c:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8013220:	e9cd 7502 	strd	r7, r5, [sp, #8]
 8013224:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8013226:	9304      	str	r3, [sp, #16]
 8013228:	4437      	add	r7, r6
 801322a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801322c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801322e:	9206      	str	r2, [sp, #24]
 8013230:	b23f      	sxth	r7, r7
 8013232:	f8cd a004 	str.w	sl, [sp, #4]
 8013236:	9700      	str	r7, [sp, #0]
 8013238:	681a      	ldr	r2, [r3, #0]
 801323a:	9916      	ldr	r1, [sp, #88]	; 0x58
 801323c:	685b      	ldr	r3, [r3, #4]
 801323e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8013240:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8013242:	47a8      	blx	r5
 8013244:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013246:	3301      	adds	r3, #1
 8013248:	930e      	str	r3, [sp, #56]	; 0x38
 801324a:	e6e1      	b.n	8013010 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 801324c:	2500      	movs	r5, #0
 801324e:	e7cb      	b.n	80131e8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8013250:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8013252:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8013254:	3501      	adds	r5, #1
 8013256:	429d      	cmp	r5, r3
 8013258:	f6bf af75 	bge.w	8013146 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 801325c:	4659      	mov	r1, fp
 801325e:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8013260:	f7f3 fe1a 	bl	8006e98 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8013264:	4604      	mov	r4, r0
 8013266:	b110      	cbz	r0, 801326e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8013268:	280a      	cmp	r0, #10
 801326a:	d1f2      	bne.n	8013252 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 801326c:	e76a      	b.n	8013144 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 801326e:	2400      	movs	r4, #0
 8013270:	e769      	b.n	8013146 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8013272:	f1bb 0f00 	cmp.w	fp, #0
 8013276:	f43f af5a 	beq.w	801312e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 801327a:	e775      	b.n	8013168 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

0801327c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 801327c:	b530      	push	{r4, r5, lr}
 801327e:	8ac4      	ldrh	r4, [r0, #22]
 8013280:	8b45      	ldrh	r5, [r0, #26]
 8013282:	8343      	strh	r3, [r0, #26]
 8013284:	442c      	add	r4, r5
 8013286:	1ae4      	subs	r4, r4, r3
 8013288:	82c4      	strh	r4, [r0, #22]
 801328a:	8b83      	ldrh	r3, [r0, #28]
 801328c:	8b04      	ldrh	r4, [r0, #24]
 801328e:	4422      	add	r2, r4
 8013290:	440c      	add	r4, r1
 8013292:	1a59      	subs	r1, r3, r1
 8013294:	83c2      	strh	r2, [r0, #30]
 8013296:	8304      	strh	r4, [r0, #24]
 8013298:	8381      	strh	r1, [r0, #28]
 801329a:	bd30      	pop	{r4, r5, pc}

0801329c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 801329c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80132a0:	4604      	mov	r4, r0
 80132a2:	8a47      	ldrh	r7, [r0, #18]
 80132a4:	68c0      	ldr	r0, [r0, #12]
 80132a6:	6803      	ldr	r3, [r0, #0]
 80132a8:	b085      	sub	sp, #20
 80132aa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80132ac:	4798      	blx	r3
 80132ae:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 80132b2:	7a63      	ldrb	r3, [r4, #9]
 80132b4:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 80132b8:	42b7      	cmp	r7, r6
 80132ba:	f103 33ff 	add.w	r3, r3, #4294967295
 80132be:	bfac      	ite	ge
 80132c0:	f04f 0900 	movge.w	r9, #0
 80132c4:	f04f 0901 	movlt.w	r9, #1
 80132c8:	2b05      	cmp	r3, #5
 80132ca:	d804      	bhi.n	80132d6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 80132cc:	e8df f003 	tbb	[pc, r3]
 80132d0:	470e0854 	.word	0x470e0854
 80132d4:	4c4c      	.short	0x4c4c
 80132d6:	2500      	movs	r5, #0
 80132d8:	46a9      	mov	r9, r5
 80132da:	462e      	mov	r6, r5
 80132dc:	462f      	mov	r7, r5
 80132de:	e00d      	b.n	80132fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80132e0:	42b7      	cmp	r7, r6
 80132e2:	bfb4      	ite	lt
 80132e4:	2600      	movlt	r6, #0
 80132e6:	2601      	movge	r6, #1
 80132e8:	2500      	movs	r5, #0
 80132ea:	e7f7      	b.n	80132dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 80132ec:	42b7      	cmp	r7, r6
 80132ee:	464d      	mov	r5, r9
 80132f0:	f04f 0900 	mov.w	r9, #0
 80132f4:	bfb4      	ite	lt
 80132f6:	2600      	movlt	r6, #0
 80132f8:	2601      	movge	r6, #1
 80132fa:	464f      	mov	r7, r9
 80132fc:	f04f 0800 	mov.w	r8, #0
 8013300:	f8a4 8016 	strh.w	r8, [r4, #22]
 8013304:	f8a4 8018 	strh.w	r8, [r4, #24]
 8013308:	f8cd 8004 	str.w	r8, [sp, #4]
 801330c:	2300      	movs	r3, #0
 801330e:	9303      	str	r3, [sp, #12]
 8013310:	8823      	ldrh	r3, [r4, #0]
 8013312:	2b20      	cmp	r3, #32
 8013314:	d034      	beq.n	8013380 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8013316:	f242 010b 	movw	r1, #8203	; 0x200b
 801331a:	1a5a      	subs	r2, r3, r1
 801331c:	f1d2 0a00 	rsbs	sl, r2, #0
 8013320:	eb4a 0a02 	adc.w	sl, sl, r2
 8013324:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8013328:	4293      	cmp	r3, r2
 801332a:	d009      	beq.n	8013340 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 801332c:	428b      	cmp	r3, r1
 801332e:	9a01      	ldr	r2, [sp, #4]
 8013330:	bf18      	it	ne
 8013332:	461a      	movne	r2, r3
 8013334:	9201      	str	r2, [sp, #4]
 8013336:	bf0c      	ite	eq
 8013338:	f04f 0a01 	moveq.w	sl, #1
 801333c:	f04f 0a00 	movne.w	sl, #0
 8013340:	ab03      	add	r3, sp, #12
 8013342:	68e2      	ldr	r2, [r4, #12]
 8013344:	7a21      	ldrb	r1, [r4, #8]
 8013346:	6860      	ldr	r0, [r4, #4]
 8013348:	f002 ff4a 	bl	80161e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801334c:	8020      	strh	r0, [r4, #0]
 801334e:	b9d8      	cbnz	r0, 8013388 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 8013350:	8ba2      	ldrh	r2, [r4, #28]
 8013352:	2300      	movs	r3, #0
 8013354:	4611      	mov	r1, r2
 8013356:	4620      	mov	r0, r4
 8013358:	f7ff ff90 	bl	801327c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 801335c:	e06e      	b.n	801343c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 801335e:	2500      	movs	r5, #0
 8013360:	46a9      	mov	r9, r5
 8013362:	462e      	mov	r6, r5
 8013364:	2701      	movs	r7, #1
 8013366:	e7c9      	b.n	80132fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8013368:	42b7      	cmp	r7, r6
 801336a:	f04f 0500 	mov.w	r5, #0
 801336e:	bfb4      	ite	lt
 8013370:	2700      	movlt	r7, #0
 8013372:	2701      	movge	r7, #1
 8013374:	462e      	mov	r6, r5
 8013376:	e7c1      	b.n	80132fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8013378:	2500      	movs	r5, #0
 801337a:	46a9      	mov	r9, r5
 801337c:	2601      	movs	r6, #1
 801337e:	e7ad      	b.n	80132dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8013380:	9301      	str	r3, [sp, #4]
 8013382:	f04f 0a01 	mov.w	sl, #1
 8013386:	e7db      	b.n	8013340 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8013388:	8b63      	ldrh	r3, [r4, #26]
 801338a:	280a      	cmp	r0, #10
 801338c:	f103 0301 	add.w	r3, r3, #1
 8013390:	8363      	strh	r3, [r4, #26]
 8013392:	d0dd      	beq.n	8013350 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8013394:	9a03      	ldr	r2, [sp, #12]
 8013396:	bb62      	cbnz	r2, 80133f2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8013398:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801339c:	4298      	cmp	r0, r3
 801339e:	d003      	beq.n	80133a8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 80133a0:	f242 030b 	movw	r3, #8203	; 0x200b
 80133a4:	4298      	cmp	r0, r3
 80133a6:	d1b1      	bne.n	801330c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80133a8:	8823      	ldrh	r3, [r4, #0]
 80133aa:	8ba1      	ldrh	r1, [r4, #28]
 80133ac:	2b20      	cmp	r3, #32
 80133ae:	d003      	beq.n	80133b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 80133b0:	f242 000b 	movw	r0, #8203	; 0x200b
 80133b4:	4283      	cmp	r3, r0
 80133b6:	d131      	bne.n	801341c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 80133b8:	f1ba 0f00 	cmp.w	sl, #0
 80133bc:	bf0a      	itet	eq
 80133be:	4688      	moveq	r8, r1
 80133c0:	4650      	movne	r0, sl
 80133c2:	2001      	moveq	r0, #1
 80133c4:	440a      	add	r2, r1
 80133c6:	8b23      	ldrh	r3, [r4, #24]
 80133c8:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 80133cc:	b292      	uxth	r2, r2
 80133ce:	83a2      	strh	r2, [r4, #28]
 80133d0:	4413      	add	r3, r2
 80133d2:	f1b9 0f00 	cmp.w	r9, #0
 80133d6:	d102      	bne.n	80133de <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 80133d8:	2d00      	cmp	r5, #0
 80133da:	d042      	beq.n	8013462 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 80133dc:	b300      	cbz	r0, 8013420 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 80133de:	8c21      	ldrh	r1, [r4, #32]
 80133e0:	4419      	add	r1, r3
 80133e2:	458c      	cmp	ip, r1
 80133e4:	da37      	bge.n	8013456 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 80133e6:	8ae1      	ldrh	r1, [r4, #22]
 80133e8:	2900      	cmp	r1, #0
 80133ea:	d034      	beq.n	8013456 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 80133ec:	4563      	cmp	r3, ip
 80133ee:	dd8d      	ble.n	801330c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80133f0:	e01d      	b.n	801342e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 80133f2:	8893      	ldrh	r3, [r2, #4]
 80133f4:	8023      	strh	r3, [r4, #0]
 80133f6:	f892 b00d 	ldrb.w	fp, [r2, #13]
 80133fa:	9901      	ldr	r1, [sp, #4]
 80133fc:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8013400:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8013404:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8013408:	ea4b 0b00 	orr.w	fp, fp, r0
 801340c:	68e0      	ldr	r0, [r4, #12]
 801340e:	6803      	ldr	r3, [r0, #0]
 8013410:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013412:	4798      	blx	r3
 8013414:	eb0b 0200 	add.w	r2, fp, r0
 8013418:	b292      	uxth	r2, r2
 801341a:	e7c5      	b.n	80133a8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 801341c:	2000      	movs	r0, #0
 801341e:	e7d1      	b.n	80133c4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 8013420:	4563      	cmp	r3, ip
 8013422:	f77f af73 	ble.w	801330c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013426:	8ae3      	ldrh	r3, [r4, #22]
 8013428:	2b00      	cmp	r3, #0
 801342a:	f43f af6f 	beq.w	801330c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801342e:	2301      	movs	r3, #1
 8013430:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 8013434:	8c22      	ldrh	r2, [r4, #32]
 8013436:	8be3      	ldrh	r3, [r4, #30]
 8013438:	4413      	add	r3, r2
 801343a:	83e3      	strh	r3, [r4, #30]
 801343c:	68e0      	ldr	r0, [r4, #12]
 801343e:	6803      	ldr	r3, [r0, #0]
 8013440:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013442:	4798      	blx	r3
 8013444:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8013448:	4418      	add	r0, r3
 801344a:	8a63      	ldrh	r3, [r4, #18]
 801344c:	1a18      	subs	r0, r3, r0
 801344e:	8260      	strh	r0, [r4, #18]
 8013450:	b005      	add	sp, #20
 8013452:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013456:	2300      	movs	r3, #0
 8013458:	4611      	mov	r1, r2
 801345a:	4620      	mov	r0, r4
 801345c:	f7ff ff0e 	bl	801327c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8013460:	e754      	b.n	801330c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013462:	4563      	cmp	r3, ip
 8013464:	dd14      	ble.n	8013490 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8013466:	b117      	cbz	r7, 801346e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8013468:	2301      	movs	r3, #1
 801346a:	460a      	mov	r2, r1
 801346c:	e772      	b.n	8013354 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 801346e:	2e00      	cmp	r6, #0
 8013470:	f43f af4c 	beq.w	801330c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013474:	2800      	cmp	r0, #0
 8013476:	f47f af49 	bne.w	801330c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801347a:	f1ba 0f00 	cmp.w	sl, #0
 801347e:	d002      	beq.n	8013486 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8013480:	2301      	movs	r3, #1
 8013482:	4642      	mov	r2, r8
 8013484:	e767      	b.n	8013356 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8013486:	8ae3      	ldrh	r3, [r4, #22]
 8013488:	2b00      	cmp	r3, #0
 801348a:	f43f af3f 	beq.w	801330c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801348e:	e7d5      	b.n	801343c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8013490:	2800      	cmp	r0, #0
 8013492:	f47f af3b 	bne.w	801330c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013496:	f1ba 0f00 	cmp.w	sl, #0
 801349a:	f43f af37 	beq.w	801330c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801349e:	2301      	movs	r3, #1
 80134a0:	4642      	mov	r2, r8
 80134a2:	e7da      	b.n	801345a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

080134a4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 80134a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80134a6:	4605      	mov	r5, r0
 80134a8:	b08f      	sub	sp, #60	; 0x3c
 80134aa:	4617      	mov	r7, r2
 80134ac:	461c      	mov	r4, r3
 80134ae:	460e      	mov	r6, r1
 80134b0:	b1d1      	cbz	r1, 80134e8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 80134b2:	681b      	ldr	r3, [r3, #0]
 80134b4:	4620      	mov	r0, r4
 80134b6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80134b8:	4798      	blx	r3
 80134ba:	4240      	negs	r0, r0
 80134bc:	b200      	sxth	r0, r0
 80134be:	e9cd 4001 	strd	r4, r0, [sp, #4]
 80134c2:	9603      	str	r6, [sp, #12]
 80134c4:	9700      	str	r7, [sp, #0]
 80134c6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80134ca:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 80134ce:	4629      	mov	r1, r5
 80134d0:	a805      	add	r0, sp, #20
 80134d2:	f7ff fcbf 	bl	8012e54 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 80134d6:	2401      	movs	r4, #1
 80134d8:	a805      	add	r0, sp, #20
 80134da:	f7ff fedf 	bl	801329c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80134de:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 80134e2:	b163      	cbz	r3, 80134fe <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 80134e4:	3401      	adds	r4, #1
 80134e6:	e7f7      	b.n	80134d8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 80134e8:	f002 ff48 	bl	801637c <_ZN8touchgfx12TextProvider11getNextCharEv>
 80134ec:	2401      	movs	r4, #1
 80134ee:	280a      	cmp	r0, #10
 80134f0:	4628      	mov	r0, r5
 80134f2:	bf08      	it	eq
 80134f4:	3401      	addeq	r4, #1
 80134f6:	f002 ff41 	bl	801637c <_ZN8touchgfx12TextProvider11getNextCharEv>
 80134fa:	2800      	cmp	r0, #0
 80134fc:	d1f7      	bne.n	80134ee <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 80134fe:	b2a0      	uxth	r0, r4
 8013500:	b00f      	add	sp, #60	; 0x3c
 8013502:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013504 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8013504:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013508:	b0e3      	sub	sp, #396	; 0x18c
 801350a:	461c      	mov	r4, r3
 801350c:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 801350e:	4683      	mov	fp, r0
 8013510:	4688      	mov	r8, r1
 8013512:	2b00      	cmp	r3, #0
 8013514:	f000 8112 	beq.w	801373c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013518:	6823      	ldr	r3, [r4, #0]
 801351a:	2b00      	cmp	r3, #0
 801351c:	f000 810e 	beq.w	801373c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013520:	7ba3      	ldrb	r3, [r4, #14]
 8013522:	2b00      	cmp	r3, #0
 8013524:	f000 810a 	beq.w	801373c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013528:	6810      	ldr	r0, [r2, #0]
 801352a:	6851      	ldr	r1, [r2, #4]
 801352c:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8013530:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8013534:	ad0a      	add	r5, sp, #40	; 0x28
 8013536:	462b      	mov	r3, r5
 8013538:	c303      	stmia	r3!, {r0, r1}
 801353a:	2100      	movs	r1, #0
 801353c:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8013540:	910c      	str	r1, [sp, #48]	; 0x30
 8013542:	79a2      	ldrb	r2, [r4, #6]
 8013544:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8013548:	a90c      	add	r1, sp, #48	; 0x30
 801354a:	4628      	mov	r0, r5
 801354c:	f7ff fd01 	bl	8012f52 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8013550:	a90c      	add	r1, sp, #48	; 0x30
 8013552:	4608      	mov	r0, r1
 8013554:	79a2      	ldrb	r2, [r4, #6]
 8013556:	f7ff fcfc 	bl	8012f52 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 801355a:	a817      	add	r0, sp, #92	; 0x5c
 801355c:	f002 fae2 	bl	8015b24 <_ZN8touchgfx12TextProviderC1Ev>
 8013560:	6820      	ldr	r0, [r4, #0]
 8013562:	6803      	ldr	r3, [r0, #0]
 8013564:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8013566:	4798      	blx	r3
 8013568:	4606      	mov	r6, r0
 801356a:	6820      	ldr	r0, [r4, #0]
 801356c:	6803      	ldr	r3, [r0, #0]
 801356e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8013570:	4798      	blx	r3
 8013572:	4633      	mov	r3, r6
 8013574:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8013576:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8013578:	9000      	str	r0, [sp, #0]
 801357a:	a817      	add	r0, sp, #92	; 0x5c
 801357c:	f002 fb2d 	bl	8015bda <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8013580:	6820      	ldr	r0, [r4, #0]
 8013582:	f894 a004 	ldrb.w	sl, [r4, #4]
 8013586:	6803      	ldr	r3, [r0, #0]
 8013588:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801358a:	4798      	blx	r3
 801358c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8013590:	6823      	ldr	r3, [r4, #0]
 8013592:	4607      	mov	r7, r0
 8013594:	4406      	add	r6, r0
 8013596:	a830      	add	r0, sp, #192	; 0xc0
 8013598:	f893 9009 	ldrb.w	r9, [r3, #9]
 801359c:	f002 fac2 	bl	8015b24 <_ZN8touchgfx12TextProviderC1Ev>
 80135a0:	7c23      	ldrb	r3, [r4, #16]
 80135a2:	b17b      	cbz	r3, 80135c4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 80135a4:	6820      	ldr	r0, [r4, #0]
 80135a6:	6803      	ldr	r3, [r0, #0]
 80135a8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80135aa:	4798      	blx	r3
 80135ac:	9009      	str	r0, [sp, #36]	; 0x24
 80135ae:	6820      	ldr	r0, [r4, #0]
 80135b0:	6802      	ldr	r2, [r0, #0]
 80135b2:	6d12      	ldr	r2, [r2, #80]	; 0x50
 80135b4:	4790      	blx	r2
 80135b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80135b8:	9000      	str	r0, [sp, #0]
 80135ba:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 80135bc:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 80135be:	a830      	add	r0, sp, #192	; 0xc0
 80135c0:	f002 fb0b 	bl	8015bda <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80135c4:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 80135c8:	7be2      	ldrb	r2, [r4, #15]
 80135ca:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 80135ce:	1a8a      	subs	r2, r1, r2
 80135d0:	7c21      	ldrb	r1, [r4, #16]
 80135d2:	9103      	str	r1, [sp, #12]
 80135d4:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 80135d8:	9102      	str	r1, [sp, #8]
 80135da:	6821      	ldr	r1, [r4, #0]
 80135dc:	9101      	str	r1, [sp, #4]
 80135de:	7961      	ldrb	r1, [r4, #5]
 80135e0:	9100      	str	r1, [sp, #0]
 80135e2:	b292      	uxth	r2, r2
 80135e4:	a930      	add	r1, sp, #192	; 0xc0
 80135e6:	a80e      	add	r0, sp, #56	; 0x38
 80135e8:	f7ff fc34 	bl	8012e54 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 80135ec:	2e00      	cmp	r6, #0
 80135ee:	dc5b      	bgt.n	80136a8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 80135f0:	af17      	add	r7, sp, #92	; 0x5c
 80135f2:	f04f 0900 	mov.w	r9, #0
 80135f6:	7c23      	ldrb	r3, [r4, #16]
 80135f8:	2b00      	cmp	r3, #0
 80135fa:	f000 80b1 	beq.w	8013760 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 80135fe:	a80e      	add	r0, sp, #56	; 0x38
 8013600:	f7ff fe4c 	bl	801329c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8013604:	f1ba 0f00 	cmp.w	sl, #0
 8013608:	f000 80a5 	beq.w	8013756 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 801360c:	7c23      	ldrb	r3, [r4, #16]
 801360e:	9309      	str	r3, [sp, #36]	; 0x24
 8013610:	2264      	movs	r2, #100	; 0x64
 8013612:	4639      	mov	r1, r7
 8013614:	a849      	add	r0, sp, #292	; 0x124
 8013616:	f014 fa6e 	bl	8027af6 <memcpy>
 801361a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801361c:	2b00      	cmp	r3, #0
 801361e:	f000 80a7 	beq.w	8013770 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 8013622:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8013626:	7922      	ldrb	r2, [r4, #4]
 8013628:	2a01      	cmp	r2, #1
 801362a:	f040 808a 	bne.w	8013742 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 801362e:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 8013632:	1ac0      	subs	r0, r0, r3
 8013634:	2302      	movs	r3, #2
 8013636:	fb90 f0f3 	sdiv	r0, r0, r3
 801363a:	b200      	sxth	r0, r0
 801363c:	7c23      	ldrb	r3, [r4, #16]
 801363e:	2b00      	cmp	r3, #0
 8013640:	f000 808b 	beq.w	801375a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8013644:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 8013648:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 801364c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8013650:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8013654:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8013658:	4410      	add	r0, r2
 801365a:	b200      	sxth	r0, r0
 801365c:	9000      	str	r0, [sp, #0]
 801365e:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8013662:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8013666:	4642      	mov	r2, r8
 8013668:	2100      	movs	r1, #0
 801366a:	4658      	mov	r0, fp
 801366c:	f7ff fca2 	bl	8012fb4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8013670:	2800      	cmp	r0, #0
 8013672:	d163      	bne.n	801373c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013674:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8013678:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 801367c:	b2b2      	uxth	r2, r6
 801367e:	4413      	add	r3, r2
 8013680:	1a8a      	subs	r2, r1, r2
 8013682:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 8013686:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 801368a:	b21b      	sxth	r3, r3
 801368c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8013690:	2a00      	cmp	r2, #0
 8013692:	d153      	bne.n	801373c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013694:	6822      	ldr	r2, [r4, #0]
 8013696:	8869      	ldrh	r1, [r5, #2]
 8013698:	7a12      	ldrb	r2, [r2, #8]
 801369a:	1a9b      	subs	r3, r3, r2
 801369c:	88ea      	ldrh	r2, [r5, #6]
 801369e:	440a      	add	r2, r1
 80136a0:	b212      	sxth	r2, r2
 80136a2:	4293      	cmp	r3, r2
 80136a4:	dda7      	ble.n	80135f6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 80136a6:	e049      	b.n	801373c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80136a8:	7c23      	ldrb	r3, [r4, #16]
 80136aa:	444f      	add	r7, r9
 80136ac:	b1c3      	cbz	r3, 80136e0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 80136ae:	f64f 79ff 	movw	r9, #65535	; 0xffff
 80136b2:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80136b6:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80136ba:	443b      	add	r3, r7
 80136bc:	4293      	cmp	r3, r2
 80136be:	da97      	bge.n	80135f0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 80136c0:	a80e      	add	r0, sp, #56	; 0x38
 80136c2:	f7ff fdeb 	bl	801329c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80136c6:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 80136ca:	3b01      	subs	r3, #1
 80136cc:	b29b      	uxth	r3, r3
 80136ce:	454b      	cmp	r3, r9
 80136d0:	9309      	str	r3, [sp, #36]	; 0x24
 80136d2:	d021      	beq.n	8013718 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 80136d4:	7961      	ldrb	r1, [r4, #5]
 80136d6:	a817      	add	r0, sp, #92	; 0x5c
 80136d8:	f7f3 fbde 	bl	8006e98 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80136dc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80136de:	e7f4      	b.n	80136ca <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 80136e0:	fa1f f986 	uxth.w	r9, r6
 80136e4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80136e8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80136ec:	443b      	add	r3, r7
 80136ee:	4293      	cmp	r3, r2
 80136f0:	f6bf af7e 	bge.w	80135f0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 80136f4:	a817      	add	r0, sp, #92	; 0x5c
 80136f6:	f002 fe41 	bl	801637c <_ZN8touchgfx12TextProvider11getNextCharEv>
 80136fa:	b1f8      	cbz	r0, 801373c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80136fc:	280a      	cmp	r0, #10
 80136fe:	d1f1      	bne.n	80136e4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8013700:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8013704:	444b      	add	r3, r9
 8013706:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801370a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801370e:	eba3 0309 	sub.w	r3, r3, r9
 8013712:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8013716:	e7e5      	b.n	80136e4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8013718:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801371c:	b2b3      	uxth	r3, r6
 801371e:	441a      	add	r2, r3
 8013720:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8013724:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 8013728:	1ad3      	subs	r3, r2, r3
 801372a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801372e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8013732:	b11b      	cbz	r3, 801373c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013734:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 8013738:	2b00      	cmp	r3, #0
 801373a:	d0ba      	beq.n	80136b2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 801373c:	b063      	add	sp, #396	; 0x18c
 801373e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013742:	2a02      	cmp	r2, #2
 8013744:	d105      	bne.n	8013752 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8013746:	7be2      	ldrb	r2, [r4, #15]
 8013748:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 801374c:	1a80      	subs	r0, r0, r2
 801374e:	1ac0      	subs	r0, r0, r3
 8013750:	e773      	b.n	801363a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8013752:	2000      	movs	r0, #0
 8013754:	e772      	b.n	801363c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8013756:	7be0      	ldrb	r0, [r4, #15]
 8013758:	e770      	b.n	801363c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 801375a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801375e:	e773      	b.n	8013648 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8013760:	f1ba 0f00 	cmp.w	sl, #0
 8013764:	d0f7      	beq.n	8013756 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8013766:	2264      	movs	r2, #100	; 0x64
 8013768:	4639      	mov	r1, r7
 801376a:	a849      	add	r0, sp, #292	; 0x124
 801376c:	f014 f9c3 	bl	8027af6 <memcpy>
 8013770:	2300      	movs	r3, #0
 8013772:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8013776:	6821      	ldr	r1, [r4, #0]
 8013778:	a849      	add	r0, sp, #292	; 0x124
 801377a:	f7ff fbae 	bl	8012eda <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801377e:	b203      	sxth	r3, r0
 8013780:	e751      	b.n	8013626 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08013782 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8013782:	2b03      	cmp	r3, #3
 8013784:	d818      	bhi.n	80137b8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8013786:	e8df f003 	tbb	[pc, r3]
 801378a:	0602      	.short	0x0602
 801378c:	130d      	.short	0x130d
 801378e:	f9b0 2000 	ldrsh.w	r2, [r0]
 8013792:	1850      	adds	r0, r2, r1
 8013794:	4770      	bx	lr
 8013796:	8803      	ldrh	r3, [r0, #0]
 8013798:	8880      	ldrh	r0, [r0, #4]
 801379a:	4418      	add	r0, r3
 801379c:	b200      	sxth	r0, r0
 801379e:	1a80      	subs	r0, r0, r2
 80137a0:	3801      	subs	r0, #1
 80137a2:	4770      	bx	lr
 80137a4:	8803      	ldrh	r3, [r0, #0]
 80137a6:	8880      	ldrh	r0, [r0, #4]
 80137a8:	4418      	add	r0, r3
 80137aa:	b200      	sxth	r0, r0
 80137ac:	1a40      	subs	r0, r0, r1
 80137ae:	e7f7      	b.n	80137a0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 80137b0:	f9b0 0000 	ldrsh.w	r0, [r0]
 80137b4:	4410      	add	r0, r2
 80137b6:	4770      	bx	lr
 80137b8:	2000      	movs	r0, #0
 80137ba:	4770      	bx	lr

080137bc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 80137bc:	2b03      	cmp	r3, #3
 80137be:	d817      	bhi.n	80137f0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 80137c0:	e8df f003 	tbb	[pc, r3]
 80137c4:	10090602 	.word	0x10090602
 80137c8:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80137cc:	1850      	adds	r0, r2, r1
 80137ce:	4770      	bx	lr
 80137d0:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80137d4:	e7fa      	b.n	80137cc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 80137d6:	8843      	ldrh	r3, [r0, #2]
 80137d8:	88c0      	ldrh	r0, [r0, #6]
 80137da:	4418      	add	r0, r3
 80137dc:	b200      	sxth	r0, r0
 80137de:	1a80      	subs	r0, r0, r2
 80137e0:	3801      	subs	r0, #1
 80137e2:	4770      	bx	lr
 80137e4:	8843      	ldrh	r3, [r0, #2]
 80137e6:	88c0      	ldrh	r0, [r0, #6]
 80137e8:	4418      	add	r0, r3
 80137ea:	b200      	sxth	r0, r0
 80137ec:	1a40      	subs	r0, r0, r1
 80137ee:	e7f7      	b.n	80137e0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 80137f0:	2000      	movs	r0, #0
 80137f2:	4770      	bx	lr

080137f4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 80137f4:	4b01      	ldr	r3, [pc, #4]	; (80137fc <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 80137f6:	2200      	movs	r2, #0
 80137f8:	601a      	str	r2, [r3, #0]
 80137fa:	4770      	bx	lr
 80137fc:	200137cc 	.word	0x200137cc

08013800 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8013800:	4603      	mov	r3, r0
 8013802:	b1c8      	cbz	r0, 8013838 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8013804:	0c02      	lsrs	r2, r0, #16
 8013806:	0412      	lsls	r2, r2, #16
 8013808:	b9a2      	cbnz	r2, 8013834 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 801380a:	0403      	lsls	r3, r0, #16
 801380c:	2010      	movs	r0, #16
 801380e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8013812:	bf04      	itt	eq
 8013814:	021b      	lsleq	r3, r3, #8
 8013816:	3008      	addeq	r0, #8
 8013818:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801381c:	bf04      	itt	eq
 801381e:	011b      	lsleq	r3, r3, #4
 8013820:	3004      	addeq	r0, #4
 8013822:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8013826:	bf04      	itt	eq
 8013828:	009b      	lsleq	r3, r3, #2
 801382a:	3002      	addeq	r0, #2
 801382c:	2b00      	cmp	r3, #0
 801382e:	db04      	blt.n	801383a <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8013830:	3001      	adds	r0, #1
 8013832:	4770      	bx	lr
 8013834:	2000      	movs	r0, #0
 8013836:	e7ea      	b.n	801380e <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8013838:	2020      	movs	r0, #32
 801383a:	4770      	bx	lr

0801383c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 801383c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013840:	b087      	sub	sp, #28
 8013842:	460d      	mov	r5, r1
 8013844:	4616      	mov	r6, r2
 8013846:	4698      	mov	r8, r3
 8013848:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 801384c:	4601      	mov	r1, r0
 801384e:	b120      	cbz	r0, 801385a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8013850:	b11a      	cbz	r2, 801385a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8013852:	2d1f      	cmp	r5, #31
 8013854:	d801      	bhi.n	801385a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8013856:	2b1f      	cmp	r3, #31
 8013858:	d904      	bls.n	8013864 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 801385a:	2000      	movs	r0, #0
 801385c:	6038      	str	r0, [r7, #0]
 801385e:	b007      	add	sp, #28
 8013860:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013864:	b97d      	cbnz	r5, 8013886 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8013866:	b143      	cbz	r3, 801387a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8013868:	4602      	mov	r2, r0
 801386a:	e9cd 4700 	strd	r4, r7, [sp]
 801386e:	462b      	mov	r3, r5
 8013870:	4641      	mov	r1, r8
 8013872:	4630      	mov	r0, r6
 8013874:	f7ff ffe2 	bl	801383c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8013878:	e7f1      	b.n	801385e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801387a:	f04f 33ff 	mov.w	r3, #4294967295
 801387e:	603b      	str	r3, [r7, #0]
 8013880:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8013884:	e7eb      	b.n	801385e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8013886:	fa32 fa05 	lsrs.w	sl, r2, r5
 801388a:	d106      	bne.n	801389a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 801388c:	4346      	muls	r6, r0
 801388e:	fbb6 f0f4 	udiv	r0, r6, r4
 8013892:	fb04 6610 	mls	r6, r4, r0, r6
 8013896:	603e      	str	r6, [r7, #0]
 8013898:	e7e1      	b.n	801385e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801389a:	2201      	movs	r2, #1
 801389c:	40aa      	lsls	r2, r5
 801389e:	3a01      	subs	r2, #1
 80138a0:	4016      	ands	r6, r2
 80138a2:	fa00 fb05 	lsl.w	fp, r0, r5
 80138a6:	4630      	mov	r0, r6
 80138a8:	fbbb f9f4 	udiv	r9, fp, r4
 80138ac:	fb0a f309 	mul.w	r3, sl, r9
 80138b0:	9303      	str	r3, [sp, #12]
 80138b2:	f7ff ffa5 	bl	8013800 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80138b6:	462b      	mov	r3, r5
 80138b8:	460a      	mov	r2, r1
 80138ba:	e9cd 4700 	strd	r4, r7, [sp]
 80138be:	4601      	mov	r1, r0
 80138c0:	4630      	mov	r0, r6
 80138c2:	f7ff ffbb 	bl	801383c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80138c6:	fb04 b919 	mls	r9, r4, r9, fp
 80138ca:	4606      	mov	r6, r0
 80138cc:	4648      	mov	r0, r9
 80138ce:	eb05 0108 	add.w	r1, r5, r8
 80138d2:	f7ff ff95 	bl	8013800 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80138d6:	ab05      	add	r3, sp, #20
 80138d8:	e9cd 4300 	strd	r4, r3, [sp]
 80138dc:	464a      	mov	r2, r9
 80138de:	4603      	mov	r3, r0
 80138e0:	4650      	mov	r0, sl
 80138e2:	f7ff ffab 	bl	801383c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80138e6:	6839      	ldr	r1, [r7, #0]
 80138e8:	9a05      	ldr	r2, [sp, #20]
 80138ea:	9b03      	ldr	r3, [sp, #12]
 80138ec:	4411      	add	r1, r2
 80138ee:	fbb1 f2f4 	udiv	r2, r1, r4
 80138f2:	18d3      	adds	r3, r2, r3
 80138f4:	441e      	add	r6, r3
 80138f6:	fb04 1412 	mls	r4, r4, r2, r1
 80138fa:	4430      	add	r0, r6
 80138fc:	603c      	str	r4, [r7, #0]
 80138fe:	e7ae      	b.n	801385e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08013900 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8013900:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013904:	b085      	sub	sp, #20
 8013906:	f1b0 0900 	subs.w	r9, r0, #0
 801390a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801390c:	461d      	mov	r5, r3
 801390e:	bfbf      	itttt	lt
 8013910:	6823      	ldrlt	r3, [r4, #0]
 8013912:	425b      	neglt	r3, r3
 8013914:	f1c9 0900 	rsblt	r9, r9, #0
 8013918:	6023      	strlt	r3, [r4, #0]
 801391a:	bfb4      	ite	lt
 801391c:	f04f 36ff 	movlt.w	r6, #4294967295
 8013920:	2601      	movge	r6, #1
 8013922:	2a00      	cmp	r2, #0
 8013924:	4617      	mov	r7, r2
 8013926:	da04      	bge.n	8013932 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8013928:	6823      	ldr	r3, [r4, #0]
 801392a:	425b      	negs	r3, r3
 801392c:	4257      	negs	r7, r2
 801392e:	4276      	negs	r6, r6
 8013930:	6023      	str	r3, [r4, #0]
 8013932:	2d00      	cmp	r5, #0
 8013934:	4638      	mov	r0, r7
 8013936:	bfba      	itte	lt
 8013938:	426d      	neglt	r5, r5
 801393a:	f04f 38ff 	movlt.w	r8, #4294967295
 801393e:	f04f 0801 	movge.w	r8, #1
 8013942:	f7ff ff5d 	bl	8013800 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8013946:	ab03      	add	r3, sp, #12
 8013948:	e9cd 5300 	strd	r5, r3, [sp]
 801394c:	463a      	mov	r2, r7
 801394e:	4603      	mov	r3, r0
 8013950:	4648      	mov	r0, r9
 8013952:	f7ff ff73 	bl	801383c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8013956:	6823      	ldr	r3, [r4, #0]
 8013958:	9a03      	ldr	r2, [sp, #12]
 801395a:	4546      	cmp	r6, r8
 801395c:	441a      	add	r2, r3
 801395e:	fb92 f3f5 	sdiv	r3, r2, r5
 8013962:	4418      	add	r0, r3
 8013964:	bf18      	it	ne
 8013966:	4240      	negne	r0, r0
 8013968:	fb05 2313 	mls	r3, r5, r3, r2
 801396c:	1c72      	adds	r2, r6, #1
 801396e:	6023      	str	r3, [r4, #0]
 8013970:	d105      	bne.n	801397e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8013972:	2b00      	cmp	r3, #0
 8013974:	f1c3 0200 	rsb	r2, r3, #0
 8013978:	db0b      	blt.n	8013992 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 801397a:	6022      	str	r2, [r4, #0]
 801397c:	e006      	b.n	801398c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801397e:	2e01      	cmp	r6, #1
 8013980:	d104      	bne.n	801398c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8013982:	2b00      	cmp	r3, #0
 8013984:	da02      	bge.n	801398c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8013986:	442b      	add	r3, r5
 8013988:	3801      	subs	r0, #1
 801398a:	6023      	str	r3, [r4, #0]
 801398c:	b005      	add	sp, #20
 801398e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013992:	3801      	subs	r0, #1
 8013994:	1b52      	subs	r2, r2, r5
 8013996:	e7f0      	b.n	801397a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08013998 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8013998:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801399c:	4c1c      	ldr	r4, [pc, #112]	; (8013a10 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 801399e:	6807      	ldr	r7, [r0, #0]
 80139a0:	69a3      	ldr	r3, [r4, #24]
 80139a2:	4605      	mov	r5, r0
 80139a4:	b92b      	cbnz	r3, 80139b2 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 80139a6:	6840      	ldr	r0, [r0, #4]
 80139a8:	e9c5 7000 	strd	r7, r0, [r5]
 80139ac:	b004      	add	sp, #16
 80139ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80139b2:	68a2      	ldr	r2, [r4, #8]
 80139b4:	6820      	ldr	r0, [r4, #0]
 80139b6:	ae04      	add	r6, sp, #16
 80139b8:	f04f 0802 	mov.w	r8, #2
 80139bc:	fb93 f1f8 	sdiv	r1, r3, r8
 80139c0:	440a      	add	r2, r1
 80139c2:	f846 2d04 	str.w	r2, [r6, #-4]!
 80139c6:	69e1      	ldr	r1, [r4, #28]
 80139c8:	9600      	str	r6, [sp, #0]
 80139ca:	463a      	mov	r2, r7
 80139cc:	f7ff ff98 	bl	8013900 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80139d0:	69a3      	ldr	r3, [r4, #24]
 80139d2:	686a      	ldr	r2, [r5, #4]
 80139d4:	6a21      	ldr	r1, [r4, #32]
 80139d6:	9600      	str	r6, [sp, #0]
 80139d8:	4607      	mov	r7, r0
 80139da:	6860      	ldr	r0, [r4, #4]
 80139dc:	f7ff ff90 	bl	8013900 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80139e0:	6962      	ldr	r2, [r4, #20]
 80139e2:	69a3      	ldr	r3, [r4, #24]
 80139e4:	fb93 f8f8 	sdiv	r8, r3, r8
 80139e8:	4442      	add	r2, r8
 80139ea:	9203      	str	r2, [sp, #12]
 80139ec:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80139ee:	682a      	ldr	r2, [r5, #0]
 80139f0:	9600      	str	r6, [sp, #0]
 80139f2:	4407      	add	r7, r0
 80139f4:	68e0      	ldr	r0, [r4, #12]
 80139f6:	f7ff ff83 	bl	8013900 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80139fa:	9600      	str	r6, [sp, #0]
 80139fc:	4680      	mov	r8, r0
 80139fe:	69a3      	ldr	r3, [r4, #24]
 8013a00:	686a      	ldr	r2, [r5, #4]
 8013a02:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8013a04:	6920      	ldr	r0, [r4, #16]
 8013a06:	f7ff ff7b 	bl	8013900 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8013a0a:	4440      	add	r0, r8
 8013a0c:	e7cc      	b.n	80139a8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8013a0e:	bf00      	nop
 8013a10:	200137d0 	.word	0x200137d0

08013a14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8013a14:	4b07      	ldr	r3, [pc, #28]	; (8013a34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8013a16:	781b      	ldrb	r3, [r3, #0]
 8013a18:	2b01      	cmp	r3, #1
 8013a1a:	d109      	bne.n	8013a30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8013a1c:	f9b1 3000 	ldrsh.w	r3, [r1]
 8013a20:	f9b0 2000 	ldrsh.w	r2, [r0]
 8013a24:	8003      	strh	r3, [r0, #0]
 8013a26:	4b04      	ldr	r3, [pc, #16]	; (8013a38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8013a28:	881b      	ldrh	r3, [r3, #0]
 8013a2a:	3b01      	subs	r3, #1
 8013a2c:	1a9b      	subs	r3, r3, r2
 8013a2e:	800b      	strh	r3, [r1, #0]
 8013a30:	4770      	bx	lr
 8013a32:	bf00      	nop
 8013a34:	200137b4 	.word	0x200137b4
 8013a38:	200137b0 	.word	0x200137b0

08013a3c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8013a3c:	b510      	push	{r4, lr}
 8013a3e:	4b07      	ldr	r3, [pc, #28]	; (8013a5c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8013a40:	781b      	ldrb	r3, [r3, #0]
 8013a42:	2b01      	cmp	r3, #1
 8013a44:	d108      	bne.n	8013a58 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8013a46:	4b06      	ldr	r3, [pc, #24]	; (8013a60 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8013a48:	880c      	ldrh	r4, [r1, #0]
 8013a4a:	881b      	ldrh	r3, [r3, #0]
 8013a4c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8013a50:	3b01      	subs	r3, #1
 8013a52:	1b1b      	subs	r3, r3, r4
 8013a54:	8003      	strh	r3, [r0, #0]
 8013a56:	800a      	strh	r2, [r1, #0]
 8013a58:	bd10      	pop	{r4, pc}
 8013a5a:	bf00      	nop
 8013a5c:	200137b4 	.word	0x200137b4
 8013a60:	200137b0 	.word	0x200137b0

08013a64 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8013a64:	b510      	push	{r4, lr}
 8013a66:	4b0a      	ldr	r3, [pc, #40]	; (8013a90 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8013a68:	781b      	ldrb	r3, [r3, #0]
 8013a6a:	2b01      	cmp	r3, #1
 8013a6c:	d10e      	bne.n	8013a8c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8013a6e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8013a72:	8843      	ldrh	r3, [r0, #2]
 8013a74:	f9b0 4000 	ldrsh.w	r4, [r0]
 8013a78:	8044      	strh	r4, [r0, #2]
 8013a7a:	18ca      	adds	r2, r1, r3
 8013a7c:	4b05      	ldr	r3, [pc, #20]	; (8013a94 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8013a7e:	881b      	ldrh	r3, [r3, #0]
 8013a80:	1a9b      	subs	r3, r3, r2
 8013a82:	8003      	strh	r3, [r0, #0]
 8013a84:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8013a88:	80c3      	strh	r3, [r0, #6]
 8013a8a:	8081      	strh	r1, [r0, #4]
 8013a8c:	bd10      	pop	{r4, pc}
 8013a8e:	bf00      	nop
 8013a90:	200137b4 	.word	0x200137b4
 8013a94:	200137b0 	.word	0x200137b0

08013a98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8013a98:	4b08      	ldr	r3, [pc, #32]	; (8013abc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8013a9a:	781b      	ldrb	r3, [r3, #0]
 8013a9c:	2b01      	cmp	r3, #1
 8013a9e:	d10c      	bne.n	8013aba <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8013aa0:	8803      	ldrh	r3, [r0, #0]
 8013aa2:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8013aa6:	8842      	ldrh	r2, [r0, #2]
 8013aa8:	8002      	strh	r2, [r0, #0]
 8013aaa:	185a      	adds	r2, r3, r1
 8013aac:	4b04      	ldr	r3, [pc, #16]	; (8013ac0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8013aae:	881b      	ldrh	r3, [r3, #0]
 8013ab0:	1a9b      	subs	r3, r3, r2
 8013ab2:	8043      	strh	r3, [r0, #2]
 8013ab4:	88c3      	ldrh	r3, [r0, #6]
 8013ab6:	8083      	strh	r3, [r0, #4]
 8013ab8:	80c1      	strh	r1, [r0, #6]
 8013aba:	4770      	bx	lr
 8013abc:	200137b4 	.word	0x200137b4
 8013ac0:	200137b0 	.word	0x200137b0

08013ac4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8013ac4:	b510      	push	{r4, lr}
 8013ac6:	4b07      	ldr	r3, [pc, #28]	; (8013ae4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8013ac8:	781b      	ldrb	r3, [r3, #0]
 8013aca:	2b01      	cmp	r3, #1
 8013acc:	d108      	bne.n	8013ae0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8013ace:	f9b1 3000 	ldrsh.w	r3, [r1]
 8013ad2:	f9b0 4000 	ldrsh.w	r4, [r0]
 8013ad6:	8003      	strh	r3, [r0, #0]
 8013ad8:	8893      	ldrh	r3, [r2, #4]
 8013ada:	3b01      	subs	r3, #1
 8013adc:	1b1b      	subs	r3, r3, r4
 8013ade:	800b      	strh	r3, [r1, #0]
 8013ae0:	bd10      	pop	{r4, pc}
 8013ae2:	bf00      	nop
 8013ae4:	200137b4 	.word	0x200137b4

08013ae8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 8013ae8:	4b0b      	ldr	r3, [pc, #44]	; (8013b18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 8013aea:	781b      	ldrb	r3, [r3, #0]
 8013aec:	2b01      	cmp	r3, #1
 8013aee:	d111      	bne.n	8013b14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 8013af0:	680b      	ldr	r3, [r1, #0]
 8013af2:	ed90 7a00 	vldr	s14, [r0]
 8013af6:	6003      	str	r3, [r0, #0]
 8013af8:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8013afc:	eddf 6a07 	vldr	s13, [pc, #28]	; 8013b1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 8013b00:	ee07 3a90 	vmov	s15, r3
 8013b04:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013b08:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8013b0c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8013b10:	edc1 7a00 	vstr	s15, [r1]
 8013b14:	4770      	bx	lr
 8013b16:	bf00      	nop
 8013b18:	200137b4 	.word	0x200137b4
 8013b1c:	38d1b717 	.word	0x38d1b717

08013b20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8013b20:	b510      	push	{r4, lr}
 8013b22:	4b0a      	ldr	r3, [pc, #40]	; (8013b4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8013b24:	781b      	ldrb	r3, [r3, #0]
 8013b26:	2b01      	cmp	r3, #1
 8013b28:	460a      	mov	r2, r1
 8013b2a:	d10d      	bne.n	8013b48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8013b2c:	8881      	ldrh	r1, [r0, #4]
 8013b2e:	8803      	ldrh	r3, [r0, #0]
 8013b30:	440b      	add	r3, r1
 8013b32:	4601      	mov	r1, r0
 8013b34:	3b01      	subs	r3, #1
 8013b36:	f821 3b02 	strh.w	r3, [r1], #2
 8013b3a:	f7ff ffc3 	bl	8013ac4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8013b3e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8013b42:	88c2      	ldrh	r2, [r0, #6]
 8013b44:	8082      	strh	r2, [r0, #4]
 8013b46:	80c3      	strh	r3, [r0, #6]
 8013b48:	bd10      	pop	{r4, pc}
 8013b4a:	bf00      	nop
 8013b4c:	200137b4 	.word	0x200137b4

08013b50 <_ZN8touchgfx11Application13requestRedrawEv>:
 8013b50:	4b06      	ldr	r3, [pc, #24]	; (8013b6c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8013b52:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013b56:	4b06      	ldr	r3, [pc, #24]	; (8013b70 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8013b58:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 8013b5c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013b60:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 8013b64:	2100      	movs	r1, #0
 8013b66:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 8013b6a:	4770      	bx	lr
 8013b6c:	200137b0 	.word	0x200137b0
 8013b70:	200137b2 	.word	0x200137b2

08013b74 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8013b74:	4b03      	ldr	r3, [pc, #12]	; (8013b84 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8013b76:	6818      	ldr	r0, [r3, #0]
 8013b78:	b110      	cbz	r0, 8013b80 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8013b7a:	6803      	ldr	r3, [r0, #0]
 8013b7c:	699b      	ldr	r3, [r3, #24]
 8013b7e:	4718      	bx	r3
 8013b80:	4770      	bx	lr
 8013b82:	bf00      	nop
 8013b84:	20013800 	.word	0x20013800

08013b88 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8013b88:	4770      	bx	lr
	...

08013b8c <_ZN8touchgfx11Application4drawEv>:
 8013b8c:	b507      	push	{r0, r1, r2, lr}
 8013b8e:	4b09      	ldr	r3, [pc, #36]	; (8013bb4 <_ZN8touchgfx11Application4drawEv+0x28>)
 8013b90:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013b94:	4b08      	ldr	r3, [pc, #32]	; (8013bb8 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8013b96:	f8ad 2004 	strh.w	r2, [sp, #4]
 8013b9a:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013b9e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8013ba2:	6803      	ldr	r3, [r0, #0]
 8013ba4:	2100      	movs	r1, #0
 8013ba6:	9100      	str	r1, [sp, #0]
 8013ba8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8013baa:	4669      	mov	r1, sp
 8013bac:	4798      	blx	r3
 8013bae:	b003      	add	sp, #12
 8013bb0:	f85d fb04 	ldr.w	pc, [sp], #4
 8013bb4:	200137b0 	.word	0x200137b0
 8013bb8:	200137b2 	.word	0x200137b2

08013bbc <_ZN8touchgfx11Application10invalidateEv>:
 8013bbc:	4b09      	ldr	r3, [pc, #36]	; (8013be4 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8013bbe:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013bc2:	4b09      	ldr	r3, [pc, #36]	; (8013be8 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8013bc4:	b082      	sub	sp, #8
 8013bc6:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013bca:	f8ad 2004 	strh.w	r2, [sp, #4]
 8013bce:	2100      	movs	r1, #0
 8013bd0:	f8ad 3006 	strh.w	r3, [sp, #6]
 8013bd4:	9100      	str	r1, [sp, #0]
 8013bd6:	6803      	ldr	r3, [r0, #0]
 8013bd8:	aa02      	add	r2, sp, #8
 8013bda:	e912 0006 	ldmdb	r2, {r1, r2}
 8013bde:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8013be0:	b002      	add	sp, #8
 8013be2:	4718      	bx	r3
 8013be4:	200137b0 	.word	0x200137b0
 8013be8:	200137b2 	.word	0x200137b2

08013bec <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8013bec:	4b03      	ldr	r3, [pc, #12]	; (8013bfc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8013bee:	6818      	ldr	r0, [r3, #0]
 8013bf0:	b110      	cbz	r0, 8013bf8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8013bf2:	6803      	ldr	r3, [r0, #0]
 8013bf4:	69db      	ldr	r3, [r3, #28]
 8013bf6:	4718      	bx	r3
 8013bf8:	4770      	bx	lr
 8013bfa:	bf00      	nop
 8013bfc:	20013800 	.word	0x20013800

08013c00 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8013c00:	4b03      	ldr	r3, [pc, #12]	; (8013c10 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8013c02:	6818      	ldr	r0, [r3, #0]
 8013c04:	b110      	cbz	r0, 8013c0c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8013c06:	6803      	ldr	r3, [r0, #0]
 8013c08:	6a1b      	ldr	r3, [r3, #32]
 8013c0a:	4718      	bx	r3
 8013c0c:	4770      	bx	lr
 8013c0e:	bf00      	nop
 8013c10:	20013800 	.word	0x20013800

08013c14 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8013c14:	2300      	movs	r3, #0
 8013c16:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 8013c1a:	4770      	bx	lr

08013c1c <_ZN8touchgfx11Application14handleKeyEventEh>:
 8013c1c:	4b03      	ldr	r3, [pc, #12]	; (8013c2c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8013c1e:	6818      	ldr	r0, [r3, #0]
 8013c20:	b110      	cbz	r0, 8013c28 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8013c22:	6803      	ldr	r3, [r0, #0]
 8013c24:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013c26:	4718      	bx	r3
 8013c28:	4770      	bx	lr
 8013c2a:	bf00      	nop
 8013c2c:	20013800 	.word	0x20013800

08013c30 <_ZN8touchgfx11ApplicationD1Ev>:
 8013c30:	4770      	bx	lr

08013c32 <_ZN8touchgfx11ApplicationD0Ev>:
 8013c32:	b510      	push	{r4, lr}
 8013c34:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8013c38:	4604      	mov	r4, r0
 8013c3a:	f012 fe40 	bl	80268be <_ZdlPvj>
 8013c3e:	4620      	mov	r0, r4
 8013c40:	bd10      	pop	{r4, pc}

08013c42 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8013c42:	b510      	push	{r4, lr}
 8013c44:	f9b1 4000 	ldrsh.w	r4, [r1]
 8013c48:	888a      	ldrh	r2, [r1, #4]
 8013c4a:	f9b0 3000 	ldrsh.w	r3, [r0]
 8013c4e:	4422      	add	r2, r4
 8013c50:	b212      	sxth	r2, r2
 8013c52:	4293      	cmp	r3, r2
 8013c54:	da15      	bge.n	8013c82 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8013c56:	8882      	ldrh	r2, [r0, #4]
 8013c58:	4413      	add	r3, r2
 8013c5a:	b21b      	sxth	r3, r3
 8013c5c:	429c      	cmp	r4, r3
 8013c5e:	da10      	bge.n	8013c82 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8013c60:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8013c64:	88c9      	ldrh	r1, [r1, #6]
 8013c66:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8013c6a:	4419      	add	r1, r3
 8013c6c:	b209      	sxth	r1, r1
 8013c6e:	428a      	cmp	r2, r1
 8013c70:	da07      	bge.n	8013c82 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8013c72:	88c0      	ldrh	r0, [r0, #6]
 8013c74:	4410      	add	r0, r2
 8013c76:	b200      	sxth	r0, r0
 8013c78:	4283      	cmp	r3, r0
 8013c7a:	bfac      	ite	ge
 8013c7c:	2000      	movge	r0, #0
 8013c7e:	2001      	movlt	r0, #1
 8013c80:	bd10      	pop	{r4, pc}
 8013c82:	2000      	movs	r0, #0
 8013c84:	e7fc      	b.n	8013c80 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08013c86 <_ZN8touchgfx4Rect10restrictToEss>:
 8013c86:	f9b0 3000 	ldrsh.w	r3, [r0]
 8013c8a:	2b00      	cmp	r3, #0
 8013c8c:	b510      	push	{r4, lr}
 8013c8e:	da04      	bge.n	8013c9a <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8013c90:	8884      	ldrh	r4, [r0, #4]
 8013c92:	4423      	add	r3, r4
 8013c94:	8083      	strh	r3, [r0, #4]
 8013c96:	2300      	movs	r3, #0
 8013c98:	8003      	strh	r3, [r0, #0]
 8013c9a:	f9b0 4000 	ldrsh.w	r4, [r0]
 8013c9e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8013ca2:	1b09      	subs	r1, r1, r4
 8013ca4:	428b      	cmp	r3, r1
 8013ca6:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8013caa:	bfc8      	it	gt
 8013cac:	8081      	strhgt	r1, [r0, #4]
 8013cae:	2b00      	cmp	r3, #0
 8013cb0:	da04      	bge.n	8013cbc <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8013cb2:	88c1      	ldrh	r1, [r0, #6]
 8013cb4:	440b      	add	r3, r1
 8013cb6:	80c3      	strh	r3, [r0, #6]
 8013cb8:	2300      	movs	r3, #0
 8013cba:	8043      	strh	r3, [r0, #2]
 8013cbc:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8013cc0:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8013cc4:	1a52      	subs	r2, r2, r1
 8013cc6:	4293      	cmp	r3, r2
 8013cc8:	bfc8      	it	gt
 8013cca:	80c2      	strhgt	r2, [r0, #6]
 8013ccc:	bd10      	pop	{r4, pc}
	...

08013cd0 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8013cd0:	b510      	push	{r4, lr}
 8013cd2:	4b10      	ldr	r3, [pc, #64]	; (8013d14 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8013cd4:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013cd8:	4b0f      	ldr	r3, [pc, #60]	; (8013d18 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8013cda:	460c      	mov	r4, r1
 8013cdc:	4620      	mov	r0, r4
 8013cde:	f9b3 1000 	ldrsh.w	r1, [r3]
 8013ce2:	f7ff ffd0 	bl	8013c86 <_ZN8touchgfx4Rect10restrictToEss>
 8013ce6:	4b0d      	ldr	r3, [pc, #52]	; (8013d1c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8013ce8:	6818      	ldr	r0, [r3, #0]
 8013cea:	b190      	cbz	r0, 8013d12 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8013cec:	6803      	ldr	r3, [r0, #0]
 8013cee:	4621      	mov	r1, r4
 8013cf0:	689b      	ldr	r3, [r3, #8]
 8013cf2:	4798      	blx	r3
 8013cf4:	4b0a      	ldr	r3, [pc, #40]	; (8013d20 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8013cf6:	6818      	ldr	r0, [r3, #0]
 8013cf8:	b118      	cbz	r0, 8013d02 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8013cfa:	6803      	ldr	r3, [r0, #0]
 8013cfc:	4621      	mov	r1, r4
 8013cfe:	689b      	ldr	r3, [r3, #8]
 8013d00:	4798      	blx	r3
 8013d02:	4b08      	ldr	r3, [pc, #32]	; (8013d24 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8013d04:	6818      	ldr	r0, [r3, #0]
 8013d06:	6803      	ldr	r3, [r0, #0]
 8013d08:	4621      	mov	r1, r4
 8013d0a:	69db      	ldr	r3, [r3, #28]
 8013d0c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013d10:	4718      	bx	r3
 8013d12:	bd10      	pop	{r4, pc}
 8013d14:	200137b2 	.word	0x200137b2
 8013d18:	200137b0 	.word	0x200137b0
 8013d1c:	20013800 	.word	0x20013800
 8013d20:	200137fc 	.word	0x200137fc
 8013d24:	200137bc 	.word	0x200137bc

08013d28 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8013d28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013d2a:	4606      	mov	r6, r0
 8013d2c:	4608      	mov	r0, r1
 8013d2e:	460f      	mov	r7, r1
 8013d30:	f7fa ff97 	bl	800ec62 <_ZNK8touchgfx4Rect7isEmptyEv>
 8013d34:	b9e8      	cbnz	r0, 8013d72 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8013d36:	f9b7 5000 	ldrsh.w	r5, [r7]
 8013d3a:	f9b6 4000 	ldrsh.w	r4, [r6]
 8013d3e:	42a5      	cmp	r5, r4
 8013d40:	db17      	blt.n	8013d72 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8013d42:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8013d46:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8013d4a:	429a      	cmp	r2, r3
 8013d4c:	db11      	blt.n	8013d72 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8013d4e:	88b9      	ldrh	r1, [r7, #4]
 8013d50:	440d      	add	r5, r1
 8013d52:	88b1      	ldrh	r1, [r6, #4]
 8013d54:	440c      	add	r4, r1
 8013d56:	b22d      	sxth	r5, r5
 8013d58:	b224      	sxth	r4, r4
 8013d5a:	42a5      	cmp	r5, r4
 8013d5c:	dc09      	bgt.n	8013d72 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8013d5e:	88f8      	ldrh	r0, [r7, #6]
 8013d60:	4410      	add	r0, r2
 8013d62:	88f2      	ldrh	r2, [r6, #6]
 8013d64:	4413      	add	r3, r2
 8013d66:	b200      	sxth	r0, r0
 8013d68:	b21b      	sxth	r3, r3
 8013d6a:	4298      	cmp	r0, r3
 8013d6c:	bfcc      	ite	gt
 8013d6e:	2000      	movgt	r0, #0
 8013d70:	2001      	movle	r0, #1
 8013d72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08013d74 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8013d74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013d76:	4604      	mov	r4, r0
 8013d78:	4608      	mov	r0, r1
 8013d7a:	460d      	mov	r5, r1
 8013d7c:	f7fa ff71 	bl	800ec62 <_ZNK8touchgfx4Rect7isEmptyEv>
 8013d80:	b978      	cbnz	r0, 8013da2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8013d82:	4620      	mov	r0, r4
 8013d84:	f7fa ff6d 	bl	800ec62 <_ZNK8touchgfx4Rect7isEmptyEv>
 8013d88:	f9b5 6000 	ldrsh.w	r6, [r5]
 8013d8c:	b150      	cbz	r0, 8013da4 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8013d8e:	8026      	strh	r6, [r4, #0]
 8013d90:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8013d94:	8063      	strh	r3, [r4, #2]
 8013d96:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8013d9a:	80a3      	strh	r3, [r4, #4]
 8013d9c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8013da0:	80e3      	strh	r3, [r4, #6]
 8013da2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013da4:	f9b4 1000 	ldrsh.w	r1, [r4]
 8013da8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8013dac:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8013db0:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8013db4:	88ed      	ldrh	r5, [r5, #6]
 8013db6:	42b1      	cmp	r1, r6
 8013db8:	460f      	mov	r7, r1
 8013dba:	bfa8      	it	ge
 8013dbc:	4637      	movge	r7, r6
 8013dbe:	4293      	cmp	r3, r2
 8013dc0:	4618      	mov	r0, r3
 8013dc2:	4466      	add	r6, ip
 8013dc4:	bfa8      	it	ge
 8013dc6:	4610      	movge	r0, r2
 8013dc8:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8013dcc:	8027      	strh	r7, [r4, #0]
 8013dce:	442a      	add	r2, r5
 8013dd0:	88e5      	ldrh	r5, [r4, #6]
 8013dd2:	8060      	strh	r0, [r4, #2]
 8013dd4:	4461      	add	r1, ip
 8013dd6:	442b      	add	r3, r5
 8013dd8:	b236      	sxth	r6, r6
 8013dda:	b209      	sxth	r1, r1
 8013ddc:	b212      	sxth	r2, r2
 8013dde:	b21b      	sxth	r3, r3
 8013de0:	428e      	cmp	r6, r1
 8013de2:	bfac      	ite	ge
 8013de4:	ebc7 0106 	rsbge	r1, r7, r6
 8013de8:	ebc7 0101 	rsblt	r1, r7, r1
 8013dec:	429a      	cmp	r2, r3
 8013dee:	bfac      	ite	ge
 8013df0:	ebc0 0202 	rsbge	r2, r0, r2
 8013df4:	ebc0 0203 	rsblt	r2, r0, r3
 8013df8:	80a1      	strh	r1, [r4, #4]
 8013dfa:	80e2      	strh	r2, [r4, #6]
 8013dfc:	e7d1      	b.n	8013da2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08013e00 <_ZN8touchgfx11Application11getInstanceEv>:
 8013e00:	4b01      	ldr	r3, [pc, #4]	; (8013e08 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8013e02:	6818      	ldr	r0, [r3, #0]
 8013e04:	4770      	bx	lr
 8013e06:	bf00      	nop
 8013e08:	20013810 	.word	0x20013810

08013e0c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 8013e0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013e0e:	4b10      	ldr	r3, [pc, #64]	; (8013e50 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8013e10:	781b      	ldrb	r3, [r3, #0]
 8013e12:	4605      	mov	r5, r0
 8013e14:	b1d3      	cbz	r3, 8013e4c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 8013e16:	4b0f      	ldr	r3, [pc, #60]	; (8013e54 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8013e18:	4f0f      	ldr	r7, [pc, #60]	; (8013e58 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 8013e1a:	881c      	ldrh	r4, [r3, #0]
 8013e1c:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 8013e20:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 8013e24:	42a3      	cmp	r3, r4
 8013e26:	d90e      	bls.n	8013e46 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 8013e28:	683b      	ldr	r3, [r7, #0]
 8013e2a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8013e2e:	b10a      	cbz	r2, 8013e34 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8013e30:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8013e32:	b900      	cbnz	r0, 8013e36 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8013e34:	6898      	ldr	r0, [r3, #8]
 8013e36:	6803      	ldr	r3, [r0, #0]
 8013e38:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 8013e3c:	69db      	ldr	r3, [r3, #28]
 8013e3e:	3401      	adds	r4, #1
 8013e40:	4798      	blx	r3
 8013e42:	b2a4      	uxth	r4, r4
 8013e44:	e7ec      	b.n	8013e20 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 8013e46:	2300      	movs	r3, #0
 8013e48:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 8013e4c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013e4e:	bf00      	nop
 8013e50:	200137ba 	.word	0x200137ba
 8013e54:	20000088 	.word	0x20000088
 8013e58:	200137bc 	.word	0x200137bc

08013e5c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8013e5c:	b510      	push	{r4, lr}
 8013e5e:	2300      	movs	r3, #0
 8013e60:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8013e64:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8013e68:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8013e6c:	4604      	mov	r4, r0
 8013e6e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8013e72:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8013e76:	429a      	cmp	r2, r3
 8013e78:	d90e      	bls.n	8013e98 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8013e7a:	18e2      	adds	r2, r4, r3
 8013e7c:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8013e80:	b122      	cbz	r2, 8013e8c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8013e82:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8013e86:	6803      	ldr	r3, [r0, #0]
 8013e88:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8013e8a:	4798      	blx	r3
 8013e8c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8013e90:	3301      	adds	r3, #1
 8013e92:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8013e96:	e7ea      	b.n	8013e6e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8013e98:	bd10      	pop	{r4, pc}

08013e9a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 8013e9a:	b530      	push	{r4, r5, lr}
 8013e9c:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8013ea0:	2200      	movs	r2, #0
 8013ea2:	b293      	uxth	r3, r2
 8013ea4:	429d      	cmp	r5, r3
 8013ea6:	d90e      	bls.n	8013ec6 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8013ea8:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8013eac:	428b      	cmp	r3, r1
 8013eae:	d10b      	bne.n	8013ec8 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8013eb0:	1884      	adds	r4, r0, r2
 8013eb2:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8013eb6:	b13b      	cbz	r3, 8013ec8 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8013eb8:	3b01      	subs	r3, #1
 8013eba:	b2db      	uxtb	r3, r3
 8013ebc:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8013ec0:	b90b      	cbnz	r3, 8013ec6 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8013ec2:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8013ec6:	bd30      	pop	{r4, r5, pc}
 8013ec8:	3201      	adds	r2, #1
 8013eca:	e7ea      	b.n	8013ea2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

08013ecc <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8013ecc:	2300      	movs	r3, #0
 8013ece:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8013ed2:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8013ed6:	30a4      	adds	r0, #164	; 0xa4
 8013ed8:	f802 3b01 	strb.w	r3, [r2], #1
 8013edc:	4282      	cmp	r2, r0
 8013ede:	d1fb      	bne.n	8013ed8 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8013ee0:	4770      	bx	lr
	...

08013ee4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8013ee4:	b570      	push	{r4, r5, r6, lr}
 8013ee6:	4c0b      	ldr	r4, [pc, #44]	; (8013f14 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8013ee8:	4605      	mov	r5, r0
 8013eea:	6820      	ldr	r0, [r4, #0]
 8013eec:	460e      	mov	r6, r1
 8013eee:	b110      	cbz	r0, 8013ef6 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8013ef0:	6803      	ldr	r3, [r0, #0]
 8013ef2:	695b      	ldr	r3, [r3, #20]
 8013ef4:	4798      	blx	r3
 8013ef6:	1d28      	adds	r0, r5, #4
 8013ef8:	f7ff ffe8 	bl	8013ecc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8013efc:	6026      	str	r6, [r4, #0]
 8013efe:	6833      	ldr	r3, [r6, #0]
 8013f00:	4630      	mov	r0, r6
 8013f02:	68db      	ldr	r3, [r3, #12]
 8013f04:	4798      	blx	r3
 8013f06:	682b      	ldr	r3, [r5, #0]
 8013f08:	4628      	mov	r0, r5
 8013f0a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013f0c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013f10:	4718      	bx	r3
 8013f12:	bf00      	nop
 8013f14:	20013800 	.word	0x20013800

08013f18 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8013f18:	2300      	movs	r3, #0
 8013f1a:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8013f1e:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8013f22:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013f24:	461a      	mov	r2, r3
 8013f26:	461c      	mov	r4, r3
 8013f28:	461d      	mov	r5, r3
 8013f2a:	459c      	cmp	ip, r3
 8013f2c:	dd1a      	ble.n	8013f64 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8013f2e:	18c6      	adds	r6, r0, r3
 8013f30:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8013f34:	b16e      	cbz	r6, 8013f52 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8013f36:	429a      	cmp	r2, r3
 8013f38:	d008      	beq.n	8013f4c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8013f3a:	fa1f fe82 	uxth.w	lr, r2
 8013f3e:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8013f42:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8013f46:	1887      	adds	r7, r0, r2
 8013f48:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8013f4c:	3201      	adds	r2, #1
 8013f4e:	3301      	adds	r3, #1
 8013f50:	e7eb      	b.n	8013f2a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8013f52:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8013f56:	4299      	cmp	r1, r3
 8013f58:	bfa8      	it	ge
 8013f5a:	3501      	addge	r5, #1
 8013f5c:	429e      	cmp	r6, r3
 8013f5e:	bfc8      	it	gt
 8013f60:	3401      	addgt	r4, #1
 8013f62:	e7f4      	b.n	8013f4e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8013f64:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8013f68:	1b49      	subs	r1, r1, r5
 8013f6a:	1b1b      	subs	r3, r3, r4
 8013f6c:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8013f70:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8013f74:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8013f78:	4293      	cmp	r3, r2
 8013f7a:	dd03      	ble.n	8013f84 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8013f7c:	3b01      	subs	r3, #1
 8013f7e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8013f82:	e7f7      	b.n	8013f74 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8013f84:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08013f88 <_ZN8touchgfx11Application15handleTickEventEv>:
 8013f88:	b570      	push	{r4, r5, r6, lr}
 8013f8a:	4d16      	ldr	r5, [pc, #88]	; (8013fe4 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8013f8c:	4604      	mov	r4, r0
 8013f8e:	6828      	ldr	r0, [r5, #0]
 8013f90:	b140      	cbz	r0, 8013fa4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8013f92:	7a03      	ldrb	r3, [r0, #8]
 8013f94:	b933      	cbnz	r3, 8013fa4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8013f96:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8013f9a:	6803      	ldr	r3, [r0, #0]
 8013f9c:	689b      	ldr	r3, [r3, #8]
 8013f9e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013fa2:	4718      	bx	r3
 8013fa4:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8013fa8:	4e0f      	ldr	r6, [pc, #60]	; (8013fe8 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8013faa:	b973      	cbnz	r3, 8013fca <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8013fac:	b168      	cbz	r0, 8013fca <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8013fae:	7a03      	ldrb	r3, [r0, #8]
 8013fb0:	b15b      	cbz	r3, 8013fca <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8013fb2:	6830      	ldr	r0, [r6, #0]
 8013fb4:	b110      	cbz	r0, 8013fbc <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8013fb6:	6803      	ldr	r3, [r0, #0]
 8013fb8:	691b      	ldr	r3, [r3, #16]
 8013fba:	4798      	blx	r3
 8013fbc:	6828      	ldr	r0, [r5, #0]
 8013fbe:	6803      	ldr	r3, [r0, #0]
 8013fc0:	68db      	ldr	r3, [r3, #12]
 8013fc2:	4798      	blx	r3
 8013fc4:	2301      	movs	r3, #1
 8013fc6:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8013fca:	3404      	adds	r4, #4
 8013fcc:	4620      	mov	r0, r4
 8013fce:	f7ff ff45 	bl	8013e5c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8013fd2:	4620      	mov	r0, r4
 8013fd4:	f7ff ffa0 	bl	8013f18 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8013fd8:	6830      	ldr	r0, [r6, #0]
 8013fda:	b110      	cbz	r0, 8013fe2 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8013fdc:	6803      	ldr	r3, [r0, #0]
 8013fde:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8013fe0:	e7dd      	b.n	8013f9e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8013fe2:	bd70      	pop	{r4, r5, r6, pc}
 8013fe4:	20013804 	.word	0x20013804
 8013fe8:	20013800 	.word	0x20013800

08013fec <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 8013fec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013fee:	2300      	movs	r3, #0
 8013ff0:	4604      	mov	r4, r0
 8013ff2:	460d      	mov	r5, r1
 8013ff4:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8013ff8:	4618      	mov	r0, r3
 8013ffa:	b29a      	uxth	r2, r3
 8013ffc:	4291      	cmp	r1, r2
 8013ffe:	d911      	bls.n	8014024 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8014000:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8014004:	18e6      	adds	r6, r4, r3
 8014006:	42af      	cmp	r7, r5
 8014008:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 801400c:	d105      	bne.n	801401a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 801400e:	2aff      	cmp	r2, #255	; 0xff
 8014010:	d002      	beq.n	8014018 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8014012:	3201      	adds	r2, #1
 8014014:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8014018:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801401a:	2a00      	cmp	r2, #0
 801401c:	bf08      	it	eq
 801401e:	2001      	moveq	r0, #1
 8014020:	3301      	adds	r3, #1
 8014022:	e7ea      	b.n	8013ffa <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8014024:	b120      	cbz	r0, 8014030 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8014026:	2920      	cmp	r1, #32
 8014028:	d102      	bne.n	8014030 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 801402a:	4620      	mov	r0, r4
 801402c:	f7ff ff74 	bl	8013f18 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8014030:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 8014034:	2b1f      	cmp	r3, #31
 8014036:	d8ef      	bhi.n	8014018 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8014038:	18e2      	adds	r2, r4, r3
 801403a:	2101      	movs	r1, #1
 801403c:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8014040:	185a      	adds	r2, r3, r1
 8014042:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 8014046:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 801404a:	e7e5      	b.n	8014018 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

0801404c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 801404c:	4603      	mov	r3, r0
 801404e:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8014052:	2200      	movs	r2, #0
 8014054:	801a      	strh	r2, [r3, #0]
 8014056:	805a      	strh	r2, [r3, #2]
 8014058:	809a      	strh	r2, [r3, #4]
 801405a:	80da      	strh	r2, [r3, #6]
 801405c:	3308      	adds	r3, #8
 801405e:	428b      	cmp	r3, r1
 8014060:	d1f8      	bne.n	8014054 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8014062:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8014066:	4770      	bx	lr

08014068 <_ZN8touchgfx11ApplicationC1Ev>:
 8014068:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801406a:	4606      	mov	r6, r0
 801406c:	4b1c      	ldr	r3, [pc, #112]	; (80140e0 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 801406e:	f846 3b04 	str.w	r3, [r6], #4
 8014072:	4604      	mov	r4, r0
 8014074:	2500      	movs	r5, #0
 8014076:	22a8      	movs	r2, #168	; 0xa8
 8014078:	2100      	movs	r1, #0
 801407a:	4630      	mov	r0, r6
 801407c:	f013 fc15 	bl	80278aa <memset>
 8014080:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8014084:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8014088:	f7ff ffe0 	bl	801404c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801408c:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8014090:	f7ff ffdc 	bl	801404c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8014094:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8014098:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 801409c:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 80140a0:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 80140a4:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 80140a8:	490e      	ldr	r1, [pc, #56]	; (80140e4 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 80140aa:	480f      	ldr	r0, [pc, #60]	; (80140e8 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 80140ac:	4f0f      	ldr	r7, [pc, #60]	; (80140ec <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 80140ae:	f010 fbf5 	bl	802489c <CRC_Lock>
 80140b2:	4b0f      	ldr	r3, [pc, #60]	; (80140f0 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 80140b4:	b158      	cbz	r0, 80140ce <_ZN8touchgfx11ApplicationC1Ev+0x66>
 80140b6:	801d      	strh	r5, [r3, #0]
 80140b8:	4a0e      	ldr	r2, [pc, #56]	; (80140f4 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 80140ba:	2300      	movs	r3, #0
 80140bc:	6013      	str	r3, [r2, #0]
 80140be:	4a0e      	ldr	r2, [pc, #56]	; (80140f8 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 80140c0:	603b      	str	r3, [r7, #0]
 80140c2:	4630      	mov	r0, r6
 80140c4:	6013      	str	r3, [r2, #0]
 80140c6:	f7ff ff01 	bl	8013ecc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80140ca:	4620      	mov	r0, r4
 80140cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80140ce:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80140d2:	2002      	movs	r0, #2
 80140d4:	801a      	strh	r2, [r3, #0]
 80140d6:	6038      	str	r0, [r7, #0]
 80140d8:	f001 fb4a 	bl	8015770 <_ZN8touchgfx6Screen4drawEv>
 80140dc:	e7ec      	b.n	80140b8 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 80140de:	bf00      	nop
 80140e0:	0802b7cc 	.word	0x0802b7cc
 80140e4:	b5e8b5cd 	.word	0xb5e8b5cd
 80140e8:	f407a5c2 	.word	0xf407a5c2
 80140ec:	20013800 	.word	0x20013800
 80140f0:	20000088 	.word	0x20000088
 80140f4:	20013810 	.word	0x20013810
 80140f8:	20013804 	.word	0x20013804

080140fc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 80140fc:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8014100:	3b01      	subs	r3, #1
 8014102:	b29b      	uxth	r3, r3
 8014104:	428b      	cmp	r3, r1
 8014106:	b510      	push	{r4, lr}
 8014108:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 801410c:	d908      	bls.n	8014120 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 801410e:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8014112:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8014116:	681a      	ldr	r2, [r3, #0]
 8014118:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 801411c:	685a      	ldr	r2, [r3, #4]
 801411e:	6062      	str	r2, [r4, #4]
 8014120:	bd10      	pop	{r4, pc}
	...

08014124 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8014124:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014128:	4b8f      	ldr	r3, [pc, #572]	; (8014368 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 801412a:	b08f      	sub	sp, #60	; 0x3c
 801412c:	ac0a      	add	r4, sp, #40	; 0x28
 801412e:	e884 0006 	stmia.w	r4, {r1, r2}
 8014132:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014136:	4b8d      	ldr	r3, [pc, #564]	; (801436c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8014138:	4683      	mov	fp, r0
 801413a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801413e:	4620      	mov	r0, r4
 8014140:	f7ff fda1 	bl	8013c86 <_ZN8touchgfx4Rect10restrictToEss>
 8014144:	4620      	mov	r0, r4
 8014146:	f7fa fd8c 	bl	800ec62 <_ZNK8touchgfx4Rect7isEmptyEv>
 801414a:	2800      	cmp	r0, #0
 801414c:	d16a      	bne.n	8014224 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801414e:	9403      	str	r4, [sp, #12]
 8014150:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8014154:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8014158:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 801415c:	35a4      	adds	r5, #164	; 0xa4
 801415e:	9301      	str	r3, [sp, #4]
 8014160:	b15c      	cbz	r4, 801417a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8014162:	4629      	mov	r1, r5
 8014164:	9803      	ldr	r0, [sp, #12]
 8014166:	f7ff fddf 	bl	8013d28 <_ZNK8touchgfx4Rect8includesERKS0_>
 801416a:	3c01      	subs	r4, #1
 801416c:	b118      	cbz	r0, 8014176 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 801416e:	b2a1      	uxth	r1, r4
 8014170:	9801      	ldr	r0, [sp, #4]
 8014172:	f7ff ffc3 	bl	80140fc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014176:	3d08      	subs	r5, #8
 8014178:	e7f2      	b.n	8014160 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 801417a:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 801417e:	f8cd a010 	str.w	sl, [sp, #16]
 8014182:	f10a 33ff 	add.w	r3, sl, #4294967295
 8014186:	9302      	str	r3, [sp, #8]
 8014188:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 801418c:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8014190:	9306      	str	r3, [sp, #24]
 8014192:	445c      	add	r4, fp
 8014194:	2500      	movs	r5, #0
 8014196:	4626      	mov	r6, r4
 8014198:	f8cd a014 	str.w	sl, [sp, #20]
 801419c:	462f      	mov	r7, r5
 801419e:	9b05      	ldr	r3, [sp, #20]
 80141a0:	2b00      	cmp	r3, #0
 80141a2:	d073      	beq.n	801428c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80141a4:	9903      	ldr	r1, [sp, #12]
 80141a6:	4630      	mov	r0, r6
 80141a8:	f7ff fd4b 	bl	8013c42 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80141ac:	b350      	cbz	r0, 8014204 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80141ae:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 80141b2:	f9b6 c000 	ldrsh.w	ip, [r6]
 80141b6:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 80141ba:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 80141be:	45e6      	cmp	lr, ip
 80141c0:	db33      	blt.n	801422a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80141c2:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80141c6:	88b3      	ldrh	r3, [r6, #4]
 80141c8:	4472      	add	r2, lr
 80141ca:	4463      	add	r3, ip
 80141cc:	b212      	sxth	r2, r2
 80141ce:	b21b      	sxth	r3, r3
 80141d0:	429a      	cmp	r2, r3
 80141d2:	dc2a      	bgt.n	801422a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80141d4:	88f3      	ldrh	r3, [r6, #6]
 80141d6:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80141da:	fa1f f289 	uxth.w	r2, r9
 80141de:	4413      	add	r3, r2
 80141e0:	b29b      	uxth	r3, r3
 80141e2:	45c8      	cmp	r8, r9
 80141e4:	fa1f fc88 	uxth.w	ip, r8
 80141e8:	fa0f fe83 	sxth.w	lr, r3
 80141ec:	db0f      	blt.n	801420e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 80141ee:	eba3 030c 	sub.w	r3, r3, ip
 80141f2:	1ac9      	subs	r1, r1, r3
 80141f4:	b209      	sxth	r1, r1
 80141f6:	2900      	cmp	r1, #0
 80141f8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80141fc:	dd12      	ble.n	8014224 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80141fe:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8014202:	4605      	mov	r5, r0
 8014204:	9b05      	ldr	r3, [sp, #20]
 8014206:	3b01      	subs	r3, #1
 8014208:	9305      	str	r3, [sp, #20]
 801420a:	3e08      	subs	r6, #8
 801420c:	e7c7      	b.n	801419e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 801420e:	4461      	add	r1, ip
 8014210:	b209      	sxth	r1, r1
 8014212:	4571      	cmp	r1, lr
 8014214:	dc38      	bgt.n	8014288 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8014216:	eba2 020c 	sub.w	r2, r2, ip
 801421a:	b212      	sxth	r2, r2
 801421c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8014220:	2a00      	cmp	r2, #0
 8014222:	dcee      	bgt.n	8014202 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8014224:	b00f      	add	sp, #60	; 0x3c
 8014226:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801422a:	45c8      	cmp	r8, r9
 801422c:	db2c      	blt.n	8014288 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801422e:	88f3      	ldrh	r3, [r6, #6]
 8014230:	4499      	add	r9, r3
 8014232:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8014236:	4498      	add	r8, r3
 8014238:	fa0f f989 	sxth.w	r9, r9
 801423c:	fa0f f888 	sxth.w	r8, r8
 8014240:	45c1      	cmp	r9, r8
 8014242:	db21      	blt.n	8014288 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8014244:	88b3      	ldrh	r3, [r6, #4]
 8014246:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801424a:	fa1f f28c 	uxth.w	r2, ip
 801424e:	4413      	add	r3, r2
 8014250:	b29b      	uxth	r3, r3
 8014252:	45e6      	cmp	lr, ip
 8014254:	fa1f f88e 	uxth.w	r8, lr
 8014258:	fa0f f983 	sxth.w	r9, r3
 801425c:	db0a      	blt.n	8014274 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 801425e:	eba3 0308 	sub.w	r3, r3, r8
 8014262:	1ac9      	subs	r1, r1, r3
 8014264:	b209      	sxth	r1, r1
 8014266:	2900      	cmp	r1, #0
 8014268:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 801426c:	ddda      	ble.n	8014224 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801426e:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8014272:	e7c6      	b.n	8014202 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8014274:	4441      	add	r1, r8
 8014276:	b209      	sxth	r1, r1
 8014278:	4549      	cmp	r1, r9
 801427a:	dc05      	bgt.n	8014288 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801427c:	eba2 0208 	sub.w	r2, r2, r8
 8014280:	b212      	sxth	r2, r2
 8014282:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8014286:	e7cb      	b.n	8014220 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8014288:	4607      	mov	r7, r0
 801428a:	e7bb      	b.n	8014204 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801428c:	2d00      	cmp	r5, #0
 801428e:	d181      	bne.n	8014194 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8014290:	2f00      	cmp	r7, #0
 8014292:	f000 81dd 	beq.w	8014650 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8014296:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 801429a:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 801429e:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 80142a2:	b2b3      	uxth	r3, r6
 80142a4:	9305      	str	r3, [sp, #20]
 80142a6:	9a05      	ldr	r2, [sp, #20]
 80142a8:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 80142ac:	4413      	add	r3, r2
 80142ae:	b2ba      	uxth	r2, r7
 80142b0:	4492      	add	sl, r2
 80142b2:	b29b      	uxth	r3, r3
 80142b4:	fa1f fa8a 	uxth.w	sl, sl
 80142b8:	fa0f f883 	sxth.w	r8, r3
 80142bc:	fa0f f98a 	sxth.w	r9, sl
 80142c0:	e9cd 2307 	strd	r2, r3, [sp, #28]
 80142c4:	9b04      	ldr	r3, [sp, #16]
 80142c6:	2b00      	cmp	r3, #0
 80142c8:	d052      	beq.n	8014370 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 80142ca:	9903      	ldr	r1, [sp, #12]
 80142cc:	4620      	mov	r0, r4
 80142ce:	f7ff fcb8 	bl	8013c42 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80142d2:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 80142d6:	b1c0      	cbz	r0, 801430a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80142d8:	f9b4 e000 	ldrsh.w	lr, [r4]
 80142dc:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80142e0:	4576      	cmp	r6, lr
 80142e2:	dc22      	bgt.n	801432a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 80142e4:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 80142e8:	44f4      	add	ip, lr
 80142ea:	fa0f fc8c 	sxth.w	ip, ip
 80142ee:	45e0      	cmp	r8, ip
 80142f0:	db1b      	blt.n	801432a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 80142f2:	428f      	cmp	r7, r1
 80142f4:	fa1f fc81 	uxth.w	ip, r1
 80142f8:	88e1      	ldrh	r1, [r4, #6]
 80142fa:	dc0d      	bgt.n	8014318 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 80142fc:	ebaa 0c0c 	sub.w	ip, sl, ip
 8014300:	eba1 010c 	sub.w	r1, r1, ip
 8014304:	f8a4 9002 	strh.w	r9, [r4, #2]
 8014308:	80e1      	strh	r1, [r4, #6]
 801430a:	4628      	mov	r0, r5
 801430c:	9904      	ldr	r1, [sp, #16]
 801430e:	3901      	subs	r1, #1
 8014310:	9104      	str	r1, [sp, #16]
 8014312:	3c08      	subs	r4, #8
 8014314:	4605      	mov	r5, r0
 8014316:	e7d3      	b.n	80142c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8014318:	4461      	add	r1, ip
 801431a:	b209      	sxth	r1, r1
 801431c:	4549      	cmp	r1, r9
 801431e:	dcf5      	bgt.n	801430c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8014320:	eba2 0c0c 	sub.w	ip, r2, ip
 8014324:	f8a4 c006 	strh.w	ip, [r4, #6]
 8014328:	e7ef      	b.n	801430a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 801432a:	428f      	cmp	r7, r1
 801432c:	dcee      	bgt.n	801430c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801432e:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8014332:	4461      	add	r1, ip
 8014334:	b209      	sxth	r1, r1
 8014336:	4589      	cmp	r9, r1
 8014338:	dbe8      	blt.n	801430c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801433a:	4576      	cmp	r6, lr
 801433c:	fa1f fc8e 	uxth.w	ip, lr
 8014340:	88a1      	ldrh	r1, [r4, #4]
 8014342:	dc07      	bgt.n	8014354 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8014344:	eba3 0c0c 	sub.w	ip, r3, ip
 8014348:	eba1 010c 	sub.w	r1, r1, ip
 801434c:	f8a4 8000 	strh.w	r8, [r4]
 8014350:	80a1      	strh	r1, [r4, #4]
 8014352:	e7da      	b.n	801430a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8014354:	4461      	add	r1, ip
 8014356:	b209      	sxth	r1, r1
 8014358:	4588      	cmp	r8, r1
 801435a:	dbd7      	blt.n	801430c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801435c:	9905      	ldr	r1, [sp, #20]
 801435e:	eba1 0c0c 	sub.w	ip, r1, ip
 8014362:	f8a4 c004 	strh.w	ip, [r4, #4]
 8014366:	e7d0      	b.n	801430a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8014368:	200137b2 	.word	0x200137b2
 801436c:	200137b0 	.word	0x200137b0
 8014370:	2d00      	cmp	r5, #0
 8014372:	f000 816d 	beq.w	8014650 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8014376:	9b06      	ldr	r3, [sp, #24]
 8014378:	445b      	add	r3, fp
 801437a:	461c      	mov	r4, r3
 801437c:	9b02      	ldr	r3, [sp, #8]
 801437e:	3301      	adds	r3, #1
 8014380:	f000 8166 	beq.w	8014650 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8014384:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8014388:	4629      	mov	r1, r5
 801438a:	9803      	ldr	r0, [sp, #12]
 801438c:	f7ff fccc 	bl	8013d28 <_ZNK8touchgfx4Rect8includesERKS0_>
 8014390:	b120      	cbz	r0, 801439c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8014392:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8014396:	9801      	ldr	r0, [sp, #4]
 8014398:	f7ff feb0 	bl	80140fc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801439c:	9903      	ldr	r1, [sp, #12]
 801439e:	4628      	mov	r0, r5
 80143a0:	f7ff fc4f 	bl	8013c42 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80143a4:	2800      	cmp	r0, #0
 80143a6:	f000 809c 	beq.w	80144e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80143aa:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 80143ae:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80143b2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 80143b6:	9309      	str	r3, [sp, #36]	; 0x24
 80143b8:	fa1f f189 	uxth.w	r1, r9
 80143bc:	eb01 0c03 	add.w	ip, r1, r3
 80143c0:	fa1f fa8c 	uxth.w	sl, ip
 80143c4:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 80143c8:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 80143cc:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 80143d0:	b283      	uxth	r3, r0
 80143d2:	eb03 050c 	add.w	r5, r3, ip
 80143d6:	b2ad      	uxth	r5, r5
 80143d8:	9505      	str	r5, [sp, #20]
 80143da:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 80143de:	9504      	str	r5, [sp, #16]
 80143e0:	4548      	cmp	r0, r9
 80143e2:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 80143e6:	f340 8099 	ble.w	801451c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 80143ea:	1a5b      	subs	r3, r3, r1
 80143ec:	b29b      	uxth	r3, r3
 80143ee:	4596      	cmp	lr, r2
 80143f0:	fa0f f08a 	sxth.w	r0, sl
 80143f4:	b21e      	sxth	r6, r3
 80143f6:	dd2e      	ble.n	8014456 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 80143f8:	9f02      	ldr	r7, [sp, #8]
 80143fa:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 80143fe:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8014402:	9f04      	ldr	r7, [sp, #16]
 8014404:	1a3f      	subs	r7, r7, r0
 8014406:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 801440a:	fa1f fe8e 	uxth.w	lr, lr
 801440e:	b292      	uxth	r2, r2
 8014410:	ebae 0102 	sub.w	r1, lr, r2
 8014414:	44a6      	add	lr, r4
 8014416:	4402      	add	r2, r0
 8014418:	b289      	uxth	r1, r1
 801441a:	fa0f fe8e 	sxth.w	lr, lr
 801441e:	b212      	sxth	r2, r2
 8014420:	b20d      	sxth	r5, r1
 8014422:	ebae 0202 	sub.w	r2, lr, r2
 8014426:	436f      	muls	r7, r5
 8014428:	4372      	muls	r2, r6
 801442a:	4297      	cmp	r7, r2
 801442c:	db09      	blt.n	8014442 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 801442e:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 8014432:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 8014436:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801443a:	449c      	add	ip, r3
 801443c:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8014440:	e686      	b.n	8014150 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014442:	4421      	add	r1, r4
 8014444:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8014448:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 801444c:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8014450:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8014454:	e67c      	b.n	8014150 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014456:	9f04      	ldr	r7, [sp, #16]
 8014458:	42b8      	cmp	r0, r7
 801445a:	da27      	bge.n	80144ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 801445c:	9902      	ldr	r1, [sp, #8]
 801445e:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8014462:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8014466:	eb05 010e 	add.w	r1, r5, lr
 801446a:	fa1f f881 	uxth.w	r8, r1
 801446e:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8014472:	4411      	add	r1, r2
 8014474:	eba1 0108 	sub.w	r1, r1, r8
 8014478:	b289      	uxth	r1, r1
 801447a:	fa0f f988 	sxth.w	r9, r8
 801447e:	eba2 020e 	sub.w	r2, r2, lr
 8014482:	fa0f f881 	sxth.w	r8, r1
 8014486:	1a3f      	subs	r7, r7, r0
 8014488:	4372      	muls	r2, r6
 801448a:	fb08 f707 	mul.w	r7, r8, r7
 801448e:	42ba      	cmp	r2, r7
 8014490:	dc06      	bgt.n	80144a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8014492:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8014496:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 801449a:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 801449e:	e7ca      	b.n	8014436 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 80144a0:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 80144a4:	4429      	add	r1, r5
 80144a6:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80144aa:	e651      	b.n	8014150 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80144ac:	9805      	ldr	r0, [sp, #20]
 80144ae:	ebaa 0000 	sub.w	r0, sl, r0
 80144b2:	b280      	uxth	r0, r0
 80144b4:	2d06      	cmp	r5, #6
 80144b6:	fa0f fe80 	sxth.w	lr, r0
 80144ba:	d817      	bhi.n	80144ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 80144bc:	9b04      	ldr	r3, [sp, #16]
 80144be:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 80144c2:	1c6b      	adds	r3, r5, #1
 80144c4:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 80144c8:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 80144cc:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 80144d0:	9b01      	ldr	r3, [sp, #4]
 80144d2:	9801      	ldr	r0, [sp, #4]
 80144d4:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80144d8:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 80144dc:	805a      	strh	r2, [r3, #2]
 80144de:	809e      	strh	r6, [r3, #4]
 80144e0:	80d9      	strh	r1, [r3, #6]
 80144e2:	9b02      	ldr	r3, [sp, #8]
 80144e4:	3b01      	subs	r3, #1
 80144e6:	9302      	str	r3, [sp, #8]
 80144e8:	3c08      	subs	r4, #8
 80144ea:	e747      	b.n	801437c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 80144ec:	9a02      	ldr	r2, [sp, #8]
 80144ee:	45b6      	cmp	lr, r6
 80144f0:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80144f4:	db0d      	blt.n	8014512 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 80144f6:	449c      	add	ip, r3
 80144f8:	fa1f fc8c 	uxth.w	ip, ip
 80144fc:	445a      	add	r2, fp
 80144fe:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8014502:	448c      	add	ip, r1
 8014504:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8014508:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 801450c:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8014510:	e61e      	b.n	8014150 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014512:	445a      	add	r2, fp
 8014514:	4484      	add	ip, r0
 8014516:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 801451a:	e78f      	b.n	801443c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801451c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8014520:	fa1f f18e 	uxth.w	r1, lr
 8014524:	eb01 0806 	add.w	r8, r1, r6
 8014528:	b293      	uxth	r3, r2
 801452a:	fa1f f888 	uxth.w	r8, r8
 801452e:	9306      	str	r3, [sp, #24]
 8014530:	fa0f f388 	sxth.w	r3, r8
 8014534:	9307      	str	r3, [sp, #28]
 8014536:	9f06      	ldr	r7, [sp, #24]
 8014538:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 801453c:	443b      	add	r3, r7
 801453e:	b29b      	uxth	r3, r3
 8014540:	4596      	cmp	lr, r2
 8014542:	9308      	str	r3, [sp, #32]
 8014544:	da24      	bge.n	8014590 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8014546:	9905      	ldr	r1, [sp, #20]
 8014548:	eba3 0308 	sub.w	r3, r3, r8
 801454c:	ebaa 0401 	sub.w	r4, sl, r1
 8014550:	b2a4      	uxth	r4, r4
 8014552:	b29b      	uxth	r3, r3
 8014554:	b225      	sxth	r5, r4
 8014556:	b219      	sxth	r1, r3
 8014558:	eba2 020e 	sub.w	r2, r2, lr
 801455c:	eba9 0000 	sub.w	r0, r9, r0
 8014560:	436a      	muls	r2, r5
 8014562:	4348      	muls	r0, r1
 8014564:	4282      	cmp	r2, r0
 8014566:	9a02      	ldr	r2, [sp, #8]
 8014568:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801456c:	445a      	add	r2, fp
 801456e:	dc06      	bgt.n	801457e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8014570:	9b07      	ldr	r3, [sp, #28]
 8014572:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8014576:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 801457a:	44a4      	add	ip, r4
 801457c:	e75e      	b.n	801443c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801457e:	9904      	ldr	r1, [sp, #16]
 8014580:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8014584:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8014588:	4433      	add	r3, r6
 801458a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801458e:	e5df      	b.n	8014150 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014590:	9f06      	ldr	r7, [sp, #24]
 8014592:	9b04      	ldr	r3, [sp, #16]
 8014594:	1bc9      	subs	r1, r1, r7
 8014596:	fa0f f78a 	sxth.w	r7, sl
 801459a:	b289      	uxth	r1, r1
 801459c:	429f      	cmp	r7, r3
 801459e:	fa0f fe81 	sxth.w	lr, r1
 80145a2:	dd23      	ble.n	80145ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 80145a4:	9a05      	ldr	r2, [sp, #20]
 80145a6:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80145aa:	9d07      	ldr	r5, [sp, #28]
 80145ac:	ebaa 0202 	sub.w	r2, sl, r2
 80145b0:	b292      	uxth	r2, r2
 80145b2:	eba5 0a03 	sub.w	sl, r5, r3
 80145b6:	b214      	sxth	r4, r2
 80145b8:	eba9 0000 	sub.w	r0, r9, r0
 80145bc:	9b02      	ldr	r3, [sp, #8]
 80145be:	fb0e f000 	mul.w	r0, lr, r0
 80145c2:	fb04 fa0a 	mul.w	sl, r4, sl
 80145c6:	00db      	lsls	r3, r3, #3
 80145c8:	4550      	cmp	r0, sl
 80145ca:	445b      	add	r3, fp
 80145cc:	db03      	blt.n	80145d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 80145ce:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 80145d2:	4494      	add	ip, r2
 80145d4:	e732      	b.n	801443c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80145d6:	9a04      	ldr	r2, [sp, #16]
 80145d8:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 80145dc:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 80145e0:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 80145e4:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80145e8:	4431      	add	r1, r6
 80145ea:	e75c      	b.n	80144a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 80145ec:	9b08      	ldr	r3, [sp, #32]
 80145ee:	eba3 0308 	sub.w	r3, r3, r8
 80145f2:	b29b      	uxth	r3, r3
 80145f4:	2d06      	cmp	r5, #6
 80145f6:	b218      	sxth	r0, r3
 80145f8:	d813      	bhi.n	8014622 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 80145fa:	9b07      	ldr	r3, [sp, #28]
 80145fc:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8014600:	1c6b      	adds	r3, r5, #1
 8014602:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 8014606:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 801460a:	9b01      	ldr	r3, [sp, #4]
 801460c:	9901      	ldr	r1, [sp, #4]
 801460e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8014612:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8014616:	805a      	strh	r2, [r3, #2]
 8014618:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801461a:	809a      	strh	r2, [r3, #4]
 801461c:	f8a3 e006 	strh.w	lr, [r3, #6]
 8014620:	e75f      	b.n	80144e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8014622:	9c02      	ldr	r4, [sp, #8]
 8014624:	4570      	cmp	r0, lr
 8014626:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 801462a:	db0d      	blt.n	8014648 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 801462c:	4431      	add	r1, r6
 801462e:	9b06      	ldr	r3, [sp, #24]
 8014630:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8014634:	b289      	uxth	r1, r1
 8014636:	445c      	add	r4, fp
 8014638:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801463c:	4419      	add	r1, r3
 801463e:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 8014642:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 8014646:	e583      	b.n	8014150 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014648:	445c      	add	r4, fp
 801464a:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 801464e:	e79b      	b.n	8014588 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8014650:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8014654:	1e65      	subs	r5, r4, #1
 8014656:	b2ad      	uxth	r5, r5
 8014658:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 801465c:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8014660:	42b5      	cmp	r5, r6
 8014662:	d044      	beq.n	80146ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8014664:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8014668:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 801466c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8014670:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8014674:	4282      	cmp	r2, r0
 8014676:	d11f      	bne.n	80146b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8014678:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 801467c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8014680:	459c      	cmp	ip, r3
 8014682:	d119      	bne.n	80146b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8014684:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8014688:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801468c:	19d8      	adds	r0, r3, r7
 801468e:	b200      	sxth	r0, r0
 8014690:	4288      	cmp	r0, r1
 8014692:	d109      	bne.n	80146a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8014694:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8014698:	4413      	add	r3, r2
 801469a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801469e:	4629      	mov	r1, r5
 80146a0:	9801      	ldr	r0, [sp, #4]
 80146a2:	f7ff fd2b 	bl	80140fc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80146a6:	e003      	b.n	80146b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80146a8:	4411      	add	r1, r2
 80146aa:	b209      	sxth	r1, r1
 80146ac:	42b9      	cmp	r1, r7
 80146ae:	d0f3      	beq.n	8014698 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 80146b0:	3d01      	subs	r5, #1
 80146b2:	b2ad      	uxth	r5, r5
 80146b4:	3c08      	subs	r4, #8
 80146b6:	e7d3      	b.n	8014660 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 80146b8:	42b9      	cmp	r1, r7
 80146ba:	d1f9      	bne.n	80146b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80146bc:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 80146c0:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80146c4:	4299      	cmp	r1, r3
 80146c6:	d1f3      	bne.n	80146b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80146c8:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 80146cc:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80146d0:	181f      	adds	r7, r3, r0
 80146d2:	b23f      	sxth	r7, r7
 80146d4:	42ba      	cmp	r2, r7
 80146d6:	d105      	bne.n	80146e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 80146d8:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 80146dc:	440b      	add	r3, r1
 80146de:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80146e2:	e7dc      	b.n	801469e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 80146e4:	440a      	add	r2, r1
 80146e6:	b212      	sxth	r2, r2
 80146e8:	4290      	cmp	r0, r2
 80146ea:	d1e1      	bne.n	80146b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80146ec:	e7f6      	b.n	80146dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 80146ee:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 80146f2:	2e07      	cmp	r6, #7
 80146f4:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 80146f8:	d812      	bhi.n	8014720 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 80146fa:	1c75      	adds	r5, r6, #1
 80146fc:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8014700:	9d01      	ldr	r5, [sp, #4]
 8014702:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8014706:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 801470a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801470e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8014712:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8014716:	442c      	add	r4, r5
 8014718:	8061      	strh	r1, [r4, #2]
 801471a:	80a2      	strh	r2, [r4, #4]
 801471c:	80e3      	strh	r3, [r4, #6]
 801471e:	e581      	b.n	8014224 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8014720:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8014724:	3e01      	subs	r6, #1
 8014726:	445c      	add	r4, fp
 8014728:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 801472c:	f04f 37ff 	mov.w	r7, #4294967295
 8014730:	2500      	movs	r5, #0
 8014732:	9305      	str	r3, [sp, #20]
 8014734:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8014738:	9302      	str	r3, [sp, #8]
 801473a:	1e72      	subs	r2, r6, #1
 801473c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8014740:	9304      	str	r3, [sp, #16]
 8014742:	4691      	mov	r9, r2
 8014744:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 8014748:	f1b9 3fff 	cmp.w	r9, #4294967295
 801474c:	bf14      	ite	ne
 801474e:	9905      	ldrne	r1, [sp, #20]
 8014750:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8014754:	6818      	ldr	r0, [r3, #0]
 8014756:	9207      	str	r2, [sp, #28]
 8014758:	bf18      	it	ne
 801475a:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 801475e:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8014762:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8014766:	f8be 8004 	ldrh.w	r8, [lr, #4]
 801476a:	9306      	str	r3, [sp, #24]
 801476c:	fb18 f801 	smulbb	r8, r8, r1
 8014770:	6859      	ldr	r1, [r3, #4]
 8014772:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8014776:	4671      	mov	r1, lr
 8014778:	a80c      	add	r0, sp, #48	; 0x30
 801477a:	f7ff fafb 	bl	8013d74 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801477e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8014782:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8014786:	9b04      	ldr	r3, [sp, #16]
 8014788:	9a02      	ldr	r2, [sp, #8]
 801478a:	fb10 f001 	smulbb	r0, r0, r1
 801478e:	fb02 8803 	mla	r8, r2, r3, r8
 8014792:	eba0 0108 	sub.w	r1, r0, r8
 8014796:	f04f 0c08 	mov.w	ip, #8
 801479a:	fb90 f0fc 	sdiv	r0, r0, ip
 801479e:	4288      	cmp	r0, r1
 80147a0:	dc20      	bgt.n	80147e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 80147a2:	4551      	cmp	r1, sl
 80147a4:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 80147a8:	da03      	bge.n	80147b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 80147aa:	b1d9      	cbz	r1, 80147e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 80147ac:	468a      	mov	sl, r1
 80147ae:	464f      	mov	r7, r9
 80147b0:	4635      	mov	r5, r6
 80147b2:	f109 39ff 	add.w	r9, r9, #4294967295
 80147b6:	f119 0f02 	cmn.w	r9, #2
 80147ba:	d1c5      	bne.n	8014748 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 80147bc:	4616      	mov	r6, r2
 80147be:	3201      	adds	r2, #1
 80147c0:	f1a4 0408 	sub.w	r4, r4, #8
 80147c4:	d1b6      	bne.n	8014734 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 80147c6:	9b01      	ldr	r3, [sp, #4]
 80147c8:	b2ac      	uxth	r4, r5
 80147ca:	00ed      	lsls	r5, r5, #3
 80147cc:	1958      	adds	r0, r3, r5
 80147ce:	1c7b      	adds	r3, r7, #1
 80147d0:	d10b      	bne.n	80147ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 80147d2:	4601      	mov	r1, r0
 80147d4:	9803      	ldr	r0, [sp, #12]
 80147d6:	f7ff facd 	bl	8013d74 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80147da:	4621      	mov	r1, r4
 80147dc:	9801      	ldr	r0, [sp, #4]
 80147de:	f7ff fc8d 	bl	80140fc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80147e2:	e4b5      	b.n	8014150 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80147e4:	464f      	mov	r7, r9
 80147e6:	4635      	mov	r5, r6
 80147e8:	e7ed      	b.n	80147c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 80147ea:	9b01      	ldr	r3, [sp, #4]
 80147ec:	00ff      	lsls	r7, r7, #3
 80147ee:	19d9      	adds	r1, r3, r7
 80147f0:	f7ff fac0 	bl	8013d74 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80147f4:	9b03      	ldr	r3, [sp, #12]
 80147f6:	cb03      	ldmia	r3!, {r0, r1}
 80147f8:	445f      	add	r7, fp
 80147fa:	445d      	add	r5, fp
 80147fc:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8014800:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8014804:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8014808:	9b03      	ldr	r3, [sp, #12]
 801480a:	6869      	ldr	r1, [r5, #4]
 801480c:	c303      	stmia	r3!, {r0, r1}
 801480e:	e7e4      	b.n	80147da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08014810 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8014810:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014814:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8014818:	b09b      	sub	sp, #108	; 0x6c
 801481a:	4604      	mov	r4, r0
 801481c:	4630      	mov	r0, r6
 801481e:	f7fa fa20 	bl	800ec62 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014822:	4605      	mov	r5, r0
 8014824:	b948      	cbnz	r0, 801483a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8014826:	6823      	ldr	r3, [r4, #0]
 8014828:	e896 0006 	ldmia.w	r6, {r1, r2}
 801482c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801482e:	4620      	mov	r0, r4
 8014830:	4798      	blx	r3
 8014832:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8014836:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 801483a:	4bc6      	ldr	r3, [pc, #792]	; (8014b54 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 801483c:	681b      	ldr	r3, [r3, #0]
 801483e:	2b00      	cmp	r3, #0
 8014840:	d03f      	beq.n	80148c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8014842:	4dc5      	ldr	r5, [pc, #788]	; (8014b58 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8014844:	4628      	mov	r0, r5
 8014846:	f7fa fa0c 	bl	800ec62 <_ZNK8touchgfx4Rect7isEmptyEv>
 801484a:	4606      	mov	r6, r0
 801484c:	2800      	cmp	r0, #0
 801484e:	d138      	bne.n	80148c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8014850:	4628      	mov	r0, r5
 8014852:	f7ff f907 	bl	8013a64 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8014856:	6823      	ldr	r3, [r4, #0]
 8014858:	6829      	ldr	r1, [r5, #0]
 801485a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801485c:	686a      	ldr	r2, [r5, #4]
 801485e:	4620      	mov	r0, r4
 8014860:	4798      	blx	r3
 8014862:	802e      	strh	r6, [r5, #0]
 8014864:	806e      	strh	r6, [r5, #2]
 8014866:	80ae      	strh	r6, [r5, #4]
 8014868:	80ee      	strh	r6, [r5, #6]
 801486a:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 801486e:	4dbb      	ldr	r5, [pc, #748]	; (8014b5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8014870:	4640      	mov	r0, r8
 8014872:	f7ff fbeb 	bl	801404c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8014876:	882e      	ldrh	r6, [r5, #0]
 8014878:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 801487c:	4633      	mov	r3, r6
 801487e:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8014882:	42bb      	cmp	r3, r7
 8014884:	d224      	bcs.n	80148d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8014886:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 801488a:	2907      	cmp	r1, #7
 801488c:	d816      	bhi.n	80148bc <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 801488e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8014892:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8014896:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 801489a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 801489e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 80148a2:	1c4a      	adds	r2, r1, #1
 80148a4:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 80148a8:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 80148ac:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 80148b0:	f8a2 a002 	strh.w	sl, [r2, #2]
 80148b4:	f8a2 e004 	strh.w	lr, [r2, #4]
 80148b8:	f8a2 c006 	strh.w	ip, [r2, #6]
 80148bc:	3301      	adds	r3, #1
 80148be:	b29b      	uxth	r3, r3
 80148c0:	e7df      	b.n	8014882 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 80148c2:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80148c6:	2b00      	cmp	r3, #0
 80148c8:	d1cf      	bne.n	801486a <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 80148ca:	b01b      	add	sp, #108	; 0x6c
 80148cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80148d0:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 80148d4:	42b3      	cmp	r3, r6
 80148d6:	d90c      	bls.n	80148f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 80148d8:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 80148dc:	6822      	ldr	r2, [r4, #0]
 80148de:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 80148e2:	6c17      	ldr	r7, [r2, #64]	; 0x40
 80148e4:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 80148e8:	4620      	mov	r0, r4
 80148ea:	3601      	adds	r6, #1
 80148ec:	47b8      	blx	r7
 80148ee:	b2b6      	uxth	r6, r6
 80148f0:	e7ee      	b.n	80148d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 80148f2:	4a9b      	ldr	r2, [pc, #620]	; (8014b60 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80148f4:	6813      	ldr	r3, [r2, #0]
 80148f6:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 80148fa:	2b01      	cmp	r3, #1
 80148fc:	4691      	mov	r9, r2
 80148fe:	f040 80e2 	bne.w	8014ac6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 8014902:	8829      	ldrh	r1, [r5, #0]
 8014904:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8014908:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 801490c:	33ae      	adds	r3, #174	; 0xae
 801490e:	2600      	movs	r6, #0
 8014910:	428f      	cmp	r7, r1
 8014912:	f103 0308 	add.w	r3, r3, #8
 8014916:	dd0a      	ble.n	801492e <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8014918:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 801491c:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8014920:	4402      	add	r2, r0
 8014922:	b212      	sxth	r2, r2
 8014924:	4296      	cmp	r6, r2
 8014926:	bfb8      	it	lt
 8014928:	4616      	movlt	r6, r2
 801492a:	3101      	adds	r1, #1
 801492c:	e7f0      	b.n	8014910 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 801492e:	4b8d      	ldr	r3, [pc, #564]	; (8014b64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8014930:	f8df 922c 	ldr.w	r9, [pc, #556]	; 8014b60 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 8014934:	881b      	ldrh	r3, [r3, #0]
 8014936:	2b0f      	cmp	r3, #15
 8014938:	bf88      	it	hi
 801493a:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 801493e:	f04f 0300 	mov.w	r3, #0
 8014942:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8014946:	bf98      	it	ls
 8014948:	f04f 0b01 	movls.w	fp, #1
 801494c:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8014950:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8014954:	4b82      	ldr	r3, [pc, #520]	; (8014b60 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8014956:	4438      	add	r0, r7
 8014958:	b207      	sxth	r7, r0
 801495a:	6818      	ldr	r0, [r3, #0]
 801495c:	42b7      	cmp	r7, r6
 801495e:	6803      	ldr	r3, [r0, #0]
 8014960:	f280 8083 	bge.w	8014a6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8014964:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8014968:	4798      	blx	r3
 801496a:	eb07 030b 	add.w	r3, r7, fp
 801496e:	4298      	cmp	r0, r3
 8014970:	da07      	bge.n	8014982 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8014972:	42b0      	cmp	r0, r6
 8014974:	da05      	bge.n	8014982 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8014976:	4287      	cmp	r7, r0
 8014978:	dd6c      	ble.n	8014a54 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801497a:	2f00      	cmp	r7, #0
 801497c:	dd6a      	ble.n	8014a54 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801497e:	4630      	mov	r0, r6
 8014980:	e004      	b.n	801498c <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8014982:	4287      	cmp	r7, r0
 8014984:	dcfb      	bgt.n	801497e <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8014986:	42b0      	cmp	r0, r6
 8014988:	bfa8      	it	ge
 801498a:	4630      	movge	r0, r6
 801498c:	4b76      	ldr	r3, [pc, #472]	; (8014b68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 801498e:	f8ad 7016 	strh.w	r7, [sp, #22]
 8014992:	1bc0      	subs	r0, r0, r7
 8014994:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014998:	882f      	ldrh	r7, [r5, #0]
 801499a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801499e:	2200      	movs	r2, #0
 80149a0:	f8ad 2014 	strh.w	r2, [sp, #20]
 80149a4:	f8ad 001a 	strh.w	r0, [sp, #26]
 80149a8:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80149ac:	42bb      	cmp	r3, r7
 80149ae:	d9cd      	bls.n	801494c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 80149b0:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 80149b4:	ab07      	add	r3, sp, #28
 80149b6:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80149ba:	6851      	ldr	r1, [r2, #4]
 80149bc:	c303      	stmia	r3!, {r0, r1}
 80149be:	a905      	add	r1, sp, #20
 80149c0:	a807      	add	r0, sp, #28
 80149c2:	f7ff f93e 	bl	8013c42 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80149c6:	2800      	cmp	r0, #0
 80149c8:	d04c      	beq.n	8014a64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 80149ca:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 80149ce:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 80149d2:	f8bd a020 	ldrh.w	sl, [sp, #32]
 80149d6:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 80149da:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80149de:	9302      	str	r3, [sp, #8]
 80149e0:	4686      	mov	lr, r0
 80149e2:	4290      	cmp	r0, r2
 80149e4:	4450      	add	r0, sl
 80149e6:	f8bd a018 	ldrh.w	sl, [sp, #24]
 80149ea:	bfb8      	it	lt
 80149ec:	4696      	movlt	lr, r2
 80149ee:	4452      	add	r2, sl
 80149f0:	4299      	cmp	r1, r3
 80149f2:	b280      	uxth	r0, r0
 80149f4:	b292      	uxth	r2, r2
 80149f6:	468c      	mov	ip, r1
 80149f8:	fa0f fa82 	sxth.w	sl, r2
 80149fc:	bfb8      	it	lt
 80149fe:	469c      	movlt	ip, r3
 8014a00:	b203      	sxth	r3, r0
 8014a02:	4553      	cmp	r3, sl
 8014a04:	bfb8      	it	lt
 8014a06:	4602      	movlt	r2, r0
 8014a08:	eba2 020e 	sub.w	r2, r2, lr
 8014a0c:	f8ad 2020 	strh.w	r2, [sp, #32]
 8014a10:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8014a14:	9b02      	ldr	r3, [sp, #8]
 8014a16:	f8ad e01c 	strh.w	lr, [sp, #28]
 8014a1a:	4411      	add	r1, r2
 8014a1c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8014a20:	f8ad c01e 	strh.w	ip, [sp, #30]
 8014a24:	4413      	add	r3, r2
 8014a26:	b289      	uxth	r1, r1
 8014a28:	b29b      	uxth	r3, r3
 8014a2a:	b208      	sxth	r0, r1
 8014a2c:	b21a      	sxth	r2, r3
 8014a2e:	4290      	cmp	r0, r2
 8014a30:	bfb8      	it	lt
 8014a32:	460b      	movlt	r3, r1
 8014a34:	eba3 030c 	sub.w	r3, r3, ip
 8014a38:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8014a3c:	a807      	add	r0, sp, #28
 8014a3e:	f7fa f910 	bl	800ec62 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014a42:	b920      	cbnz	r0, 8014a4e <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8014a44:	6823      	ldr	r3, [r4, #0]
 8014a46:	a907      	add	r1, sp, #28
 8014a48:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8014a4a:	4620      	mov	r0, r4
 8014a4c:	4798      	blx	r3
 8014a4e:	3701      	adds	r7, #1
 8014a50:	b2bf      	uxth	r7, r7
 8014a52:	e7a9      	b.n	80149a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8014a54:	f8d9 0000 	ldr.w	r0, [r9]
 8014a58:	6803      	ldr	r3, [r0, #0]
 8014a5a:	2101      	movs	r1, #1
 8014a5c:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8014a60:	4798      	blx	r3
 8014a62:	e773      	b.n	801494c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8014a64:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8014a68:	e7e8      	b.n	8014a3c <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 8014a6a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8014a6c:	4798      	blx	r3
 8014a6e:	4b3f      	ldr	r3, [pc, #252]	; (8014b6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8014a70:	781b      	ldrb	r3, [r3, #0]
 8014a72:	2b00      	cmp	r3, #0
 8014a74:	f43f af29 	beq.w	80148ca <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8014a78:	2300      	movs	r3, #0
 8014a7a:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 8014a7e:	882b      	ldrh	r3, [r5, #0]
 8014a80:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8014a84:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8014a88:	42ab      	cmp	r3, r5
 8014a8a:	f4bf af1e 	bcs.w	80148ca <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8014a8e:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8014a92:	2907      	cmp	r1, #7
 8014a94:	d814      	bhi.n	8014ac0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8014a96:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 8014a9a:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 8014a9e:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8014aa2:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8014aa6:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 8014aaa:	1c4a      	adds	r2, r1, #1
 8014aac:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8014ab0:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8014ab4:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8014ab8:	f8a2 c002 	strh.w	ip, [r2, #2]
 8014abc:	8097      	strh	r7, [r2, #4]
 8014abe:	80d6      	strh	r6, [r2, #6]
 8014ac0:	3301      	adds	r3, #1
 8014ac2:	b29b      	uxth	r3, r3
 8014ac4:	e7e0      	b.n	8014a88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8014ac6:	2b02      	cmp	r3, #2
 8014ac8:	f040 8133 	bne.w	8014d32 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 8014acc:	4b28      	ldr	r3, [pc, #160]	; (8014b70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8014ace:	781b      	ldrb	r3, [r3, #0]
 8014ad0:	2b01      	cmp	r3, #1
 8014ad2:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 8014ad6:	f000 8098 	beq.w	8014c0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8014ada:	882a      	ldrh	r2, [r5, #0]
 8014adc:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8014ae0:	3201      	adds	r2, #1
 8014ae2:	b292      	uxth	r2, r2
 8014ae4:	2900      	cmp	r1, #0
 8014ae6:	d0c2      	beq.n	8014a6e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8014ae8:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 8014aec:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8014af0:	441e      	add	r6, r3
 8014af2:	b236      	sxth	r6, r6
 8014af4:	4694      	mov	ip, r2
 8014af6:	f04f 0900 	mov.w	r9, #0
 8014afa:	fa1f f38c 	uxth.w	r3, ip
 8014afe:	4299      	cmp	r1, r3
 8014b00:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8014b04:	f240 80bf 	bls.w	8014c86 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8014b08:	4427      	add	r7, r4
 8014b0a:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8014b0e:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 8014b12:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 8014b16:	4283      	cmp	r3, r0
 8014b18:	f340 80a1 	ble.w	8014c5e <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 8014b1c:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 8014b20:	4406      	add	r6, r0
 8014b22:	b236      	sxth	r6, r6
 8014b24:	429e      	cmp	r6, r3
 8014b26:	bfa8      	it	ge
 8014b28:	461e      	movge	r6, r3
 8014b2a:	46e1      	mov	r9, ip
 8014b2c:	f10c 0c01 	add.w	ip, ip, #1
 8014b30:	e7e3      	b.n	8014afa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 8014b32:	d10a      	bne.n	8014b4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8014b34:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 8014b38:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 8014b3c:	4562      	cmp	r2, ip
 8014b3e:	bfb8      	it	lt
 8014b40:	4662      	movlt	r2, ip
 8014b42:	4288      	cmp	r0, r1
 8014b44:	bfb8      	it	lt
 8014b46:	461f      	movlt	r7, r3
 8014b48:	e087      	b.n	8014c5a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8014b4a:	428a      	cmp	r2, r1
 8014b4c:	bfb8      	it	lt
 8014b4e:	460a      	movlt	r2, r1
 8014b50:	e083      	b.n	8014c5a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8014b52:	bf00      	nop
 8014b54:	200137fc 	.word	0x200137fc
 8014b58:	20013808 	.word	0x20013808
 8014b5c:	20000088 	.word	0x20000088
 8014b60:	200137bc 	.word	0x200137bc
 8014b64:	200137b2 	.word	0x200137b2
 8014b68:	200137b0 	.word	0x200137b0
 8014b6c:	200137ba 	.word	0x200137ba
 8014b70:	200137b4 	.word	0x200137b4
 8014b74:	19a1      	adds	r1, r4, r6
 8014b76:	ab07      	add	r3, sp, #28
 8014b78:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8014b7c:	6849      	ldr	r1, [r1, #4]
 8014b7e:	c303      	stmia	r3!, {r0, r1}
 8014b80:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8014b84:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8014b88:	2b13      	cmp	r3, #19
 8014b8a:	bfd8      	it	le
 8014b8c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8014b90:	f8ad 201c 	strh.w	r2, [sp, #28]
 8014b94:	440b      	add	r3, r1
 8014b96:	1a9b      	subs	r3, r3, r2
 8014b98:	a807      	add	r0, sp, #28
 8014b9a:	f8ad 3020 	strh.w	r3, [sp, #32]
 8014b9e:	f7fe ff7b 	bl	8013a98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014ba2:	a807      	add	r0, sp, #28
 8014ba4:	f7fa f85d 	bl	800ec62 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014ba8:	bb78      	cbnz	r0, 8014c0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8014baa:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8014bae:	f8d9 0000 	ldr.w	r0, [r9]
 8014bb2:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8014bb6:	f8d0 e000 	ldr.w	lr, [r0]
 8014bba:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8014bbe:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8014bc2:	f1bc 0f14 	cmp.w	ip, #20
 8014bc6:	bfa8      	it	ge
 8014bc8:	f04f 0c14 	movge.w	ip, #20
 8014bcc:	fa1f fc8c 	uxth.w	ip, ip
 8014bd0:	f8cd c000 	str.w	ip, [sp]
 8014bd4:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8014bd8:	47d8      	blx	fp
 8014bda:	4683      	mov	fp, r0
 8014bdc:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8014be0:	a807      	add	r0, sp, #28
 8014be2:	f7fe ff3f 	bl	8013a64 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8014be6:	6823      	ldr	r3, [r4, #0]
 8014be8:	4426      	add	r6, r4
 8014bea:	4620      	mov	r0, r4
 8014bec:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8014bee:	a907      	add	r1, sp, #28
 8014bf0:	4798      	blx	r3
 8014bf2:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8014bf6:	eba0 000b 	sub.w	r0, r0, fp
 8014bfa:	b200      	sxth	r0, r0
 8014bfc:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8014c00:	b918      	cbnz	r0, 8014c0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8014c02:	b2b9      	uxth	r1, r7
 8014c04:	4650      	mov	r0, sl
 8014c06:	f7ff fa79 	bl	80140fc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014c0a:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 8014c0e:	f1bb 0f00 	cmp.w	fp, #0
 8014c12:	f43f af2c 	beq.w	8014a6e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8014c16:	882b      	ldrh	r3, [r5, #0]
 8014c18:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 8014c1c:	3301      	adds	r3, #1
 8014c1e:	b29b      	uxth	r3, r3
 8014c20:	2700      	movs	r7, #0
 8014c22:	b299      	uxth	r1, r3
 8014c24:	458b      	cmp	fp, r1
 8014c26:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 8014c2a:	d9a3      	bls.n	8014b74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 8014c2c:	4426      	add	r6, r4
 8014c2e:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8014c32:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 8014c36:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8014c3a:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 8014c3e:	4408      	add	r0, r1
 8014c40:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 8014c44:	4461      	add	r1, ip
 8014c46:	b200      	sxth	r0, r0
 8014c48:	b209      	sxth	r1, r1
 8014c4a:	4288      	cmp	r0, r1
 8014c4c:	f6bf af71 	bge.w	8014b32 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8014c50:	4584      	cmp	ip, r0
 8014c52:	4662      	mov	r2, ip
 8014c54:	461f      	mov	r7, r3
 8014c56:	bfb8      	it	lt
 8014c58:	4602      	movlt	r2, r0
 8014c5a:	3301      	adds	r3, #1
 8014c5c:	e7e1      	b.n	8014c22 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 8014c5e:	d10e      	bne.n	8014c7e <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8014c60:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8014c64:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8014c68:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 8014c6c:	4473      	add	r3, lr
 8014c6e:	b21b      	sxth	r3, r3
 8014c70:	429e      	cmp	r6, r3
 8014c72:	bfa8      	it	ge
 8014c74:	461e      	movge	r6, r3
 8014c76:	4287      	cmp	r7, r0
 8014c78:	bfb8      	it	lt
 8014c7a:	46e1      	movlt	r9, ip
 8014c7c:	e756      	b.n	8014b2c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8014c7e:	4286      	cmp	r6, r0
 8014c80:	bfa8      	it	ge
 8014c82:	4606      	movge	r6, r0
 8014c84:	e752      	b.n	8014b2c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8014c86:	eb0a 0007 	add.w	r0, sl, r7
 8014c8a:	4427      	add	r7, r4
 8014c8c:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8014c90:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8014c94:	f1bb 0f13 	cmp.w	fp, #19
 8014c98:	bfde      	ittt	le
 8014c9a:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 8014c9e:	445e      	addle	r6, fp
 8014ca0:	b236      	sxthle	r6, r6
 8014ca2:	f7f9 ffde 	bl	800ec62 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014ca6:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8014caa:	2800      	cmp	r0, #0
 8014cac:	f47f af1a 	bne.w	8014ae4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8014cb0:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8014cb4:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8014cb8:	482a      	ldr	r0, [pc, #168]	; (8014d64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 8014cba:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 8014cbe:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8014cc2:	6800      	ldr	r0, [r0, #0]
 8014cc4:	f8ad 101c 	strh.w	r1, [sp, #28]
 8014cc8:	1ab6      	subs	r6, r6, r2
 8014cca:	2e14      	cmp	r6, #20
 8014ccc:	f8ad 201e 	strh.w	r2, [sp, #30]
 8014cd0:	f8ad 3020 	strh.w	r3, [sp, #32]
 8014cd4:	bfa8      	it	ge
 8014cd6:	2614      	movge	r6, #20
 8014cd8:	f8d0 c000 	ldr.w	ip, [r0]
 8014cdc:	b2b6      	uxth	r6, r6
 8014cde:	fa1f fb8b 	uxth.w	fp, fp
 8014ce2:	455e      	cmp	r6, fp
 8014ce4:	bf94      	ite	ls
 8014ce6:	9600      	strls	r6, [sp, #0]
 8014ce8:	f8cd b000 	strhi.w	fp, [sp]
 8014cec:	b292      	uxth	r2, r2
 8014cee:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8014cf2:	b29b      	uxth	r3, r3
 8014cf4:	b289      	uxth	r1, r1
 8014cf6:	47b0      	blx	r6
 8014cf8:	6823      	ldr	r3, [r4, #0]
 8014cfa:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8014cfe:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8014d00:	a907      	add	r1, sp, #28
 8014d02:	4620      	mov	r0, r4
 8014d04:	4798      	blx	r3
 8014d06:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8014d0a:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 8014d0e:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8014d12:	1a5b      	subs	r3, r3, r1
 8014d14:	440a      	add	r2, r1
 8014d16:	b21b      	sxth	r3, r3
 8014d18:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 8014d1c:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8014d20:	2b00      	cmp	r3, #0
 8014d22:	f47f aeda 	bne.w	8014ada <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8014d26:	fa1f f189 	uxth.w	r1, r9
 8014d2a:	4650      	mov	r0, sl
 8014d2c:	f7ff f9e6 	bl	80140fc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014d30:	e6d3      	b.n	8014ada <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8014d32:	882e      	ldrh	r6, [r5, #0]
 8014d34:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8014d38:	42b3      	cmp	r3, r6
 8014d3a:	f67f ae98 	bls.w	8014a6e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8014d3e:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8014d42:	ab07      	add	r3, sp, #28
 8014d44:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8014d48:	6851      	ldr	r1, [r2, #4]
 8014d4a:	c303      	stmia	r3!, {r0, r1}
 8014d4c:	a807      	add	r0, sp, #28
 8014d4e:	f7f9 ff88 	bl	800ec62 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014d52:	b920      	cbnz	r0, 8014d5e <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8014d54:	6823      	ldr	r3, [r4, #0]
 8014d56:	a907      	add	r1, sp, #28
 8014d58:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8014d5a:	4620      	mov	r0, r4
 8014d5c:	4798      	blx	r3
 8014d5e:	3601      	adds	r6, #1
 8014d60:	b2b6      	uxth	r6, r6
 8014d62:	e7e7      	b.n	8014d34 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8014d64:	200137bc 	.word	0x200137bc

08014d68 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8014d68:	4b03      	ldr	r3, [pc, #12]	; (8014d78 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8014d6a:	2200      	movs	r2, #0
 8014d6c:	801a      	strh	r2, [r3, #0]
 8014d6e:	805a      	strh	r2, [r3, #2]
 8014d70:	809a      	strh	r2, [r3, #4]
 8014d72:	80da      	strh	r2, [r3, #6]
 8014d74:	4770      	bx	lr
 8014d76:	bf00      	nop
 8014d78:	20013808 	.word	0x20013808

08014d7c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8014d7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014d80:	4606      	mov	r6, r0
 8014d82:	b09d      	sub	sp, #116	; 0x74
 8014d84:	a803      	add	r0, sp, #12
 8014d86:	4614      	mov	r4, r2
 8014d88:	468a      	mov	sl, r1
 8014d8a:	461d      	mov	r5, r3
 8014d8c:	f000 feca 	bl	8015b24 <_ZN8touchgfx12TextProviderC1Ev>
 8014d90:	6833      	ldr	r3, [r6, #0]
 8014d92:	4630      	mov	r0, r6
 8014d94:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014d96:	4798      	blx	r3
 8014d98:	6833      	ldr	r3, [r6, #0]
 8014d9a:	4607      	mov	r7, r0
 8014d9c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014d9e:	4630      	mov	r0, r6
 8014da0:	4798      	blx	r3
 8014da2:	462a      	mov	r2, r5
 8014da4:	9000      	str	r0, [sp, #0]
 8014da6:	4621      	mov	r1, r4
 8014da8:	463b      	mov	r3, r7
 8014daa:	a803      	add	r0, sp, #12
 8014dac:	f000 ff15 	bl	8015bda <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014db0:	2500      	movs	r5, #0
 8014db2:	462c      	mov	r4, r5
 8014db4:	46a9      	mov	r9, r5
 8014db6:	46a8      	mov	r8, r5
 8014db8:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8014dbc:	2300      	movs	r3, #0
 8014dbe:	9302      	str	r3, [sp, #8]
 8014dc0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014dc4:	429c      	cmp	r4, r3
 8014dc6:	d002      	beq.n	8014dce <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8014dc8:	455c      	cmp	r4, fp
 8014dca:	bf18      	it	ne
 8014dcc:	4625      	movne	r5, r4
 8014dce:	ab02      	add	r3, sp, #8
 8014dd0:	4632      	mov	r2, r6
 8014dd2:	4651      	mov	r1, sl
 8014dd4:	a803      	add	r0, sp, #12
 8014dd6:	f001 fa03 	bl	80161e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8014dda:	4604      	mov	r4, r0
 8014ddc:	b108      	cbz	r0, 8014de2 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8014dde:	280a      	cmp	r0, #10
 8014de0:	d10a      	bne.n	8014df8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8014de2:	45c1      	cmp	r9, r8
 8014de4:	bf38      	it	cc
 8014de6:	46c1      	movcc	r9, r8
 8014de8:	f04f 0800 	mov.w	r8, #0
 8014dec:	2c00      	cmp	r4, #0
 8014dee:	d1e5      	bne.n	8014dbc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8014df0:	4648      	mov	r0, r9
 8014df2:	b01d      	add	sp, #116	; 0x74
 8014df4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014df8:	9a02      	ldr	r2, [sp, #8]
 8014dfa:	2a00      	cmp	r2, #0
 8014dfc:	d0de      	beq.n	8014dbc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8014dfe:	7b57      	ldrb	r7, [r2, #13]
 8014e00:	6833      	ldr	r3, [r6, #0]
 8014e02:	8894      	ldrh	r4, [r2, #4]
 8014e04:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014e06:	007f      	lsls	r7, r7, #1
 8014e08:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8014e0c:	7a97      	ldrb	r7, [r2, #10]
 8014e0e:	4629      	mov	r1, r5
 8014e10:	4307      	orrs	r7, r0
 8014e12:	4630      	mov	r0, r6
 8014e14:	4798      	blx	r3
 8014e16:	4438      	add	r0, r7
 8014e18:	4480      	add	r8, r0
 8014e1a:	fa1f f888 	uxth.w	r8, r8
 8014e1e:	e7e5      	b.n	8014dec <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08014e20 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8014e20:	b508      	push	{r3, lr}
 8014e22:	6803      	ldr	r3, [r0, #0]
 8014e24:	68db      	ldr	r3, [r3, #12]
 8014e26:	4798      	blx	r3
 8014e28:	b128      	cbz	r0, 8014e36 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8014e2a:	7b43      	ldrb	r3, [r0, #13]
 8014e2c:	7a80      	ldrb	r0, [r0, #10]
 8014e2e:	005b      	lsls	r3, r3, #1
 8014e30:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8014e34:	4318      	orrs	r0, r3
 8014e36:	bd08      	pop	{r3, pc}

08014e38 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8014e38:	b40e      	push	{r1, r2, r3}
 8014e3a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014e3c:	b09e      	sub	sp, #120	; 0x78
 8014e3e:	ab23      	add	r3, sp, #140	; 0x8c
 8014e40:	4605      	mov	r5, r0
 8014e42:	f853 4b04 	ldr.w	r4, [r3], #4
 8014e46:	9303      	str	r3, [sp, #12]
 8014e48:	a805      	add	r0, sp, #20
 8014e4a:	f000 fe6b 	bl	8015b24 <_ZN8touchgfx12TextProviderC1Ev>
 8014e4e:	682b      	ldr	r3, [r5, #0]
 8014e50:	4628      	mov	r0, r5
 8014e52:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014e54:	4798      	blx	r3
 8014e56:	682b      	ldr	r3, [r5, #0]
 8014e58:	4606      	mov	r6, r0
 8014e5a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014e5c:	4628      	mov	r0, r5
 8014e5e:	4798      	blx	r3
 8014e60:	4633      	mov	r3, r6
 8014e62:	ae1e      	add	r6, sp, #120	; 0x78
 8014e64:	4621      	mov	r1, r4
 8014e66:	9000      	str	r0, [sp, #0]
 8014e68:	9a03      	ldr	r2, [sp, #12]
 8014e6a:	2400      	movs	r4, #0
 8014e6c:	a805      	add	r0, sp, #20
 8014e6e:	f000 feb4 	bl	8015bda <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014e72:	f846 4d68 	str.w	r4, [r6, #-104]!
 8014e76:	462a      	mov	r2, r5
 8014e78:	4633      	mov	r3, r6
 8014e7a:	4621      	mov	r1, r4
 8014e7c:	a805      	add	r0, sp, #20
 8014e7e:	f001 f9af 	bl	80161e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8014e82:	b1f0      	cbz	r0, 8014ec2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8014e84:	280a      	cmp	r0, #10
 8014e86:	d018      	beq.n	8014eba <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8014e88:	9f04      	ldr	r7, [sp, #16]
 8014e8a:	b1b7      	cbz	r7, 8014eba <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8014e8c:	7b78      	ldrb	r0, [r7, #13]
 8014e8e:	7a3b      	ldrb	r3, [r7, #8]
 8014e90:	88ea      	ldrh	r2, [r5, #6]
 8014e92:	00c1      	lsls	r1, r0, #3
 8014e94:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8014e98:	4319      	orrs	r1, r3
 8014e9a:	0643      	lsls	r3, r0, #25
 8014e9c:	bf44      	itt	mi
 8014e9e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8014ea2:	b219      	sxthmi	r1, r3
 8014ea4:	0100      	lsls	r0, r0, #4
 8014ea6:	79fb      	ldrb	r3, [r7, #7]
 8014ea8:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8014eac:	4303      	orrs	r3, r0
 8014eae:	4413      	add	r3, r2
 8014eb0:	1a5b      	subs	r3, r3, r1
 8014eb2:	b21b      	sxth	r3, r3
 8014eb4:	429c      	cmp	r4, r3
 8014eb6:	bfb8      	it	lt
 8014eb8:	461c      	movlt	r4, r3
 8014eba:	4633      	mov	r3, r6
 8014ebc:	462a      	mov	r2, r5
 8014ebe:	2100      	movs	r1, #0
 8014ec0:	e7dc      	b.n	8014e7c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8014ec2:	b2a0      	uxth	r0, r4
 8014ec4:	b01e      	add	sp, #120	; 0x78
 8014ec6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8014eca:	b003      	add	sp, #12
 8014ecc:	4770      	bx	lr

08014ece <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8014ece:	7a43      	ldrb	r3, [r0, #9]
 8014ed0:	8880      	ldrh	r0, [r0, #4]
 8014ed2:	4418      	add	r0, r3
 8014ed4:	b280      	uxth	r0, r0
 8014ed6:	4770      	bx	lr

08014ed8 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8014ed8:	6803      	ldr	r3, [r0, #0]
 8014eda:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8014edc:	4718      	bx	r3

08014ede <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8014ede:	b40e      	push	{r1, r2, r3}
 8014ee0:	b570      	push	{r4, r5, r6, lr}
 8014ee2:	b09d      	sub	sp, #116	; 0x74
 8014ee4:	ab21      	add	r3, sp, #132	; 0x84
 8014ee6:	4604      	mov	r4, r0
 8014ee8:	f853 5b04 	ldr.w	r5, [r3], #4
 8014eec:	9302      	str	r3, [sp, #8]
 8014eee:	a803      	add	r0, sp, #12
 8014ef0:	f000 fe18 	bl	8015b24 <_ZN8touchgfx12TextProviderC1Ev>
 8014ef4:	6823      	ldr	r3, [r4, #0]
 8014ef6:	4620      	mov	r0, r4
 8014ef8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014efa:	4798      	blx	r3
 8014efc:	6823      	ldr	r3, [r4, #0]
 8014efe:	4606      	mov	r6, r0
 8014f00:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014f02:	4620      	mov	r0, r4
 8014f04:	4798      	blx	r3
 8014f06:	4633      	mov	r3, r6
 8014f08:	9000      	str	r0, [sp, #0]
 8014f0a:	9a02      	ldr	r2, [sp, #8]
 8014f0c:	4629      	mov	r1, r5
 8014f0e:	a803      	add	r0, sp, #12
 8014f10:	f000 fe63 	bl	8015bda <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014f14:	a803      	add	r0, sp, #12
 8014f16:	f001 fa31 	bl	801637c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8014f1a:	2401      	movs	r4, #1
 8014f1c:	b2a3      	uxth	r3, r4
 8014f1e:	b140      	cbz	r0, 8014f32 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8014f20:	280a      	cmp	r0, #10
 8014f22:	bf08      	it	eq
 8014f24:	3301      	addeq	r3, #1
 8014f26:	a803      	add	r0, sp, #12
 8014f28:	bf08      	it	eq
 8014f2a:	b21c      	sxtheq	r4, r3
 8014f2c:	f001 fa26 	bl	801637c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8014f30:	e7f4      	b.n	8014f1c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8014f32:	4618      	mov	r0, r3
 8014f34:	b01d      	add	sp, #116	; 0x74
 8014f36:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014f3a:	b003      	add	sp, #12
 8014f3c:	4770      	bx	lr

08014f3e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8014f3e:	b40e      	push	{r1, r2, r3}
 8014f40:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014f42:	b09e      	sub	sp, #120	; 0x78
 8014f44:	ab23      	add	r3, sp, #140	; 0x8c
 8014f46:	4604      	mov	r4, r0
 8014f48:	f853 5b04 	ldr.w	r5, [r3], #4
 8014f4c:	9303      	str	r3, [sp, #12]
 8014f4e:	a805      	add	r0, sp, #20
 8014f50:	f000 fde8 	bl	8015b24 <_ZN8touchgfx12TextProviderC1Ev>
 8014f54:	6823      	ldr	r3, [r4, #0]
 8014f56:	4620      	mov	r0, r4
 8014f58:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014f5a:	4798      	blx	r3
 8014f5c:	6823      	ldr	r3, [r4, #0]
 8014f5e:	4606      	mov	r6, r0
 8014f60:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014f62:	4620      	mov	r0, r4
 8014f64:	4798      	blx	r3
 8014f66:	4633      	mov	r3, r6
 8014f68:	4629      	mov	r1, r5
 8014f6a:	9000      	str	r0, [sp, #0]
 8014f6c:	9a03      	ldr	r2, [sp, #12]
 8014f6e:	a805      	add	r0, sp, #20
 8014f70:	ad1e      	add	r5, sp, #120	; 0x78
 8014f72:	f000 fe32 	bl	8015bda <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014f76:	2100      	movs	r1, #0
 8014f78:	f845 1d68 	str.w	r1, [r5, #-104]!
 8014f7c:	4622      	mov	r2, r4
 8014f7e:	462b      	mov	r3, r5
 8014f80:	a805      	add	r0, sp, #20
 8014f82:	f001 f92d 	bl	80161e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8014f86:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8014f8a:	b1d8      	cbz	r0, 8014fc4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8014f8c:	280a      	cmp	r0, #10
 8014f8e:	d012      	beq.n	8014fb6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8014f90:	9804      	ldr	r0, [sp, #16]
 8014f92:	b180      	cbz	r0, 8014fb6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8014f94:	7b47      	ldrb	r7, [r0, #13]
 8014f96:	88e2      	ldrh	r2, [r4, #6]
 8014f98:	00fb      	lsls	r3, r7, #3
 8014f9a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8014f9e:	7a03      	ldrb	r3, [r0, #8]
 8014fa0:	430b      	orrs	r3, r1
 8014fa2:	0679      	lsls	r1, r7, #25
 8014fa4:	bf44      	itt	mi
 8014fa6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8014faa:	b21b      	sxthmi	r3, r3
 8014fac:	1ad3      	subs	r3, r2, r3
 8014fae:	b21b      	sxth	r3, r3
 8014fb0:	429e      	cmp	r6, r3
 8014fb2:	bfa8      	it	ge
 8014fb4:	461e      	movge	r6, r3
 8014fb6:	462b      	mov	r3, r5
 8014fb8:	4622      	mov	r2, r4
 8014fba:	2100      	movs	r1, #0
 8014fbc:	a805      	add	r0, sp, #20
 8014fbe:	f001 f90f 	bl	80161e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8014fc2:	e7e2      	b.n	8014f8a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8014fc4:	4630      	mov	r0, r6
 8014fc6:	b01e      	add	sp, #120	; 0x78
 8014fc8:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8014fcc:	b003      	add	sp, #12
 8014fce:	4770      	bx	lr

08014fd0 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8014fd0:	b513      	push	{r0, r1, r4, lr}
 8014fd2:	6803      	ldr	r3, [r0, #0]
 8014fd4:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8014fd8:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8014fdc:	f8ad 1004 	strh.w	r1, [sp, #4]
 8014fe0:	2400      	movs	r4, #0
 8014fe2:	9400      	str	r4, [sp, #0]
 8014fe4:	f8ad 2006 	strh.w	r2, [sp, #6]
 8014fe8:	691b      	ldr	r3, [r3, #16]
 8014fea:	4669      	mov	r1, sp
 8014fec:	4798      	blx	r3
 8014fee:	b002      	add	sp, #8
 8014ff0:	bd10      	pop	{r4, pc}

08014ff2 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8014ff2:	b538      	push	{r3, r4, r5, lr}
 8014ff4:	680b      	ldr	r3, [r1, #0]
 8014ff6:	460c      	mov	r4, r1
 8014ff8:	68db      	ldr	r3, [r3, #12]
 8014ffa:	4605      	mov	r5, r0
 8014ffc:	4798      	blx	r3
 8014ffe:	6823      	ldr	r3, [r4, #0]
 8015000:	4620      	mov	r0, r4
 8015002:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015004:	4629      	mov	r1, r5
 8015006:	4798      	blx	r3
 8015008:	4628      	mov	r0, r5
 801500a:	bd38      	pop	{r3, r4, r5, pc}

0801500c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 801500c:	b410      	push	{r4}
 801500e:	880a      	ldrh	r2, [r1, #0]
 8015010:	8884      	ldrh	r4, [r0, #4]
 8015012:	4422      	add	r2, r4
 8015014:	800a      	strh	r2, [r1, #0]
 8015016:	88c4      	ldrh	r4, [r0, #6]
 8015018:	884a      	ldrh	r2, [r1, #2]
 801501a:	4422      	add	r2, r4
 801501c:	804a      	strh	r2, [r1, #2]
 801501e:	6940      	ldr	r0, [r0, #20]
 8015020:	b120      	cbz	r0, 801502c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8015022:	6803      	ldr	r3, [r0, #0]
 8015024:	f85d 4b04 	ldr.w	r4, [sp], #4
 8015028:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801502a:	4718      	bx	r3
 801502c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8015030:	4770      	bx	lr

08015032 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8015032:	b570      	push	{r4, r5, r6, lr}
 8015034:	8882      	ldrh	r2, [r0, #4]
 8015036:	880b      	ldrh	r3, [r1, #0]
 8015038:	4413      	add	r3, r2
 801503a:	800b      	strh	r3, [r1, #0]
 801503c:	88c2      	ldrh	r2, [r0, #6]
 801503e:	884b      	ldrh	r3, [r1, #2]
 8015040:	460c      	mov	r4, r1
 8015042:	4413      	add	r3, r2
 8015044:	804b      	strh	r3, [r1, #2]
 8015046:	4605      	mov	r5, r0
 8015048:	1d01      	adds	r1, r0, #4
 801504a:	4620      	mov	r0, r4
 801504c:	f7f9 fdc6 	bl	800ebdc <_ZN8touchgfx4RectaNERKS0_>
 8015050:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8015054:	2b00      	cmp	r3, #0
 8015056:	dd0b      	ble.n	8015070 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8015058:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801505c:	2b00      	cmp	r3, #0
 801505e:	dd07      	ble.n	8015070 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8015060:	6968      	ldr	r0, [r5, #20]
 8015062:	b128      	cbz	r0, 8015070 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8015064:	6803      	ldr	r3, [r0, #0]
 8015066:	4621      	mov	r1, r4
 8015068:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801506a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801506e:	4718      	bx	r3
 8015070:	bd70      	pop	{r4, r5, r6, pc}
	...

08015074 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8015074:	b570      	push	{r4, r5, r6, lr}
 8015076:	8882      	ldrh	r2, [r0, #4]
 8015078:	880b      	ldrh	r3, [r1, #0]
 801507a:	4413      	add	r3, r2
 801507c:	800b      	strh	r3, [r1, #0]
 801507e:	88c2      	ldrh	r2, [r0, #6]
 8015080:	884b      	ldrh	r3, [r1, #2]
 8015082:	460c      	mov	r4, r1
 8015084:	4413      	add	r3, r2
 8015086:	804b      	strh	r3, [r1, #2]
 8015088:	4605      	mov	r5, r0
 801508a:	1d01      	adds	r1, r0, #4
 801508c:	4620      	mov	r0, r4
 801508e:	f7f9 fda5 	bl	800ebdc <_ZN8touchgfx4RectaNERKS0_>
 8015092:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8015096:	2b00      	cmp	r3, #0
 8015098:	dd19      	ble.n	80150ce <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801509a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801509e:	2b00      	cmp	r3, #0
 80150a0:	dd15      	ble.n	80150ce <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80150a2:	6968      	ldr	r0, [r5, #20]
 80150a4:	b128      	cbz	r0, 80150b2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 80150a6:	6803      	ldr	r3, [r0, #0]
 80150a8:	4621      	mov	r1, r4
 80150aa:	691b      	ldr	r3, [r3, #16]
 80150ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80150b0:	4718      	bx	r3
 80150b2:	4b07      	ldr	r3, [pc, #28]	; (80150d0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 80150b4:	681b      	ldr	r3, [r3, #0]
 80150b6:	3304      	adds	r3, #4
 80150b8:	429d      	cmp	r5, r3
 80150ba:	d108      	bne.n	80150ce <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80150bc:	f7fe fea0 	bl	8013e00 <_ZN8touchgfx11Application11getInstanceEv>
 80150c0:	6803      	ldr	r3, [r0, #0]
 80150c2:	6821      	ldr	r1, [r4, #0]
 80150c4:	6862      	ldr	r2, [r4, #4]
 80150c6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80150c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80150cc:	4718      	bx	r3
 80150ce:	bd70      	pop	{r4, r5, r6, pc}
 80150d0:	20013800 	.word	0x20013800

080150d4 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 80150d4:	b570      	push	{r4, r5, r6, lr}
 80150d6:	4604      	mov	r4, r0
 80150d8:	4616      	mov	r6, r2
 80150da:	460d      	mov	r5, r1
 80150dc:	b901      	cbnz	r1, 80150e0 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 80150de:	b192      	cbz	r2, 8015106 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 80150e0:	6823      	ldr	r3, [r4, #0]
 80150e2:	4620      	mov	r0, r4
 80150e4:	699b      	ldr	r3, [r3, #24]
 80150e6:	4798      	blx	r3
 80150e8:	88e2      	ldrh	r2, [r4, #6]
 80150ea:	88a1      	ldrh	r1, [r4, #4]
 80150ec:	4432      	add	r2, r6
 80150ee:	4429      	add	r1, r5
 80150f0:	4620      	mov	r0, r4
 80150f2:	b212      	sxth	r2, r2
 80150f4:	b209      	sxth	r1, r1
 80150f6:	f7ed f9c0 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 80150fa:	6823      	ldr	r3, [r4, #0]
 80150fc:	4620      	mov	r0, r4
 80150fe:	699b      	ldr	r3, [r3, #24]
 8015100:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015104:	4718      	bx	r3
 8015106:	bd70      	pop	{r4, r5, r6, pc}

08015108 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8015108:	b510      	push	{r4, lr}
 801510a:	4604      	mov	r4, r0
 801510c:	4608      	mov	r0, r1
 801510e:	2300      	movs	r3, #0
 8015110:	8023      	strh	r3, [r4, #0]
 8015112:	8063      	strh	r3, [r4, #2]
 8015114:	6803      	ldr	r3, [r0, #0]
 8015116:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801511a:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 801511e:	80a1      	strh	r1, [r4, #4]
 8015120:	80e2      	strh	r2, [r4, #6]
 8015122:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015124:	4621      	mov	r1, r4
 8015126:	4798      	blx	r3
 8015128:	4620      	mov	r0, r4
 801512a:	bd10      	pop	{r4, pc}

0801512c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 801512c:	b530      	push	{r4, r5, lr}
 801512e:	8083      	strh	r3, [r0, #4]
 8015130:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8015134:	80c3      	strh	r3, [r0, #6]
 8015136:	f89d 3010 	ldrb.w	r3, [sp, #16]
 801513a:	7203      	strb	r3, [r0, #8]
 801513c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8015140:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8015144:	7243      	strb	r3, [r0, #9]
 8015146:	7a83      	ldrb	r3, [r0, #10]
 8015148:	6141      	str	r1, [r0, #20]
 801514a:	f365 0306 	bfi	r3, r5, #0, #7
 801514e:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8015152:	8302      	strh	r2, [r0, #24]
 8015154:	f365 13c7 	bfi	r3, r5, #7, #1
 8015158:	7283      	strb	r3, [r0, #10]
 801515a:	f89d 3020 	ldrb.w	r3, [sp, #32]
 801515e:	72c3      	strb	r3, [r0, #11]
 8015160:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8015164:	7303      	strb	r3, [r0, #12]
 8015166:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801516a:	81c3      	strh	r3, [r0, #14]
 801516c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8015170:	8203      	strh	r3, [r0, #16]
 8015172:	4b01      	ldr	r3, [pc, #4]	; (8015178 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8015174:	6003      	str	r3, [r0, #0]
 8015176:	bd30      	pop	{r4, r5, pc}
 8015178:	0802b888 	.word	0x0802b888

0801517c <_ZNK8touchgfx9ConstFont4findEt>:
 801517c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801517e:	6944      	ldr	r4, [r0, #20]
 8015180:	b3bc      	cbz	r4, 80151f2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015182:	88a3      	ldrh	r3, [r4, #4]
 8015184:	8b02      	ldrh	r2, [r0, #24]
 8015186:	1acb      	subs	r3, r1, r3
 8015188:	f102 32ff 	add.w	r2, r2, #4294967295
 801518c:	d431      	bmi.n	80151f2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801518e:	4293      	cmp	r3, r2
 8015190:	dd0c      	ble.n	80151ac <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8015192:	230e      	movs	r3, #14
 8015194:	fb03 4302 	mla	r3, r3, r2, r4
 8015198:	889b      	ldrh	r3, [r3, #4]
 801519a:	1a5b      	subs	r3, r3, r1
 801519c:	1ad3      	subs	r3, r2, r3
 801519e:	429a      	cmp	r2, r3
 80151a0:	db27      	blt.n	80151f2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80151a2:	2b00      	cmp	r3, #0
 80151a4:	bfbc      	itt	lt
 80151a6:	2302      	movlt	r3, #2
 80151a8:	fb92 f3f3 	sdivlt	r3, r2, r3
 80151ac:	2500      	movs	r5, #0
 80151ae:	260e      	movs	r6, #14
 80151b0:	4295      	cmp	r5, r2
 80151b2:	dc1e      	bgt.n	80151f2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80151b4:	fb06 4003 	mla	r0, r6, r3, r4
 80151b8:	8887      	ldrh	r7, [r0, #4]
 80151ba:	42b9      	cmp	r1, r7
 80151bc:	d01a      	beq.n	80151f4 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 80151be:	d20d      	bcs.n	80151dc <_ZNK8touchgfx9ConstFont4findEt+0x60>
 80151c0:	1e5a      	subs	r2, r3, #1
 80151c2:	4295      	cmp	r5, r2
 80151c4:	dc15      	bgt.n	80151f2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80151c6:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 80151ca:	1a5b      	subs	r3, r3, r1
 80151cc:	1ad3      	subs	r3, r2, r3
 80151ce:	429a      	cmp	r2, r3
 80151d0:	db0f      	blt.n	80151f2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80151d2:	429d      	cmp	r5, r3
 80151d4:	ddec      	ble.n	80151b0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80151d6:	1953      	adds	r3, r2, r5
 80151d8:	105b      	asrs	r3, r3, #1
 80151da:	e7e9      	b.n	80151b0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80151dc:	1c5d      	adds	r5, r3, #1
 80151de:	42aa      	cmp	r2, r5
 80151e0:	db07      	blt.n	80151f2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80151e2:	8a43      	ldrh	r3, [r0, #18]
 80151e4:	1acb      	subs	r3, r1, r3
 80151e6:	442b      	add	r3, r5
 80151e8:	429d      	cmp	r5, r3
 80151ea:	dc02      	bgt.n	80151f2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80151ec:	429a      	cmp	r2, r3
 80151ee:	dadf      	bge.n	80151b0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80151f0:	e7f1      	b.n	80151d6 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 80151f2:	2000      	movs	r0, #0
 80151f4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080151f6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 80151f6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80151f8:	4604      	mov	r4, r0
 80151fa:	4617      	mov	r7, r2
 80151fc:	461e      	mov	r6, r3
 80151fe:	b911      	cbnz	r1, 8015206 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8015200:	2500      	movs	r5, #0
 8015202:	4628      	mov	r0, r5
 8015204:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015206:	290a      	cmp	r1, #10
 8015208:	d0fa      	beq.n	8015200 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801520a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 801520e:	4291      	cmp	r1, r2
 8015210:	d0f6      	beq.n	8015200 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8015212:	f242 020b 	movw	r2, #8203	; 0x200b
 8015216:	4291      	cmp	r1, r2
 8015218:	d0f2      	beq.n	8015200 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801521a:	f7ff ffaf 	bl	801517c <_ZNK8touchgfx9ConstFont4findEt>
 801521e:	4605      	mov	r5, r0
 8015220:	b950      	cbnz	r0, 8015238 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8015222:	6823      	ldr	r3, [r4, #0]
 8015224:	4620      	mov	r0, r4
 8015226:	691b      	ldr	r3, [r3, #16]
 8015228:	4798      	blx	r3
 801522a:	4601      	mov	r1, r0
 801522c:	4620      	mov	r0, r4
 801522e:	f7ff ffa5 	bl	801517c <_ZNK8touchgfx9ConstFont4findEt>
 8015232:	4605      	mov	r5, r0
 8015234:	2800      	cmp	r0, #0
 8015236:	d0e3      	beq.n	8015200 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8015238:	6823      	ldr	r3, [r4, #0]
 801523a:	4629      	mov	r1, r5
 801523c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801523e:	4620      	mov	r0, r4
 8015240:	4798      	blx	r3
 8015242:	6038      	str	r0, [r7, #0]
 8015244:	6823      	ldr	r3, [r4, #0]
 8015246:	4620      	mov	r0, r4
 8015248:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801524a:	4798      	blx	r3
 801524c:	7030      	strb	r0, [r6, #0]
 801524e:	e7d8      	b.n	8015202 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08015250 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 8015250:	b538      	push	{r3, r4, r5, lr}
 8015252:	4605      	mov	r5, r0
 8015254:	f002 f962 	bl	801751c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8015258:	4604      	mov	r4, r0
 801525a:	4628      	mov	r0, r5
 801525c:	f002 f8a2 	bl	80173a4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8015260:	2800      	cmp	r0, #0
 8015262:	bf14      	ite	ne
 8015264:	2002      	movne	r0, #2
 8015266:	2000      	moveq	r0, #0
 8015268:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801526c:	b280      	uxth	r0, r0
 801526e:	bd38      	pop	{r3, r4, r5, pc}

08015270 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8015270:	b538      	push	{r3, r4, r5, lr}
 8015272:	4605      	mov	r5, r0
 8015274:	f002 f952 	bl	801751c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8015278:	4604      	mov	r4, r0
 801527a:	4628      	mov	r0, r5
 801527c:	f002 f892 	bl	80173a4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8015280:	2800      	cmp	r0, #0
 8015282:	bf14      	ite	ne
 8015284:	2002      	movne	r0, #2
 8015286:	2000      	moveq	r0, #0
 8015288:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801528c:	f040 0001 	orr.w	r0, r0, #1
 8015290:	b280      	uxth	r0, r0
 8015292:	bd38      	pop	{r3, r4, r5, pc}

08015294 <_ZN8touchgfx4clzuEm>:
 8015294:	4603      	mov	r3, r0
 8015296:	b1c8      	cbz	r0, 80152cc <_ZN8touchgfx4clzuEm+0x38>
 8015298:	0c02      	lsrs	r2, r0, #16
 801529a:	0412      	lsls	r2, r2, #16
 801529c:	b9a2      	cbnz	r2, 80152c8 <_ZN8touchgfx4clzuEm+0x34>
 801529e:	0403      	lsls	r3, r0, #16
 80152a0:	2010      	movs	r0, #16
 80152a2:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80152a6:	bf04      	itt	eq
 80152a8:	021b      	lsleq	r3, r3, #8
 80152aa:	3008      	addeq	r0, #8
 80152ac:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80152b0:	bf04      	itt	eq
 80152b2:	011b      	lsleq	r3, r3, #4
 80152b4:	3004      	addeq	r0, #4
 80152b6:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80152ba:	bf04      	itt	eq
 80152bc:	009b      	lsleq	r3, r3, #2
 80152be:	3002      	addeq	r0, #2
 80152c0:	2b00      	cmp	r3, #0
 80152c2:	db04      	blt.n	80152ce <_ZN8touchgfx4clzuEm+0x3a>
 80152c4:	3001      	adds	r0, #1
 80152c6:	4770      	bx	lr
 80152c8:	2000      	movs	r0, #0
 80152ca:	e7ea      	b.n	80152a2 <_ZN8touchgfx4clzuEm+0xe>
 80152cc:	2020      	movs	r0, #32
 80152ce:	4770      	bx	lr

080152d0 <_ZN8touchgfx7muldivuEmmmRm>:
 80152d0:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80152d4:	460f      	mov	r7, r1
 80152d6:	4615      	mov	r5, r2
 80152d8:	461e      	mov	r6, r3
 80152da:	4601      	mov	r1, r0
 80152dc:	b100      	cbz	r0, 80152e0 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 80152de:	b927      	cbnz	r7, 80152ea <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 80152e0:	2000      	movs	r0, #0
 80152e2:	6030      	str	r0, [r6, #0]
 80152e4:	b002      	add	sp, #8
 80152e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80152ea:	f7ff ffd3 	bl	8015294 <_ZN8touchgfx4clzuEm>
 80152ee:	b980      	cbnz	r0, 8015312 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 80152f0:	4638      	mov	r0, r7
 80152f2:	f7ff ffcf 	bl	8015294 <_ZN8touchgfx4clzuEm>
 80152f6:	2800      	cmp	r0, #0
 80152f8:	dd05      	ble.n	8015306 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 80152fa:	4633      	mov	r3, r6
 80152fc:	462a      	mov	r2, r5
 80152fe:	4638      	mov	r0, r7
 8015300:	f7ff ffe6 	bl	80152d0 <_ZN8touchgfx7muldivuEmmmRm>
 8015304:	e7ee      	b.n	80152e4 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8015306:	f04f 33ff 	mov.w	r3, #4294967295
 801530a:	6033      	str	r3, [r6, #0]
 801530c:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8015310:	e7e8      	b.n	80152e4 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8015312:	fa37 f800 	lsrs.w	r8, r7, r0
 8015316:	fb07 f301 	mul.w	r3, r7, r1
 801531a:	d105      	bne.n	8015328 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 801531c:	fbb3 f0f5 	udiv	r0, r3, r5
 8015320:	fb05 3510 	mls	r5, r5, r0, r3
 8015324:	6035      	str	r5, [r6, #0]
 8015326:	e7dd      	b.n	80152e4 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8015328:	2301      	movs	r3, #1
 801532a:	fa01 fa00 	lsl.w	sl, r1, r0
 801532e:	fa03 f000 	lsl.w	r0, r3, r0
 8015332:	3801      	subs	r0, #1
 8015334:	462a      	mov	r2, r5
 8015336:	4633      	mov	r3, r6
 8015338:	4038      	ands	r0, r7
 801533a:	f7ff ffc9 	bl	80152d0 <_ZN8touchgfx7muldivuEmmmRm>
 801533e:	fbba f9f5 	udiv	r9, sl, r5
 8015342:	462a      	mov	r2, r5
 8015344:	4607      	mov	r7, r0
 8015346:	ab01      	add	r3, sp, #4
 8015348:	fb05 a119 	mls	r1, r5, r9, sl
 801534c:	4640      	mov	r0, r8
 801534e:	f7ff ffbf 	bl	80152d0 <_ZN8touchgfx7muldivuEmmmRm>
 8015352:	9b01      	ldr	r3, [sp, #4]
 8015354:	6832      	ldr	r2, [r6, #0]
 8015356:	fb08 f409 	mul.w	r4, r8, r9
 801535a:	441a      	add	r2, r3
 801535c:	fbb2 f3f5 	udiv	r3, r2, r5
 8015360:	441c      	add	r4, r3
 8015362:	443c      	add	r4, r7
 8015364:	4420      	add	r0, r4
 8015366:	fb05 2513 	mls	r5, r5, r3, r2
 801536a:	e7db      	b.n	8015324 <_ZN8touchgfx7muldivuEmmmRm+0x54>

0801536c <_ZN8touchgfx6muldivElllRl>:
 801536c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801536e:	2800      	cmp	r0, #0
 8015370:	bfba      	itte	lt
 8015372:	4240      	neglt	r0, r0
 8015374:	f04f 34ff 	movlt.w	r4, #4294967295
 8015378:	2401      	movge	r4, #1
 801537a:	2900      	cmp	r1, #0
 801537c:	bfbc      	itt	lt
 801537e:	4249      	neglt	r1, r1
 8015380:	4264      	neglt	r4, r4
 8015382:	2a00      	cmp	r2, #0
 8015384:	bfb6      	itet	lt
 8015386:	4265      	neglt	r5, r4
 8015388:	4625      	movge	r5, r4
 801538a:	4252      	neglt	r2, r2
 801538c:	4288      	cmp	r0, r1
 801538e:	461e      	mov	r6, r3
 8015390:	bfc2      	ittt	gt
 8015392:	4603      	movgt	r3, r0
 8015394:	4608      	movgt	r0, r1
 8015396:	4619      	movgt	r1, r3
 8015398:	ab01      	add	r3, sp, #4
 801539a:	f7ff ff99 	bl	80152d0 <_ZN8touchgfx7muldivuEmmmRm>
 801539e:	9b01      	ldr	r3, [sp, #4]
 80153a0:	4368      	muls	r0, r5
 80153a2:	435c      	muls	r4, r3
 80153a4:	6034      	str	r4, [r6, #0]
 80153a6:	b002      	add	sp, #8
 80153a8:	bd70      	pop	{r4, r5, r6, pc}

080153aa <_ZN8touchgfx6muldivElll>:
 80153aa:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80153ac:	4606      	mov	r6, r0
 80153ae:	ab01      	add	r3, sp, #4
 80153b0:	460d      	mov	r5, r1
 80153b2:	4614      	mov	r4, r2
 80153b4:	f7ff ffda 	bl	801536c <_ZN8touchgfx6muldivElllRl>
 80153b8:	2e00      	cmp	r6, #0
 80153ba:	db20      	blt.n	80153fe <_ZN8touchgfx6muldivElll+0x54>
 80153bc:	bf14      	ite	ne
 80153be:	2301      	movne	r3, #1
 80153c0:	2300      	moveq	r3, #0
 80153c2:	2d00      	cmp	r5, #0
 80153c4:	db1e      	blt.n	8015404 <_ZN8touchgfx6muldivElll+0x5a>
 80153c6:	bf14      	ite	ne
 80153c8:	2201      	movne	r2, #1
 80153ca:	2200      	moveq	r2, #0
 80153cc:	2c00      	cmp	r4, #0
 80153ce:	fb03 f202 	mul.w	r2, r3, r2
 80153d2:	db1a      	blt.n	801540a <_ZN8touchgfx6muldivElll+0x60>
 80153d4:	bf14      	ite	ne
 80153d6:	2301      	movne	r3, #1
 80153d8:	2300      	moveq	r3, #0
 80153da:	4353      	muls	r3, r2
 80153dc:	2b01      	cmp	r3, #1
 80153de:	d117      	bne.n	8015410 <_ZN8touchgfx6muldivElll+0x66>
 80153e0:	9b01      	ldr	r3, [sp, #4]
 80153e2:	2c00      	cmp	r4, #0
 80153e4:	bfb8      	it	lt
 80153e6:	4264      	neglt	r4, r4
 80153e8:	2b00      	cmp	r3, #0
 80153ea:	f104 0401 	add.w	r4, r4, #1
 80153ee:	bfb8      	it	lt
 80153f0:	425b      	neglt	r3, r3
 80153f2:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 80153f6:	db00      	blt.n	80153fa <_ZN8touchgfx6muldivElll+0x50>
 80153f8:	3001      	adds	r0, #1
 80153fa:	b002      	add	sp, #8
 80153fc:	bd70      	pop	{r4, r5, r6, pc}
 80153fe:	f04f 33ff 	mov.w	r3, #4294967295
 8015402:	e7de      	b.n	80153c2 <_ZN8touchgfx6muldivElll+0x18>
 8015404:	f04f 32ff 	mov.w	r2, #4294967295
 8015408:	e7e0      	b.n	80153cc <_ZN8touchgfx6muldivElll+0x22>
 801540a:	f04f 33ff 	mov.w	r3, #4294967295
 801540e:	e7e4      	b.n	80153da <_ZN8touchgfx6muldivElll+0x30>
 8015410:	3301      	adds	r3, #1
 8015412:	d1f2      	bne.n	80153fa <_ZN8touchgfx6muldivElll+0x50>
 8015414:	9b01      	ldr	r3, [sp, #4]
 8015416:	2c00      	cmp	r4, #0
 8015418:	bfb8      	it	lt
 801541a:	4264      	neglt	r4, r4
 801541c:	2b00      	cmp	r3, #0
 801541e:	bfb8      	it	lt
 8015420:	425b      	neglt	r3, r3
 8015422:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8015426:	bfc8      	it	gt
 8015428:	f100 30ff 	addgt.w	r0, r0, #4294967295
 801542c:	e7e5      	b.n	80153fa <_ZN8touchgfx6muldivElll+0x50>

0801542e <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 801542e:	2000      	movs	r0, #0
 8015430:	4770      	bx	lr

08015432 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8015432:	2001      	movs	r0, #1
 8015434:	4770      	bx	lr

08015436 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8015436:	2002      	movs	r0, #2
 8015438:	4770      	bx	lr

0801543a <_ZN8touchgfx6ScreenD1Ev>:
 801543a:	4770      	bx	lr

0801543c <_ZN8touchgfx12GestureEventD1Ev>:
 801543c:	4770      	bx	lr

0801543e <_ZN8touchgfx9DragEventD1Ev>:
 801543e:	4770      	bx	lr

08015440 <_ZN8touchgfx10ClickEventD1Ev>:
 8015440:	4770      	bx	lr

08015442 <_ZN8touchgfx10ClickEventD0Ev>:
 8015442:	b510      	push	{r4, lr}
 8015444:	210c      	movs	r1, #12
 8015446:	4604      	mov	r4, r0
 8015448:	f011 fa39 	bl	80268be <_ZdlPvj>
 801544c:	4620      	mov	r0, r4
 801544e:	bd10      	pop	{r4, pc}

08015450 <_ZN8touchgfx9DragEventD0Ev>:
 8015450:	b510      	push	{r4, lr}
 8015452:	2110      	movs	r1, #16
 8015454:	4604      	mov	r4, r0
 8015456:	f011 fa32 	bl	80268be <_ZdlPvj>
 801545a:	4620      	mov	r0, r4
 801545c:	bd10      	pop	{r4, pc}

0801545e <_ZN8touchgfx12GestureEventD0Ev>:
 801545e:	b510      	push	{r4, lr}
 8015460:	210c      	movs	r1, #12
 8015462:	4604      	mov	r4, r0
 8015464:	f011 fa2b 	bl	80268be <_ZdlPvj>
 8015468:	4620      	mov	r0, r4
 801546a:	bd10      	pop	{r4, pc}

0801546c <_ZN8touchgfx6ScreenD0Ev>:
 801546c:	b510      	push	{r4, lr}
 801546e:	213c      	movs	r1, #60	; 0x3c
 8015470:	4604      	mov	r4, r0
 8015472:	f011 fa24 	bl	80268be <_ZdlPvj>
 8015476:	4620      	mov	r0, r4
 8015478:	bd10      	pop	{r4, pc}
	...

0801547c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 801547c:	b530      	push	{r4, r5, lr}
 801547e:	460d      	mov	r5, r1
 8015480:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8015482:	b087      	sub	sp, #28
 8015484:	4604      	mov	r4, r0
 8015486:	b301      	cbz	r1, 80154ca <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8015488:	a801      	add	r0, sp, #4
 801548a:	f7ff fe3d 	bl	8015108 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801548e:	892a      	ldrh	r2, [r5, #8]
 8015490:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8015494:	7928      	ldrb	r0, [r5, #4]
 8015496:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801549a:	f88d 0010 	strb.w	r0, [sp, #16]
 801549e:	1ad2      	subs	r2, r2, r3
 80154a0:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80154a2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80154a4:	f8ad 1012 	strh.w	r1, [sp, #18]
 80154a8:	441a      	add	r2, r3
 80154aa:	896b      	ldrh	r3, [r5, #10]
 80154ac:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 80154b0:	f8ad 2014 	strh.w	r2, [sp, #20]
 80154b4:	1b5b      	subs	r3, r3, r5
 80154b6:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 80154b8:	442b      	add	r3, r5
 80154ba:	4d05      	ldr	r5, [pc, #20]	; (80154d0 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 80154bc:	9503      	str	r5, [sp, #12]
 80154be:	f8ad 3016 	strh.w	r3, [sp, #22]
 80154c2:	6803      	ldr	r3, [r0, #0]
 80154c4:	a903      	add	r1, sp, #12
 80154c6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80154c8:	4798      	blx	r3
 80154ca:	b007      	add	sp, #28
 80154cc:	bd30      	pop	{r4, r5, pc}
 80154ce:	bf00      	nop
 80154d0:	0802b910 	.word	0x0802b910

080154d4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 80154d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80154d8:	6b03      	ldr	r3, [r0, #48]	; 0x30
 80154da:	b08a      	sub	sp, #40	; 0x28
 80154dc:	4604      	mov	r4, r0
 80154de:	460d      	mov	r5, r1
 80154e0:	b113      	cbz	r3, 80154e8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 80154e2:	790b      	ldrb	r3, [r1, #4]
 80154e4:	2b00      	cmp	r3, #0
 80154e6:	d044      	beq.n	8015572 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80154e8:	f104 0804 	add.w	r8, r4, #4
 80154ec:	4641      	mov	r1, r8
 80154ee:	a803      	add	r0, sp, #12
 80154f0:	f7ff fe0a 	bl	8015108 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80154f4:	792b      	ldrb	r3, [r5, #4]
 80154f6:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 80154fa:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 80154fe:	b983      	cbnz	r3, 8015522 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8015500:	892a      	ldrh	r2, [r5, #8]
 8015502:	88e9      	ldrh	r1, [r5, #6]
 8015504:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8015508:	1b92      	subs	r2, r2, r6
 801550a:	1bc9      	subs	r1, r1, r7
 801550c:	9301      	str	r3, [sp, #4]
 801550e:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8015512:	9300      	str	r3, [sp, #0]
 8015514:	b212      	sxth	r2, r2
 8015516:	f104 0330 	add.w	r3, r4, #48	; 0x30
 801551a:	b209      	sxth	r1, r1
 801551c:	4640      	mov	r0, r8
 801551e:	f7f9 fa79 	bl	800ea14 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8015522:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8015524:	b329      	cbz	r1, 8015572 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8015526:	a805      	add	r0, sp, #20
 8015528:	f7ff fdee 	bl	8015108 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801552c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8015530:	792b      	ldrb	r3, [r5, #4]
 8015532:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8015534:	f88d 3020 	strb.w	r3, [sp, #32]
 8015538:	1abf      	subs	r7, r7, r2
 801553a:	88ea      	ldrh	r2, [r5, #6]
 801553c:	4417      	add	r7, r2
 801553e:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8015540:	4417      	add	r7, r2
 8015542:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8015546:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 801554a:	1ab6      	subs	r6, r6, r2
 801554c:	892a      	ldrh	r2, [r5, #8]
 801554e:	4416      	add	r6, r2
 8015550:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8015552:	4416      	add	r6, r2
 8015554:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8015558:	4a07      	ldr	r2, [pc, #28]	; (8015578 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 801555a:	9207      	str	r2, [sp, #28]
 801555c:	2600      	movs	r6, #0
 801555e:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8015562:	6803      	ldr	r3, [r0, #0]
 8015564:	a907      	add	r1, sp, #28
 8015566:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015568:	4798      	blx	r3
 801556a:	792b      	ldrb	r3, [r5, #4]
 801556c:	b10b      	cbz	r3, 8015572 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801556e:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8015572:	b00a      	add	sp, #40	; 0x28
 8015574:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015578:	0802b8e8 	.word	0x0802b8e8

0801557c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 801557c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015580:	460c      	mov	r4, r1
 8015582:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8015584:	b088      	sub	sp, #32
 8015586:	4605      	mov	r5, r0
 8015588:	2900      	cmp	r1, #0
 801558a:	d06d      	beq.n	8015668 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 801558c:	4668      	mov	r0, sp
 801558e:	f7ff fdbb 	bl	8015108 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015592:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8015594:	88e3      	ldrh	r3, [r4, #6]
 8015596:	f9bd 8000 	ldrsh.w	r8, [sp]
 801559a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801559e:	440b      	add	r3, r1
 80155a0:	b21b      	sxth	r3, r3
 80155a2:	4543      	cmp	r3, r8
 80155a4:	db31      	blt.n	801560a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80155a6:	f8bd c004 	ldrh.w	ip, [sp, #4]
 80155aa:	44c4      	add	ip, r8
 80155ac:	fa0f fc8c 	sxth.w	ip, ip
 80155b0:	4563      	cmp	r3, ip
 80155b2:	da2a      	bge.n	801560a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80155b4:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 80155b6:	8926      	ldrh	r6, [r4, #8]
 80155b8:	4416      	add	r6, r2
 80155ba:	b236      	sxth	r6, r6
 80155bc:	42be      	cmp	r6, r7
 80155be:	db24      	blt.n	801560a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80155c0:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 80155c4:	4438      	add	r0, r7
 80155c6:	b200      	sxth	r0, r0
 80155c8:	4286      	cmp	r6, r0
 80155ca:	da1e      	bge.n	801560a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80155cc:	8963      	ldrh	r3, [r4, #10]
 80155ce:	4419      	add	r1, r3
 80155d0:	b209      	sxth	r1, r1
 80155d2:	4541      	cmp	r1, r8
 80155d4:	db08      	blt.n	80155e8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80155d6:	4561      	cmp	r1, ip
 80155d8:	da06      	bge.n	80155e8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80155da:	89a3      	ldrh	r3, [r4, #12]
 80155dc:	441a      	add	r2, r3
 80155de:	b212      	sxth	r2, r2
 80155e0:	42ba      	cmp	r2, r7
 80155e2:	db01      	blt.n	80155e8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80155e4:	4282      	cmp	r2, r0
 80155e6:	db10      	blt.n	801560a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80155e8:	4b21      	ldr	r3, [pc, #132]	; (8015670 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 80155ea:	9304      	str	r3, [sp, #16]
 80155ec:	2302      	movs	r3, #2
 80155ee:	f88d 3014 	strb.w	r3, [sp, #20]
 80155f2:	6b28      	ldr	r0, [r5, #48]	; 0x30
 80155f4:	2300      	movs	r3, #0
 80155f6:	f8ad 3016 	strh.w	r3, [sp, #22]
 80155fa:	f8ad 3018 	strh.w	r3, [sp, #24]
 80155fe:	f8ad 301a 	strh.w	r3, [sp, #26]
 8015602:	6803      	ldr	r3, [r0, #0]
 8015604:	a904      	add	r1, sp, #16
 8015606:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015608:	4798      	blx	r3
 801560a:	1d29      	adds	r1, r5, #4
 801560c:	a802      	add	r0, sp, #8
 801560e:	f7ff fd7b 	bl	8015108 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015612:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8015616:	88e0      	ldrh	r0, [r4, #6]
 8015618:	7921      	ldrb	r1, [r4, #4]
 801561a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 801561e:	8922      	ldrh	r2, [r4, #8]
 8015620:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8015622:	f88d 1014 	strb.w	r1, [sp, #20]
 8015626:	eba3 0808 	sub.w	r8, r3, r8
 801562a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801562e:	1bdf      	subs	r7, r3, r7
 8015630:	b2bb      	uxth	r3, r7
 8015632:	fa1f f888 	uxth.w	r8, r8
 8015636:	8967      	ldrh	r7, [r4, #10]
 8015638:	89a4      	ldrh	r4, [r4, #12]
 801563a:	4440      	add	r0, r8
 801563c:	4460      	add	r0, ip
 801563e:	441a      	add	r2, r3
 8015640:	44b8      	add	r8, r7
 8015642:	4423      	add	r3, r4
 8015644:	f8ad 0016 	strh.w	r0, [sp, #22]
 8015648:	4433      	add	r3, r6
 801564a:	4432      	add	r2, r6
 801564c:	44e0      	add	r8, ip
 801564e:	4c09      	ldr	r4, [pc, #36]	; (8015674 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8015650:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8015652:	9404      	str	r4, [sp, #16]
 8015654:	f8ad 2018 	strh.w	r2, [sp, #24]
 8015658:	f8ad 801a 	strh.w	r8, [sp, #26]
 801565c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8015660:	6803      	ldr	r3, [r0, #0]
 8015662:	a904      	add	r1, sp, #16
 8015664:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015666:	4798      	blx	r3
 8015668:	b008      	add	sp, #32
 801566a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801566e:	bf00      	nop
 8015670:	0802b8e8 	.word	0x0802b8e8
 8015674:	0802b8fc 	.word	0x0802b8fc

08015678 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8015678:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801567a:	4604      	mov	r4, r0
 801567c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8015680:	3201      	adds	r2, #1
 8015682:	d112      	bne.n	80156aa <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8015684:	6803      	ldr	r3, [r0, #0]
 8015686:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801568a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801568e:	f8ad 1004 	strh.w	r1, [sp, #4]
 8015692:	2500      	movs	r5, #0
 8015694:	9500      	str	r5, [sp, #0]
 8015696:	466d      	mov	r5, sp
 8015698:	4629      	mov	r1, r5
 801569a:	f8ad 2006 	strh.w	r2, [sp, #6]
 801569e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80156a0:	4798      	blx	r3
 80156a2:	e895 0003 	ldmia.w	r5, {r0, r1}
 80156a6:	e884 0003 	stmia.w	r4, {r0, r1}
 80156aa:	4620      	mov	r0, r4
 80156ac:	b003      	add	sp, #12
 80156ae:	bd30      	pop	{r4, r5, pc}

080156b0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 80156b0:	b513      	push	{r0, r1, r4, lr}
 80156b2:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 80156b6:	3301      	adds	r3, #1
 80156b8:	4604      	mov	r4, r0
 80156ba:	d109      	bne.n	80156d0 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 80156bc:	4601      	mov	r1, r0
 80156be:	4668      	mov	r0, sp
 80156c0:	f7ff fd22 	bl	8015108 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80156c4:	f8bd 3000 	ldrh.w	r3, [sp]
 80156c8:	8423      	strh	r3, [r4, #32]
 80156ca:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80156ce:	8463      	strh	r3, [r4, #34]	; 0x22
 80156d0:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 80156d4:	b002      	add	sp, #8
 80156d6:	bd10      	pop	{r4, pc}

080156d8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 80156d8:	b513      	push	{r0, r1, r4, lr}
 80156da:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 80156de:	3301      	adds	r3, #1
 80156e0:	4604      	mov	r4, r0
 80156e2:	d109      	bne.n	80156f8 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 80156e4:	4601      	mov	r1, r0
 80156e6:	4668      	mov	r0, sp
 80156e8:	f7ff fd0e 	bl	8015108 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80156ec:	f8bd 3000 	ldrh.w	r3, [sp]
 80156f0:	8423      	strh	r3, [r4, #32]
 80156f2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80156f6:	8463      	strh	r3, [r4, #34]	; 0x22
 80156f8:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 80156fc:	b002      	add	sp, #8
 80156fe:	bd10      	pop	{r4, pc}

08015700 <_ZN8touchgfx6ScreenC1Ev>:
 8015700:	b570      	push	{r4, r5, r6, lr}
 8015702:	4605      	mov	r5, r0
 8015704:	4b16      	ldr	r3, [pc, #88]	; (8015760 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8015706:	f845 3b04 	str.w	r3, [r5], #4
 801570a:	2300      	movs	r3, #0
 801570c:	8103      	strh	r3, [r0, #8]
 801570e:	8143      	strh	r3, [r0, #10]
 8015710:	8183      	strh	r3, [r0, #12]
 8015712:	81c3      	strh	r3, [r0, #14]
 8015714:	8203      	strh	r3, [r0, #16]
 8015716:	8243      	strh	r3, [r0, #18]
 8015718:	8283      	strh	r3, [r0, #20]
 801571a:	82c3      	strh	r3, [r0, #22]
 801571c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8015720:	6203      	str	r3, [r0, #32]
 8015722:	8483      	strh	r3, [r0, #36]	; 0x24
 8015724:	84c3      	strh	r3, [r0, #38]	; 0x26
 8015726:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 801572a:	4a0e      	ldr	r2, [pc, #56]	; (8015764 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 801572c:	6343      	str	r3, [r0, #52]	; 0x34
 801572e:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8015732:	4b0d      	ldr	r3, [pc, #52]	; (8015768 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8015734:	6042      	str	r2, [r0, #4]
 8015736:	f9b3 6000 	ldrsh.w	r6, [r3]
 801573a:	6b93      	ldr	r3, [r2, #56]	; 0x38
 801573c:	4a0b      	ldr	r2, [pc, #44]	; (801576c <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 801573e:	4604      	mov	r4, r0
 8015740:	2101      	movs	r1, #1
 8015742:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8015746:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 801574a:	f9b2 1000 	ldrsh.w	r1, [r2]
 801574e:	4628      	mov	r0, r5
 8015750:	4798      	blx	r3
 8015752:	6863      	ldr	r3, [r4, #4]
 8015754:	4628      	mov	r0, r5
 8015756:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8015758:	4631      	mov	r1, r6
 801575a:	4798      	blx	r3
 801575c:	4620      	mov	r0, r4
 801575e:	bd70      	pop	{r4, r5, r6, pc}
 8015760:	0802b924 	.word	0x0802b924
 8015764:	0802b188 	.word	0x0802b188
 8015768:	200137b2 	.word	0x200137b2
 801576c:	200137b0 	.word	0x200137b0

08015770 <_ZN8touchgfx6Screen4drawEv>:
 8015770:	b507      	push	{r0, r1, r2, lr}
 8015772:	4b09      	ldr	r3, [pc, #36]	; (8015798 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8015774:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015778:	4b08      	ldr	r3, [pc, #32]	; (801579c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801577a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801577e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015782:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015786:	6803      	ldr	r3, [r0, #0]
 8015788:	2100      	movs	r1, #0
 801578a:	9100      	str	r1, [sp, #0]
 801578c:	689b      	ldr	r3, [r3, #8]
 801578e:	4669      	mov	r1, sp
 8015790:	4798      	blx	r3
 8015792:	b003      	add	sp, #12
 8015794:	f85d fb04 	ldr.w	pc, [sp], #4
 8015798:	200137b0 	.word	0x200137b0
 801579c:	200137b2 	.word	0x200137b2

080157a0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 80157a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80157a4:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 80157a8:	2b00      	cmp	r3, #0
 80157aa:	b089      	sub	sp, #36	; 0x24
 80157ac:	4680      	mov	r8, r0
 80157ae:	460c      	mov	r4, r1
 80157b0:	4615      	mov	r5, r2
 80157b2:	dd0e      	ble.n	80157d2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80157b4:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 80157b8:	2b00      	cmp	r3, #0
 80157ba:	dd0a      	ble.n	80157d2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80157bc:	4628      	mov	r0, r5
 80157be:	f7ff ff5b 	bl	8015678 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80157c2:	4621      	mov	r1, r4
 80157c4:	f7fe fa3d 	bl	8013c42 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80157c8:	69eb      	ldr	r3, [r5, #28]
 80157ca:	b928      	cbnz	r0, 80157d8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 80157cc:	461d      	mov	r5, r3
 80157ce:	2b00      	cmp	r3, #0
 80157d0:	d1f4      	bne.n	80157bc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 80157d2:	b009      	add	sp, #36	; 0x24
 80157d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80157d8:	ae04      	add	r6, sp, #16
 80157da:	2b00      	cmp	r3, #0
 80157dc:	f000 80b5 	beq.w	801594a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80157e0:	682b      	ldr	r3, [r5, #0]
 80157e2:	4629      	mov	r1, r5
 80157e4:	68db      	ldr	r3, [r3, #12]
 80157e6:	a802      	add	r0, sp, #8
 80157e8:	4798      	blx	r3
 80157ea:	4628      	mov	r0, r5
 80157ec:	f7ff ff60 	bl	80156b0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80157f0:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 80157f4:	4407      	add	r7, r0
 80157f6:	4628      	mov	r0, r5
 80157f8:	f7ff ff6e 	bl	80156d8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80157fc:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8015800:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8015804:	f8ad 2014 	strh.w	r2, [sp, #20]
 8015808:	4418      	add	r0, r3
 801580a:	4621      	mov	r1, r4
 801580c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8015810:	f8ad 0012 	strh.w	r0, [sp, #18]
 8015814:	b23f      	sxth	r7, r7
 8015816:	4630      	mov	r0, r6
 8015818:	f8ad 3016 	strh.w	r3, [sp, #22]
 801581c:	f8ad 7010 	strh.w	r7, [sp, #16]
 8015820:	f7f9 f9dc 	bl	800ebdc <_ZN8touchgfx4RectaNERKS0_>
 8015824:	4628      	mov	r0, r5
 8015826:	f7ff ff27 	bl	8015678 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801582a:	4602      	mov	r2, r0
 801582c:	e896 0003 	ldmia.w	r6, {r0, r1}
 8015830:	ab06      	add	r3, sp, #24
 8015832:	e883 0003 	stmia.w	r3, {r0, r1}
 8015836:	4611      	mov	r1, r2
 8015838:	4618      	mov	r0, r3
 801583a:	f7f9 f9cf 	bl	800ebdc <_ZN8touchgfx4RectaNERKS0_>
 801583e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8015842:	f9b4 1000 	ldrsh.w	r1, [r4]
 8015846:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801584a:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801584e:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8015852:	4299      	cmp	r1, r3
 8015854:	d10b      	bne.n	801586e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8015856:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801585a:	4552      	cmp	r2, sl
 801585c:	d107      	bne.n	801586e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801585e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8015862:	455a      	cmp	r2, fp
 8015864:	d103      	bne.n	801586e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8015866:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801586a:	454a      	cmp	r2, r9
 801586c:	d06d      	beq.n	801594a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801586e:	f1bb 0f00 	cmp.w	fp, #0
 8015872:	dd65      	ble.n	8015940 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8015874:	f1b9 0f00 	cmp.w	r9, #0
 8015878:	dd62      	ble.n	8015940 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801587a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801587e:	fa1f f08a 	uxth.w	r0, sl
 8015882:	4552      	cmp	r2, sl
 8015884:	9000      	str	r0, [sp, #0]
 8015886:	da12      	bge.n	80158ae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8015888:	9301      	str	r3, [sp, #4]
 801588a:	9b00      	ldr	r3, [sp, #0]
 801588c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8015890:	f8ad 2012 	strh.w	r2, [sp, #18]
 8015894:	1a9a      	subs	r2, r3, r2
 8015896:	f8ad 1010 	strh.w	r1, [sp, #16]
 801589a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801589e:	f8ad 2016 	strh.w	r2, [sp, #22]
 80158a2:	69ea      	ldr	r2, [r5, #28]
 80158a4:	4631      	mov	r1, r6
 80158a6:	4640      	mov	r0, r8
 80158a8:	f7ff ff7a 	bl	80157a0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80158ac:	9b01      	ldr	r3, [sp, #4]
 80158ae:	f9b4 2000 	ldrsh.w	r2, [r4]
 80158b2:	429a      	cmp	r2, r3
 80158b4:	b29f      	uxth	r7, r3
 80158b6:	da0d      	bge.n	80158d4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 80158b8:	f8ad 2010 	strh.w	r2, [sp, #16]
 80158bc:	1aba      	subs	r2, r7, r2
 80158be:	f8ad a012 	strh.w	sl, [sp, #18]
 80158c2:	f8ad 2014 	strh.w	r2, [sp, #20]
 80158c6:	f8ad 9016 	strh.w	r9, [sp, #22]
 80158ca:	69ea      	ldr	r2, [r5, #28]
 80158cc:	4631      	mov	r1, r6
 80158ce:	4640      	mov	r0, r8
 80158d0:	f7ff ff66 	bl	80157a0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80158d4:	8822      	ldrh	r2, [r4, #0]
 80158d6:	88a3      	ldrh	r3, [r4, #4]
 80158d8:	445f      	add	r7, fp
 80158da:	4413      	add	r3, r2
 80158dc:	b29b      	uxth	r3, r3
 80158de:	b2bf      	uxth	r7, r7
 80158e0:	b23a      	sxth	r2, r7
 80158e2:	b219      	sxth	r1, r3
 80158e4:	4291      	cmp	r1, r2
 80158e6:	dd0d      	ble.n	8015904 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 80158e8:	1bdb      	subs	r3, r3, r7
 80158ea:	f8ad 2010 	strh.w	r2, [sp, #16]
 80158ee:	f8ad a012 	strh.w	sl, [sp, #18]
 80158f2:	f8ad 3014 	strh.w	r3, [sp, #20]
 80158f6:	f8ad 9016 	strh.w	r9, [sp, #22]
 80158fa:	69ea      	ldr	r2, [r5, #28]
 80158fc:	4631      	mov	r1, r6
 80158fe:	4640      	mov	r0, r8
 8015900:	f7ff ff4e 	bl	80157a0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8015904:	88e2      	ldrh	r2, [r4, #6]
 8015906:	8863      	ldrh	r3, [r4, #2]
 8015908:	4413      	add	r3, r2
 801590a:	9a00      	ldr	r2, [sp, #0]
 801590c:	444a      	add	r2, r9
 801590e:	b29b      	uxth	r3, r3
 8015910:	fa1f f982 	uxth.w	r9, r2
 8015914:	fa0f f289 	sxth.w	r2, r9
 8015918:	b219      	sxth	r1, r3
 801591a:	428a      	cmp	r2, r1
 801591c:	da15      	bge.n	801594a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801591e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8015922:	f9b4 0000 	ldrsh.w	r0, [r4]
 8015926:	f8ad 1014 	strh.w	r1, [sp, #20]
 801592a:	eba3 0309 	sub.w	r3, r3, r9
 801592e:	f8ad 0010 	strh.w	r0, [sp, #16]
 8015932:	f8ad 2012 	strh.w	r2, [sp, #18]
 8015936:	f8ad 3016 	strh.w	r3, [sp, #22]
 801593a:	69ea      	ldr	r2, [r5, #28]
 801593c:	4631      	mov	r1, r6
 801593e:	e001      	b.n	8015944 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8015940:	69ea      	ldr	r2, [r5, #28]
 8015942:	4621      	mov	r1, r4
 8015944:	4640      	mov	r0, r8
 8015946:	f7ff ff2b 	bl	80157a0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801594a:	4628      	mov	r0, r5
 801594c:	f7ff fe94 	bl	8015678 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8015950:	6861      	ldr	r1, [r4, #4]
 8015952:	4602      	mov	r2, r0
 8015954:	6820      	ldr	r0, [r4, #0]
 8015956:	4633      	mov	r3, r6
 8015958:	c303      	stmia	r3!, {r0, r1}
 801595a:	4611      	mov	r1, r2
 801595c:	4630      	mov	r0, r6
 801595e:	f7f9 f93d 	bl	800ebdc <_ZN8touchgfx4RectaNERKS0_>
 8015962:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8015966:	2b00      	cmp	r3, #0
 8015968:	f77f af33 	ble.w	80157d2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801596c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8015970:	2b00      	cmp	r3, #0
 8015972:	f77f af2e 	ble.w	80157d2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8015976:	4628      	mov	r0, r5
 8015978:	f7ff fe9a 	bl	80156b0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801597c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8015980:	1a18      	subs	r0, r3, r0
 8015982:	f8ad 0010 	strh.w	r0, [sp, #16]
 8015986:	4628      	mov	r0, r5
 8015988:	f7ff fea6 	bl	80156d8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801598c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8015990:	1a18      	subs	r0, r3, r0
 8015992:	f8ad 0012 	strh.w	r0, [sp, #18]
 8015996:	682b      	ldr	r3, [r5, #0]
 8015998:	4631      	mov	r1, r6
 801599a:	689b      	ldr	r3, [r3, #8]
 801599c:	4628      	mov	r0, r5
 801599e:	4798      	blx	r3
 80159a0:	e717      	b.n	80157d2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

080159a2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 80159a2:	b570      	push	{r4, r5, r6, lr}
 80159a4:	460c      	mov	r4, r1
 80159a6:	b086      	sub	sp, #24
 80159a8:	1d06      	adds	r6, r0, #4
 80159aa:	2300      	movs	r3, #0
 80159ac:	4631      	mov	r1, r6
 80159ae:	4605      	mov	r5, r0
 80159b0:	a802      	add	r0, sp, #8
 80159b2:	9301      	str	r3, [sp, #4]
 80159b4:	f7ff fba8 	bl	8015108 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80159b8:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80159bc:	8822      	ldrh	r2, [r4, #0]
 80159be:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 80159c2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80159c6:	f8ad 0014 	strh.w	r0, [sp, #20]
 80159ca:	1ad2      	subs	r2, r2, r3
 80159cc:	8863      	ldrh	r3, [r4, #2]
 80159ce:	f8ad 2010 	strh.w	r2, [sp, #16]
 80159d2:	1a5b      	subs	r3, r3, r1
 80159d4:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 80159d8:	f8ad 1016 	strh.w	r1, [sp, #22]
 80159dc:	aa01      	add	r2, sp, #4
 80159de:	a904      	add	r1, sp, #16
 80159e0:	4630      	mov	r0, r6
 80159e2:	f8ad 3012 	strh.w	r3, [sp, #18]
 80159e6:	f7f9 f9d1 	bl	800ed8c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 80159ea:	9a01      	ldr	r2, [sp, #4]
 80159ec:	b11a      	cbz	r2, 80159f6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 80159ee:	4621      	mov	r1, r4
 80159f0:	4628      	mov	r0, r5
 80159f2:	f7ff fed5 	bl	80157a0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80159f6:	b006      	add	sp, #24
 80159f8:	bd70      	pop	{r4, r5, r6, pc}

080159fa <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 80159fa:	b530      	push	{r4, r5, lr}
 80159fc:	4602      	mov	r2, r0
 80159fe:	4604      	mov	r4, r0
 8015a00:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8015a04:	b085      	sub	sp, #20
 8015a06:	460d      	mov	r5, r1
 8015a08:	6851      	ldr	r1, [r2, #4]
 8015a0a:	466b      	mov	r3, sp
 8015a0c:	c303      	stmia	r3!, {r0, r1}
 8015a0e:	4629      	mov	r1, r5
 8015a10:	4668      	mov	r0, sp
 8015a12:	f7f9 f8e3 	bl	800ebdc <_ZN8touchgfx4RectaNERKS0_>
 8015a16:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8015a1a:	b12b      	cbz	r3, 8015a28 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8015a1c:	4669      	mov	r1, sp
 8015a1e:	4620      	mov	r0, r4
 8015a20:	f7ff ffbf 	bl	80159a2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8015a24:	b005      	add	sp, #20
 8015a26:	bd30      	pop	{r4, r5, pc}
 8015a28:	3404      	adds	r4, #4
 8015a2a:	4621      	mov	r1, r4
 8015a2c:	a802      	add	r0, sp, #8
 8015a2e:	f7ff fb6b 	bl	8015108 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015a32:	f8bd 3000 	ldrh.w	r3, [sp]
 8015a36:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8015a3a:	1a9b      	subs	r3, r3, r2
 8015a3c:	f8ad 3000 	strh.w	r3, [sp]
 8015a40:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8015a44:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8015a48:	4669      	mov	r1, sp
 8015a4a:	1a9b      	subs	r3, r3, r2
 8015a4c:	4620      	mov	r0, r4
 8015a4e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8015a52:	f7f9 f962 	bl	800ed1a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8015a56:	e7e5      	b.n	8015a24 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08015a58 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8015a58:	680a      	ldr	r2, [r1, #0]
 8015a5a:	460b      	mov	r3, r1
 8015a5c:	6992      	ldr	r2, [r2, #24]
 8015a5e:	1d01      	adds	r1, r0, #4
 8015a60:	4618      	mov	r0, r3
 8015a62:	4710      	bx	r2

08015a64 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8015a64:	4298      	cmp	r0, r3
 8015a66:	d200      	bcs.n	8015a6a <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8015a68:	b913      	cbnz	r3, 8015a70 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 8015a6a:	440a      	add	r2, r1
 8015a6c:	b210      	sxth	r0, r2
 8015a6e:	4770      	bx	lr
 8015a70:	ee07 0a90 	vmov	s15, r0
 8015a74:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8015a78:	ee07 3a90 	vmov	s15, r3
 8015a7c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015a80:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8015a84:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015a88:	ee37 7a66 	vsub.f32	s14, s14, s13
 8015a8c:	ee07 2a90 	vmov	s15, r2
 8015a90:	ee67 5a07 	vmul.f32	s11, s14, s14
 8015a94:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8015a98:	eee5 6a87 	vfma.f32	s13, s11, s14
 8015a9c:	ee07 1a90 	vmov	s15, r1
 8015aa0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015aa4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8015aa8:	eee6 7a26 	vfma.f32	s15, s12, s13
 8015aac:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8015ab0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015ab4:	bfcc      	ite	gt
 8015ab6:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8015aba:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8015abe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8015ac2:	ee17 3a90 	vmov	r3, s15
 8015ac6:	b218      	sxth	r0, r3
 8015ac8:	4770      	bx	lr

08015aca <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 8015aca:	4298      	cmp	r0, r3
 8015acc:	d200      	bcs.n	8015ad0 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 8015ace:	b913      	cbnz	r3, 8015ad6 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 8015ad0:	440a      	add	r2, r1
 8015ad2:	b210      	sxth	r0, r2
 8015ad4:	4770      	bx	lr
 8015ad6:	ee07 2a90 	vmov	s15, r2
 8015ada:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8015ade:	ee07 0a90 	vmov	s15, r0
 8015ae2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8015ae6:	ee67 7a27 	vmul.f32	s15, s14, s15
 8015aea:	ee07 3a10 	vmov	s14, r3
 8015aee:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8015af2:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8015af6:	ee07 1a90 	vmov	s15, r1
 8015afa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015afe:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015b02:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8015b06:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8015b0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015b0e:	bfcc      	ite	gt
 8015b10:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8015b14:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8015b18:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8015b1c:	ee17 3a90 	vmov	r3, s15
 8015b20:	b218      	sxth	r0, r3
 8015b22:	4770      	bx	lr

08015b24 <_ZN8touchgfx12TextProviderC1Ev>:
 8015b24:	b538      	push	{r3, r4, r5, lr}
 8015b26:	2500      	movs	r5, #0
 8015b28:	2302      	movs	r3, #2
 8015b2a:	4604      	mov	r4, r0
 8015b2c:	e9c0 5500 	strd	r5, r5, [r0]
 8015b30:	7403      	strb	r3, [r0, #16]
 8015b32:	6145      	str	r5, [r0, #20]
 8015b34:	7605      	strb	r5, [r0, #24]
 8015b36:	83c5      	strh	r5, [r0, #30]
 8015b38:	8405      	strh	r5, [r0, #32]
 8015b3a:	86c5      	strh	r5, [r0, #54]	; 0x36
 8015b3c:	8705      	strh	r5, [r0, #56]	; 0x38
 8015b3e:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8015b40:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8015b44:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8015b48:	220e      	movs	r2, #14
 8015b4a:	4629      	mov	r1, r5
 8015b4c:	304c      	adds	r0, #76	; 0x4c
 8015b4e:	f011 feac 	bl	80278aa <memset>
 8015b52:	2301      	movs	r3, #1
 8015b54:	4620      	mov	r0, r4
 8015b56:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8015b5a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8015b5e:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8015b62:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8015b66:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8015b6a:	f7f1 f9d7 	bl	8006f1c <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8015b6e:	4620      	mov	r0, r4
 8015b70:	bd38      	pop	{r3, r4, r5, pc}

08015b72 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8015b72:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8015b74:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015b78:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8015b7a:	fab0 f080 	clz	r0, r0
 8015b7e:	0940      	lsrs	r0, r0, #5
 8015b80:	4770      	bx	lr

08015b82 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8015b82:	b530      	push	{r4, r5, lr}
 8015b84:	2500      	movs	r5, #0
 8015b86:	2401      	movs	r4, #1
 8015b88:	6843      	ldr	r3, [r0, #4]
 8015b8a:	b913      	cbnz	r3, 8015b92 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8015b8c:	6803      	ldr	r3, [r0, #0]
 8015b8e:	b313      	cbz	r3, 8015bd6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8015b90:	6043      	str	r3, [r0, #4]
 8015b92:	7e03      	ldrb	r3, [r0, #24]
 8015b94:	b143      	cbz	r3, 8015ba8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8015b96:	6943      	ldr	r3, [r0, #20]
 8015b98:	b12b      	cbz	r3, 8015ba6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8015b9a:	881a      	ldrh	r2, [r3, #0]
 8015b9c:	b11a      	cbz	r2, 8015ba6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8015b9e:	1c9a      	adds	r2, r3, #2
 8015ba0:	6142      	str	r2, [r0, #20]
 8015ba2:	8818      	ldrh	r0, [r3, #0]
 8015ba4:	bd30      	pop	{r4, r5, pc}
 8015ba6:	7605      	strb	r5, [r0, #24]
 8015ba8:	6843      	ldr	r3, [r0, #4]
 8015baa:	8819      	ldrh	r1, [r3, #0]
 8015bac:	b199      	cbz	r1, 8015bd6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8015bae:	1c9a      	adds	r2, r3, #2
 8015bb0:	2902      	cmp	r1, #2
 8015bb2:	6042      	str	r2, [r0, #4]
 8015bb4:	d1f5      	bne.n	8015ba2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8015bb6:	7c03      	ldrb	r3, [r0, #16]
 8015bb8:	2b01      	cmp	r3, #1
 8015bba:	d8e5      	bhi.n	8015b88 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8015bbc:	1c5a      	adds	r2, r3, #1
 8015bbe:	3302      	adds	r3, #2
 8015bc0:	7402      	strb	r2, [r0, #16]
 8015bc2:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8015bc6:	6143      	str	r3, [r0, #20]
 8015bc8:	2b00      	cmp	r3, #0
 8015bca:	d0dd      	beq.n	8015b88 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8015bcc:	881b      	ldrh	r3, [r3, #0]
 8015bce:	2b00      	cmp	r3, #0
 8015bd0:	d0da      	beq.n	8015b88 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8015bd2:	7604      	strb	r4, [r0, #24]
 8015bd4:	e7d8      	b.n	8015b88 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8015bd6:	2000      	movs	r0, #0
 8015bd8:	e7e4      	b.n	8015ba4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08015bda <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8015bda:	b430      	push	{r4, r5}
 8015bdc:	6001      	str	r1, [r0, #0]
 8015bde:	2100      	movs	r1, #0
 8015be0:	6041      	str	r1, [r0, #4]
 8015be2:	6815      	ldr	r5, [r2, #0]
 8015be4:	6085      	str	r5, [r0, #8]
 8015be6:	6852      	ldr	r2, [r2, #4]
 8015be8:	6443      	str	r3, [r0, #68]	; 0x44
 8015bea:	9b02      	ldr	r3, [sp, #8]
 8015bec:	60c2      	str	r2, [r0, #12]
 8015bee:	7401      	strb	r1, [r0, #16]
 8015bf0:	6141      	str	r1, [r0, #20]
 8015bf2:	7601      	strb	r1, [r0, #24]
 8015bf4:	8701      	strh	r1, [r0, #56]	; 0x38
 8015bf6:	8401      	strh	r1, [r0, #32]
 8015bf8:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8015bfc:	6483      	str	r3, [r0, #72]	; 0x48
 8015bfe:	bc30      	pop	{r4, r5}
 8015c00:	f7f1 b98c 	b.w	8006f1c <_ZN8touchgfx12TextProvider18initializeInternalEv>

08015c04 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8015c04:	b408      	push	{r3}
 8015c06:	b510      	push	{r4, lr}
 8015c08:	b085      	sub	sp, #20
 8015c0a:	ac07      	add	r4, sp, #28
 8015c0c:	f854 3b04 	ldr.w	r3, [r4], #4
 8015c10:	9300      	str	r3, [sp, #0]
 8015c12:	4613      	mov	r3, r2
 8015c14:	4622      	mov	r2, r4
 8015c16:	9403      	str	r4, [sp, #12]
 8015c18:	f7ff ffdf 	bl	8015bda <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015c1c:	b005      	add	sp, #20
 8015c1e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015c22:	b001      	add	sp, #4
 8015c24:	4770      	bx	lr

08015c26 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8015c26:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015c28:	4605      	mov	r5, r0
 8015c2a:	4608      	mov	r0, r1
 8015c2c:	b1e9      	cbz	r1, 8015c6a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8015c2e:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8015c32:	460b      	mov	r3, r1
 8015c34:	f101 0708 	add.w	r7, r1, #8
 8015c38:	4622      	mov	r2, r4
 8015c3a:	6818      	ldr	r0, [r3, #0]
 8015c3c:	6859      	ldr	r1, [r3, #4]
 8015c3e:	4626      	mov	r6, r4
 8015c40:	c603      	stmia	r6!, {r0, r1}
 8015c42:	3308      	adds	r3, #8
 8015c44:	42bb      	cmp	r3, r7
 8015c46:	4634      	mov	r4, r6
 8015c48:	d1f7      	bne.n	8015c3a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8015c4a:	6818      	ldr	r0, [r3, #0]
 8015c4c:	6030      	str	r0, [r6, #0]
 8015c4e:	889b      	ldrh	r3, [r3, #4]
 8015c50:	80b3      	strh	r3, [r6, #4]
 8015c52:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8015c56:	015b      	lsls	r3, r3, #5
 8015c58:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8015c5c:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8015c60:	430b      	orrs	r3, r1
 8015c62:	425b      	negs	r3, r3
 8015c64:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8015c68:	4610      	mov	r0, r2
 8015c6a:	bdf0      	pop	{r4, r5, r6, r7, pc}

08015c6c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8015c6c:	b538      	push	{r3, r4, r5, lr}
 8015c6e:	460c      	mov	r4, r1
 8015c70:	6811      	ldr	r1, [r2, #0]
 8015c72:	4610      	mov	r0, r2
 8015c74:	68cd      	ldr	r5, [r1, #12]
 8015c76:	4619      	mov	r1, r3
 8015c78:	47a8      	blx	r5
 8015c7a:	2800      	cmp	r0, #0
 8015c7c:	bf08      	it	eq
 8015c7e:	4620      	moveq	r0, r4
 8015c80:	bd38      	pop	{r3, r4, r5, pc}
	...

08015c84 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8015c84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015c86:	4604      	mov	r4, r0
 8015c88:	4615      	mov	r5, r2
 8015c8a:	4608      	mov	r0, r1
 8015c8c:	b93a      	cbnz	r2, 8015c9e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8015c8e:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8015c92:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8015c96:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8015c9a:	4628      	mov	r0, r5
 8015c9c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015c9e:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8015ca2:	8893      	ldrh	r3, [r2, #4]
 8015ca4:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8015ca8:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8015cac:	79ee      	ldrb	r6, [r5, #7]
 8015cae:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8015cb2:	4316      	orrs	r6, r2
 8015cb4:	19da      	adds	r2, r3, r7
 8015cb6:	b291      	uxth	r1, r2
 8015cb8:	291d      	cmp	r1, #29
 8015cba:	b2b7      	uxth	r7, r6
 8015cbc:	d87a      	bhi.n	8015db4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8015cbe:	2201      	movs	r2, #1
 8015cc0:	408a      	lsls	r2, r1
 8015cc2:	4975      	ldr	r1, [pc, #468]	; (8015e98 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8015cc4:	420a      	tst	r2, r1
 8015cc6:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8015cca:	d12d      	bne.n	8015d28 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8015ccc:	f412 7f60 	tst.w	r2, #896	; 0x380
 8015cd0:	d070      	beq.n	8015db4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8015cd2:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8015cd6:	462b      	mov	r3, r5
 8015cd8:	f105 0e08 	add.w	lr, r5, #8
 8015cdc:	4615      	mov	r5, r2
 8015cde:	6818      	ldr	r0, [r3, #0]
 8015ce0:	6859      	ldr	r1, [r3, #4]
 8015ce2:	4694      	mov	ip, r2
 8015ce4:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8015ce8:	3308      	adds	r3, #8
 8015cea:	4573      	cmp	r3, lr
 8015cec:	4662      	mov	r2, ip
 8015cee:	d1f6      	bne.n	8015cde <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8015cf0:	6818      	ldr	r0, [r3, #0]
 8015cf2:	f8cc 0000 	str.w	r0, [ip]
 8015cf6:	889b      	ldrh	r3, [r3, #4]
 8015cf8:	f8ac 3004 	strh.w	r3, [ip, #4]
 8015cfc:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8015d00:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8015d04:	b2b3      	uxth	r3, r6
 8015d06:	1aca      	subs	r2, r1, r3
 8015d08:	b292      	uxth	r2, r2
 8015d0a:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8015d0e:	10d2      	asrs	r2, r2, #3
 8015d10:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8015d14:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8015d18:	4302      	orrs	r2, r0
 8015d1a:	1bcf      	subs	r7, r1, r7
 8015d1c:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8015d20:	1afb      	subs	r3, r7, r3
 8015d22:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8015d26:	e7b8      	b.n	8015c9a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8015d28:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8015d2a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8015d2e:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8015d30:	f640 6333 	movw	r3, #3635	; 0xe33
 8015d34:	4299      	cmp	r1, r3
 8015d36:	d110      	bne.n	8015d5a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8015d38:	6803      	ldr	r3, [r0, #0]
 8015d3a:	68db      	ldr	r3, [r3, #12]
 8015d3c:	4798      	blx	r3
 8015d3e:	7b41      	ldrb	r1, [r0, #13]
 8015d40:	00cb      	lsls	r3, r1, #3
 8015d42:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8015d46:	7a03      	ldrb	r3, [r0, #8]
 8015d48:	0648      	lsls	r0, r1, #25
 8015d4a:	ea43 0302 	orr.w	r3, r3, r2
 8015d4e:	bf44      	itt	mi
 8015d50:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8015d54:	b21b      	sxthmi	r3, r3
 8015d56:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8015d5a:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8015d5e:	443b      	add	r3, r7
 8015d60:	4433      	add	r3, r6
 8015d62:	b29b      	uxth	r3, r3
 8015d64:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8015d68:	462a      	mov	r2, r5
 8015d6a:	f105 0c08 	add.w	ip, r5, #8
 8015d6e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8015d72:	4635      	mov	r5, r6
 8015d74:	6810      	ldr	r0, [r2, #0]
 8015d76:	6851      	ldr	r1, [r2, #4]
 8015d78:	4637      	mov	r7, r6
 8015d7a:	c703      	stmia	r7!, {r0, r1}
 8015d7c:	3208      	adds	r2, #8
 8015d7e:	4562      	cmp	r2, ip
 8015d80:	463e      	mov	r6, r7
 8015d82:	d1f7      	bne.n	8015d74 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8015d84:	6810      	ldr	r0, [r2, #0]
 8015d86:	6038      	str	r0, [r7, #0]
 8015d88:	8892      	ldrh	r2, [r2, #4]
 8015d8a:	80ba      	strh	r2, [r7, #4]
 8015d8c:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8015d90:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8015d94:	10db      	asrs	r3, r3, #3
 8015d96:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8015d9a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8015d9e:	4313      	orrs	r3, r2
 8015da0:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8015da4:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8015da8:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8015dac:	1a9b      	subs	r3, r3, r2
 8015dae:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8015db2:	e772      	b.n	8015c9a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8015db4:	f023 0204 	bic.w	r2, r3, #4
 8015db8:	f640 611b 	movw	r1, #3611	; 0xe1b
 8015dbc:	428a      	cmp	r2, r1
 8015dbe:	d003      	beq.n	8015dc8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8015dc0:	f640 621d 	movw	r2, #3613	; 0xe1d
 8015dc4:	4293      	cmp	r3, r2
 8015dc6:	d120      	bne.n	8015e0a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8015dc8:	3b01      	subs	r3, #1
 8015dca:	4602      	mov	r2, r0
 8015dcc:	b29b      	uxth	r3, r3
 8015dce:	4629      	mov	r1, r5
 8015dd0:	4620      	mov	r0, r4
 8015dd2:	f7ff ff4b 	bl	8015c6c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8015dd6:	7b41      	ldrb	r1, [r0, #13]
 8015dd8:	00cb      	lsls	r3, r1, #3
 8015dda:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8015dde:	7a03      	ldrb	r3, [r0, #8]
 8015de0:	0649      	lsls	r1, r1, #25
 8015de2:	ea43 0302 	orr.w	r3, r3, r2
 8015de6:	bf44      	itt	mi
 8015de8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8015dec:	b21b      	sxthmi	r3, r3
 8015dee:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8015df2:	7b6b      	ldrb	r3, [r5, #13]
 8015df4:	7aaa      	ldrb	r2, [r5, #10]
 8015df6:	005b      	lsls	r3, r3, #1
 8015df8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8015dfc:	4313      	orrs	r3, r2
 8015dfe:	115a      	asrs	r2, r3, #5
 8015e00:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8015e04:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8015e08:	e036      	b.n	8015e78 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8015e0a:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8015e0e:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8015e12:	7a2a      	ldrb	r2, [r5, #8]
 8015e14:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8015e18:	ea42 0201 	orr.w	r2, r2, r1
 8015e1c:	bf1c      	itt	ne
 8015e1e:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8015e22:	b212      	sxthne	r2, r2
 8015e24:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8015e28:	f640 6109 	movw	r1, #3593	; 0xe09
 8015e2c:	f023 0210 	bic.w	r2, r3, #16
 8015e30:	428a      	cmp	r2, r1
 8015e32:	d003      	beq.n	8015e3c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8015e34:	f640 6213 	movw	r2, #3603	; 0xe13
 8015e38:	4293      	cmp	r3, r2
 8015e3a:	d12a      	bne.n	8015e92 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8015e3c:	7b6e      	ldrb	r6, [r5, #13]
 8015e3e:	0076      	lsls	r6, r6, #1
 8015e40:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8015e44:	7aae      	ldrb	r6, [r5, #10]
 8015e46:	4316      	orrs	r6, r2
 8015e48:	f640 6213 	movw	r2, #3603	; 0xe13
 8015e4c:	4293      	cmp	r3, r2
 8015e4e:	bf18      	it	ne
 8015e50:	f103 33ff 	addne.w	r3, r3, #4294967295
 8015e54:	4602      	mov	r2, r0
 8015e56:	bf14      	ite	ne
 8015e58:	b29b      	uxthne	r3, r3
 8015e5a:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8015e5e:	4629      	mov	r1, r5
 8015e60:	4620      	mov	r0, r4
 8015e62:	f7ff ff03 	bl	8015c6c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8015e66:	7b43      	ldrb	r3, [r0, #13]
 8015e68:	7a82      	ldrb	r2, [r0, #10]
 8015e6a:	005b      	lsls	r3, r3, #1
 8015e6c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8015e70:	4313      	orrs	r3, r2
 8015e72:	1af6      	subs	r6, r6, r3
 8015e74:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8015e78:	7b69      	ldrb	r1, [r5, #13]
 8015e7a:	00cb      	lsls	r3, r1, #3
 8015e7c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8015e80:	7a2b      	ldrb	r3, [r5, #8]
 8015e82:	4313      	orrs	r3, r2
 8015e84:	064a      	lsls	r2, r1, #25
 8015e86:	bf44      	itt	mi
 8015e88:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8015e8c:	b21b      	sxthmi	r3, r3
 8015e8e:	1bdb      	subs	r3, r3, r7
 8015e90:	e747      	b.n	8015d22 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8015e92:	2300      	movs	r3, #0
 8015e94:	e7b6      	b.n	8015e04 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8015e96:	bf00      	nop
 8015e98:	3fc00079 	.word	0x3fc00079

08015e9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8015e9c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8015ea0:	4604      	mov	r4, r0
 8015ea2:	b942      	cbnz	r2, 8015eb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8015ea4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8015ea8:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8015eac:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8015eb0:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8015eb4:	e047      	b.n	8015f46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8015eb6:	7b51      	ldrb	r1, [r2, #13]
 8015eb8:	8893      	ldrh	r3, [r2, #4]
 8015eba:	010d      	lsls	r5, r1, #4
 8015ebc:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8015ec0:	79d5      	ldrb	r5, [r2, #7]
 8015ec2:	4305      	orrs	r5, r0
 8015ec4:	2d04      	cmp	r5, #4
 8015ec6:	bfcc      	ite	gt
 8015ec8:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8015ecc:	f04f 0e01 	movle.w	lr, #1
 8015ed0:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8015ed4:	f200 80ab 	bhi.w	801602e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8015ed8:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8015edc:	4283      	cmp	r3, r0
 8015ede:	d216      	bcs.n	8015f0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015ee0:	f240 605b 	movw	r0, #1627	; 0x65b
 8015ee4:	4283      	cmp	r3, r0
 8015ee6:	d859      	bhi.n	8015f9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8015ee8:	f240 6057 	movw	r0, #1623	; 0x657
 8015eec:	4283      	cmp	r3, r0
 8015eee:	d20e      	bcs.n	8015f0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015ef0:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8015ef4:	d24a      	bcs.n	8015f8c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8015ef6:	f240 604e 	movw	r0, #1614	; 0x64e
 8015efa:	4283      	cmp	r3, r0
 8015efc:	d207      	bcs.n	8015f0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015efe:	f240 601a 	movw	r0, #1562	; 0x61a
 8015f02:	4283      	cmp	r3, r0
 8015f04:	d02a      	beq.n	8015f5c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015f06:	d821      	bhi.n	8015f4c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8015f08:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8015f0c:	d35b      	bcc.n	8015fc6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8015f0e:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8015f12:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8015f16:	f040 80d0 	bne.w	80160ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8015f1a:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8015f1e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8015f22:	f040 80ca 	bne.w	80160ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8015f26:	00cb      	lsls	r3, r1, #3
 8015f28:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8015f2c:	7a13      	ldrb	r3, [r2, #8]
 8015f2e:	0649      	lsls	r1, r1, #25
 8015f30:	ea43 0300 	orr.w	r3, r3, r0
 8015f34:	bf44      	itt	mi
 8015f36:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8015f3a:	b21b      	sxthmi	r3, r3
 8015f3c:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8015f40:	1b5d      	subs	r5, r3, r5
 8015f42:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8015f46:	4610      	mov	r0, r2
 8015f48:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8015f4c:	f240 604b 	movw	r0, #1611	; 0x64b
 8015f50:	4283      	cmp	r3, r0
 8015f52:	d338      	bcc.n	8015fc6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8015f54:	f240 604c 	movw	r0, #1612	; 0x64c
 8015f58:	4283      	cmp	r3, r0
 8015f5a:	d9d8      	bls.n	8015f0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015f5c:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8015f60:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8015f64:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8015f68:	f040 80f2 	bne.w	8016150 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8015f6c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8015f70:	f040 80ee 	bne.w	8016150 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8015f74:	00cb      	lsls	r3, r1, #3
 8015f76:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8015f7a:	7a13      	ldrb	r3, [r2, #8]
 8015f7c:	064e      	lsls	r6, r1, #25
 8015f7e:	ea43 0300 	orr.w	r3, r3, r0
 8015f82:	bf44      	itt	mi
 8015f84:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8015f88:	b21b      	sxthmi	r3, r3
 8015f8a:	e7d9      	b.n	8015f40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8015f8c:	f240 6054 	movw	r0, #1620	; 0x654
 8015f90:	4283      	cmp	r3, r0
 8015f92:	d8e3      	bhi.n	8015f5c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015f94:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8015f98:	d9e0      	bls.n	8015f5c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015f9a:	e7b8      	b.n	8015f0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015f9c:	f240 6074 	movw	r0, #1652	; 0x674
 8015fa0:	4283      	cmp	r3, r0
 8015fa2:	d0b4      	beq.n	8015f0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015fa4:	d82d      	bhi.n	8016002 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8015fa6:	f240 605e 	movw	r0, #1630	; 0x65e
 8015faa:	4283      	cmp	r3, r0
 8015fac:	d804      	bhi.n	8015fb8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8015fae:	f240 605d 	movw	r0, #1629	; 0x65d
 8015fb2:	4283      	cmp	r3, r0
 8015fb4:	d3d2      	bcc.n	8015f5c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015fb6:	e7aa      	b.n	8015f0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015fb8:	f240 605f 	movw	r0, #1631	; 0x65f
 8015fbc:	4283      	cmp	r3, r0
 8015fbe:	d0cd      	beq.n	8015f5c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015fc0:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8015fc4:	d0a3      	beq.n	8015f0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015fc6:	00cb      	lsls	r3, r1, #3
 8015fc8:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8015fcc:	7a13      	ldrb	r3, [r2, #8]
 8015fce:	0649      	lsls	r1, r1, #25
 8015fd0:	ea43 0300 	orr.w	r3, r3, r0
 8015fd4:	bf44      	itt	mi
 8015fd6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8015fda:	b21b      	sxthmi	r3, r3
 8015fdc:	1b5d      	subs	r5, r3, r5
 8015fde:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8015fe2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8015fe6:	7b53      	ldrb	r3, [r2, #13]
 8015fe8:	015b      	lsls	r3, r3, #5
 8015fea:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8015fee:	7993      	ldrb	r3, [r2, #6]
 8015ff0:	430b      	orrs	r3, r1
 8015ff2:	005b      	lsls	r3, r3, #1
 8015ff4:	2105      	movs	r1, #5
 8015ff6:	fb93 f3f1 	sdiv	r3, r3, r1
 8015ffa:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8015ffe:	440b      	add	r3, r1
 8016000:	e756      	b.n	8015eb0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8016002:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8016006:	4283      	cmp	r3, r0
 8016008:	d809      	bhi.n	801601e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 801600a:	f240 60df 	movw	r0, #1759	; 0x6df
 801600e:	4283      	cmp	r3, r0
 8016010:	f4bf af7d 	bcs.w	8015f0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016014:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8016018:	2b05      	cmp	r3, #5
 801601a:	d8d4      	bhi.n	8015fc6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801601c:	e777      	b.n	8015f0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801601e:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8016022:	4283      	cmp	r3, r0
 8016024:	d09a      	beq.n	8015f5c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016026:	f240 60e4 	movw	r0, #1764	; 0x6e4
 801602a:	4283      	cmp	r3, r0
 801602c:	e7ca      	b.n	8015fc4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801602e:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8016032:	d22b      	bcs.n	801608c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8016034:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8016038:	4283      	cmp	r3, r0
 801603a:	d28f      	bcs.n	8015f5c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801603c:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8016040:	4283      	cmp	r3, r0
 8016042:	d816      	bhi.n	8016072 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8016044:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8016048:	4283      	cmp	r3, r0
 801604a:	f4bf af60 	bcs.w	8015f0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801604e:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8016052:	4283      	cmp	r3, r0
 8016054:	d80a      	bhi.n	801606c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8016056:	f240 60eb 	movw	r0, #1771	; 0x6eb
 801605a:	4283      	cmp	r3, r0
 801605c:	f4bf af57 	bcs.w	8015f0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016060:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8016064:	4283      	cmp	r3, r0
 8016066:	f43f af79 	beq.w	8015f5c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801606a:	e7ac      	b.n	8015fc6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801606c:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8016070:	e7f8      	b.n	8016064 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8016072:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8016076:	4283      	cmp	r3, r0
 8016078:	d802      	bhi.n	8016080 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 801607a:	f640 00e7 	movw	r0, #2279	; 0x8e7
 801607e:	e798      	b.n	8015fb2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8016080:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8016084:	4283      	cmp	r3, r0
 8016086:	f47f af42 	bne.w	8015f0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801608a:	e767      	b.n	8015f5c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801608c:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8016090:	4283      	cmp	r3, r0
 8016092:	f43f af63 	beq.w	8015f5c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016096:	d802      	bhi.n	801609e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8016098:	f640 00f2 	movw	r0, #2290	; 0x8f2
 801609c:	e7f2      	b.n	8016084 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 801609e:	f640 00fa 	movw	r0, #2298	; 0x8fa
 80160a2:	4283      	cmp	r3, r0
 80160a4:	d805      	bhi.n	80160b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 80160a6:	f640 00f9 	movw	r0, #2297	; 0x8f9
 80160aa:	4283      	cmp	r3, r0
 80160ac:	f4ff af2f 	bcc.w	8015f0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80160b0:	e754      	b.n	8015f5c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80160b2:	f640 00fe 	movw	r0, #2302	; 0x8fe
 80160b6:	4283      	cmp	r3, r0
 80160b8:	e7af      	b.n	801601a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 80160ba:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 80160be:	4617      	mov	r7, r2
 80160c0:	f102 0808 	add.w	r8, r2, #8
 80160c4:	4666      	mov	r6, ip
 80160c6:	6838      	ldr	r0, [r7, #0]
 80160c8:	6879      	ldr	r1, [r7, #4]
 80160ca:	46e6      	mov	lr, ip
 80160cc:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80160d0:	3708      	adds	r7, #8
 80160d2:	4547      	cmp	r7, r8
 80160d4:	46f4      	mov	ip, lr
 80160d6:	d1f6      	bne.n	80160c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 80160d8:	6838      	ldr	r0, [r7, #0]
 80160da:	f8ce 0000 	str.w	r0, [lr]
 80160de:	88b9      	ldrh	r1, [r7, #4]
 80160e0:	f8ae 1004 	strh.w	r1, [lr, #4]
 80160e4:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 80160e8:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80160ec:	d009      	beq.n	8016102 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 80160ee:	7b51      	ldrb	r1, [r2, #13]
 80160f0:	7992      	ldrb	r2, [r2, #6]
 80160f2:	0149      	lsls	r1, r1, #5
 80160f4:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80160f8:	4311      	orrs	r1, r2
 80160fa:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80160fe:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8016102:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8016106:	b2ad      	uxth	r5, r5
 8016108:	d00d      	beq.n	8016126 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 801610a:	442b      	add	r3, r5
 801610c:	b29b      	uxth	r3, r3
 801610e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8016112:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8016116:	10db      	asrs	r3, r3, #3
 8016118:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801611c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8016120:	4313      	orrs	r3, r2
 8016122:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8016126:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801612a:	00cb      	lsls	r3, r1, #3
 801612c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016130:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8016134:	064f      	lsls	r7, r1, #25
 8016136:	ea43 0302 	orr.w	r3, r3, r2
 801613a:	bf44      	itt	mi
 801613c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016140:	b21b      	sxthmi	r3, r3
 8016142:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016146:	1b5b      	subs	r3, r3, r5
 8016148:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801614c:	4632      	mov	r2, r6
 801614e:	e6fa      	b.n	8015f46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8016150:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8016154:	4617      	mov	r7, r2
 8016156:	f102 0908 	add.w	r9, r2, #8
 801615a:	4666      	mov	r6, ip
 801615c:	6838      	ldr	r0, [r7, #0]
 801615e:	6879      	ldr	r1, [r7, #4]
 8016160:	46e0      	mov	r8, ip
 8016162:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8016166:	3708      	adds	r7, #8
 8016168:	454f      	cmp	r7, r9
 801616a:	46c4      	mov	ip, r8
 801616c:	d1f6      	bne.n	801615c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 801616e:	6838      	ldr	r0, [r7, #0]
 8016170:	f8c8 0000 	str.w	r0, [r8]
 8016174:	88b9      	ldrh	r1, [r7, #4]
 8016176:	f8a8 1004 	strh.w	r1, [r8, #4]
 801617a:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801617e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8016182:	d009      	beq.n	8016198 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8016184:	7b51      	ldrb	r1, [r2, #13]
 8016186:	7992      	ldrb	r2, [r2, #6]
 8016188:	0149      	lsls	r1, r1, #5
 801618a:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801618e:	4311      	orrs	r1, r2
 8016190:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8016194:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8016198:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801619c:	d00e      	beq.n	80161bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 801619e:	eba3 030e 	sub.w	r3, r3, lr
 80161a2:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80161a6:	b29b      	uxth	r3, r3
 80161a8:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80161ac:	10db      	asrs	r3, r3, #3
 80161ae:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80161b2:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80161b6:	4313      	orrs	r3, r2
 80161b8:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80161bc:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 80161c0:	00cb      	lsls	r3, r1, #3
 80161c2:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80161c6:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 80161ca:	0648      	lsls	r0, r1, #25
 80161cc:	ea43 0302 	orr.w	r3, r3, r2
 80161d0:	bf44      	itt	mi
 80161d2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80161d6:	b21b      	sxthmi	r3, r3
 80161d8:	1b5d      	subs	r5, r3, r5
 80161da:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80161de:	e7b5      	b.n	801614c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

080161e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 80161e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80161e4:	461e      	mov	r6, r3
 80161e6:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80161e8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80161ec:	4604      	mov	r4, r0
 80161ee:	4617      	mov	r7, r2
 80161f0:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80161f4:	f7f0 fe50 	bl	8006e98 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80161f8:	4605      	mov	r5, r0
 80161fa:	b918      	cbnz	r0, 8016204 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 80161fc:	6030      	str	r0, [r6, #0]
 80161fe:	4628      	mov	r0, r5
 8016200:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016204:	683b      	ldr	r3, [r7, #0]
 8016206:	4601      	mov	r1, r0
 8016208:	68db      	ldr	r3, [r3, #12]
 801620a:	4638      	mov	r0, r7
 801620c:	4798      	blx	r3
 801620e:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8016212:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8016216:	4602      	mov	r2, r0
 8016218:	6030      	str	r0, [r6, #0]
 801621a:	d213      	bcs.n	8016244 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 801621c:	4643      	mov	r3, r8
 801621e:	4639      	mov	r1, r7
 8016220:	4620      	mov	r0, r4
 8016222:	f7ff fe3b 	bl	8015e9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8016226:	6030      	str	r0, [r6, #0]
 8016228:	6833      	ldr	r3, [r6, #0]
 801622a:	b143      	cbz	r3, 801623e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 801622c:	7b5a      	ldrb	r2, [r3, #13]
 801622e:	7a9b      	ldrb	r3, [r3, #10]
 8016230:	0052      	lsls	r2, r2, #1
 8016232:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8016236:	4313      	orrs	r3, r2
 8016238:	bf0c      	ite	eq
 801623a:	2301      	moveq	r3, #1
 801623c:	2300      	movne	r3, #0
 801623e:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8016242:	e7dc      	b.n	80161fe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8016244:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8016248:	b29b      	uxth	r3, r3
 801624a:	2b7f      	cmp	r3, #127	; 0x7f
 801624c:	d804      	bhi.n	8016258 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801624e:	4639      	mov	r1, r7
 8016250:	4620      	mov	r0, r4
 8016252:	f7ff fd17 	bl	8015c84 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8016256:	e7e6      	b.n	8016226 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8016258:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801625c:	2b00      	cmp	r3, #0
 801625e:	d0e3      	beq.n	8016228 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8016260:	f640 1302 	movw	r3, #2306	; 0x902
 8016264:	429d      	cmp	r5, r3
 8016266:	d1df      	bne.n	8016228 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8016268:	4601      	mov	r1, r0
 801626a:	4620      	mov	r0, r4
 801626c:	f7ff fcdb 	bl	8015c26 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8016270:	e7d9      	b.n	8016226 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08016272 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8016272:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8016276:	461e      	mov	r6, r3
 8016278:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801627a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801627e:	4604      	mov	r4, r0
 8016280:	4617      	mov	r7, r2
 8016282:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8016286:	f7f0 fe07 	bl	8006e98 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801628a:	4605      	mov	r5, r0
 801628c:	b918      	cbnz	r0, 8016296 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801628e:	6030      	str	r0, [r6, #0]
 8016290:	4628      	mov	r0, r5
 8016292:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8016296:	683b      	ldr	r3, [r7, #0]
 8016298:	4601      	mov	r1, r0
 801629a:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801629e:	4638      	mov	r0, r7
 80162a0:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80162a4:	47c8      	blx	r9
 80162a6:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80162aa:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80162ae:	4602      	mov	r2, r0
 80162b0:	6030      	str	r0, [r6, #0]
 80162b2:	d213      	bcs.n	80162dc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 80162b4:	4643      	mov	r3, r8
 80162b6:	4639      	mov	r1, r7
 80162b8:	4620      	mov	r0, r4
 80162ba:	f7ff fdef 	bl	8015e9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80162be:	6030      	str	r0, [r6, #0]
 80162c0:	6833      	ldr	r3, [r6, #0]
 80162c2:	b143      	cbz	r3, 80162d6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 80162c4:	7b5a      	ldrb	r2, [r3, #13]
 80162c6:	7a9b      	ldrb	r3, [r3, #10]
 80162c8:	0052      	lsls	r2, r2, #1
 80162ca:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80162ce:	4313      	orrs	r3, r2
 80162d0:	bf0c      	ite	eq
 80162d2:	2301      	moveq	r3, #1
 80162d4:	2300      	movne	r3, #0
 80162d6:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80162da:	e7d9      	b.n	8016290 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 80162dc:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80162e0:	b29b      	uxth	r3, r3
 80162e2:	2b7f      	cmp	r3, #127	; 0x7f
 80162e4:	d804      	bhi.n	80162f0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 80162e6:	4639      	mov	r1, r7
 80162e8:	4620      	mov	r0, r4
 80162ea:	f7ff fccb 	bl	8015c84 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80162ee:	e7e6      	b.n	80162be <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 80162f0:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80162f4:	2b00      	cmp	r3, #0
 80162f6:	d0e3      	beq.n	80162c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80162f8:	f640 1302 	movw	r3, #2306	; 0x902
 80162fc:	429d      	cmp	r5, r3
 80162fe:	d1df      	bne.n	80162c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8016300:	4601      	mov	r1, r0
 8016302:	4620      	mov	r0, r4
 8016304:	f7ff fc8f 	bl	8015c26 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8016308:	e7d9      	b.n	80162be <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801630a <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801630a:	b510      	push	{r4, lr}
 801630c:	4604      	mov	r4, r0
 801630e:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8016312:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8016314:	b1f1      	cbz	r1, 8016354 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8016316:	2b0a      	cmp	r3, #10
 8016318:	d02f      	beq.n	801637a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801631a:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 801631c:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8016320:	3901      	subs	r1, #1
 8016322:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8016324:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8016328:	1c51      	adds	r1, r2, #1
 801632a:	b289      	uxth	r1, r1
 801632c:	2901      	cmp	r1, #1
 801632e:	bf84      	itt	hi
 8016330:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8016334:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 8016336:	f103 0201 	add.w	r2, r3, #1
 801633a:	8722      	strh	r2, [r4, #56]	; 0x38
 801633c:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801633e:	bf98      	it	ls
 8016340:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 8016342:	4413      	add	r3, r2
 8016344:	b29b      	uxth	r3, r3
 8016346:	2b09      	cmp	r3, #9
 8016348:	bf88      	it	hi
 801634a:	3b0a      	subhi	r3, #10
 801634c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8016350:	8458      	strh	r0, [r3, #34]	; 0x22
 8016352:	e7dc      	b.n	801630e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8016354:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8016356:	2b0a      	cmp	r3, #10
 8016358:	d00f      	beq.n	801637a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801635a:	4620      	mov	r0, r4
 801635c:	f7ff fc11 	bl	8015b82 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8016360:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8016362:	1c5a      	adds	r2, r3, #1
 8016364:	8722      	strh	r2, [r4, #56]	; 0x38
 8016366:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8016368:	4413      	add	r3, r2
 801636a:	b29b      	uxth	r3, r3
 801636c:	2b09      	cmp	r3, #9
 801636e:	bf88      	it	hi
 8016370:	3b0a      	subhi	r3, #10
 8016372:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8016376:	8458      	strh	r0, [r3, #34]	; 0x22
 8016378:	e7ec      	b.n	8016354 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801637a:	bd10      	pop	{r4, pc}

0801637c <_ZN8touchgfx12TextProvider11getNextCharEv>:
 801637c:	b538      	push	{r3, r4, r5, lr}
 801637e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8016380:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8016384:	4604      	mov	r4, r0
 8016386:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8016388:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 801638a:	3a01      	subs	r2, #1
 801638c:	8702      	strh	r2, [r0, #56]	; 0x38
 801638e:	1c5a      	adds	r2, r3, #1
 8016390:	b292      	uxth	r2, r2
 8016392:	2a09      	cmp	r2, #9
 8016394:	bf86      	itte	hi
 8016396:	3b09      	subhi	r3, #9
 8016398:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 801639a:	86c2      	strhls	r2, [r0, #54]	; 0x36
 801639c:	f7ff ffb5 	bl	801630a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 80163a0:	8c23      	ldrh	r3, [r4, #32]
 80163a2:	2b01      	cmp	r3, #1
 80163a4:	bf9c      	itt	ls
 80163a6:	3301      	addls	r3, #1
 80163a8:	8423      	strhls	r3, [r4, #32]
 80163aa:	8be3      	ldrh	r3, [r4, #30]
 80163ac:	b90b      	cbnz	r3, 80163b2 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 80163ae:	2302      	movs	r3, #2
 80163b0:	83e3      	strh	r3, [r4, #30]
 80163b2:	8be3      	ldrh	r3, [r4, #30]
 80163b4:	3b01      	subs	r3, #1
 80163b6:	b29b      	uxth	r3, r3
 80163b8:	83e3      	strh	r3, [r4, #30]
 80163ba:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80163be:	4628      	mov	r0, r5
 80163c0:	8365      	strh	r5, [r4, #26]
 80163c2:	bd38      	pop	{r3, r4, r5, pc}

080163c4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 80163c4:	428a      	cmp	r2, r1
 80163c6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80163ca:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 80163cc:	d931      	bls.n	8016432 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 80163ce:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 80163d0:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 80163d4:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 80163d8:	19ee      	adds	r6, r5, r7
 80163da:	1a54      	subs	r4, r2, r1
 80163dc:	3e01      	subs	r6, #1
 80163de:	fa1f fe84 	uxth.w	lr, r4
 80163e2:	b2b4      	uxth	r4, r6
 80163e4:	eba4 090e 	sub.w	r9, r4, lr
 80163e8:	fa1f f989 	uxth.w	r9, r9
 80163ec:	2c09      	cmp	r4, #9
 80163ee:	4626      	mov	r6, r4
 80163f0:	bf88      	it	hi
 80163f2:	f1a4 060a 	subhi.w	r6, r4, #10
 80163f6:	f1bc 0f00 	cmp.w	ip, #0
 80163fa:	bf08      	it	eq
 80163fc:	f04f 0c02 	moveq.w	ip, #2
 8016400:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8016404:	f10c 3cff 	add.w	ip, ip, #4294967295
 8016408:	fa1f fc8c 	uxth.w	ip, ip
 801640c:	3c01      	subs	r4, #1
 801640e:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 8016412:	b2a4      	uxth	r4, r4
 8016414:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8016418:	454c      	cmp	r4, r9
 801641a:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 801641e:	d1e5      	bne.n	80163ec <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8016420:	eba5 050e 	sub.w	r5, r5, lr
 8016424:	eb0e 0408 	add.w	r4, lr, r8
 8016428:	8705      	strh	r5, [r0, #56]	; 0x38
 801642a:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 801642e:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 8016432:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8016434:	1a64      	subs	r4, r4, r1
 8016436:	4439      	add	r1, r7
 8016438:	b289      	uxth	r1, r1
 801643a:	2909      	cmp	r1, #9
 801643c:	bf88      	it	hi
 801643e:	390a      	subhi	r1, #10
 8016440:	8704      	strh	r4, [r0, #56]	; 0x38
 8016442:	86c1      	strh	r1, [r0, #54]	; 0x36
 8016444:	250a      	movs	r5, #10
 8016446:	b18a      	cbz	r2, 801646c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8016448:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 801644a:	3a01      	subs	r2, #1
 801644c:	b292      	uxth	r2, r2
 801644e:	3101      	adds	r1, #1
 8016450:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8016454:	8701      	strh	r1, [r0, #56]	; 0x38
 8016456:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8016458:	b901      	cbnz	r1, 801645c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 801645a:	86c5      	strh	r5, [r0, #54]	; 0x36
 801645c:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801645e:	3901      	subs	r1, #1
 8016460:	b289      	uxth	r1, r1
 8016462:	86c1      	strh	r1, [r0, #54]	; 0x36
 8016464:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8016468:	844c      	strh	r4, [r1, #34]	; 0x22
 801646a:	e7ec      	b.n	8016446 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 801646c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016470:	f7ff bf4b 	b.w	801630a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08016474 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8016474:	b570      	push	{r4, r5, r6, lr}
 8016476:	2500      	movs	r5, #0
 8016478:	4295      	cmp	r5, r2
 801647a:	d011      	beq.n	80164a0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 801647c:	8bc4      	ldrh	r4, [r0, #30]
 801647e:	f831 6b02 	ldrh.w	r6, [r1], #2
 8016482:	4414      	add	r4, r2
 8016484:	3c01      	subs	r4, #1
 8016486:	1b64      	subs	r4, r4, r5
 8016488:	b2a4      	uxth	r4, r4
 801648a:	2c01      	cmp	r4, #1
 801648c:	bf88      	it	hi
 801648e:	3c02      	subhi	r4, #2
 8016490:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8016494:	8b64      	ldrh	r4, [r4, #26]
 8016496:	42b4      	cmp	r4, r6
 8016498:	d117      	bne.n	80164ca <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801649a:	3501      	adds	r5, #1
 801649c:	b2ad      	uxth	r5, r5
 801649e:	e7eb      	b.n	8016478 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 80164a0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80164a4:	2400      	movs	r4, #0
 80164a6:	4413      	add	r3, r2
 80164a8:	b2a2      	uxth	r2, r4
 80164aa:	429a      	cmp	r2, r3
 80164ac:	da0f      	bge.n	80164ce <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 80164ae:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 80164b0:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 80164b4:	4432      	add	r2, r6
 80164b6:	b292      	uxth	r2, r2
 80164b8:	2a09      	cmp	r2, #9
 80164ba:	bf88      	it	hi
 80164bc:	3a0a      	subhi	r2, #10
 80164be:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80164c2:	3401      	adds	r4, #1
 80164c4:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 80164c6:	42aa      	cmp	r2, r5
 80164c8:	d0ee      	beq.n	80164a8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 80164ca:	2000      	movs	r0, #0
 80164cc:	bd70      	pop	{r4, r5, r6, pc}
 80164ce:	2001      	movs	r0, #1
 80164d0:	e7fc      	b.n	80164cc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

080164d2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 80164d2:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80164d6:	4605      	mov	r5, r0
 80164d8:	4616      	mov	r6, r2
 80164da:	1c8c      	adds	r4, r1, #2
 80164dc:	8809      	ldrh	r1, [r1, #0]
 80164de:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 80164e2:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 80164e6:	42b3      	cmp	r3, r6
 80164e8:	d124      	bne.n	8016534 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 80164ea:	f3c1 2903 	ubfx	r9, r1, #8, #4
 80164ee:	f3c1 1803 	ubfx	r8, r1, #4, #4
 80164f2:	f001 070f 	and.w	r7, r1, #15
 80164f6:	f8cd 8000 	str.w	r8, [sp]
 80164fa:	464b      	mov	r3, r9
 80164fc:	4652      	mov	r2, sl
 80164fe:	4621      	mov	r1, r4
 8016500:	4628      	mov	r0, r5
 8016502:	f7ff ffb7 	bl	8016474 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8016506:	4683      	mov	fp, r0
 8016508:	b168      	cbz	r0, 8016526 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801650a:	eb0a 0109 	add.w	r1, sl, r9
 801650e:	4441      	add	r1, r8
 8016510:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8016514:	463a      	mov	r2, r7
 8016516:	4649      	mov	r1, r9
 8016518:	4628      	mov	r0, r5
 801651a:	f7ff ff53 	bl	80163c4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801651e:	4658      	mov	r0, fp
 8016520:	b003      	add	sp, #12
 8016522:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016526:	eb07 010a 	add.w	r1, r7, sl
 801652a:	4449      	add	r1, r9
 801652c:	4441      	add	r1, r8
 801652e:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8016532:	e7d2      	b.n	80164da <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8016534:	f04f 0b00 	mov.w	fp, #0
 8016538:	e7f1      	b.n	801651e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801653a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801653a:	b570      	push	{r4, r5, r6, lr}
 801653c:	8810      	ldrh	r0, [r2, #0]
 801653e:	4298      	cmp	r0, r3
 8016540:	d817      	bhi.n	8016572 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8016542:	1e48      	subs	r0, r1, #1
 8016544:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8016548:	4298      	cmp	r0, r3
 801654a:	d312      	bcc.n	8016572 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801654c:	2400      	movs	r4, #0
 801654e:	428c      	cmp	r4, r1
 8016550:	d20f      	bcs.n	8016572 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8016552:	1860      	adds	r0, r4, r1
 8016554:	1040      	asrs	r0, r0, #1
 8016556:	0085      	lsls	r5, r0, #2
 8016558:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 801655c:	42b3      	cmp	r3, r6
 801655e:	d902      	bls.n	8016566 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8016560:	3001      	adds	r0, #1
 8016562:	b284      	uxth	r4, r0
 8016564:	e7f3      	b.n	801654e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8016566:	d201      	bcs.n	801656c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8016568:	b281      	uxth	r1, r0
 801656a:	e7f0      	b.n	801654e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801656c:	442a      	add	r2, r5
 801656e:	8850      	ldrh	r0, [r2, #2]
 8016570:	bd70      	pop	{r4, r5, r6, pc}
 8016572:	2000      	movs	r0, #0
 8016574:	e7fc      	b.n	8016570 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08016576 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8016576:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801657a:	6c45      	ldr	r5, [r0, #68]	; 0x44
 801657c:	886f      	ldrh	r7, [r5, #2]
 801657e:	4604      	mov	r4, r0
 8016580:	087f      	lsrs	r7, r7, #1
 8016582:	260b      	movs	r6, #11
 8016584:	3e01      	subs	r6, #1
 8016586:	d013      	beq.n	80165b0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8016588:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801658a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801658e:	462a      	mov	r2, r5
 8016590:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8016594:	4639      	mov	r1, r7
 8016596:	4643      	mov	r3, r8
 8016598:	4620      	mov	r0, r4
 801659a:	f7ff ffce 	bl	801653a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801659e:	b138      	cbz	r0, 80165b0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80165a0:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80165a4:	4642      	mov	r2, r8
 80165a6:	4620      	mov	r0, r4
 80165a8:	f7ff ff93 	bl	80164d2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 80165ac:	2800      	cmp	r0, #0
 80165ae:	d1e9      	bne.n	8016584 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 80165b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080165b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 80165b4:	b570      	push	{r4, r5, r6, lr}
 80165b6:	694a      	ldr	r2, [r1, #20]
 80165b8:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80165ba:	684b      	ldr	r3, [r1, #4]
 80165bc:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 80165be:	1b54      	subs	r4, r2, r5
 80165c0:	f000 8106 	beq.w	80167d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 80165c4:	1b9b      	subs	r3, r3, r6
 80165c6:	d003      	beq.n	80165d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80165c8:	4363      	muls	r3, r4
 80165ca:	2210      	movs	r2, #16
 80165cc:	fb93 f3f2 	sdiv	r3, r3, r2
 80165d0:	680c      	ldr	r4, [r1, #0]
 80165d2:	698a      	ldr	r2, [r1, #24]
 80165d4:	1b65      	subs	r5, r4, r5
 80165d6:	f000 80fd 	beq.w	80167d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 80165da:	1b92      	subs	r2, r2, r6
 80165dc:	d003      	beq.n	80165e6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80165de:	436a      	muls	r2, r5
 80165e0:	2410      	movs	r4, #16
 80165e2:	fb92 f2f4 	sdiv	r2, r2, r4
 80165e6:	1a9b      	subs	r3, r3, r2
 80165e8:	ee07 3a90 	vmov	s15, r3
 80165ec:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8016810 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 80165f0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80165f4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80165f8:	ee67 7a84 	vmul.f32	s15, s15, s8
 80165fc:	460a      	mov	r2, r1
 80165fe:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8016602:	4603      	mov	r3, r0
 8016604:	f100 040c 	add.w	r4, r0, #12
 8016608:	eeb1 6a43 	vneg.f32	s12, s6
 801660c:	edd2 7a02 	vldr	s15, [r2, #8]
 8016610:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8016614:	3214      	adds	r2, #20
 8016616:	ece3 6a01 	vstmia	r3!, {s13}
 801661a:	ed52 7a02 	vldr	s15, [r2, #-8]
 801661e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8016622:	429c      	cmp	r4, r3
 8016624:	edc3 7a02 	vstr	s15, [r3, #8]
 8016628:	ed52 7a01 	vldr	s15, [r2, #-4]
 801662c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8016630:	edc3 7a05 	vstr	s15, [r3, #20]
 8016634:	d1ea      	bne.n	801660c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8016636:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8016638:	698b      	ldr	r3, [r1, #24]
 801663a:	edd0 4a02 	vldr	s9, [r0, #8]
 801663e:	edd0 3a00 	vldr	s7, [r0]
 8016642:	edd0 6a01 	vldr	s13, [r0, #4]
 8016646:	ed90 5a05 	vldr	s10, [r0, #20]
 801664a:	ed90 2a03 	vldr	s4, [r0, #12]
 801664e:	edd0 5a04 	vldr	s11, [r0, #16]
 8016652:	ed90 1a07 	vldr	s2, [r0, #28]
 8016656:	edd0 2a06 	vldr	s5, [r0, #24]
 801665a:	1a9b      	subs	r3, r3, r2
 801665c:	ee07 3a90 	vmov	s15, r3
 8016660:	684b      	ldr	r3, [r1, #4]
 8016662:	1a9b      	subs	r3, r3, r2
 8016664:	ee07 3a10 	vmov	s14, r3
 8016668:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801666c:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8016670:	ee67 7a84 	vmul.f32	s15, s15, s8
 8016674:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8016678:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801667c:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8016680:	ee27 7a04 	vmul.f32	s14, s14, s8
 8016684:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8016688:	eee6 7a87 	vfma.f32	s15, s13, s14
 801668c:	ee32 5a45 	vsub.f32	s10, s4, s10
 8016690:	ee67 7a83 	vmul.f32	s15, s15, s6
 8016694:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8016698:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801669a:	694a      	ldr	r2, [r1, #20]
 801669c:	1b13      	subs	r3, r2, r4
 801669e:	ee07 3a10 	vmov	s14, r3
 80166a2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80166a6:	680b      	ldr	r3, [r1, #0]
 80166a8:	ee27 7a04 	vmul.f32	s14, s14, s8
 80166ac:	1b1b      	subs	r3, r3, r4
 80166ae:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80166b2:	ee07 3a10 	vmov	s14, r3
 80166b6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80166ba:	ee27 7a04 	vmul.f32	s14, s14, s8
 80166be:	eee6 4a87 	vfma.f32	s9, s13, s14
 80166c2:	ee64 4a86 	vmul.f32	s9, s9, s12
 80166c6:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 80166ca:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80166cc:	698b      	ldr	r3, [r1, #24]
 80166ce:	1a9b      	subs	r3, r3, r2
 80166d0:	ee06 3a90 	vmov	s13, r3
 80166d4:	684b      	ldr	r3, [r1, #4]
 80166d6:	1a9b      	subs	r3, r3, r2
 80166d8:	ee07 3a10 	vmov	s14, r3
 80166dc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80166e0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80166e4:	ee66 6a84 	vmul.f32	s13, s13, s8
 80166e8:	ee27 7a04 	vmul.f32	s14, s14, s8
 80166ec:	ee65 6a66 	vnmul.f32	s13, s10, s13
 80166f0:	eee5 6a87 	vfma.f32	s13, s11, s14
 80166f4:	ee66 6a83 	vmul.f32	s13, s13, s6
 80166f8:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 80166fc:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80166fe:	694a      	ldr	r2, [r1, #20]
 8016700:	1b13      	subs	r3, r2, r4
 8016702:	ee07 3a10 	vmov	s14, r3
 8016706:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801670a:	680b      	ldr	r3, [r1, #0]
 801670c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8016710:	1b1b      	subs	r3, r3, r4
 8016712:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8016716:	ee07 3a10 	vmov	s14, r3
 801671a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801671e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8016722:	eea5 5a87 	vfma.f32	s10, s11, s14
 8016726:	edd0 5a08 	vldr	s11, [r0, #32]
 801672a:	ee25 5a06 	vmul.f32	s10, s10, s12
 801672e:	ee31 1a65 	vsub.f32	s2, s2, s11
 8016732:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8016736:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8016738:	698b      	ldr	r3, [r1, #24]
 801673a:	1a9b      	subs	r3, r3, r2
 801673c:	ee07 3a10 	vmov	s14, r3
 8016740:	684b      	ldr	r3, [r1, #4]
 8016742:	1a9b      	subs	r3, r3, r2
 8016744:	ee01 3a90 	vmov	s3, r3
 8016748:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801674c:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8016750:	ee27 7a04 	vmul.f32	s14, s14, s8
 8016754:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8016758:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 801675c:	ee61 1a84 	vmul.f32	s3, s3, s8
 8016760:	eea1 7a21 	vfma.f32	s14, s2, s3
 8016764:	ee27 7a03 	vmul.f32	s14, s14, s6
 8016768:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801676c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801676e:	694a      	ldr	r2, [r1, #20]
 8016770:	1b13      	subs	r3, r2, r4
 8016772:	ee03 3a10 	vmov	s6, r3
 8016776:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801677a:	680b      	ldr	r3, [r1, #0]
 801677c:	ee23 3a04 	vmul.f32	s6, s6, s8
 8016780:	1b1b      	subs	r3, r3, r4
 8016782:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8016786:	ee03 3a10 	vmov	s6, r3
 801678a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801678e:	ee23 4a04 	vmul.f32	s8, s6, s8
 8016792:	eee1 5a04 	vfma.f32	s11, s2, s8
 8016796:	ee25 6a86 	vmul.f32	s12, s11, s12
 801679a:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801679e:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 80167a2:	eee3 5aa6 	vfma.f32	s11, s7, s13
 80167a6:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80167aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80167ae:	dd13      	ble.n	80167d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80167b0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80167b4:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 80167b8:	63c3      	str	r3, [r0, #60]	; 0x3c
 80167ba:	eee3 7a87 	vfma.f32	s15, s7, s14
 80167be:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80167c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80167c6:	dd15      	ble.n	80167f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 80167c8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80167cc:	6403      	str	r3, [r0, #64]	; 0x40
 80167ce:	bd70      	pop	{r4, r5, r6, pc}
 80167d0:	4623      	mov	r3, r4
 80167d2:	e6fd      	b.n	80165d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80167d4:	462a      	mov	r2, r5
 80167d6:	e706      	b.n	80165e6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80167d8:	d502      	bpl.n	80167e0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 80167da:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80167de:	e7e9      	b.n	80167b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 80167e0:	ee22 2a64 	vnmul.f32	s4, s4, s9
 80167e4:	eea3 2a85 	vfma.f32	s4, s7, s10
 80167e8:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 80167ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80167f0:	dade      	bge.n	80167b0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 80167f2:	e7f2      	b.n	80167da <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 80167f4:	d502      	bpl.n	80167fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 80167f6:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80167fa:	e7e7      	b.n	80167cc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 80167fc:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8016800:	eee3 4a86 	vfma.f32	s9, s7, s12
 8016804:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8016808:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801680c:	dadc      	bge.n	80167c8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801680e:	e7f2      	b.n	80167f6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8016810:	3d800000 	.word	0x3d800000

08016814 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8016814:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016818:	2714      	movs	r7, #20
 801681a:	435f      	muls	r7, r3
 801681c:	eb02 0c07 	add.w	ip, r2, r7
 8016820:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8016824:	f115 0e0f 	adds.w	lr, r5, #15
 8016828:	f100 80a2 	bmi.w	8016970 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 801682c:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8016830:	9c08      	ldr	r4, [sp, #32]
 8016832:	f8c0 e014 	str.w	lr, [r0, #20]
 8016836:	2614      	movs	r6, #20
 8016838:	4366      	muls	r6, r4
 801683a:	eb02 0806 	add.w	r8, r2, r6
 801683e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8016842:	f115 040f 	adds.w	r4, r5, #15
 8016846:	f100 809f 	bmi.w	8016988 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801684a:	1124      	asrs	r4, r4, #4
 801684c:	eba4 040e 	sub.w	r4, r4, lr
 8016850:	6184      	str	r4, [r0, #24]
 8016852:	2c00      	cmp	r4, #0
 8016854:	f000 808a 	beq.w	801696c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8016858:	f8dc 9004 	ldr.w	r9, [ip, #4]
 801685c:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8016860:	5995      	ldr	r5, [r2, r6]
 8016862:	eba4 0809 	sub.w	r8, r4, r9
 8016866:	59d4      	ldr	r4, [r2, r7]
 8016868:	eba5 0a04 	sub.w	sl, r5, r4
 801686c:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8016870:	fb0e fe05 	mul.w	lr, lr, r5
 8016874:	fb0a ee19 	mls	lr, sl, r9, lr
 8016878:	fb08 e404 	mla	r4, r8, r4, lr
 801687c:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8016880:	3c01      	subs	r4, #1
 8016882:	19a4      	adds	r4, r4, r6
 8016884:	f100 808c 	bmi.w	80169a0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8016888:	fb94 fef6 	sdiv	lr, r4, r6
 801688c:	f8c0 e000 	str.w	lr, [r0]
 8016890:	fb06 441e 	mls	r4, r6, lr, r4
 8016894:	6104      	str	r4, [r0, #16]
 8016896:	2d00      	cmp	r5, #0
 8016898:	f2c0 8095 	blt.w	80169c6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 801689c:	fb95 f4f6 	sdiv	r4, r5, r6
 80168a0:	6044      	str	r4, [r0, #4]
 80168a2:	fb06 5514 	mls	r5, r6, r4, r5
 80168a6:	6085      	str	r5, [r0, #8]
 80168a8:	60c6      	str	r6, [r0, #12]
 80168aa:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80168ae:	6945      	ldr	r5, [r0, #20]
 80168b0:	59d2      	ldr	r2, [r2, r7]
 80168b2:	eddf 6a4d 	vldr	s13, [pc, #308]	; 80169e8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 80168b6:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 80168ba:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 80168be:	ee07 4a10 	vmov	s14, r4
 80168c2:	6804      	ldr	r4, [r0, #0]
 80168c4:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 80168c8:	ee07 2a90 	vmov	s15, r2
 80168cc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80168d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80168d4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80168d8:	ee27 7a26 	vmul.f32	s14, s14, s13
 80168dc:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80168e0:	edd3 6a00 	vldr	s13, [r3]
 80168e4:	eee6 6a07 	vfma.f32	s13, s12, s14
 80168e8:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 80168ec:	eee6 6a27 	vfma.f32	s13, s12, s15
 80168f0:	edc0 6a07 	vstr	s13, [r0, #28]
 80168f4:	edd0 6a01 	vldr	s13, [r0, #4]
 80168f8:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 80168fc:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8016900:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8016904:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8016908:	ed80 6a08 	vstr	s12, [r0, #32]
 801690c:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 801690e:	6242      	str	r2, [r0, #36]	; 0x24
 8016910:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8016914:	ed93 6a03 	vldr	s12, [r3, #12]
 8016918:	eea5 6a87 	vfma.f32	s12, s11, s14
 801691c:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8016920:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8016924:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8016928:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801692c:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8016930:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8016934:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8016938:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801693a:	6302      	str	r2, [r0, #48]	; 0x30
 801693c:	ed93 6a06 	vldr	s12, [r3, #24]
 8016940:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8016944:	eea5 6a87 	vfma.f32	s12, s11, s14
 8016948:	eeb0 7a46 	vmov.f32	s14, s12
 801694c:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8016950:	eea6 7a27 	vfma.f32	s14, s12, s15
 8016954:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8016958:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 801695c:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8016960:	eee6 7a87 	vfma.f32	s15, s13, s14
 8016964:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8016968:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 801696a:	63c3      	str	r3, [r0, #60]	; 0x3c
 801696c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016970:	f1c5 0501 	rsb	r5, r5, #1
 8016974:	f015 050f 	ands.w	r5, r5, #15
 8016978:	bf18      	it	ne
 801697a:	2501      	movne	r5, #1
 801697c:	2410      	movs	r4, #16
 801697e:	fb9e fef4 	sdiv	lr, lr, r4
 8016982:	ebae 0e05 	sub.w	lr, lr, r5
 8016986:	e753      	b.n	8016830 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8016988:	f1c5 0501 	rsb	r5, r5, #1
 801698c:	f015 050f 	ands.w	r5, r5, #15
 8016990:	bf18      	it	ne
 8016992:	2501      	movne	r5, #1
 8016994:	f04f 0910 	mov.w	r9, #16
 8016998:	fb94 f4f9 	sdiv	r4, r4, r9
 801699c:	1b64      	subs	r4, r4, r5
 801699e:	e755      	b.n	801684c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 80169a0:	4264      	negs	r4, r4
 80169a2:	fb94 fef6 	sdiv	lr, r4, r6
 80169a6:	f1ce 0800 	rsb	r8, lr, #0
 80169aa:	fb06 441e 	mls	r4, r6, lr, r4
 80169ae:	f8c0 8000 	str.w	r8, [r0]
 80169b2:	6104      	str	r4, [r0, #16]
 80169b4:	2c00      	cmp	r4, #0
 80169b6:	f43f af6e 	beq.w	8016896 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 80169ba:	ea6f 0e0e 	mvn.w	lr, lr
 80169be:	f8c0 e000 	str.w	lr, [r0]
 80169c2:	1b34      	subs	r4, r6, r4
 80169c4:	e766      	b.n	8016894 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 80169c6:	426d      	negs	r5, r5
 80169c8:	fb95 f4f6 	sdiv	r4, r5, r6
 80169cc:	f1c4 0e00 	rsb	lr, r4, #0
 80169d0:	fb06 5514 	mls	r5, r6, r4, r5
 80169d4:	f8c0 e004 	str.w	lr, [r0, #4]
 80169d8:	6085      	str	r5, [r0, #8]
 80169da:	2d00      	cmp	r5, #0
 80169dc:	f43f af64 	beq.w	80168a8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 80169e0:	43e4      	mvns	r4, r4
 80169e2:	6044      	str	r4, [r0, #4]
 80169e4:	1b75      	subs	r5, r6, r5
 80169e6:	e75e      	b.n	80168a6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 80169e8:	3d800000 	.word	0x3d800000

080169ec <_ZN8touchgfx7Unicode6strlenEPKt>:
 80169ec:	4602      	mov	r2, r0
 80169ee:	b148      	cbz	r0, 8016a04 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 80169f0:	2300      	movs	r3, #0
 80169f2:	b298      	uxth	r0, r3
 80169f4:	3301      	adds	r3, #1
 80169f6:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 80169fa:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 80169fe:	2900      	cmp	r1, #0
 8016a00:	d1f7      	bne.n	80169f2 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8016a02:	4770      	bx	lr
 8016a04:	4770      	bx	lr

08016a06 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8016a06:	b530      	push	{r4, r5, lr}
 8016a08:	4604      	mov	r4, r0
 8016a0a:	b159      	cbz	r1, 8016a24 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8016a0c:	b148      	cbz	r0, 8016a22 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8016a0e:	2300      	movs	r3, #0
 8016a10:	b298      	uxth	r0, r3
 8016a12:	4282      	cmp	r2, r0
 8016a14:	d905      	bls.n	8016a22 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8016a16:	5ccd      	ldrb	r5, [r1, r3]
 8016a18:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8016a1c:	3301      	adds	r3, #1
 8016a1e:	2d00      	cmp	r5, #0
 8016a20:	d1f6      	bne.n	8016a10 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8016a22:	bd30      	pop	{r4, r5, pc}
 8016a24:	4608      	mov	r0, r1
 8016a26:	e7fc      	b.n	8016a22 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08016a28 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8016a28:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016a2a:	b08b      	sub	sp, #44	; 0x2c
 8016a2c:	468c      	mov	ip, r1
 8016a2e:	2100      	movs	r1, #0
 8016a30:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8016a34:	4604      	mov	r4, r0
 8016a36:	261f      	movs	r6, #31
 8016a38:	af01      	add	r7, sp, #4
 8016a3a:	fb94 fef3 	sdiv	lr, r4, r3
 8016a3e:	fb03 441e 	mls	r4, r3, lr, r4
 8016a42:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8016a46:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8016a4a:	b2ec      	uxtb	r4, r5
 8016a4c:	2d09      	cmp	r5, #9
 8016a4e:	bfd4      	ite	le
 8016a50:	3430      	addle	r4, #48	; 0x30
 8016a52:	3457      	addgt	r4, #87	; 0x57
 8016a54:	b2e4      	uxtb	r4, r4
 8016a56:	55bc      	strb	r4, [r7, r6]
 8016a58:	4674      	mov	r4, lr
 8016a5a:	1e71      	subs	r1, r6, #1
 8016a5c:	b974      	cbnz	r4, 8016a7c <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 8016a5e:	2800      	cmp	r0, #0
 8016a60:	da05      	bge.n	8016a6e <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 8016a62:	ab0a      	add	r3, sp, #40	; 0x28
 8016a64:	4419      	add	r1, r3
 8016a66:	232d      	movs	r3, #45	; 0x2d
 8016a68:	f801 3c24 	strb.w	r3, [r1, #-36]
 8016a6c:	1eb1      	subs	r1, r6, #2
 8016a6e:	3101      	adds	r1, #1
 8016a70:	4439      	add	r1, r7
 8016a72:	4660      	mov	r0, ip
 8016a74:	f7ff ffc7 	bl	8016a06 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8016a78:	b00b      	add	sp, #44	; 0x2c
 8016a7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8016a7c:	460e      	mov	r6, r1
 8016a7e:	e7dc      	b.n	8016a3a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08016a80 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8016a80:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016a82:	b08b      	sub	sp, #44	; 0x2c
 8016a84:	468c      	mov	ip, r1
 8016a86:	2100      	movs	r1, #0
 8016a88:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8016a8c:	ae01      	add	r6, sp, #4
 8016a8e:	211f      	movs	r1, #31
 8016a90:	fbb0 f7f3 	udiv	r7, r0, r3
 8016a94:	fb03 0517 	mls	r5, r3, r7, r0
 8016a98:	b2ec      	uxtb	r4, r5
 8016a9a:	2d09      	cmp	r5, #9
 8016a9c:	bfd4      	ite	le
 8016a9e:	3430      	addle	r4, #48	; 0x30
 8016aa0:	3457      	addgt	r4, #87	; 0x57
 8016aa2:	b2e4      	uxtb	r4, r4
 8016aa4:	558c      	strb	r4, [r1, r6]
 8016aa6:	4638      	mov	r0, r7
 8016aa8:	1e4c      	subs	r4, r1, #1
 8016aaa:	b92f      	cbnz	r7, 8016ab8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 8016aac:	4431      	add	r1, r6
 8016aae:	4660      	mov	r0, ip
 8016ab0:	f7ff ffa9 	bl	8016a06 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8016ab4:	b00b      	add	sp, #44	; 0x2c
 8016ab6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8016ab8:	4621      	mov	r1, r4
 8016aba:	e7e9      	b.n	8016a90 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

08016abc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8016abc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016ac0:	4691      	mov	r9, r2
 8016ac2:	b085      	sub	sp, #20
 8016ac4:	6802      	ldr	r2, [r0, #0]
 8016ac6:	9201      	str	r2, [sp, #4]
 8016ac8:	4688      	mov	r8, r1
 8016aca:	4683      	mov	fp, r0
 8016acc:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8016ad0:	9103      	str	r1, [sp, #12]
 8016ad2:	4610      	mov	r0, r2
 8016ad4:	461c      	mov	r4, r3
 8016ad6:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8016ada:	9302      	str	r3, [sp, #8]
 8016adc:	f7ff ff86 	bl	80169ec <_ZN8touchgfx7Unicode6strlenEPKt>
 8016ae0:	f1b8 0f00 	cmp.w	r8, #0
 8016ae4:	bf0c      	ite	eq
 8016ae6:	4684      	moveq	ip, r0
 8016ae8:	f100 0c01 	addne.w	ip, r0, #1
 8016aec:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8016af0:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8016af4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8016af6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8016af8:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8016afc:	9903      	ldr	r1, [sp, #12]
 8016afe:	fa1f fc8c 	uxth.w	ip, ip
 8016b02:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8016b06:	d041      	beq.n	8016b8c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8016b08:	d834      	bhi.n	8016b74 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8016b0a:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8016b0e:	d059      	beq.n	8016bc4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8016b10:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8016b14:	d03a      	beq.n	8016b8c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8016b16:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8016b1a:	d034      	beq.n	8016b86 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8016b1c:	2400      	movs	r4, #0
 8016b1e:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8016b22:	3a01      	subs	r2, #1
 8016b24:	b169      	cbz	r1, 8016b42 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8016b26:	9911      	ldr	r1, [sp, #68]	; 0x44
 8016b28:	458c      	cmp	ip, r1
 8016b2a:	da09      	bge.n	8016b40 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8016b2c:	eba1 010c 	sub.w	r1, r1, ip
 8016b30:	b289      	uxth	r1, r1
 8016b32:	b933      	cbnz	r3, 8016b42 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8016b34:	2e00      	cmp	r6, #0
 8016b36:	d051      	beq.n	8016bdc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8016b38:	2800      	cmp	r0, #0
 8016b3a:	d04f      	beq.n	8016bdc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8016b3c:	440c      	add	r4, r1
 8016b3e:	b2a4      	uxth	r4, r4
 8016b40:	2100      	movs	r1, #0
 8016b42:	682b      	ldr	r3, [r5, #0]
 8016b44:	4293      	cmp	r3, r2
 8016b46:	da07      	bge.n	8016b58 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8016b48:	f1b8 0f00 	cmp.w	r8, #0
 8016b4c:	d004      	beq.n	8016b58 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8016b4e:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8016b52:	682b      	ldr	r3, [r5, #0]
 8016b54:	3301      	adds	r3, #1
 8016b56:	602b      	str	r3, [r5, #0]
 8016b58:	2730      	movs	r7, #48	; 0x30
 8016b5a:	2c00      	cmp	r4, #0
 8016b5c:	d04e      	beq.n	8016bfc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8016b5e:	682e      	ldr	r6, [r5, #0]
 8016b60:	3c01      	subs	r4, #1
 8016b62:	42b2      	cmp	r2, r6
 8016b64:	b2a4      	uxth	r4, r4
 8016b66:	dd49      	ble.n	8016bfc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8016b68:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8016b6c:	682b      	ldr	r3, [r5, #0]
 8016b6e:	3301      	adds	r3, #1
 8016b70:	602b      	str	r3, [r5, #0]
 8016b72:	e7f2      	b.n	8016b5a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8016b74:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8016b78:	d01d      	beq.n	8016bb6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8016b7a:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8016b7e:	d002      	beq.n	8016b86 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8016b80:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8016b84:	e7c9      	b.n	8016b1a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8016b86:	4684      	mov	ip, r0
 8016b88:	f04f 0800 	mov.w	r8, #0
 8016b8c:	2c00      	cmp	r4, #0
 8016b8e:	d0c6      	beq.n	8016b1e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8016b90:	b947      	cbnz	r7, 8016ba4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8016b92:	2801      	cmp	r0, #1
 8016b94:	d106      	bne.n	8016ba4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8016b96:	8814      	ldrh	r4, [r2, #0]
 8016b98:	2c30      	cmp	r4, #48	; 0x30
 8016b9a:	bf02      	ittt	eq
 8016b9c:	3202      	addeq	r2, #2
 8016b9e:	f8cb 2000 	streq.w	r2, [fp]
 8016ba2:	4638      	moveq	r0, r7
 8016ba4:	45bc      	cmp	ip, r7
 8016ba6:	da14      	bge.n	8016bd2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8016ba8:	b2bf      	uxth	r7, r7
 8016baa:	eba7 040c 	sub.w	r4, r7, ip
 8016bae:	b2a4      	uxth	r4, r4
 8016bb0:	46bc      	mov	ip, r7
 8016bb2:	2600      	movs	r6, #0
 8016bb4:	e7b3      	b.n	8016b1e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8016bb6:	4684      	mov	ip, r0
 8016bb8:	b16c      	cbz	r4, 8016bd6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8016bba:	42b8      	cmp	r0, r7
 8016bbc:	dd00      	ble.n	8016bc0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8016bbe:	b2b8      	uxth	r0, r7
 8016bc0:	2400      	movs	r4, #0
 8016bc2:	e003      	b.n	8016bcc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8016bc4:	f04f 0c01 	mov.w	ip, #1
 8016bc8:	2400      	movs	r4, #0
 8016bca:	4660      	mov	r0, ip
 8016bcc:	4626      	mov	r6, r4
 8016bce:	46a0      	mov	r8, r4
 8016bd0:	e7a5      	b.n	8016b1e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8016bd2:	2400      	movs	r4, #0
 8016bd4:	e7ed      	b.n	8016bb2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8016bd6:	4626      	mov	r6, r4
 8016bd8:	46a0      	mov	r8, r4
 8016bda:	e7a0      	b.n	8016b1e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8016bdc:	2900      	cmp	r1, #0
 8016bde:	d0b0      	beq.n	8016b42 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8016be0:	2720      	movs	r7, #32
 8016be2:	682e      	ldr	r6, [r5, #0]
 8016be4:	2900      	cmp	r1, #0
 8016be6:	d0ac      	beq.n	8016b42 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8016be8:	3901      	subs	r1, #1
 8016bea:	4296      	cmp	r6, r2
 8016bec:	b289      	uxth	r1, r1
 8016bee:	daa7      	bge.n	8016b40 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8016bf0:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8016bf4:	682b      	ldr	r3, [r5, #0]
 8016bf6:	3301      	adds	r3, #1
 8016bf8:	602b      	str	r3, [r5, #0]
 8016bfa:	e7f2      	b.n	8016be2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8016bfc:	b188      	cbz	r0, 8016c22 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8016bfe:	682b      	ldr	r3, [r5, #0]
 8016c00:	3801      	subs	r0, #1
 8016c02:	429a      	cmp	r2, r3
 8016c04:	b280      	uxth	r0, r0
 8016c06:	dd0c      	ble.n	8016c22 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8016c08:	f8db 3000 	ldr.w	r3, [fp]
 8016c0c:	1c9c      	adds	r4, r3, #2
 8016c0e:	f8cb 4000 	str.w	r4, [fp]
 8016c12:	881c      	ldrh	r4, [r3, #0]
 8016c14:	682b      	ldr	r3, [r5, #0]
 8016c16:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8016c1a:	682b      	ldr	r3, [r5, #0]
 8016c1c:	3301      	adds	r3, #1
 8016c1e:	602b      	str	r3, [r5, #0]
 8016c20:	e7ec      	b.n	8016bfc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8016c22:	2620      	movs	r6, #32
 8016c24:	b151      	cbz	r1, 8016c3c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8016c26:	6828      	ldr	r0, [r5, #0]
 8016c28:	3901      	subs	r1, #1
 8016c2a:	4282      	cmp	r2, r0
 8016c2c:	b289      	uxth	r1, r1
 8016c2e:	dd05      	ble.n	8016c3c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8016c30:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8016c34:	682b      	ldr	r3, [r5, #0]
 8016c36:	3301      	adds	r3, #1
 8016c38:	602b      	str	r3, [r5, #0]
 8016c3a:	e7f3      	b.n	8016c24 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8016c3c:	b005      	add	sp, #20
 8016c3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016c42 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8016c42:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016c46:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8016c4a:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8016c4e:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8016c52:	2400      	movs	r4, #0
 8016c54:	8014      	strh	r4, [r2, #0]
 8016c56:	701c      	strb	r4, [r3, #0]
 8016c58:	f888 4000 	strb.w	r4, [r8]
 8016c5c:	f88c 4000 	strb.w	r4, [ip]
 8016c60:	f88e 4000 	strb.w	r4, [lr]
 8016c64:	703c      	strb	r4, [r7, #0]
 8016c66:	6804      	ldr	r4, [r0, #0]
 8016c68:	b1a4      	cbz	r4, 8016c94 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8016c6a:	8824      	ldrh	r4, [r4, #0]
 8016c6c:	f04f 0901 	mov.w	r9, #1
 8016c70:	b314      	cbz	r4, 8016cb8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8016c72:	2c2b      	cmp	r4, #43	; 0x2b
 8016c74:	d001      	beq.n	8016c7a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8016c76:	2c20      	cmp	r4, #32
 8016c78:	d110      	bne.n	8016c9c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8016c7a:	8014      	strh	r4, [r2, #0]
 8016c7c:	6804      	ldr	r4, [r0, #0]
 8016c7e:	b10c      	cbz	r4, 8016c84 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8016c80:	3402      	adds	r4, #2
 8016c82:	6004      	str	r4, [r0, #0]
 8016c84:	680c      	ldr	r4, [r1, #0]
 8016c86:	b10c      	cbz	r4, 8016c8c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8016c88:	3401      	adds	r4, #1
 8016c8a:	600c      	str	r4, [r1, #0]
 8016c8c:	6804      	ldr	r4, [r0, #0]
 8016c8e:	b17c      	cbz	r4, 8016cb0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8016c90:	8824      	ldrh	r4, [r4, #0]
 8016c92:	e7ed      	b.n	8016c70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8016c94:	680c      	ldr	r4, [r1, #0]
 8016c96:	b17c      	cbz	r4, 8016cb8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8016c98:	7824      	ldrb	r4, [r4, #0]
 8016c9a:	e7e7      	b.n	8016c6c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8016c9c:	2c2d      	cmp	r4, #45	; 0x2d
 8016c9e:	d102      	bne.n	8016ca6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8016ca0:	f883 9000 	strb.w	r9, [r3]
 8016ca4:	e7ea      	b.n	8016c7c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8016ca6:	2c23      	cmp	r4, #35	; 0x23
 8016ca8:	d107      	bne.n	8016cba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8016caa:	f888 9000 	strb.w	r9, [r8]
 8016cae:	e7e5      	b.n	8016c7c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8016cb0:	680c      	ldr	r4, [r1, #0]
 8016cb2:	b10c      	cbz	r4, 8016cb8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8016cb4:	7824      	ldrb	r4, [r4, #0]
 8016cb6:	e7db      	b.n	8016c70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8016cb8:	2400      	movs	r4, #0
 8016cba:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8016cbe:	2b09      	cmp	r3, #9
 8016cc0:	d901      	bls.n	8016cc6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8016cc2:	2c2a      	cmp	r4, #42	; 0x2a
 8016cc4:	d122      	bne.n	8016d0c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8016cc6:	2301      	movs	r3, #1
 8016cc8:	2c30      	cmp	r4, #48	; 0x30
 8016cca:	f88e 3000 	strb.w	r3, [lr]
 8016cce:	d10d      	bne.n	8016cec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8016cd0:	f88c 3000 	strb.w	r3, [ip]
 8016cd4:	6803      	ldr	r3, [r0, #0]
 8016cd6:	b10b      	cbz	r3, 8016cdc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8016cd8:	3302      	adds	r3, #2
 8016cda:	6003      	str	r3, [r0, #0]
 8016cdc:	680b      	ldr	r3, [r1, #0]
 8016cde:	b10b      	cbz	r3, 8016ce4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8016ce0:	3301      	adds	r3, #1
 8016ce2:	600b      	str	r3, [r1, #0]
 8016ce4:	6803      	ldr	r3, [r0, #0]
 8016ce6:	2b00      	cmp	r3, #0
 8016ce8:	d02f      	beq.n	8016d4a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8016cea:	881c      	ldrh	r4, [r3, #0]
 8016cec:	2c2a      	cmp	r4, #42	; 0x2a
 8016cee:	d135      	bne.n	8016d5c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8016cf0:	f04f 33ff 	mov.w	r3, #4294967295
 8016cf4:	6033      	str	r3, [r6, #0]
 8016cf6:	6803      	ldr	r3, [r0, #0]
 8016cf8:	b10b      	cbz	r3, 8016cfe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8016cfa:	3302      	adds	r3, #2
 8016cfc:	6003      	str	r3, [r0, #0]
 8016cfe:	680b      	ldr	r3, [r1, #0]
 8016d00:	b10b      	cbz	r3, 8016d06 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8016d02:	3301      	adds	r3, #1
 8016d04:	600b      	str	r3, [r1, #0]
 8016d06:	6803      	ldr	r3, [r0, #0]
 8016d08:	b31b      	cbz	r3, 8016d52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8016d0a:	881c      	ldrh	r4, [r3, #0]
 8016d0c:	2c2e      	cmp	r4, #46	; 0x2e
 8016d0e:	d11a      	bne.n	8016d46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8016d10:	2301      	movs	r3, #1
 8016d12:	703b      	strb	r3, [r7, #0]
 8016d14:	6803      	ldr	r3, [r0, #0]
 8016d16:	b10b      	cbz	r3, 8016d1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8016d18:	3302      	adds	r3, #2
 8016d1a:	6003      	str	r3, [r0, #0]
 8016d1c:	680b      	ldr	r3, [r1, #0]
 8016d1e:	b10b      	cbz	r3, 8016d24 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8016d20:	3301      	adds	r3, #1
 8016d22:	600b      	str	r3, [r1, #0]
 8016d24:	6803      	ldr	r3, [r0, #0]
 8016d26:	2b00      	cmp	r3, #0
 8016d28:	d036      	beq.n	8016d98 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8016d2a:	881b      	ldrh	r3, [r3, #0]
 8016d2c:	2b2a      	cmp	r3, #42	; 0x2a
 8016d2e:	d137      	bne.n	8016da0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8016d30:	f04f 33ff 	mov.w	r3, #4294967295
 8016d34:	602b      	str	r3, [r5, #0]
 8016d36:	6803      	ldr	r3, [r0, #0]
 8016d38:	b10b      	cbz	r3, 8016d3e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8016d3a:	3302      	adds	r3, #2
 8016d3c:	6003      	str	r3, [r0, #0]
 8016d3e:	680b      	ldr	r3, [r1, #0]
 8016d40:	b10b      	cbz	r3, 8016d46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8016d42:	3301      	adds	r3, #1
 8016d44:	600b      	str	r3, [r1, #0]
 8016d46:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016d4a:	680c      	ldr	r4, [r1, #0]
 8016d4c:	b134      	cbz	r4, 8016d5c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8016d4e:	7824      	ldrb	r4, [r4, #0]
 8016d50:	e7cc      	b.n	8016cec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8016d52:	680b      	ldr	r3, [r1, #0]
 8016d54:	2b00      	cmp	r3, #0
 8016d56:	d0f6      	beq.n	8016d46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8016d58:	781c      	ldrb	r4, [r3, #0]
 8016d5a:	e7d7      	b.n	8016d0c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8016d5c:	2300      	movs	r3, #0
 8016d5e:	6033      	str	r3, [r6, #0]
 8016d60:	220a      	movs	r2, #10
 8016d62:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8016d66:	fa1f f38c 	uxth.w	r3, ip
 8016d6a:	2b09      	cmp	r3, #9
 8016d6c:	d8ce      	bhi.n	8016d0c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8016d6e:	6833      	ldr	r3, [r6, #0]
 8016d70:	fb02 c303 	mla	r3, r2, r3, ip
 8016d74:	6033      	str	r3, [r6, #0]
 8016d76:	6803      	ldr	r3, [r0, #0]
 8016d78:	b10b      	cbz	r3, 8016d7e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8016d7a:	3302      	adds	r3, #2
 8016d7c:	6003      	str	r3, [r0, #0]
 8016d7e:	680b      	ldr	r3, [r1, #0]
 8016d80:	b10b      	cbz	r3, 8016d86 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8016d82:	3301      	adds	r3, #1
 8016d84:	600b      	str	r3, [r1, #0]
 8016d86:	6803      	ldr	r3, [r0, #0]
 8016d88:	b10b      	cbz	r3, 8016d8e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8016d8a:	881c      	ldrh	r4, [r3, #0]
 8016d8c:	e7e9      	b.n	8016d62 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8016d8e:	680c      	ldr	r4, [r1, #0]
 8016d90:	2c00      	cmp	r4, #0
 8016d92:	d0e6      	beq.n	8016d62 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8016d94:	7824      	ldrb	r4, [r4, #0]
 8016d96:	e7e4      	b.n	8016d62 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8016d98:	680b      	ldr	r3, [r1, #0]
 8016d9a:	b10b      	cbz	r3, 8016da0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8016d9c:	781b      	ldrb	r3, [r3, #0]
 8016d9e:	e7c5      	b.n	8016d2c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8016da0:	2200      	movs	r2, #0
 8016da2:	602a      	str	r2, [r5, #0]
 8016da4:	240a      	movs	r4, #10
 8016da6:	3b30      	subs	r3, #48	; 0x30
 8016da8:	b29e      	uxth	r6, r3
 8016daa:	2e09      	cmp	r6, #9
 8016dac:	682a      	ldr	r2, [r5, #0]
 8016dae:	d813      	bhi.n	8016dd8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8016db0:	fb04 3302 	mla	r3, r4, r2, r3
 8016db4:	602b      	str	r3, [r5, #0]
 8016db6:	6803      	ldr	r3, [r0, #0]
 8016db8:	b10b      	cbz	r3, 8016dbe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8016dba:	3302      	adds	r3, #2
 8016dbc:	6003      	str	r3, [r0, #0]
 8016dbe:	680b      	ldr	r3, [r1, #0]
 8016dc0:	b10b      	cbz	r3, 8016dc6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8016dc2:	3301      	adds	r3, #1
 8016dc4:	600b      	str	r3, [r1, #0]
 8016dc6:	6803      	ldr	r3, [r0, #0]
 8016dc8:	b10b      	cbz	r3, 8016dce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8016dca:	881b      	ldrh	r3, [r3, #0]
 8016dcc:	e7eb      	b.n	8016da6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8016dce:	680b      	ldr	r3, [r1, #0]
 8016dd0:	2b00      	cmp	r3, #0
 8016dd2:	d0e8      	beq.n	8016da6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8016dd4:	781b      	ldrb	r3, [r3, #0]
 8016dd6:	e7e6      	b.n	8016da6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8016dd8:	2a06      	cmp	r2, #6
 8016dda:	bfa8      	it	ge
 8016ddc:	2206      	movge	r2, #6
 8016dde:	602a      	str	r2, [r5, #0]
 8016de0:	e7b1      	b.n	8016d46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08016de2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8016de2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016de6:	b0a3      	sub	sp, #140	; 0x8c
 8016de8:	2600      	movs	r6, #0
 8016dea:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8016dee:	4607      	mov	r7, r0
 8016df0:	4688      	mov	r8, r1
 8016df2:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8016df6:	4631      	mov	r1, r6
 8016df8:	2242      	movs	r2, #66	; 0x42
 8016dfa:	4648      	mov	r0, r9
 8016dfc:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8016dfe:	960d      	str	r6, [sp, #52]	; 0x34
 8016e00:	f010 fd53 	bl	80278aa <memset>
 8016e04:	b15f      	cbz	r7, 8016e1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8016e06:	f108 3aff 	add.w	sl, r8, #4294967295
 8016e0a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016e0c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016e0e:	b152      	cbz	r2, 8016e26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8016e10:	8812      	ldrh	r2, [r2, #0]
 8016e12:	b10a      	cbz	r2, 8016e18 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8016e14:	459a      	cmp	sl, r3
 8016e16:	dc2e      	bgt.n	8016e76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8016e18:	2200      	movs	r2, #0
 8016e1a:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8016e1e:	4638      	mov	r0, r7
 8016e20:	b023      	add	sp, #140	; 0x8c
 8016e22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016e26:	9a08      	ldr	r2, [sp, #32]
 8016e28:	2a00      	cmp	r2, #0
 8016e2a:	d0f5      	beq.n	8016e18 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8016e2c:	7812      	ldrb	r2, [r2, #0]
 8016e2e:	e7f0      	b.n	8016e12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8016e30:	2d00      	cmp	r5, #0
 8016e32:	d0ea      	beq.n	8016e0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8016e34:	782a      	ldrb	r2, [r5, #0]
 8016e36:	b142      	cbz	r2, 8016e4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8016e38:	2a25      	cmp	r2, #37	; 0x25
 8016e3a:	d001      	beq.n	8016e40 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8016e3c:	459a      	cmp	sl, r3
 8016e3e:	dc08      	bgt.n	8016e52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8016e40:	f1bb 0f00 	cmp.w	fp, #0
 8016e44:	d121      	bne.n	8016e8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8016e46:	2d00      	cmp	r5, #0
 8016e48:	d0df      	beq.n	8016e0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8016e4a:	782a      	ldrb	r2, [r5, #0]
 8016e4c:	f04f 0b00 	mov.w	fp, #0
 8016e50:	e01d      	b.n	8016e8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8016e52:	f1bb 0f00 	cmp.w	fp, #0
 8016e56:	d078      	beq.n	8016f4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8016e58:	f8bb 2000 	ldrh.w	r2, [fp]
 8016e5c:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8016e60:	f1bb 0f00 	cmp.w	fp, #0
 8016e64:	d002      	beq.n	8016e6c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8016e66:	f10b 0202 	add.w	r2, fp, #2
 8016e6a:	9209      	str	r2, [sp, #36]	; 0x24
 8016e6c:	b10d      	cbz	r5, 8016e72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8016e6e:	3501      	adds	r5, #1
 8016e70:	9508      	str	r5, [sp, #32]
 8016e72:	3301      	adds	r3, #1
 8016e74:	930d      	str	r3, [sp, #52]	; 0x34
 8016e76:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8016e7a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016e7c:	f1bb 0f00 	cmp.w	fp, #0
 8016e80:	d0d6      	beq.n	8016e30 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8016e82:	f8bb 2000 	ldrh.w	r2, [fp]
 8016e86:	2a00      	cmp	r2, #0
 8016e88:	d1d6      	bne.n	8016e38 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8016e8a:	f8bb 2000 	ldrh.w	r2, [fp]
 8016e8e:	2a00      	cmp	r2, #0
 8016e90:	d0bb      	beq.n	8016e0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8016e92:	459a      	cmp	sl, r3
 8016e94:	ddb9      	ble.n	8016e0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8016e96:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8016e9a:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8016e9e:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8016ea2:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8016ea6:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8016eaa:	960e      	str	r6, [sp, #56]	; 0x38
 8016eac:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8016eb0:	960f      	str	r6, [sp, #60]	; 0x3c
 8016eb2:	f1bb 0f00 	cmp.w	fp, #0
 8016eb6:	d002      	beq.n	8016ebe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8016eb8:	f10b 0302 	add.w	r3, fp, #2
 8016ebc:	9309      	str	r3, [sp, #36]	; 0x24
 8016ebe:	b10d      	cbz	r5, 8016ec4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8016ec0:	1c6b      	adds	r3, r5, #1
 8016ec2:	9308      	str	r3, [sp, #32]
 8016ec4:	ab0f      	add	r3, sp, #60	; 0x3c
 8016ec6:	9305      	str	r3, [sp, #20]
 8016ec8:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8016ecc:	9304      	str	r3, [sp, #16]
 8016ece:	ab0e      	add	r3, sp, #56	; 0x38
 8016ed0:	9303      	str	r3, [sp, #12]
 8016ed2:	ab0c      	add	r3, sp, #48	; 0x30
 8016ed4:	9302      	str	r3, [sp, #8]
 8016ed6:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8016eda:	9301      	str	r3, [sp, #4]
 8016edc:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8016ee0:	9300      	str	r3, [sp, #0]
 8016ee2:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8016ee6:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8016eea:	a908      	add	r1, sp, #32
 8016eec:	a809      	add	r0, sp, #36	; 0x24
 8016eee:	f7ff fea8 	bl	8016c42 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8016ef2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016ef4:	2b00      	cmp	r3, #0
 8016ef6:	bfbe      	ittt	lt
 8016ef8:	6823      	ldrlt	r3, [r4, #0]
 8016efa:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8016efe:	930e      	strlt	r3, [sp, #56]	; 0x38
 8016f00:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8016f02:	bfb8      	it	lt
 8016f04:	3404      	addlt	r4, #4
 8016f06:	2b00      	cmp	r3, #0
 8016f08:	bfb8      	it	lt
 8016f0a:	6823      	ldrlt	r3, [r4, #0]
 8016f0c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8016f10:	bfbe      	ittt	lt
 8016f12:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8016f16:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8016f18:	3404      	addlt	r4, #4
 8016f1a:	b1d9      	cbz	r1, 8016f54 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8016f1c:	880b      	ldrh	r3, [r1, #0]
 8016f1e:	2b69      	cmp	r3, #105	; 0x69
 8016f20:	d01f      	beq.n	8016f62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8016f22:	d82f      	bhi.n	8016f84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8016f24:	2b58      	cmp	r3, #88	; 0x58
 8016f26:	d01c      	beq.n	8016f62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8016f28:	d818      	bhi.n	8016f5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8016f2a:	2b25      	cmp	r3, #37	; 0x25
 8016f2c:	d034      	beq.n	8016f98 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8016f2e:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8016f32:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016f34:	f1bb 0f00 	cmp.w	fp, #0
 8016f38:	f000 80b8 	beq.w	80170ac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8016f3c:	f8bb 5000 	ldrh.w	r5, [fp]
 8016f40:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8016f44:	3301      	adds	r3, #1
 8016f46:	930d      	str	r3, [sp, #52]	; 0x34
 8016f48:	e029      	b.n	8016f9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8016f4a:	b10d      	cbz	r5, 8016f50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8016f4c:	782a      	ldrb	r2, [r5, #0]
 8016f4e:	e785      	b.n	8016e5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8016f50:	462a      	mov	r2, r5
 8016f52:	e783      	b.n	8016e5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8016f54:	2a00      	cmp	r2, #0
 8016f56:	d0ea      	beq.n	8016f2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8016f58:	7813      	ldrb	r3, [r2, #0]
 8016f5a:	e7e0      	b.n	8016f1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8016f5c:	3b63      	subs	r3, #99	; 0x63
 8016f5e:	2b01      	cmp	r3, #1
 8016f60:	d8e5      	bhi.n	8016f2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8016f62:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8016f66:	b329      	cbz	r1, 8016fb4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8016f68:	880b      	ldrh	r3, [r1, #0]
 8016f6a:	2b69      	cmp	r3, #105	; 0x69
 8016f6c:	d063      	beq.n	8017036 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8016f6e:	d825      	bhi.n	8016fbc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8016f70:	2b63      	cmp	r3, #99	; 0x63
 8016f72:	d038      	beq.n	8016fe6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8016f74:	2b64      	cmp	r3, #100	; 0x64
 8016f76:	d05e      	beq.n	8017036 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8016f78:	2b58      	cmp	r3, #88	; 0x58
 8016f7a:	d07b      	beq.n	8017074 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8016f7c:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8016f80:	4625      	mov	r5, r4
 8016f82:	e036      	b.n	8016ff2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8016f84:	2b73      	cmp	r3, #115	; 0x73
 8016f86:	d0ec      	beq.n	8016f62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8016f88:	d802      	bhi.n	8016f90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8016f8a:	2b6f      	cmp	r3, #111	; 0x6f
 8016f8c:	d1cf      	bne.n	8016f2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8016f8e:	e7e8      	b.n	8016f62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8016f90:	2b75      	cmp	r3, #117	; 0x75
 8016f92:	d0e6      	beq.n	8016f62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8016f94:	2b78      	cmp	r3, #120	; 0x78
 8016f96:	e7f9      	b.n	8016f8c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8016f98:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8016f9a:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8016f9e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016fa0:	b10b      	cbz	r3, 8016fa6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8016fa2:	3302      	adds	r3, #2
 8016fa4:	9309      	str	r3, [sp, #36]	; 0x24
 8016fa6:	9b08      	ldr	r3, [sp, #32]
 8016fa8:	2b00      	cmp	r3, #0
 8016faa:	f43f af2e 	beq.w	8016e0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8016fae:	3301      	adds	r3, #1
 8016fb0:	9308      	str	r3, [sp, #32]
 8016fb2:	e72a      	b.n	8016e0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8016fb4:	2a00      	cmp	r2, #0
 8016fb6:	d0e1      	beq.n	8016f7c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8016fb8:	7813      	ldrb	r3, [r2, #0]
 8016fba:	e7d6      	b.n	8016f6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8016fbc:	2b73      	cmp	r3, #115	; 0x73
 8016fbe:	d036      	beq.n	801702e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8016fc0:	d807      	bhi.n	8016fd2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8016fc2:	2b6f      	cmp	r3, #111	; 0x6f
 8016fc4:	d1da      	bne.n	8016f7c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8016fc6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8016fc8:	1d25      	adds	r5, r4, #4
 8016fca:	eba8 0202 	sub.w	r2, r8, r2
 8016fce:	2308      	movs	r3, #8
 8016fd0:	e04a      	b.n	8017068 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8016fd2:	2b75      	cmp	r3, #117	; 0x75
 8016fd4:	d043      	beq.n	801705e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8016fd6:	2b78      	cmp	r3, #120	; 0x78
 8016fd8:	d1d0      	bne.n	8016f7c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8016fda:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8016fdc:	1d25      	adds	r5, r4, #4
 8016fde:	eba8 0202 	sub.w	r2, r8, r2
 8016fe2:	2310      	movs	r3, #16
 8016fe4:	e040      	b.n	8017068 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8016fe6:	6823      	ldr	r3, [r4, #0]
 8016fe8:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8016fec:	1d25      	adds	r5, r4, #4
 8016fee:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8016ff2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016ff4:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8016ff8:	2b00      	cmp	r3, #0
 8016ffa:	d052      	beq.n	80170a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8016ffc:	881a      	ldrh	r2, [r3, #0]
 8016ffe:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8017002:	a80d      	add	r0, sp, #52	; 0x34
 8017004:	9005      	str	r0, [sp, #20]
 8017006:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801700a:	9004      	str	r0, [sp, #16]
 801700c:	980e      	ldr	r0, [sp, #56]	; 0x38
 801700e:	9003      	str	r0, [sp, #12]
 8017010:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8017014:	9002      	str	r0, [sp, #8]
 8017016:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8017018:	9001      	str	r0, [sp, #4]
 801701a:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801701e:	9000      	str	r0, [sp, #0]
 8017020:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8017024:	a810      	add	r0, sp, #64	; 0x40
 8017026:	f7ff fd49 	bl	8016abc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801702a:	462c      	mov	r4, r5
 801702c:	e7b7      	b.n	8016f9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801702e:	6823      	ldr	r3, [r4, #0]
 8017030:	1d25      	adds	r5, r4, #4
 8017032:	9310      	str	r3, [sp, #64]	; 0x40
 8017034:	e7dd      	b.n	8016ff2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8017036:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017038:	6820      	ldr	r0, [r4, #0]
 801703a:	eba8 0202 	sub.w	r2, r8, r2
 801703e:	230a      	movs	r3, #10
 8017040:	b292      	uxth	r2, r2
 8017042:	4649      	mov	r1, r9
 8017044:	f7ff fcf0 	bl	8016a28 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8017048:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801704c:	2b2d      	cmp	r3, #45	; 0x2d
 801704e:	f104 0504 	add.w	r5, r4, #4
 8017052:	d1ce      	bne.n	8016ff2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8017054:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8017058:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801705a:	3302      	adds	r3, #2
 801705c:	e7e9      	b.n	8017032 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 801705e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017060:	1d25      	adds	r5, r4, #4
 8017062:	eba8 0202 	sub.w	r2, r8, r2
 8017066:	230a      	movs	r3, #10
 8017068:	b292      	uxth	r2, r2
 801706a:	4649      	mov	r1, r9
 801706c:	6820      	ldr	r0, [r4, #0]
 801706e:	f7ff fd07 	bl	8016a80 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8017072:	e7be      	b.n	8016ff2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8017074:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017076:	6820      	ldr	r0, [r4, #0]
 8017078:	eba8 0202 	sub.w	r2, r8, r2
 801707c:	b292      	uxth	r2, r2
 801707e:	2310      	movs	r3, #16
 8017080:	4649      	mov	r1, r9
 8017082:	f7ff fcfd 	bl	8016a80 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8017086:	1d25      	adds	r5, r4, #4
 8017088:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 801708c:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8017090:	2b00      	cmp	r3, #0
 8017092:	d0ae      	beq.n	8016ff2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8017094:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8017098:	2919      	cmp	r1, #25
 801709a:	d8f7      	bhi.n	801708c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801709c:	3b20      	subs	r3, #32
 801709e:	8013      	strh	r3, [r2, #0]
 80170a0:	e7f4      	b.n	801708c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 80170a2:	9a08      	ldr	r2, [sp, #32]
 80170a4:	2a00      	cmp	r2, #0
 80170a6:	d0aa      	beq.n	8016ffe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 80170a8:	7812      	ldrb	r2, [r2, #0]
 80170aa:	e7a8      	b.n	8016ffe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 80170ac:	2d00      	cmp	r5, #0
 80170ae:	f43f af47 	beq.w	8016f40 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 80170b2:	782d      	ldrb	r5, [r5, #0]
 80170b4:	e744      	b.n	8016f40 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

080170b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 80170b6:	b507      	push	{r0, r1, r2, lr}
 80170b8:	9300      	str	r3, [sp, #0]
 80170ba:	4613      	mov	r3, r2
 80170bc:	2200      	movs	r2, #0
 80170be:	f7ff fe90 	bl	8016de2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 80170c2:	b003      	add	sp, #12
 80170c4:	f85d fb04 	ldr.w	pc, [sp], #4

080170c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 80170c8:	b40c      	push	{r2, r3}
 80170ca:	b507      	push	{r0, r1, r2, lr}
 80170cc:	ab04      	add	r3, sp, #16
 80170ce:	f853 2b04 	ldr.w	r2, [r3], #4
 80170d2:	9301      	str	r3, [sp, #4]
 80170d4:	f7ff ffef 	bl	80170b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 80170d8:	b003      	add	sp, #12
 80170da:	f85d eb04 	ldr.w	lr, [sp], #4
 80170de:	b002      	add	sp, #8
 80170e0:	4770      	bx	lr
	...

080170e4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 80170e4:	4b01      	ldr	r3, [pc, #4]	; (80170ec <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 80170e6:	6018      	str	r0, [r3, #0]
 80170e8:	4770      	bx	lr
 80170ea:	bf00      	nop
 80170ec:	20013824 	.word	0x20013824

080170f0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 80170f0:	4b06      	ldr	r3, [pc, #24]	; (801710c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 80170f2:	881a      	ldrh	r2, [r3, #0]
 80170f4:	4282      	cmp	r2, r0
 80170f6:	d807      	bhi.n	8017108 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 80170f8:	4b05      	ldr	r3, [pc, #20]	; (8017110 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 80170fa:	881b      	ldrh	r3, [r3, #0]
 80170fc:	4413      	add	r3, r2
 80170fe:	4298      	cmp	r0, r3
 8017100:	bfac      	ite	ge
 8017102:	2000      	movge	r0, #0
 8017104:	2001      	movlt	r0, #1
 8017106:	4770      	bx	lr
 8017108:	2000      	movs	r0, #0
 801710a:	4770      	bx	lr
 801710c:	20013844 	.word	0x20013844
 8017110:	20013848 	.word	0x20013848

08017114 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8017114:	b508      	push	{r3, lr}
 8017116:	4601      	mov	r1, r0
 8017118:	f7ff ffea 	bl	80170f0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801711c:	b118      	cbz	r0, 8017126 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801711e:	4b02      	ldr	r3, [pc, #8]	; (8017128 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8017120:	681b      	ldr	r3, [r3, #0]
 8017122:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8017126:	bd08      	pop	{r3, pc}
 8017128:	20013828 	.word	0x20013828

0801712c <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801712c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801712e:	4c24      	ldr	r4, [pc, #144]	; (80171c0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8017130:	6823      	ldr	r3, [r4, #0]
 8017132:	2b00      	cmp	r3, #0
 8017134:	d042      	beq.n	80171bc <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8017136:	4a23      	ldr	r2, [pc, #140]	; (80171c4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8017138:	4d23      	ldr	r5, [pc, #140]	; (80171c8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801713a:	8811      	ldrh	r1, [r2, #0]
 801713c:	f8b5 c000 	ldrh.w	ip, [r5]
 8017140:	4822      	ldr	r0, [pc, #136]	; (80171cc <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8017142:	4461      	add	r1, ip
 8017144:	1c4a      	adds	r2, r1, #1
 8017146:	f022 0201 	bic.w	r2, r2, #1
 801714a:	008f      	lsls	r7, r1, #2
 801714c:	0412      	lsls	r2, r2, #16
 801714e:	19de      	adds	r6, r3, r7
 8017150:	0c12      	lsrs	r2, r2, #16
 8017152:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8017156:	6006      	str	r6, [r0, #0]
 8017158:	4e1d      	ldr	r6, [pc, #116]	; (80171d0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801715a:	19da      	adds	r2, r3, r7
 801715c:	6032      	str	r2, [r6, #0]
 801715e:	220e      	movs	r2, #14
 8017160:	fb02 f20c 	mul.w	r2, r2, ip
 8017164:	3203      	adds	r2, #3
 8017166:	f022 0203 	bic.w	r2, r2, #3
 801716a:	443a      	add	r2, r7
 801716c:	4f19      	ldr	r7, [pc, #100]	; (80171d4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801716e:	4413      	add	r3, r2
 8017170:	603b      	str	r3, [r7, #0]
 8017172:	4f19      	ldr	r7, [pc, #100]	; (80171d8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8017174:	2300      	movs	r3, #0
 8017176:	803b      	strh	r3, [r7, #0]
 8017178:	4f18      	ldr	r7, [pc, #96]	; (80171dc <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801717a:	683f      	ldr	r7, [r7, #0]
 801717c:	1aba      	subs	r2, r7, r2
 801717e:	4f18      	ldr	r7, [pc, #96]	; (80171e0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8017180:	603a      	str	r2, [r7, #0]
 8017182:	4a18      	ldr	r2, [pc, #96]	; (80171e4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8017184:	469c      	mov	ip, r3
 8017186:	8013      	strh	r3, [r2, #0]
 8017188:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801718c:	428b      	cmp	r3, r1
 801718e:	d10d      	bne.n	80171ac <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8017190:	882d      	ldrh	r5, [r5, #0]
 8017192:	6830      	ldr	r0, [r6, #0]
 8017194:	2300      	movs	r3, #0
 8017196:	240e      	movs	r4, #14
 8017198:	429d      	cmp	r5, r3
 801719a:	d90f      	bls.n	80171bc <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801719c:	fb04 0203 	mla	r2, r4, r3, r0
 80171a0:	3301      	adds	r3, #1
 80171a2:	7b11      	ldrb	r1, [r2, #12]
 80171a4:	f36f 1145 	bfc	r1, #5, #1
 80171a8:	7311      	strb	r1, [r2, #12]
 80171aa:	e7f5      	b.n	8017198 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 80171ac:	6822      	ldr	r2, [r4, #0]
 80171ae:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 80171b2:	6802      	ldr	r2, [r0, #0]
 80171b4:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 80171b8:	3301      	adds	r3, #1
 80171ba:	e7e7      	b.n	801718c <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 80171bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80171be:	bf00      	nop
 80171c0:	20013828 	.word	0x20013828
 80171c4:	20013844 	.word	0x20013844
 80171c8:	20013848 	.word	0x20013848
 80171cc:	2001383c 	.word	0x2001383c
 80171d0:	2001382c 	.word	0x2001382c
 80171d4:	20013834 	.word	0x20013834
 80171d8:	20013846 	.word	0x20013846
 80171dc:	20013830 	.word	0x20013830
 80171e0:	20013840 	.word	0x20013840
 80171e4:	20013838 	.word	0x20013838

080171e8 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 80171e8:	4b06      	ldr	r3, [pc, #24]	; (8017204 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 80171ea:	681b      	ldr	r3, [r3, #0]
 80171ec:	b943      	cbnz	r3, 8017200 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80171ee:	b139      	cbz	r1, 8017200 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80171f0:	4b05      	ldr	r3, [pc, #20]	; (8017208 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 80171f2:	801a      	strh	r2, [r3, #0]
 80171f4:	4b05      	ldr	r3, [pc, #20]	; (801720c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 80171f6:	6019      	str	r1, [r3, #0]
 80171f8:	4b05      	ldr	r3, [pc, #20]	; (8017210 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 80171fa:	6018      	str	r0, [r3, #0]
 80171fc:	f7ff bf96 	b.w	801712c <_ZN8touchgfx6Bitmap10clearCacheEv>
 8017200:	4770      	bx	lr
 8017202:	bf00      	nop
 8017204:	20013834 	.word	0x20013834
 8017208:	20013848 	.word	0x20013848
 801720c:	20013830 	.word	0x20013830
 8017210:	20013828 	.word	0x20013828

08017214 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8017214:	b470      	push	{r4, r5, r6}
 8017216:	4c07      	ldr	r4, [pc, #28]	; (8017234 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8017218:	6826      	ldr	r6, [r4, #0]
 801721a:	4605      	mov	r5, r0
 801721c:	4610      	mov	r0, r2
 801721e:	9a03      	ldr	r2, [sp, #12]
 8017220:	b936      	cbnz	r6, 8017230 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8017222:	6025      	str	r5, [r4, #0]
 8017224:	4c04      	ldr	r4, [pc, #16]	; (8017238 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8017226:	8021      	strh	r1, [r4, #0]
 8017228:	bc70      	pop	{r4, r5, r6}
 801722a:	4619      	mov	r1, r3
 801722c:	f7ff bfdc 	b.w	80171e8 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8017230:	bc70      	pop	{r4, r5, r6}
 8017232:	4770      	bx	lr
 8017234:	2001384c 	.word	0x2001384c
 8017238:	20013844 	.word	0x20013844

0801723c <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801723c:	4a12      	ldr	r2, [pc, #72]	; (8017288 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801723e:	8803      	ldrh	r3, [r0, #0]
 8017240:	8812      	ldrh	r2, [r2, #0]
 8017242:	4293      	cmp	r3, r2
 8017244:	d207      	bcs.n	8017256 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8017246:	4a11      	ldr	r2, [pc, #68]	; (801728c <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8017248:	6812      	ldr	r2, [r2, #0]
 801724a:	2114      	movs	r1, #20
 801724c:	fb01 2303 	mla	r3, r1, r3, r2
 8017250:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8017254:	4770      	bx	lr
 8017256:	490e      	ldr	r1, [pc, #56]	; (8017290 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8017258:	8809      	ldrh	r1, [r1, #0]
 801725a:	4411      	add	r1, r2
 801725c:	428b      	cmp	r3, r1
 801725e:	da04      	bge.n	801726a <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8017260:	1a9b      	subs	r3, r3, r2
 8017262:	4a0c      	ldr	r2, [pc, #48]	; (8017294 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8017264:	210e      	movs	r1, #14
 8017266:	6812      	ldr	r2, [r2, #0]
 8017268:	e7f0      	b.n	801724c <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801726a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801726e:	4293      	cmp	r3, r2
 8017270:	d108      	bne.n	8017284 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8017272:	4b09      	ldr	r3, [pc, #36]	; (8017298 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8017274:	781b      	ldrb	r3, [r3, #0]
 8017276:	b91b      	cbnz	r3, 8017280 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8017278:	4b08      	ldr	r3, [pc, #32]	; (801729c <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801727a:	f9b3 0000 	ldrsh.w	r0, [r3]
 801727e:	4770      	bx	lr
 8017280:	4b07      	ldr	r3, [pc, #28]	; (80172a0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8017282:	e7fa      	b.n	801727a <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8017284:	2000      	movs	r0, #0
 8017286:	4770      	bx	lr
 8017288:	20013844 	.word	0x20013844
 801728c:	2001384c 	.word	0x2001384c
 8017290:	20013848 	.word	0x20013848
 8017294:	2001382c 	.word	0x2001382c
 8017298:	200137b4 	.word	0x200137b4
 801729c:	200137b6 	.word	0x200137b6
 80172a0:	200137b8 	.word	0x200137b8

080172a4 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 80172a4:	4a12      	ldr	r2, [pc, #72]	; (80172f0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 80172a6:	8803      	ldrh	r3, [r0, #0]
 80172a8:	8812      	ldrh	r2, [r2, #0]
 80172aa:	4293      	cmp	r3, r2
 80172ac:	d207      	bcs.n	80172be <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 80172ae:	4a11      	ldr	r2, [pc, #68]	; (80172f4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 80172b0:	6812      	ldr	r2, [r2, #0]
 80172b2:	2114      	movs	r1, #20
 80172b4:	fb01 2303 	mla	r3, r1, r3, r2
 80172b8:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 80172bc:	4770      	bx	lr
 80172be:	490e      	ldr	r1, [pc, #56]	; (80172f8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 80172c0:	8809      	ldrh	r1, [r1, #0]
 80172c2:	4411      	add	r1, r2
 80172c4:	428b      	cmp	r3, r1
 80172c6:	da04      	bge.n	80172d2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 80172c8:	1a9b      	subs	r3, r3, r2
 80172ca:	4a0c      	ldr	r2, [pc, #48]	; (80172fc <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 80172cc:	210e      	movs	r1, #14
 80172ce:	6812      	ldr	r2, [r2, #0]
 80172d0:	e7f0      	b.n	80172b4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 80172d2:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80172d6:	4293      	cmp	r3, r2
 80172d8:	d108      	bne.n	80172ec <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 80172da:	4b09      	ldr	r3, [pc, #36]	; (8017300 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 80172dc:	781b      	ldrb	r3, [r3, #0]
 80172de:	b91b      	cbnz	r3, 80172e8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 80172e0:	4b08      	ldr	r3, [pc, #32]	; (8017304 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 80172e2:	f9b3 0000 	ldrsh.w	r0, [r3]
 80172e6:	4770      	bx	lr
 80172e8:	4b07      	ldr	r3, [pc, #28]	; (8017308 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 80172ea:	e7fa      	b.n	80172e2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 80172ec:	2000      	movs	r0, #0
 80172ee:	4770      	bx	lr
 80172f0:	20013844 	.word	0x20013844
 80172f4:	2001384c 	.word	0x2001384c
 80172f8:	20013848 	.word	0x20013848
 80172fc:	2001382c 	.word	0x2001382c
 8017300:	200137b4 	.word	0x200137b4
 8017304:	200137b8 	.word	0x200137b8
 8017308:	200137b6 	.word	0x200137b6

0801730c <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801730c:	b510      	push	{r4, lr}
 801730e:	4a1f      	ldr	r2, [pc, #124]	; (801738c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8017310:	880b      	ldrh	r3, [r1, #0]
 8017312:	8812      	ldrh	r2, [r2, #0]
 8017314:	4293      	cmp	r3, r2
 8017316:	d213      	bcs.n	8017340 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8017318:	4a1d      	ldr	r2, [pc, #116]	; (8017390 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 801731a:	6812      	ldr	r2, [r2, #0]
 801731c:	2114      	movs	r1, #20
 801731e:	fb01 2303 	mla	r3, r1, r3, r2
 8017322:	8a1a      	ldrh	r2, [r3, #16]
 8017324:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8017328:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801732c:	8a5b      	ldrh	r3, [r3, #18]
 801732e:	8004      	strh	r4, [r0, #0]
 8017330:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8017334:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8017338:	8041      	strh	r1, [r0, #2]
 801733a:	8082      	strh	r2, [r0, #4]
 801733c:	80c3      	strh	r3, [r0, #6]
 801733e:	e00e      	b.n	801735e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8017340:	4914      	ldr	r1, [pc, #80]	; (8017394 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 8017342:	8809      	ldrh	r1, [r1, #0]
 8017344:	4411      	add	r1, r2
 8017346:	428b      	cmp	r3, r1
 8017348:	da0a      	bge.n	8017360 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 801734a:	1a9b      	subs	r3, r3, r2
 801734c:	4a12      	ldr	r2, [pc, #72]	; (8017398 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 801734e:	6812      	ldr	r2, [r2, #0]
 8017350:	210e      	movs	r1, #14
 8017352:	fb01 2303 	mla	r3, r1, r3, r2
 8017356:	681a      	ldr	r2, [r3, #0]
 8017358:	6002      	str	r2, [r0, #0]
 801735a:	685a      	ldr	r2, [r3, #4]
 801735c:	6042      	str	r2, [r0, #4]
 801735e:	bd10      	pop	{r4, pc}
 8017360:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8017364:	4293      	cmp	r3, r2
 8017366:	d10b      	bne.n	8017380 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 8017368:	4b0c      	ldr	r3, [pc, #48]	; (801739c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801736a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801736e:	4b0c      	ldr	r3, [pc, #48]	; (80173a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8017370:	8081      	strh	r1, [r0, #4]
 8017372:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017376:	80c2      	strh	r2, [r0, #6]
 8017378:	2300      	movs	r3, #0
 801737a:	8003      	strh	r3, [r0, #0]
 801737c:	8043      	strh	r3, [r0, #2]
 801737e:	e7ee      	b.n	801735e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8017380:	2300      	movs	r3, #0
 8017382:	8003      	strh	r3, [r0, #0]
 8017384:	8043      	strh	r3, [r0, #2]
 8017386:	8083      	strh	r3, [r0, #4]
 8017388:	e7d8      	b.n	801733c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801738a:	bf00      	nop
 801738c:	20013844 	.word	0x20013844
 8017390:	2001384c 	.word	0x2001384c
 8017394:	20013848 	.word	0x20013848
 8017398:	2001382c 	.word	0x2001382c
 801739c:	200137b0 	.word	0x200137b0
 80173a0:	200137b2 	.word	0x200137b2

080173a4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 80173a4:	4a17      	ldr	r2, [pc, #92]	; (8017404 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 80173a6:	8803      	ldrh	r3, [r0, #0]
 80173a8:	8812      	ldrh	r2, [r2, #0]
 80173aa:	4293      	cmp	r3, r2
 80173ac:	d213      	bcs.n	80173d6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 80173ae:	4a16      	ldr	r2, [pc, #88]	; (8017408 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 80173b0:	6812      	ldr	r2, [r2, #0]
 80173b2:	2114      	movs	r1, #20
 80173b4:	fb01 2303 	mla	r3, r1, r3, r2
 80173b8:	8a1a      	ldrh	r2, [r3, #16]
 80173ba:	8919      	ldrh	r1, [r3, #8]
 80173bc:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80173c0:	428a      	cmp	r2, r1
 80173c2:	db1d      	blt.n	8017400 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80173c4:	8a58      	ldrh	r0, [r3, #18]
 80173c6:	f3c0 000c 	ubfx	r0, r0, #0, #13
 80173ca:	895b      	ldrh	r3, [r3, #10]
 80173cc:	4298      	cmp	r0, r3
 80173ce:	bfac      	ite	ge
 80173d0:	2000      	movge	r0, #0
 80173d2:	2001      	movlt	r0, #1
 80173d4:	4770      	bx	lr
 80173d6:	490d      	ldr	r1, [pc, #52]	; (801740c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 80173d8:	8809      	ldrh	r1, [r1, #0]
 80173da:	4411      	add	r1, r2
 80173dc:	428b      	cmp	r3, r1
 80173de:	da0d      	bge.n	80173fc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 80173e0:	1a9b      	subs	r3, r3, r2
 80173e2:	4a0b      	ldr	r2, [pc, #44]	; (8017410 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 80173e4:	6812      	ldr	r2, [r2, #0]
 80173e6:	210e      	movs	r1, #14
 80173e8:	fb01 2303 	mla	r3, r1, r3, r2
 80173ec:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 80173f0:	891a      	ldrh	r2, [r3, #8]
 80173f2:	4291      	cmp	r1, r2
 80173f4:	db04      	blt.n	8017400 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80173f6:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 80173fa:	e7e6      	b.n	80173ca <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 80173fc:	2000      	movs	r0, #0
 80173fe:	4770      	bx	lr
 8017400:	2001      	movs	r0, #1
 8017402:	4770      	bx	lr
 8017404:	20013844 	.word	0x20013844
 8017408:	2001384c 	.word	0x2001384c
 801740c:	20013848 	.word	0x20013848
 8017410:	2001382c 	.word	0x2001382c

08017414 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8017414:	4a12      	ldr	r2, [pc, #72]	; (8017460 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8017416:	8803      	ldrh	r3, [r0, #0]
 8017418:	8811      	ldrh	r1, [r2, #0]
 801741a:	428b      	cmp	r3, r1
 801741c:	d20b      	bcs.n	8017436 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801741e:	4a11      	ldr	r2, [pc, #68]	; (8017464 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8017420:	6812      	ldr	r2, [r2, #0]
 8017422:	b112      	cbz	r2, 801742a <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8017424:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8017428:	b9c0      	cbnz	r0, 801745c <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801742a:	4a0f      	ldr	r2, [pc, #60]	; (8017468 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801742c:	6811      	ldr	r1, [r2, #0]
 801742e:	2214      	movs	r2, #20
 8017430:	4353      	muls	r3, r2
 8017432:	58c8      	ldr	r0, [r1, r3]
 8017434:	4770      	bx	lr
 8017436:	4a0d      	ldr	r2, [pc, #52]	; (801746c <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8017438:	8812      	ldrh	r2, [r2, #0]
 801743a:	440a      	add	r2, r1
 801743c:	4293      	cmp	r3, r2
 801743e:	da04      	bge.n	801744a <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8017440:	4a08      	ldr	r2, [pc, #32]	; (8017464 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8017442:	6812      	ldr	r2, [r2, #0]
 8017444:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8017448:	4770      	bx	lr
 801744a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801744e:	4293      	cmp	r3, r2
 8017450:	d103      	bne.n	801745a <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8017452:	4b07      	ldr	r3, [pc, #28]	; (8017470 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8017454:	681b      	ldr	r3, [r3, #0]
 8017456:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8017458:	4770      	bx	lr
 801745a:	2000      	movs	r0, #0
 801745c:	4770      	bx	lr
 801745e:	bf00      	nop
 8017460:	20013844 	.word	0x20013844
 8017464:	20013828 	.word	0x20013828
 8017468:	2001384c 	.word	0x2001384c
 801746c:	20013848 	.word	0x20013848
 8017470:	200137bc 	.word	0x200137bc

08017474 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8017474:	4b24      	ldr	r3, [pc, #144]	; (8017508 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8017476:	8802      	ldrh	r2, [r0, #0]
 8017478:	8818      	ldrh	r0, [r3, #0]
 801747a:	4282      	cmp	r2, r0
 801747c:	d221      	bcs.n	80174c2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801747e:	4b23      	ldr	r3, [pc, #140]	; (801750c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8017480:	6819      	ldr	r1, [r3, #0]
 8017482:	2314      	movs	r3, #20
 8017484:	fb03 1302 	mla	r3, r3, r2, r1
 8017488:	6858      	ldr	r0, [r3, #4]
 801748a:	2800      	cmp	r0, #0
 801748c:	d03a      	beq.n	8017504 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801748e:	4920      	ldr	r1, [pc, #128]	; (8017510 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8017490:	6809      	ldr	r1, [r1, #0]
 8017492:	2900      	cmp	r1, #0
 8017494:	d036      	beq.n	8017504 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8017496:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801749a:	2900      	cmp	r1, #0
 801749c:	d032      	beq.n	8017504 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801749e:	891a      	ldrh	r2, [r3, #8]
 80174a0:	8958      	ldrh	r0, [r3, #10]
 80174a2:	4350      	muls	r0, r2
 80174a4:	7c5a      	ldrb	r2, [r3, #17]
 80174a6:	7cdb      	ldrb	r3, [r3, #19]
 80174a8:	0952      	lsrs	r2, r2, #5
 80174aa:	f3c3 1342 	ubfx	r3, r3, #5, #3
 80174ae:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80174b2:	2b0b      	cmp	r3, #11
 80174b4:	bf18      	it	ne
 80174b6:	0040      	lslne	r0, r0, #1
 80174b8:	3003      	adds	r0, #3
 80174ba:	f020 0003 	bic.w	r0, r0, #3
 80174be:	4408      	add	r0, r1
 80174c0:	4770      	bx	lr
 80174c2:	4b14      	ldr	r3, [pc, #80]	; (8017514 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 80174c4:	881b      	ldrh	r3, [r3, #0]
 80174c6:	4403      	add	r3, r0
 80174c8:	429a      	cmp	r2, r3
 80174ca:	da1a      	bge.n	8017502 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80174cc:	4b12      	ldr	r3, [pc, #72]	; (8017518 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 80174ce:	681b      	ldr	r3, [r3, #0]
 80174d0:	1a10      	subs	r0, r2, r0
 80174d2:	210e      	movs	r1, #14
 80174d4:	fb01 3000 	mla	r0, r1, r0, r3
 80174d8:	7b03      	ldrb	r3, [r0, #12]
 80174da:	f003 031f 	and.w	r3, r3, #31
 80174de:	2b0b      	cmp	r3, #11
 80174e0:	d10b      	bne.n	80174fa <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 80174e2:	8903      	ldrh	r3, [r0, #8]
 80174e4:	8940      	ldrh	r0, [r0, #10]
 80174e6:	4358      	muls	r0, r3
 80174e8:	4b09      	ldr	r3, [pc, #36]	; (8017510 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80174ea:	6819      	ldr	r1, [r3, #0]
 80174ec:	3003      	adds	r0, #3
 80174ee:	f020 0303 	bic.w	r3, r0, #3
 80174f2:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 80174f6:	4418      	add	r0, r3
 80174f8:	4770      	bx	lr
 80174fa:	2b0d      	cmp	r3, #13
 80174fc:	d101      	bne.n	8017502 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80174fe:	300d      	adds	r0, #13
 8017500:	4770      	bx	lr
 8017502:	2000      	movs	r0, #0
 8017504:	4770      	bx	lr
 8017506:	bf00      	nop
 8017508:	20013844 	.word	0x20013844
 801750c:	2001384c 	.word	0x2001384c
 8017510:	20013828 	.word	0x20013828
 8017514:	20013848 	.word	0x20013848
 8017518:	2001382c 	.word	0x2001382c

0801751c <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801751c:	b510      	push	{r4, lr}
 801751e:	4a17      	ldr	r2, [pc, #92]	; (801757c <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8017520:	8803      	ldrh	r3, [r0, #0]
 8017522:	8812      	ldrh	r2, [r2, #0]
 8017524:	4293      	cmp	r3, r2
 8017526:	d20c      	bcs.n	8017542 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8017528:	4a15      	ldr	r2, [pc, #84]	; (8017580 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 801752a:	6812      	ldr	r2, [r2, #0]
 801752c:	2114      	movs	r1, #20
 801752e:	fb01 2303 	mla	r3, r1, r3, r2
 8017532:	7c58      	ldrb	r0, [r3, #17]
 8017534:	0942      	lsrs	r2, r0, #5
 8017536:	7cd8      	ldrb	r0, [r3, #19]
 8017538:	f3c0 1042 	ubfx	r0, r0, #5, #3
 801753c:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8017540:	bd10      	pop	{r4, pc}
 8017542:	4910      	ldr	r1, [pc, #64]	; (8017584 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8017544:	8809      	ldrh	r1, [r1, #0]
 8017546:	4411      	add	r1, r2
 8017548:	428b      	cmp	r3, r1
 801754a:	da09      	bge.n	8017560 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 801754c:	1a9b      	subs	r3, r3, r2
 801754e:	4a0e      	ldr	r2, [pc, #56]	; (8017588 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8017550:	6812      	ldr	r2, [r2, #0]
 8017552:	210e      	movs	r1, #14
 8017554:	fb01 2303 	mla	r3, r1, r3, r2
 8017558:	7b18      	ldrb	r0, [r3, #12]
 801755a:	f000 001f 	and.w	r0, r0, #31
 801755e:	e7ef      	b.n	8017540 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8017560:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8017564:	4293      	cmp	r3, r2
 8017566:	d106      	bne.n	8017576 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8017568:	f7eb fcb0 	bl	8002ecc <_ZN8touchgfx3HAL3lcdEv>
 801756c:	6803      	ldr	r3, [r0, #0]
 801756e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017572:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017574:	4718      	bx	r3
 8017576:	2000      	movs	r0, #0
 8017578:	e7e2      	b.n	8017540 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801757a:	bf00      	nop
 801757c:	20013844 	.word	0x20013844
 8017580:	2001384c 	.word	0x2001384c
 8017584:	20013848 	.word	0x20013848
 8017588:	2001382c 	.word	0x2001382c

0801758c <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801758c:	2010      	movs	r0, #16
 801758e:	4770      	bx	lr

08017590 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8017590:	2000      	movs	r0, #0
 8017592:	4770      	bx	lr

08017594 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8017594:	4b02      	ldr	r3, [pc, #8]	; (80175a0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8017596:	8818      	ldrh	r0, [r3, #0]
 8017598:	0040      	lsls	r0, r0, #1
 801759a:	b280      	uxth	r0, r0
 801759c:	4770      	bx	lr
 801759e:	bf00      	nop
 80175a0:	200137b6 	.word	0x200137b6

080175a4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 80175a4:	2bff      	cmp	r3, #255	; 0xff
 80175a6:	d050      	beq.n	801764a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 80175a8:	2a0b      	cmp	r2, #11
 80175aa:	d04a      	beq.n	8017642 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 80175ac:	d80e      	bhi.n	80175cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 80175ae:	2a03      	cmp	r2, #3
 80175b0:	d03f      	beq.n	8017632 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 80175b2:	d804      	bhi.n	80175be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 80175b4:	2a01      	cmp	r2, #1
 80175b6:	d03e      	beq.n	8017636 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 80175b8:	d93f      	bls.n	801763a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 80175ba:	6b80      	ldr	r0, [r0, #56]	; 0x38
 80175bc:	4770      	bx	lr
 80175be:	2a09      	cmp	r2, #9
 80175c0:	d03f      	beq.n	8017642 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 80175c2:	d83c      	bhi.n	801763e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 80175c4:	2a08      	cmp	r2, #8
 80175c6:	d03a      	beq.n	801763e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 80175c8:	2000      	movs	r0, #0
 80175ca:	4770      	bx	lr
 80175cc:	2a2f      	cmp	r2, #47	; 0x2f
 80175ce:	d024      	beq.n	801761a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 80175d0:	d80d      	bhi.n	80175ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 80175d2:	2a2d      	cmp	r2, #45	; 0x2d
 80175d4:	d014      	beq.n	8017600 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 80175d6:	d826      	bhi.n	8017626 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 80175d8:	2a2c      	cmp	r2, #44	; 0x2c
 80175da:	d1f5      	bne.n	80175c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80175dc:	684b      	ldr	r3, [r1, #4]
 80175de:	781b      	ldrb	r3, [r3, #0]
 80175e0:	2b01      	cmp	r3, #1
 80175e2:	d018      	beq.n	8017616 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 80175e4:	d323      	bcc.n	801762e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 80175e6:	2b02      	cmp	r3, #2
 80175e8:	d1ee      	bne.n	80175c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80175ea:	6880      	ldr	r0, [r0, #8]
 80175ec:	4770      	bx	lr
 80175ee:	2a31      	cmp	r2, #49	; 0x31
 80175f0:	d004      	beq.n	80175fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 80175f2:	d328      	bcc.n	8017646 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80175f4:	2a32      	cmp	r2, #50	; 0x32
 80175f6:	d026      	beq.n	8017646 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80175f8:	2a33      	cmp	r2, #51	; 0x33
 80175fa:	d1e5      	bne.n	80175c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80175fc:	6f00      	ldr	r0, [r0, #112]	; 0x70
 80175fe:	4770      	bx	lr
 8017600:	684b      	ldr	r3, [r1, #4]
 8017602:	781b      	ldrb	r3, [r3, #0]
 8017604:	2b01      	cmp	r3, #1
 8017606:	d004      	beq.n	8017612 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8017608:	d30b      	bcc.n	8017622 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801760a:	2b02      	cmp	r3, #2
 801760c:	d1dc      	bne.n	80175c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801760e:	6900      	ldr	r0, [r0, #16]
 8017610:	4770      	bx	lr
 8017612:	6a00      	ldr	r0, [r0, #32]
 8017614:	4770      	bx	lr
 8017616:	6980      	ldr	r0, [r0, #24]
 8017618:	4770      	bx	lr
 801761a:	684b      	ldr	r3, [r1, #4]
 801761c:	781b      	ldrb	r3, [r3, #0]
 801761e:	2b00      	cmp	r3, #0
 8017620:	d1d2      	bne.n	80175c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017622:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8017624:	4770      	bx	lr
 8017626:	684b      	ldr	r3, [r1, #4]
 8017628:	781b      	ldrb	r3, [r3, #0]
 801762a:	2b00      	cmp	r3, #0
 801762c:	d1cc      	bne.n	80175c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801762e:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8017630:	4770      	bx	lr
 8017632:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8017634:	4770      	bx	lr
 8017636:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8017638:	4770      	bx	lr
 801763a:	6c00      	ldr	r0, [r0, #64]	; 0x40
 801763c:	4770      	bx	lr
 801763e:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8017640:	4770      	bx	lr
 8017642:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8017644:	4770      	bx	lr
 8017646:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8017648:	4770      	bx	lr
 801764a:	2a0b      	cmp	r2, #11
 801764c:	d049      	beq.n	80176e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801764e:	d80e      	bhi.n	801766e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8017650:	2a03      	cmp	r2, #3
 8017652:	d040      	beq.n	80176d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8017654:	d804      	bhi.n	8017660 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8017656:	2a01      	cmp	r2, #1
 8017658:	d03f      	beq.n	80176da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 801765a:	d940      	bls.n	80176de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 801765c:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801765e:	4770      	bx	lr
 8017660:	2a09      	cmp	r2, #9
 8017662:	d03e      	beq.n	80176e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8017664:	d801      	bhi.n	801766a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8017666:	2a08      	cmp	r2, #8
 8017668:	d1ae      	bne.n	80175c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801766a:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 801766c:	4770      	bx	lr
 801766e:	2a2f      	cmp	r2, #47	; 0x2f
 8017670:	d024      	beq.n	80176bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8017672:	d80d      	bhi.n	8017690 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8017674:	2a2d      	cmp	r2, #45	; 0x2d
 8017676:	d014      	beq.n	80176a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8017678:	d826      	bhi.n	80176c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 801767a:	2a2c      	cmp	r2, #44	; 0x2c
 801767c:	d1a4      	bne.n	80175c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801767e:	684b      	ldr	r3, [r1, #4]
 8017680:	781b      	ldrb	r3, [r3, #0]
 8017682:	2b01      	cmp	r3, #1
 8017684:	d018      	beq.n	80176b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8017686:	d324      	bcc.n	80176d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8017688:	2b02      	cmp	r3, #2
 801768a:	d19d      	bne.n	80175c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801768c:	68c0      	ldr	r0, [r0, #12]
 801768e:	4770      	bx	lr
 8017690:	2a31      	cmp	r2, #49	; 0x31
 8017692:	d004      	beq.n	801769e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8017694:	d327      	bcc.n	80176e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8017696:	2a32      	cmp	r2, #50	; 0x32
 8017698:	d025      	beq.n	80176e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801769a:	2a33      	cmp	r2, #51	; 0x33
 801769c:	d194      	bne.n	80175c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801769e:	6f40      	ldr	r0, [r0, #116]	; 0x74
 80176a0:	4770      	bx	lr
 80176a2:	684b      	ldr	r3, [r1, #4]
 80176a4:	781b      	ldrb	r3, [r3, #0]
 80176a6:	2b01      	cmp	r3, #1
 80176a8:	d004      	beq.n	80176b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 80176aa:	d30b      	bcc.n	80176c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 80176ac:	2b02      	cmp	r3, #2
 80176ae:	d18b      	bne.n	80175c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80176b0:	6940      	ldr	r0, [r0, #20]
 80176b2:	4770      	bx	lr
 80176b4:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80176b6:	4770      	bx	lr
 80176b8:	69c0      	ldr	r0, [r0, #28]
 80176ba:	4770      	bx	lr
 80176bc:	684b      	ldr	r3, [r1, #4]
 80176be:	781b      	ldrb	r3, [r3, #0]
 80176c0:	2b00      	cmp	r3, #0
 80176c2:	d181      	bne.n	80175c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80176c4:	6b40      	ldr	r0, [r0, #52]	; 0x34
 80176c6:	4770      	bx	lr
 80176c8:	684b      	ldr	r3, [r1, #4]
 80176ca:	781b      	ldrb	r3, [r3, #0]
 80176cc:	2b00      	cmp	r3, #0
 80176ce:	f47f af7b 	bne.w	80175c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80176d2:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 80176d4:	4770      	bx	lr
 80176d6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 80176d8:	4770      	bx	lr
 80176da:	6d40      	ldr	r0, [r0, #84]	; 0x54
 80176dc:	4770      	bx	lr
 80176de:	6c40      	ldr	r0, [r0, #68]	; 0x44
 80176e0:	4770      	bx	lr
 80176e2:	6e40      	ldr	r0, [r0, #100]	; 0x64
 80176e4:	4770      	bx	lr
 80176e6:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 80176e8:	4770      	bx	lr

080176ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80176ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80176ee:	b087      	sub	sp, #28
 80176f0:	9815      	ldr	r0, [sp, #84]	; 0x54
 80176f2:	9205      	str	r2, [sp, #20]
 80176f4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80176f8:	9202      	str	r2, [sp, #8]
 80176fa:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80176fe:	9101      	str	r1, [sp, #4]
 8017700:	6841      	ldr	r1, [r0, #4]
 8017702:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8017706:	fb01 2404 	mla	r4, r1, r4, r2
 801770a:	6802      	ldr	r2, [r0, #0]
 801770c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017710:	f8de 2000 	ldr.w	r2, [lr]
 8017714:	9203      	str	r2, [sp, #12]
 8017716:	f8de 2004 	ldr.w	r2, [lr, #4]
 801771a:	3204      	adds	r2, #4
 801771c:	9204      	str	r2, [sp, #16]
 801771e:	9a02      	ldr	r2, [sp, #8]
 8017720:	43d6      	mvns	r6, r2
 8017722:	b2f6      	uxtb	r6, r6
 8017724:	9a01      	ldr	r2, [sp, #4]
 8017726:	2a00      	cmp	r2, #0
 8017728:	dc03      	bgt.n	8017732 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801772a:	9a05      	ldr	r2, [sp, #20]
 801772c:	2a00      	cmp	r2, #0
 801772e:	f340 8129 	ble.w	8017984 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8017732:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8017734:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8017738:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801773c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8017740:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8017742:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8017746:	2b00      	cmp	r3, #0
 8017748:	dd0e      	ble.n	8017768 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801774a:	1408      	asrs	r0, r1, #16
 801774c:	d405      	bmi.n	801775a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801774e:	4560      	cmp	r0, ip
 8017750:	da03      	bge.n	801775a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017752:	1410      	asrs	r0, r2, #16
 8017754:	d401      	bmi.n	801775a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017756:	42b8      	cmp	r0, r7
 8017758:	db07      	blt.n	801776a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801775a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801775c:	4401      	add	r1, r0
 801775e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8017760:	3b01      	subs	r3, #1
 8017762:	4402      	add	r2, r0
 8017764:	3402      	adds	r4, #2
 8017766:	e7ee      	b.n	8017746 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8017768:	d071      	beq.n	801784e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801776a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801776c:	1e58      	subs	r0, r3, #1
 801776e:	fb05 1500 	mla	r5, r5, r0, r1
 8017772:	142d      	asrs	r5, r5, #16
 8017774:	d45f      	bmi.n	8017836 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8017776:	4565      	cmp	r5, ip
 8017778:	da5d      	bge.n	8017836 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801777a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801777c:	fb05 2000 	mla	r0, r5, r0, r2
 8017780:	1400      	asrs	r0, r0, #16
 8017782:	d458      	bmi.n	8017836 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8017784:	42b8      	cmp	r0, r7
 8017786:	da56      	bge.n	8017836 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8017788:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801778c:	4699      	mov	r9, r3
 801778e:	46a2      	mov	sl, r4
 8017790:	f1b9 0f00 	cmp.w	r9, #0
 8017794:	dd57      	ble.n	8017846 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8017796:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801779a:	9803      	ldr	r0, [sp, #12]
 801779c:	ea4f 4c22 	mov.w	ip, r2, asr #16
 80177a0:	140d      	asrs	r5, r1, #16
 80177a2:	fb07 000c 	mla	r0, r7, ip, r0
 80177a6:	f109 39ff 	add.w	r9, r9, #4294967295
 80177aa:	5d40      	ldrb	r0, [r0, r5]
 80177ac:	9d04      	ldr	r5, [sp, #16]
 80177ae:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80177b2:	f8ba 5000 	ldrh.w	r5, [sl]
 80177b6:	122f      	asrs	r7, r5, #8
 80177b8:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80177bc:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80177c0:	fb17 f706 	smulbb	r7, r7, r6
 80177c4:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80177c8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80177cc:	00ed      	lsls	r5, r5, #3
 80177ce:	fb0c 7c0b 	mla	ip, ip, fp, r7
 80177d2:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 80177d6:	10c7      	asrs	r7, r0, #3
 80177d8:	b2ed      	uxtb	r5, r5
 80177da:	00c0      	lsls	r0, r0, #3
 80177dc:	fb18 f806 	smulbb	r8, r8, r6
 80177e0:	fb15 f506 	smulbb	r5, r5, r6
 80177e4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80177e8:	b2c0      	uxtb	r0, r0
 80177ea:	fa1f fc8c 	uxth.w	ip, ip
 80177ee:	fb07 870b 	mla	r7, r7, fp, r8
 80177f2:	fb00 500b 	mla	r0, r0, fp, r5
 80177f6:	b280      	uxth	r0, r0
 80177f8:	b2bf      	uxth	r7, r7
 80177fa:	f10c 0501 	add.w	r5, ip, #1
 80177fe:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8017802:	f107 0801 	add.w	r8, r7, #1
 8017806:	1c45      	adds	r5, r0, #1
 8017808:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801780c:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8017810:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8017812:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8017816:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801781a:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801781e:	ea45 0c0c 	orr.w	ip, r5, ip
 8017822:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8017826:	4401      	add	r1, r0
 8017828:	9814      	ldr	r0, [sp, #80]	; 0x50
 801782a:	ea4c 0c08 	orr.w	ip, ip, r8
 801782e:	f82a cb02 	strh.w	ip, [sl], #2
 8017832:	4402      	add	r2, r0
 8017834:	e7ac      	b.n	8017790 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8017836:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801783a:	f04f 0800 	mov.w	r8, #0
 801783e:	eb03 0008 	add.w	r0, r3, r8
 8017842:	2800      	cmp	r0, #0
 8017844:	dc41      	bgt.n	80178ca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8017846:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801784a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801784e:	9b01      	ldr	r3, [sp, #4]
 8017850:	2b00      	cmp	r3, #0
 8017852:	f340 8097 	ble.w	8017984 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8017856:	ee30 0a04 	vadd.f32	s0, s0, s8
 801785a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801785e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8017862:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017864:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017868:	ee31 1a05 	vadd.f32	s2, s2, s10
 801786c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017870:	eef0 6a62 	vmov.f32	s13, s5
 8017874:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017878:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801787c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017880:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8017884:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017888:	eef0 6a43 	vmov.f32	s13, s6
 801788c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017890:	ee12 2a90 	vmov	r2, s5
 8017894:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017898:	fb92 f3f3 	sdiv	r3, r2, r3
 801789c:	ee13 2a10 	vmov	r2, s6
 80178a0:	9313      	str	r3, [sp, #76]	; 0x4c
 80178a2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80178a4:	fb92 f3f3 	sdiv	r3, r2, r3
 80178a8:	9314      	str	r3, [sp, #80]	; 0x50
 80178aa:	9b01      	ldr	r3, [sp, #4]
 80178ac:	9a05      	ldr	r2, [sp, #20]
 80178ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80178b2:	3b01      	subs	r3, #1
 80178b4:	9301      	str	r3, [sp, #4]
 80178b6:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 80178ba:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80178bc:	eeb0 3a67 	vmov.f32	s6, s15
 80178c0:	bf08      	it	eq
 80178c2:	4613      	moveq	r3, r2
 80178c4:	eef0 2a47 	vmov.f32	s5, s14
 80178c8:	e72c      	b.n	8017724 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80178ca:	140f      	asrs	r7, r1, #16
 80178cc:	d453      	bmi.n	8017976 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80178ce:	f8de 5008 	ldr.w	r5, [lr, #8]
 80178d2:	42bd      	cmp	r5, r7
 80178d4:	dd4f      	ble.n	8017976 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80178d6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80178da:	d44c      	bmi.n	8017976 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80178dc:	f8de 000c 	ldr.w	r0, [lr, #12]
 80178e0:	4560      	cmp	r0, ip
 80178e2:	dd48      	ble.n	8017976 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80178e4:	9803      	ldr	r0, [sp, #12]
 80178e6:	b22d      	sxth	r5, r5
 80178e8:	fb0c 0505 	mla	r5, ip, r5, r0
 80178ec:	5de8      	ldrb	r0, [r5, r7]
 80178ee:	9d04      	ldr	r5, [sp, #16]
 80178f0:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80178f4:	f06f 0501 	mvn.w	r5, #1
 80178f8:	fb05 fb08 	mul.w	fp, r5, r8
 80178fc:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8017900:	f834 500b 	ldrh.w	r5, [r4, fp]
 8017904:	122f      	asrs	r7, r5, #8
 8017906:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801790a:	fb17 f706 	smulbb	r7, r7, r6
 801790e:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8017912:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017916:	00ed      	lsls	r5, r5, #3
 8017918:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801791c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8017920:	10c7      	asrs	r7, r0, #3
 8017922:	b2ed      	uxtb	r5, r5
 8017924:	00c0      	lsls	r0, r0, #3
 8017926:	fb19 f906 	smulbb	r9, r9, r6
 801792a:	fb15 f506 	smulbb	r5, r5, r6
 801792e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017932:	b2c0      	uxtb	r0, r0
 8017934:	fa1f fc8c 	uxth.w	ip, ip
 8017938:	fb07 970a 	mla	r7, r7, sl, r9
 801793c:	fb00 500a 	mla	r0, r0, sl, r5
 8017940:	b2bf      	uxth	r7, r7
 8017942:	b280      	uxth	r0, r0
 8017944:	f10c 0501 	add.w	r5, ip, #1
 8017948:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801794c:	f107 0901 	add.w	r9, r7, #1
 8017950:	1c45      	adds	r5, r0, #1
 8017952:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8017956:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801795a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801795e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8017962:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8017966:	ea45 0c0c 	orr.w	ip, r5, ip
 801796a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801796e:	ea4c 0c09 	orr.w	ip, ip, r9
 8017972:	f824 c00b 	strh.w	ip, [r4, fp]
 8017976:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8017978:	4401      	add	r1, r0
 801797a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801797c:	f108 38ff 	add.w	r8, r8, #4294967295
 8017980:	4402      	add	r2, r0
 8017982:	e75c      	b.n	801783e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8017984:	b007      	add	sp, #28
 8017986:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801798a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801798a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801798e:	b085      	sub	sp, #20
 8017990:	4693      	mov	fp, r2
 8017992:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8017994:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8017996:	6870      	ldr	r0, [r6, #4]
 8017998:	9100      	str	r1, [sp, #0]
 801799a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801799e:	fb00 2404 	mla	r4, r0, r4, r2
 80179a2:	6832      	ldr	r2, [r6, #0]
 80179a4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80179a8:	682a      	ldr	r2, [r5, #0]
 80179aa:	9201      	str	r2, [sp, #4]
 80179ac:	686a      	ldr	r2, [r5, #4]
 80179ae:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 80179b2:	3204      	adds	r2, #4
 80179b4:	9202      	str	r2, [sp, #8]
 80179b6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80179ba:	9a00      	ldr	r2, [sp, #0]
 80179bc:	2a00      	cmp	r2, #0
 80179be:	dc03      	bgt.n	80179c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80179c0:	f1bb 0f00 	cmp.w	fp, #0
 80179c4:	f340 80a0 	ble.w	8017b08 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80179c8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80179ca:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80179ce:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80179d2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80179d6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80179d8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80179dc:	2b00      	cmp	r3, #0
 80179de:	dd0c      	ble.n	80179fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80179e0:	1406      	asrs	r6, r0, #16
 80179e2:	d405      	bmi.n	80179f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80179e4:	454e      	cmp	r6, r9
 80179e6:	da03      	bge.n	80179f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80179e8:	1416      	asrs	r6, r2, #16
 80179ea:	d401      	bmi.n	80179f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80179ec:	4546      	cmp	r6, r8
 80179ee:	db05      	blt.n	80179fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80179f0:	4470      	add	r0, lr
 80179f2:	4462      	add	r2, ip
 80179f4:	3b01      	subs	r3, #1
 80179f6:	3402      	adds	r4, #2
 80179f8:	e7f0      	b.n	80179dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80179fa:	d00f      	beq.n	8017a1c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80179fc:	1e5e      	subs	r6, r3, #1
 80179fe:	fb0e 0706 	mla	r7, lr, r6, r0
 8017a02:	143f      	asrs	r7, r7, #16
 8017a04:	d541      	bpl.n	8017a8a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8017a06:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8017a0a:	4698      	mov	r8, r3
 8017a0c:	9603      	str	r6, [sp, #12]
 8017a0e:	f1b8 0f00 	cmp.w	r8, #0
 8017a12:	dc59      	bgt.n	8017ac8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8017a14:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017a18:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017a1c:	9b00      	ldr	r3, [sp, #0]
 8017a1e:	2b00      	cmp	r3, #0
 8017a20:	dd72      	ble.n	8017b08 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8017a22:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017a26:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017a2a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017a2e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017a30:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017a34:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017a38:	eeb0 6a62 	vmov.f32	s12, s5
 8017a3c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017a40:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017a44:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017a48:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8017a4c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017a50:	eeb0 6a43 	vmov.f32	s12, s6
 8017a54:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017a58:	ee12 2a90 	vmov	r2, s5
 8017a5c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017a60:	fb92 fef3 	sdiv	lr, r2, r3
 8017a64:	ee13 2a10 	vmov	r2, s6
 8017a68:	fb92 fcf3 	sdiv	ip, r2, r3
 8017a6c:	9b00      	ldr	r3, [sp, #0]
 8017a6e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017a72:	3b01      	subs	r3, #1
 8017a74:	9300      	str	r3, [sp, #0]
 8017a76:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8017a7a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017a7c:	eeb0 3a67 	vmov.f32	s6, s15
 8017a80:	bf08      	it	eq
 8017a82:	465b      	moveq	r3, fp
 8017a84:	eef0 2a47 	vmov.f32	s5, s14
 8017a88:	e797      	b.n	80179ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8017a8a:	454f      	cmp	r7, r9
 8017a8c:	dabb      	bge.n	8017a06 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8017a8e:	fb0c 2606 	mla	r6, ip, r6, r2
 8017a92:	1436      	asrs	r6, r6, #16
 8017a94:	d4b7      	bmi.n	8017a06 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8017a96:	4546      	cmp	r6, r8
 8017a98:	dab5      	bge.n	8017a06 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8017a9a:	461e      	mov	r6, r3
 8017a9c:	46a0      	mov	r8, r4
 8017a9e:	2e00      	cmp	r6, #0
 8017aa0:	ddb8      	ble.n	8017a14 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8017aa2:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8017aa6:	9901      	ldr	r1, [sp, #4]
 8017aa8:	1417      	asrs	r7, r2, #16
 8017aaa:	ea4f 4920 	mov.w	r9, r0, asr #16
 8017aae:	fb0a 1707 	mla	r7, sl, r7, r1
 8017ab2:	9902      	ldr	r1, [sp, #8]
 8017ab4:	f817 7009 	ldrb.w	r7, [r7, r9]
 8017ab8:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8017abc:	f828 7b02 	strh.w	r7, [r8], #2
 8017ac0:	4470      	add	r0, lr
 8017ac2:	4462      	add	r2, ip
 8017ac4:	3e01      	subs	r6, #1
 8017ac6:	e7ea      	b.n	8017a9e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8017ac8:	ea5f 4920 	movs.w	r9, r0, asr #16
 8017acc:	d417      	bmi.n	8017afe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8017ace:	68ae      	ldr	r6, [r5, #8]
 8017ad0:	454e      	cmp	r6, r9
 8017ad2:	dd14      	ble.n	8017afe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8017ad4:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8017ad8:	d411      	bmi.n	8017afe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8017ada:	68ef      	ldr	r7, [r5, #12]
 8017adc:	4557      	cmp	r7, sl
 8017ade:	dd0e      	ble.n	8017afe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8017ae0:	9f01      	ldr	r7, [sp, #4]
 8017ae2:	b236      	sxth	r6, r6
 8017ae4:	fb0a 7606 	mla	r6, sl, r6, r7
 8017ae8:	9f02      	ldr	r7, [sp, #8]
 8017aea:	f816 6009 	ldrb.w	r6, [r6, r9]
 8017aee:	f06f 0101 	mvn.w	r1, #1
 8017af2:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8017af6:	fb01 f608 	mul.w	r6, r1, r8
 8017afa:	9903      	ldr	r1, [sp, #12]
 8017afc:	538f      	strh	r7, [r1, r6]
 8017afe:	4470      	add	r0, lr
 8017b00:	4462      	add	r2, ip
 8017b02:	f108 38ff 	add.w	r8, r8, #4294967295
 8017b06:	e782      	b.n	8017a0e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8017b08:	b005      	add	sp, #20
 8017b0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017b0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017b0e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017b12:	b087      	sub	sp, #28
 8017b14:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8017b16:	9205      	str	r2, [sp, #20]
 8017b18:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8017b1c:	9203      	str	r2, [sp, #12]
 8017b1e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8017b22:	9102      	str	r1, [sp, #8]
 8017b24:	6861      	ldr	r1, [r4, #4]
 8017b26:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8017b2a:	fb01 2000 	mla	r0, r1, r0, r2
 8017b2e:	6822      	ldr	r2, [r4, #0]
 8017b30:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8017b34:	9200      	str	r2, [sp, #0]
 8017b36:	f8dc 2000 	ldr.w	r2, [ip]
 8017b3a:	9204      	str	r2, [sp, #16]
 8017b3c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8017b40:	3204      	adds	r2, #4
 8017b42:	9201      	str	r2, [sp, #4]
 8017b44:	9a03      	ldr	r2, [sp, #12]
 8017b46:	43d5      	mvns	r5, r2
 8017b48:	b2ed      	uxtb	r5, r5
 8017b4a:	9a02      	ldr	r2, [sp, #8]
 8017b4c:	2a00      	cmp	r2, #0
 8017b4e:	dc03      	bgt.n	8017b58 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8017b50:	9a05      	ldr	r2, [sp, #20]
 8017b52:	2a00      	cmp	r2, #0
 8017b54:	f340 812c 	ble.w	8017db0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8017b58:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8017b5a:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8017b5e:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8017b62:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8017b66:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8017b68:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8017b6c:	2b00      	cmp	r3, #0
 8017b6e:	dd10      	ble.n	8017b92 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8017b70:	140c      	asrs	r4, r1, #16
 8017b72:	d405      	bmi.n	8017b80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017b74:	4574      	cmp	r4, lr
 8017b76:	da03      	bge.n	8017b80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017b78:	1414      	asrs	r4, r2, #16
 8017b7a:	d401      	bmi.n	8017b80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017b7c:	42bc      	cmp	r4, r7
 8017b7e:	db09      	blt.n	8017b94 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8017b80:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017b82:	9800      	ldr	r0, [sp, #0]
 8017b84:	4421      	add	r1, r4
 8017b86:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8017b88:	3002      	adds	r0, #2
 8017b8a:	4422      	add	r2, r4
 8017b8c:	3b01      	subs	r3, #1
 8017b8e:	9000      	str	r0, [sp, #0]
 8017b90:	e7ec      	b.n	8017b6c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8017b92:	d071      	beq.n	8017c78 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8017b94:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8017b96:	1e5c      	subs	r4, r3, #1
 8017b98:	fb06 1604 	mla	r6, r6, r4, r1
 8017b9c:	1436      	asrs	r6, r6, #16
 8017b9e:	d45d      	bmi.n	8017c5c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8017ba0:	4576      	cmp	r6, lr
 8017ba2:	da5b      	bge.n	8017c5c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8017ba4:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8017ba6:	fb06 2404 	mla	r4, r6, r4, r2
 8017baa:	1424      	asrs	r4, r4, #16
 8017bac:	d456      	bmi.n	8017c5c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8017bae:	42bc      	cmp	r4, r7
 8017bb0:	da54      	bge.n	8017c5c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8017bb2:	f8dd 9000 	ldr.w	r9, [sp]
 8017bb6:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8017bba:	4698      	mov	r8, r3
 8017bbc:	f1b8 0f00 	cmp.w	r8, #0
 8017bc0:	dd54      	ble.n	8017c6c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8017bc2:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8017bc6:	9804      	ldr	r0, [sp, #16]
 8017bc8:	1414      	asrs	r4, r2, #16
 8017bca:	fb07 0404 	mla	r4, r7, r4, r0
 8017bce:	140e      	asrs	r6, r1, #16
 8017bd0:	9801      	ldr	r0, [sp, #4]
 8017bd2:	f814 e006 	ldrb.w	lr, [r4, r6]
 8017bd6:	f8b9 4000 	ldrh.w	r4, [r9]
 8017bda:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8017bde:	eb00 0b0e 	add.w	fp, r0, lr
 8017be2:	1227      	asrs	r7, r4, #8
 8017be4:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8017be8:	f89b b001 	ldrb.w	fp, [fp, #1]
 8017bec:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8017bf0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8017bf2:	fb16 f60a 	smulbb	r6, r6, sl
 8017bf6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017bfa:	fb07 6705 	mla	r7, r7, r5, r6
 8017bfe:	10e6      	asrs	r6, r4, #3
 8017c00:	00e4      	lsls	r4, r4, #3
 8017c02:	b2e4      	uxtb	r4, r4
 8017c04:	fb1b fb0a 	smulbb	fp, fp, sl
 8017c08:	fb14 f405 	smulbb	r4, r4, r5
 8017c0c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8017c10:	b2bf      	uxth	r7, r7
 8017c12:	fb06 b605 	mla	r6, r6, r5, fp
 8017c16:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8017c1a:	b2b6      	uxth	r6, r6
 8017c1c:	fa1f fe8e 	uxth.w	lr, lr
 8017c20:	1c7c      	adds	r4, r7, #1
 8017c22:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8017c26:	f106 0b01 	add.w	fp, r6, #1
 8017c2a:	f10e 0401 	add.w	r4, lr, #1
 8017c2e:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8017c32:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8017c36:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8017c3a:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8017c3e:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8017c42:	4327      	orrs	r7, r4
 8017c44:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8017c48:	4401      	add	r1, r0
 8017c4a:	9814      	ldr	r0, [sp, #80]	; 0x50
 8017c4c:	ea47 070b 	orr.w	r7, r7, fp
 8017c50:	f829 7b02 	strh.w	r7, [r9], #2
 8017c54:	4402      	add	r2, r0
 8017c56:	f108 38ff 	add.w	r8, r8, #4294967295
 8017c5a:	e7af      	b.n	8017bbc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8017c5c:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8017c60:	f04f 0e00 	mov.w	lr, #0
 8017c64:	eb03 040e 	add.w	r4, r3, lr
 8017c68:	2c00      	cmp	r4, #0
 8017c6a:	dc43      	bgt.n	8017cf4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8017c6c:	9a00      	ldr	r2, [sp, #0]
 8017c6e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017c72:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017c76:	9300      	str	r3, [sp, #0]
 8017c78:	9b02      	ldr	r3, [sp, #8]
 8017c7a:	2b00      	cmp	r3, #0
 8017c7c:	f340 8098 	ble.w	8017db0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8017c80:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017c84:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017c88:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8017c8c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017c8e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017c92:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017c96:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017c9a:	eef0 6a62 	vmov.f32	s13, s5
 8017c9e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017ca2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017ca6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017caa:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8017cae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017cb2:	eef0 6a43 	vmov.f32	s13, s6
 8017cb6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017cba:	ee12 2a90 	vmov	r2, s5
 8017cbe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017cc2:	fb92 f3f3 	sdiv	r3, r2, r3
 8017cc6:	ee13 2a10 	vmov	r2, s6
 8017cca:	9313      	str	r3, [sp, #76]	; 0x4c
 8017ccc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017cce:	fb92 f3f3 	sdiv	r3, r2, r3
 8017cd2:	9314      	str	r3, [sp, #80]	; 0x50
 8017cd4:	9b02      	ldr	r3, [sp, #8]
 8017cd6:	9a05      	ldr	r2, [sp, #20]
 8017cd8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017cdc:	3b01      	subs	r3, #1
 8017cde:	9302      	str	r3, [sp, #8]
 8017ce0:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8017ce4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017ce6:	eeb0 3a67 	vmov.f32	s6, s15
 8017cea:	bf08      	it	eq
 8017cec:	4613      	moveq	r3, r2
 8017cee:	eef0 2a47 	vmov.f32	s5, s14
 8017cf2:	e72a      	b.n	8017b4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8017cf4:	140f      	asrs	r7, r1, #16
 8017cf6:	d454      	bmi.n	8017da2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8017cf8:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8017cfc:	42be      	cmp	r6, r7
 8017cfe:	dd50      	ble.n	8017da2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8017d00:	ea5f 4822 	movs.w	r8, r2, asr #16
 8017d04:	d44d      	bmi.n	8017da2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8017d06:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8017d0a:	4544      	cmp	r4, r8
 8017d0c:	dd49      	ble.n	8017da2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8017d0e:	9c04      	ldr	r4, [sp, #16]
 8017d10:	b236      	sxth	r6, r6
 8017d12:	fb08 4606 	mla	r6, r8, r6, r4
 8017d16:	f06f 0001 	mvn.w	r0, #1
 8017d1a:	f816 8007 	ldrb.w	r8, [r6, r7]
 8017d1e:	9c01      	ldr	r4, [sp, #4]
 8017d20:	fb00 fa0e 	mul.w	sl, r0, lr
 8017d24:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8017d28:	9800      	ldr	r0, [sp, #0]
 8017d2a:	eb04 0b08 	add.w	fp, r4, r8
 8017d2e:	f830 400a 	ldrh.w	r4, [r0, sl]
 8017d32:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8017d36:	9801      	ldr	r0, [sp, #4]
 8017d38:	f89b b001 	ldrb.w	fp, [fp, #1]
 8017d3c:	f810 8008 	ldrb.w	r8, [r0, r8]
 8017d40:	9800      	ldr	r0, [sp, #0]
 8017d42:	1227      	asrs	r7, r4, #8
 8017d44:	fb16 f609 	smulbb	r6, r6, r9
 8017d48:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017d4c:	fb07 6705 	mla	r7, r7, r5, r6
 8017d50:	10e6      	asrs	r6, r4, #3
 8017d52:	00e4      	lsls	r4, r4, #3
 8017d54:	b2e4      	uxtb	r4, r4
 8017d56:	fb1b fb09 	smulbb	fp, fp, r9
 8017d5a:	fb14 f405 	smulbb	r4, r4, r5
 8017d5e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8017d62:	b2bf      	uxth	r7, r7
 8017d64:	fb06 b605 	mla	r6, r6, r5, fp
 8017d68:	fb08 4809 	mla	r8, r8, r9, r4
 8017d6c:	b2b6      	uxth	r6, r6
 8017d6e:	fa1f f888 	uxth.w	r8, r8
 8017d72:	1c7c      	adds	r4, r7, #1
 8017d74:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8017d78:	f106 0b01 	add.w	fp, r6, #1
 8017d7c:	f108 0401 	add.w	r4, r8, #1
 8017d80:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8017d84:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8017d88:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8017d8c:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8017d90:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8017d94:	4327      	orrs	r7, r4
 8017d96:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8017d9a:	ea47 070b 	orr.w	r7, r7, fp
 8017d9e:	f820 700a 	strh.w	r7, [r0, sl]
 8017da2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8017da4:	4401      	add	r1, r0
 8017da6:	9814      	ldr	r0, [sp, #80]	; 0x50
 8017da8:	f10e 3eff 	add.w	lr, lr, #4294967295
 8017dac:	4402      	add	r2, r0
 8017dae:	e759      	b.n	8017c64 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8017db0:	b007      	add	sp, #28
 8017db2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08017db8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017db8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017dbc:	b085      	sub	sp, #20
 8017dbe:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8017dc2:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8017dc4:	9203      	str	r2, [sp, #12]
 8017dc6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8017dca:	6870      	ldr	r0, [r6, #4]
 8017dcc:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8017dce:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8017dd2:	686f      	ldr	r7, [r5, #4]
 8017dd4:	9101      	str	r1, [sp, #4]
 8017dd6:	fb00 2404 	mla	r4, r0, r4, r2
 8017dda:	6832      	ldr	r2, [r6, #0]
 8017ddc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017de0:	682a      	ldr	r2, [r5, #0]
 8017de2:	9202      	str	r2, [sp, #8]
 8017de4:	3704      	adds	r7, #4
 8017de6:	9a01      	ldr	r2, [sp, #4]
 8017de8:	2a00      	cmp	r2, #0
 8017dea:	dc03      	bgt.n	8017df4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8017dec:	9a03      	ldr	r2, [sp, #12]
 8017dee:	2a00      	cmp	r2, #0
 8017df0:	f340 80cc 	ble.w	8017f8c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8017df4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8017df6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8017dfa:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8017dfe:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8017e02:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017e04:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8017e08:	2b00      	cmp	r3, #0
 8017e0a:	dd0d      	ble.n	8017e28 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017e0c:	1406      	asrs	r6, r0, #16
 8017e0e:	d405      	bmi.n	8017e1c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8017e10:	454e      	cmp	r6, r9
 8017e12:	da03      	bge.n	8017e1c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8017e14:	1416      	asrs	r6, r2, #16
 8017e16:	d401      	bmi.n	8017e1c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8017e18:	4546      	cmp	r6, r8
 8017e1a:	db06      	blt.n	8017e2a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017e1c:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8017e1e:	4460      	add	r0, ip
 8017e20:	4432      	add	r2, r6
 8017e22:	3b01      	subs	r3, #1
 8017e24:	3402      	adds	r4, #2
 8017e26:	e7ef      	b.n	8017e08 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8017e28:	d00f      	beq.n	8017e4a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8017e2a:	1e5e      	subs	r6, r3, #1
 8017e2c:	fb0c 0e06 	mla	lr, ip, r6, r0
 8017e30:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8017e34:	d543      	bpl.n	8017ebe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8017e36:	4698      	mov	r8, r3
 8017e38:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8017e3c:	f1b8 0f00 	cmp.w	r8, #0
 8017e40:	dc71      	bgt.n	8017f26 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8017e42:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017e46:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017e4a:	9b01      	ldr	r3, [sp, #4]
 8017e4c:	2b00      	cmp	r3, #0
 8017e4e:	f340 809d 	ble.w	8017f8c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8017e52:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017e56:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017e5a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017e5e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017e60:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017e64:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017e68:	eeb0 6a62 	vmov.f32	s12, s5
 8017e6c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017e70:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017e74:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017e78:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8017e7c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017e80:	eeb0 6a43 	vmov.f32	s12, s6
 8017e84:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017e88:	ee12 2a90 	vmov	r2, s5
 8017e8c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017e90:	fb92 fcf3 	sdiv	ip, r2, r3
 8017e94:	ee13 2a10 	vmov	r2, s6
 8017e98:	fb92 f3f3 	sdiv	r3, r2, r3
 8017e9c:	9312      	str	r3, [sp, #72]	; 0x48
 8017e9e:	9b01      	ldr	r3, [sp, #4]
 8017ea0:	9a03      	ldr	r2, [sp, #12]
 8017ea2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017ea6:	3b01      	subs	r3, #1
 8017ea8:	9301      	str	r3, [sp, #4]
 8017eaa:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8017eae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017eb0:	eeb0 3a67 	vmov.f32	s6, s15
 8017eb4:	bf08      	it	eq
 8017eb6:	4613      	moveq	r3, r2
 8017eb8:	eef0 2a47 	vmov.f32	s5, s14
 8017ebc:	e793      	b.n	8017de6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8017ebe:	45ce      	cmp	lr, r9
 8017ec0:	dab9      	bge.n	8017e36 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8017ec2:	9912      	ldr	r1, [sp, #72]	; 0x48
 8017ec4:	fb01 2606 	mla	r6, r1, r6, r2
 8017ec8:	1436      	asrs	r6, r6, #16
 8017eca:	d4b4      	bmi.n	8017e36 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8017ecc:	4546      	cmp	r6, r8
 8017ece:	dab2      	bge.n	8017e36 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8017ed0:	4698      	mov	r8, r3
 8017ed2:	46a2      	mov	sl, r4
 8017ed4:	f1b8 0f00 	cmp.w	r8, #0
 8017ed8:	ddb3      	ble.n	8017e42 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8017eda:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8017ede:	9902      	ldr	r1, [sp, #8]
 8017ee0:	1416      	asrs	r6, r2, #16
 8017ee2:	fb09 1606 	mla	r6, r9, r6, r1
 8017ee6:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8017eea:	492a      	ldr	r1, [pc, #168]	; (8017f94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8017eec:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8017ef0:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8017ef4:	eb07 0b0e 	add.w	fp, r7, lr
 8017ef8:	4460      	add	r0, ip
 8017efa:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8017efe:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8017f02:	00f6      	lsls	r6, r6, #3
 8017f04:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8017f08:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8017f0c:	ea49 0606 	orr.w	r6, r9, r6
 8017f10:	f817 900e 	ldrb.w	r9, [r7, lr]
 8017f14:	9912      	ldr	r1, [sp, #72]	; 0x48
 8017f16:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8017f1a:	f82a 6b02 	strh.w	r6, [sl], #2
 8017f1e:	440a      	add	r2, r1
 8017f20:	f108 38ff 	add.w	r8, r8, #4294967295
 8017f24:	e7d6      	b.n	8017ed4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8017f26:	ea5f 4920 	movs.w	r9, r0, asr #16
 8017f2a:	d429      	bmi.n	8017f80 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8017f2c:	68ae      	ldr	r6, [r5, #8]
 8017f2e:	454e      	cmp	r6, r9
 8017f30:	dd26      	ble.n	8017f80 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8017f32:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8017f36:	d423      	bmi.n	8017f80 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8017f38:	68e9      	ldr	r1, [r5, #12]
 8017f3a:	4559      	cmp	r1, fp
 8017f3c:	dd20      	ble.n	8017f80 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8017f3e:	9902      	ldr	r1, [sp, #8]
 8017f40:	fa0f fe86 	sxth.w	lr, r6
 8017f44:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8017f48:	f06f 0101 	mvn.w	r1, #1
 8017f4c:	f81e e009 	ldrb.w	lr, [lr, r9]
 8017f50:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8017f54:	eb07 060e 	add.w	r6, r7, lr
 8017f58:	fb01 f908 	mul.w	r9, r1, r8
 8017f5c:	f896 b002 	ldrb.w	fp, [r6, #2]
 8017f60:	7876      	ldrb	r6, [r6, #1]
 8017f62:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 8017f66:	00f6      	lsls	r6, r6, #3
 8017f68:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8017f6c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8017f70:	ea4b 0606 	orr.w	r6, fp, r6
 8017f74:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8017f78:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8017f7c:	f82a 6009 	strh.w	r6, [sl, r9]
 8017f80:	9912      	ldr	r1, [sp, #72]	; 0x48
 8017f82:	4460      	add	r0, ip
 8017f84:	440a      	add	r2, r1
 8017f86:	f108 38ff 	add.w	r8, r8, #4294967295
 8017f8a:	e757      	b.n	8017e3c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8017f8c:	b005      	add	sp, #20
 8017f8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017f92:	bf00      	nop
 8017f94:	fffff800 	.word	0xfffff800

08017f98 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017f98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017f9c:	b087      	sub	sp, #28
 8017f9e:	468b      	mov	fp, r1
 8017fa0:	9815      	ldr	r0, [sp, #84]	; 0x54
 8017fa2:	9204      	str	r2, [sp, #16]
 8017fa4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8017fa8:	9205      	str	r2, [sp, #20]
 8017faa:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8017fae:	6841      	ldr	r1, [r0, #4]
 8017fb0:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8017fb4:	fb01 2404 	mla	r4, r1, r4, r2
 8017fb8:	6802      	ldr	r2, [r0, #0]
 8017fba:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017fbe:	f8dc 2000 	ldr.w	r2, [ip]
 8017fc2:	9201      	str	r2, [sp, #4]
 8017fc4:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8017fc8:	3204      	adds	r2, #4
 8017fca:	9202      	str	r2, [sp, #8]
 8017fcc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8017fd0:	f1bb 0f00 	cmp.w	fp, #0
 8017fd4:	dc03      	bgt.n	8017fde <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8017fd6:	9a04      	ldr	r2, [sp, #16]
 8017fd8:	2a00      	cmp	r2, #0
 8017fda:	f340 8138 	ble.w	801824e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8017fde:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8017fe0:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8017fe4:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8017fe8:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8017fec:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8017fee:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8017ff2:	2b00      	cmp	r3, #0
 8017ff4:	dd0e      	ble.n	8018014 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8017ff6:	1402      	asrs	r2, r0, #16
 8017ff8:	d405      	bmi.n	8018006 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8017ffa:	42ba      	cmp	r2, r7
 8017ffc:	da03      	bge.n	8018006 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8017ffe:	140a      	asrs	r2, r1, #16
 8018000:	d401      	bmi.n	8018006 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8018002:	42b2      	cmp	r2, r6
 8018004:	db07      	blt.n	8018016 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018006:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8018008:	4410      	add	r0, r2
 801800a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801800c:	3b01      	subs	r3, #1
 801800e:	4411      	add	r1, r2
 8018010:	3402      	adds	r4, #2
 8018012:	e7ee      	b.n	8017ff2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8018014:	d019      	beq.n	801804a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8018016:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018018:	1e5a      	subs	r2, r3, #1
 801801a:	fb05 0502 	mla	r5, r5, r2, r0
 801801e:	142d      	asrs	r5, r5, #16
 8018020:	d409      	bmi.n	8018036 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018022:	42bd      	cmp	r5, r7
 8018024:	da07      	bge.n	8018036 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018026:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8018028:	fb05 1202 	mla	r2, r5, r2, r1
 801802c:	1412      	asrs	r2, r2, #16
 801802e:	d402      	bmi.n	8018036 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018030:	42b2      	cmp	r2, r6
 8018032:	f2c0 80ac 	blt.w	801818e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8018036:	f04f 0e00 	mov.w	lr, #0
 801803a:	eb03 020e 	add.w	r2, r3, lr
 801803e:	2a00      	cmp	r2, #0
 8018040:	dc3e      	bgt.n	80180c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8018042:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018046:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801804a:	f1bb 0f00 	cmp.w	fp, #0
 801804e:	f340 80fe 	ble.w	801824e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8018052:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018056:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801805a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801805e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018060:	f1bb 0b01 	subs.w	fp, fp, #1
 8018064:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018068:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801806c:	eeb0 6a62 	vmov.f32	s12, s5
 8018070:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018074:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018078:	ee77 2a62 	vsub.f32	s5, s14, s5
 801807c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8018080:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018084:	eeb0 6a43 	vmov.f32	s12, s6
 8018088:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801808c:	ee12 2a90 	vmov	r2, s5
 8018090:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018094:	fb92 f3f3 	sdiv	r3, r2, r3
 8018098:	ee13 2a10 	vmov	r2, s6
 801809c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80180a0:	9313      	str	r3, [sp, #76]	; 0x4c
 80180a2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80180a4:	fb92 f3f3 	sdiv	r3, r2, r3
 80180a8:	9a04      	ldr	r2, [sp, #16]
 80180aa:	9314      	str	r3, [sp, #80]	; 0x50
 80180ac:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80180b0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80180b2:	eeb0 3a67 	vmov.f32	s6, s15
 80180b6:	bf08      	it	eq
 80180b8:	4613      	moveq	r3, r2
 80180ba:	eef0 2a47 	vmov.f32	s5, s14
 80180be:	e787      	b.n	8017fd0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80180c0:	1406      	asrs	r6, r0, #16
 80180c2:	d45d      	bmi.n	8018180 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80180c4:	f8dc 5008 	ldr.w	r5, [ip, #8]
 80180c8:	42b5      	cmp	r5, r6
 80180ca:	dd59      	ble.n	8018180 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80180cc:	140f      	asrs	r7, r1, #16
 80180ce:	d457      	bmi.n	8018180 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80180d0:	f8dc 200c 	ldr.w	r2, [ip, #12]
 80180d4:	42ba      	cmp	r2, r7
 80180d6:	dd53      	ble.n	8018180 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80180d8:	9a01      	ldr	r2, [sp, #4]
 80180da:	b22d      	sxth	r5, r5
 80180dc:	fb07 2505 	mla	r5, r7, r5, r2
 80180e0:	5daa      	ldrb	r2, [r5, r6]
 80180e2:	9d02      	ldr	r5, [sp, #8]
 80180e4:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80180e8:	0e2e      	lsrs	r6, r5, #24
 80180ea:	d049      	beq.n	8018180 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80180ec:	f06f 0201 	mvn.w	r2, #1
 80180f0:	fb02 f20e 	mul.w	r2, r2, lr
 80180f4:	9203      	str	r2, [sp, #12]
 80180f6:	f834 8002 	ldrh.w	r8, [r4, r2]
 80180fa:	9a05      	ldr	r2, [sp, #20]
 80180fc:	4356      	muls	r6, r2
 80180fe:	1c72      	adds	r2, r6, #1
 8018100:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8018104:	1212      	asrs	r2, r2, #8
 8018106:	fa1f f982 	uxth.w	r9, r2
 801810a:	ea4f 2728 	mov.w	r7, r8, asr #8
 801810e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8018112:	43d2      	mvns	r2, r2
 8018114:	b2d2      	uxtb	r2, r2
 8018116:	fb16 f609 	smulbb	r6, r6, r9
 801811a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801811e:	fb07 6702 	mla	r7, r7, r2, r6
 8018122:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8018126:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801812a:	b2ed      	uxtb	r5, r5
 801812c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8018130:	fa5f f888 	uxtb.w	r8, r8
 8018134:	fb15 f509 	smulbb	r5, r5, r9
 8018138:	fb08 5502 	mla	r5, r8, r2, r5
 801813c:	b2bf      	uxth	r7, r7
 801813e:	fb1a fa09 	smulbb	sl, sl, r9
 8018142:	b2ad      	uxth	r5, r5
 8018144:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018148:	fb06 a602 	mla	r6, r6, r2, sl
 801814c:	1c7a      	adds	r2, r7, #1
 801814e:	f105 0a01 	add.w	sl, r5, #1
 8018152:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8018156:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801815a:	b2b6      	uxth	r6, r6
 801815c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018160:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8018164:	ea4a 0707 	orr.w	r7, sl, r7
 8018168:	f106 0a01 	add.w	sl, r6, #1
 801816c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8018170:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018174:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8018178:	9a03      	ldr	r2, [sp, #12]
 801817a:	ea47 070a 	orr.w	r7, r7, sl
 801817e:	52a7      	strh	r7, [r4, r2]
 8018180:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8018182:	4410      	add	r0, r2
 8018184:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018186:	f10e 3eff 	add.w	lr, lr, #4294967295
 801818a:	4411      	add	r1, r2
 801818c:	e755      	b.n	801803a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801818e:	f04f 0800 	mov.w	r8, #0
 8018192:	eba3 0208 	sub.w	r2, r3, r8
 8018196:	2a00      	cmp	r2, #0
 8018198:	f77f af53 	ble.w	8018042 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801819c:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 80181a0:	9f01      	ldr	r7, [sp, #4]
 80181a2:	140a      	asrs	r2, r1, #16
 80181a4:	1405      	asrs	r5, r0, #16
 80181a6:	fb06 7202 	mla	r2, r6, r2, r7
 80181aa:	5d52      	ldrb	r2, [r2, r5]
 80181ac:	9d02      	ldr	r5, [sp, #8]
 80181ae:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80181b2:	0e2e      	lsrs	r6, r5, #24
 80181b4:	d044      	beq.n	8018240 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80181b6:	9a05      	ldr	r2, [sp, #20]
 80181b8:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80181bc:	4356      	muls	r6, r2
 80181be:	1c72      	adds	r2, r6, #1
 80181c0:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80181c4:	1212      	asrs	r2, r2, #8
 80181c6:	fa1f f982 	uxth.w	r9, r2
 80181ca:	ea4f 272e 	mov.w	r7, lr, asr #8
 80181ce:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80181d2:	43d2      	mvns	r2, r2
 80181d4:	b2d2      	uxtb	r2, r2
 80181d6:	fb16 f609 	smulbb	r6, r6, r9
 80181da:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80181de:	fb07 6702 	mla	r7, r7, r2, r6
 80181e2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80181e6:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80181ea:	b2ed      	uxtb	r5, r5
 80181ec:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80181f0:	fa5f fe8e 	uxtb.w	lr, lr
 80181f4:	fb15 f509 	smulbb	r5, r5, r9
 80181f8:	fb0e 5502 	mla	r5, lr, r2, r5
 80181fc:	b2bf      	uxth	r7, r7
 80181fe:	fb1a fa09 	smulbb	sl, sl, r9
 8018202:	b2ad      	uxth	r5, r5
 8018204:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018208:	fb06 a602 	mla	r6, r6, r2, sl
 801820c:	1c7a      	adds	r2, r7, #1
 801820e:	f105 0a01 	add.w	sl, r5, #1
 8018212:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8018216:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801821a:	b2b6      	uxth	r6, r6
 801821c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018220:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8018224:	ea4a 0707 	orr.w	r7, sl, r7
 8018228:	f106 0a01 	add.w	sl, r6, #1
 801822c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8018230:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018234:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8018238:	ea47 070a 	orr.w	r7, r7, sl
 801823c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8018240:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8018242:	4410      	add	r0, r2
 8018244:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018246:	f108 0801 	add.w	r8, r8, #1
 801824a:	4411      	add	r1, r2
 801824c:	e7a1      	b.n	8018192 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801824e:	b007      	add	sp, #28
 8018250:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018254 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018254:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018258:	b085      	sub	sp, #20
 801825a:	468b      	mov	fp, r1
 801825c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801825e:	9203      	str	r2, [sp, #12]
 8018260:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8018264:	6841      	ldr	r1, [r0, #4]
 8018266:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801826a:	fb01 2404 	mla	r4, r1, r4, r2
 801826e:	6802      	ldr	r2, [r0, #0]
 8018270:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018274:	f8de 2000 	ldr.w	r2, [lr]
 8018278:	9200      	str	r2, [sp, #0]
 801827a:	f8de 2004 	ldr.w	r2, [lr, #4]
 801827e:	3204      	adds	r2, #4
 8018280:	9201      	str	r2, [sp, #4]
 8018282:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018286:	f1bb 0f00 	cmp.w	fp, #0
 801828a:	dc03      	bgt.n	8018294 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801828c:	9a03      	ldr	r2, [sp, #12]
 801828e:	2a00      	cmp	r2, #0
 8018290:	f340 8153 	ble.w	801853a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8018294:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018296:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801829a:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801829e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80182a2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80182a4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80182a8:	2b00      	cmp	r3, #0
 80182aa:	dd0e      	ble.n	80182ca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80182ac:	1408      	asrs	r0, r1, #16
 80182ae:	d405      	bmi.n	80182bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80182b0:	42b8      	cmp	r0, r7
 80182b2:	da03      	bge.n	80182bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80182b4:	1410      	asrs	r0, r2, #16
 80182b6:	d401      	bmi.n	80182bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80182b8:	42b0      	cmp	r0, r6
 80182ba:	db07      	blt.n	80182cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80182bc:	9811      	ldr	r0, [sp, #68]	; 0x44
 80182be:	4401      	add	r1, r0
 80182c0:	9812      	ldr	r0, [sp, #72]	; 0x48
 80182c2:	3b01      	subs	r3, #1
 80182c4:	4402      	add	r2, r0
 80182c6:	3402      	adds	r4, #2
 80182c8:	e7ee      	b.n	80182a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80182ca:	d017      	beq.n	80182fc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80182cc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80182ce:	1e58      	subs	r0, r3, #1
 80182d0:	fb05 1500 	mla	r5, r5, r0, r1
 80182d4:	142d      	asrs	r5, r5, #16
 80182d6:	d409      	bmi.n	80182ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80182d8:	42bd      	cmp	r5, r7
 80182da:	da07      	bge.n	80182ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80182dc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80182de:	fb05 2000 	mla	r0, r5, r0, r2
 80182e2:	1400      	asrs	r0, r0, #16
 80182e4:	d402      	bmi.n	80182ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80182e6:	42b0      	cmp	r0, r6
 80182e8:	f2c0 80bc 	blt.w	8018464 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 80182ec:	2600      	movs	r6, #0
 80182ee:	1998      	adds	r0, r3, r6
 80182f0:	2800      	cmp	r0, #0
 80182f2:	dc3e      	bgt.n	8018372 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 80182f4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80182f8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80182fc:	f1bb 0f00 	cmp.w	fp, #0
 8018300:	f340 811b 	ble.w	801853a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8018304:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018308:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801830c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018310:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018312:	f1bb 0b01 	subs.w	fp, fp, #1
 8018316:	ee31 1a05 	vadd.f32	s2, s2, s10
 801831a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801831e:	eeb0 6a62 	vmov.f32	s12, s5
 8018322:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018326:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801832a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801832e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8018332:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018336:	eeb0 6a43 	vmov.f32	s12, s6
 801833a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801833e:	ee12 2a90 	vmov	r2, s5
 8018342:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018346:	fb92 f3f3 	sdiv	r3, r2, r3
 801834a:	ee13 2a10 	vmov	r2, s6
 801834e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018352:	9311      	str	r3, [sp, #68]	; 0x44
 8018354:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018356:	fb92 f3f3 	sdiv	r3, r2, r3
 801835a:	9a03      	ldr	r2, [sp, #12]
 801835c:	9312      	str	r3, [sp, #72]	; 0x48
 801835e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8018362:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018364:	eeb0 3a67 	vmov.f32	s6, s15
 8018368:	bf08      	it	eq
 801836a:	4613      	moveq	r3, r2
 801836c:	eef0 2a47 	vmov.f32	s5, s14
 8018370:	e789      	b.n	8018286 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8018372:	140f      	asrs	r7, r1, #16
 8018374:	d426      	bmi.n	80183c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8018376:	f8de 5008 	ldr.w	r5, [lr, #8]
 801837a:	42bd      	cmp	r5, r7
 801837c:	dd22      	ble.n	80183c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801837e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8018382:	d41f      	bmi.n	80183c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8018384:	f8de 000c 	ldr.w	r0, [lr, #12]
 8018388:	4560      	cmp	r0, ip
 801838a:	dd1b      	ble.n	80183c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801838c:	9800      	ldr	r0, [sp, #0]
 801838e:	b22d      	sxth	r5, r5
 8018390:	fb0c 0505 	mla	r5, ip, r5, r0
 8018394:	5de8      	ldrb	r0, [r5, r7]
 8018396:	9d01      	ldr	r5, [sp, #4]
 8018398:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801839c:	0e07      	lsrs	r7, r0, #24
 801839e:	2fff      	cmp	r7, #255	; 0xff
 80183a0:	d116      	bne.n	80183d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80183a2:	f06f 0501 	mvn.w	r5, #1
 80183a6:	fb05 f706 	mul.w	r7, r5, r6
 80183aa:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 80183ae:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80183b2:	0945      	lsrs	r5, r0, #5
 80183b4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80183b8:	ea4c 0505 	orr.w	r5, ip, r5
 80183bc:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80183c0:	4305      	orrs	r5, r0
 80183c2:	53e5      	strh	r5, [r4, r7]
 80183c4:	9811      	ldr	r0, [sp, #68]	; 0x44
 80183c6:	4401      	add	r1, r0
 80183c8:	9812      	ldr	r0, [sp, #72]	; 0x48
 80183ca:	3e01      	subs	r6, #1
 80183cc:	4402      	add	r2, r0
 80183ce:	e78e      	b.n	80182ee <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80183d0:	b2fd      	uxtb	r5, r7
 80183d2:	2f00      	cmp	r7, #0
 80183d4:	d0f6      	beq.n	80183c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80183d6:	f06f 0701 	mvn.w	r7, #1
 80183da:	4377      	muls	r7, r6
 80183dc:	fa1f f985 	uxth.w	r9, r5
 80183e0:	f834 8007 	ldrh.w	r8, [r4, r7]
 80183e4:	9702      	str	r7, [sp, #8]
 80183e6:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80183ea:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80183ee:	43ed      	mvns	r5, r5
 80183f0:	b2ed      	uxtb	r5, r5
 80183f2:	fb17 f709 	smulbb	r7, r7, r9
 80183f6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80183fa:	fb0c 7c05 	mla	ip, ip, r5, r7
 80183fe:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8018402:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8018406:	b2c0      	uxtb	r0, r0
 8018408:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801840c:	fa5f f888 	uxtb.w	r8, r8
 8018410:	fb10 f009 	smulbb	r0, r0, r9
 8018414:	fb08 0005 	mla	r0, r8, r5, r0
 8018418:	b280      	uxth	r0, r0
 801841a:	fa1f fc8c 	uxth.w	ip, ip
 801841e:	fb1a fa09 	smulbb	sl, sl, r9
 8018422:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018426:	fb07 a705 	mla	r7, r7, r5, sl
 801842a:	f100 0a01 	add.w	sl, r0, #1
 801842e:	f10c 0501 	add.w	r5, ip, #1
 8018432:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8018436:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801843a:	b2bf      	uxth	r7, r7
 801843c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018440:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018444:	ea4a 0c0c 	orr.w	ip, sl, ip
 8018448:	f107 0a01 	add.w	sl, r7, #1
 801844c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8018450:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018454:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8018458:	9802      	ldr	r0, [sp, #8]
 801845a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801845e:	f824 c000 	strh.w	ip, [r4, r0]
 8018462:	e7af      	b.n	80183c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8018464:	f04f 0800 	mov.w	r8, #0
 8018468:	eba3 0008 	sub.w	r0, r3, r8
 801846c:	2800      	cmp	r0, #0
 801846e:	f77f af41 	ble.w	80182f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8018472:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8018476:	9f00      	ldr	r7, [sp, #0]
 8018478:	1410      	asrs	r0, r2, #16
 801847a:	140d      	asrs	r5, r1, #16
 801847c:	fb06 7000 	mla	r0, r6, r0, r7
 8018480:	5d40      	ldrb	r0, [r0, r5]
 8018482:	9d01      	ldr	r5, [sp, #4]
 8018484:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8018488:	0e2e      	lsrs	r6, r5, #24
 801848a:	2eff      	cmp	r6, #255	; 0xff
 801848c:	d112      	bne.n	80184b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801848e:	482c      	ldr	r0, [pc, #176]	; (8018540 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8018490:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8018494:	0968      	lsrs	r0, r5, #5
 8018496:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801849a:	4330      	orrs	r0, r6
 801849c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80184a0:	4328      	orrs	r0, r5
 80184a2:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 80184a6:	9811      	ldr	r0, [sp, #68]	; 0x44
 80184a8:	4401      	add	r1, r0
 80184aa:	9812      	ldr	r0, [sp, #72]	; 0x48
 80184ac:	f108 0801 	add.w	r8, r8, #1
 80184b0:	4402      	add	r2, r0
 80184b2:	e7d9      	b.n	8018468 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80184b4:	b2f0      	uxtb	r0, r6
 80184b6:	2e00      	cmp	r6, #0
 80184b8:	d0f5      	beq.n	80184a6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80184ba:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 80184be:	fa1f f980 	uxth.w	r9, r0
 80184c2:	ea4f 272c 	mov.w	r7, ip, asr #8
 80184c6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80184ca:	43c0      	mvns	r0, r0
 80184cc:	b2c0      	uxtb	r0, r0
 80184ce:	fb16 f609 	smulbb	r6, r6, r9
 80184d2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80184d6:	fb07 6700 	mla	r7, r7, r0, r6
 80184da:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80184de:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80184e2:	b2ed      	uxtb	r5, r5
 80184e4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80184e8:	fa5f fc8c 	uxtb.w	ip, ip
 80184ec:	fb15 f509 	smulbb	r5, r5, r9
 80184f0:	fb0c 5500 	mla	r5, ip, r0, r5
 80184f4:	b2bf      	uxth	r7, r7
 80184f6:	fb1a fa09 	smulbb	sl, sl, r9
 80184fa:	b2ad      	uxth	r5, r5
 80184fc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018500:	fb06 a600 	mla	r6, r6, r0, sl
 8018504:	1c78      	adds	r0, r7, #1
 8018506:	f105 0a01 	add.w	sl, r5, #1
 801850a:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801850e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018512:	b2b6      	uxth	r6, r6
 8018514:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018518:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801851c:	ea4a 0707 	orr.w	r7, sl, r7
 8018520:	f106 0a01 	add.w	sl, r6, #1
 8018524:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8018528:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801852c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8018530:	ea47 070a 	orr.w	r7, r7, sl
 8018534:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8018538:	e7b5      	b.n	80184a6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801853a:	b005      	add	sp, #20
 801853c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018540:	fffff800 	.word	0xfffff800

08018544 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018544:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018548:	b087      	sub	sp, #28
 801854a:	468b      	mov	fp, r1
 801854c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801854e:	9204      	str	r2, [sp, #16]
 8018550:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018554:	9205      	str	r2, [sp, #20]
 8018556:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801855a:	6861      	ldr	r1, [r4, #4]
 801855c:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8018560:	fb01 2000 	mla	r0, r1, r0, r2
 8018564:	6822      	ldr	r2, [r4, #0]
 8018566:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801856a:	f8de 2000 	ldr.w	r2, [lr]
 801856e:	9201      	str	r2, [sp, #4]
 8018570:	f8de 2004 	ldr.w	r2, [lr, #4]
 8018574:	9202      	str	r2, [sp, #8]
 8018576:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801857a:	f1bb 0f00 	cmp.w	fp, #0
 801857e:	dc03      	bgt.n	8018588 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8018580:	9a04      	ldr	r2, [sp, #16]
 8018582:	2a00      	cmp	r2, #0
 8018584:	f340 8142 	ble.w	801880c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8018588:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801858a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801858e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8018592:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018596:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018598:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801859c:	2b00      	cmp	r3, #0
 801859e:	dd0e      	ble.n	80185be <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80185a0:	140c      	asrs	r4, r1, #16
 80185a2:	d405      	bmi.n	80185b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80185a4:	42bc      	cmp	r4, r7
 80185a6:	da03      	bge.n	80185b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80185a8:	1414      	asrs	r4, r2, #16
 80185aa:	d401      	bmi.n	80185b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80185ac:	42b4      	cmp	r4, r6
 80185ae:	db07      	blt.n	80185c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80185b0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80185b2:	4421      	add	r1, r4
 80185b4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80185b6:	3b01      	subs	r3, #1
 80185b8:	4422      	add	r2, r4
 80185ba:	3002      	adds	r0, #2
 80185bc:	e7ee      	b.n	801859c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80185be:	d019      	beq.n	80185f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80185c0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80185c2:	1e5c      	subs	r4, r3, #1
 80185c4:	fb05 1504 	mla	r5, r5, r4, r1
 80185c8:	142d      	asrs	r5, r5, #16
 80185ca:	d409      	bmi.n	80185e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80185cc:	42bd      	cmp	r5, r7
 80185ce:	da07      	bge.n	80185e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80185d0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80185d2:	fb05 2404 	mla	r4, r5, r4, r2
 80185d6:	1424      	asrs	r4, r4, #16
 80185d8:	d402      	bmi.n	80185e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80185da:	42b4      	cmp	r4, r6
 80185dc:	f2c0 80b1 	blt.w	8018742 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80185e0:	f04f 0800 	mov.w	r8, #0
 80185e4:	eb03 0408 	add.w	r4, r3, r8
 80185e8:	2c00      	cmp	r4, #0
 80185ea:	dc3e      	bgt.n	801866a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80185ec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80185f0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80185f4:	f1bb 0f00 	cmp.w	fp, #0
 80185f8:	f340 8108 	ble.w	801880c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80185fc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018600:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018604:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018608:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801860a:	f1bb 0b01 	subs.w	fp, fp, #1
 801860e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018612:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018616:	eeb0 6a62 	vmov.f32	s12, s5
 801861a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801861e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018622:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018626:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801862a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801862e:	eeb0 6a43 	vmov.f32	s12, s6
 8018632:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018636:	ee12 2a90 	vmov	r2, s5
 801863a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801863e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018642:	ee13 2a10 	vmov	r2, s6
 8018646:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801864a:	9313      	str	r3, [sp, #76]	; 0x4c
 801864c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801864e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018652:	9a04      	ldr	r2, [sp, #16]
 8018654:	9314      	str	r3, [sp, #80]	; 0x50
 8018656:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801865a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801865c:	eeb0 3a67 	vmov.f32	s6, s15
 8018660:	bf08      	it	eq
 8018662:	4613      	moveq	r3, r2
 8018664:	eef0 2a47 	vmov.f32	s5, s14
 8018668:	e787      	b.n	801857a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801866a:	140e      	asrs	r6, r1, #16
 801866c:	d462      	bmi.n	8018734 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801866e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8018672:	42b5      	cmp	r5, r6
 8018674:	dd5e      	ble.n	8018734 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8018676:	1417      	asrs	r7, r2, #16
 8018678:	d45c      	bmi.n	8018734 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801867a:	f8de 400c 	ldr.w	r4, [lr, #12]
 801867e:	42bc      	cmp	r4, r7
 8018680:	dd58      	ble.n	8018734 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8018682:	b22d      	sxth	r5, r5
 8018684:	fb07 6505 	mla	r5, r7, r5, r6
 8018688:	9c02      	ldr	r4, [sp, #8]
 801868a:	5d66      	ldrb	r6, [r4, r5]
 801868c:	2e00      	cmp	r6, #0
 801868e:	d051      	beq.n	8018734 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8018690:	9c01      	ldr	r4, [sp, #4]
 8018692:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8018696:	f06f 0401 	mvn.w	r4, #1
 801869a:	fb04 f408 	mul.w	r4, r4, r8
 801869e:	9403      	str	r4, [sp, #12]
 80186a0:	5b05      	ldrh	r5, [r0, r4]
 80186a2:	9c05      	ldr	r4, [sp, #20]
 80186a4:	4366      	muls	r6, r4
 80186a6:	1c74      	adds	r4, r6, #1
 80186a8:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 80186ac:	1224      	asrs	r4, r4, #8
 80186ae:	b2a7      	uxth	r7, r4
 80186b0:	122e      	asrs	r6, r5, #8
 80186b2:	43e4      	mvns	r4, r4
 80186b4:	b2e4      	uxtb	r4, r4
 80186b6:	ea4f 2c29 	mov.w	ip, r9, asr #8
 80186ba:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80186be:	fb16 f604 	smulbb	r6, r6, r4
 80186c2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80186c6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80186ca:	00ed      	lsls	r5, r5, #3
 80186cc:	fb0c 6c07 	mla	ip, ip, r7, r6
 80186d0:	b2ed      	uxtb	r5, r5
 80186d2:	ea4f 06e9 	mov.w	r6, r9, asr #3
 80186d6:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 80186da:	fb15 f504 	smulbb	r5, r5, r4
 80186de:	fa5f f989 	uxtb.w	r9, r9
 80186e2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80186e6:	fb09 5507 	mla	r5, r9, r7, r5
 80186ea:	fb1a fa04 	smulbb	sl, sl, r4
 80186ee:	fa1f fc8c 	uxth.w	ip, ip
 80186f2:	b2ad      	uxth	r5, r5
 80186f4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80186f8:	fb06 a607 	mla	r6, r6, r7, sl
 80186fc:	f10c 0401 	add.w	r4, ip, #1
 8018700:	f105 0a01 	add.w	sl, r5, #1
 8018704:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8018708:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801870c:	b2b6      	uxth	r6, r6
 801870e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018712:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018716:	ea4a 0c0c 	orr.w	ip, sl, ip
 801871a:	f106 0a01 	add.w	sl, r6, #1
 801871e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8018722:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018726:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801872a:	9c03      	ldr	r4, [sp, #12]
 801872c:	ea4c 0c0a 	orr.w	ip, ip, sl
 8018730:	f820 c004 	strh.w	ip, [r0, r4]
 8018734:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018736:	4421      	add	r1, r4
 8018738:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801873a:	f108 38ff 	add.w	r8, r8, #4294967295
 801873e:	4422      	add	r2, r4
 8018740:	e750      	b.n	80185e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8018742:	f04f 0900 	mov.w	r9, #0
 8018746:	eba3 0409 	sub.w	r4, r3, r9
 801874a:	2c00      	cmp	r4, #0
 801874c:	f77f af4e 	ble.w	80185ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8018750:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8018754:	140d      	asrs	r5, r1, #16
 8018756:	1414      	asrs	r4, r2, #16
 8018758:	fb06 5404 	mla	r4, r6, r4, r5
 801875c:	9d02      	ldr	r5, [sp, #8]
 801875e:	5d2e      	ldrb	r6, [r5, r4]
 8018760:	2e00      	cmp	r6, #0
 8018762:	d04c      	beq.n	80187fe <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8018764:	9d01      	ldr	r5, [sp, #4]
 8018766:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801876a:	9c05      	ldr	r4, [sp, #20]
 801876c:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8018770:	4366      	muls	r6, r4
 8018772:	1c74      	adds	r4, r6, #1
 8018774:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8018778:	1224      	asrs	r4, r4, #8
 801877a:	b2a7      	uxth	r7, r4
 801877c:	122e      	asrs	r6, r5, #8
 801877e:	43e4      	mvns	r4, r4
 8018780:	b2e4      	uxtb	r4, r4
 8018782:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8018786:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801878a:	fb16 f604 	smulbb	r6, r6, r4
 801878e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8018792:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018796:	00ed      	lsls	r5, r5, #3
 8018798:	fb0c 6c07 	mla	ip, ip, r7, r6
 801879c:	b2ed      	uxtb	r5, r5
 801879e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80187a2:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80187a6:	fb15 f504 	smulbb	r5, r5, r4
 80187aa:	fa5f f888 	uxtb.w	r8, r8
 80187ae:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80187b2:	fb08 5507 	mla	r5, r8, r7, r5
 80187b6:	fb1a fa04 	smulbb	sl, sl, r4
 80187ba:	fa1f fc8c 	uxth.w	ip, ip
 80187be:	b2ad      	uxth	r5, r5
 80187c0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80187c4:	fb06 a607 	mla	r6, r6, r7, sl
 80187c8:	f10c 0401 	add.w	r4, ip, #1
 80187cc:	f105 0a01 	add.w	sl, r5, #1
 80187d0:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80187d4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80187d8:	b2b6      	uxth	r6, r6
 80187da:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80187de:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80187e2:	ea4a 0c0c 	orr.w	ip, sl, ip
 80187e6:	f106 0a01 	add.w	sl, r6, #1
 80187ea:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80187ee:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80187f2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80187f6:	ea4c 0c0a 	orr.w	ip, ip, sl
 80187fa:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 80187fe:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018800:	4421      	add	r1, r4
 8018802:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018804:	f109 0901 	add.w	r9, r9, #1
 8018808:	4422      	add	r2, r4
 801880a:	e79c      	b.n	8018746 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801880c:	b007      	add	sp, #28
 801880e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018812 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018812:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018816:	b085      	sub	sp, #20
 8018818:	468b      	mov	fp, r1
 801881a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801881c:	9203      	str	r2, [sp, #12]
 801881e:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8018822:	6861      	ldr	r1, [r4, #4]
 8018824:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8018828:	fb01 2000 	mla	r0, r1, r0, r2
 801882c:	6822      	ldr	r2, [r4, #0]
 801882e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8018832:	f8d8 2000 	ldr.w	r2, [r8]
 8018836:	9200      	str	r2, [sp, #0]
 8018838:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801883c:	9201      	str	r2, [sp, #4]
 801883e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018842:	f1bb 0f00 	cmp.w	fp, #0
 8018846:	dc03      	bgt.n	8018850 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8018848:	9a03      	ldr	r2, [sp, #12]
 801884a:	2a00      	cmp	r2, #0
 801884c:	f340 8146 	ble.w	8018adc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8018850:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018852:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8018856:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801885a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801885e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018860:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018864:	2b00      	cmp	r3, #0
 8018866:	dd0e      	ble.n	8018886 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8018868:	140c      	asrs	r4, r1, #16
 801886a:	d405      	bmi.n	8018878 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801886c:	42bc      	cmp	r4, r7
 801886e:	da03      	bge.n	8018878 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018870:	1414      	asrs	r4, r2, #16
 8018872:	d401      	bmi.n	8018878 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018874:	42b4      	cmp	r4, r6
 8018876:	db07      	blt.n	8018888 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018878:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801887a:	4421      	add	r1, r4
 801887c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801887e:	3b01      	subs	r3, #1
 8018880:	4422      	add	r2, r4
 8018882:	3002      	adds	r0, #2
 8018884:	e7ee      	b.n	8018864 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8018886:	d017      	beq.n	80188b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8018888:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801888a:	1e5c      	subs	r4, r3, #1
 801888c:	fb05 1504 	mla	r5, r5, r4, r1
 8018890:	142d      	asrs	r5, r5, #16
 8018892:	d409      	bmi.n	80188a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018894:	42bd      	cmp	r5, r7
 8018896:	da07      	bge.n	80188a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018898:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801889a:	fb05 2404 	mla	r4, r5, r4, r2
 801889e:	1424      	asrs	r4, r4, #16
 80188a0:	d402      	bmi.n	80188a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80188a2:	42b4      	cmp	r4, r6
 80188a4:	f2c0 80b3 	blt.w	8018a0e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 80188a8:	2600      	movs	r6, #0
 80188aa:	199c      	adds	r4, r3, r6
 80188ac:	2c00      	cmp	r4, #0
 80188ae:	dc3e      	bgt.n	801892e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80188b0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80188b4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80188b8:	f1bb 0f00 	cmp.w	fp, #0
 80188bc:	f340 810e 	ble.w	8018adc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80188c0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80188c4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80188c8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80188cc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80188ce:	f1bb 0b01 	subs.w	fp, fp, #1
 80188d2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80188d6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80188da:	eeb0 6a62 	vmov.f32	s12, s5
 80188de:	ee61 7a27 	vmul.f32	s15, s2, s15
 80188e2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80188e6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80188ea:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80188ee:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80188f2:	eeb0 6a43 	vmov.f32	s12, s6
 80188f6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80188fa:	ee12 2a90 	vmov	r2, s5
 80188fe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018902:	fb92 f3f3 	sdiv	r3, r2, r3
 8018906:	ee13 2a10 	vmov	r2, s6
 801890a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801890e:	9311      	str	r3, [sp, #68]	; 0x44
 8018910:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018912:	fb92 f3f3 	sdiv	r3, r2, r3
 8018916:	9a03      	ldr	r2, [sp, #12]
 8018918:	9312      	str	r3, [sp, #72]	; 0x48
 801891a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801891e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018920:	eeb0 3a67 	vmov.f32	s6, s15
 8018924:	bf08      	it	eq
 8018926:	4613      	moveq	r3, r2
 8018928:	eef0 2a47 	vmov.f32	s5, s14
 801892c:	e789      	b.n	8018842 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801892e:	140f      	asrs	r7, r1, #16
 8018930:	d418      	bmi.n	8018964 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8018932:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8018936:	42bd      	cmp	r5, r7
 8018938:	dd14      	ble.n	8018964 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801893a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801893e:	d411      	bmi.n	8018964 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8018940:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8018944:	4564      	cmp	r4, ip
 8018946:	dd0d      	ble.n	8018964 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8018948:	b22d      	sxth	r5, r5
 801894a:	fb0c 7505 	mla	r5, ip, r5, r7
 801894e:	9c01      	ldr	r4, [sp, #4]
 8018950:	5d64      	ldrb	r4, [r4, r5]
 8018952:	2cff      	cmp	r4, #255	; 0xff
 8018954:	d10c      	bne.n	8018970 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8018956:	9c00      	ldr	r4, [sp, #0]
 8018958:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801895c:	f06f 0401 	mvn.w	r4, #1
 8018960:	4374      	muls	r4, r6
 8018962:	5305      	strh	r5, [r0, r4]
 8018964:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8018966:	4421      	add	r1, r4
 8018968:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801896a:	3e01      	subs	r6, #1
 801896c:	4422      	add	r2, r4
 801896e:	e79c      	b.n	80188aa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8018970:	2c00      	cmp	r4, #0
 8018972:	d0f7      	beq.n	8018964 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8018974:	9f00      	ldr	r7, [sp, #0]
 8018976:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801897a:	f06f 0501 	mvn.w	r5, #1
 801897e:	4375      	muls	r5, r6
 8018980:	9502      	str	r5, [sp, #8]
 8018982:	5b45      	ldrh	r5, [r0, r5]
 8018984:	fa1f fc84 	uxth.w	ip, r4
 8018988:	122f      	asrs	r7, r5, #8
 801898a:	43e4      	mvns	r4, r4
 801898c:	b2e4      	uxtb	r4, r4
 801898e:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8018992:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018996:	fb17 f704 	smulbb	r7, r7, r4
 801899a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801899e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80189a2:	00ed      	lsls	r5, r5, #3
 80189a4:	fb0e 7e0c 	mla	lr, lr, ip, r7
 80189a8:	b2ed      	uxtb	r5, r5
 80189aa:	ea4f 07e9 	mov.w	r7, r9, asr #3
 80189ae:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 80189b2:	fb15 f504 	smulbb	r5, r5, r4
 80189b6:	fa5f f989 	uxtb.w	r9, r9
 80189ba:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80189be:	fb09 550c 	mla	r5, r9, ip, r5
 80189c2:	fb1a fa04 	smulbb	sl, sl, r4
 80189c6:	fa1f fe8e 	uxth.w	lr, lr
 80189ca:	b2ad      	uxth	r5, r5
 80189cc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80189d0:	fb07 a70c 	mla	r7, r7, ip, sl
 80189d4:	f10e 0401 	add.w	r4, lr, #1
 80189d8:	f105 0a01 	add.w	sl, r5, #1
 80189dc:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 80189e0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80189e4:	b2bf      	uxth	r7, r7
 80189e6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80189ea:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 80189ee:	ea4a 0e0e 	orr.w	lr, sl, lr
 80189f2:	f107 0a01 	add.w	sl, r7, #1
 80189f6:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80189fa:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80189fe:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8018a02:	9c02      	ldr	r4, [sp, #8]
 8018a04:	ea4e 0e0a 	orr.w	lr, lr, sl
 8018a08:	f820 e004 	strh.w	lr, [r0, r4]
 8018a0c:	e7aa      	b.n	8018964 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8018a0e:	f04f 0900 	mov.w	r9, #0
 8018a12:	eba3 0409 	sub.w	r4, r3, r9
 8018a16:	2c00      	cmp	r4, #0
 8018a18:	f77f af4a 	ble.w	80188b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018a1c:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8018a20:	1414      	asrs	r4, r2, #16
 8018a22:	140d      	asrs	r5, r1, #16
 8018a24:	fb06 5504 	mla	r5, r6, r4, r5
 8018a28:	9c01      	ldr	r4, [sp, #4]
 8018a2a:	5d64      	ldrb	r4, [r4, r5]
 8018a2c:	2cff      	cmp	r4, #255	; 0xff
 8018a2e:	d10b      	bne.n	8018a48 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8018a30:	9c00      	ldr	r4, [sp, #0]
 8018a32:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8018a36:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8018a3a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8018a3c:	4421      	add	r1, r4
 8018a3e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8018a40:	f109 0901 	add.w	r9, r9, #1
 8018a44:	4422      	add	r2, r4
 8018a46:	e7e4      	b.n	8018a12 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8018a48:	2c00      	cmp	r4, #0
 8018a4a:	d0f6      	beq.n	8018a3a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8018a4c:	9e00      	ldr	r6, [sp, #0]
 8018a4e:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8018a52:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8018a56:	b2a7      	uxth	r7, r4
 8018a58:	122e      	asrs	r6, r5, #8
 8018a5a:	43e4      	mvns	r4, r4
 8018a5c:	b2e4      	uxtb	r4, r4
 8018a5e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8018a62:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8018a66:	fb16 f604 	smulbb	r6, r6, r4
 8018a6a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8018a6e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018a72:	00ed      	lsls	r5, r5, #3
 8018a74:	fb0c 6c07 	mla	ip, ip, r7, r6
 8018a78:	b2ed      	uxtb	r5, r5
 8018a7a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8018a7e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018a82:	fb15 f504 	smulbb	r5, r5, r4
 8018a86:	fa5f fe8e 	uxtb.w	lr, lr
 8018a8a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8018a8e:	fb0e 5507 	mla	r5, lr, r7, r5
 8018a92:	fb1a fa04 	smulbb	sl, sl, r4
 8018a96:	fa1f fc8c 	uxth.w	ip, ip
 8018a9a:	b2ad      	uxth	r5, r5
 8018a9c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018aa0:	fb06 a607 	mla	r6, r6, r7, sl
 8018aa4:	f10c 0401 	add.w	r4, ip, #1
 8018aa8:	f105 0a01 	add.w	sl, r5, #1
 8018aac:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8018ab0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018ab4:	b2b6      	uxth	r6, r6
 8018ab6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018aba:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018abe:	ea4a 0c0c 	orr.w	ip, sl, ip
 8018ac2:	f106 0a01 	add.w	sl, r6, #1
 8018ac6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8018aca:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018ace:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8018ad2:	ea4c 0c0a 	orr.w	ip, ip, sl
 8018ad6:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8018ada:	e7ae      	b.n	8018a3a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8018adc:	b005      	add	sp, #20
 8018ade:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018ae2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018ae2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018ae6:	b085      	sub	sp, #20
 8018ae8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018aea:	9203      	str	r2, [sp, #12]
 8018aec:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8018af0:	9201      	str	r2, [sp, #4]
 8018af2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8018af6:	9100      	str	r1, [sp, #0]
 8018af8:	6841      	ldr	r1, [r0, #4]
 8018afa:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8018afe:	fb01 2404 	mla	r4, r1, r4, r2
 8018b02:	6802      	ldr	r2, [r0, #0]
 8018b04:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018b08:	f8de 2000 	ldr.w	r2, [lr]
 8018b0c:	9202      	str	r2, [sp, #8]
 8018b0e:	9a01      	ldr	r2, [sp, #4]
 8018b10:	43d6      	mvns	r6, r2
 8018b12:	b2f6      	uxtb	r6, r6
 8018b14:	9a00      	ldr	r2, [sp, #0]
 8018b16:	2a00      	cmp	r2, #0
 8018b18:	dc03      	bgt.n	8018b22 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8018b1a:	9a03      	ldr	r2, [sp, #12]
 8018b1c:	2a00      	cmp	r2, #0
 8018b1e:	f340 8124 	ble.w	8018d6a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8018b22:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018b24:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8018b28:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8018b2c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018b30:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018b32:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018b36:	2b00      	cmp	r3, #0
 8018b38:	dd0e      	ble.n	8018b58 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018b3a:	1408      	asrs	r0, r1, #16
 8018b3c:	d405      	bmi.n	8018b4a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8018b3e:	4560      	cmp	r0, ip
 8018b40:	da03      	bge.n	8018b4a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8018b42:	1410      	asrs	r0, r2, #16
 8018b44:	d401      	bmi.n	8018b4a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8018b46:	42b8      	cmp	r0, r7
 8018b48:	db07      	blt.n	8018b5a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8018b4a:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018b4c:	4401      	add	r1, r0
 8018b4e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8018b50:	3b01      	subs	r3, #1
 8018b52:	4402      	add	r2, r0
 8018b54:	3402      	adds	r4, #2
 8018b56:	e7ee      	b.n	8018b36 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8018b58:	d06e      	beq.n	8018c38 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8018b5a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8018b5c:	1e58      	subs	r0, r3, #1
 8018b5e:	fb05 1500 	mla	r5, r5, r0, r1
 8018b62:	142d      	asrs	r5, r5, #16
 8018b64:	d45c      	bmi.n	8018c20 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018b66:	4565      	cmp	r5, ip
 8018b68:	da5a      	bge.n	8018c20 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018b6a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8018b6c:	fb05 2000 	mla	r0, r5, r0, r2
 8018b70:	1400      	asrs	r0, r0, #16
 8018b72:	d455      	bmi.n	8018c20 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018b74:	42b8      	cmp	r0, r7
 8018b76:	da53      	bge.n	8018c20 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018b78:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8018b7c:	4699      	mov	r9, r3
 8018b7e:	46a2      	mov	sl, r4
 8018b80:	f1b9 0f00 	cmp.w	r9, #0
 8018b84:	dd54      	ble.n	8018c30 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018b86:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8018b8a:	140d      	asrs	r5, r1, #16
 8018b8c:	1410      	asrs	r0, r2, #16
 8018b8e:	fb07 5000 	mla	r0, r7, r0, r5
 8018b92:	9d02      	ldr	r5, [sp, #8]
 8018b94:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8018b98:	f8ba 5000 	ldrh.w	r5, [sl]
 8018b9c:	122f      	asrs	r7, r5, #8
 8018b9e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8018ba2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018ba6:	fb17 f706 	smulbb	r7, r7, r6
 8018baa:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8018bae:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018bb2:	00ed      	lsls	r5, r5, #3
 8018bb4:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8018bb8:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8018bbc:	10c7      	asrs	r7, r0, #3
 8018bbe:	b2ed      	uxtb	r5, r5
 8018bc0:	00c0      	lsls	r0, r0, #3
 8018bc2:	fb18 f806 	smulbb	r8, r8, r6
 8018bc6:	fb15 f506 	smulbb	r5, r5, r6
 8018bca:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018bce:	b2c0      	uxtb	r0, r0
 8018bd0:	fa1f fc8c 	uxth.w	ip, ip
 8018bd4:	fb07 870b 	mla	r7, r7, fp, r8
 8018bd8:	fb00 500b 	mla	r0, r0, fp, r5
 8018bdc:	b280      	uxth	r0, r0
 8018bde:	b2bf      	uxth	r7, r7
 8018be0:	f10c 0501 	add.w	r5, ip, #1
 8018be4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8018be8:	f107 0801 	add.w	r8, r7, #1
 8018bec:	1c45      	adds	r5, r0, #1
 8018bee:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8018bf2:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8018bf6:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018bf8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018bfc:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018c00:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8018c04:	ea45 0c0c 	orr.w	ip, r5, ip
 8018c08:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8018c0c:	4401      	add	r1, r0
 8018c0e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8018c10:	ea4c 0c08 	orr.w	ip, ip, r8
 8018c14:	f82a cb02 	strh.w	ip, [sl], #2
 8018c18:	4402      	add	r2, r0
 8018c1a:	f109 39ff 	add.w	r9, r9, #4294967295
 8018c1e:	e7af      	b.n	8018b80 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018c20:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8018c24:	f04f 0800 	mov.w	r8, #0
 8018c28:	eb03 0008 	add.w	r0, r3, r8
 8018c2c:	2800      	cmp	r0, #0
 8018c2e:	dc41      	bgt.n	8018cb4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8018c30:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018c34:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018c38:	9b00      	ldr	r3, [sp, #0]
 8018c3a:	2b00      	cmp	r3, #0
 8018c3c:	f340 8095 	ble.w	8018d6a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8018c40:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018c44:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018c48:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018c4c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018c4e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018c52:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018c56:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018c5a:	eef0 6a62 	vmov.f32	s13, s5
 8018c5e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018c62:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018c66:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018c6a:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8018c6e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018c72:	eef0 6a43 	vmov.f32	s13, s6
 8018c76:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018c7a:	ee12 2a90 	vmov	r2, s5
 8018c7e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018c82:	fb92 f3f3 	sdiv	r3, r2, r3
 8018c86:	ee13 2a10 	vmov	r2, s6
 8018c8a:	9311      	str	r3, [sp, #68]	; 0x44
 8018c8c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018c8e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018c92:	9312      	str	r3, [sp, #72]	; 0x48
 8018c94:	9b00      	ldr	r3, [sp, #0]
 8018c96:	9a03      	ldr	r2, [sp, #12]
 8018c98:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018c9c:	3b01      	subs	r3, #1
 8018c9e:	9300      	str	r3, [sp, #0]
 8018ca0:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8018ca4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018ca6:	eeb0 3a67 	vmov.f32	s6, s15
 8018caa:	bf08      	it	eq
 8018cac:	4613      	moveq	r3, r2
 8018cae:	eef0 2a47 	vmov.f32	s5, s14
 8018cb2:	e72f      	b.n	8018b14 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8018cb4:	140f      	asrs	r7, r1, #16
 8018cb6:	d451      	bmi.n	8018d5c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8018cb8:	f8de 5008 	ldr.w	r5, [lr, #8]
 8018cbc:	42bd      	cmp	r5, r7
 8018cbe:	dd4d      	ble.n	8018d5c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8018cc0:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8018cc4:	d44a      	bmi.n	8018d5c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8018cc6:	f8de 000c 	ldr.w	r0, [lr, #12]
 8018cca:	4560      	cmp	r0, ip
 8018ccc:	dd46      	ble.n	8018d5c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8018cce:	b22d      	sxth	r5, r5
 8018cd0:	fb0c 7505 	mla	r5, ip, r5, r7
 8018cd4:	9802      	ldr	r0, [sp, #8]
 8018cd6:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8018cda:	f06f 0501 	mvn.w	r5, #1
 8018cde:	fb05 fb08 	mul.w	fp, r5, r8
 8018ce2:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8018ce6:	f834 500b 	ldrh.w	r5, [r4, fp]
 8018cea:	122f      	asrs	r7, r5, #8
 8018cec:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018cf0:	fb17 f706 	smulbb	r7, r7, r6
 8018cf4:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8018cf8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018cfc:	00ed      	lsls	r5, r5, #3
 8018cfe:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8018d02:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8018d06:	10c7      	asrs	r7, r0, #3
 8018d08:	b2ed      	uxtb	r5, r5
 8018d0a:	00c0      	lsls	r0, r0, #3
 8018d0c:	fb19 f906 	smulbb	r9, r9, r6
 8018d10:	fb15 f506 	smulbb	r5, r5, r6
 8018d14:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018d18:	b2c0      	uxtb	r0, r0
 8018d1a:	fa1f fc8c 	uxth.w	ip, ip
 8018d1e:	fb07 970a 	mla	r7, r7, sl, r9
 8018d22:	fb00 500a 	mla	r0, r0, sl, r5
 8018d26:	b2bf      	uxth	r7, r7
 8018d28:	b280      	uxth	r0, r0
 8018d2a:	f10c 0501 	add.w	r5, ip, #1
 8018d2e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8018d32:	f107 0901 	add.w	r9, r7, #1
 8018d36:	1c45      	adds	r5, r0, #1
 8018d38:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8018d3c:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8018d40:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018d44:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018d48:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018d4c:	ea45 0c0c 	orr.w	ip, r5, ip
 8018d50:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018d54:	ea4c 0c09 	orr.w	ip, ip, r9
 8018d58:	f824 c00b 	strh.w	ip, [r4, fp]
 8018d5c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018d5e:	4401      	add	r1, r0
 8018d60:	9812      	ldr	r0, [sp, #72]	; 0x48
 8018d62:	f108 38ff 	add.w	r8, r8, #4294967295
 8018d66:	4402      	add	r2, r0
 8018d68:	e75e      	b.n	8018c28 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8018d6a:	b005      	add	sp, #20
 8018d6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018d70 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018d70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018d74:	b085      	sub	sp, #20
 8018d76:	4693      	mov	fp, r2
 8018d78:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8018d7a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8018d7c:	6870      	ldr	r0, [r6, #4]
 8018d7e:	9101      	str	r1, [sp, #4]
 8018d80:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8018d84:	fb00 2404 	mla	r4, r0, r4, r2
 8018d88:	6832      	ldr	r2, [r6, #0]
 8018d8a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8018d8e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018d92:	682a      	ldr	r2, [r5, #0]
 8018d94:	9202      	str	r2, [sp, #8]
 8018d96:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018d9a:	9a01      	ldr	r2, [sp, #4]
 8018d9c:	2a00      	cmp	r2, #0
 8018d9e:	dc03      	bgt.n	8018da8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8018da0:	f1bb 0f00 	cmp.w	fp, #0
 8018da4:	f340 809a 	ble.w	8018edc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8018da8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018daa:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8018dae:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8018db2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8018db6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018db8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018dbc:	2b00      	cmp	r3, #0
 8018dbe:	dd0c      	ble.n	8018dda <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8018dc0:	1406      	asrs	r6, r0, #16
 8018dc2:	d405      	bmi.n	8018dd0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8018dc4:	454e      	cmp	r6, r9
 8018dc6:	da03      	bge.n	8018dd0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8018dc8:	1416      	asrs	r6, r2, #16
 8018dca:	d401      	bmi.n	8018dd0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8018dcc:	4546      	cmp	r6, r8
 8018dce:	db05      	blt.n	8018ddc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018dd0:	4470      	add	r0, lr
 8018dd2:	4462      	add	r2, ip
 8018dd4:	3b01      	subs	r3, #1
 8018dd6:	3402      	adds	r4, #2
 8018dd8:	e7f0      	b.n	8018dbc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8018dda:	d00f      	beq.n	8018dfc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8018ddc:	1e5e      	subs	r6, r3, #1
 8018dde:	fb0e 0706 	mla	r7, lr, r6, r0
 8018de2:	143f      	asrs	r7, r7, #16
 8018de4:	d541      	bpl.n	8018e6a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8018de6:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8018dea:	4698      	mov	r8, r3
 8018dec:	9603      	str	r6, [sp, #12]
 8018dee:	f1b8 0f00 	cmp.w	r8, #0
 8018df2:	dc56      	bgt.n	8018ea2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8018df4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018df8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018dfc:	9b01      	ldr	r3, [sp, #4]
 8018dfe:	2b00      	cmp	r3, #0
 8018e00:	dd6c      	ble.n	8018edc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8018e02:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018e06:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018e0a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018e0e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018e10:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018e14:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018e18:	eeb0 6a62 	vmov.f32	s12, s5
 8018e1c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018e20:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018e24:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018e28:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8018e2c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018e30:	eeb0 6a43 	vmov.f32	s12, s6
 8018e34:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018e38:	ee12 2a90 	vmov	r2, s5
 8018e3c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018e40:	fb92 fef3 	sdiv	lr, r2, r3
 8018e44:	ee13 2a10 	vmov	r2, s6
 8018e48:	fb92 fcf3 	sdiv	ip, r2, r3
 8018e4c:	9b01      	ldr	r3, [sp, #4]
 8018e4e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018e52:	3b01      	subs	r3, #1
 8018e54:	9301      	str	r3, [sp, #4]
 8018e56:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8018e5a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018e5c:	eeb0 3a67 	vmov.f32	s6, s15
 8018e60:	bf08      	it	eq
 8018e62:	465b      	moveq	r3, fp
 8018e64:	eef0 2a47 	vmov.f32	s5, s14
 8018e68:	e797      	b.n	8018d9a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8018e6a:	454f      	cmp	r7, r9
 8018e6c:	dabb      	bge.n	8018de6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018e6e:	fb0c 2606 	mla	r6, ip, r6, r2
 8018e72:	1436      	asrs	r6, r6, #16
 8018e74:	d4b7      	bmi.n	8018de6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018e76:	4546      	cmp	r6, r8
 8018e78:	dab5      	bge.n	8018de6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018e7a:	461e      	mov	r6, r3
 8018e7c:	46a0      	mov	r8, r4
 8018e7e:	2e00      	cmp	r6, #0
 8018e80:	ddb8      	ble.n	8018df4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018e82:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8018e86:	9902      	ldr	r1, [sp, #8]
 8018e88:	1417      	asrs	r7, r2, #16
 8018e8a:	ea4f 4920 	mov.w	r9, r0, asr #16
 8018e8e:	fb0a 9707 	mla	r7, sl, r7, r9
 8018e92:	4470      	add	r0, lr
 8018e94:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8018e98:	f828 7b02 	strh.w	r7, [r8], #2
 8018e9c:	4462      	add	r2, ip
 8018e9e:	3e01      	subs	r6, #1
 8018ea0:	e7ed      	b.n	8018e7e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8018ea2:	ea5f 4920 	movs.w	r9, r0, asr #16
 8018ea6:	d414      	bmi.n	8018ed2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8018ea8:	68ae      	ldr	r6, [r5, #8]
 8018eaa:	454e      	cmp	r6, r9
 8018eac:	dd11      	ble.n	8018ed2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8018eae:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8018eb2:	d40e      	bmi.n	8018ed2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8018eb4:	68ef      	ldr	r7, [r5, #12]
 8018eb6:	4557      	cmp	r7, sl
 8018eb8:	dd0b      	ble.n	8018ed2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8018eba:	b236      	sxth	r6, r6
 8018ebc:	fb0a 9606 	mla	r6, sl, r6, r9
 8018ec0:	9f02      	ldr	r7, [sp, #8]
 8018ec2:	f06f 0101 	mvn.w	r1, #1
 8018ec6:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8018eca:	fb01 f608 	mul.w	r6, r1, r8
 8018ece:	9903      	ldr	r1, [sp, #12]
 8018ed0:	538f      	strh	r7, [r1, r6]
 8018ed2:	4470      	add	r0, lr
 8018ed4:	4462      	add	r2, ip
 8018ed6:	f108 38ff 	add.w	r8, r8, #4294967295
 8018eda:	e788      	b.n	8018dee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018edc:	b005      	add	sp, #20
 8018ede:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018ee2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018ee2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018ee6:	b087      	sub	sp, #28
 8018ee8:	468b      	mov	fp, r1
 8018eea:	9815      	ldr	r0, [sp, #84]	; 0x54
 8018eec:	9203      	str	r2, [sp, #12]
 8018eee:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018ef2:	9204      	str	r2, [sp, #16]
 8018ef4:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8018ef8:	6841      	ldr	r1, [r0, #4]
 8018efa:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8018efe:	fb01 2505 	mla	r5, r1, r5, r2
 8018f02:	6802      	ldr	r2, [r0, #0]
 8018f04:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8018f08:	f8d9 2000 	ldr.w	r2, [r9]
 8018f0c:	9201      	str	r2, [sp, #4]
 8018f0e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018f12:	f1bb 0f00 	cmp.w	fp, #0
 8018f16:	dc03      	bgt.n	8018f20 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8018f18:	9a03      	ldr	r2, [sp, #12]
 8018f1a:	2a00      	cmp	r2, #0
 8018f1c:	f340 8159 	ble.w	80191d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8018f20:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018f22:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8018f26:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8018f2a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8018f2e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018f30:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018f34:	2b00      	cmp	r3, #0
 8018f36:	dd0e      	ble.n	8018f56 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8018f38:	1402      	asrs	r2, r0, #16
 8018f3a:	d405      	bmi.n	8018f48 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018f3c:	42ba      	cmp	r2, r7
 8018f3e:	da03      	bge.n	8018f48 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018f40:	140a      	asrs	r2, r1, #16
 8018f42:	d401      	bmi.n	8018f48 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018f44:	42b2      	cmp	r2, r6
 8018f46:	db07      	blt.n	8018f58 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018f48:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8018f4a:	4410      	add	r0, r2
 8018f4c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018f4e:	3b01      	subs	r3, #1
 8018f50:	4411      	add	r1, r2
 8018f52:	3502      	adds	r5, #2
 8018f54:	e7ee      	b.n	8018f34 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8018f56:	d017      	beq.n	8018f88 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8018f58:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018f5a:	1e5a      	subs	r2, r3, #1
 8018f5c:	fb04 0402 	mla	r4, r4, r2, r0
 8018f60:	1424      	asrs	r4, r4, #16
 8018f62:	d409      	bmi.n	8018f78 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018f64:	42bc      	cmp	r4, r7
 8018f66:	da07      	bge.n	8018f78 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018f68:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018f6a:	fb04 1202 	mla	r2, r4, r2, r1
 8018f6e:	1412      	asrs	r2, r2, #16
 8018f70:	d402      	bmi.n	8018f78 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018f72:	42b2      	cmp	r2, r6
 8018f74:	f2c0 80bf 	blt.w	80190f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8018f78:	2700      	movs	r7, #0
 8018f7a:	19da      	adds	r2, r3, r7
 8018f7c:	2a00      	cmp	r2, #0
 8018f7e:	dc3e      	bgt.n	8018ffe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8018f80:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018f84:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8018f88:	f1bb 0f00 	cmp.w	fp, #0
 8018f8c:	f340 8121 	ble.w	80191d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8018f90:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018f94:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018f98:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018f9c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018f9e:	f1bb 0b01 	subs.w	fp, fp, #1
 8018fa2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018fa6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018faa:	eeb0 6a62 	vmov.f32	s12, s5
 8018fae:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018fb2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018fb6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018fba:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8018fbe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018fc2:	eeb0 6a43 	vmov.f32	s12, s6
 8018fc6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018fca:	ee12 2a90 	vmov	r2, s5
 8018fce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018fd2:	fb92 f3f3 	sdiv	r3, r2, r3
 8018fd6:	ee13 2a10 	vmov	r2, s6
 8018fda:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018fde:	9313      	str	r3, [sp, #76]	; 0x4c
 8018fe0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018fe2:	fb92 f3f3 	sdiv	r3, r2, r3
 8018fe6:	9a03      	ldr	r2, [sp, #12]
 8018fe8:	9314      	str	r3, [sp, #80]	; 0x50
 8018fea:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8018fee:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018ff0:	eeb0 3a67 	vmov.f32	s6, s15
 8018ff4:	bf08      	it	eq
 8018ff6:	4613      	moveq	r3, r2
 8018ff8:	eef0 2a47 	vmov.f32	s5, s14
 8018ffc:	e789      	b.n	8018f12 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8018ffe:	1406      	asrs	r6, r0, #16
 8019000:	d42d      	bmi.n	801905e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019002:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8019006:	42b4      	cmp	r4, r6
 8019008:	dd29      	ble.n	801905e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801900a:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801900e:	d426      	bmi.n	801905e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019010:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8019014:	4562      	cmp	r2, ip
 8019016:	dd22      	ble.n	801905e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019018:	b224      	sxth	r4, r4
 801901a:	9a01      	ldr	r2, [sp, #4]
 801901c:	fb0c 6404 	mla	r4, ip, r4, r6
 8019020:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8019024:	0e22      	lsrs	r2, r4, #24
 8019026:	d01a      	beq.n	801905e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019028:	9e04      	ldr	r6, [sp, #16]
 801902a:	4372      	muls	r2, r6
 801902c:	1c56      	adds	r6, r2, #1
 801902e:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8019032:	1212      	asrs	r2, r2, #8
 8019034:	0a26      	lsrs	r6, r4, #8
 8019036:	2aff      	cmp	r2, #255	; 0xff
 8019038:	9605      	str	r6, [sp, #20]
 801903a:	d116      	bne.n	801906a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801903c:	f06f 0201 	mvn.w	r2, #1
 8019040:	fb02 fc07 	mul.w	ip, r2, r7
 8019044:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8019048:	0962      	lsrs	r2, r4, #5
 801904a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801904e:	f026 0607 	bic.w	r6, r6, #7
 8019052:	4316      	orrs	r6, r2
 8019054:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8019058:	4326      	orrs	r6, r4
 801905a:	f825 600c 	strh.w	r6, [r5, ip]
 801905e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019060:	4410      	add	r0, r2
 8019062:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019064:	3f01      	subs	r7, #1
 8019066:	4411      	add	r1, r2
 8019068:	e787      	b.n	8018f7a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801906a:	f06f 0601 	mvn.w	r6, #1
 801906e:	437e      	muls	r6, r7
 8019070:	fa1f fa82 	uxth.w	sl, r2
 8019074:	f835 8006 	ldrh.w	r8, [r5, r6]
 8019078:	9602      	str	r6, [sp, #8]
 801907a:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801907e:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8019082:	43d2      	mvns	r2, r2
 8019084:	b2d2      	uxtb	r2, r2
 8019086:	fb1c fc0a 	smulbb	ip, ip, sl
 801908a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801908e:	fb0e ce02 	mla	lr, lr, r2, ip
 8019092:	b2e4      	uxtb	r4, r4
 8019094:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8019098:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801909c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80190a0:	fa5f f888 	uxtb.w	r8, r8
 80190a4:	fb14 f40a 	smulbb	r4, r4, sl
 80190a8:	fb08 4402 	mla	r4, r8, r2, r4
 80190ac:	fa1f fe8e 	uxth.w	lr, lr
 80190b0:	fb16 f60a 	smulbb	r6, r6, sl
 80190b4:	b2a4      	uxth	r4, r4
 80190b6:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80190ba:	fb0c 6c02 	mla	ip, ip, r2, r6
 80190be:	f10e 0201 	add.w	r2, lr, #1
 80190c2:	1c66      	adds	r6, r4, #1
 80190c4:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 80190c8:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80190cc:	fa1f fc8c 	uxth.w	ip, ip
 80190d0:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80190d4:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 80190d8:	ea46 0e0e 	orr.w	lr, r6, lr
 80190dc:	f10c 0601 	add.w	r6, ip, #1
 80190e0:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 80190e4:	0976      	lsrs	r6, r6, #5
 80190e6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80190ea:	9a02      	ldr	r2, [sp, #8]
 80190ec:	ea4e 0e06 	orr.w	lr, lr, r6
 80190f0:	f825 e002 	strh.w	lr, [r5, r2]
 80190f4:	e7b3      	b.n	801905e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80190f6:	f04f 0800 	mov.w	r8, #0
 80190fa:	eba3 0208 	sub.w	r2, r3, r8
 80190fe:	2a00      	cmp	r2, #0
 8019100:	f77f af3e 	ble.w	8018f80 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019104:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8019108:	1404      	asrs	r4, r0, #16
 801910a:	140a      	asrs	r2, r1, #16
 801910c:	fb06 4202 	mla	r2, r6, r2, r4
 8019110:	9c01      	ldr	r4, [sp, #4]
 8019112:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8019116:	0e22      	lsrs	r2, r4, #24
 8019118:	d016      	beq.n	8019148 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801911a:	9e04      	ldr	r6, [sp, #16]
 801911c:	4372      	muls	r2, r6
 801911e:	1c56      	adds	r6, r2, #1
 8019120:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8019124:	1212      	asrs	r2, r2, #8
 8019126:	2aff      	cmp	r2, #255	; 0xff
 8019128:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801912c:	d113      	bne.n	8019156 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801912e:	0962      	lsrs	r2, r4, #5
 8019130:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8019134:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019138:	f026 0607 	bic.w	r6, r6, #7
 801913c:	4316      	orrs	r6, r2
 801913e:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8019142:	4326      	orrs	r6, r4
 8019144:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8019148:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801914a:	4410      	add	r0, r2
 801914c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801914e:	f108 0801 	add.w	r8, r8, #1
 8019152:	4411      	add	r1, r2
 8019154:	e7d1      	b.n	80190fa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8019156:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801915a:	fa1f fa82 	uxth.w	sl, r2
 801915e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8019162:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8019166:	43d2      	mvns	r2, r2
 8019168:	b2d2      	uxtb	r2, r2
 801916a:	fb17 f70a 	smulbb	r7, r7, sl
 801916e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019172:	fb0c 7c02 	mla	ip, ip, r2, r7
 8019176:	b2e4      	uxtb	r4, r4
 8019178:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801917c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019180:	fa5f fe8e 	uxtb.w	lr, lr
 8019184:	fb14 f40a 	smulbb	r4, r4, sl
 8019188:	fb0e 4402 	mla	r4, lr, r2, r4
 801918c:	b2f6      	uxtb	r6, r6
 801918e:	fa1f fc8c 	uxth.w	ip, ip
 8019192:	fb16 f60a 	smulbb	r6, r6, sl
 8019196:	b2a4      	uxth	r4, r4
 8019198:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801919c:	fb07 6702 	mla	r7, r7, r2, r6
 80191a0:	f10c 0201 	add.w	r2, ip, #1
 80191a4:	1c66      	adds	r6, r4, #1
 80191a6:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80191aa:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80191ae:	b2bf      	uxth	r7, r7
 80191b0:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80191b4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80191b8:	ea46 0c0c 	orr.w	ip, r6, ip
 80191bc:	1c7e      	adds	r6, r7, #1
 80191be:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80191c2:	0976      	lsrs	r6, r6, #5
 80191c4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80191c8:	ea4c 0c06 	orr.w	ip, ip, r6
 80191cc:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 80191d0:	e7ba      	b.n	8019148 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 80191d2:	b007      	add	sp, #28
 80191d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080191d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80191d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80191dc:	b085      	sub	sp, #20
 80191de:	468b      	mov	fp, r1
 80191e0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80191e2:	9203      	str	r2, [sp, #12]
 80191e4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80191e8:	6841      	ldr	r1, [r0, #4]
 80191ea:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 80191ee:	fb01 2404 	mla	r4, r1, r4, r2
 80191f2:	6802      	ldr	r2, [r0, #0]
 80191f4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80191f8:	f8d8 2000 	ldr.w	r2, [r8]
 80191fc:	9201      	str	r2, [sp, #4]
 80191fe:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019202:	f1bb 0f00 	cmp.w	fp, #0
 8019206:	dc03      	bgt.n	8019210 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8019208:	9a03      	ldr	r2, [sp, #12]
 801920a:	2a00      	cmp	r2, #0
 801920c:	f340 814f 	ble.w	80194ae <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8019210:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019212:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8019216:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801921a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801921e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019220:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019224:	2b00      	cmp	r3, #0
 8019226:	dd0e      	ble.n	8019246 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019228:	1408      	asrs	r0, r1, #16
 801922a:	d405      	bmi.n	8019238 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801922c:	42b8      	cmp	r0, r7
 801922e:	da03      	bge.n	8019238 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019230:	1410      	asrs	r0, r2, #16
 8019232:	d401      	bmi.n	8019238 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019234:	42b0      	cmp	r0, r6
 8019236:	db07      	blt.n	8019248 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019238:	9811      	ldr	r0, [sp, #68]	; 0x44
 801923a:	4401      	add	r1, r0
 801923c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801923e:	3b01      	subs	r3, #1
 8019240:	4402      	add	r2, r0
 8019242:	3402      	adds	r4, #2
 8019244:	e7ee      	b.n	8019224 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8019246:	d017      	beq.n	8019278 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019248:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801924a:	1e58      	subs	r0, r3, #1
 801924c:	fb05 1500 	mla	r5, r5, r0, r1
 8019250:	142d      	asrs	r5, r5, #16
 8019252:	d409      	bmi.n	8019268 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019254:	42bd      	cmp	r5, r7
 8019256:	da07      	bge.n	8019268 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019258:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801925a:	fb05 2000 	mla	r0, r5, r0, r2
 801925e:	1400      	asrs	r0, r0, #16
 8019260:	d402      	bmi.n	8019268 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019262:	42b0      	cmp	r0, r6
 8019264:	f2c0 80ba 	blt.w	80193dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019268:	2600      	movs	r6, #0
 801926a:	1998      	adds	r0, r3, r6
 801926c:	2800      	cmp	r0, #0
 801926e:	dc3e      	bgt.n	80192ee <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019270:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019274:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019278:	f1bb 0f00 	cmp.w	fp, #0
 801927c:	f340 8117 	ble.w	80194ae <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8019280:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019284:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019288:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801928c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801928e:	f1bb 0b01 	subs.w	fp, fp, #1
 8019292:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019296:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801929a:	eeb0 6a62 	vmov.f32	s12, s5
 801929e:	ee61 7a27 	vmul.f32	s15, s2, s15
 80192a2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80192a6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80192aa:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80192ae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80192b2:	eeb0 6a43 	vmov.f32	s12, s6
 80192b6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80192ba:	ee12 2a90 	vmov	r2, s5
 80192be:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80192c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80192c6:	ee13 2a10 	vmov	r2, s6
 80192ca:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80192ce:	9311      	str	r3, [sp, #68]	; 0x44
 80192d0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80192d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80192d6:	9a03      	ldr	r2, [sp, #12]
 80192d8:	9312      	str	r3, [sp, #72]	; 0x48
 80192da:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80192de:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80192e0:	eeb0 3a67 	vmov.f32	s6, s15
 80192e4:	bf08      	it	eq
 80192e6:	4613      	moveq	r3, r2
 80192e8:	eef0 2a47 	vmov.f32	s5, s14
 80192ec:	e789      	b.n	8019202 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80192ee:	140f      	asrs	r7, r1, #16
 80192f0:	d424      	bmi.n	801933c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80192f2:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80192f6:	42bd      	cmp	r5, r7
 80192f8:	dd20      	ble.n	801933c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80192fa:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80192fe:	d41d      	bmi.n	801933c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019300:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8019304:	4560      	cmp	r0, ip
 8019306:	dd19      	ble.n	801933c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019308:	b22d      	sxth	r5, r5
 801930a:	fb0c 7505 	mla	r5, ip, r5, r7
 801930e:	9801      	ldr	r0, [sp, #4]
 8019310:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8019314:	0e07      	lsrs	r7, r0, #24
 8019316:	2fff      	cmp	r7, #255	; 0xff
 8019318:	d116      	bne.n	8019348 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801931a:	f06f 0501 	mvn.w	r5, #1
 801931e:	fb05 f706 	mul.w	r7, r5, r6
 8019322:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8019326:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801932a:	0945      	lsrs	r5, r0, #5
 801932c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019330:	ea4c 0505 	orr.w	r5, ip, r5
 8019334:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8019338:	4305      	orrs	r5, r0
 801933a:	53e5      	strh	r5, [r4, r7]
 801933c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801933e:	4401      	add	r1, r0
 8019340:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019342:	3e01      	subs	r6, #1
 8019344:	4402      	add	r2, r0
 8019346:	e790      	b.n	801926a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019348:	b2fd      	uxtb	r5, r7
 801934a:	2f00      	cmp	r7, #0
 801934c:	d0f6      	beq.n	801933c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801934e:	f06f 0701 	mvn.w	r7, #1
 8019352:	4377      	muls	r7, r6
 8019354:	fa1f f985 	uxth.w	r9, r5
 8019358:	f834 e007 	ldrh.w	lr, [r4, r7]
 801935c:	9702      	str	r7, [sp, #8]
 801935e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8019362:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8019366:	43ed      	mvns	r5, r5
 8019368:	b2ed      	uxtb	r5, r5
 801936a:	fb17 f709 	smulbb	r7, r7, r9
 801936e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019372:	fb0c 7c05 	mla	ip, ip, r5, r7
 8019376:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801937a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801937e:	b2c0      	uxtb	r0, r0
 8019380:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019384:	fa5f fe8e 	uxtb.w	lr, lr
 8019388:	fb10 f009 	smulbb	r0, r0, r9
 801938c:	fb0e 0005 	mla	r0, lr, r5, r0
 8019390:	b280      	uxth	r0, r0
 8019392:	fa1f fc8c 	uxth.w	ip, ip
 8019396:	fb1a fa09 	smulbb	sl, sl, r9
 801939a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801939e:	fb07 a705 	mla	r7, r7, r5, sl
 80193a2:	f100 0a01 	add.w	sl, r0, #1
 80193a6:	f10c 0501 	add.w	r5, ip, #1
 80193aa:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80193ae:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80193b2:	b2bf      	uxth	r7, r7
 80193b4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80193b8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80193bc:	ea4a 0c0c 	orr.w	ip, sl, ip
 80193c0:	f107 0a01 	add.w	sl, r7, #1
 80193c4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80193c8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80193cc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80193d0:	9802      	ldr	r0, [sp, #8]
 80193d2:	ea4c 0c0a 	orr.w	ip, ip, sl
 80193d6:	f824 c000 	strh.w	ip, [r4, r0]
 80193da:	e7af      	b.n	801933c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80193dc:	f04f 0e00 	mov.w	lr, #0
 80193e0:	eba3 000e 	sub.w	r0, r3, lr
 80193e4:	2800      	cmp	r0, #0
 80193e6:	f77f af43 	ble.w	8019270 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80193ea:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80193ee:	140d      	asrs	r5, r1, #16
 80193f0:	1410      	asrs	r0, r2, #16
 80193f2:	fb06 5000 	mla	r0, r6, r0, r5
 80193f6:	9d01      	ldr	r5, [sp, #4]
 80193f8:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 80193fc:	0e2e      	lsrs	r6, r5, #24
 80193fe:	2eff      	cmp	r6, #255	; 0xff
 8019400:	d112      	bne.n	8019428 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8019402:	482c      	ldr	r0, [pc, #176]	; (80194b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8019404:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8019408:	0968      	lsrs	r0, r5, #5
 801940a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801940e:	4330      	orrs	r0, r6
 8019410:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8019414:	4328      	orrs	r0, r5
 8019416:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801941a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801941c:	4401      	add	r1, r0
 801941e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019420:	f10e 0e01 	add.w	lr, lr, #1
 8019424:	4402      	add	r2, r0
 8019426:	e7db      	b.n	80193e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8019428:	b2f0      	uxtb	r0, r6
 801942a:	2e00      	cmp	r6, #0
 801942c:	d0f5      	beq.n	801941a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801942e:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8019432:	fa1f f980 	uxth.w	r9, r0
 8019436:	ea4f 272c 	mov.w	r7, ip, asr #8
 801943a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801943e:	43c0      	mvns	r0, r0
 8019440:	b2c0      	uxtb	r0, r0
 8019442:	fb16 f609 	smulbb	r6, r6, r9
 8019446:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801944a:	fb07 6700 	mla	r7, r7, r0, r6
 801944e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8019452:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8019456:	b2ed      	uxtb	r5, r5
 8019458:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801945c:	fa5f fc8c 	uxtb.w	ip, ip
 8019460:	fb15 f509 	smulbb	r5, r5, r9
 8019464:	fb0c 5500 	mla	r5, ip, r0, r5
 8019468:	b2bf      	uxth	r7, r7
 801946a:	fb1a fa09 	smulbb	sl, sl, r9
 801946e:	b2ad      	uxth	r5, r5
 8019470:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019474:	fb06 a600 	mla	r6, r6, r0, sl
 8019478:	1c78      	adds	r0, r7, #1
 801947a:	f105 0a01 	add.w	sl, r5, #1
 801947e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8019482:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019486:	b2b6      	uxth	r6, r6
 8019488:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801948c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019490:	ea4a 0707 	orr.w	r7, sl, r7
 8019494:	f106 0a01 	add.w	sl, r6, #1
 8019498:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801949c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80194a0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80194a4:	ea47 070a 	orr.w	r7, r7, sl
 80194a8:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 80194ac:	e7b5      	b.n	801941a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80194ae:	b005      	add	sp, #20
 80194b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80194b4:	fffff800 	.word	0xfffff800

080194b8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80194b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80194bc:	b087      	sub	sp, #28
 80194be:	468b      	mov	fp, r1
 80194c0:	9815      	ldr	r0, [sp, #84]	; 0x54
 80194c2:	9203      	str	r2, [sp, #12]
 80194c4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80194c8:	9204      	str	r2, [sp, #16]
 80194ca:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80194ce:	6841      	ldr	r1, [r0, #4]
 80194d0:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 80194d4:	fb01 2404 	mla	r4, r1, r4, r2
 80194d8:	6802      	ldr	r2, [r0, #0]
 80194da:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80194de:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80194e2:	3201      	adds	r2, #1
 80194e4:	f022 0201 	bic.w	r2, r2, #1
 80194e8:	9200      	str	r2, [sp, #0]
 80194ea:	f8d9 2000 	ldr.w	r2, [r9]
 80194ee:	9201      	str	r2, [sp, #4]
 80194f0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80194f4:	f1bb 0f00 	cmp.w	fp, #0
 80194f8:	dc03      	bgt.n	8019502 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80194fa:	9a03      	ldr	r2, [sp, #12]
 80194fc:	2a00      	cmp	r2, #0
 80194fe:	f340 8169 	ble.w	80197d4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8019502:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019504:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8019508:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801950c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019510:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019512:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019516:	2b00      	cmp	r3, #0
 8019518:	dd0e      	ble.n	8019538 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801951a:	1402      	asrs	r2, r0, #16
 801951c:	d405      	bmi.n	801952a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801951e:	42ba      	cmp	r2, r7
 8019520:	da03      	bge.n	801952a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019522:	140a      	asrs	r2, r1, #16
 8019524:	d401      	bmi.n	801952a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019526:	42b2      	cmp	r2, r6
 8019528:	db07      	blt.n	801953a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801952a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801952c:	4410      	add	r0, r2
 801952e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019530:	3b01      	subs	r3, #1
 8019532:	4411      	add	r1, r2
 8019534:	3402      	adds	r4, #2
 8019536:	e7ee      	b.n	8019516 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8019538:	d017      	beq.n	801956a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801953a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801953c:	1e5a      	subs	r2, r3, #1
 801953e:	fb05 0502 	mla	r5, r5, r2, r0
 8019542:	142d      	asrs	r5, r5, #16
 8019544:	d409      	bmi.n	801955a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8019546:	42bd      	cmp	r5, r7
 8019548:	da07      	bge.n	801955a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801954a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801954c:	fb05 1202 	mla	r2, r5, r2, r1
 8019550:	1412      	asrs	r2, r2, #16
 8019552:	d402      	bmi.n	801955a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8019554:	42b2      	cmp	r2, r6
 8019556:	f2c0 80c7 	blt.w	80196e8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801955a:	2700      	movs	r7, #0
 801955c:	19da      	adds	r2, r3, r7
 801955e:	2a00      	cmp	r2, #0
 8019560:	dc3e      	bgt.n	80195e0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8019562:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019566:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801956a:	f1bb 0f00 	cmp.w	fp, #0
 801956e:	f340 8131 	ble.w	80197d4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8019572:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019576:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801957a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801957e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019580:	f1bb 0b01 	subs.w	fp, fp, #1
 8019584:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019588:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801958c:	eeb0 6a62 	vmov.f32	s12, s5
 8019590:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019594:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019598:	ee77 2a62 	vsub.f32	s5, s14, s5
 801959c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80195a0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80195a4:	eeb0 6a43 	vmov.f32	s12, s6
 80195a8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80195ac:	ee12 2a90 	vmov	r2, s5
 80195b0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80195b4:	fb92 f3f3 	sdiv	r3, r2, r3
 80195b8:	ee13 2a10 	vmov	r2, s6
 80195bc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80195c0:	9313      	str	r3, [sp, #76]	; 0x4c
 80195c2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80195c4:	fb92 f3f3 	sdiv	r3, r2, r3
 80195c8:	9a03      	ldr	r2, [sp, #12]
 80195ca:	9314      	str	r3, [sp, #80]	; 0x50
 80195cc:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80195d0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80195d2:	eeb0 3a67 	vmov.f32	s6, s15
 80195d6:	bf08      	it	eq
 80195d8:	4613      	moveq	r3, r2
 80195da:	eef0 2a47 	vmov.f32	s5, s14
 80195de:	e789      	b.n	80194f4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80195e0:	1405      	asrs	r5, r0, #16
 80195e2:	d435      	bmi.n	8019650 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80195e4:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80195e8:	42aa      	cmp	r2, r5
 80195ea:	dd31      	ble.n	8019650 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80195ec:	140e      	asrs	r6, r1, #16
 80195ee:	d42f      	bmi.n	8019650 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80195f0:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80195f4:	42b2      	cmp	r2, r6
 80195f6:	dd2b      	ble.n	8019650 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80195f8:	9a00      	ldr	r2, [sp, #0]
 80195fa:	fb06 5502 	mla	r5, r6, r2, r5
 80195fe:	086a      	lsrs	r2, r5, #1
 8019600:	9e01      	ldr	r6, [sp, #4]
 8019602:	5cb2      	ldrb	r2, [r6, r2]
 8019604:	07ee      	lsls	r6, r5, #31
 8019606:	bf54      	ite	pl
 8019608:	f002 020f 	andpl.w	r2, r2, #15
 801960c:	1112      	asrmi	r2, r2, #4
 801960e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8019612:	b2d2      	uxtb	r2, r2
 8019614:	b1e2      	cbz	r2, 8019650 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019616:	9d04      	ldr	r5, [sp, #16]
 8019618:	436a      	muls	r2, r5
 801961a:	1c55      	adds	r5, r2, #1
 801961c:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8019620:	4d6e      	ldr	r5, [pc, #440]	; (80197dc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8019622:	682d      	ldr	r5, [r5, #0]
 8019624:	1212      	asrs	r2, r2, #8
 8019626:	0a2e      	lsrs	r6, r5, #8
 8019628:	2aff      	cmp	r2, #255	; 0xff
 801962a:	9605      	str	r6, [sp, #20]
 801962c:	d116      	bne.n	801965c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801962e:	f06f 0201 	mvn.w	r2, #1
 8019632:	fb02 fc07 	mul.w	ip, r2, r7
 8019636:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801963a:	096a      	lsrs	r2, r5, #5
 801963c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019640:	f026 0607 	bic.w	r6, r6, #7
 8019644:	4316      	orrs	r6, r2
 8019646:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801964a:	432e      	orrs	r6, r5
 801964c:	f824 600c 	strh.w	r6, [r4, ip]
 8019650:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019652:	4410      	add	r0, r2
 8019654:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019656:	3f01      	subs	r7, #1
 8019658:	4411      	add	r1, r2
 801965a:	e77f      	b.n	801955c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801965c:	f06f 0601 	mvn.w	r6, #1
 8019660:	437e      	muls	r6, r7
 8019662:	fa1f fa82 	uxth.w	sl, r2
 8019666:	f834 8006 	ldrh.w	r8, [r4, r6]
 801966a:	9602      	str	r6, [sp, #8]
 801966c:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8019670:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8019674:	43d2      	mvns	r2, r2
 8019676:	b2d2      	uxtb	r2, r2
 8019678:	fb1c fc0a 	smulbb	ip, ip, sl
 801967c:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8019680:	fb0e ce02 	mla	lr, lr, r2, ip
 8019684:	b2ed      	uxtb	r5, r5
 8019686:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801968a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801968e:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8019692:	fa5f f888 	uxtb.w	r8, r8
 8019696:	fb15 f50a 	smulbb	r5, r5, sl
 801969a:	fb08 5502 	mla	r5, r8, r2, r5
 801969e:	fa1f fe8e 	uxth.w	lr, lr
 80196a2:	fb16 f60a 	smulbb	r6, r6, sl
 80196a6:	b2ad      	uxth	r5, r5
 80196a8:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80196ac:	fb0c 6c02 	mla	ip, ip, r2, r6
 80196b0:	f10e 0201 	add.w	r2, lr, #1
 80196b4:	1c6e      	adds	r6, r5, #1
 80196b6:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 80196ba:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 80196be:	fa1f fc8c 	uxth.w	ip, ip
 80196c2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80196c6:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 80196ca:	ea46 0e0e 	orr.w	lr, r6, lr
 80196ce:	f10c 0601 	add.w	r6, ip, #1
 80196d2:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 80196d6:	0976      	lsrs	r6, r6, #5
 80196d8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80196dc:	9a02      	ldr	r2, [sp, #8]
 80196de:	ea4e 0e06 	orr.w	lr, lr, r6
 80196e2:	f824 e002 	strh.w	lr, [r4, r2]
 80196e6:	e7b3      	b.n	8019650 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80196e8:	f04f 0800 	mov.w	r8, #0
 80196ec:	eba3 0208 	sub.w	r2, r3, r8
 80196f0:	2a00      	cmp	r2, #0
 80196f2:	f77f af36 	ble.w	8019562 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80196f6:	9e00      	ldr	r6, [sp, #0]
 80196f8:	1402      	asrs	r2, r0, #16
 80196fa:	140d      	asrs	r5, r1, #16
 80196fc:	fb06 2505 	mla	r5, r6, r5, r2
 8019700:	086a      	lsrs	r2, r5, #1
 8019702:	9e01      	ldr	r6, [sp, #4]
 8019704:	5cb2      	ldrb	r2, [r6, r2]
 8019706:	07ed      	lsls	r5, r5, #31
 8019708:	bf54      	ite	pl
 801970a:	f002 020f 	andpl.w	r2, r2, #15
 801970e:	1112      	asrmi	r2, r2, #4
 8019710:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8019714:	b2d2      	uxtb	r2, r2
 8019716:	b1c2      	cbz	r2, 801974a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8019718:	9d04      	ldr	r5, [sp, #16]
 801971a:	436a      	muls	r2, r5
 801971c:	1c55      	adds	r5, r2, #1
 801971e:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8019722:	4d2e      	ldr	r5, [pc, #184]	; (80197dc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8019724:	1212      	asrs	r2, r2, #8
 8019726:	682e      	ldr	r6, [r5, #0]
 8019728:	2aff      	cmp	r2, #255	; 0xff
 801972a:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801972e:	d113      	bne.n	8019758 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8019730:	0972      	lsrs	r2, r6, #5
 8019732:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 8019736:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801973a:	f025 0507 	bic.w	r5, r5, #7
 801973e:	4315      	orrs	r5, r2
 8019740:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8019744:	4335      	orrs	r5, r6
 8019746:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801974a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801974c:	4410      	add	r0, r2
 801974e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019750:	f108 0801 	add.w	r8, r8, #1
 8019754:	4411      	add	r1, r2
 8019756:	e7c9      	b.n	80196ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019758:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801975c:	fa1f fa82 	uxth.w	sl, r2
 8019760:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8019764:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8019768:	43d2      	mvns	r2, r2
 801976a:	b2d2      	uxtb	r2, r2
 801976c:	fb17 f70a 	smulbb	r7, r7, sl
 8019770:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019774:	fb0c 7c02 	mla	ip, ip, r2, r7
 8019778:	b2f6      	uxtb	r6, r6
 801977a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801977e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019782:	fa5f fe8e 	uxtb.w	lr, lr
 8019786:	fb16 f60a 	smulbb	r6, r6, sl
 801978a:	fb0e 6602 	mla	r6, lr, r2, r6
 801978e:	b2ed      	uxtb	r5, r5
 8019790:	fa1f fc8c 	uxth.w	ip, ip
 8019794:	fb15 f50a 	smulbb	r5, r5, sl
 8019798:	b2b6      	uxth	r6, r6
 801979a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801979e:	fb07 5702 	mla	r7, r7, r2, r5
 80197a2:	f10c 0201 	add.w	r2, ip, #1
 80197a6:	1c75      	adds	r5, r6, #1
 80197a8:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80197ac:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 80197b0:	b2bf      	uxth	r7, r7
 80197b2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80197b6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80197ba:	ea45 0c0c 	orr.w	ip, r5, ip
 80197be:	1c7d      	adds	r5, r7, #1
 80197c0:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 80197c4:	096d      	lsrs	r5, r5, #5
 80197c6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80197ca:	ea4c 0c05 	orr.w	ip, ip, r5
 80197ce:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 80197d2:	e7ba      	b.n	801974a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 80197d4:	b007      	add	sp, #28
 80197d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80197da:	bf00      	nop
 80197dc:	200137cc 	.word	0x200137cc

080197e0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80197e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80197e4:	b087      	sub	sp, #28
 80197e6:	f8df 830c 	ldr.w	r8, [pc, #780]	; 8019af4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 80197ea:	9815      	ldr	r0, [sp, #84]	; 0x54
 80197ec:	9205      	str	r2, [sp, #20]
 80197ee:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80197f2:	9101      	str	r1, [sp, #4]
 80197f4:	6841      	ldr	r1, [r0, #4]
 80197f6:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 80197fa:	fb01 2404 	mla	r4, r1, r4, r2
 80197fe:	6802      	ldr	r2, [r0, #0]
 8019800:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019804:	f8db 2008 	ldr.w	r2, [fp, #8]
 8019808:	3201      	adds	r2, #1
 801980a:	f022 0201 	bic.w	r2, r2, #1
 801980e:	9202      	str	r2, [sp, #8]
 8019810:	f8db 2000 	ldr.w	r2, [fp]
 8019814:	9203      	str	r2, [sp, #12]
 8019816:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801981a:	9a01      	ldr	r2, [sp, #4]
 801981c:	2a00      	cmp	r2, #0
 801981e:	dc03      	bgt.n	8019828 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8019820:	9a05      	ldr	r2, [sp, #20]
 8019822:	2a00      	cmp	r2, #0
 8019824:	f340 8162 	ble.w	8019aec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8019828:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801982a:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801982e:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8019832:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019836:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019838:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801983c:	2b00      	cmp	r3, #0
 801983e:	dd0e      	ble.n	801985e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019840:	1402      	asrs	r2, r0, #16
 8019842:	d405      	bmi.n	8019850 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019844:	42ba      	cmp	r2, r7
 8019846:	da03      	bge.n	8019850 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019848:	140a      	asrs	r2, r1, #16
 801984a:	d401      	bmi.n	8019850 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801984c:	42b2      	cmp	r2, r6
 801984e:	db07      	blt.n	8019860 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8019850:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019852:	4410      	add	r0, r2
 8019854:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019856:	3b01      	subs	r3, #1
 8019858:	4411      	add	r1, r2
 801985a:	3402      	adds	r4, #2
 801985c:	e7ee      	b.n	801983c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801985e:	d017      	beq.n	8019890 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8019860:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019862:	1e5a      	subs	r2, r3, #1
 8019864:	fb05 0502 	mla	r5, r5, r2, r0
 8019868:	142d      	asrs	r5, r5, #16
 801986a:	d409      	bmi.n	8019880 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801986c:	42bd      	cmp	r5, r7
 801986e:	da07      	bge.n	8019880 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019870:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019872:	fb05 1202 	mla	r2, r5, r2, r1
 8019876:	1412      	asrs	r2, r2, #16
 8019878:	d402      	bmi.n	8019880 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801987a:	42b2      	cmp	r2, r6
 801987c:	f2c0 80c3 	blt.w	8019a06 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8019880:	2500      	movs	r5, #0
 8019882:	195a      	adds	r2, r3, r5
 8019884:	2a00      	cmp	r2, #0
 8019886:	dc3f      	bgt.n	8019908 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8019888:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801988c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019890:	9b01      	ldr	r3, [sp, #4]
 8019892:	2b00      	cmp	r3, #0
 8019894:	f340 812a 	ble.w	8019aec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8019898:	ee30 0a04 	vadd.f32	s0, s0, s8
 801989c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80198a0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80198a4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80198a6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80198aa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80198ae:	eeb0 6a62 	vmov.f32	s12, s5
 80198b2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80198b6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80198ba:	ee77 2a62 	vsub.f32	s5, s14, s5
 80198be:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80198c2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80198c6:	eeb0 6a43 	vmov.f32	s12, s6
 80198ca:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80198ce:	ee12 2a90 	vmov	r2, s5
 80198d2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80198d6:	fb92 f3f3 	sdiv	r3, r2, r3
 80198da:	ee13 2a10 	vmov	r2, s6
 80198de:	9313      	str	r3, [sp, #76]	; 0x4c
 80198e0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80198e2:	fb92 f3f3 	sdiv	r3, r2, r3
 80198e6:	9314      	str	r3, [sp, #80]	; 0x50
 80198e8:	9b01      	ldr	r3, [sp, #4]
 80198ea:	9a05      	ldr	r2, [sp, #20]
 80198ec:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80198f0:	3b01      	subs	r3, #1
 80198f2:	9301      	str	r3, [sp, #4]
 80198f4:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80198f8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80198fa:	eeb0 3a67 	vmov.f32	s6, s15
 80198fe:	bf08      	it	eq
 8019900:	4613      	moveq	r3, r2
 8019902:	eef0 2a47 	vmov.f32	s5, s14
 8019906:	e788      	b.n	801981a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8019908:	1406      	asrs	r6, r0, #16
 801990a:	d42c      	bmi.n	8019966 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801990c:	f8db 2008 	ldr.w	r2, [fp, #8]
 8019910:	42b2      	cmp	r2, r6
 8019912:	dd28      	ble.n	8019966 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019914:	140f      	asrs	r7, r1, #16
 8019916:	d426      	bmi.n	8019966 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019918:	f8db 200c 	ldr.w	r2, [fp, #12]
 801991c:	42ba      	cmp	r2, r7
 801991e:	dd22      	ble.n	8019966 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019920:	9a02      	ldr	r2, [sp, #8]
 8019922:	fb07 6602 	mla	r6, r7, r2, r6
 8019926:	0872      	lsrs	r2, r6, #1
 8019928:	9f03      	ldr	r7, [sp, #12]
 801992a:	5cba      	ldrb	r2, [r7, r2]
 801992c:	07f6      	lsls	r6, r6, #31
 801992e:	bf54      	ite	pl
 8019930:	f002 020f 	andpl.w	r2, r2, #15
 8019934:	1112      	asrmi	r2, r2, #4
 8019936:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801993a:	b2d2      	uxtb	r2, r2
 801993c:	2aff      	cmp	r2, #255	; 0xff
 801993e:	d118      	bne.n	8019972 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8019940:	f8d8 2000 	ldr.w	r2, [r8]
 8019944:	f06f 0601 	mvn.w	r6, #1
 8019948:	fb06 f705 	mul.w	r7, r6, r5
 801994c:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 8019950:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8019954:	0956      	lsrs	r6, r2, #5
 8019956:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801995a:	ea4c 0606 	orr.w	r6, ip, r6
 801995e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8019962:	4316      	orrs	r6, r2
 8019964:	53e6      	strh	r6, [r4, r7]
 8019966:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019968:	4410      	add	r0, r2
 801996a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801996c:	3d01      	subs	r5, #1
 801996e:	4411      	add	r1, r2
 8019970:	e787      	b.n	8019882 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8019972:	2a00      	cmp	r2, #0
 8019974:	d0f7      	beq.n	8019966 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019976:	f06f 0601 	mvn.w	r6, #1
 801997a:	436e      	muls	r6, r5
 801997c:	f8d8 c000 	ldr.w	ip, [r8]
 8019980:	f834 e006 	ldrh.w	lr, [r4, r6]
 8019984:	9604      	str	r6, [sp, #16]
 8019986:	fa1f f982 	uxth.w	r9, r2
 801998a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801998e:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8019992:	43d2      	mvns	r2, r2
 8019994:	b2d2      	uxtb	r2, r2
 8019996:	fb16 f609 	smulbb	r6, r6, r9
 801999a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801999e:	fb07 6702 	mla	r7, r7, r2, r6
 80199a2:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 80199a6:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80199aa:	fa5f fc8c 	uxtb.w	ip, ip
 80199ae:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80199b2:	fa5f fe8e 	uxtb.w	lr, lr
 80199b6:	fb1c fc09 	smulbb	ip, ip, r9
 80199ba:	fb0e cc02 	mla	ip, lr, r2, ip
 80199be:	b2bf      	uxth	r7, r7
 80199c0:	fb1a fa09 	smulbb	sl, sl, r9
 80199c4:	fa1f fc8c 	uxth.w	ip, ip
 80199c8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80199cc:	fb06 a602 	mla	r6, r6, r2, sl
 80199d0:	1c7a      	adds	r2, r7, #1
 80199d2:	f10c 0a01 	add.w	sl, ip, #1
 80199d6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80199da:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 80199de:	b2b6      	uxth	r6, r6
 80199e0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80199e4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80199e8:	ea4a 0707 	orr.w	r7, sl, r7
 80199ec:	f106 0a01 	add.w	sl, r6, #1
 80199f0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80199f4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80199f8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80199fc:	9a04      	ldr	r2, [sp, #16]
 80199fe:	ea47 070a 	orr.w	r7, r7, sl
 8019a02:	52a7      	strh	r7, [r4, r2]
 8019a04:	e7af      	b.n	8019966 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019a06:	f04f 0e00 	mov.w	lr, #0
 8019a0a:	eba3 020e 	sub.w	r2, r3, lr
 8019a0e:	2a00      	cmp	r2, #0
 8019a10:	f77f af3a 	ble.w	8019888 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8019a14:	9e02      	ldr	r6, [sp, #8]
 8019a16:	1402      	asrs	r2, r0, #16
 8019a18:	140d      	asrs	r5, r1, #16
 8019a1a:	fb06 2505 	mla	r5, r6, r5, r2
 8019a1e:	086a      	lsrs	r2, r5, #1
 8019a20:	9e03      	ldr	r6, [sp, #12]
 8019a22:	5cb2      	ldrb	r2, [r6, r2]
 8019a24:	07ed      	lsls	r5, r5, #31
 8019a26:	bf54      	ite	pl
 8019a28:	f002 020f 	andpl.w	r2, r2, #15
 8019a2c:	1112      	asrmi	r2, r2, #4
 8019a2e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8019a32:	b2d2      	uxtb	r2, r2
 8019a34:	2aff      	cmp	r2, #255	; 0xff
 8019a36:	d115      	bne.n	8019a64 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8019a38:	f8d8 5000 	ldr.w	r5, [r8]
 8019a3c:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 8019a40:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8019a44:	096a      	lsrs	r2, r5, #5
 8019a46:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019a4a:	4332      	orrs	r2, r6
 8019a4c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8019a50:	432a      	orrs	r2, r5
 8019a52:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8019a56:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019a58:	4410      	add	r0, r2
 8019a5a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019a5c:	f10e 0e01 	add.w	lr, lr, #1
 8019a60:	4411      	add	r1, r2
 8019a62:	e7d2      	b.n	8019a0a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8019a64:	2a00      	cmp	r2, #0
 8019a66:	d0f6      	beq.n	8019a56 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8019a68:	f8d8 7000 	ldr.w	r7, [r8]
 8019a6c:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8019a70:	fa1f f982 	uxth.w	r9, r2
 8019a74:	ea4f 262c 	mov.w	r6, ip, asr #8
 8019a78:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8019a7c:	43d2      	mvns	r2, r2
 8019a7e:	b2d2      	uxtb	r2, r2
 8019a80:	fb15 f509 	smulbb	r5, r5, r9
 8019a84:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019a88:	fb06 5602 	mla	r6, r6, r2, r5
 8019a8c:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8019a90:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8019a94:	b2ff      	uxtb	r7, r7
 8019a96:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019a9a:	fa5f fc8c 	uxtb.w	ip, ip
 8019a9e:	fb17 f709 	smulbb	r7, r7, r9
 8019aa2:	fb0c 7702 	mla	r7, ip, r2, r7
 8019aa6:	b2b6      	uxth	r6, r6
 8019aa8:	fb1a fa09 	smulbb	sl, sl, r9
 8019aac:	b2bf      	uxth	r7, r7
 8019aae:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8019ab2:	fb05 a502 	mla	r5, r5, r2, sl
 8019ab6:	1c72      	adds	r2, r6, #1
 8019ab8:	f107 0a01 	add.w	sl, r7, #1
 8019abc:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8019ac0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8019ac4:	b2ad      	uxth	r5, r5
 8019ac6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019aca:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8019ace:	ea4a 0606 	orr.w	r6, sl, r6
 8019ad2:	f105 0a01 	add.w	sl, r5, #1
 8019ad6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019ada:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019ade:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019ae2:	ea46 060a 	orr.w	r6, r6, sl
 8019ae6:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8019aea:	e7b4      	b.n	8019a56 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8019aec:	b007      	add	sp, #28
 8019aee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019af2:	bf00      	nop
 8019af4:	200137cc 	.word	0x200137cc

08019af8 <_ZN8touchgfx8LCD16bppD1Ev>:
 8019af8:	4770      	bx	lr

08019afa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 8019afa:	4770      	bx	lr

08019afc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 8019afc:	4770      	bx	lr

08019afe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 8019afe:	4770      	bx	lr

08019b00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8019b00:	4770      	bx	lr

08019b02 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8019b02:	4770      	bx	lr

08019b04 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8019b04:	4770      	bx	lr

08019b06 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8019b06:	4770      	bx	lr

08019b08 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8019b08:	4770      	bx	lr

08019b0a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8019b0a:	4770      	bx	lr

08019b0c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8019b0c:	4770      	bx	lr

08019b0e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8019b0e:	4770      	bx	lr

08019b10 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8019b10:	4770      	bx	lr

08019b12 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8019b12:	4770      	bx	lr

08019b14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8019b14:	4770      	bx	lr

08019b16 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8019b16:	4770      	bx	lr

08019b18 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8019b18:	4770      	bx	lr

08019b1a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8019b1a:	4770      	bx	lr

08019b1c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8019b1c:	4770      	bx	lr

08019b1e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8019b1e:	4770      	bx	lr

08019b20 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8019b20:	4770      	bx	lr

08019b22 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8019b22:	4770      	bx	lr

08019b24 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8019b24:	4770      	bx	lr

08019b26 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8019b26:	4770      	bx	lr

08019b28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8019b28:	4770      	bx	lr

08019b2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8019b2a:	4770      	bx	lr

08019b2c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8019b2c:	4770      	bx	lr

08019b2e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8019b2e:	4770      	bx	lr

08019b30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8019b30:	4770      	bx	lr

08019b32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8019b32:	4770      	bx	lr

08019b34 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8019b34:	4770      	bx	lr

08019b36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8019b36:	4770      	bx	lr

08019b38 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8019b38:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019b3c:	b088      	sub	sp, #32
 8019b3e:	ac08      	add	r4, sp, #32
 8019b40:	4606      	mov	r6, r0
 8019b42:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8019b46:	4620      	mov	r0, r4
 8019b48:	4688      	mov	r8, r1
 8019b4a:	4691      	mov	r9, r2
 8019b4c:	f7fd fc62 	bl	8017414 <_ZNK8touchgfx6Bitmap7getDataEv>
 8019b50:	6833      	ldr	r3, [r6, #0]
 8019b52:	4605      	mov	r5, r0
 8019b54:	4620      	mov	r0, r4
 8019b56:	699f      	ldr	r7, [r3, #24]
 8019b58:	f7fd fb70 	bl	801723c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8019b5c:	4682      	mov	sl, r0
 8019b5e:	4620      	mov	r0, r4
 8019b60:	f7fd fba0 	bl	80172a4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8019b64:	9500      	str	r5, [sp, #0]
 8019b66:	e9cd a001 	strd	sl, r0, [sp, #4]
 8019b6a:	464b      	mov	r3, r9
 8019b6c:	a806      	add	r0, sp, #24
 8019b6e:	4642      	mov	r2, r8
 8019b70:	4631      	mov	r1, r6
 8019b72:	47b8      	blx	r7
 8019b74:	4628      	mov	r0, r5
 8019b76:	b008      	add	sp, #32
 8019b78:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08019b7c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8019b7c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8019b80:	2300      	movs	r3, #0
 8019b82:	9300      	str	r3, [sp, #0]
 8019b84:	4b3d      	ldr	r3, [pc, #244]	; (8019c7c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8019b86:	781b      	ldrb	r3, [r3, #0]
 8019b88:	2b00      	cmp	r3, #0
 8019b8a:	d137      	bne.n	8019bfc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8019b8c:	4a3c      	ldr	r2, [pc, #240]	; (8019c80 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8019b8e:	f9b2 2000 	ldrsh.w	r2, [r2]
 8019b92:	f8ad 2004 	strh.w	r2, [sp, #4]
 8019b96:	2b00      	cmp	r3, #0
 8019b98:	d132      	bne.n	8019c00 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8019b9a:	4b3a      	ldr	r3, [pc, #232]	; (8019c84 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8019b9c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8019ba0:	6808      	ldr	r0, [r1, #0]
 8019ba2:	6849      	ldr	r1, [r1, #4]
 8019ba4:	f8ad 3006 	strh.w	r3, [sp, #6]
 8019ba8:	ac02      	add	r4, sp, #8
 8019baa:	ab02      	add	r3, sp, #8
 8019bac:	c303      	stmia	r3!, {r0, r1}
 8019bae:	4669      	mov	r1, sp
 8019bb0:	4620      	mov	r0, r4
 8019bb2:	f7f9 ffb5 	bl	8013b20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019bb6:	4668      	mov	r0, sp
 8019bb8:	f7f9 ff6e 	bl	8013a98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019bbc:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8019bc0:	f8bd 2000 	ldrh.w	r2, [sp]
 8019bc4:	4d30      	ldr	r5, [pc, #192]	; (8019c88 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8019bc6:	4413      	add	r3, r2
 8019bc8:	f8ad 3008 	strh.w	r3, [sp, #8]
 8019bcc:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8019bd0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8019bd4:	6828      	ldr	r0, [r5, #0]
 8019bd6:	4413      	add	r3, r2
 8019bd8:	f8ad 300a 	strh.w	r3, [sp, #10]
 8019bdc:	6803      	ldr	r3, [r0, #0]
 8019bde:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8019be0:	4798      	blx	r3
 8019be2:	f010 0f01 	tst.w	r0, #1
 8019be6:	462f      	mov	r7, r5
 8019be8:	d00c      	beq.n	8019c04 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8019bea:	6828      	ldr	r0, [r5, #0]
 8019bec:	6803      	ldr	r3, [r0, #0]
 8019bee:	e894 0006 	ldmia.w	r4, {r1, r2}
 8019bf2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8019bf4:	4798      	blx	r3
 8019bf6:	b004      	add	sp, #16
 8019bf8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019bfc:	4a21      	ldr	r2, [pc, #132]	; (8019c84 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8019bfe:	e7c6      	b.n	8019b8e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8019c00:	4b1f      	ldr	r3, [pc, #124]	; (8019c80 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8019c02:	e7cb      	b.n	8019b9c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8019c04:	6838      	ldr	r0, [r7, #0]
 8019c06:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8019c0a:	6803      	ldr	r3, [r0, #0]
 8019c0c:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8019c10:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8019c12:	4798      	blx	r3
 8019c14:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8019c18:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8019c1c:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8019c20:	fb16 3602 	smlabb	r6, r6, r2, r3
 8019c24:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8019c28:	6838      	ldr	r0, [r7, #0]
 8019c2a:	6803      	ldr	r3, [r0, #0]
 8019c2c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8019c2e:	4798      	blx	r3
 8019c30:	4a13      	ldr	r2, [pc, #76]	; (8019c80 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8019c32:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8019c36:	8813      	ldrh	r3, [r2, #0]
 8019c38:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8019c3c:	fb03 1404 	mla	r4, r3, r4, r1
 8019c40:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8019c44:	435d      	muls	r5, r3
 8019c46:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8019c4a:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8019c4e:	4691      	mov	r9, r2
 8019c50:	6838      	ldr	r0, [r7, #0]
 8019c52:	42ac      	cmp	r4, r5
 8019c54:	6803      	ldr	r3, [r0, #0]
 8019c56:	d20e      	bcs.n	8019c76 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8019c58:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 8019c5c:	4632      	mov	r2, r6
 8019c5e:	4643      	mov	r3, r8
 8019c60:	4621      	mov	r1, r4
 8019c62:	47d0      	blx	sl
 8019c64:	f8b9 3000 	ldrh.w	r3, [r9]
 8019c68:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019c6c:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8019c70:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8019c74:	e7ec      	b.n	8019c50 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8019c76:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019c78:	4798      	blx	r3
 8019c7a:	e7bc      	b.n	8019bf6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8019c7c:	200137b4 	.word	0x200137b4
 8019c80:	200137b6 	.word	0x200137b6
 8019c84:	200137b8 	.word	0x200137b8
 8019c88:	200137bc 	.word	0x200137bc

08019c8c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8019c8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019c90:	b08b      	sub	sp, #44	; 0x2c
 8019c92:	460f      	mov	r7, r1
 8019c94:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 8019c98:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 8019c9c:	4616      	mov	r6, r2
 8019c9e:	f1bb 0f00 	cmp.w	fp, #0
 8019ca2:	d04a      	beq.n	8019d3a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8019ca4:	6810      	ldr	r0, [r2, #0]
 8019ca6:	6851      	ldr	r1, [r2, #4]
 8019ca8:	ad06      	add	r5, sp, #24
 8019caa:	c503      	stmia	r5!, {r0, r1}
 8019cac:	6818      	ldr	r0, [r3, #0]
 8019cae:	6859      	ldr	r1, [r3, #4]
 8019cb0:	ad08      	add	r5, sp, #32
 8019cb2:	c503      	stmia	r5!, {r0, r1}
 8019cb4:	a806      	add	r0, sp, #24
 8019cb6:	f7f9 feef 	bl	8013a98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019cba:	4631      	mov	r1, r6
 8019cbc:	a808      	add	r0, sp, #32
 8019cbe:	f7f9 ff2f 	bl	8013b20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019cc2:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8019cc6:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8019cca:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8019cce:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8019cd2:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8019cd6:	fb16 2103 	smlabb	r1, r6, r3, r2
 8019cda:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8019cde:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8019ce2:	4f5f      	ldr	r7, [pc, #380]	; (8019e60 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8019ce4:	440a      	add	r2, r1
 8019ce6:	f8ad 2020 	strh.w	r2, [sp, #32]
 8019cea:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8019cee:	6838      	ldr	r0, [r7, #0]
 8019cf0:	4413      	add	r3, r2
 8019cf2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8019cf6:	6803      	ldr	r3, [r0, #0]
 8019cf8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8019cfa:	4798      	blx	r3
 8019cfc:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8019d00:	46b9      	mov	r9, r7
 8019d02:	d11d      	bne.n	8019d40 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8019d04:	b9fc      	cbnz	r4, 8019d46 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8019d06:	f010 0f01 	tst.w	r0, #1
 8019d0a:	d01c      	beq.n	8019d46 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8019d0c:	f8d9 0000 	ldr.w	r0, [r9]
 8019d10:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8019d14:	6801      	ldr	r1, [r0, #0]
 8019d16:	f8cd b00c 	str.w	fp, [sp, #12]
 8019d1a:	2700      	movs	r7, #0
 8019d1c:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8019d20:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8019d24:	9402      	str	r4, [sp, #8]
 8019d26:	b2ad      	uxth	r5, r5
 8019d28:	fa1f f488 	uxth.w	r4, r8
 8019d2c:	9501      	str	r5, [sp, #4]
 8019d2e:	9400      	str	r4, [sp, #0]
 8019d30:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 8019d32:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8019d36:	4631      	mov	r1, r6
 8019d38:	47a0      	blx	r4
 8019d3a:	b00b      	add	sp, #44	; 0x2c
 8019d3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019d40:	f010 0f04 	tst.w	r0, #4
 8019d44:	e7e1      	b.n	8019d0a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 8019d46:	f8d9 0000 	ldr.w	r0, [r9]
 8019d4a:	6803      	ldr	r3, [r0, #0]
 8019d4c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8019d4e:	4798      	blx	r3
 8019d50:	4b44      	ldr	r3, [pc, #272]	; (8019e64 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8019d52:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 8019d56:	881a      	ldrh	r2, [r3, #0]
 8019d58:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8019d5c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8019d60:	fb02 1404 	mla	r4, r2, r4, r1
 8019d64:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8019d68:	469a      	mov	sl, r3
 8019d6a:	fb05 f502 	mul.w	r5, r5, r2
 8019d6e:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8019d72:	d059      	beq.n	8019e28 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8019d74:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 8019d78:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8019d7c:	fa1f f28b 	uxth.w	r2, fp
 8019d80:	fa1f f989 	uxth.w	r9, r9
 8019d84:	469e      	mov	lr, r3
 8019d86:	42ac      	cmp	r4, r5
 8019d88:	d264      	bcs.n	8019e54 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8019d8a:	eb04 0a07 	add.w	sl, r4, r7
 8019d8e:	4554      	cmp	r4, sl
 8019d90:	d23d      	bcs.n	8019e0e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8019d92:	8821      	ldrh	r1, [r4, #0]
 8019d94:	f836 3b02 	ldrh.w	r3, [r6], #2
 8019d98:	1208      	asrs	r0, r1, #8
 8019d9a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8019d9e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019da2:	fb10 f009 	smulbb	r0, r0, r9
 8019da6:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8019daa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019dae:	00c9      	lsls	r1, r1, #3
 8019db0:	fb0c 0c02 	mla	ip, ip, r2, r0
 8019db4:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8019db8:	10d8      	asrs	r0, r3, #3
 8019dba:	b2c9      	uxtb	r1, r1
 8019dbc:	00db      	lsls	r3, r3, #3
 8019dbe:	fa1f fc8c 	uxth.w	ip, ip
 8019dc2:	fb1b fb09 	smulbb	fp, fp, r9
 8019dc6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8019dca:	b2db      	uxtb	r3, r3
 8019dcc:	fb11 f109 	smulbb	r1, r1, r9
 8019dd0:	fb00 b002 	mla	r0, r0, r2, fp
 8019dd4:	fb03 1302 	mla	r3, r3, r2, r1
 8019dd8:	f10c 0b01 	add.w	fp, ip, #1
 8019ddc:	b29b      	uxth	r3, r3
 8019dde:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8019de2:	b280      	uxth	r0, r0
 8019de4:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8019de8:	f103 0c01 	add.w	ip, r3, #1
 8019dec:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8019df0:	1c43      	adds	r3, r0, #1
 8019df2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8019df6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8019dfa:	0940      	lsrs	r0, r0, #5
 8019dfc:	ea4c 0c0b 	orr.w	ip, ip, fp
 8019e00:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019e04:	ea4c 0c00 	orr.w	ip, ip, r0
 8019e08:	f824 cb02 	strh.w	ip, [r4], #2
 8019e0c:	e7bf      	b.n	8019d8e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 8019e0e:	f8be 3000 	ldrh.w	r3, [lr]
 8019e12:	eba3 0308 	sub.w	r3, r3, r8
 8019e16:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019e1a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8019e1e:	eba3 0308 	sub.w	r3, r3, r8
 8019e22:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8019e26:	e7ae      	b.n	8019d86 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8019e28:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8019e2c:	f8d9 0000 	ldr.w	r0, [r9]
 8019e30:	42ac      	cmp	r4, r5
 8019e32:	6803      	ldr	r3, [r0, #0]
 8019e34:	d20e      	bcs.n	8019e54 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8019e36:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 8019e3a:	4632      	mov	r2, r6
 8019e3c:	463b      	mov	r3, r7
 8019e3e:	4621      	mov	r1, r4
 8019e40:	47c0      	blx	r8
 8019e42:	f8ba 3000 	ldrh.w	r3, [sl]
 8019e46:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019e4a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8019e4e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8019e52:	e7eb      	b.n	8019e2c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8019e54:	4b02      	ldr	r3, [pc, #8]	; (8019e60 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8019e56:	6818      	ldr	r0, [r3, #0]
 8019e58:	6803      	ldr	r3, [r0, #0]
 8019e5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019e5c:	4798      	blx	r3
 8019e5e:	e76c      	b.n	8019d3a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8019e60:	200137bc 	.word	0x200137bc
 8019e64:	200137b6 	.word	0x200137b6

08019e68 <_ZN8touchgfx8LCD16bppD0Ev>:
 8019e68:	b510      	push	{r4, lr}
 8019e6a:	2184      	movs	r1, #132	; 0x84
 8019e6c:	4604      	mov	r4, r0
 8019e6e:	f00c fd26 	bl	80268be <_ZdlPvj>
 8019e72:	4620      	mov	r0, r4
 8019e74:	bd10      	pop	{r4, pc}

08019e76 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 8019e76:	b510      	push	{r4, lr}
 8019e78:	2104      	movs	r1, #4
 8019e7a:	4604      	mov	r4, r0
 8019e7c:	f00c fd1f 	bl	80268be <_ZdlPvj>
 8019e80:	4620      	mov	r0, r4
 8019e82:	bd10      	pop	{r4, pc}

08019e84 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 8019e84:	b510      	push	{r4, lr}
 8019e86:	2104      	movs	r1, #4
 8019e88:	4604      	mov	r4, r0
 8019e8a:	f00c fd18 	bl	80268be <_ZdlPvj>
 8019e8e:	4620      	mov	r0, r4
 8019e90:	bd10      	pop	{r4, pc}

08019e92 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 8019e92:	b510      	push	{r4, lr}
 8019e94:	f640 0144 	movw	r1, #2116	; 0x844
 8019e98:	4604      	mov	r4, r0
 8019e9a:	f00c fd10 	bl	80268be <_ZdlPvj>
 8019e9e:	4620      	mov	r0, r4
 8019ea0:	bd10      	pop	{r4, pc}

08019ea2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8019ea2:	b510      	push	{r4, lr}
 8019ea4:	2104      	movs	r1, #4
 8019ea6:	4604      	mov	r4, r0
 8019ea8:	f00c fd09 	bl	80268be <_ZdlPvj>
 8019eac:	4620      	mov	r0, r4
 8019eae:	bd10      	pop	{r4, pc}

08019eb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8019eb0:	b510      	push	{r4, lr}
 8019eb2:	2104      	movs	r1, #4
 8019eb4:	4604      	mov	r4, r0
 8019eb6:	f00c fd02 	bl	80268be <_ZdlPvj>
 8019eba:	4620      	mov	r0, r4
 8019ebc:	bd10      	pop	{r4, pc}

08019ebe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8019ebe:	b510      	push	{r4, lr}
 8019ec0:	2104      	movs	r1, #4
 8019ec2:	4604      	mov	r4, r0
 8019ec4:	f00c fcfb 	bl	80268be <_ZdlPvj>
 8019ec8:	4620      	mov	r0, r4
 8019eca:	bd10      	pop	{r4, pc}

08019ecc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8019ecc:	b510      	push	{r4, lr}
 8019ece:	2104      	movs	r1, #4
 8019ed0:	4604      	mov	r4, r0
 8019ed2:	f00c fcf4 	bl	80268be <_ZdlPvj>
 8019ed6:	4620      	mov	r0, r4
 8019ed8:	bd10      	pop	{r4, pc}

08019eda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8019eda:	b510      	push	{r4, lr}
 8019edc:	2104      	movs	r1, #4
 8019ede:	4604      	mov	r4, r0
 8019ee0:	f00c fced 	bl	80268be <_ZdlPvj>
 8019ee4:	4620      	mov	r0, r4
 8019ee6:	bd10      	pop	{r4, pc}

08019ee8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8019ee8:	b510      	push	{r4, lr}
 8019eea:	2104      	movs	r1, #4
 8019eec:	4604      	mov	r4, r0
 8019eee:	f00c fce6 	bl	80268be <_ZdlPvj>
 8019ef2:	4620      	mov	r0, r4
 8019ef4:	bd10      	pop	{r4, pc}

08019ef6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8019ef6:	b510      	push	{r4, lr}
 8019ef8:	2104      	movs	r1, #4
 8019efa:	4604      	mov	r4, r0
 8019efc:	f00c fcdf 	bl	80268be <_ZdlPvj>
 8019f00:	4620      	mov	r0, r4
 8019f02:	bd10      	pop	{r4, pc}

08019f04 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8019f04:	b510      	push	{r4, lr}
 8019f06:	2104      	movs	r1, #4
 8019f08:	4604      	mov	r4, r0
 8019f0a:	f00c fcd8 	bl	80268be <_ZdlPvj>
 8019f0e:	4620      	mov	r0, r4
 8019f10:	bd10      	pop	{r4, pc}

08019f12 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8019f12:	b510      	push	{r4, lr}
 8019f14:	2104      	movs	r1, #4
 8019f16:	4604      	mov	r4, r0
 8019f18:	f00c fcd1 	bl	80268be <_ZdlPvj>
 8019f1c:	4620      	mov	r0, r4
 8019f1e:	bd10      	pop	{r4, pc}

08019f20 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8019f20:	b510      	push	{r4, lr}
 8019f22:	2104      	movs	r1, #4
 8019f24:	4604      	mov	r4, r0
 8019f26:	f00c fcca 	bl	80268be <_ZdlPvj>
 8019f2a:	4620      	mov	r0, r4
 8019f2c:	bd10      	pop	{r4, pc}

08019f2e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8019f2e:	b510      	push	{r4, lr}
 8019f30:	2104      	movs	r1, #4
 8019f32:	4604      	mov	r4, r0
 8019f34:	f00c fcc3 	bl	80268be <_ZdlPvj>
 8019f38:	4620      	mov	r0, r4
 8019f3a:	bd10      	pop	{r4, pc}

08019f3c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8019f3c:	b510      	push	{r4, lr}
 8019f3e:	2104      	movs	r1, #4
 8019f40:	4604      	mov	r4, r0
 8019f42:	f00c fcbc 	bl	80268be <_ZdlPvj>
 8019f46:	4620      	mov	r0, r4
 8019f48:	bd10      	pop	{r4, pc}

08019f4a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8019f4a:	b510      	push	{r4, lr}
 8019f4c:	2104      	movs	r1, #4
 8019f4e:	4604      	mov	r4, r0
 8019f50:	f00c fcb5 	bl	80268be <_ZdlPvj>
 8019f54:	4620      	mov	r0, r4
 8019f56:	bd10      	pop	{r4, pc}

08019f58 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8019f58:	b510      	push	{r4, lr}
 8019f5a:	2104      	movs	r1, #4
 8019f5c:	4604      	mov	r4, r0
 8019f5e:	f00c fcae 	bl	80268be <_ZdlPvj>
 8019f62:	4620      	mov	r0, r4
 8019f64:	bd10      	pop	{r4, pc}

08019f66 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8019f66:	b510      	push	{r4, lr}
 8019f68:	2104      	movs	r1, #4
 8019f6a:	4604      	mov	r4, r0
 8019f6c:	f00c fca7 	bl	80268be <_ZdlPvj>
 8019f70:	4620      	mov	r0, r4
 8019f72:	bd10      	pop	{r4, pc}

08019f74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8019f74:	b510      	push	{r4, lr}
 8019f76:	2104      	movs	r1, #4
 8019f78:	4604      	mov	r4, r0
 8019f7a:	f00c fca0 	bl	80268be <_ZdlPvj>
 8019f7e:	4620      	mov	r0, r4
 8019f80:	bd10      	pop	{r4, pc}

08019f82 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8019f82:	b510      	push	{r4, lr}
 8019f84:	2104      	movs	r1, #4
 8019f86:	4604      	mov	r4, r0
 8019f88:	f00c fc99 	bl	80268be <_ZdlPvj>
 8019f8c:	4620      	mov	r0, r4
 8019f8e:	bd10      	pop	{r4, pc}

08019f90 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8019f90:	b510      	push	{r4, lr}
 8019f92:	2104      	movs	r1, #4
 8019f94:	4604      	mov	r4, r0
 8019f96:	f00c fc92 	bl	80268be <_ZdlPvj>
 8019f9a:	4620      	mov	r0, r4
 8019f9c:	bd10      	pop	{r4, pc}

08019f9e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8019f9e:	b510      	push	{r4, lr}
 8019fa0:	2104      	movs	r1, #4
 8019fa2:	4604      	mov	r4, r0
 8019fa4:	f00c fc8b 	bl	80268be <_ZdlPvj>
 8019fa8:	4620      	mov	r0, r4
 8019faa:	bd10      	pop	{r4, pc}

08019fac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8019fac:	b510      	push	{r4, lr}
 8019fae:	2104      	movs	r1, #4
 8019fb0:	4604      	mov	r4, r0
 8019fb2:	f00c fc84 	bl	80268be <_ZdlPvj>
 8019fb6:	4620      	mov	r0, r4
 8019fb8:	bd10      	pop	{r4, pc}

08019fba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8019fba:	b510      	push	{r4, lr}
 8019fbc:	2104      	movs	r1, #4
 8019fbe:	4604      	mov	r4, r0
 8019fc0:	f00c fc7d 	bl	80268be <_ZdlPvj>
 8019fc4:	4620      	mov	r0, r4
 8019fc6:	bd10      	pop	{r4, pc}

08019fc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8019fc8:	b510      	push	{r4, lr}
 8019fca:	2104      	movs	r1, #4
 8019fcc:	4604      	mov	r4, r0
 8019fce:	f00c fc76 	bl	80268be <_ZdlPvj>
 8019fd2:	4620      	mov	r0, r4
 8019fd4:	bd10      	pop	{r4, pc}

08019fd6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8019fd6:	b510      	push	{r4, lr}
 8019fd8:	2104      	movs	r1, #4
 8019fda:	4604      	mov	r4, r0
 8019fdc:	f00c fc6f 	bl	80268be <_ZdlPvj>
 8019fe0:	4620      	mov	r0, r4
 8019fe2:	bd10      	pop	{r4, pc}

08019fe4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8019fe4:	b510      	push	{r4, lr}
 8019fe6:	2104      	movs	r1, #4
 8019fe8:	4604      	mov	r4, r0
 8019fea:	f00c fc68 	bl	80268be <_ZdlPvj>
 8019fee:	4620      	mov	r0, r4
 8019ff0:	bd10      	pop	{r4, pc}

08019ff2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8019ff2:	b510      	push	{r4, lr}
 8019ff4:	2104      	movs	r1, #4
 8019ff6:	4604      	mov	r4, r0
 8019ff8:	f00c fc61 	bl	80268be <_ZdlPvj>
 8019ffc:	4620      	mov	r0, r4
 8019ffe:	bd10      	pop	{r4, pc}

0801a000 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801a000:	b510      	push	{r4, lr}
 801a002:	2104      	movs	r1, #4
 801a004:	4604      	mov	r4, r0
 801a006:	f00c fc5a 	bl	80268be <_ZdlPvj>
 801a00a:	4620      	mov	r0, r4
 801a00c:	bd10      	pop	{r4, pc}

0801a00e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801a00e:	b510      	push	{r4, lr}
 801a010:	2104      	movs	r1, #4
 801a012:	4604      	mov	r4, r0
 801a014:	f00c fc53 	bl	80268be <_ZdlPvj>
 801a018:	4620      	mov	r0, r4
 801a01a:	bd10      	pop	{r4, pc}

0801a01c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801a01c:	b510      	push	{r4, lr}
 801a01e:	2104      	movs	r1, #4
 801a020:	4604      	mov	r4, r0
 801a022:	f00c fc4c 	bl	80268be <_ZdlPvj>
 801a026:	4620      	mov	r0, r4
 801a028:	bd10      	pop	{r4, pc}
	...

0801a02c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801a02c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a030:	b08f      	sub	sp, #60	; 0x3c
 801a032:	461c      	mov	r4, r3
 801a034:	9205      	str	r2, [sp, #20]
 801a036:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a03a:	9100      	str	r1, [sp, #0]
 801a03c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a03e:	9201      	str	r2, [sp, #4]
 801a040:	2a00      	cmp	r2, #0
 801a042:	f000 8115 	beq.w	801a270 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801a046:	6820      	ldr	r0, [r4, #0]
 801a048:	6861      	ldr	r1, [r4, #4]
 801a04a:	aa0a      	add	r2, sp, #40	; 0x28
 801a04c:	c203      	stmia	r2!, {r0, r1}
 801a04e:	6818      	ldr	r0, [r3, #0]
 801a050:	6859      	ldr	r1, [r3, #4]
 801a052:	aa0c      	add	r2, sp, #48	; 0x30
 801a054:	c203      	stmia	r2!, {r0, r1}
 801a056:	a80a      	add	r0, sp, #40	; 0x28
 801a058:	f7f9 fd1e 	bl	8013a98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a05c:	4621      	mov	r1, r4
 801a05e:	a80c      	add	r0, sp, #48	; 0x30
 801a060:	f7f9 fd5e 	bl	8013b20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a064:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801a068:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801a06c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801a070:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801a074:	bfde      	ittt	le
 801a076:	b2b3      	uxthle	r3, r6
 801a078:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801a07c:	fb92 f3f3 	sdivle	r3, r2, r3
 801a080:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801a084:	bfc8      	it	gt
 801a086:	2301      	movgt	r3, #1
 801a088:	fb92 f1f3 	sdiv	r1, r2, r3
 801a08c:	fa1f fc81 	uxth.w	ip, r1
 801a090:	fb0c 2413 	mls	r4, ip, r3, r2
 801a094:	fb14 f406 	smulbb	r4, r4, r6
 801a098:	441d      	add	r5, r3
 801a09a:	4404      	add	r4, r0
 801a09c:	4661      	mov	r1, ip
 801a09e:	3d01      	subs	r5, #1
 801a0a0:	b2a4      	uxth	r4, r4
 801a0a2:	fb95 f5f3 	sdiv	r5, r5, r3
 801a0a6:	b131      	cbz	r1, 801a0b6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801a0a8:	9b05      	ldr	r3, [sp, #20]
 801a0aa:	9900      	ldr	r1, [sp, #0]
 801a0ac:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801a0b0:	ba1b      	rev	r3, r3
 801a0b2:	4419      	add	r1, r3
 801a0b4:	9100      	str	r1, [sp, #0]
 801a0b6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801a0ba:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801a0be:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801a0c2:	4418      	add	r0, r3
 801a0c4:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801a0c8:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801a0cc:	441a      	add	r2, r3
 801a0ce:	4b6a      	ldr	r3, [pc, #424]	; (801a278 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801a0d0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801a0d4:	6818      	ldr	r0, [r3, #0]
 801a0d6:	6803      	ldr	r3, [r0, #0]
 801a0d8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a0da:	4798      	blx	r3
 801a0dc:	4967      	ldr	r1, [pc, #412]	; (801a27c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801a0de:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801a0e2:	880b      	ldrh	r3, [r1, #0]
 801a0e4:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801a0e8:	9109      	str	r1, [sp, #36]	; 0x24
 801a0ea:	fb03 c202 	mla	r2, r3, r2, ip
 801a0ee:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801a0f2:	4373      	muls	r3, r6
 801a0f4:	b2ad      	uxth	r5, r5
 801a0f6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801a0fa:	00ad      	lsls	r5, r5, #2
 801a0fc:	9306      	str	r3, [sp, #24]
 801a0fe:	1d2b      	adds	r3, r5, #4
 801a100:	9307      	str	r3, [sp, #28]
 801a102:	9b01      	ldr	r3, [sp, #4]
 801a104:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801a108:	9103      	str	r1, [sp, #12]
 801a10a:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801a10e:	2c00      	cmp	r4, #0
 801a110:	bf0c      	ite	eq
 801a112:	46c6      	moveq	lr, r8
 801a114:	f04f 0e00 	movne.w	lr, #0
 801a118:	2300      	movs	r3, #0
 801a11a:	b292      	uxth	r2, r2
 801a11c:	fa1f fe8e 	uxth.w	lr, lr
 801a120:	9302      	str	r3, [sp, #8]
 801a122:	9204      	str	r2, [sp, #16]
 801a124:	9a06      	ldr	r2, [sp, #24]
 801a126:	4282      	cmp	r2, r0
 801a128:	f240 809d 	bls.w	801a266 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801a12c:	b963      	cbnz	r3, 801a148 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801a12e:	9b00      	ldr	r3, [sp, #0]
 801a130:	781a      	ldrb	r2, [r3, #0]
 801a132:	0993      	lsrs	r3, r2, #6
 801a134:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801a138:	9202      	str	r2, [sp, #8]
 801a13a:	1e5a      	subs	r2, r3, #1
 801a13c:	2a02      	cmp	r2, #2
 801a13e:	d815      	bhi.n	801a16c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801a140:	9a00      	ldr	r2, [sp, #0]
 801a142:	3201      	adds	r2, #1
 801a144:	9200      	str	r2, [sp, #0]
 801a146:	b29b      	uxth	r3, r3
 801a148:	b1b4      	cbz	r4, 801a178 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801a14a:	429c      	cmp	r4, r3
 801a14c:	bf95      	itete	ls
 801a14e:	1b1c      	subls	r4, r3, r4
 801a150:	1ae4      	subhi	r4, r4, r3
 801a152:	fa1f fa84 	uxthls.w	sl, r4
 801a156:	b2a4      	uxthhi	r4, r4
 801a158:	bf87      	ittee	hi
 801a15a:	4671      	movhi	r1, lr
 801a15c:	f04f 0a00 	movhi.w	sl, #0
 801a160:	fa1f f188 	uxthls.w	r1, r8
 801a164:	2400      	movls	r4, #0
 801a166:	4653      	mov	r3, sl
 801a168:	468e      	mov	lr, r1
 801a16a:	e7db      	b.n	801a124 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801a16c:	9a00      	ldr	r2, [sp, #0]
 801a16e:	9b00      	ldr	r3, [sp, #0]
 801a170:	3202      	adds	r2, #2
 801a172:	785b      	ldrb	r3, [r3, #1]
 801a174:	9200      	str	r2, [sp, #0]
 801a176:	e7e7      	b.n	801a148 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801a178:	2202      	movs	r2, #2
 801a17a:	4615      	mov	r5, r2
 801a17c:	9907      	ldr	r1, [sp, #28]
 801a17e:	9a02      	ldr	r2, [sp, #8]
 801a180:	fb15 1202 	smlabb	r2, r5, r2, r1
 801a184:	9905      	ldr	r1, [sp, #20]
 801a186:	4573      	cmp	r3, lr
 801a188:	f831 c002 	ldrh.w	ip, [r1, r2]
 801a18c:	9a01      	ldr	r2, [sp, #4]
 801a18e:	bf2b      	itete	cs
 801a190:	eba3 0a0e 	subcs.w	sl, r3, lr
 801a194:	ebae 0103 	subcc.w	r1, lr, r3
 801a198:	46f1      	movcs	r9, lr
 801a19a:	4699      	movcc	r9, r3
 801a19c:	bf27      	ittee	cs
 801a19e:	fa1f fa8a 	uxthcs.w	sl, sl
 801a1a2:	4621      	movcs	r1, r4
 801a1a4:	b289      	uxthcc	r1, r1
 801a1a6:	46a2      	movcc	sl, r4
 801a1a8:	2aff      	cmp	r2, #255	; 0xff
 801a1aa:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801a1ae:	d105      	bne.n	801a1bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801a1b0:	4481      	add	r9, r0
 801a1b2:	4581      	cmp	r9, r0
 801a1b4:	d045      	beq.n	801a242 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801a1b6:	f820 cb02 	strh.w	ip, [r0], #2
 801a1ba:	e7fa      	b.n	801a1b2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801a1bc:	9d03      	ldr	r5, [sp, #12]
 801a1be:	ea4f 222c 	mov.w	r2, ip, asr #8
 801a1c2:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801a1c6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801a1ca:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a1ce:	436a      	muls	r2, r5
 801a1d0:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801a1d4:	fa5f fc8c 	uxtb.w	ip, ip
 801a1d8:	9208      	str	r2, [sp, #32]
 801a1da:	fb0b fb05 	mul.w	fp, fp, r5
 801a1de:	fb0c fc05 	mul.w	ip, ip, r5
 801a1e2:	4481      	add	r9, r0
 801a1e4:	4581      	cmp	r9, r0
 801a1e6:	d02c      	beq.n	801a242 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801a1e8:	8802      	ldrh	r2, [r0, #0]
 801a1ea:	9d04      	ldr	r5, [sp, #16]
 801a1ec:	9f04      	ldr	r7, [sp, #16]
 801a1ee:	1216      	asrs	r6, r2, #8
 801a1f0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a1f4:	fb16 f605 	smulbb	r6, r6, r5
 801a1f8:	9d08      	ldr	r5, [sp, #32]
 801a1fa:	442e      	add	r6, r5
 801a1fc:	10d5      	asrs	r5, r2, #3
 801a1fe:	00d2      	lsls	r2, r2, #3
 801a200:	b2d2      	uxtb	r2, r2
 801a202:	fb12 f207 	smulbb	r2, r2, r7
 801a206:	b2b6      	uxth	r6, r6
 801a208:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801a20c:	4462      	add	r2, ip
 801a20e:	fb15 f507 	smulbb	r5, r5, r7
 801a212:	b292      	uxth	r2, r2
 801a214:	1c77      	adds	r7, r6, #1
 801a216:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801a21a:	1c57      	adds	r7, r2, #1
 801a21c:	445d      	add	r5, fp
 801a21e:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801a222:	b2ad      	uxth	r5, r5
 801a224:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a228:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801a22c:	4316      	orrs	r6, r2
 801a22e:	1c6a      	adds	r2, r5, #1
 801a230:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801a234:	096d      	lsrs	r5, r5, #5
 801a236:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a23a:	432e      	orrs	r6, r5
 801a23c:	f820 6b02 	strh.w	r6, [r0], #2
 801a240:	e7d0      	b.n	801a1e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801a242:	4573      	cmp	r3, lr
 801a244:	d38f      	bcc.n	801a166 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801a246:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801a24a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a24c:	fa1f f188 	uxth.w	r1, r8
 801a250:	1a64      	subs	r4, r4, r1
 801a252:	881b      	ldrh	r3, [r3, #0]
 801a254:	b2a4      	uxth	r4, r4
 801a256:	2c00      	cmp	r4, #0
 801a258:	eba3 0308 	sub.w	r3, r3, r8
 801a25c:	bf18      	it	ne
 801a25e:	2100      	movne	r1, #0
 801a260:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a264:	e77f      	b.n	801a166 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801a266:	4b04      	ldr	r3, [pc, #16]	; (801a278 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801a268:	6818      	ldr	r0, [r3, #0]
 801a26a:	6803      	ldr	r3, [r0, #0]
 801a26c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a26e:	4798      	blx	r3
 801a270:	b00f      	add	sp, #60	; 0x3c
 801a272:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a276:	bf00      	nop
 801a278:	200137bc 	.word	0x200137bc
 801a27c:	200137b6 	.word	0x200137b6

0801a280 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801a280:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a284:	b09f      	sub	sp, #124	; 0x7c
 801a286:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801a28a:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801a28e:	9209      	str	r2, [sp, #36]	; 0x24
 801a290:	461d      	mov	r5, r3
 801a292:	4604      	mov	r4, r0
 801a294:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a296:	2a00      	cmp	r2, #0
 801a298:	f000 81eb 	beq.w	801a672 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801a29c:	6828      	ldr	r0, [r5, #0]
 801a29e:	6869      	ldr	r1, [r5, #4]
 801a2a0:	aa1a      	add	r2, sp, #104	; 0x68
 801a2a2:	c203      	stmia	r2!, {r0, r1}
 801a2a4:	6818      	ldr	r0, [r3, #0]
 801a2a6:	6859      	ldr	r1, [r3, #4]
 801a2a8:	aa1c      	add	r2, sp, #112	; 0x70
 801a2aa:	c203      	stmia	r2!, {r0, r1}
 801a2ac:	a81a      	add	r0, sp, #104	; 0x68
 801a2ae:	f7f9 fbf3 	bl	8013a98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a2b2:	4629      	mov	r1, r5
 801a2b4:	a81c      	add	r0, sp, #112	; 0x70
 801a2b6:	f7f9 fc33 	bl	8013b20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a2ba:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801a2be:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801a2c2:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801a2c6:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801a2ca:	bfd7      	itett	le
 801a2cc:	b29a      	uxthle	r2, r3
 801a2ce:	2201      	movgt	r2, #1
 801a2d0:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801a2d4:	fb91 f2f2 	sdivle	r2, r1, r2
 801a2d8:	9202      	str	r2, [sp, #8]
 801a2da:	9802      	ldr	r0, [sp, #8]
 801a2dc:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801a2e0:	fb92 f0f0 	sdiv	r0, r2, r0
 801a2e4:	b280      	uxth	r0, r0
 801a2e6:	9010      	str	r0, [sp, #64]	; 0x40
 801a2e8:	9902      	ldr	r1, [sp, #8]
 801a2ea:	9802      	ldr	r0, [sp, #8]
 801a2ec:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801a2ee:	4488      	add	r8, r1
 801a2f0:	fb05 2510 	mls	r5, r5, r0, r2
 801a2f4:	fb15 f503 	smulbb	r5, r5, r3
 801a2f8:	f108 38ff 	add.w	r8, r8, #4294967295
 801a2fc:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801a300:	fb98 f8f1 	sdiv	r8, r8, r1
 801a304:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801a308:	440d      	add	r5, r1
 801a30a:	4419      	add	r1, r3
 801a30c:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801a310:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801a314:	441a      	add	r2, r3
 801a316:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801a31a:	9304      	str	r3, [sp, #16]
 801a31c:	4b95      	ldr	r3, [pc, #596]	; (801a574 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801a31e:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801a322:	6818      	ldr	r0, [r3, #0]
 801a324:	6803      	ldr	r3, [r0, #0]
 801a326:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a328:	4798      	blx	r3
 801a32a:	4b93      	ldr	r3, [pc, #588]	; (801a578 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801a32c:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801a330:	881a      	ldrh	r2, [r3, #0]
 801a332:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801a336:	9318      	str	r3, [sp, #96]	; 0x60
 801a338:	fb02 7101 	mla	r1, r2, r1, r7
 801a33c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801a340:	4356      	muls	r6, r2
 801a342:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801a346:	f108 0801 	add.w	r8, r8, #1
 801a34a:	920a      	str	r2, [sp, #40]	; 0x28
 801a34c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a34e:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801a352:	930f      	str	r3, [sp, #60]	; 0x3c
 801a354:	fa1f f888 	uxth.w	r8, r8
 801a358:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801a35c:	f108 0204 	add.w	r2, r8, #4
 801a360:	9211      	str	r2, [sp, #68]	; 0x44
 801a362:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801a364:	4b85      	ldr	r3, [pc, #532]	; (801a57c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801a366:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801a36a:	b2ad      	uxth	r5, r5
 801a36c:	9215      	str	r2, [sp, #84]	; 0x54
 801a36e:	2d00      	cmp	r5, #0
 801a370:	9a04      	ldr	r2, [sp, #16]
 801a372:	f04f 0100 	mov.w	r1, #0
 801a376:	bf18      	it	ne
 801a378:	2200      	movne	r2, #0
 801a37a:	1b1b      	subs	r3, r3, r4
 801a37c:	b292      	uxth	r2, r2
 801a37e:	910d      	str	r1, [sp, #52]	; 0x34
 801a380:	9319      	str	r3, [sp, #100]	; 0x64
 801a382:	9910      	ldr	r1, [sp, #64]	; 0x40
 801a384:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a386:	fa11 f383 	uxtah	r3, r1, r3
 801a38a:	9914      	ldr	r1, [sp, #80]	; 0x50
 801a38c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801a390:	3304      	adds	r3, #4
 801a392:	9306      	str	r3, [sp, #24]
 801a394:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a396:	4283      	cmp	r3, r0
 801a398:	f240 8166 	bls.w	801a668 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801a39c:	9902      	ldr	r1, [sp, #8]
 801a39e:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801a3a2:	fbb5 f3f3 	udiv	r3, r5, r3
 801a3a6:	1acb      	subs	r3, r1, r3
 801a3a8:	b29b      	uxth	r3, r3
 801a3aa:	9316      	str	r3, [sp, #88]	; 0x58
 801a3ac:	9b06      	ldr	r3, [sp, #24]
 801a3ae:	9e06      	ldr	r6, [sp, #24]
 801a3b0:	7859      	ldrb	r1, [r3, #1]
 801a3b2:	789b      	ldrb	r3, [r3, #2]
 801a3b4:	7836      	ldrb	r6, [r6, #0]
 801a3b6:	9612      	str	r6, [sp, #72]	; 0x48
 801a3b8:	021b      	lsls	r3, r3, #8
 801a3ba:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801a3be:	9906      	ldr	r1, [sp, #24]
 801a3c0:	78c9      	ldrb	r1, [r1, #3]
 801a3c2:	430b      	orrs	r3, r1
 801a3c4:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801a3c6:	3601      	adds	r6, #1
 801a3c8:	4419      	add	r1, r3
 801a3ca:	9605      	str	r6, [sp, #20]
 801a3cc:	1c4e      	adds	r6, r1, #1
 801a3ce:	9603      	str	r6, [sp, #12]
 801a3d0:	7849      	ldrb	r1, [r1, #1]
 801a3d2:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801a3d4:	0209      	lsls	r1, r1, #8
 801a3d6:	5cf3      	ldrb	r3, [r6, r3]
 801a3d8:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801a3dc:	4319      	orrs	r1, r3
 801a3de:	b28b      	uxth	r3, r1
 801a3e0:	930c      	str	r3, [sp, #48]	; 0x30
 801a3e2:	2300      	movs	r3, #0
 801a3e4:	f04f 0a01 	mov.w	sl, #1
 801a3e8:	9307      	str	r3, [sp, #28]
 801a3ea:	469c      	mov	ip, r3
 801a3ec:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801a3f0:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801a3f4:	46d3      	mov	fp, sl
 801a3f6:	4657      	mov	r7, sl
 801a3f8:	930e      	str	r3, [sp, #56]	; 0x38
 801a3fa:	2d00      	cmp	r5, #0
 801a3fc:	d07e      	beq.n	801a4fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801a3fe:	42af      	cmp	r7, r5
 801a400:	d26e      	bcs.n	801a4e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801a402:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a404:	9201      	str	r2, [sp, #4]
 801a406:	1bed      	subs	r5, r5, r7
 801a408:	4283      	cmp	r3, r0
 801a40a:	b2ad      	uxth	r5, r5
 801a40c:	d802      	bhi.n	801a414 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801a40e:	e073      	b.n	801a4f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801a410:	2b00      	cmp	r3, #0
 801a412:	d15f      	bne.n	801a4d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801a414:	9b03      	ldr	r3, [sp, #12]
 801a416:	785b      	ldrb	r3, [r3, #1]
 801a418:	f1cb 0207 	rsb	r2, fp, #7
 801a41c:	4093      	lsls	r3, r2
 801a41e:	005b      	lsls	r3, r3, #1
 801a420:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801a424:	9b03      	ldr	r3, [sp, #12]
 801a426:	781b      	ldrb	r3, [r3, #0]
 801a428:	fa43 f30b 	asr.w	r3, r3, fp
 801a42c:	b2db      	uxtb	r3, r3
 801a42e:	4313      	orrs	r3, r2
 801a430:	f10b 0201 	add.w	r2, fp, #1
 801a434:	fa5f fb82 	uxtb.w	fp, r2
 801a438:	9a03      	ldr	r2, [sp, #12]
 801a43a:	f1bb 0f08 	cmp.w	fp, #8
 801a43e:	bf15      	itete	ne
 801a440:	3201      	addne	r2, #1
 801a442:	3202      	addeq	r2, #2
 801a444:	9203      	strne	r2, [sp, #12]
 801a446:	9203      	streq	r2, [sp, #12]
 801a448:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a44a:	b29f      	uxth	r7, r3
 801a44c:	bf08      	it	eq
 801a44e:	f04f 0b00 	moveq.w	fp, #0
 801a452:	42ba      	cmp	r2, r7
 801a454:	d309      	bcc.n	801a46a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801a456:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801a45a:	2301      	movs	r3, #1
 801a45c:	9a05      	ldr	r2, [sp, #20]
 801a45e:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801a462:	d30e      	bcc.n	801a482 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801a464:	469a      	mov	sl, r3
 801a466:	2600      	movs	r6, #0
 801a468:	e035      	b.n	801a4d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801a46a:	9b05      	ldr	r3, [sp, #20]
 801a46c:	429f      	cmp	r7, r3
 801a46e:	d318      	bcc.n	801a4a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801a470:	eb04 030a 	add.w	r3, r4, sl
 801a474:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801a478:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801a47c:	f10a 0301 	add.w	r3, sl, #1
 801a480:	b29b      	uxth	r3, r3
 801a482:	9a05      	ldr	r2, [sp, #20]
 801a484:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801a488:	990c      	ldr	r1, [sp, #48]	; 0x30
 801a48a:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801a48e:	7116      	strb	r6, [r2, #4]
 801a490:	f10a 0601 	add.w	r6, sl, #1
 801a494:	80d1      	strh	r1, [r2, #6]
 801a496:	7156      	strb	r6, [r2, #5]
 801a498:	9a05      	ldr	r2, [sp, #20]
 801a49a:	3201      	adds	r2, #1
 801a49c:	b292      	uxth	r2, r2
 801a49e:	9205      	str	r2, [sp, #20]
 801a4a0:	e7e0      	b.n	801a464 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801a4a2:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801a4a6:	463a      	mov	r2, r7
 801a4a8:	795b      	ldrb	r3, [r3, #5]
 801a4aa:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801a4ae:	4426      	add	r6, r4
 801a4b0:	9919      	ldr	r1, [sp, #100]	; 0x64
 801a4b2:	eb01 0c06 	add.w	ip, r1, r6
 801a4b6:	f1bc 0f00 	cmp.w	ip, #0
 801a4ba:	dd07      	ble.n	801a4cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801a4bc:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801a4c0:	f892 c004 	ldrb.w	ip, [r2, #4]
 801a4c4:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801a4c8:	88d2      	ldrh	r2, [r2, #6]
 801a4ca:	e7f1      	b.n	801a4b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801a4cc:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801a4d0:	b29b      	uxth	r3, r3
 801a4d2:	e7c3      	b.n	801a45c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801a4d4:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801a4d6:	970c      	str	r7, [sp, #48]	; 0x30
 801a4d8:	9a01      	ldr	r2, [sp, #4]
 801a4da:	46b4      	mov	ip, r6
 801a4dc:	461f      	mov	r7, r3
 801a4de:	e78c      	b.n	801a3fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801a4e0:	1b7b      	subs	r3, r7, r5
 801a4e2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801a4e6:	9201      	str	r2, [sp, #4]
 801a4e8:	eb0c 0605 	add.w	r6, ip, r5
 801a4ec:	b29b      	uxth	r3, r3
 801a4ee:	b2b6      	uxth	r6, r6
 801a4f0:	2500      	movs	r5, #0
 801a4f2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801a4f4:	4282      	cmp	r2, r0
 801a4f6:	d88b      	bhi.n	801a410 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801a4f8:	9a01      	ldr	r2, [sp, #4]
 801a4fa:	e74b      	b.n	801a394 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801a4fc:	4297      	cmp	r7, r2
 801a4fe:	d332      	bcc.n	801a566 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801a500:	1abb      	subs	r3, r7, r2
 801a502:	b29b      	uxth	r3, r3
 801a504:	9208      	str	r2, [sp, #32]
 801a506:	9501      	str	r5, [sp, #4]
 801a508:	9909      	ldr	r1, [sp, #36]	; 0x24
 801a50a:	29ff      	cmp	r1, #255	; 0xff
 801a50c:	9908      	ldr	r1, [sp, #32]
 801a50e:	eb0c 0601 	add.w	r6, ip, r1
 801a512:	d135      	bne.n	801a580 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801a514:	f1a0 0e02 	sub.w	lr, r0, #2
 801a518:	b2b6      	uxth	r6, r6
 801a51a:	45b4      	cmp	ip, r6
 801a51c:	f040 808c 	bne.w	801a638 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801a520:	9908      	ldr	r1, [sp, #32]
 801a522:	4297      	cmp	r7, r2
 801a524:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801a528:	d3e2      	bcc.n	801a4f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801a52a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801a52c:	9904      	ldr	r1, [sp, #16]
 801a52e:	8812      	ldrh	r2, [r2, #0]
 801a530:	1a52      	subs	r2, r2, r1
 801a532:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801a536:	9a07      	ldr	r2, [sp, #28]
 801a538:	9916      	ldr	r1, [sp, #88]	; 0x58
 801a53a:	3201      	adds	r2, #1
 801a53c:	428a      	cmp	r2, r1
 801a53e:	9207      	str	r2, [sp, #28]
 801a540:	f040 8087 	bne.w	801a652 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801a544:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801a548:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801a54c:	9b04      	ldr	r3, [sp, #16]
 801a54e:	1bed      	subs	r5, r5, r7
 801a550:	b2ad      	uxth	r5, r5
 801a552:	2d00      	cmp	r5, #0
 801a554:	bf08      	it	eq
 801a556:	461a      	moveq	r2, r3
 801a558:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a55a:	bf18      	it	ne
 801a55c:	2200      	movne	r2, #0
 801a55e:	3301      	adds	r3, #1
 801a560:	930d      	str	r3, [sp, #52]	; 0x34
 801a562:	b292      	uxth	r2, r2
 801a564:	e70d      	b.n	801a382 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801a566:	1bd1      	subs	r1, r2, r7
 801a568:	b28b      	uxth	r3, r1
 801a56a:	9301      	str	r3, [sp, #4]
 801a56c:	9708      	str	r7, [sp, #32]
 801a56e:	462b      	mov	r3, r5
 801a570:	e7ca      	b.n	801a508 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801a572:	bf00      	nop
 801a574:	200137bc 	.word	0x200137bc
 801a578:	200137b6 	.word	0x200137b6
 801a57c:	fffff7fb 	.word	0xfffff7fb
 801a580:	b2b6      	uxth	r6, r6
 801a582:	900b      	str	r0, [sp, #44]	; 0x2c
 801a584:	45b4      	cmp	ip, r6
 801a586:	d0cb      	beq.n	801a520 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801a588:	f10c 0101 	add.w	r1, ip, #1
 801a58c:	44a4      	add	ip, r4
 801a58e:	9117      	str	r1, [sp, #92]	; 0x5c
 801a590:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801a594:	9911      	ldr	r1, [sp, #68]	; 0x44
 801a596:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801a59a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801a59c:	f8b1 c000 	ldrh.w	ip, [r1]
 801a5a0:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a5a2:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801a5a6:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a5aa:	fb1e fe01 	smulbb	lr, lr, r1
 801a5ae:	ea4f 2825 	mov.w	r8, r5, asr #8
 801a5b2:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801a5b4:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801a5b8:	fb08 e801 	mla	r8, r8, r1, lr
 801a5bc:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801a5c0:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a5c2:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801a5c6:	fb19 f901 	smulbb	r9, r9, r1
 801a5ca:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801a5ce:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801a5d0:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801a5d4:	fb0e 9e01 	mla	lr, lr, r1, r9
 801a5d8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a5dc:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a5de:	fa5f fc8c 	uxtb.w	ip, ip
 801a5e2:	fb1c fc01 	smulbb	ip, ip, r1
 801a5e6:	00ed      	lsls	r5, r5, #3
 801a5e8:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801a5ea:	b2ed      	uxtb	r5, r5
 801a5ec:	fb05 c501 	mla	r5, r5, r1, ip
 801a5f0:	fa1f f888 	uxth.w	r8, r8
 801a5f4:	fa1f fe8e 	uxth.w	lr, lr
 801a5f8:	b2ad      	uxth	r5, r5
 801a5fa:	f108 0c01 	add.w	ip, r8, #1
 801a5fe:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801a602:	f10e 0901 	add.w	r9, lr, #1
 801a606:	f105 0c01 	add.w	ip, r5, #1
 801a60a:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801a60e:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801a612:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801a616:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801a61a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801a61e:	ea4c 0808 	orr.w	r8, ip, r8
 801a622:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801a624:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801a628:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801a62c:	ea48 0809 	orr.w	r8, r8, r9
 801a630:	f821 8b02 	strh.w	r8, [r1], #2
 801a634:	910b      	str	r1, [sp, #44]	; 0x2c
 801a636:	e7a5      	b.n	801a584 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801a638:	f10c 0801 	add.w	r8, ip, #1
 801a63c:	44a4      	add	ip, r4
 801a63e:	9911      	ldr	r1, [sp, #68]	; 0x44
 801a640:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801a644:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801a648:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801a64c:	fa1f fc88 	uxth.w	ip, r8
 801a650:	e763      	b.n	801a51a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801a652:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801a656:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801a65a:	1aad      	subs	r5, r5, r2
 801a65c:	b2ad      	uxth	r5, r5
 801a65e:	2d00      	cmp	r5, #0
 801a660:	bf18      	it	ne
 801a662:	2200      	movne	r2, #0
 801a664:	9201      	str	r2, [sp, #4]
 801a666:	e744      	b.n	801a4f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801a668:	4b03      	ldr	r3, [pc, #12]	; (801a678 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801a66a:	6818      	ldr	r0, [r3, #0]
 801a66c:	6803      	ldr	r3, [r0, #0]
 801a66e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a670:	4798      	blx	r3
 801a672:	b01f      	add	sp, #124	; 0x7c
 801a674:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a678:	200137bc 	.word	0x200137bc

0801a67c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801a67c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a680:	b08f      	sub	sp, #60	; 0x3c
 801a682:	461c      	mov	r4, r3
 801a684:	9203      	str	r2, [sp, #12]
 801a686:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a68a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a68c:	9202      	str	r2, [sp, #8]
 801a68e:	460f      	mov	r7, r1
 801a690:	2a00      	cmp	r2, #0
 801a692:	f000 8128 	beq.w	801a8e6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801a696:	6820      	ldr	r0, [r4, #0]
 801a698:	6861      	ldr	r1, [r4, #4]
 801a69a:	aa0a      	add	r2, sp, #40	; 0x28
 801a69c:	c203      	stmia	r2!, {r0, r1}
 801a69e:	6818      	ldr	r0, [r3, #0]
 801a6a0:	6859      	ldr	r1, [r3, #4]
 801a6a2:	aa0c      	add	r2, sp, #48	; 0x30
 801a6a4:	c203      	stmia	r2!, {r0, r1}
 801a6a6:	a80a      	add	r0, sp, #40	; 0x28
 801a6a8:	f7f9 f9f6 	bl	8013a98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a6ac:	4621      	mov	r1, r4
 801a6ae:	a80c      	add	r0, sp, #48	; 0x30
 801a6b0:	f7f9 fa36 	bl	8013b20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a6b4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801a6b8:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801a6bc:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801a6c0:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801a6c4:	bfde      	ittt	le
 801a6c6:	b2b3      	uxthle	r3, r6
 801a6c8:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801a6cc:	fb92 f3f3 	sdivle	r3, r2, r3
 801a6d0:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801a6d4:	bfc8      	it	gt
 801a6d6:	2301      	movgt	r3, #1
 801a6d8:	fb92 f1f3 	sdiv	r1, r2, r3
 801a6dc:	fa1f fc81 	uxth.w	ip, r1
 801a6e0:	fb0c 2413 	mls	r4, ip, r3, r2
 801a6e4:	fb14 f406 	smulbb	r4, r4, r6
 801a6e8:	441d      	add	r5, r3
 801a6ea:	4404      	add	r4, r0
 801a6ec:	4661      	mov	r1, ip
 801a6ee:	3d01      	subs	r5, #1
 801a6f0:	b2a4      	uxth	r4, r4
 801a6f2:	fb95 f5f3 	sdiv	r5, r5, r3
 801a6f6:	b121      	cbz	r1, 801a702 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801a6f8:	9b03      	ldr	r3, [sp, #12]
 801a6fa:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801a6fe:	ba1b      	rev	r3, r3
 801a700:	441f      	add	r7, r3
 801a702:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801a706:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801a70a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801a70e:	4418      	add	r0, r3
 801a710:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801a714:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801a718:	441a      	add	r2, r3
 801a71a:	4b74      	ldr	r3, [pc, #464]	; (801a8ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801a71c:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801a720:	6818      	ldr	r0, [r3, #0]
 801a722:	6803      	ldr	r3, [r0, #0]
 801a724:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a726:	4798      	blx	r3
 801a728:	4a71      	ldr	r2, [pc, #452]	; (801a8f0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801a72a:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801a72e:	8813      	ldrh	r3, [r2, #0]
 801a730:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801a734:	9209      	str	r2, [sp, #36]	; 0x24
 801a736:	fb03 c101 	mla	r1, r3, r1, ip
 801a73a:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801a73e:	4373      	muls	r3, r6
 801a740:	b2ad      	uxth	r5, r5
 801a742:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801a746:	00ad      	lsls	r5, r5, #2
 801a748:	2c00      	cmp	r4, #0
 801a74a:	9304      	str	r3, [sp, #16]
 801a74c:	f105 0304 	add.w	r3, r5, #4
 801a750:	9305      	str	r3, [sp, #20]
 801a752:	bf0c      	ite	eq
 801a754:	46c8      	moveq	r8, r9
 801a756:	f04f 0800 	movne.w	r8, #0
 801a75a:	2300      	movs	r3, #0
 801a75c:	fa1f f888 	uxth.w	r8, r8
 801a760:	9301      	str	r3, [sp, #4]
 801a762:	9a04      	ldr	r2, [sp, #16]
 801a764:	4282      	cmp	r2, r0
 801a766:	f240 80b9 	bls.w	801a8dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801a76a:	b95b      	cbnz	r3, 801a784 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801a76c:	783a      	ldrb	r2, [r7, #0]
 801a76e:	0993      	lsrs	r3, r2, #6
 801a770:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801a774:	9201      	str	r2, [sp, #4]
 801a776:	1e5a      	subs	r2, r3, #1
 801a778:	2a02      	cmp	r2, #2
 801a77a:	bf8d      	iteet	hi
 801a77c:	787b      	ldrbhi	r3, [r7, #1]
 801a77e:	3701      	addls	r7, #1
 801a780:	b29b      	uxthls	r3, r3
 801a782:	3702      	addhi	r7, #2
 801a784:	b184      	cbz	r4, 801a7a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801a786:	429c      	cmp	r4, r3
 801a788:	bf95      	itete	ls
 801a78a:	1b1c      	subls	r4, r3, r4
 801a78c:	1ae4      	subhi	r4, r4, r3
 801a78e:	fa1f fa84 	uxthls.w	sl, r4
 801a792:	b2a4      	uxthhi	r4, r4
 801a794:	bf87      	ittee	hi
 801a796:	46c4      	movhi	ip, r8
 801a798:	f04f 0a00 	movhi.w	sl, #0
 801a79c:	fa1f fc89 	uxthls.w	ip, r9
 801a7a0:	2400      	movls	r4, #0
 801a7a2:	4653      	mov	r3, sl
 801a7a4:	46e0      	mov	r8, ip
 801a7a6:	e7dc      	b.n	801a762 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801a7a8:	2204      	movs	r2, #4
 801a7aa:	4615      	mov	r5, r2
 801a7ac:	9905      	ldr	r1, [sp, #20]
 801a7ae:	9a01      	ldr	r2, [sp, #4]
 801a7b0:	fb15 1202 	smlabb	r2, r5, r2, r1
 801a7b4:	9903      	ldr	r1, [sp, #12]
 801a7b6:	588a      	ldr	r2, [r1, r2]
 801a7b8:	4543      	cmp	r3, r8
 801a7ba:	bf27      	ittee	cs
 801a7bc:	eba3 0a08 	subcs.w	sl, r3, r8
 801a7c0:	46c6      	movcs	lr, r8
 801a7c2:	eba8 0c03 	subcc.w	ip, r8, r3
 801a7c6:	469e      	movcc	lr, r3
 801a7c8:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801a7cc:	bf27      	ittee	cs
 801a7ce:	fa1f fa8a 	uxthcs.w	sl, sl
 801a7d2:	46a4      	movcs	ip, r4
 801a7d4:	fa1f fc8c 	uxthcc.w	ip, ip
 801a7d8:	46a2      	movcc	sl, r4
 801a7da:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801a7de:	2900      	cmp	r1, #0
 801a7e0:	d066      	beq.n	801a8b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801a7e2:	29ff      	cmp	r1, #255	; 0xff
 801a7e4:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801a7e8:	d114      	bne.n	801a814 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801a7ea:	9d02      	ldr	r5, [sp, #8]
 801a7ec:	2dff      	cmp	r5, #255	; 0xff
 801a7ee:	d111      	bne.n	801a814 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801a7f0:	0951      	lsrs	r1, r2, #5
 801a7f2:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801a7f6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801a7fa:	f026 0607 	bic.w	r6, r6, #7
 801a7fe:	430e      	orrs	r6, r1
 801a800:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801a804:	4316      	orrs	r6, r2
 801a806:	b2b6      	uxth	r6, r6
 801a808:	4486      	add	lr, r0
 801a80a:	4586      	cmp	lr, r0
 801a80c:	d051      	beq.n	801a8b2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801a80e:	f820 6b02 	strh.w	r6, [r0], #2
 801a812:	e7fa      	b.n	801a80a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801a814:	9d02      	ldr	r5, [sp, #8]
 801a816:	4369      	muls	r1, r5
 801a818:	1c4d      	adds	r5, r1, #1
 801a81a:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801a81e:	122d      	asrs	r5, r5, #8
 801a820:	ea6f 0b05 	mvn.w	fp, r5
 801a824:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801a828:	b2ad      	uxth	r5, r5
 801a82a:	b2f6      	uxtb	r6, r6
 801a82c:	b2d2      	uxtb	r2, r2
 801a82e:	fb11 f105 	smulbb	r1, r1, r5
 801a832:	fb16 f605 	smulbb	r6, r6, r5
 801a836:	fb12 f205 	smulbb	r2, r2, r5
 801a83a:	b289      	uxth	r1, r1
 801a83c:	b2b6      	uxth	r6, r6
 801a83e:	b292      	uxth	r2, r2
 801a840:	9106      	str	r1, [sp, #24]
 801a842:	9607      	str	r6, [sp, #28]
 801a844:	9208      	str	r2, [sp, #32]
 801a846:	4486      	add	lr, r0
 801a848:	fa5f fb8b 	uxtb.w	fp, fp
 801a84c:	4586      	cmp	lr, r0
 801a84e:	d030      	beq.n	801a8b2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801a850:	8802      	ldrh	r2, [r0, #0]
 801a852:	9906      	ldr	r1, [sp, #24]
 801a854:	1216      	asrs	r6, r2, #8
 801a856:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a85a:	10d5      	asrs	r5, r2, #3
 801a85c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801a860:	fb06 160b 	mla	r6, r6, fp, r1
 801a864:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801a868:	9907      	ldr	r1, [sp, #28]
 801a86a:	00d2      	lsls	r2, r2, #3
 801a86c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801a870:	fb05 150b 	mla	r5, r5, fp, r1
 801a874:	b2d2      	uxtb	r2, r2
 801a876:	9908      	ldr	r1, [sp, #32]
 801a878:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801a87c:	b2b6      	uxth	r6, r6
 801a87e:	fb02 120b 	mla	r2, r2, fp, r1
 801a882:	b292      	uxth	r2, r2
 801a884:	1c71      	adds	r1, r6, #1
 801a886:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801a88a:	1c51      	adds	r1, r2, #1
 801a88c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801a890:	b2ad      	uxth	r5, r5
 801a892:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a896:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801a89a:	4316      	orrs	r6, r2
 801a89c:	1c6a      	adds	r2, r5, #1
 801a89e:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801a8a2:	096d      	lsrs	r5, r5, #5
 801a8a4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a8a8:	432e      	orrs	r6, r5
 801a8aa:	f820 6b02 	strh.w	r6, [r0], #2
 801a8ae:	e7cd      	b.n	801a84c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801a8b0:	4470      	add	r0, lr
 801a8b2:	4543      	cmp	r3, r8
 801a8b4:	f4ff af75 	bcc.w	801a7a2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801a8b8:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801a8bc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a8be:	fa1f fc89 	uxth.w	ip, r9
 801a8c2:	eba4 040c 	sub.w	r4, r4, ip
 801a8c6:	881b      	ldrh	r3, [r3, #0]
 801a8c8:	b2a4      	uxth	r4, r4
 801a8ca:	2c00      	cmp	r4, #0
 801a8cc:	eba3 0309 	sub.w	r3, r3, r9
 801a8d0:	bf18      	it	ne
 801a8d2:	f04f 0c00 	movne.w	ip, #0
 801a8d6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a8da:	e762      	b.n	801a7a2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801a8dc:	4b03      	ldr	r3, [pc, #12]	; (801a8ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801a8de:	6818      	ldr	r0, [r3, #0]
 801a8e0:	6803      	ldr	r3, [r0, #0]
 801a8e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a8e4:	4798      	blx	r3
 801a8e6:	b00f      	add	sp, #60	; 0x3c
 801a8e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a8ec:	200137bc 	.word	0x200137bc
 801a8f0:	200137b6 	.word	0x200137b6

0801a8f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801a8f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a8f8:	b093      	sub	sp, #76	; 0x4c
 801a8fa:	461c      	mov	r4, r3
 801a8fc:	9205      	str	r2, [sp, #20]
 801a8fe:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801a902:	9101      	str	r1, [sp, #4]
 801a904:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a906:	9202      	str	r2, [sp, #8]
 801a908:	2a00      	cmp	r2, #0
 801a90a:	f000 812c 	beq.w	801ab66 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801a90e:	6820      	ldr	r0, [r4, #0]
 801a910:	6861      	ldr	r1, [r4, #4]
 801a912:	aa0e      	add	r2, sp, #56	; 0x38
 801a914:	c203      	stmia	r2!, {r0, r1}
 801a916:	6818      	ldr	r0, [r3, #0]
 801a918:	6859      	ldr	r1, [r3, #4]
 801a91a:	aa10      	add	r2, sp, #64	; 0x40
 801a91c:	c203      	stmia	r2!, {r0, r1}
 801a91e:	a80e      	add	r0, sp, #56	; 0x38
 801a920:	f7f9 f8ba 	bl	8013a98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a924:	4621      	mov	r1, r4
 801a926:	a810      	add	r0, sp, #64	; 0x40
 801a928:	f7f9 f8fa 	bl	8013b20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a92c:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801a930:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801a934:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801a938:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801a93c:	bfde      	ittt	le
 801a93e:	b2b3      	uxthle	r3, r6
 801a940:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801a944:	fb92 f3f3 	sdivle	r3, r2, r3
 801a948:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801a94c:	bfc8      	it	gt
 801a94e:	2301      	movgt	r3, #1
 801a950:	fb92 f1f3 	sdiv	r1, r2, r3
 801a954:	fa1f fc81 	uxth.w	ip, r1
 801a958:	fb0c 2413 	mls	r4, ip, r3, r2
 801a95c:	fb14 f406 	smulbb	r4, r4, r6
 801a960:	441d      	add	r5, r3
 801a962:	4404      	add	r4, r0
 801a964:	4661      	mov	r1, ip
 801a966:	3d01      	subs	r5, #1
 801a968:	b2a4      	uxth	r4, r4
 801a96a:	fb95 f5f3 	sdiv	r5, r5, r3
 801a96e:	b131      	cbz	r1, 801a97e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801a970:	9b05      	ldr	r3, [sp, #20]
 801a972:	9901      	ldr	r1, [sp, #4]
 801a974:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801a978:	ba1b      	rev	r3, r3
 801a97a:	4419      	add	r1, r3
 801a97c:	9101      	str	r1, [sp, #4]
 801a97e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801a982:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801a986:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801a98a:	4418      	add	r0, r3
 801a98c:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801a990:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801a994:	441a      	add	r2, r3
 801a996:	4b75      	ldr	r3, [pc, #468]	; (801ab6c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801a998:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801a99c:	6818      	ldr	r0, [r3, #0]
 801a99e:	6803      	ldr	r3, [r0, #0]
 801a9a0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a9a2:	4798      	blx	r3
 801a9a4:	4972      	ldr	r1, [pc, #456]	; (801ab70 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801a9a6:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801a9aa:	880b      	ldrh	r3, [r1, #0]
 801a9ac:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801a9b0:	910d      	str	r1, [sp, #52]	; 0x34
 801a9b2:	fb03 c202 	mla	r2, r3, r2, ip
 801a9b6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801a9ba:	4373      	muls	r3, r6
 801a9bc:	b2ad      	uxth	r5, r5
 801a9be:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801a9c2:	00ad      	lsls	r5, r5, #2
 801a9c4:	9308      	str	r3, [sp, #32]
 801a9c6:	1d2b      	adds	r3, r5, #4
 801a9c8:	9309      	str	r3, [sp, #36]	; 0x24
 801a9ca:	9b02      	ldr	r3, [sp, #8]
 801a9cc:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801a9d0:	9106      	str	r1, [sp, #24]
 801a9d2:	43da      	mvns	r2, r3
 801a9d4:	2c00      	cmp	r4, #0
 801a9d6:	bf0c      	ite	eq
 801a9d8:	46dc      	moveq	ip, fp
 801a9da:	f04f 0c00 	movne.w	ip, #0
 801a9de:	2300      	movs	r3, #0
 801a9e0:	b2d2      	uxtb	r2, r2
 801a9e2:	fa1f fc8c 	uxth.w	ip, ip
 801a9e6:	9303      	str	r3, [sp, #12]
 801a9e8:	9207      	str	r2, [sp, #28]
 801a9ea:	9a08      	ldr	r2, [sp, #32]
 801a9ec:	4282      	cmp	r2, r0
 801a9ee:	f240 80b5 	bls.w	801ab5c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801a9f2:	b963      	cbnz	r3, 801aa0e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801a9f4:	9b01      	ldr	r3, [sp, #4]
 801a9f6:	781a      	ldrb	r2, [r3, #0]
 801a9f8:	0993      	lsrs	r3, r2, #6
 801a9fa:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801a9fe:	9203      	str	r2, [sp, #12]
 801aa00:	1e5a      	subs	r2, r3, #1
 801aa02:	2a02      	cmp	r2, #2
 801aa04:	d815      	bhi.n	801aa32 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801aa06:	9a01      	ldr	r2, [sp, #4]
 801aa08:	3201      	adds	r2, #1
 801aa0a:	9201      	str	r2, [sp, #4]
 801aa0c:	b29b      	uxth	r3, r3
 801aa0e:	b1b4      	cbz	r4, 801aa3e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801aa10:	429c      	cmp	r4, r3
 801aa12:	bf95      	itete	ls
 801aa14:	1b1c      	subls	r4, r3, r4
 801aa16:	1ae4      	subhi	r4, r4, r3
 801aa18:	fa1f f884 	uxthls.w	r8, r4
 801aa1c:	b2a4      	uxthhi	r4, r4
 801aa1e:	bf87      	ittee	hi
 801aa20:	4666      	movhi	r6, ip
 801aa22:	f04f 0800 	movhi.w	r8, #0
 801aa26:	fa1f f68b 	uxthls.w	r6, fp
 801aa2a:	2400      	movls	r4, #0
 801aa2c:	4643      	mov	r3, r8
 801aa2e:	46b4      	mov	ip, r6
 801aa30:	e7db      	b.n	801a9ea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801aa32:	9a01      	ldr	r2, [sp, #4]
 801aa34:	9b01      	ldr	r3, [sp, #4]
 801aa36:	3202      	adds	r2, #2
 801aa38:	785b      	ldrb	r3, [r3, #1]
 801aa3a:	9201      	str	r2, [sp, #4]
 801aa3c:	e7e7      	b.n	801aa0e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801aa3e:	2203      	movs	r2, #3
 801aa40:	4615      	mov	r5, r2
 801aa42:	9909      	ldr	r1, [sp, #36]	; 0x24
 801aa44:	9a03      	ldr	r2, [sp, #12]
 801aa46:	fb15 1202 	smlabb	r2, r5, r2, r1
 801aa4a:	9905      	ldr	r1, [sp, #20]
 801aa4c:	4563      	cmp	r3, ip
 801aa4e:	eb01 0502 	add.w	r5, r1, r2
 801aa52:	9902      	ldr	r1, [sp, #8]
 801aa54:	bf29      	itett	cs
 801aa56:	eba3 080c 	subcs.w	r8, r3, ip
 801aa5a:	ebac 0603 	subcc.w	r6, ip, r3
 801aa5e:	fa1f f888 	uxthcs.w	r8, r8
 801aa62:	46e1      	movcs	r9, ip
 801aa64:	bf2f      	iteee	cs
 801aa66:	4626      	movcs	r6, r4
 801aa68:	b2b6      	uxthcc	r6, r6
 801aa6a:	4699      	movcc	r9, r3
 801aa6c:	46a0      	movcc	r8, r4
 801aa6e:	29ff      	cmp	r1, #255	; 0xff
 801aa70:	d04a      	beq.n	801ab08 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801aa72:	9f06      	ldr	r7, [sp, #24]
 801aa74:	78a9      	ldrb	r1, [r5, #2]
 801aa76:	9004      	str	r0, [sp, #16]
 801aa78:	4379      	muls	r1, r7
 801aa7a:	910a      	str	r1, [sp, #40]	; 0x28
 801aa7c:	7869      	ldrb	r1, [r5, #1]
 801aa7e:	4379      	muls	r1, r7
 801aa80:	910b      	str	r1, [sp, #44]	; 0x2c
 801aa82:	9905      	ldr	r1, [sp, #20]
 801aa84:	5c8a      	ldrb	r2, [r1, r2]
 801aa86:	437a      	muls	r2, r7
 801aa88:	920c      	str	r2, [sp, #48]	; 0x30
 801aa8a:	46ca      	mov	sl, r9
 801aa8c:	f1ba 0f00 	cmp.w	sl, #0
 801aa90:	d03d      	beq.n	801ab0e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801aa92:	9a04      	ldr	r2, [sp, #16]
 801aa94:	9f07      	ldr	r7, [sp, #28]
 801aa96:	8812      	ldrh	r2, [r2, #0]
 801aa98:	1215      	asrs	r5, r2, #8
 801aa9a:	46be      	mov	lr, r7
 801aa9c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801aaa0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801aaa2:	10d1      	asrs	r1, r2, #3
 801aaa4:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801aaa8:	fb05 750e 	mla	r5, r5, lr, r7
 801aaac:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801aab0:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801aab2:	00d2      	lsls	r2, r2, #3
 801aab4:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801aab8:	fb01 710e 	mla	r1, r1, lr, r7
 801aabc:	b2d2      	uxtb	r2, r2
 801aabe:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801aac0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801aac4:	b2ad      	uxth	r5, r5
 801aac6:	fb02 720e 	mla	r2, r2, lr, r7
 801aaca:	b292      	uxth	r2, r2
 801aacc:	f105 0e01 	add.w	lr, r5, #1
 801aad0:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801aad4:	f102 0e01 	add.w	lr, r2, #1
 801aad8:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801aadc:	b289      	uxth	r1, r1
 801aade:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801aae2:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801aae6:	4315      	orrs	r5, r2
 801aae8:	1c4a      	adds	r2, r1, #1
 801aaea:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801aaee:	0949      	lsrs	r1, r1, #5
 801aaf0:	9a04      	ldr	r2, [sp, #16]
 801aaf2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801aaf6:	430d      	orrs	r5, r1
 801aaf8:	f822 5b02 	strh.w	r5, [r2], #2
 801aafc:	f10a 3aff 	add.w	sl, sl, #4294967295
 801ab00:	9204      	str	r2, [sp, #16]
 801ab02:	fa1f fa8a 	uxth.w	sl, sl
 801ab06:	e7c1      	b.n	801aa8c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801ab08:	4649      	mov	r1, r9
 801ab0a:	4686      	mov	lr, r0
 801ab0c:	b999      	cbnz	r1, 801ab36 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801ab0e:	4563      	cmp	r3, ip
 801ab10:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801ab14:	d38a      	bcc.n	801aa2c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801ab16:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801ab1a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ab1c:	fa1f f68b 	uxth.w	r6, fp
 801ab20:	1ba4      	subs	r4, r4, r6
 801ab22:	881b      	ldrh	r3, [r3, #0]
 801ab24:	b2a4      	uxth	r4, r4
 801ab26:	2c00      	cmp	r4, #0
 801ab28:	eba3 030b 	sub.w	r3, r3, fp
 801ab2c:	bf18      	it	ne
 801ab2e:	2600      	movne	r6, #0
 801ab30:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ab34:	e77a      	b.n	801aa2c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801ab36:	78aa      	ldrb	r2, [r5, #2]
 801ab38:	4f0e      	ldr	r7, [pc, #56]	; (801ab74 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801ab3a:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801ab3e:	786a      	ldrb	r2, [r5, #1]
 801ab40:	00d2      	lsls	r2, r2, #3
 801ab42:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ab46:	ea4a 0202 	orr.w	r2, sl, r2
 801ab4a:	f895 a000 	ldrb.w	sl, [r5]
 801ab4e:	3901      	subs	r1, #1
 801ab50:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801ab54:	f82e 2b02 	strh.w	r2, [lr], #2
 801ab58:	b289      	uxth	r1, r1
 801ab5a:	e7d7      	b.n	801ab0c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801ab5c:	4b03      	ldr	r3, [pc, #12]	; (801ab6c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801ab5e:	6818      	ldr	r0, [r3, #0]
 801ab60:	6803      	ldr	r3, [r0, #0]
 801ab62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ab64:	4798      	blx	r3
 801ab66:	b013      	add	sp, #76	; 0x4c
 801ab68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ab6c:	200137bc 	.word	0x200137bc
 801ab70:	200137b6 	.word	0x200137b6
 801ab74:	fffff800 	.word	0xfffff800

0801ab78 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801ab78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ab7c:	b09d      	sub	sp, #116	; 0x74
 801ab7e:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801ab82:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801ab86:	920e      	str	r2, [sp, #56]	; 0x38
 801ab88:	461c      	mov	r4, r3
 801ab8a:	4683      	mov	fp, r0
 801ab8c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801ab8e:	2a00      	cmp	r2, #0
 801ab90:	f000 81e0 	beq.w	801af54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801ab94:	6820      	ldr	r0, [r4, #0]
 801ab96:	6861      	ldr	r1, [r4, #4]
 801ab98:	aa18      	add	r2, sp, #96	; 0x60
 801ab9a:	c203      	stmia	r2!, {r0, r1}
 801ab9c:	6818      	ldr	r0, [r3, #0]
 801ab9e:	6859      	ldr	r1, [r3, #4]
 801aba0:	aa1a      	add	r2, sp, #104	; 0x68
 801aba2:	c203      	stmia	r2!, {r0, r1}
 801aba4:	a818      	add	r0, sp, #96	; 0x60
 801aba6:	f7f8 ff77 	bl	8013a98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801abaa:	4621      	mov	r1, r4
 801abac:	a81a      	add	r0, sp, #104	; 0x68
 801abae:	f7f8 ffb7 	bl	8013b20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801abb2:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801abb6:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801abba:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801abbe:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801abc2:	bfd7      	itett	le
 801abc4:	b29a      	uxthle	r2, r3
 801abc6:	2201      	movgt	r2, #1
 801abc8:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801abcc:	fb91 f2f2 	sdivle	r2, r1, r2
 801abd0:	9202      	str	r2, [sp, #8]
 801abd2:	9802      	ldr	r0, [sp, #8]
 801abd4:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801abd8:	fb92 f0f0 	sdiv	r0, r2, r0
 801abdc:	b280      	uxth	r0, r0
 801abde:	900f      	str	r0, [sp, #60]	; 0x3c
 801abe0:	9902      	ldr	r1, [sp, #8]
 801abe2:	9802      	ldr	r0, [sp, #8]
 801abe4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801abe6:	440c      	add	r4, r1
 801abe8:	fb05 2510 	mls	r5, r5, r0, r2
 801abec:	fb15 f503 	smulbb	r5, r5, r3
 801abf0:	3c01      	subs	r4, #1
 801abf2:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801abf6:	fb94 f4f1 	sdiv	r4, r4, r1
 801abfa:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801abfe:	440d      	add	r5, r1
 801ac00:	4419      	add	r1, r3
 801ac02:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801ac06:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801ac0a:	441a      	add	r2, r3
 801ac0c:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801ac10:	9306      	str	r3, [sp, #24]
 801ac12:	4bb3      	ldr	r3, [pc, #716]	; (801aee0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801ac14:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801ac18:	6818      	ldr	r0, [r3, #0]
 801ac1a:	6803      	ldr	r3, [r0, #0]
 801ac1c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ac1e:	4798      	blx	r3
 801ac20:	4bb0      	ldr	r3, [pc, #704]	; (801aee4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801ac22:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801ac26:	881a      	ldrh	r2, [r3, #0]
 801ac28:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801ac2c:	9316      	str	r3, [sp, #88]	; 0x58
 801ac2e:	fb02 7101 	mla	r1, r2, r1, r7
 801ac32:	3401      	adds	r4, #1
 801ac34:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801ac38:	b2a4      	uxth	r4, r4
 801ac3a:	4356      	muls	r6, r2
 801ac3c:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801ac40:	00a4      	lsls	r4, r4, #2
 801ac42:	920a      	str	r2, [sp, #40]	; 0x28
 801ac44:	1d22      	adds	r2, r4, #4
 801ac46:	b2ad      	uxth	r5, r5
 801ac48:	9213      	str	r2, [sp, #76]	; 0x4c
 801ac4a:	4ba7      	ldr	r3, [pc, #668]	; (801aee8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801ac4c:	9a06      	ldr	r2, [sp, #24]
 801ac4e:	2d00      	cmp	r5, #0
 801ac50:	bf0c      	ite	eq
 801ac52:	4611      	moveq	r1, r2
 801ac54:	2100      	movne	r1, #0
 801ac56:	2200      	movs	r2, #0
 801ac58:	eba3 030b 	sub.w	r3, r3, fp
 801ac5c:	b289      	uxth	r1, r1
 801ac5e:	920d      	str	r2, [sp, #52]	; 0x34
 801ac60:	9317      	str	r3, [sp, #92]	; 0x5c
 801ac62:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ac64:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ac66:	fa12 f383 	uxtah	r3, r2, r3
 801ac6a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ac6c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801ac70:	3304      	adds	r3, #4
 801ac72:	9308      	str	r3, [sp, #32]
 801ac74:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ac76:	4543      	cmp	r3, r8
 801ac78:	f240 8167 	bls.w	801af4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801ac7c:	9a02      	ldr	r2, [sp, #8]
 801ac7e:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801ac82:	fbb5 f3f3 	udiv	r3, r5, r3
 801ac86:	1ad3      	subs	r3, r2, r3
 801ac88:	b29b      	uxth	r3, r3
 801ac8a:	9314      	str	r3, [sp, #80]	; 0x50
 801ac8c:	9b08      	ldr	r3, [sp, #32]
 801ac8e:	9808      	ldr	r0, [sp, #32]
 801ac90:	785a      	ldrb	r2, [r3, #1]
 801ac92:	789b      	ldrb	r3, [r3, #2]
 801ac94:	7800      	ldrb	r0, [r0, #0]
 801ac96:	9010      	str	r0, [sp, #64]	; 0x40
 801ac98:	021b      	lsls	r3, r3, #8
 801ac9a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801ac9e:	9a08      	ldr	r2, [sp, #32]
 801aca0:	78d2      	ldrb	r2, [r2, #3]
 801aca2:	4313      	orrs	r3, r2
 801aca4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801aca6:	3001      	adds	r0, #1
 801aca8:	441a      	add	r2, r3
 801acaa:	9007      	str	r0, [sp, #28]
 801acac:	1c50      	adds	r0, r2, #1
 801acae:	9005      	str	r0, [sp, #20]
 801acb0:	7852      	ldrb	r2, [r2, #1]
 801acb2:	9811      	ldr	r0, [sp, #68]	; 0x44
 801acb4:	0212      	lsls	r2, r2, #8
 801acb6:	5cc3      	ldrb	r3, [r0, r3]
 801acb8:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801acbc:	431a      	orrs	r2, r3
 801acbe:	b293      	uxth	r3, r2
 801acc0:	930b      	str	r3, [sp, #44]	; 0x2c
 801acc2:	2300      	movs	r3, #0
 801acc4:	9309      	str	r3, [sp, #36]	; 0x24
 801acc6:	2301      	movs	r3, #1
 801acc8:	9301      	str	r3, [sp, #4]
 801acca:	9304      	str	r3, [sp, #16]
 801accc:	2300      	movs	r3, #0
 801acce:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801acd2:	9303      	str	r3, [sp, #12]
 801acd4:	f04f 0e01 	mov.w	lr, #1
 801acd8:	2d00      	cmp	r5, #0
 801acda:	d07c      	beq.n	801add6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801acdc:	45ae      	cmp	lr, r5
 801acde:	d26b      	bcs.n	801adb8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801ace0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ace2:	eba5 050e 	sub.w	r5, r5, lr
 801ace6:	4543      	cmp	r3, r8
 801ace8:	b2ad      	uxth	r5, r5
 801acea:	460c      	mov	r4, r1
 801acec:	d802      	bhi.n	801acf4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801acee:	e070      	b.n	801add2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801acf0:	2b00      	cmp	r3, #0
 801acf2:	d15c      	bne.n	801adae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801acf4:	9b05      	ldr	r3, [sp, #20]
 801acf6:	9a04      	ldr	r2, [sp, #16]
 801acf8:	785b      	ldrb	r3, [r3, #1]
 801acfa:	9904      	ldr	r1, [sp, #16]
 801acfc:	f1c2 0207 	rsb	r2, r2, #7
 801ad00:	4093      	lsls	r3, r2
 801ad02:	005b      	lsls	r3, r3, #1
 801ad04:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801ad08:	9b05      	ldr	r3, [sp, #20]
 801ad0a:	781b      	ldrb	r3, [r3, #0]
 801ad0c:	410b      	asrs	r3, r1
 801ad0e:	3101      	adds	r1, #1
 801ad10:	b2c9      	uxtb	r1, r1
 801ad12:	2908      	cmp	r1, #8
 801ad14:	9104      	str	r1, [sp, #16]
 801ad16:	9905      	ldr	r1, [sp, #20]
 801ad18:	bf0a      	itet	eq
 801ad1a:	3102      	addeq	r1, #2
 801ad1c:	3101      	addne	r1, #1
 801ad1e:	9105      	streq	r1, [sp, #20]
 801ad20:	b2db      	uxtb	r3, r3
 801ad22:	bf0a      	itet	eq
 801ad24:	2100      	moveq	r1, #0
 801ad26:	9105      	strne	r1, [sp, #20]
 801ad28:	9104      	streq	r1, [sp, #16]
 801ad2a:	4313      	orrs	r3, r2
 801ad2c:	9910      	ldr	r1, [sp, #64]	; 0x40
 801ad2e:	b29a      	uxth	r2, r3
 801ad30:	4291      	cmp	r1, r2
 801ad32:	d30a      	bcc.n	801ad4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801ad34:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801ad38:	2301      	movs	r3, #1
 801ad3a:	9907      	ldr	r1, [sp, #28]
 801ad3c:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801ad40:	d30f      	bcc.n	801ad62 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801ad42:	2100      	movs	r1, #0
 801ad44:	9301      	str	r3, [sp, #4]
 801ad46:	9103      	str	r1, [sp, #12]
 801ad48:	e032      	b.n	801adb0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801ad4a:	9b07      	ldr	r3, [sp, #28]
 801ad4c:	429a      	cmp	r2, r3
 801ad4e:	d318      	bcc.n	801ad82 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801ad50:	9b01      	ldr	r3, [sp, #4]
 801ad52:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801ad56:	445b      	add	r3, fp
 801ad58:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801ad5c:	9b01      	ldr	r3, [sp, #4]
 801ad5e:	3301      	adds	r3, #1
 801ad60:	b29b      	uxth	r3, r3
 801ad62:	9907      	ldr	r1, [sp, #28]
 801ad64:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801ad68:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801ad6c:	7108      	strb	r0, [r1, #4]
 801ad6e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801ad70:	80c8      	strh	r0, [r1, #6]
 801ad72:	9801      	ldr	r0, [sp, #4]
 801ad74:	3001      	adds	r0, #1
 801ad76:	7148      	strb	r0, [r1, #5]
 801ad78:	9907      	ldr	r1, [sp, #28]
 801ad7a:	3101      	adds	r1, #1
 801ad7c:	b289      	uxth	r1, r1
 801ad7e:	9107      	str	r1, [sp, #28]
 801ad80:	e7df      	b.n	801ad42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801ad82:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801ad86:	4611      	mov	r1, r2
 801ad88:	795b      	ldrb	r3, [r3, #5]
 801ad8a:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801ad8e:	4458      	add	r0, fp
 801ad90:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801ad92:	4406      	add	r6, r0
 801ad94:	2e00      	cmp	r6, #0
 801ad96:	dd06      	ble.n	801ada6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801ad98:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801ad9c:	790e      	ldrb	r6, [r1, #4]
 801ad9e:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801ada2:	88c9      	ldrh	r1, [r1, #6]
 801ada4:	e7f4      	b.n	801ad90 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801ada6:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801adaa:	b29b      	uxth	r3, r3
 801adac:	e7c5      	b.n	801ad3a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801adae:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801adb0:	920b      	str	r2, [sp, #44]	; 0x2c
 801adb2:	4621      	mov	r1, r4
 801adb4:	469e      	mov	lr, r3
 801adb6:	e78f      	b.n	801acd8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801adb8:	9a03      	ldr	r2, [sp, #12]
 801adba:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801adbe:	442a      	add	r2, r5
 801adc0:	ebae 0305 	sub.w	r3, lr, r5
 801adc4:	b292      	uxth	r2, r2
 801adc6:	b29b      	uxth	r3, r3
 801adc8:	9203      	str	r2, [sp, #12]
 801adca:	2500      	movs	r5, #0
 801adcc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801adce:	4542      	cmp	r2, r8
 801add0:	d88e      	bhi.n	801acf0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801add2:	4621      	mov	r1, r4
 801add4:	e74e      	b.n	801ac74 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801add6:	458e      	cmp	lr, r1
 801add8:	bf29      	itett	cs
 801adda:	ebae 0301 	subcs.w	r3, lr, r1
 801adde:	eba1 040e 	subcc.w	r4, r1, lr
 801ade2:	b29b      	uxthcs	r3, r3
 801ade4:	910c      	strcs	r1, [sp, #48]	; 0x30
 801ade6:	bf2f      	iteee	cs
 801ade8:	462c      	movcs	r4, r5
 801adea:	b2a4      	uxthcc	r4, r4
 801adec:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801adf0:	462b      	movcc	r3, r5
 801adf2:	f04f 0900 	mov.w	r9, #0
 801adf6:	9a03      	ldr	r2, [sp, #12]
 801adf8:	980c      	ldr	r0, [sp, #48]	; 0x30
 801adfa:	444a      	add	r2, r9
 801adfc:	4548      	cmp	r0, r9
 801adfe:	b292      	uxth	r2, r2
 801ae00:	d074      	beq.n	801aeec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801ae02:	445a      	add	r2, fp
 801ae04:	2004      	movs	r0, #4
 801ae06:	4605      	mov	r5, r0
 801ae08:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801ae0c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ae0e:	fb15 0202 	smlabb	r2, r5, r2, r0
 801ae12:	9812      	ldr	r0, [sp, #72]	; 0x48
 801ae14:	5880      	ldr	r0, [r0, r2]
 801ae16:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801ae1a:	d014      	beq.n	801ae46 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801ae1c:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801ae20:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801ae24:	d112      	bne.n	801ae4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801ae26:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801ae28:	2aff      	cmp	r2, #255	; 0xff
 801ae2a:	d10f      	bne.n	801ae4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801ae2c:	0942      	lsrs	r2, r0, #5
 801ae2e:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801ae32:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ae36:	f025 0507 	bic.w	r5, r5, #7
 801ae3a:	4315      	orrs	r5, r2
 801ae3c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801ae40:	4305      	orrs	r5, r0
 801ae42:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801ae46:	f109 0901 	add.w	r9, r9, #1
 801ae4a:	e7d4      	b.n	801adf6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801ae4c:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801ae50:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801ae54:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801ae58:	9215      	str	r2, [sp, #84]	; 0x54
 801ae5a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801ae5c:	fb02 fa0a 	mul.w	sl, r2, sl
 801ae60:	f10a 0201 	add.w	r2, sl, #1
 801ae64:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801ae68:	ea4f 272c 	mov.w	r7, ip, asr #8
 801ae6c:	1212      	asrs	r2, r2, #8
 801ae6e:	fa1f fa82 	uxth.w	sl, r2
 801ae72:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801ae76:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ae7a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ae7e:	43d2      	mvns	r2, r2
 801ae80:	b2d2      	uxtb	r2, r2
 801ae82:	fb16 f60a 	smulbb	r6, r6, sl
 801ae86:	fa5f fc8c 	uxtb.w	ip, ip
 801ae8a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801ae8e:	b2c0      	uxtb	r0, r0
 801ae90:	fb07 6702 	mla	r7, r7, r2, r6
 801ae94:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801ae98:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801ae9a:	fb10 f00a 	smulbb	r0, r0, sl
 801ae9e:	fb0c 0002 	mla	r0, ip, r2, r0
 801aea2:	b2ed      	uxtb	r5, r5
 801aea4:	b2bf      	uxth	r7, r7
 801aea6:	fb15 f50a 	smulbb	r5, r5, sl
 801aeaa:	b280      	uxth	r0, r0
 801aeac:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801aeb0:	fb06 5602 	mla	r6, r6, r2, r5
 801aeb4:	1c7a      	adds	r2, r7, #1
 801aeb6:	1c45      	adds	r5, r0, #1
 801aeb8:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801aebc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801aec0:	b2b6      	uxth	r6, r6
 801aec2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801aec6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801aeca:	432f      	orrs	r7, r5
 801aecc:	1c75      	adds	r5, r6, #1
 801aece:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801aed2:	096d      	lsrs	r5, r5, #5
 801aed4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801aed8:	432f      	orrs	r7, r5
 801aeda:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801aede:	e7b2      	b.n	801ae46 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801aee0:	200137bc 	.word	0x200137bc
 801aee4:	200137b6 	.word	0x200137b6
 801aee8:	fffff7fb 	.word	0xfffff7fb
 801aeec:	9203      	str	r2, [sp, #12]
 801aeee:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801aef0:	458e      	cmp	lr, r1
 801aef2:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801aef6:	f4ff af68 	bcc.w	801adca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801aefa:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801aefc:	9906      	ldr	r1, [sp, #24]
 801aefe:	8812      	ldrh	r2, [r2, #0]
 801af00:	1a52      	subs	r2, r2, r1
 801af02:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801af06:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801af08:	9914      	ldr	r1, [sp, #80]	; 0x50
 801af0a:	3201      	adds	r2, #1
 801af0c:	428a      	cmp	r2, r1
 801af0e:	9209      	str	r2, [sp, #36]	; 0x24
 801af10:	d111      	bne.n	801af36 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801af12:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801af16:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801af1a:	9b06      	ldr	r3, [sp, #24]
 801af1c:	eba5 0509 	sub.w	r5, r5, r9
 801af20:	b2ad      	uxth	r5, r5
 801af22:	2d00      	cmp	r5, #0
 801af24:	bf08      	it	eq
 801af26:	4619      	moveq	r1, r3
 801af28:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801af2a:	bf18      	it	ne
 801af2c:	2100      	movne	r1, #0
 801af2e:	3301      	adds	r3, #1
 801af30:	930d      	str	r3, [sp, #52]	; 0x34
 801af32:	b289      	uxth	r1, r1
 801af34:	e695      	b.n	801ac62 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801af36:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801af3a:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801af3e:	1b2d      	subs	r5, r5, r4
 801af40:	b2ad      	uxth	r5, r5
 801af42:	2d00      	cmp	r5, #0
 801af44:	bf18      	it	ne
 801af46:	2400      	movne	r4, #0
 801af48:	e740      	b.n	801adcc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801af4a:	4b04      	ldr	r3, [pc, #16]	; (801af5c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801af4c:	6818      	ldr	r0, [r3, #0]
 801af4e:	6803      	ldr	r3, [r0, #0]
 801af50:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801af52:	4798      	blx	r3
 801af54:	b01d      	add	sp, #116	; 0x74
 801af56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801af5a:	bf00      	nop
 801af5c:	200137bc 	.word	0x200137bc

0801af60 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801af60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801af64:	b09f      	sub	sp, #124	; 0x7c
 801af66:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801af6a:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801af6e:	920a      	str	r2, [sp, #40]	; 0x28
 801af70:	461d      	mov	r5, r3
 801af72:	4604      	mov	r4, r0
 801af74:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801af76:	2a00      	cmp	r2, #0
 801af78:	f000 81fa 	beq.w	801b370 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801af7c:	6828      	ldr	r0, [r5, #0]
 801af7e:	6869      	ldr	r1, [r5, #4]
 801af80:	aa1a      	add	r2, sp, #104	; 0x68
 801af82:	c203      	stmia	r2!, {r0, r1}
 801af84:	6818      	ldr	r0, [r3, #0]
 801af86:	6859      	ldr	r1, [r3, #4]
 801af88:	aa1c      	add	r2, sp, #112	; 0x70
 801af8a:	c203      	stmia	r2!, {r0, r1}
 801af8c:	a81a      	add	r0, sp, #104	; 0x68
 801af8e:	f7f8 fd83 	bl	8013a98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801af92:	4629      	mov	r1, r5
 801af94:	a81c      	add	r0, sp, #112	; 0x70
 801af96:	f7f8 fdc3 	bl	8013b20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801af9a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801af9e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801afa2:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801afa6:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801afaa:	bfd7      	itett	le
 801afac:	b29a      	uxthle	r2, r3
 801afae:	2201      	movgt	r2, #1
 801afb0:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801afb4:	fb91 f2f2 	sdivle	r2, r1, r2
 801afb8:	9201      	str	r2, [sp, #4]
 801afba:	9801      	ldr	r0, [sp, #4]
 801afbc:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801afc0:	fb92 f0f0 	sdiv	r0, r2, r0
 801afc4:	b280      	uxth	r0, r0
 801afc6:	9010      	str	r0, [sp, #64]	; 0x40
 801afc8:	9901      	ldr	r1, [sp, #4]
 801afca:	9801      	ldr	r0, [sp, #4]
 801afcc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801afce:	440e      	add	r6, r1
 801afd0:	fb05 2510 	mls	r5, r5, r0, r2
 801afd4:	fb15 f503 	smulbb	r5, r5, r3
 801afd8:	3e01      	subs	r6, #1
 801afda:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801afde:	fb96 f6f1 	sdiv	r6, r6, r1
 801afe2:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801afe6:	440d      	add	r5, r1
 801afe8:	4419      	add	r1, r3
 801afea:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801afee:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801aff2:	441a      	add	r2, r3
 801aff4:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801aff8:	9304      	str	r3, [sp, #16]
 801affa:	4b96      	ldr	r3, [pc, #600]	; (801b254 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801affc:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801b000:	6818      	ldr	r0, [r3, #0]
 801b002:	6803      	ldr	r3, [r0, #0]
 801b004:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b006:	4798      	blx	r3
 801b008:	4b93      	ldr	r3, [pc, #588]	; (801b258 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801b00a:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801b00e:	881a      	ldrh	r2, [r3, #0]
 801b010:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801b014:	9318      	str	r3, [sp, #96]	; 0x60
 801b016:	fb02 c101 	mla	r1, r2, r1, ip
 801b01a:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801b01e:	4357      	muls	r7, r2
 801b020:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801b024:	3601      	adds	r6, #1
 801b026:	920b      	str	r2, [sp, #44]	; 0x2c
 801b028:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b02a:	4b8c      	ldr	r3, [pc, #560]	; (801b25c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801b02c:	b2b6      	uxth	r6, r6
 801b02e:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801b032:	1d32      	adds	r2, r6, #4
 801b034:	9206      	str	r2, [sp, #24]
 801b036:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801b038:	43d2      	mvns	r2, r2
 801b03a:	b2d2      	uxtb	r2, r2
 801b03c:	b2ad      	uxth	r5, r5
 801b03e:	9215      	str	r2, [sp, #84]	; 0x54
 801b040:	9a04      	ldr	r2, [sp, #16]
 801b042:	2d00      	cmp	r5, #0
 801b044:	bf0c      	ite	eq
 801b046:	4611      	moveq	r1, r2
 801b048:	2100      	movne	r1, #0
 801b04a:	2200      	movs	r2, #0
 801b04c:	1b1b      	subs	r3, r3, r4
 801b04e:	b289      	uxth	r1, r1
 801b050:	920d      	str	r2, [sp, #52]	; 0x34
 801b052:	9319      	str	r3, [sp, #100]	; 0x64
 801b054:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b056:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b058:	fa12 f383 	uxtah	r3, r2, r3
 801b05c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b05e:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801b062:	3304      	adds	r3, #4
 801b064:	9307      	str	r3, [sp, #28]
 801b066:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b068:	455b      	cmp	r3, fp
 801b06a:	f240 817c 	bls.w	801b366 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801b06e:	9a01      	ldr	r2, [sp, #4]
 801b070:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801b074:	fbb5 f3f3 	udiv	r3, r5, r3
 801b078:	1ad3      	subs	r3, r2, r3
 801b07a:	b29b      	uxth	r3, r3
 801b07c:	9316      	str	r3, [sp, #88]	; 0x58
 801b07e:	9b07      	ldr	r3, [sp, #28]
 801b080:	9807      	ldr	r0, [sp, #28]
 801b082:	785a      	ldrb	r2, [r3, #1]
 801b084:	789b      	ldrb	r3, [r3, #2]
 801b086:	7800      	ldrb	r0, [r0, #0]
 801b088:	9011      	str	r0, [sp, #68]	; 0x44
 801b08a:	021b      	lsls	r3, r3, #8
 801b08c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801b090:	9a07      	ldr	r2, [sp, #28]
 801b092:	78d2      	ldrb	r2, [r2, #3]
 801b094:	4313      	orrs	r3, r2
 801b096:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b098:	3001      	adds	r0, #1
 801b09a:	441a      	add	r2, r3
 801b09c:	9005      	str	r0, [sp, #20]
 801b09e:	1c50      	adds	r0, r2, #1
 801b0a0:	9003      	str	r0, [sp, #12]
 801b0a2:	7852      	ldrb	r2, [r2, #1]
 801b0a4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b0a6:	0212      	lsls	r2, r2, #8
 801b0a8:	5cc3      	ldrb	r3, [r0, r3]
 801b0aa:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801b0ae:	431a      	orrs	r2, r3
 801b0b0:	b293      	uxth	r3, r2
 801b0b2:	930c      	str	r3, [sp, #48]	; 0x30
 801b0b4:	2300      	movs	r3, #0
 801b0b6:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801b0ba:	9308      	str	r3, [sp, #32]
 801b0bc:	461a      	mov	r2, r3
 801b0be:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801b0c2:	930e      	str	r3, [sp, #56]	; 0x38
 801b0c4:	f04f 0801 	mov.w	r8, #1
 801b0c8:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801b0cc:	f8cd 8008 	str.w	r8, [sp, #8]
 801b0d0:	46c4      	mov	ip, r8
 801b0d2:	930f      	str	r3, [sp, #60]	; 0x3c
 801b0d4:	2d00      	cmp	r5, #0
 801b0d6:	d07c      	beq.n	801b1d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801b0d8:	45ac      	cmp	ip, r5
 801b0da:	d26c      	bcs.n	801b1b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801b0dc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b0de:	eba5 050c 	sub.w	r5, r5, ip
 801b0e2:	455b      	cmp	r3, fp
 801b0e4:	b2ad      	uxth	r5, r5
 801b0e6:	4608      	mov	r0, r1
 801b0e8:	d802      	bhi.n	801b0f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801b0ea:	e070      	b.n	801b1ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801b0ec:	2b00      	cmp	r3, #0
 801b0ee:	d15c      	bne.n	801b1aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801b0f0:	9b03      	ldr	r3, [sp, #12]
 801b0f2:	9a02      	ldr	r2, [sp, #8]
 801b0f4:	785b      	ldrb	r3, [r3, #1]
 801b0f6:	9902      	ldr	r1, [sp, #8]
 801b0f8:	f1c2 0207 	rsb	r2, r2, #7
 801b0fc:	4093      	lsls	r3, r2
 801b0fe:	005b      	lsls	r3, r3, #1
 801b100:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801b104:	9b03      	ldr	r3, [sp, #12]
 801b106:	781b      	ldrb	r3, [r3, #0]
 801b108:	410b      	asrs	r3, r1
 801b10a:	3101      	adds	r1, #1
 801b10c:	b2c9      	uxtb	r1, r1
 801b10e:	2908      	cmp	r1, #8
 801b110:	9102      	str	r1, [sp, #8]
 801b112:	9903      	ldr	r1, [sp, #12]
 801b114:	bf0a      	itet	eq
 801b116:	3102      	addeq	r1, #2
 801b118:	3101      	addne	r1, #1
 801b11a:	9103      	streq	r1, [sp, #12]
 801b11c:	b2db      	uxtb	r3, r3
 801b11e:	bf0a      	itet	eq
 801b120:	2100      	moveq	r1, #0
 801b122:	9103      	strne	r1, [sp, #12]
 801b124:	9102      	streq	r1, [sp, #8]
 801b126:	4313      	orrs	r3, r2
 801b128:	9911      	ldr	r1, [sp, #68]	; 0x44
 801b12a:	b29a      	uxth	r2, r3
 801b12c:	4291      	cmp	r1, r2
 801b12e:	d30a      	bcc.n	801b146 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801b130:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801b134:	2301      	movs	r3, #1
 801b136:	9905      	ldr	r1, [sp, #20]
 801b138:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801b13c:	d30f      	bcc.n	801b15e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801b13e:	2100      	movs	r1, #0
 801b140:	4698      	mov	r8, r3
 801b142:	9100      	str	r1, [sp, #0]
 801b144:	e032      	b.n	801b1ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801b146:	9b05      	ldr	r3, [sp, #20]
 801b148:	429a      	cmp	r2, r3
 801b14a:	d318      	bcc.n	801b17e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801b14c:	eb04 0308 	add.w	r3, r4, r8
 801b150:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801b154:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801b158:	f108 0301 	add.w	r3, r8, #1
 801b15c:	b29b      	uxth	r3, r3
 801b15e:	9905      	ldr	r1, [sp, #20]
 801b160:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801b164:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801b168:	710e      	strb	r6, [r1, #4]
 801b16a:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801b16c:	80ce      	strh	r6, [r1, #6]
 801b16e:	f108 0601 	add.w	r6, r8, #1
 801b172:	714e      	strb	r6, [r1, #5]
 801b174:	9905      	ldr	r1, [sp, #20]
 801b176:	3101      	adds	r1, #1
 801b178:	b289      	uxth	r1, r1
 801b17a:	9105      	str	r1, [sp, #20]
 801b17c:	e7df      	b.n	801b13e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801b17e:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801b182:	4611      	mov	r1, r2
 801b184:	795b      	ldrb	r3, [r3, #5]
 801b186:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801b18a:	4426      	add	r6, r4
 801b18c:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801b18e:	4437      	add	r7, r6
 801b190:	2f00      	cmp	r7, #0
 801b192:	dd06      	ble.n	801b1a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801b194:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801b198:	790f      	ldrb	r7, [r1, #4]
 801b19a:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801b19e:	88c9      	ldrh	r1, [r1, #6]
 801b1a0:	e7f4      	b.n	801b18c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801b1a2:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801b1a6:	b29b      	uxth	r3, r3
 801b1a8:	e7c5      	b.n	801b136 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801b1aa:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801b1ac:	920c      	str	r2, [sp, #48]	; 0x30
 801b1ae:	4601      	mov	r1, r0
 801b1b0:	9a00      	ldr	r2, [sp, #0]
 801b1b2:	469c      	mov	ip, r3
 801b1b4:	e78e      	b.n	801b0d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801b1b6:	1957      	adds	r7, r2, r5
 801b1b8:	ebac 0305 	sub.w	r3, ip, r5
 801b1bc:	b2ba      	uxth	r2, r7
 801b1be:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801b1c2:	9200      	str	r2, [sp, #0]
 801b1c4:	b29b      	uxth	r3, r3
 801b1c6:	2500      	movs	r5, #0
 801b1c8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801b1ca:	455a      	cmp	r2, fp
 801b1cc:	d88e      	bhi.n	801b0ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801b1ce:	4601      	mov	r1, r0
 801b1d0:	e749      	b.n	801b066 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801b1d2:	458c      	cmp	ip, r1
 801b1d4:	bf2c      	ite	cs
 801b1d6:	4628      	movcs	r0, r5
 801b1d8:	462b      	movcc	r3, r5
 801b1da:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801b1dc:	bf27      	ittee	cs
 801b1de:	9109      	strcs	r1, [sp, #36]	; 0x24
 801b1e0:	ebac 0301 	subcs.w	r3, ip, r1
 801b1e4:	eba1 000c 	subcc.w	r0, r1, ip
 801b1e8:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801b1ec:	bf2c      	ite	cs
 801b1ee:	b29b      	uxthcs	r3, r3
 801b1f0:	b280      	uxthcc	r0, r0
 801b1f2:	2dff      	cmp	r5, #255	; 0xff
 801b1f4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801b1f6:	eb02 0705 	add.w	r7, r2, r5
 801b1fa:	b2bd      	uxth	r5, r7
 801b1fc:	9500      	str	r5, [sp, #0]
 801b1fe:	d12f      	bne.n	801b260 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801b200:	465e      	mov	r6, fp
 801b202:	9d00      	ldr	r5, [sp, #0]
 801b204:	42aa      	cmp	r2, r5
 801b206:	f040 8084 	bne.w	801b312 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801b20a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801b20c:	458c      	cmp	ip, r1
 801b20e:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801b212:	d3d8      	bcc.n	801b1c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801b214:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801b216:	9904      	ldr	r1, [sp, #16]
 801b218:	8812      	ldrh	r2, [r2, #0]
 801b21a:	1a52      	subs	r2, r2, r1
 801b21c:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801b220:	9a08      	ldr	r2, [sp, #32]
 801b222:	9916      	ldr	r1, [sp, #88]	; 0x58
 801b224:	3201      	adds	r2, #1
 801b226:	428a      	cmp	r2, r1
 801b228:	9208      	str	r2, [sp, #32]
 801b22a:	f040 8092 	bne.w	801b352 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801b22e:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801b232:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801b236:	9b04      	ldr	r3, [sp, #16]
 801b238:	eba5 050c 	sub.w	r5, r5, ip
 801b23c:	b2ad      	uxth	r5, r5
 801b23e:	2d00      	cmp	r5, #0
 801b240:	bf08      	it	eq
 801b242:	4619      	moveq	r1, r3
 801b244:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b246:	bf18      	it	ne
 801b248:	2100      	movne	r1, #0
 801b24a:	3301      	adds	r3, #1
 801b24c:	930d      	str	r3, [sp, #52]	; 0x34
 801b24e:	b289      	uxth	r1, r1
 801b250:	e700      	b.n	801b054 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801b252:	bf00      	nop
 801b254:	200137bc 	.word	0x200137bc
 801b258:	200137b6 	.word	0x200137b6
 801b25c:	fffff7fb 	.word	0xfffff7fb
 801b260:	46d9      	mov	r9, fp
 801b262:	9d00      	ldr	r5, [sp, #0]
 801b264:	42aa      	cmp	r2, r5
 801b266:	d0d0      	beq.n	801b20a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801b268:	1c55      	adds	r5, r2, #1
 801b26a:	4422      	add	r2, r4
 801b26c:	9517      	str	r5, [sp, #92]	; 0x5c
 801b26e:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801b272:	9a06      	ldr	r2, [sp, #24]
 801b274:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801b278:	4472      	add	r2, lr
 801b27a:	9212      	str	r2, [sp, #72]	; 0x48
 801b27c:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801b27e:	f8b9 2000 	ldrh.w	r2, [r9]
 801b282:	f897 a002 	ldrb.w	sl, [r7, #2]
 801b286:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801b288:	1216      	asrs	r6, r2, #8
 801b28a:	fb1a fa07 	smulbb	sl, sl, r7
 801b28e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b292:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801b294:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801b298:	fb06 a607 	mla	r6, r6, r7, sl
 801b29c:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801b29e:	f897 a001 	ldrb.w	sl, [r7, #1]
 801b2a2:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801b2a4:	10d5      	asrs	r5, r2, #3
 801b2a6:	fb1a fa07 	smulbb	sl, sl, r7
 801b2aa:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801b2ae:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801b2b0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801b2b4:	fb05 a507 	mla	r5, r5, r7, sl
 801b2b8:	9f06      	ldr	r7, [sp, #24]
 801b2ba:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801b2be:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801b2c0:	00d2      	lsls	r2, r2, #3
 801b2c2:	fb1e fe07 	smulbb	lr, lr, r7
 801b2c6:	b2d2      	uxtb	r2, r2
 801b2c8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801b2ca:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801b2ce:	b2b6      	uxth	r6, r6
 801b2d0:	fb02 e207 	mla	r2, r2, r7, lr
 801b2d4:	b292      	uxth	r2, r2
 801b2d6:	b2ad      	uxth	r5, r5
 801b2d8:	f106 0a01 	add.w	sl, r6, #1
 801b2dc:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801b2e0:	f102 0e01 	add.w	lr, r2, #1
 801b2e4:	f105 0a01 	add.w	sl, r5, #1
 801b2e8:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801b2ec:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b2f0:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801b2f4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801b2f8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b2fc:	ea4e 0606 	orr.w	r6, lr, r6
 801b300:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b304:	ea46 060a 	orr.w	r6, r6, sl
 801b308:	f829 6b02 	strh.w	r6, [r9], #2
 801b30c:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801b310:	e7a7      	b.n	801b262 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801b312:	f102 0e01 	add.w	lr, r2, #1
 801b316:	4422      	add	r2, r4
 801b318:	9f06      	ldr	r7, [sp, #24]
 801b31a:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801b31e:	9a06      	ldr	r2, [sp, #24]
 801b320:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801b324:	eb02 0a05 	add.w	sl, r2, r5
 801b328:	4a13      	ldr	r2, [pc, #76]	; (801b378 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801b32a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801b32e:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801b332:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801b336:	00d2      	lsls	r2, r2, #3
 801b338:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b33c:	ea49 0202 	orr.w	r2, r9, r2
 801b340:	f817 9005 	ldrb.w	r9, [r7, r5]
 801b344:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801b348:	f826 2b02 	strh.w	r2, [r6], #2
 801b34c:	fa1f f28e 	uxth.w	r2, lr
 801b350:	e757      	b.n	801b202 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801b352:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801b356:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801b35a:	1a2d      	subs	r5, r5, r0
 801b35c:	b2ad      	uxth	r5, r5
 801b35e:	2d00      	cmp	r5, #0
 801b360:	bf18      	it	ne
 801b362:	2000      	movne	r0, #0
 801b364:	e730      	b.n	801b1c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801b366:	4b05      	ldr	r3, [pc, #20]	; (801b37c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801b368:	6818      	ldr	r0, [r3, #0]
 801b36a:	6803      	ldr	r3, [r0, #0]
 801b36c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b36e:	4798      	blx	r3
 801b370:	b01f      	add	sp, #124	; 0x7c
 801b372:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b376:	bf00      	nop
 801b378:	fffff800 	.word	0xfffff800
 801b37c:	200137bc 	.word	0x200137bc

0801b380 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801b380:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b384:	b091      	sub	sp, #68	; 0x44
 801b386:	469b      	mov	fp, r3
 801b388:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801b38c:	4616      	mov	r6, r2
 801b38e:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801b392:	f9b3 2000 	ldrsh.w	r2, [r3]
 801b396:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801b39a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801b39e:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801b3a2:	4604      	mov	r4, r0
 801b3a4:	460d      	mov	r5, r1
 801b3a6:	4640      	mov	r0, r8
 801b3a8:	4659      	mov	r1, fp
 801b3aa:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801b3ae:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801b3b2:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801b3b6:	f7f3 fc11 	bl	800ebdc <_ZN8touchgfx4RectaNERKS0_>
 801b3ba:	4631      	mov	r1, r6
 801b3bc:	4640      	mov	r0, r8
 801b3be:	f7f3 fc0d 	bl	800ebdc <_ZN8touchgfx4RectaNERKS0_>
 801b3c2:	4b74      	ldr	r3, [pc, #464]	; (801b594 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801b3c4:	8818      	ldrh	r0, [r3, #0]
 801b3c6:	4b74      	ldr	r3, [pc, #464]	; (801b598 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801b3c8:	8819      	ldrh	r1, [r3, #0]
 801b3ca:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801b3ce:	2b00      	cmp	r3, #0
 801b3d0:	b202      	sxth	r2, r0
 801b3d2:	b20e      	sxth	r6, r1
 801b3d4:	da07      	bge.n	801b3e6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801b3d6:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801b3da:	4463      	add	r3, ip
 801b3dc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801b3e0:	2300      	movs	r3, #0
 801b3e2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801b3e6:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801b3ea:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801b3ee:	1ad2      	subs	r2, r2, r3
 801b3f0:	4594      	cmp	ip, r2
 801b3f2:	bfc4      	itt	gt
 801b3f4:	1ac2      	subgt	r2, r0, r3
 801b3f6:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801b3fa:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801b3fe:	2a00      	cmp	r2, #0
 801b400:	da07      	bge.n	801b412 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801b402:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801b406:	4462      	add	r2, ip
 801b408:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801b40c:	2200      	movs	r2, #0
 801b40e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801b412:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801b416:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801b41a:	eba6 060a 	sub.w	r6, r6, sl
 801b41e:	42b2      	cmp	r2, r6
 801b420:	bfc4      	itt	gt
 801b422:	eba1 020a 	subgt.w	r2, r1, sl
 801b426:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801b42a:	4a5c      	ldr	r2, [pc, #368]	; (801b59c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801b42c:	7812      	ldrb	r2, [r2, #0]
 801b42e:	b9a2      	cbnz	r2, 801b45a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801b430:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801b434:	4286      	cmp	r6, r0
 801b436:	4640      	mov	r0, r8
 801b438:	9303      	str	r3, [sp, #12]
 801b43a:	bf14      	ite	ne
 801b43c:	2600      	movne	r6, #0
 801b43e:	2601      	moveq	r6, #1
 801b440:	f7f3 fc0f 	bl	800ec62 <_ZNK8touchgfx4Rect7isEmptyEv>
 801b444:	9b03      	ldr	r3, [sp, #12]
 801b446:	b160      	cbz	r0, 801b462 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801b448:	2300      	movs	r3, #0
 801b44a:	8023      	strh	r3, [r4, #0]
 801b44c:	8063      	strh	r3, [r4, #2]
 801b44e:	80a3      	strh	r3, [r4, #4]
 801b450:	4620      	mov	r0, r4
 801b452:	80e3      	strh	r3, [r4, #6]
 801b454:	b011      	add	sp, #68	; 0x44
 801b456:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b45a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801b45e:	428e      	cmp	r6, r1
 801b460:	e7e9      	b.n	801b436 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801b462:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801b466:	9205      	str	r2, [sp, #20]
 801b468:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801b46c:	9206      	str	r2, [sp, #24]
 801b46e:	f8bb 2000 	ldrh.w	r2, [fp]
 801b472:	900e      	str	r0, [sp, #56]	; 0x38
 801b474:	1a9b      	subs	r3, r3, r2
 801b476:	b21b      	sxth	r3, r3
 801b478:	9303      	str	r3, [sp, #12]
 801b47a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801b47e:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801b482:	ebaa 0a03 	sub.w	sl, sl, r3
 801b486:	fa0f f38a 	sxth.w	r3, sl
 801b48a:	9304      	str	r3, [sp, #16]
 801b48c:	9b03      	ldr	r3, [sp, #12]
 801b48e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801b492:	9b04      	ldr	r3, [sp, #16]
 801b494:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801b498:	9b05      	ldr	r3, [sp, #20]
 801b49a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801b49e:	a90e      	add	r1, sp, #56	; 0x38
 801b4a0:	9b06      	ldr	r3, [sp, #24]
 801b4a2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801b4a6:	a80c      	add	r0, sp, #48	; 0x30
 801b4a8:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801b4ac:	f7f8 fb38 	bl	8013b20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b4b0:	4640      	mov	r0, r8
 801b4b2:	f7f8 faf1 	bl	8013a98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b4b6:	a80e      	add	r0, sp, #56	; 0x38
 801b4b8:	f7f8 faee 	bl	8013a98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b4bc:	4b38      	ldr	r3, [pc, #224]	; (801b5a0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801b4be:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801b4c2:	881b      	ldrh	r3, [r3, #0]
 801b4c4:	9307      	str	r3, [sp, #28]
 801b4c6:	682b      	ldr	r3, [r5, #0]
 801b4c8:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801b5a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801b4cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801b4ce:	4628      	mov	r0, r5
 801b4d0:	4798      	blx	r3
 801b4d2:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801b4d6:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801b4da:	4681      	mov	r9, r0
 801b4dc:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801b4e0:	f8db 0000 	ldr.w	r0, [fp]
 801b4e4:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801b4e6:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801b4ea:	6803      	ldr	r3, [r0, #0]
 801b4ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801b4ee:	4798      	blx	r3
 801b4f0:	4607      	mov	r7, r0
 801b4f2:	f8db 0000 	ldr.w	r0, [fp]
 801b4f6:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801b4fa:	6803      	ldr	r3, [r0, #0]
 801b4fc:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801b500:	9109      	str	r1, [sp, #36]	; 0x24
 801b502:	9208      	str	r2, [sp, #32]
 801b504:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801b506:	4798      	blx	r3
 801b508:	f010 0f01 	tst.w	r0, #1
 801b50c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801b510:	d012      	beq.n	801b538 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801b512:	f8db 0000 	ldr.w	r0, [fp]
 801b516:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801b51a:	6803      	ldr	r3, [r0, #0]
 801b51c:	9200      	str	r2, [sp, #0]
 801b51e:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801b520:	e898 0006 	ldmia.w	r8, {r1, r2}
 801b524:	462b      	mov	r3, r5
 801b526:	47b0      	blx	r6
 801b528:	9b03      	ldr	r3, [sp, #12]
 801b52a:	8023      	strh	r3, [r4, #0]
 801b52c:	9b04      	ldr	r3, [sp, #16]
 801b52e:	8063      	strh	r3, [r4, #2]
 801b530:	9b05      	ldr	r3, [sp, #20]
 801b532:	80a3      	strh	r3, [r4, #4]
 801b534:	9b06      	ldr	r3, [sp, #24]
 801b536:	e78b      	b.n	801b450 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801b538:	fb09 f202 	mul.w	r2, r9, r2
 801b53c:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801b540:	440f      	add	r7, r1
 801b542:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801b546:	b166      	cbz	r6, 801b562 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801b548:	9a07      	ldr	r2, [sp, #28]
 801b54a:	4592      	cmp	sl, r2
 801b54c:	d109      	bne.n	801b562 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801b54e:	f8db 0000 	ldr.w	r0, [fp]
 801b552:	6802      	ldr	r2, [r0, #0]
 801b554:	fb09 f303 	mul.w	r3, r9, r3
 801b558:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801b55a:	4629      	mov	r1, r5
 801b55c:	463a      	mov	r2, r7
 801b55e:	47b0      	blx	r6
 801b560:	e7e2      	b.n	801b528 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801b562:	fb0a f303 	mul.w	r3, sl, r3
 801b566:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801b5a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801b56a:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801b56e:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801b572:	4545      	cmp	r5, r8
 801b574:	d2d8      	bcs.n	801b528 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801b576:	f8db 0000 	ldr.w	r0, [fp]
 801b57a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801b57e:	6802      	ldr	r2, [r0, #0]
 801b580:	4629      	mov	r1, r5
 801b582:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801b586:	005b      	lsls	r3, r3, #1
 801b588:	463a      	mov	r2, r7
 801b58a:	47d0      	blx	sl
 801b58c:	444f      	add	r7, r9
 801b58e:	4435      	add	r5, r6
 801b590:	e7ef      	b.n	801b572 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801b592:	bf00      	nop
 801b594:	200137b0 	.word	0x200137b0
 801b598:	200137b2 	.word	0x200137b2
 801b59c:	200137b4 	.word	0x200137b4
 801b5a0:	200137b6 	.word	0x200137b6
 801b5a4:	200137bc 	.word	0x200137bc

0801b5a8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801b5a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b5aa:	4606      	mov	r6, r0
 801b5ac:	b087      	sub	sp, #28
 801b5ae:	460c      	mov	r4, r1
 801b5b0:	4617      	mov	r7, r2
 801b5b2:	461d      	mov	r5, r3
 801b5b4:	b333      	cbz	r3, 801b604 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801b5b6:	4608      	mov	r0, r1
 801b5b8:	f7f3 fb53 	bl	800ec62 <_ZNK8touchgfx4Rect7isEmptyEv>
 801b5bc:	bb10      	cbnz	r0, 801b604 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801b5be:	6820      	ldr	r0, [r4, #0]
 801b5c0:	6861      	ldr	r1, [r4, #4]
 801b5c2:	4c1c      	ldr	r4, [pc, #112]	; (801b634 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801b5c4:	ab04      	add	r3, sp, #16
 801b5c6:	c303      	stmia	r3!, {r0, r1}
 801b5c8:	a804      	add	r0, sp, #16
 801b5ca:	f7f8 fa65 	bl	8013a98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b5ce:	6820      	ldr	r0, [r4, #0]
 801b5d0:	6803      	ldr	r3, [r0, #0]
 801b5d2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801b5d4:	4798      	blx	r3
 801b5d6:	2dff      	cmp	r5, #255	; 0xff
 801b5d8:	d016      	beq.n	801b608 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801b5da:	f010 0f08 	tst.w	r0, #8
 801b5de:	6820      	ldr	r0, [r4, #0]
 801b5e0:	d015      	beq.n	801b60e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801b5e2:	2400      	movs	r4, #0
 801b5e4:	6801      	ldr	r1, [r0, #0]
 801b5e6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801b5ea:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b5ee:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801b5f2:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801b5f6:	9401      	str	r4, [sp, #4]
 801b5f8:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801b5fc:	9400      	str	r4, [sp, #0]
 801b5fe:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801b600:	4639      	mov	r1, r7
 801b602:	47a0      	blx	r4
 801b604:	b007      	add	sp, #28
 801b606:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801b608:	f010 0f02 	tst.w	r0, #2
 801b60c:	e7e7      	b.n	801b5de <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801b60e:	6803      	ldr	r3, [r0, #0]
 801b610:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b612:	4798      	blx	r3
 801b614:	4b08      	ldr	r3, [pc, #32]	; (801b638 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801b616:	881a      	ldrh	r2, [r3, #0]
 801b618:	6833      	ldr	r3, [r6, #0]
 801b61a:	e9cd 7500 	strd	r7, r5, [sp]
 801b61e:	4601      	mov	r1, r0
 801b620:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801b622:	4630      	mov	r0, r6
 801b624:	ab04      	add	r3, sp, #16
 801b626:	47a8      	blx	r5
 801b628:	6820      	ldr	r0, [r4, #0]
 801b62a:	6803      	ldr	r3, [r0, #0]
 801b62c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b62e:	4798      	blx	r3
 801b630:	e7e8      	b.n	801b604 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801b632:	bf00      	nop
 801b634:	200137bc 	.word	0x200137bc
 801b638:	200137b6 	.word	0x200137b6

0801b63c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801b63c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b640:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801b644:	9e08      	ldr	r6, [sp, #32]
 801b646:	4688      	mov	r8, r1
 801b648:	4614      	mov	r4, r2
 801b64a:	461d      	mov	r5, r3
 801b64c:	2f00      	cmp	r7, #0
 801b64e:	f000 80a9 	beq.w	801b7a4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801b652:	4618      	mov	r0, r3
 801b654:	f7f3 fb05 	bl	800ec62 <_ZNK8touchgfx4Rect7isEmptyEv>
 801b658:	2800      	cmp	r0, #0
 801b65a:	f040 80a3 	bne.w	801b7a4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801b65e:	f9b5 1000 	ldrsh.w	r1, [r5]
 801b662:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801b666:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801b66a:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801b66e:	fb04 1303 	mla	r3, r4, r3, r1
 801b672:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801b676:	4365      	muls	r5, r4
 801b678:	2fff      	cmp	r7, #255	; 0xff
 801b67a:	eba4 0200 	sub.w	r2, r4, r0
 801b67e:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801b682:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801b686:	d04a      	beq.n	801b71e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801b688:	b2bc      	uxth	r4, r7
 801b68a:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801b68e:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801b692:	fa5f f788 	uxtb.w	r7, r8
 801b696:	b2f3      	uxtb	r3, r6
 801b698:	0040      	lsls	r0, r0, #1
 801b69a:	fb0e fe04 	mul.w	lr, lr, r4
 801b69e:	4367      	muls	r7, r4
 801b6a0:	4363      	muls	r3, r4
 801b6a2:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801b6a6:	fa1f fc8c 	uxth.w	ip, ip
 801b6aa:	42a9      	cmp	r1, r5
 801b6ac:	d27a      	bcs.n	801b7a4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801b6ae:	eb01 0900 	add.w	r9, r1, r0
 801b6b2:	4549      	cmp	r1, r9
 801b6b4:	d231      	bcs.n	801b71a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801b6b6:	880a      	ldrh	r2, [r1, #0]
 801b6b8:	1214      	asrs	r4, r2, #8
 801b6ba:	10d6      	asrs	r6, r2, #3
 801b6bc:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801b6c0:	00d2      	lsls	r2, r2, #3
 801b6c2:	b2d2      	uxtb	r2, r2
 801b6c4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801b6c8:	fb14 f40c 	smulbb	r4, r4, ip
 801b6cc:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801b6d0:	4474      	add	r4, lr
 801b6d2:	fb12 f20c 	smulbb	r2, r2, ip
 801b6d6:	b2a4      	uxth	r4, r4
 801b6d8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b6dc:	441a      	add	r2, r3
 801b6de:	b292      	uxth	r2, r2
 801b6e0:	f104 0a01 	add.w	sl, r4, #1
 801b6e4:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801b6e8:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801b6ec:	fb16 f60c 	smulbb	r6, r6, ip
 801b6f0:	f102 0a01 	add.w	sl, r2, #1
 801b6f4:	443e      	add	r6, r7
 801b6f6:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801b6fa:	b2b6      	uxth	r6, r6
 801b6fc:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801b700:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b704:	4322      	orrs	r2, r4
 801b706:	1c74      	adds	r4, r6, #1
 801b708:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801b70c:	0976      	lsrs	r6, r6, #5
 801b70e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b712:	4332      	orrs	r2, r6
 801b714:	f821 2b02 	strh.w	r2, [r1], #2
 801b718:	e7cb      	b.n	801b6b2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801b71a:	4441      	add	r1, r8
 801b71c:	e7c5      	b.n	801b6aa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801b71e:	4f22      	ldr	r7, [pc, #136]	; (801b7a8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801b720:	0973      	lsrs	r3, r6, #5
 801b722:	ea08 0707 	and.w	r7, r8, r7
 801b726:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b72a:	433b      	orrs	r3, r7
 801b72c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801b730:	4333      	orrs	r3, r6
 801b732:	07e7      	lsls	r7, r4, #31
 801b734:	b29b      	uxth	r3, r3
 801b736:	d50b      	bpl.n	801b750 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801b738:	0040      	lsls	r0, r0, #1
 801b73a:	0052      	lsls	r2, r2, #1
 801b73c:	42a9      	cmp	r1, r5
 801b73e:	d231      	bcs.n	801b7a4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801b740:	180c      	adds	r4, r1, r0
 801b742:	42a1      	cmp	r1, r4
 801b744:	d202      	bcs.n	801b74c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801b746:	f821 3b02 	strh.w	r3, [r1], #2
 801b74a:	e7fa      	b.n	801b742 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801b74c:	4411      	add	r1, r2
 801b74e:	e7f5      	b.n	801b73c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801b750:	078e      	lsls	r6, r1, #30
 801b752:	d008      	beq.n	801b766 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801b754:	0066      	lsls	r6, r4, #1
 801b756:	460a      	mov	r2, r1
 801b758:	42aa      	cmp	r2, r5
 801b75a:	d202      	bcs.n	801b762 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801b75c:	8013      	strh	r3, [r2, #0]
 801b75e:	4432      	add	r2, r6
 801b760:	e7fa      	b.n	801b758 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801b762:	3102      	adds	r1, #2
 801b764:	3801      	subs	r0, #1
 801b766:	07c2      	lsls	r2, r0, #31
 801b768:	d50b      	bpl.n	801b782 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801b76a:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801b76e:	3a01      	subs	r2, #1
 801b770:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801b774:	0066      	lsls	r6, r4, #1
 801b776:	42aa      	cmp	r2, r5
 801b778:	d202      	bcs.n	801b780 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801b77a:	8013      	strh	r3, [r2, #0]
 801b77c:	4432      	add	r2, r6
 801b77e:	e7fa      	b.n	801b776 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801b780:	3801      	subs	r0, #1
 801b782:	b178      	cbz	r0, 801b7a4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801b784:	1040      	asrs	r0, r0, #1
 801b786:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801b78a:	0080      	lsls	r0, r0, #2
 801b78c:	0064      	lsls	r4, r4, #1
 801b78e:	42a9      	cmp	r1, r5
 801b790:	d208      	bcs.n	801b7a4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801b792:	180e      	adds	r6, r1, r0
 801b794:	460a      	mov	r2, r1
 801b796:	42b2      	cmp	r2, r6
 801b798:	d202      	bcs.n	801b7a0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801b79a:	f842 3b04 	str.w	r3, [r2], #4
 801b79e:	e7fa      	b.n	801b796 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801b7a0:	4421      	add	r1, r4
 801b7a2:	e7f4      	b.n	801b78e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801b7a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b7a8:	00fff800 	.word	0x00fff800

0801b7ac <_ZN8touchgfx8LCD16bppC1Ev>:
 801b7ac:	2200      	movs	r2, #0
 801b7ae:	4912      	ldr	r1, [pc, #72]	; (801b7f8 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801b7b0:	6042      	str	r2, [r0, #4]
 801b7b2:	6001      	str	r1, [r0, #0]
 801b7b4:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801b7b8:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801b7bc:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801b7c0:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801b7c4:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801b7c8:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801b7cc:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801b7d0:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801b7d4:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801b7d8:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801b7dc:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801b7e0:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801b7e4:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801b7e8:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801b7ec:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801b7f0:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801b7f4:	4770      	bx	lr
 801b7f6:	bf00      	nop
 801b7f8:	0802bbdc 	.word	0x0802bbdc

0801b7fc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801b7fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b800:	460d      	mov	r5, r1
 801b802:	b08d      	sub	sp, #52	; 0x34
 801b804:	4604      	mov	r4, r0
 801b806:	6808      	ldr	r0, [r1, #0]
 801b808:	6849      	ldr	r1, [r1, #4]
 801b80a:	4699      	mov	r9, r3
 801b80c:	ab08      	add	r3, sp, #32
 801b80e:	c303      	stmia	r3!, {r0, r1}
 801b810:	6810      	ldr	r0, [r2, #0]
 801b812:	6851      	ldr	r1, [r2, #4]
 801b814:	ab0a      	add	r3, sp, #40	; 0x28
 801b816:	c303      	stmia	r3!, {r0, r1}
 801b818:	a808      	add	r0, sp, #32
 801b81a:	f7f8 f93d 	bl	8013a98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b81e:	4629      	mov	r1, r5
 801b820:	a80a      	add	r0, sp, #40	; 0x28
 801b822:	f7f8 f97d 	bl	8013b20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b826:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801b82a:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801b82e:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801b832:	4d63      	ldr	r5, [pc, #396]	; (801b9c0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801b834:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801b838:	6828      	ldr	r0, [r5, #0]
 801b83a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801b83e:	fb11 2103 	smlabb	r1, r1, r3, r2
 801b842:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801b846:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801b84a:	440a      	add	r2, r1
 801b84c:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801b850:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801b854:	4413      	add	r3, r2
 801b856:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801b85a:	6803      	ldr	r3, [r0, #0]
 801b85c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801b85e:	4798      	blx	r3
 801b860:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801b864:	d119      	bne.n	801b89a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801b866:	f010 0f20 	tst.w	r0, #32
 801b86a:	6828      	ldr	r0, [r5, #0]
 801b86c:	d018      	beq.n	801b8a0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801b86e:	2500      	movs	r5, #0
 801b870:	6801      	ldr	r1, [r0, #0]
 801b872:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801b876:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801b87a:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801b87e:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801b882:	9502      	str	r5, [sp, #8]
 801b884:	b2b6      	uxth	r6, r6
 801b886:	fa1f f588 	uxth.w	r5, r8
 801b88a:	9601      	str	r6, [sp, #4]
 801b88c:	9500      	str	r5, [sp, #0]
 801b88e:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801b890:	4621      	mov	r1, r4
 801b892:	47a8      	blx	r5
 801b894:	b00d      	add	sp, #52	; 0x34
 801b896:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b89a:	f010 0f40 	tst.w	r0, #64	; 0x40
 801b89e:	e7e4      	b.n	801b86a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801b8a0:	6803      	ldr	r3, [r0, #0]
 801b8a2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b8a4:	4798      	blx	r3
 801b8a6:	4947      	ldr	r1, [pc, #284]	; (801b9c4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801b8a8:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801b8ac:	880b      	ldrh	r3, [r1, #0]
 801b8ae:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801b8b2:	fb03 5202 	mla	r2, r3, r2, r5
 801b8b6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b8ba:	4373      	muls	r3, r6
 801b8bc:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b8c0:	9307      	str	r3, [sp, #28]
 801b8c2:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801b8c6:	9306      	str	r3, [sp, #24]
 801b8c8:	468a      	mov	sl, r1
 801b8ca:	9b07      	ldr	r3, [sp, #28]
 801b8cc:	4298      	cmp	r0, r3
 801b8ce:	d270      	bcs.n	801b9b2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801b8d0:	9b06      	ldr	r3, [sp, #24]
 801b8d2:	4621      	mov	r1, r4
 801b8d4:	eb00 0b03 	add.w	fp, r0, r3
 801b8d8:	4558      	cmp	r0, fp
 801b8da:	d25d      	bcs.n	801b998 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801b8dc:	f851 4b04 	ldr.w	r4, [r1], #4
 801b8e0:	0e23      	lsrs	r3, r4, #24
 801b8e2:	d014      	beq.n	801b90e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801b8e4:	2bff      	cmp	r3, #255	; 0xff
 801b8e6:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801b8ea:	d112      	bne.n	801b912 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801b8ec:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801b8f0:	d10f      	bne.n	801b912 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801b8f2:	0963      	lsrs	r3, r4, #5
 801b8f4:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801b8f8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b8fc:	f02c 0c07 	bic.w	ip, ip, #7
 801b900:	ea43 0c0c 	orr.w	ip, r3, ip
 801b904:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801b908:	ea4c 0404 	orr.w	r4, ip, r4
 801b90c:	8004      	strh	r4, [r0, #0]
 801b90e:	3002      	adds	r0, #2
 801b910:	e7e2      	b.n	801b8d8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801b912:	fb09 f303 	mul.w	r3, r9, r3
 801b916:	8807      	ldrh	r7, [r0, #0]
 801b918:	1c5a      	adds	r2, r3, #1
 801b91a:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801b91e:	1212      	asrs	r2, r2, #8
 801b920:	123e      	asrs	r6, r7, #8
 801b922:	b293      	uxth	r3, r2
 801b924:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801b928:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b92c:	43d2      	mvns	r2, r2
 801b92e:	b2d2      	uxtb	r2, r2
 801b930:	10fd      	asrs	r5, r7, #3
 801b932:	fb1e fe03 	smulbb	lr, lr, r3
 801b936:	00ff      	lsls	r7, r7, #3
 801b938:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801b93c:	fb06 e602 	mla	r6, r6, r2, lr
 801b940:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801b944:	b2ff      	uxtb	r7, r7
 801b946:	fa5f fc8c 	uxtb.w	ip, ip
 801b94a:	b2e4      	uxtb	r4, r4
 801b94c:	b2b6      	uxth	r6, r6
 801b94e:	fb1c fc03 	smulbb	ip, ip, r3
 801b952:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801b956:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801b95a:	fb14 f403 	smulbb	r4, r4, r3
 801b95e:	fb05 c502 	mla	r5, r5, r2, ip
 801b962:	f106 0e01 	add.w	lr, r6, #1
 801b966:	fb07 4702 	mla	r7, r7, r2, r4
 801b96a:	b2ad      	uxth	r5, r5
 801b96c:	b2bf      	uxth	r7, r7
 801b96e:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801b972:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801b976:	f105 0c01 	add.w	ip, r5, #1
 801b97a:	1c7e      	adds	r6, r7, #1
 801b97c:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801b980:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801b984:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801b988:	096d      	lsrs	r5, r5, #5
 801b98a:	ea46 060e 	orr.w	r6, r6, lr
 801b98e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b992:	432e      	orrs	r6, r5
 801b994:	8006      	strh	r6, [r0, #0]
 801b996:	e7ba      	b.n	801b90e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801b998:	f8ba 3000 	ldrh.w	r3, [sl]
 801b99c:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801b9a0:	eba3 0308 	sub.w	r3, r3, r8
 801b9a4:	eba4 0408 	sub.w	r4, r4, r8
 801b9a8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b9ac:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801b9b0:	e78b      	b.n	801b8ca <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801b9b2:	4b03      	ldr	r3, [pc, #12]	; (801b9c0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801b9b4:	6818      	ldr	r0, [r3, #0]
 801b9b6:	6803      	ldr	r3, [r0, #0]
 801b9b8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b9ba:	4798      	blx	r3
 801b9bc:	e76a      	b.n	801b894 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801b9be:	bf00      	nop
 801b9c0:	200137bc 	.word	0x200137bc
 801b9c4:	200137b6 	.word	0x200137b6

0801b9c8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801b9c8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801b9cc:	460c      	mov	r4, r1
 801b9ce:	b085      	sub	sp, #20
 801b9d0:	6810      	ldr	r0, [r2, #0]
 801b9d2:	6851      	ldr	r1, [r2, #4]
 801b9d4:	466d      	mov	r5, sp
 801b9d6:	c503      	stmia	r5!, {r0, r1}
 801b9d8:	6818      	ldr	r0, [r3, #0]
 801b9da:	6859      	ldr	r1, [r3, #4]
 801b9dc:	4616      	mov	r6, r2
 801b9de:	c503      	stmia	r5!, {r0, r1}
 801b9e0:	4668      	mov	r0, sp
 801b9e2:	f7f8 f859 	bl	8013a98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b9e6:	4631      	mov	r1, r6
 801b9e8:	a802      	add	r0, sp, #8
 801b9ea:	f7f8 f899 	bl	8013b20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b9ee:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801b9f2:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801b9f6:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801b9fa:	4d28      	ldr	r5, [pc, #160]	; (801ba9c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801b9fc:	4e28      	ldr	r6, [pc, #160]	; (801baa0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801b9fe:	6828      	ldr	r0, [r5, #0]
 801ba00:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801ba04:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801ba08:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ba0c:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801ba10:	f8bd 1000 	ldrh.w	r1, [sp]
 801ba14:	440a      	add	r2, r1
 801ba16:	f8ad 2008 	strh.w	r2, [sp, #8]
 801ba1a:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801ba1e:	4413      	add	r3, r2
 801ba20:	f8ad 300a 	strh.w	r3, [sp, #10]
 801ba24:	6803      	ldr	r3, [r0, #0]
 801ba26:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ba28:	4798      	blx	r3
 801ba2a:	8833      	ldrh	r3, [r6, #0]
 801ba2c:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801ba30:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801ba34:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801baa4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801ba38:	fb03 1202 	mla	r2, r3, r2, r1
 801ba3c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ba40:	fb08 f303 	mul.w	r3, r8, r3
 801ba44:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ba48:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801ba4c:	4298      	cmp	r0, r3
 801ba4e:	d21d      	bcs.n	801ba8c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801ba50:	eb00 080c 	add.w	r8, r0, ip
 801ba54:	4540      	cmp	r0, r8
 801ba56:	d20f      	bcs.n	801ba78 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801ba58:	f854 1b04 	ldr.w	r1, [r4], #4
 801ba5c:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801ba60:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801ba64:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801ba68:	ea42 0209 	orr.w	r2, r2, r9
 801ba6c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801ba70:	430a      	orrs	r2, r1
 801ba72:	f820 2b02 	strh.w	r2, [r0], #2
 801ba76:	e7ed      	b.n	801ba54 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801ba78:	8832      	ldrh	r2, [r6, #0]
 801ba7a:	1bd2      	subs	r2, r2, r7
 801ba7c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ba80:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801ba84:	1bd2      	subs	r2, r2, r7
 801ba86:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801ba8a:	e7df      	b.n	801ba4c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801ba8c:	6828      	ldr	r0, [r5, #0]
 801ba8e:	6803      	ldr	r3, [r0, #0]
 801ba90:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ba92:	4798      	blx	r3
 801ba94:	b005      	add	sp, #20
 801ba96:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801ba9a:	bf00      	nop
 801ba9c:	200137bc 	.word	0x200137bc
 801baa0:	200137b6 	.word	0x200137b6
 801baa4:	fffff800 	.word	0xfffff800

0801baa8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801baa8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801baac:	460e      	mov	r6, r1
 801baae:	b08e      	sub	sp, #56	; 0x38
 801bab0:	4604      	mov	r4, r0
 801bab2:	6808      	ldr	r0, [r1, #0]
 801bab4:	6849      	ldr	r1, [r1, #4]
 801bab6:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801bc90 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801baba:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801bc94 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801babe:	461d      	mov	r5, r3
 801bac0:	ab0a      	add	r3, sp, #40	; 0x28
 801bac2:	c303      	stmia	r3!, {r0, r1}
 801bac4:	6810      	ldr	r0, [r2, #0]
 801bac6:	6851      	ldr	r1, [r2, #4]
 801bac8:	ab0c      	add	r3, sp, #48	; 0x30
 801baca:	c303      	stmia	r3!, {r0, r1}
 801bacc:	a80a      	add	r0, sp, #40	; 0x28
 801bace:	f7f7 ffe3 	bl	8013a98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bad2:	4631      	mov	r1, r6
 801bad4:	a80c      	add	r0, sp, #48	; 0x30
 801bad6:	f7f8 f823 	bl	8013b20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bada:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801bade:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801bae2:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801bae6:	f8d8 0000 	ldr.w	r0, [r8]
 801baea:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801baee:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801baf2:	fb11 2103 	smlabb	r1, r1, r3, r2
 801baf6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801bafa:	440c      	add	r4, r1
 801bafc:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801bb00:	440a      	add	r2, r1
 801bb02:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801bb06:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801bb0a:	4413      	add	r3, r2
 801bb0c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801bb10:	6803      	ldr	r3, [r0, #0]
 801bb12:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801bb14:	4798      	blx	r3
 801bb16:	2dff      	cmp	r5, #255	; 0xff
 801bb18:	d124      	bne.n	801bb64 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801bb1a:	f010 0f01 	tst.w	r0, #1
 801bb1e:	f8d8 0000 	ldr.w	r0, [r8]
 801bb22:	d022      	beq.n	801bb6a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801bb24:	2100      	movs	r1, #0
 801bb26:	f8d0 c000 	ldr.w	ip, [r0]
 801bb2a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801bb2e:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801bb32:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801bb36:	f04f 0e01 	mov.w	lr, #1
 801bb3a:	f8cd e018 	str.w	lr, [sp, #24]
 801bb3e:	f8b9 e000 	ldrh.w	lr, [r9]
 801bb42:	9503      	str	r5, [sp, #12]
 801bb44:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801bb48:	b2b6      	uxth	r6, r6
 801bb4a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801bb4e:	9102      	str	r1, [sp, #8]
 801bb50:	b2bf      	uxth	r7, r7
 801bb52:	9601      	str	r6, [sp, #4]
 801bb54:	9700      	str	r7, [sp, #0]
 801bb56:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801bb5a:	4621      	mov	r1, r4
 801bb5c:	47a8      	blx	r5
 801bb5e:	b00e      	add	sp, #56	; 0x38
 801bb60:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801bb64:	f010 0f04 	tst.w	r0, #4
 801bb68:	e7d9      	b.n	801bb1e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801bb6a:	6803      	ldr	r3, [r0, #0]
 801bb6c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801bb6e:	4798      	blx	r3
 801bb70:	f8b9 3000 	ldrh.w	r3, [r9]
 801bb74:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801bb78:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801bb7c:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801bb80:	fb03 1202 	mla	r2, r3, r2, r1
 801bb84:	ebac 0c07 	sub.w	ip, ip, r7
 801bb88:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801bb8c:	435e      	muls	r6, r3
 801bb8e:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801bb92:	2dff      	cmp	r5, #255	; 0xff
 801bb94:	eba3 0707 	sub.w	r7, r3, r7
 801bb98:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801bb9c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801bba0:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801bba4:	d049      	beq.n	801bc3a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801bba6:	43eb      	mvns	r3, r5
 801bba8:	fa1f f985 	uxth.w	r9, r5
 801bbac:	b2db      	uxtb	r3, r3
 801bbae:	42b0      	cmp	r0, r6
 801bbb0:	d266      	bcs.n	801bc80 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801bbb2:	eb00 0a0e 	add.w	sl, r0, lr
 801bbb6:	4550      	cmp	r0, sl
 801bbb8:	4621      	mov	r1, r4
 801bbba:	f104 0403 	add.w	r4, r4, #3
 801bbbe:	d25b      	bcs.n	801bc78 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801bbc0:	8802      	ldrh	r2, [r0, #0]
 801bbc2:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801bbc6:	ea4f 2822 	mov.w	r8, r2, asr #8
 801bbca:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801bbce:	fb11 f109 	smulbb	r1, r1, r9
 801bbd2:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801bbd6:	10d5      	asrs	r5, r2, #3
 801bbd8:	fb08 1803 	mla	r8, r8, r3, r1
 801bbdc:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801bbe0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801bbe4:	fb11 f109 	smulbb	r1, r1, r9
 801bbe8:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801bbec:	fb05 1503 	mla	r5, r5, r3, r1
 801bbf0:	00d2      	lsls	r2, r2, #3
 801bbf2:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801bbf6:	b2d2      	uxtb	r2, r2
 801bbf8:	fb11 f109 	smulbb	r1, r1, r9
 801bbfc:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801bc00:	fa1f f888 	uxth.w	r8, r8
 801bc04:	fb02 1203 	mla	r2, r2, r3, r1
 801bc08:	b292      	uxth	r2, r2
 801bc0a:	f108 0101 	add.w	r1, r8, #1
 801bc0e:	b2ad      	uxth	r5, r5
 801bc10:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801bc14:	1c51      	adds	r1, r2, #1
 801bc16:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801bc1a:	1c69      	adds	r1, r5, #1
 801bc1c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801bc20:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801bc24:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801bc28:	096d      	lsrs	r5, r5, #5
 801bc2a:	ea42 0208 	orr.w	r2, r2, r8
 801bc2e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bc32:	432a      	orrs	r2, r5
 801bc34:	f820 2b02 	strh.w	r2, [r0], #2
 801bc38:	e7bd      	b.n	801bbb6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801bc3a:	4a14      	ldr	r2, [pc, #80]	; (801bc8c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801bc3c:	42b0      	cmp	r0, r6
 801bc3e:	d21f      	bcs.n	801bc80 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801bc40:	eb00 050e 	add.w	r5, r0, lr
 801bc44:	42a8      	cmp	r0, r5
 801bc46:	4621      	mov	r1, r4
 801bc48:	f104 0403 	add.w	r4, r4, #3
 801bc4c:	d210      	bcs.n	801bc70 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801bc4e:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801bc52:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801bc56:	00db      	lsls	r3, r3, #3
 801bc58:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801bc5c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bc60:	430b      	orrs	r3, r1
 801bc62:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801bc66:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801bc6a:	f820 3b02 	strh.w	r3, [r0], #2
 801bc6e:	e7e9      	b.n	801bc44 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801bc70:	4438      	add	r0, r7
 801bc72:	eb01 040c 	add.w	r4, r1, ip
 801bc76:	e7e1      	b.n	801bc3c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801bc78:	4438      	add	r0, r7
 801bc7a:	eb01 040c 	add.w	r4, r1, ip
 801bc7e:	e796      	b.n	801bbae <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801bc80:	4b03      	ldr	r3, [pc, #12]	; (801bc90 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801bc82:	6818      	ldr	r0, [r3, #0]
 801bc84:	6803      	ldr	r3, [r0, #0]
 801bc86:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bc88:	4798      	blx	r3
 801bc8a:	e768      	b.n	801bb5e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801bc8c:	fffff800 	.word	0xfffff800
 801bc90:	200137bc 	.word	0x200137bc
 801bc94:	200137b6 	.word	0x200137b6

0801bc98 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801bc98:	b4f0      	push	{r4, r5, r6, r7}
 801bc9a:	4616      	mov	r6, r2
 801bc9c:	2e01      	cmp	r6, #1
 801bc9e:	461c      	mov	r4, r3
 801bca0:	460d      	mov	r5, r1
 801bca2:	9a04      	ldr	r2, [sp, #16]
 801bca4:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801bca8:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801bcac:	d012      	beq.n	801bcd4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801bcae:	d303      	bcc.n	801bcb8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801bcb0:	2e02      	cmp	r6, #2
 801bcb2:	d00a      	beq.n	801bcca <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801bcb4:	bcf0      	pop	{r4, r5, r6, r7}
 801bcb6:	4770      	bx	lr
 801bcb8:	6805      	ldr	r5, [r0, #0]
 801bcba:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801bcbe:	68ed      	ldr	r5, [r5, #12]
 801bcc0:	4613      	mov	r3, r2
 801bcc2:	46ac      	mov	ip, r5
 801bcc4:	4622      	mov	r2, r4
 801bcc6:	bcf0      	pop	{r4, r5, r6, r7}
 801bcc8:	4760      	bx	ip
 801bcca:	4621      	mov	r1, r4
 801bccc:	4628      	mov	r0, r5
 801bcce:	bcf0      	pop	{r4, r5, r6, r7}
 801bcd0:	f7ff bd94 	b.w	801b7fc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801bcd4:	4621      	mov	r1, r4
 801bcd6:	4628      	mov	r0, r5
 801bcd8:	bcf0      	pop	{r4, r5, r6, r7}
 801bcda:	f7ff bee5 	b.w	801baa8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801bce0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801bce0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bce4:	4681      	mov	r9, r0
 801bce6:	b093      	sub	sp, #76	; 0x4c
 801bce8:	6810      	ldr	r0, [r2, #0]
 801bcea:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801bcee:	4f6d      	ldr	r7, [pc, #436]	; (801bea4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801bcf0:	4688      	mov	r8, r1
 801bcf2:	6851      	ldr	r1, [r2, #4]
 801bcf4:	ac0e      	add	r4, sp, #56	; 0x38
 801bcf6:	c403      	stmia	r4!, {r0, r1}
 801bcf8:	6818      	ldr	r0, [r3, #0]
 801bcfa:	6859      	ldr	r1, [r3, #4]
 801bcfc:	ac10      	add	r4, sp, #64	; 0x40
 801bcfe:	4616      	mov	r6, r2
 801bd00:	c403      	stmia	r4!, {r0, r1}
 801bd02:	a80e      	add	r0, sp, #56	; 0x38
 801bd04:	f7f7 fec8 	bl	8013a98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bd08:	4631      	mov	r1, r6
 801bd0a:	a810      	add	r0, sp, #64	; 0x40
 801bd0c:	f7f7 ff08 	bl	8013b20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bd10:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801bd14:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801bd18:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801bd1c:	4e62      	ldr	r6, [pc, #392]	; (801bea8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801bd1e:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801bd22:	6830      	ldr	r0, [r6, #0]
 801bd24:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801bd28:	fb11 2103 	smlabb	r1, r1, r3, r2
 801bd2c:	4489      	add	r9, r1
 801bd2e:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801bd32:	440a      	add	r2, r1
 801bd34:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801bd38:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801bd3c:	4413      	add	r3, r2
 801bd3e:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801bd42:	6803      	ldr	r3, [r0, #0]
 801bd44:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801bd46:	4798      	blx	r3
 801bd48:	f010 0f80 	tst.w	r0, #128	; 0x80
 801bd4c:	6830      	ldr	r0, [r6, #0]
 801bd4e:	d01d      	beq.n	801bd8c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801bd50:	2200      	movs	r2, #0
 801bd52:	6801      	ldr	r1, [r0, #0]
 801bd54:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801bd58:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801bd5c:	220b      	movs	r2, #11
 801bd5e:	9207      	str	r2, [sp, #28]
 801bd60:	883a      	ldrh	r2, [r7, #0]
 801bd62:	9206      	str	r2, [sp, #24]
 801bd64:	2201      	movs	r2, #1
 801bd66:	e9cd a204 	strd	sl, r2, [sp, #16]
 801bd6a:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801bd6e:	9203      	str	r2, [sp, #12]
 801bd70:	b2a4      	uxth	r4, r4
 801bd72:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801bd76:	9200      	str	r2, [sp, #0]
 801bd78:	b2ad      	uxth	r5, r5
 801bd7a:	9502      	str	r5, [sp, #8]
 801bd7c:	9401      	str	r4, [sp, #4]
 801bd7e:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801bd80:	4642      	mov	r2, r8
 801bd82:	4649      	mov	r1, r9
 801bd84:	47a0      	blx	r4
 801bd86:	b013      	add	sp, #76	; 0x4c
 801bd88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bd8c:	6803      	ldr	r3, [r0, #0]
 801bd8e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801bd90:	4798      	blx	r3
 801bd92:	883b      	ldrh	r3, [r7, #0]
 801bd94:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801bd98:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801bd9c:	fb03 1202 	mla	r2, r3, r2, r1
 801bda0:	435d      	muls	r5, r3
 801bda2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801bda6:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801bdaa:	920c      	str	r2, [sp, #48]	; 0x30
 801bdac:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801bdb0:	1b12      	subs	r2, r2, r4
 801bdb2:	920d      	str	r2, [sp, #52]	; 0x34
 801bdb4:	0062      	lsls	r2, r4, #1
 801bdb6:	1b1c      	subs	r4, r3, r4
 801bdb8:	0063      	lsls	r3, r4, #1
 801bdba:	920a      	str	r2, [sp, #40]	; 0x28
 801bdbc:	930b      	str	r3, [sp, #44]	; 0x2c
 801bdbe:	f04f 0e04 	mov.w	lr, #4
 801bdc2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801bdc4:	4298      	cmp	r0, r3
 801bdc6:	d266      	bcs.n	801be96 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801bdc8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801bdca:	eb00 0b03 	add.w	fp, r0, r3
 801bdce:	4558      	cmp	r0, fp
 801bdd0:	d25c      	bcs.n	801be8c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801bdd2:	f819 3b01 	ldrb.w	r3, [r9], #1
 801bdd6:	fb1e e303 	smlabb	r3, lr, r3, lr
 801bdda:	f858 2003 	ldr.w	r2, [r8, r3]
 801bdde:	0e11      	lsrs	r1, r2, #24
 801bde0:	d012      	beq.n	801be08 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801bde2:	29ff      	cmp	r1, #255	; 0xff
 801bde4:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801bde8:	d110      	bne.n	801be0c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801bdea:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801bdee:	d10d      	bne.n	801be0c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801bdf0:	0953      	lsrs	r3, r2, #5
 801bdf2:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801bdf6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bdfa:	f027 0707 	bic.w	r7, r7, #7
 801bdfe:	431f      	orrs	r7, r3
 801be00:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801be04:	433a      	orrs	r2, r7
 801be06:	8002      	strh	r2, [r0, #0]
 801be08:	3002      	adds	r0, #2
 801be0a:	e7e0      	b.n	801bdce <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801be0c:	fb0a f101 	mul.w	r1, sl, r1
 801be10:	8806      	ldrh	r6, [r0, #0]
 801be12:	1c4b      	adds	r3, r1, #1
 801be14:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801be18:	1235      	asrs	r5, r6, #8
 801be1a:	10f4      	asrs	r4, r6, #3
 801be1c:	121b      	asrs	r3, r3, #8
 801be1e:	00f6      	lsls	r6, r6, #3
 801be20:	b299      	uxth	r1, r3
 801be22:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801be26:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801be2a:	b2f6      	uxtb	r6, r6
 801be2c:	43db      	mvns	r3, r3
 801be2e:	b2d2      	uxtb	r2, r2
 801be30:	b2db      	uxtb	r3, r3
 801be32:	fb1c fc01 	smulbb	ip, ip, r1
 801be36:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801be3a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801be3e:	fb12 f201 	smulbb	r2, r2, r1
 801be42:	fb05 c503 	mla	r5, r5, r3, ip
 801be46:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801be4a:	b2ff      	uxtb	r7, r7
 801be4c:	fb06 2203 	mla	r2, r6, r3, r2
 801be50:	b2ad      	uxth	r5, r5
 801be52:	fb17 f701 	smulbb	r7, r7, r1
 801be56:	b292      	uxth	r2, r2
 801be58:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801be5c:	fb04 7403 	mla	r4, r4, r3, r7
 801be60:	f105 0c01 	add.w	ip, r5, #1
 801be64:	1c57      	adds	r7, r2, #1
 801be66:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801be6a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801be6e:	b2a4      	uxth	r4, r4
 801be70:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801be74:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801be78:	433d      	orrs	r5, r7
 801be7a:	1c67      	adds	r7, r4, #1
 801be7c:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801be80:	0964      	lsrs	r4, r4, #5
 801be82:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801be86:	4325      	orrs	r5, r4
 801be88:	8005      	strh	r5, [r0, #0]
 801be8a:	e7bd      	b.n	801be08 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801be8c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801be8e:	4418      	add	r0, r3
 801be90:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801be92:	4499      	add	r9, r3
 801be94:	e795      	b.n	801bdc2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801be96:	4b04      	ldr	r3, [pc, #16]	; (801bea8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801be98:	6818      	ldr	r0, [r3, #0]
 801be9a:	6803      	ldr	r3, [r0, #0]
 801be9c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801be9e:	4798      	blx	r3
 801bea0:	e771      	b.n	801bd86 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801bea2:	bf00      	nop
 801bea4:	200137b6 	.word	0x200137b6
 801bea8:	200137bc 	.word	0x200137bc

0801beac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801beac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801beb0:	b087      	sub	sp, #28
 801beb2:	4680      	mov	r8, r0
 801beb4:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801beb8:	460d      	mov	r5, r1
 801beba:	4614      	mov	r4, r2
 801bebc:	2e00      	cmp	r6, #0
 801bebe:	f000 80b9 	beq.w	801c034 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801bec2:	6810      	ldr	r0, [r2, #0]
 801bec4:	6851      	ldr	r1, [r2, #4]
 801bec6:	af02      	add	r7, sp, #8
 801bec8:	c703      	stmia	r7!, {r0, r1}
 801beca:	6818      	ldr	r0, [r3, #0]
 801becc:	6859      	ldr	r1, [r3, #4]
 801bece:	af04      	add	r7, sp, #16
 801bed0:	c703      	stmia	r7!, {r0, r1}
 801bed2:	a802      	add	r0, sp, #8
 801bed4:	f7f7 fde0 	bl	8013a98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bed8:	4621      	mov	r1, r4
 801beda:	a804      	add	r0, sp, #16
 801bedc:	f7f7 fe20 	bl	8013b20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bee0:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801bee4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801bee8:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801beec:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801bef0:	fb14 2103 	smlabb	r1, r4, r3, r2
 801bef4:	eb08 0401 	add.w	r4, r8, r1
 801bef8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801befc:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801bf00:	440a      	add	r2, r1
 801bf02:	f8ad 2010 	strh.w	r2, [sp, #16]
 801bf06:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801bf0a:	4413      	add	r3, r2
 801bf0c:	f8ad 3012 	strh.w	r3, [sp, #18]
 801bf10:	4b4a      	ldr	r3, [pc, #296]	; (801c03c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801bf12:	6818      	ldr	r0, [r3, #0]
 801bf14:	6803      	ldr	r3, [r0, #0]
 801bf16:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801bf18:	4798      	blx	r3
 801bf1a:	4b49      	ldr	r3, [pc, #292]	; (801c040 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801bf1c:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801bf20:	881a      	ldrh	r2, [r3, #0]
 801bf22:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801bf26:	2eff      	cmp	r6, #255	; 0xff
 801bf28:	fb02 c101 	mla	r1, r2, r1, ip
 801bf2c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801bf30:	fb02 f207 	mul.w	r2, r2, r7
 801bf34:	f105 0104 	add.w	r1, r5, #4
 801bf38:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801bf3c:	461d      	mov	r5, r3
 801bf3e:	d05a      	beq.n	801bff6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801bf40:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801bf44:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801bf48:	b2b6      	uxth	r6, r6
 801bf4a:	fa1f fe8e 	uxth.w	lr, lr
 801bf4e:	9301      	str	r3, [sp, #4]
 801bf50:	4282      	cmp	r2, r0
 801bf52:	d96a      	bls.n	801c02a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801bf54:	eb00 0b0a 	add.w	fp, r0, sl
 801bf58:	4583      	cmp	fp, r0
 801bf5a:	d940      	bls.n	801bfde <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801bf5c:	f814 3b01 	ldrb.w	r3, [r4], #1
 801bf60:	8805      	ldrh	r5, [r0, #0]
 801bf62:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801bf66:	122f      	asrs	r7, r5, #8
 801bf68:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801bf6c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801bf70:	fb17 f70e 	smulbb	r7, r7, lr
 801bf74:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801bf78:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801bf7c:	00ed      	lsls	r5, r5, #3
 801bf7e:	fb0c 7c06 	mla	ip, ip, r6, r7
 801bf82:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801bf86:	10df      	asrs	r7, r3, #3
 801bf88:	b2ed      	uxtb	r5, r5
 801bf8a:	00db      	lsls	r3, r3, #3
 801bf8c:	fa1f fc8c 	uxth.w	ip, ip
 801bf90:	fb19 f90e 	smulbb	r9, r9, lr
 801bf94:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801bf98:	b2db      	uxtb	r3, r3
 801bf9a:	fb15 f50e 	smulbb	r5, r5, lr
 801bf9e:	fb07 9706 	mla	r7, r7, r6, r9
 801bfa2:	fb03 5306 	mla	r3, r3, r6, r5
 801bfa6:	f10c 0901 	add.w	r9, ip, #1
 801bfaa:	b29b      	uxth	r3, r3
 801bfac:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801bfb0:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801bfb4:	f103 0c01 	add.w	ip, r3, #1
 801bfb8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801bfbc:	b2bf      	uxth	r7, r7
 801bfbe:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801bfc2:	ea4c 0c09 	orr.w	ip, ip, r9
 801bfc6:	f107 0901 	add.w	r9, r7, #1
 801bfca:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801bfce:	097f      	lsrs	r7, r7, #5
 801bfd0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801bfd4:	ea4c 0c07 	orr.w	ip, ip, r7
 801bfd8:	f820 cb02 	strh.w	ip, [r0], #2
 801bfdc:	e7bc      	b.n	801bf58 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801bfde:	9b01      	ldr	r3, [sp, #4]
 801bfe0:	881b      	ldrh	r3, [r3, #0]
 801bfe2:	eba3 0308 	sub.w	r3, r3, r8
 801bfe6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801bfea:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801bfee:	eba3 0308 	sub.w	r3, r3, r8
 801bff2:	441c      	add	r4, r3
 801bff4:	e7ac      	b.n	801bf50 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801bff6:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801bffa:	4282      	cmp	r2, r0
 801bffc:	d915      	bls.n	801c02a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801bffe:	eb00 060a 	add.w	r6, r0, sl
 801c002:	4286      	cmp	r6, r0
 801c004:	d906      	bls.n	801c014 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801c006:	f814 3b01 	ldrb.w	r3, [r4], #1
 801c00a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801c00e:	f820 3b02 	strh.w	r3, [r0], #2
 801c012:	e7f6      	b.n	801c002 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801c014:	882b      	ldrh	r3, [r5, #0]
 801c016:	eba3 0308 	sub.w	r3, r3, r8
 801c01a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c01e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801c022:	eba3 0308 	sub.w	r3, r3, r8
 801c026:	441c      	add	r4, r3
 801c028:	e7e7      	b.n	801bffa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801c02a:	4b04      	ldr	r3, [pc, #16]	; (801c03c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801c02c:	6818      	ldr	r0, [r3, #0]
 801c02e:	6803      	ldr	r3, [r0, #0]
 801c030:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c032:	4798      	blx	r3
 801c034:	b007      	add	sp, #28
 801c036:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c03a:	bf00      	nop
 801c03c:	200137bc 	.word	0x200137bc
 801c040:	200137b6 	.word	0x200137b6

0801c044 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801c044:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c048:	b091      	sub	sp, #68	; 0x44
 801c04a:	4680      	mov	r8, r0
 801c04c:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801c050:	460f      	mov	r7, r1
 801c052:	4614      	mov	r4, r2
 801c054:	2d00      	cmp	r5, #0
 801c056:	d051      	beq.n	801c0fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801c058:	6810      	ldr	r0, [r2, #0]
 801c05a:	6851      	ldr	r1, [r2, #4]
 801c05c:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801c260 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801c060:	ae0c      	add	r6, sp, #48	; 0x30
 801c062:	c603      	stmia	r6!, {r0, r1}
 801c064:	6818      	ldr	r0, [r3, #0]
 801c066:	6859      	ldr	r1, [r3, #4]
 801c068:	ae0e      	add	r6, sp, #56	; 0x38
 801c06a:	c603      	stmia	r6!, {r0, r1}
 801c06c:	a80c      	add	r0, sp, #48	; 0x30
 801c06e:	f7f7 fd13 	bl	8013a98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c072:	4621      	mov	r1, r4
 801c074:	a80e      	add	r0, sp, #56	; 0x38
 801c076:	f7f7 fd53 	bl	8013b20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c07a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801c07e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801c082:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801c086:	f8d9 0000 	ldr.w	r0, [r9]
 801c08a:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801c08e:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801c092:	fb11 2103 	smlabb	r1, r1, r3, r2
 801c096:	eb08 0401 	add.w	r4, r8, r1
 801c09a:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801c09e:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801c264 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801c0a2:	440a      	add	r2, r1
 801c0a4:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801c0a8:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801c0ac:	4413      	add	r3, r2
 801c0ae:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801c0b2:	6803      	ldr	r3, [r0, #0]
 801c0b4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c0b6:	4798      	blx	r3
 801c0b8:	f010 0f80 	tst.w	r0, #128	; 0x80
 801c0bc:	f8d9 0000 	ldr.w	r0, [r9]
 801c0c0:	d01f      	beq.n	801c102 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801c0c2:	2200      	movs	r2, #0
 801c0c4:	6801      	ldr	r1, [r0, #0]
 801c0c6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801c0ca:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801c0ce:	220b      	movs	r2, #11
 801c0d0:	9207      	str	r2, [sp, #28]
 801c0d2:	f8b8 2000 	ldrh.w	r2, [r8]
 801c0d6:	9206      	str	r2, [sp, #24]
 801c0d8:	2201      	movs	r2, #1
 801c0da:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801c0de:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801c0e2:	9203      	str	r2, [sp, #12]
 801c0e4:	fa1f f28a 	uxth.w	r2, sl
 801c0e8:	9202      	str	r2, [sp, #8]
 801c0ea:	b2b6      	uxth	r6, r6
 801c0ec:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801c0f0:	9200      	str	r2, [sp, #0]
 801c0f2:	9601      	str	r6, [sp, #4]
 801c0f4:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801c0f6:	463a      	mov	r2, r7
 801c0f8:	4621      	mov	r1, r4
 801c0fa:	47a8      	blx	r5
 801c0fc:	b011      	add	sp, #68	; 0x44
 801c0fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c102:	6803      	ldr	r3, [r0, #0]
 801c104:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c106:	4798      	blx	r3
 801c108:	f8b8 2000 	ldrh.w	r2, [r8]
 801c10c:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801c110:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801c114:	2dff      	cmp	r5, #255	; 0xff
 801c116:	fb02 1303 	mla	r3, r2, r3, r1
 801c11a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c11e:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801c122:	fb0a fa02 	mul.w	sl, sl, r2
 801c126:	d062      	beq.n	801c1ee <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801c128:	ea6f 0c05 	mvn.w	ip, r5
 801c12c:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801c130:	930a      	str	r3, [sp, #40]	; 0x28
 801c132:	b2ad      	uxth	r5, r5
 801c134:	fa5f fc8c 	uxtb.w	ip, ip
 801c138:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801c13c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c13e:	4298      	cmp	r0, r3
 801c140:	f080 8085 	bcs.w	801c24e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801c144:	eb00 0b09 	add.w	fp, r0, r9
 801c148:	4558      	cmp	r0, fp
 801c14a:	d246      	bcs.n	801c1da <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801c14c:	f814 eb01 	ldrb.w	lr, [r4], #1
 801c150:	2303      	movs	r3, #3
 801c152:	2204      	movs	r2, #4
 801c154:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801c158:	eb07 0a0e 	add.w	sl, r7, lr
 801c15c:	8803      	ldrh	r3, [r0, #0]
 801c15e:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801c162:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801c166:	1219      	asrs	r1, r3, #8
 801c168:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801c16c:	fb18 f805 	smulbb	r8, r8, r5
 801c170:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801c174:	10da      	asrs	r2, r3, #3
 801c176:	fb01 810c 	mla	r1, r1, ip, r8
 801c17a:	00db      	lsls	r3, r3, #3
 801c17c:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c180:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801c184:	b2db      	uxtb	r3, r3
 801c186:	fb18 f805 	smulbb	r8, r8, r5
 801c18a:	fb1e fe05 	smulbb	lr, lr, r5
 801c18e:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801c192:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801c196:	b289      	uxth	r1, r1
 801c198:	fb02 820c 	mla	r2, r2, ip, r8
 801c19c:	fb03 e30c 	mla	r3, r3, ip, lr
 801c1a0:	b292      	uxth	r2, r2
 801c1a2:	b29b      	uxth	r3, r3
 801c1a4:	f101 0801 	add.w	r8, r1, #1
 801c1a8:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801c1ac:	f103 0e01 	add.w	lr, r3, #1
 801c1b0:	f102 0801 	add.w	r8, r2, #1
 801c1b4:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801c1b8:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801c1bc:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801c1c0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801c1c4:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801c1c8:	ea4e 0101 	orr.w	r1, lr, r1
 801c1cc:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801c1d0:	ea41 0108 	orr.w	r1, r1, r8
 801c1d4:	f820 1b02 	strh.w	r1, [r0], #2
 801c1d8:	e7b6      	b.n	801c148 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801c1da:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c1dc:	881b      	ldrh	r3, [r3, #0]
 801c1de:	1b9b      	subs	r3, r3, r6
 801c1e0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c1e4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801c1e8:	1b9b      	subs	r3, r3, r6
 801c1ea:	441c      	add	r4, r3
 801c1ec:	e7a6      	b.n	801c13c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801c1ee:	491b      	ldr	r1, [pc, #108]	; (801c25c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801c1f0:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801c1f4:	2203      	movs	r2, #3
 801c1f6:	2504      	movs	r5, #4
 801c1f8:	4550      	cmp	r0, sl
 801c1fa:	d228      	bcs.n	801c24e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801c1fc:	eb00 0c09 	add.w	ip, r0, r9
 801c200:	4560      	cmp	r0, ip
 801c202:	4623      	mov	r3, r4
 801c204:	d219      	bcs.n	801c23a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801c206:	f893 e000 	ldrb.w	lr, [r3]
 801c20a:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801c20e:	eb07 0b0e 	add.w	fp, r7, lr
 801c212:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801c216:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801c21a:	f89b b001 	ldrb.w	fp, [fp, #1]
 801c21e:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801c222:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801c226:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801c22a:	ea43 030b 	orr.w	r3, r3, fp
 801c22e:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801c232:	3401      	adds	r4, #1
 801c234:	f820 3b02 	strh.w	r3, [r0], #2
 801c238:	e7e2      	b.n	801c200 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801c23a:	f8b8 3000 	ldrh.w	r3, [r8]
 801c23e:	1b9b      	subs	r3, r3, r6
 801c240:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c244:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801c248:	1b9b      	subs	r3, r3, r6
 801c24a:	441c      	add	r4, r3
 801c24c:	e7d4      	b.n	801c1f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801c24e:	4b04      	ldr	r3, [pc, #16]	; (801c260 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801c250:	6818      	ldr	r0, [r3, #0]
 801c252:	6803      	ldr	r3, [r0, #0]
 801c254:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c256:	4798      	blx	r3
 801c258:	e750      	b.n	801c0fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801c25a:	bf00      	nop
 801c25c:	fffff800 	.word	0xfffff800
 801c260:	200137bc 	.word	0x200137bc
 801c264:	200137b6 	.word	0x200137b6

0801c268 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801c268:	b4f0      	push	{r4, r5, r6, r7}
 801c26a:	460c      	mov	r4, r1
 801c26c:	4611      	mov	r1, r2
 801c26e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801c272:	780f      	ldrb	r7, [r1, #0]
 801c274:	784e      	ldrb	r6, [r1, #1]
 801c276:	2f01      	cmp	r7, #1
 801c278:	461a      	mov	r2, r3
 801c27a:	9b04      	ldr	r3, [sp, #16]
 801c27c:	d036      	beq.n	801c2ec <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801c27e:	d31e      	bcc.n	801c2be <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801c280:	2f02      	cmp	r7, #2
 801c282:	d14a      	bne.n	801c31a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801c284:	2e03      	cmp	r6, #3
 801c286:	d848      	bhi.n	801c31a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801c288:	e8df f006 	tbb	[pc, r6]
 801c28c:	16140702 	.word	0x16140702
 801c290:	9504      	str	r5, [sp, #16]
 801c292:	4620      	mov	r0, r4
 801c294:	bcf0      	pop	{r4, r5, r6, r7}
 801c296:	f7ff be09 	b.w	801beac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801c29a:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801c29c:	2800      	cmp	r0, #0
 801c29e:	d03c      	beq.n	801c31a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801c2a0:	6806      	ldr	r6, [r0, #0]
 801c2a2:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801c2a6:	68b5      	ldr	r5, [r6, #8]
 801c2a8:	4613      	mov	r3, r2
 801c2aa:	46ac      	mov	ip, r5
 801c2ac:	460a      	mov	r2, r1
 801c2ae:	4621      	mov	r1, r4
 801c2b0:	bcf0      	pop	{r4, r5, r6, r7}
 801c2b2:	4760      	bx	ip
 801c2b4:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801c2b6:	e7f1      	b.n	801c29c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801c2b8:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801c2bc:	e7ee      	b.n	801c29c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801c2be:	2e03      	cmp	r6, #3
 801c2c0:	d82b      	bhi.n	801c31a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801c2c2:	e8df f006 	tbb	[pc, r6]
 801c2c6:	0702      	.short	0x0702
 801c2c8:	100e      	.short	0x100e
 801c2ca:	9504      	str	r5, [sp, #16]
 801c2cc:	4620      	mov	r0, r4
 801c2ce:	bcf0      	pop	{r4, r5, r6, r7}
 801c2d0:	f7ff bd06 	b.w	801bce0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801c2d4:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801c2d6:	b300      	cbz	r0, 801c31a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801c2d8:	6806      	ldr	r6, [r0, #0]
 801c2da:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801c2de:	68f5      	ldr	r5, [r6, #12]
 801c2e0:	e7e2      	b.n	801c2a8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801c2e2:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801c2e4:	e7f7      	b.n	801c2d6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801c2e6:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801c2ea:	e7f4      	b.n	801c2d6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801c2ec:	2e03      	cmp	r6, #3
 801c2ee:	d814      	bhi.n	801c31a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801c2f0:	e8df f006 	tbb	[pc, r6]
 801c2f4:	100e0702 	.word	0x100e0702
 801c2f8:	9504      	str	r5, [sp, #16]
 801c2fa:	4620      	mov	r0, r4
 801c2fc:	bcf0      	pop	{r4, r5, r6, r7}
 801c2fe:	f7ff bea1 	b.w	801c044 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801c302:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801c304:	b148      	cbz	r0, 801c31a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801c306:	6806      	ldr	r6, [r0, #0]
 801c308:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801c30c:	6935      	ldr	r5, [r6, #16]
 801c30e:	e7cb      	b.n	801c2a8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801c310:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801c312:	e7f7      	b.n	801c304 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801c314:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801c318:	e7f4      	b.n	801c304 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801c31a:	bcf0      	pop	{r4, r5, r6, r7}
 801c31c:	4770      	bx	lr
	...

0801c320 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801c320:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c324:	4604      	mov	r4, r0
 801c326:	b087      	sub	sp, #28
 801c328:	6810      	ldr	r0, [r2, #0]
 801c32a:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801c32e:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801c568 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801c332:	460e      	mov	r6, r1
 801c334:	6851      	ldr	r1, [r2, #4]
 801c336:	ad02      	add	r5, sp, #8
 801c338:	c503      	stmia	r5!, {r0, r1}
 801c33a:	6818      	ldr	r0, [r3, #0]
 801c33c:	6859      	ldr	r1, [r3, #4]
 801c33e:	ad04      	add	r5, sp, #16
 801c340:	4617      	mov	r7, r2
 801c342:	c503      	stmia	r5!, {r0, r1}
 801c344:	a802      	add	r0, sp, #8
 801c346:	f7f7 fba7 	bl	8013a98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c34a:	4639      	mov	r1, r7
 801c34c:	a804      	add	r0, sp, #16
 801c34e:	f7f7 fbe7 	bl	8013b20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c352:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801c356:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801c35a:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801c35e:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801c362:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801c366:	fb11 2103 	smlabb	r1, r1, r3, r2
 801c36a:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801c36e:	440e      	add	r6, r1
 801c370:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801c374:	440a      	add	r2, r1
 801c376:	f8ad 2010 	strh.w	r2, [sp, #16]
 801c37a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801c37e:	4413      	add	r3, r2
 801c380:	f8ad 3012 	strh.w	r3, [sp, #18]
 801c384:	4b77      	ldr	r3, [pc, #476]	; (801c564 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801c386:	6818      	ldr	r0, [r3, #0]
 801c388:	6803      	ldr	r3, [r0, #0]
 801c38a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c38c:	4798      	blx	r3
 801c38e:	f8b9 b000 	ldrh.w	fp, [r9]
 801c392:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801c396:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801c39a:	fb0b 2303 	mla	r3, fp, r3, r2
 801c39e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c3a2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801c3a6:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801c3aa:	fb05 f50b 	mul.w	r5, r5, fp
 801c3ae:	9300      	str	r3, [sp, #0]
 801c3b0:	d069      	beq.n	801c486 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801c3b2:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801c3b6:	4558      	cmp	r0, fp
 801c3b8:	f080 80cc 	bcs.w	801c554 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801c3bc:	9b00      	ldr	r3, [sp, #0]
 801c3be:	18c3      	adds	r3, r0, r3
 801c3c0:	9301      	str	r3, [sp, #4]
 801c3c2:	4631      	mov	r1, r6
 801c3c4:	9b01      	ldr	r3, [sp, #4]
 801c3c6:	4298      	cmp	r0, r3
 801c3c8:	d24f      	bcs.n	801c46a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801c3ca:	f811 2b01 	ldrb.w	r2, [r1], #1
 801c3ce:	2a00      	cmp	r2, #0
 801c3d0:	d048      	beq.n	801c464 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801c3d2:	fb0a f202 	mul.w	r2, sl, r2
 801c3d6:	1c53      	adds	r3, r2, #1
 801c3d8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c3dc:	121b      	asrs	r3, r3, #8
 801c3de:	d041      	beq.n	801c464 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801c3e0:	8802      	ldrh	r2, [r0, #0]
 801c3e2:	f8b4 c000 	ldrh.w	ip, [r4]
 801c3e6:	b29e      	uxth	r6, r3
 801c3e8:	1215      	asrs	r5, r2, #8
 801c3ea:	43db      	mvns	r3, r3
 801c3ec:	b2db      	uxtb	r3, r3
 801c3ee:	ea4f 272c 	mov.w	r7, ip, asr #8
 801c3f2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c3f6:	fb15 f503 	smulbb	r5, r5, r3
 801c3fa:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801c3fe:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c402:	00d2      	lsls	r2, r2, #3
 801c404:	fb07 5706 	mla	r7, r7, r6, r5
 801c408:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801c40c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801c410:	b2d2      	uxtb	r2, r2
 801c412:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c416:	b2bf      	uxth	r7, r7
 801c418:	fb1e fe03 	smulbb	lr, lr, r3
 801c41c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c420:	fa5f fc8c 	uxtb.w	ip, ip
 801c424:	fb12 f203 	smulbb	r2, r2, r3
 801c428:	fb05 e506 	mla	r5, r5, r6, lr
 801c42c:	fb0c 2c06 	mla	ip, ip, r6, r2
 801c430:	f107 0e01 	add.w	lr, r7, #1
 801c434:	fa1f fc8c 	uxth.w	ip, ip
 801c438:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801c43c:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801c440:	f10c 0701 	add.w	r7, ip, #1
 801c444:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801c448:	b2ad      	uxth	r5, r5
 801c44a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801c44e:	ea47 070e 	orr.w	r7, r7, lr
 801c452:	f105 0e01 	add.w	lr, r5, #1
 801c456:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801c45a:	096d      	lsrs	r5, r5, #5
 801c45c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c460:	432f      	orrs	r7, r5
 801c462:	8007      	strh	r7, [r0, #0]
 801c464:	3002      	adds	r0, #2
 801c466:	3402      	adds	r4, #2
 801c468:	e7ac      	b.n	801c3c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801c46a:	f8b9 3000 	ldrh.w	r3, [r9]
 801c46e:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801c472:	eba3 0308 	sub.w	r3, r3, r8
 801c476:	eba6 0608 	sub.w	r6, r6, r8
 801c47a:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801c47e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c482:	440e      	add	r6, r1
 801c484:	e797      	b.n	801c3b6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801c486:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801c48a:	42a8      	cmp	r0, r5
 801c48c:	d262      	bcs.n	801c554 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801c48e:	9b00      	ldr	r3, [sp, #0]
 801c490:	4631      	mov	r1, r6
 801c492:	eb00 0b03 	add.w	fp, r0, r3
 801c496:	4558      	cmp	r0, fp
 801c498:	d24e      	bcs.n	801c538 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801c49a:	f811 3b01 	ldrb.w	r3, [r1], #1
 801c49e:	b12b      	cbz	r3, 801c4ac <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801c4a0:	2bff      	cmp	r3, #255	; 0xff
 801c4a2:	f8b4 e000 	ldrh.w	lr, [r4]
 801c4a6:	d104      	bne.n	801c4b2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801c4a8:	f8a0 e000 	strh.w	lr, [r0]
 801c4ac:	3002      	adds	r0, #2
 801c4ae:	3402      	adds	r4, #2
 801c4b0:	e7f1      	b.n	801c496 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801c4b2:	8802      	ldrh	r2, [r0, #0]
 801c4b4:	b29f      	uxth	r7, r3
 801c4b6:	1216      	asrs	r6, r2, #8
 801c4b8:	43db      	mvns	r3, r3
 801c4ba:	b2db      	uxtb	r3, r3
 801c4bc:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801c4c0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c4c4:	fb16 f603 	smulbb	r6, r6, r3
 801c4c8:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801c4cc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c4d0:	00d2      	lsls	r2, r2, #3
 801c4d2:	fb0c 6c07 	mla	ip, ip, r7, r6
 801c4d6:	b2d2      	uxtb	r2, r2
 801c4d8:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801c4dc:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801c4e0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c4e4:	fb1a fa03 	smulbb	sl, sl, r3
 801c4e8:	fa1f fc8c 	uxth.w	ip, ip
 801c4ec:	fb12 f303 	smulbb	r3, r2, r3
 801c4f0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c4f4:	fa5f fe8e 	uxtb.w	lr, lr
 801c4f8:	fb06 a607 	mla	r6, r6, r7, sl
 801c4fc:	f10c 0201 	add.w	r2, ip, #1
 801c500:	fb0e 3307 	mla	r3, lr, r7, r3
 801c504:	b2b6      	uxth	r6, r6
 801c506:	b29b      	uxth	r3, r3
 801c508:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801c50c:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801c510:	f106 0a01 	add.w	sl, r6, #1
 801c514:	f103 0c01 	add.w	ip, r3, #1
 801c518:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801c51c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801c520:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801c524:	0976      	lsrs	r6, r6, #5
 801c526:	ea4c 0c02 	orr.w	ip, ip, r2
 801c52a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801c52e:	ea4c 0c06 	orr.w	ip, ip, r6
 801c532:	f8a0 c000 	strh.w	ip, [r0]
 801c536:	e7b9      	b.n	801c4ac <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801c538:	f8b9 3000 	ldrh.w	r3, [r9]
 801c53c:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801c540:	eba3 0308 	sub.w	r3, r3, r8
 801c544:	eba6 0608 	sub.w	r6, r6, r8
 801c548:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801c54c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c550:	440e      	add	r6, r1
 801c552:	e79a      	b.n	801c48a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801c554:	4b03      	ldr	r3, [pc, #12]	; (801c564 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801c556:	6818      	ldr	r0, [r3, #0]
 801c558:	6803      	ldr	r3, [r0, #0]
 801c55a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c55c:	4798      	blx	r3
 801c55e:	b007      	add	sp, #28
 801c560:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c564:	200137bc 	.word	0x200137bc
 801c568:	200137b6 	.word	0x200137b6

0801c56c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801c56c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c570:	b089      	sub	sp, #36	; 0x24
 801c572:	4682      	mov	sl, r0
 801c574:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801c578:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801c57a:	460f      	mov	r7, r1
 801c57c:	4691      	mov	r9, r2
 801c57e:	4698      	mov	r8, r3
 801c580:	2e00      	cmp	r6, #0
 801c582:	d03d      	beq.n	801c600 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801c584:	4608      	mov	r0, r1
 801c586:	f7fa fe59 	bl	801723c <_ZNK8touchgfx6Bitmap8getWidthEv>
 801c58a:	4605      	mov	r5, r0
 801c58c:	4638      	mov	r0, r7
 801c58e:	f7fa fe89 	bl	80172a4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801c592:	f8ad 000e 	strh.w	r0, [sp, #14]
 801c596:	4638      	mov	r0, r7
 801c598:	f8ad 9008 	strh.w	r9, [sp, #8]
 801c59c:	f8ad 500c 	strh.w	r5, [sp, #12]
 801c5a0:	f8ad 800a 	strh.w	r8, [sp, #10]
 801c5a4:	f7fa ff36 	bl	8017414 <_ZNK8touchgfx6Bitmap7getDataEv>
 801c5a8:	4605      	mov	r5, r0
 801c5aa:	4638      	mov	r0, r7
 801c5ac:	f7fa ff62 	bl	8017474 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801c5b0:	4681      	mov	r9, r0
 801c5b2:	4638      	mov	r0, r7
 801c5b4:	f7fa ffb2 	bl	801751c <_ZNK8touchgfx6Bitmap9getFormatEv>
 801c5b8:	280b      	cmp	r0, #11
 801c5ba:	d821      	bhi.n	801c600 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801c5bc:	e8df f000 	tbb	[pc, r0]
 801c5c0:	2006aebe 	.word	0x2006aebe
 801c5c4:	20202020 	.word	0x20202020
 801c5c8:	b5202020 	.word	0xb5202020
 801c5cc:	4bb0      	ldr	r3, [pc, #704]	; (801c890 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801c5ce:	6818      	ldr	r0, [r3, #0]
 801c5d0:	6803      	ldr	r3, [r0, #0]
 801c5d2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c5d4:	4798      	blx	r3
 801c5d6:	2eff      	cmp	r6, #255	; 0xff
 801c5d8:	d101      	bne.n	801c5de <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801c5da:	0683      	lsls	r3, r0, #26
 801c5dc:	d506      	bpl.n	801c5ec <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801c5de:	4633      	mov	r3, r6
 801c5e0:	4622      	mov	r2, r4
 801c5e2:	a902      	add	r1, sp, #8
 801c5e4:	4628      	mov	r0, r5
 801c5e6:	f7ff f909 	bl	801b7fc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801c5ea:	e009      	b.n	801c600 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801c5ec:	4638      	mov	r0, r7
 801c5ee:	f7fa fed9 	bl	80173a4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801c5f2:	b940      	cbnz	r0, 801c606 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801c5f4:	4623      	mov	r3, r4
 801c5f6:	aa02      	add	r2, sp, #8
 801c5f8:	4629      	mov	r1, r5
 801c5fa:	4650      	mov	r0, sl
 801c5fc:	f7ff f9e4 	bl	801b9c8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801c600:	b009      	add	sp, #36	; 0x24
 801c602:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c606:	f10d 0818 	add.w	r8, sp, #24
 801c60a:	4639      	mov	r1, r7
 801c60c:	4640      	mov	r0, r8
 801c60e:	f7fa fe7d 	bl	801730c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801c612:	e898 0003 	ldmia.w	r8, {r0, r1}
 801c616:	af04      	add	r7, sp, #16
 801c618:	e887 0003 	stmia.w	r7, {r0, r1}
 801c61c:	4638      	mov	r0, r7
 801c61e:	4621      	mov	r1, r4
 801c620:	f7f2 fadc 	bl	800ebdc <_ZN8touchgfx4RectaNERKS0_>
 801c624:	4638      	mov	r0, r7
 801c626:	f7f2 fb1c 	bl	800ec62 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c62a:	2800      	cmp	r0, #0
 801c62c:	d1d7      	bne.n	801c5de <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801c62e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801c632:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801c636:	4293      	cmp	r3, r2
 801c638:	dd12      	ble.n	801c660 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801c63a:	1a9b      	subs	r3, r3, r2
 801c63c:	f9b4 0000 	ldrsh.w	r0, [r4]
 801c640:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801c644:	f8ad 0018 	strh.w	r0, [sp, #24]
 801c648:	f8ad 201a 	strh.w	r2, [sp, #26]
 801c64c:	f8ad 101c 	strh.w	r1, [sp, #28]
 801c650:	f8ad 301e 	strh.w	r3, [sp, #30]
 801c654:	4642      	mov	r2, r8
 801c656:	4633      	mov	r3, r6
 801c658:	a902      	add	r1, sp, #8
 801c65a:	4628      	mov	r0, r5
 801c65c:	f7ff f8ce 	bl	801b7fc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801c660:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801c664:	f9b4 2000 	ldrsh.w	r2, [r4]
 801c668:	4293      	cmp	r3, r2
 801c66a:	dd12      	ble.n	801c692 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801c66c:	1a9b      	subs	r3, r3, r2
 801c66e:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801c672:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801c676:	f8ad 2018 	strh.w	r2, [sp, #24]
 801c67a:	f8ad 001a 	strh.w	r0, [sp, #26]
 801c67e:	f8ad 301c 	strh.w	r3, [sp, #28]
 801c682:	f8ad 101e 	strh.w	r1, [sp, #30]
 801c686:	23ff      	movs	r3, #255	; 0xff
 801c688:	4642      	mov	r2, r8
 801c68a:	a902      	add	r1, sp, #8
 801c68c:	4628      	mov	r0, r5
 801c68e:	f7ff f8b5 	bl	801b7fc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801c692:	463b      	mov	r3, r7
 801c694:	aa02      	add	r2, sp, #8
 801c696:	4629      	mov	r1, r5
 801c698:	4650      	mov	r0, sl
 801c69a:	f7ff f995 	bl	801b9c8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801c69e:	88a2      	ldrh	r2, [r4, #4]
 801c6a0:	8823      	ldrh	r3, [r4, #0]
 801c6a2:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801c6a6:	4413      	add	r3, r2
 801c6a8:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c6ac:	440a      	add	r2, r1
 801c6ae:	b29b      	uxth	r3, r3
 801c6b0:	b292      	uxth	r2, r2
 801c6b2:	b211      	sxth	r1, r2
 801c6b4:	b218      	sxth	r0, r3
 801c6b6:	4288      	cmp	r0, r1
 801c6b8:	dd12      	ble.n	801c6e0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801c6ba:	1a9b      	subs	r3, r3, r2
 801c6bc:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801c6c0:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801c6c4:	f8ad 1018 	strh.w	r1, [sp, #24]
 801c6c8:	f8ad 301c 	strh.w	r3, [sp, #28]
 801c6cc:	f8ad 001e 	strh.w	r0, [sp, #30]
 801c6d0:	23ff      	movs	r3, #255	; 0xff
 801c6d2:	4642      	mov	r2, r8
 801c6d4:	a902      	add	r1, sp, #8
 801c6d6:	4628      	mov	r0, r5
 801c6d8:	f8ad 601a 	strh.w	r6, [sp, #26]
 801c6dc:	f7ff f88e 	bl	801b7fc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801c6e0:	88e2      	ldrh	r2, [r4, #6]
 801c6e2:	8863      	ldrh	r3, [r4, #2]
 801c6e4:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801c6e8:	4413      	add	r3, r2
 801c6ea:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801c6ee:	440a      	add	r2, r1
 801c6f0:	b29b      	uxth	r3, r3
 801c6f2:	b292      	uxth	r2, r2
 801c6f4:	b211      	sxth	r1, r2
 801c6f6:	b218      	sxth	r0, r3
 801c6f8:	4288      	cmp	r0, r1
 801c6fa:	dd81      	ble.n	801c600 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801c6fc:	1a9b      	subs	r3, r3, r2
 801c6fe:	f9b4 6000 	ldrsh.w	r6, [r4]
 801c702:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801c706:	f8ad 301e 	strh.w	r3, [sp, #30]
 801c70a:	f8ad 6018 	strh.w	r6, [sp, #24]
 801c70e:	f8ad 101a 	strh.w	r1, [sp, #26]
 801c712:	f8ad 001c 	strh.w	r0, [sp, #28]
 801c716:	23ff      	movs	r3, #255	; 0xff
 801c718:	4642      	mov	r2, r8
 801c71a:	e762      	b.n	801c5e2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801c71c:	4633      	mov	r3, r6
 801c71e:	4622      	mov	r2, r4
 801c720:	a902      	add	r1, sp, #8
 801c722:	4628      	mov	r0, r5
 801c724:	f7ff f9c0 	bl	801baa8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801c728:	e76a      	b.n	801c600 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801c72a:	e9cd 4600 	strd	r4, r6, [sp]
 801c72e:	ab02      	add	r3, sp, #8
 801c730:	464a      	mov	r2, r9
 801c732:	4629      	mov	r1, r5
 801c734:	4650      	mov	r0, sl
 801c736:	f7ff fd97 	bl	801c268 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801c73a:	e761      	b.n	801c600 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801c73c:	4638      	mov	r0, r7
 801c73e:	f7fa fe31 	bl	80173a4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801c742:	b950      	cbnz	r0, 801c75a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801c744:	e9cd 6000 	strd	r6, r0, [sp]
 801c748:	f8da 3000 	ldr.w	r3, [sl]
 801c74c:	aa02      	add	r2, sp, #8
 801c74e:	68de      	ldr	r6, [r3, #12]
 801c750:	4629      	mov	r1, r5
 801c752:	4623      	mov	r3, r4
 801c754:	4650      	mov	r0, sl
 801c756:	47b0      	blx	r6
 801c758:	e752      	b.n	801c600 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801c75a:	f10d 0818 	add.w	r8, sp, #24
 801c75e:	4639      	mov	r1, r7
 801c760:	4640      	mov	r0, r8
 801c762:	f7fa fdd3 	bl	801730c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801c766:	e898 0003 	ldmia.w	r8, {r0, r1}
 801c76a:	af04      	add	r7, sp, #16
 801c76c:	e887 0003 	stmia.w	r7, {r0, r1}
 801c770:	4638      	mov	r0, r7
 801c772:	4621      	mov	r1, r4
 801c774:	f7f2 fa32 	bl	800ebdc <_ZN8touchgfx4RectaNERKS0_>
 801c778:	4638      	mov	r0, r7
 801c77a:	f7f2 fa72 	bl	800ec62 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c77e:	b138      	cbz	r0, 801c790 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801c780:	9600      	str	r6, [sp, #0]
 801c782:	4623      	mov	r3, r4
 801c784:	aa02      	add	r2, sp, #8
 801c786:	4649      	mov	r1, r9
 801c788:	4628      	mov	r0, r5
 801c78a:	f7ff fdc9 	bl	801c320 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801c78e:	e737      	b.n	801c600 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801c790:	e9cd 6000 	strd	r6, r0, [sp]
 801c794:	f8da 3000 	ldr.w	r3, [sl]
 801c798:	aa02      	add	r2, sp, #8
 801c79a:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801c79e:	4629      	mov	r1, r5
 801c7a0:	463b      	mov	r3, r7
 801c7a2:	4650      	mov	r0, sl
 801c7a4:	47d8      	blx	fp
 801c7a6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801c7aa:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801c7ae:	4293      	cmp	r3, r2
 801c7b0:	dd13      	ble.n	801c7da <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801c7b2:	f9b4 0000 	ldrsh.w	r0, [r4]
 801c7b6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801c7ba:	f8ad 0018 	strh.w	r0, [sp, #24]
 801c7be:	1a9b      	subs	r3, r3, r2
 801c7c0:	f8ad 201a 	strh.w	r2, [sp, #26]
 801c7c4:	f8ad 101c 	strh.w	r1, [sp, #28]
 801c7c8:	f8ad 301e 	strh.w	r3, [sp, #30]
 801c7cc:	9600      	str	r6, [sp, #0]
 801c7ce:	4643      	mov	r3, r8
 801c7d0:	aa02      	add	r2, sp, #8
 801c7d2:	4649      	mov	r1, r9
 801c7d4:	4628      	mov	r0, r5
 801c7d6:	f7ff fda3 	bl	801c320 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801c7da:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801c7de:	f9b4 2000 	ldrsh.w	r2, [r4]
 801c7e2:	4293      	cmp	r3, r2
 801c7e4:	dd13      	ble.n	801c80e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801c7e6:	1a9b      	subs	r3, r3, r2
 801c7e8:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801c7ec:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801c7f0:	f8ad 2018 	strh.w	r2, [sp, #24]
 801c7f4:	f8ad 001a 	strh.w	r0, [sp, #26]
 801c7f8:	f8ad 301c 	strh.w	r3, [sp, #28]
 801c7fc:	f8ad 101e 	strh.w	r1, [sp, #30]
 801c800:	9600      	str	r6, [sp, #0]
 801c802:	4643      	mov	r3, r8
 801c804:	aa02      	add	r2, sp, #8
 801c806:	4649      	mov	r1, r9
 801c808:	4628      	mov	r0, r5
 801c80a:	f7ff fd89 	bl	801c320 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801c80e:	88a2      	ldrh	r2, [r4, #4]
 801c810:	8823      	ldrh	r3, [r4, #0]
 801c812:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801c816:	4413      	add	r3, r2
 801c818:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c81c:	440a      	add	r2, r1
 801c81e:	b29b      	uxth	r3, r3
 801c820:	b292      	uxth	r2, r2
 801c822:	b211      	sxth	r1, r2
 801c824:	b218      	sxth	r0, r3
 801c826:	4288      	cmp	r0, r1
 801c828:	dd13      	ble.n	801c852 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801c82a:	1a9b      	subs	r3, r3, r2
 801c82c:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801c830:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801c834:	f8ad 1018 	strh.w	r1, [sp, #24]
 801c838:	f8ad 301c 	strh.w	r3, [sp, #28]
 801c83c:	f8ad 001e 	strh.w	r0, [sp, #30]
 801c840:	9600      	str	r6, [sp, #0]
 801c842:	4643      	mov	r3, r8
 801c844:	aa02      	add	r2, sp, #8
 801c846:	4649      	mov	r1, r9
 801c848:	4628      	mov	r0, r5
 801c84a:	f8ad 701a 	strh.w	r7, [sp, #26]
 801c84e:	f7ff fd67 	bl	801c320 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801c852:	88e2      	ldrh	r2, [r4, #6]
 801c854:	8863      	ldrh	r3, [r4, #2]
 801c856:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801c85a:	4413      	add	r3, r2
 801c85c:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801c860:	440a      	add	r2, r1
 801c862:	b29b      	uxth	r3, r3
 801c864:	b292      	uxth	r2, r2
 801c866:	b211      	sxth	r1, r2
 801c868:	b218      	sxth	r0, r3
 801c86a:	4288      	cmp	r0, r1
 801c86c:	f77f aec8 	ble.w	801c600 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801c870:	f9b4 7000 	ldrsh.w	r7, [r4]
 801c874:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801c878:	f8ad 7018 	strh.w	r7, [sp, #24]
 801c87c:	1a9b      	subs	r3, r3, r2
 801c87e:	f8ad 301e 	strh.w	r3, [sp, #30]
 801c882:	f8ad 101a 	strh.w	r1, [sp, #26]
 801c886:	f8ad 001c 	strh.w	r0, [sp, #28]
 801c88a:	9600      	str	r6, [sp, #0]
 801c88c:	4643      	mov	r3, r8
 801c88e:	e779      	b.n	801c784 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801c890:	200137bc 	.word	0x200137bc

0801c894 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801c894:	b180      	cbz	r0, 801c8b8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801c896:	2903      	cmp	r1, #3
 801c898:	d81c      	bhi.n	801c8d4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801c89a:	e8df f001 	tbb	[pc, r1]
 801c89e:	1d02      	.short	0x1d02
 801c8a0:	1f08      	.short	0x1f08
 801c8a2:	4b10      	ldr	r3, [pc, #64]	; (801c8e4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801c8a4:	8818      	ldrh	r0, [r3, #0]
 801c8a6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801c8aa:	4240      	negs	r0, r0
 801c8ac:	4770      	bx	lr
 801c8ae:	4b0d      	ldr	r3, [pc, #52]	; (801c8e4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801c8b0:	8818      	ldrh	r0, [r3, #0]
 801c8b2:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801c8b6:	4770      	bx	lr
 801c8b8:	2903      	cmp	r1, #3
 801c8ba:	d80b      	bhi.n	801c8d4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801c8bc:	a301      	add	r3, pc, #4	; (adr r3, 801c8c4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801c8be:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801c8c2:	bf00      	nop
 801c8c4:	0801c8d9 	.word	0x0801c8d9
 801c8c8:	0801c8af 	.word	0x0801c8af
 801c8cc:	0801c8dd 	.word	0x0801c8dd
 801c8d0:	0801c8a3 	.word	0x0801c8a3
 801c8d4:	2000      	movs	r0, #0
 801c8d6:	4770      	bx	lr
 801c8d8:	2001      	movs	r0, #1
 801c8da:	4770      	bx	lr
 801c8dc:	f04f 30ff 	mov.w	r0, #4294967295
 801c8e0:	4770      	bx	lr
 801c8e2:	bf00      	nop
 801c8e4:	200137b6 	.word	0x200137b6

0801c8e8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801c8e8:	b180      	cbz	r0, 801c90c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801c8ea:	2903      	cmp	r1, #3
 801c8ec:	d81c      	bhi.n	801c928 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801c8ee:	e8df f001 	tbb	[pc, r1]
 801c8f2:	021d      	.short	0x021d
 801c8f4:	071f      	.short	0x071f
 801c8f6:	4b10      	ldr	r3, [pc, #64]	; (801c938 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801c8f8:	8818      	ldrh	r0, [r3, #0]
 801c8fa:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801c8fe:	4770      	bx	lr
 801c900:	4b0d      	ldr	r3, [pc, #52]	; (801c938 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801c902:	8818      	ldrh	r0, [r3, #0]
 801c904:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801c908:	4240      	negs	r0, r0
 801c90a:	4770      	bx	lr
 801c90c:	2903      	cmp	r1, #3
 801c90e:	d80b      	bhi.n	801c928 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801c910:	a301      	add	r3, pc, #4	; (adr r3, 801c918 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801c912:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801c916:	bf00      	nop
 801c918:	0801c8f7 	.word	0x0801c8f7
 801c91c:	0801c931 	.word	0x0801c931
 801c920:	0801c901 	.word	0x0801c901
 801c924:	0801c92d 	.word	0x0801c92d
 801c928:	2000      	movs	r0, #0
 801c92a:	4770      	bx	lr
 801c92c:	2001      	movs	r0, #1
 801c92e:	4770      	bx	lr
 801c930:	f04f 30ff 	mov.w	r0, #4294967295
 801c934:	4770      	bx	lr
 801c936:	bf00      	nop
 801c938:	200137b6 	.word	0x200137b6

0801c93c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801c93c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c940:	b099      	sub	sp, #100	; 0x64
 801c942:	910b      	str	r1, [sp, #44]	; 0x2c
 801c944:	a914      	add	r1, sp, #80	; 0x50
 801c946:	e881 000c 	stmia.w	r1, {r2, r3}
 801c94a:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801c94e:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801c952:	f891 900d 	ldrb.w	r9, [r1, #13]
 801c956:	9309      	str	r3, [sp, #36]	; 0x24
 801c958:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801c95c:	9310      	str	r3, [sp, #64]	; 0x40
 801c95e:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801c962:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801c966:	930c      	str	r3, [sp, #48]	; 0x30
 801c968:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801c96c:	798f      	ldrb	r7, [r1, #6]
 801c96e:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801c972:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801c976:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801c97a:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801c97e:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801c982:	431f      	orrs	r7, r3
 801c984:	f000 8195 	beq.w	801ccb2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801c988:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801c98c:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801c990:	f891 9007 	ldrb.w	r9, [r1, #7]
 801c994:	ea59 0903 	orrs.w	r9, r9, r3
 801c998:	f000 818b 	beq.w	801ccb2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801c99c:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801c9a0:	b29b      	uxth	r3, r3
 801c9a2:	2d00      	cmp	r5, #0
 801c9a4:	f000 812e 	beq.w	801cc04 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801c9a8:	1aed      	subs	r5, r5, r3
 801c9aa:	b2ad      	uxth	r5, r5
 801c9ac:	042b      	lsls	r3, r5, #16
 801c9ae:	d502      	bpl.n	801c9b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801c9b0:	1b64      	subs	r4, r4, r5
 801c9b2:	b224      	sxth	r4, r4
 801c9b4:	2500      	movs	r5, #0
 801c9b6:	f9b2 1000 	ldrsh.w	r1, [r2]
 801c9ba:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801c9be:	428c      	cmp	r4, r1
 801c9c0:	b28b      	uxth	r3, r1
 801c9c2:	bfbf      	itttt	lt
 801c9c4:	18ed      	addlt	r5, r5, r3
 801c9c6:	1b2c      	sublt	r4, r5, r4
 801c9c8:	b2a5      	uxthlt	r5, r4
 801c9ca:	460c      	movlt	r4, r1
 801c9cc:	8891      	ldrh	r1, [r2, #4]
 801c9ce:	440b      	add	r3, r1
 801c9d0:	b21b      	sxth	r3, r3
 801c9d2:	930f      	str	r3, [sp, #60]	; 0x3c
 801c9d4:	88d3      	ldrh	r3, [r2, #6]
 801c9d6:	8852      	ldrh	r2, [r2, #2]
 801c9d8:	4413      	add	r3, r2
 801c9da:	b21b      	sxth	r3, r3
 801c9dc:	930d      	str	r3, [sp, #52]	; 0x34
 801c9de:	4bbe      	ldr	r3, [pc, #760]	; (801ccd8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801c9e0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c9e2:	f893 b000 	ldrb.w	fp, [r3]
 801c9e6:	f10b 3cff 	add.w	ip, fp, #4294967295
 801c9ea:	f1dc 0300 	rsbs	r3, ip, #0
 801c9ee:	eb43 030c 	adc.w	r3, r3, ip
 801c9f2:	930e      	str	r3, [sp, #56]	; 0x38
 801c9f4:	4621      	mov	r1, r4
 801c9f6:	4653      	mov	r3, sl
 801c9f8:	a814      	add	r0, sp, #80	; 0x50
 801c9fa:	f7f6 fec2 	bl	8013782 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801c9fe:	4621      	mov	r1, r4
 801ca00:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801ca04:	4653      	mov	r3, sl
 801ca06:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ca08:	a814      	add	r0, sp, #80	; 0x50
 801ca0a:	f7f6 fed7 	bl	80137bc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801ca0e:	a918      	add	r1, sp, #96	; 0x60
 801ca10:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801ca14:	a817      	add	r0, sp, #92	; 0x5c
 801ca16:	f7f6 fffd 	bl	8013a14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801ca1a:	f1ba 0f00 	cmp.w	sl, #0
 801ca1e:	f040 80f4 	bne.w	801cc0a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801ca22:	f1bb 0f01 	cmp.w	fp, #1
 801ca26:	f040 80f8 	bne.w	801cc1a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801ca2a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ca2c:	2b00      	cmp	r3, #0
 801ca2e:	f040 8145 	bne.w	801ccbc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801ca32:	b2ba      	uxth	r2, r7
 801ca34:	b905      	cbnz	r5, 801ca38 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801ca36:	b16e      	cbz	r6, 801ca54 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801ca38:	fb06 5302 	mla	r3, r6, r2, r5
 801ca3c:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801ca3e:	fb08 f303 	mul.w	r3, r8, r3
 801ca42:	4631      	mov	r1, r6
 801ca44:	f003 0607 	and.w	r6, r3, #7
 801ca48:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801ca4c:	9328      	str	r3, [sp, #160]	; 0xa0
 801ca4e:	eba9 0301 	sub.w	r3, r9, r1
 801ca52:	930a      	str	r3, [sp, #40]	; 0x28
 801ca54:	4651      	mov	r1, sl
 801ca56:	980e      	ldr	r0, [sp, #56]	; 0x38
 801ca58:	f7ff ff1c 	bl	801c894 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801ca5c:	4681      	mov	r9, r0
 801ca5e:	980e      	ldr	r0, [sp, #56]	; 0x38
 801ca60:	f7ff ff42 	bl	801c8e8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801ca64:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ca66:	9909      	ldr	r1, [sp, #36]	; 0x24
 801ca68:	eba3 0a01 	sub.w	sl, r3, r1
 801ca6c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ca6e:	459a      	cmp	sl, r3
 801ca70:	bfa8      	it	ge
 801ca72:	469a      	movge	sl, r3
 801ca74:	f1ba 0f00 	cmp.w	sl, #0
 801ca78:	4683      	mov	fp, r0
 801ca7a:	f340 811a 	ble.w	801ccb2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ca7e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ca80:	1b64      	subs	r4, r4, r5
 801ca82:	1b1c      	subs	r4, r3, r4
 801ca84:	42bc      	cmp	r4, r7
 801ca86:	bfd4      	ite	le
 801ca88:	ebc5 0504 	rsble	r5, r5, r4
 801ca8c:	ebc5 0507 	rsbgt	r5, r5, r7
 801ca90:	2d00      	cmp	r5, #0
 801ca92:	f340 810e 	ble.w	801ccb2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ca96:	1b52      	subs	r2, r2, r5
 801ca98:	fb08 f302 	mul.w	r3, r8, r2
 801ca9c:	930f      	str	r3, [sp, #60]	; 0x3c
 801ca9e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801caa0:	2b00      	cmp	r3, #0
 801caa2:	f040 8116 	bne.w	801ccd2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801caa6:	4b8d      	ldr	r3, [pc, #564]	; (801ccdc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801caa8:	6818      	ldr	r0, [r3, #0]
 801caaa:	6803      	ldr	r3, [r0, #0]
 801caac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801caae:	4798      	blx	r3
 801cab0:	2301      	movs	r3, #1
 801cab2:	fa03 f308 	lsl.w	r3, r3, r8
 801cab6:	4a8a      	ldr	r2, [pc, #552]	; (801cce0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801cab8:	3b01      	subs	r3, #1
 801caba:	b2db      	uxtb	r3, r3
 801cabc:	8811      	ldrh	r1, [r2, #0]
 801cabe:	930e      	str	r3, [sp, #56]	; 0x38
 801cac0:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801cac4:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801cac8:	fb01 2303 	mla	r3, r1, r3, r2
 801cacc:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801cad0:	930a      	str	r3, [sp, #40]	; 0x28
 801cad2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801cad4:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801cad8:	9313      	str	r3, [sp, #76]	; 0x4c
 801cada:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801cadc:	0a19      	lsrs	r1, r3, #8
 801cade:	b2cb      	uxtb	r3, r1
 801cae0:	9312      	str	r3, [sp, #72]	; 0x48
 801cae2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801cae4:	b2db      	uxtb	r3, r3
 801cae6:	9311      	str	r3, [sp, #68]	; 0x44
 801cae8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801caea:	095a      	lsrs	r2, r3, #5
 801caec:	4b7d      	ldr	r3, [pc, #500]	; (801cce4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801caee:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801caf2:	400b      	ands	r3, r1
 801caf4:	4313      	orrs	r3, r2
 801caf6:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801caf8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cafc:	4313      	orrs	r3, r2
 801cafe:	b29b      	uxth	r3, r3
 801cb00:	9310      	str	r3, [sp, #64]	; 0x40
 801cb02:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801cb04:	781a      	ldrb	r2, [r3, #0]
 801cb06:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801cb0a:	4132      	asrs	r2, r6
 801cb0c:	fb05 b919 	mls	r9, r5, r9, fp
 801cb10:	fb03 fb05 	mul.w	fp, r3, r5
 801cb14:	b2d2      	uxtb	r2, r2
 801cb16:	930d      	str	r3, [sp, #52]	; 0x34
 801cb18:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801cb1c:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801cb20:	f0c0 80f5 	bcc.w	801cd0e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801cb24:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801cb28:	46ae      	mov	lr, r5
 801cb2a:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801cb2e:	f0c0 80dd 	bcc.w	801ccec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801cb32:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cb34:	4013      	ands	r3, r2
 801cb36:	d055      	beq.n	801cbe4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801cb38:	20ff      	movs	r0, #255	; 0xff
 801cb3a:	990e      	ldr	r1, [sp, #56]	; 0x38
 801cb3c:	fb90 f1f1 	sdiv	r1, r0, r1
 801cb40:	434b      	muls	r3, r1
 801cb42:	2bfe      	cmp	r3, #254	; 0xfe
 801cb44:	dd03      	ble.n	801cb4e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801cb46:	990c      	ldr	r1, [sp, #48]	; 0x30
 801cb48:	4281      	cmp	r1, r0
 801cb4a:	f000 80cd 	beq.w	801cce8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801cb4e:	990c      	ldr	r1, [sp, #48]	; 0x30
 801cb50:	f8bc 4000 	ldrh.w	r4, [ip]
 801cb54:	fb11 f303 	smulbb	r3, r1, r3
 801cb58:	b29b      	uxth	r3, r3
 801cb5a:	1c59      	adds	r1, r3, #1
 801cb5c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801cb60:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801cb64:	b29f      	uxth	r7, r3
 801cb66:	43db      	mvns	r3, r3
 801cb68:	b2db      	uxtb	r3, r3
 801cb6a:	9309      	str	r3, [sp, #36]	; 0x24
 801cb6c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801cb6e:	1220      	asrs	r0, r4, #8
 801cb70:	fb13 f907 	smulbb	r9, r3, r7
 801cb74:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801cb78:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cb7a:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801cb7e:	fb00 9003 	mla	r0, r0, r3, r9
 801cb82:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801cb84:	10e1      	asrs	r1, r4, #3
 801cb86:	fb13 f907 	smulbb	r9, r3, r7
 801cb8a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801cb8e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cb90:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801cb94:	fb01 9103 	mla	r1, r1, r3, r9
 801cb98:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801cb9a:	00e4      	lsls	r4, r4, #3
 801cb9c:	fb13 f707 	smulbb	r7, r3, r7
 801cba0:	b2e4      	uxtb	r4, r4
 801cba2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cba4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801cba8:	fb04 7403 	mla	r4, r4, r3, r7
 801cbac:	b280      	uxth	r0, r0
 801cbae:	b2a4      	uxth	r4, r4
 801cbb0:	1c43      	adds	r3, r0, #1
 801cbb2:	f104 0901 	add.w	r9, r4, #1
 801cbb6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801cbba:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801cbbe:	b289      	uxth	r1, r1
 801cbc0:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801cbc4:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801cbc8:	ea49 0000 	orr.w	r0, r9, r0
 801cbcc:	f101 0901 	add.w	r9, r1, #1
 801cbd0:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801cbd4:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801cbd8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801cbdc:	ea40 0009 	orr.w	r0, r0, r9
 801cbe0:	f8ac 0000 	strh.w	r0, [ip]
 801cbe4:	4446      	add	r6, r8
 801cbe6:	b2b6      	uxth	r6, r6
 801cbe8:	2e07      	cmp	r6, #7
 801cbea:	bf81      	itttt	hi
 801cbec:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801cbee:	785a      	ldrbhi	r2, [r3, #1]
 801cbf0:	3301      	addhi	r3, #1
 801cbf2:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801cbf4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801cbf6:	bf9a      	itte	ls
 801cbf8:	fa42 f208 	asrls.w	r2, r2, r8
 801cbfc:	b2d2      	uxtbls	r2, r2
 801cbfe:	2600      	movhi	r6, #0
 801cc00:	449c      	add	ip, r3
 801cc02:	e792      	b.n	801cb2a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801cc04:	441c      	add	r4, r3
 801cc06:	b224      	sxth	r4, r4
 801cc08:	e6d5      	b.n	801c9b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801cc0a:	f1ba 0f01 	cmp.w	sl, #1
 801cc0e:	f47f af0c 	bne.w	801ca2a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801cc12:	f1bb 0f01 	cmp.w	fp, #1
 801cc16:	f47f af08 	bne.w	801ca2a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801cc1a:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801ccdc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801cc1e:	f8db 0000 	ldr.w	r0, [fp]
 801cc22:	6803      	ldr	r3, [r0, #0]
 801cc24:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801cc26:	4798      	blx	r3
 801cc28:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801cc2c:	465a      	mov	r2, fp
 801cc2e:	d006      	beq.n	801cc3e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801cc30:	f1b8 0f04 	cmp.w	r8, #4
 801cc34:	d140      	bne.n	801ccb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801cc36:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cc38:	3300      	adds	r3, #0
 801cc3a:	bf18      	it	ne
 801cc3c:	2301      	movne	r3, #1
 801cc3e:	0580      	lsls	r0, r0, #22
 801cc40:	d56e      	bpl.n	801cd20 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801cc42:	f1b8 0f08 	cmp.w	r8, #8
 801cc46:	d16b      	bne.n	801cd20 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801cc48:	2b00      	cmp	r3, #0
 801cc4a:	bf0c      	ite	eq
 801cc4c:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801cc50:	f44f 7180 	movne.w	r1, #256	; 0x100
 801cc54:	2d00      	cmp	r5, #0
 801cc56:	f47f aee8 	bne.w	801ca2a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801cc5a:	2e00      	cmp	r6, #0
 801cc5c:	f47f aee5 	bne.w	801ca2a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801cc60:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801cc62:	19e3      	adds	r3, r4, r7
 801cc64:	4283      	cmp	r3, r0
 801cc66:	f73f aee0 	bgt.w	801ca2a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801cc6a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cc6c:	980d      	ldr	r0, [sp, #52]	; 0x34
 801cc6e:	444b      	add	r3, r9
 801cc70:	4283      	cmp	r3, r0
 801cc72:	f73f aeda 	bgt.w	801ca2a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801cc76:	6810      	ldr	r0, [r2, #0]
 801cc78:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801cc7c:	6804      	ldr	r4, [r0, #0]
 801cc7e:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801cc82:	b2bf      	uxth	r7, r7
 801cc84:	f1b8 0f08 	cmp.w	r8, #8
 801cc88:	f04f 0500 	mov.w	r5, #0
 801cc8c:	bf18      	it	ne
 801cc8e:	3701      	addne	r7, #1
 801cc90:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801cc94:	990c      	ldr	r1, [sp, #48]	; 0x30
 801cc96:	9104      	str	r1, [sp, #16]
 801cc98:	bf18      	it	ne
 801cc9a:	f027 0701 	bicne.w	r7, r7, #1
 801cc9e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801cca0:	bf18      	it	ne
 801cca2:	b2bf      	uxthne	r7, r7
 801cca4:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801cca8:	e9cd 7900 	strd	r7, r9, [sp]
 801ccac:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801ccae:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801ccb0:	47a0      	blx	r4
 801ccb2:	b019      	add	sp, #100	; 0x64
 801ccb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ccb8:	2300      	movs	r3, #0
 801ccba:	e7c0      	b.n	801cc3e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801ccbc:	2208      	movs	r2, #8
 801ccbe:	fb92 f3f8 	sdiv	r3, r2, r8
 801ccc2:	1e5a      	subs	r2, r3, #1
 801ccc4:	443a      	add	r2, r7
 801ccc6:	fb92 f2f3 	sdiv	r2, r2, r3
 801ccca:	fb12 f203 	smulbb	r2, r2, r3
 801ccce:	b292      	uxth	r2, r2
 801ccd0:	e6b0      	b.n	801ca34 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801ccd2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801ccd4:	e6ec      	b.n	801cab0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801ccd6:	bf00      	nop
 801ccd8:	200137b4 	.word	0x200137b4
 801ccdc:	200137bc 	.word	0x200137bc
 801cce0:	200137b6 	.word	0x200137b6
 801cce4:	00fff800 	.word	0x00fff800
 801cce8:	9810      	ldr	r0, [sp, #64]	; 0x40
 801ccea:	e779      	b.n	801cbe0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801ccec:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ccee:	b153      	cbz	r3, 801cd06 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801ccf0:	441e      	add	r6, r3
 801ccf2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ccf4:	b2b6      	uxth	r6, r6
 801ccf6:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801ccfa:	f006 0607 	and.w	r6, r6, #7
 801ccfe:	781a      	ldrb	r2, [r3, #0]
 801cd00:	9328      	str	r3, [sp, #160]	; 0xa0
 801cd02:	4132      	asrs	r2, r6
 801cd04:	b2d2      	uxtb	r2, r2
 801cd06:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801cd08:	445b      	add	r3, fp
 801cd0a:	930a      	str	r3, [sp, #40]	; 0x28
 801cd0c:	e706      	b.n	801cb1c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801cd0e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801cd10:	2b00      	cmp	r3, #0
 801cd12:	d1ce      	bne.n	801ccb2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801cd14:	4b05      	ldr	r3, [pc, #20]	; (801cd2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801cd16:	6818      	ldr	r0, [r3, #0]
 801cd18:	6803      	ldr	r3, [r0, #0]
 801cd1a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cd1c:	4798      	blx	r3
 801cd1e:	e7c8      	b.n	801ccb2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801cd20:	2b00      	cmp	r3, #0
 801cd22:	f43f ae82 	beq.w	801ca2a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801cd26:	f44f 7180 	mov.w	r1, #256	; 0x100
 801cd2a:	e793      	b.n	801cc54 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801cd2c:	200137bc 	.word	0x200137bc

0801cd30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801cd30:	b538      	push	{r3, r4, r5, lr}
 801cd32:	4c15      	ldr	r4, [pc, #84]	; (801cd88 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801cd34:	7823      	ldrb	r3, [r4, #0]
 801cd36:	f3bf 8f5b 	dmb	ish
 801cd3a:	07da      	lsls	r2, r3, #31
 801cd3c:	4605      	mov	r5, r0
 801cd3e:	d40b      	bmi.n	801cd58 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801cd40:	4620      	mov	r0, r4
 801cd42:	f009 fdbe 	bl	80268c2 <__cxa_guard_acquire>
 801cd46:	b138      	cbz	r0, 801cd58 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801cd48:	4620      	mov	r0, r4
 801cd4a:	f009 fdc6 	bl	80268da <__cxa_guard_release>
 801cd4e:	4a0f      	ldr	r2, [pc, #60]	; (801cd8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801cd50:	490f      	ldr	r1, [pc, #60]	; (801cd90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801cd52:	4810      	ldr	r0, [pc, #64]	; (801cd94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801cd54:	f009 fdae 	bl	80268b4 <__aeabi_atexit>
 801cd58:	4c0f      	ldr	r4, [pc, #60]	; (801cd98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801cd5a:	7823      	ldrb	r3, [r4, #0]
 801cd5c:	f3bf 8f5b 	dmb	ish
 801cd60:	07db      	lsls	r3, r3, #31
 801cd62:	d40b      	bmi.n	801cd7c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801cd64:	4620      	mov	r0, r4
 801cd66:	f009 fdac 	bl	80268c2 <__cxa_guard_acquire>
 801cd6a:	b138      	cbz	r0, 801cd7c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801cd6c:	4620      	mov	r0, r4
 801cd6e:	f009 fdb4 	bl	80268da <__cxa_guard_release>
 801cd72:	4a06      	ldr	r2, [pc, #24]	; (801cd8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801cd74:	4909      	ldr	r1, [pc, #36]	; (801cd9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801cd76:	480a      	ldr	r0, [pc, #40]	; (801cda0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801cd78:	f009 fd9c 	bl	80268b4 <__aeabi_atexit>
 801cd7c:	4b05      	ldr	r3, [pc, #20]	; (801cd94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801cd7e:	612b      	str	r3, [r5, #16]
 801cd80:	4b07      	ldr	r3, [pc, #28]	; (801cda0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801cd82:	616b      	str	r3, [r5, #20]
 801cd84:	bd38      	pop	{r3, r4, r5, pc}
 801cd86:	bf00      	nop
 801cd88:	2001389c 	.word	0x2001389c
 801cd8c:	20000000 	.word	0x20000000
 801cd90:	08019b33 	.word	0x08019b33
 801cd94:	200000d4 	.word	0x200000d4
 801cd98:	200138a0 	.word	0x200138a0
 801cd9c:	08019b31 	.word	0x08019b31
 801cda0:	200000d8 	.word	0x200000d8

0801cda4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801cda4:	b538      	push	{r3, r4, r5, lr}
 801cda6:	4c15      	ldr	r4, [pc, #84]	; (801cdfc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801cda8:	7823      	ldrb	r3, [r4, #0]
 801cdaa:	f3bf 8f5b 	dmb	ish
 801cdae:	07da      	lsls	r2, r3, #31
 801cdb0:	4605      	mov	r5, r0
 801cdb2:	d40b      	bmi.n	801cdcc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801cdb4:	4620      	mov	r0, r4
 801cdb6:	f009 fd84 	bl	80268c2 <__cxa_guard_acquire>
 801cdba:	b138      	cbz	r0, 801cdcc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801cdbc:	4620      	mov	r0, r4
 801cdbe:	f009 fd8c 	bl	80268da <__cxa_guard_release>
 801cdc2:	4a0f      	ldr	r2, [pc, #60]	; (801ce00 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801cdc4:	490f      	ldr	r1, [pc, #60]	; (801ce04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801cdc6:	4810      	ldr	r0, [pc, #64]	; (801ce08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801cdc8:	f009 fd74 	bl	80268b4 <__aeabi_atexit>
 801cdcc:	4c0f      	ldr	r4, [pc, #60]	; (801ce0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801cdce:	7823      	ldrb	r3, [r4, #0]
 801cdd0:	f3bf 8f5b 	dmb	ish
 801cdd4:	07db      	lsls	r3, r3, #31
 801cdd6:	d40b      	bmi.n	801cdf0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801cdd8:	4620      	mov	r0, r4
 801cdda:	f009 fd72 	bl	80268c2 <__cxa_guard_acquire>
 801cdde:	b138      	cbz	r0, 801cdf0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801cde0:	4620      	mov	r0, r4
 801cde2:	f009 fd7a 	bl	80268da <__cxa_guard_release>
 801cde6:	4a06      	ldr	r2, [pc, #24]	; (801ce00 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801cde8:	4909      	ldr	r1, [pc, #36]	; (801ce10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801cdea:	480a      	ldr	r0, [pc, #40]	; (801ce14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801cdec:	f009 fd62 	bl	80268b4 <__aeabi_atexit>
 801cdf0:	4b05      	ldr	r3, [pc, #20]	; (801ce08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801cdf2:	60ab      	str	r3, [r5, #8]
 801cdf4:	4b07      	ldr	r3, [pc, #28]	; (801ce14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801cdf6:	60eb      	str	r3, [r5, #12]
 801cdf8:	bd38      	pop	{r3, r4, r5, pc}
 801cdfa:	bf00      	nop
 801cdfc:	20013874 	.word	0x20013874
 801ce00:	20000000 	.word	0x20000000
 801ce04:	08019b37 	.word	0x08019b37
 801ce08:	200000ac 	.word	0x200000ac
 801ce0c:	20013878 	.word	0x20013878
 801ce10:	08019b35 	.word	0x08019b35
 801ce14:	200000b0 	.word	0x200000b0

0801ce18 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801ce18:	b510      	push	{r4, lr}
 801ce1a:	4604      	mov	r4, r0
 801ce1c:	f7ff ff88 	bl	801cd30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801ce20:	4620      	mov	r0, r4
 801ce22:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ce26:	f7ff bfbd 	b.w	801cda4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801ce2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801ce2c:	b538      	push	{r3, r4, r5, lr}
 801ce2e:	4c15      	ldr	r4, [pc, #84]	; (801ce84 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801ce30:	7823      	ldrb	r3, [r4, #0]
 801ce32:	f3bf 8f5b 	dmb	ish
 801ce36:	07da      	lsls	r2, r3, #31
 801ce38:	4605      	mov	r5, r0
 801ce3a:	d40b      	bmi.n	801ce54 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801ce3c:	4620      	mov	r0, r4
 801ce3e:	f009 fd40 	bl	80268c2 <__cxa_guard_acquire>
 801ce42:	b138      	cbz	r0, 801ce54 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801ce44:	4620      	mov	r0, r4
 801ce46:	f009 fd48 	bl	80268da <__cxa_guard_release>
 801ce4a:	4a0f      	ldr	r2, [pc, #60]	; (801ce88 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801ce4c:	490f      	ldr	r1, [pc, #60]	; (801ce8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801ce4e:	4810      	ldr	r0, [pc, #64]	; (801ce90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801ce50:	f009 fd30 	bl	80268b4 <__aeabi_atexit>
 801ce54:	4c0f      	ldr	r4, [pc, #60]	; (801ce94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801ce56:	7823      	ldrb	r3, [r4, #0]
 801ce58:	f3bf 8f5b 	dmb	ish
 801ce5c:	07db      	lsls	r3, r3, #31
 801ce5e:	d40b      	bmi.n	801ce78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801ce60:	4620      	mov	r0, r4
 801ce62:	f009 fd2e 	bl	80268c2 <__cxa_guard_acquire>
 801ce66:	b138      	cbz	r0, 801ce78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801ce68:	4620      	mov	r0, r4
 801ce6a:	f009 fd36 	bl	80268da <__cxa_guard_release>
 801ce6e:	4a06      	ldr	r2, [pc, #24]	; (801ce88 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801ce70:	4909      	ldr	r1, [pc, #36]	; (801ce98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801ce72:	480a      	ldr	r0, [pc, #40]	; (801ce9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801ce74:	f009 fd1e 	bl	80268b4 <__aeabi_atexit>
 801ce78:	4b05      	ldr	r3, [pc, #20]	; (801ce90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801ce7a:	622b      	str	r3, [r5, #32]
 801ce7c:	4b07      	ldr	r3, [pc, #28]	; (801ce9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801ce7e:	626b      	str	r3, [r5, #36]	; 0x24
 801ce80:	bd38      	pop	{r3, r4, r5, pc}
 801ce82:	bf00      	nop
 801ce84:	200138a4 	.word	0x200138a4
 801ce88:	20000000 	.word	0x20000000
 801ce8c:	08019b2b 	.word	0x08019b2b
 801ce90:	200000dc 	.word	0x200000dc
 801ce94:	200138a8 	.word	0x200138a8
 801ce98:	08019b29 	.word	0x08019b29
 801ce9c:	200000e0 	.word	0x200000e0

0801cea0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801cea0:	b538      	push	{r3, r4, r5, lr}
 801cea2:	4c15      	ldr	r4, [pc, #84]	; (801cef8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801cea4:	7823      	ldrb	r3, [r4, #0]
 801cea6:	f3bf 8f5b 	dmb	ish
 801ceaa:	07da      	lsls	r2, r3, #31
 801ceac:	4605      	mov	r5, r0
 801ceae:	d40b      	bmi.n	801cec8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801ceb0:	4620      	mov	r0, r4
 801ceb2:	f009 fd06 	bl	80268c2 <__cxa_guard_acquire>
 801ceb6:	b138      	cbz	r0, 801cec8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801ceb8:	4620      	mov	r0, r4
 801ceba:	f009 fd0e 	bl	80268da <__cxa_guard_release>
 801cebe:	4a0f      	ldr	r2, [pc, #60]	; (801cefc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801cec0:	490f      	ldr	r1, [pc, #60]	; (801cf00 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801cec2:	4810      	ldr	r0, [pc, #64]	; (801cf04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801cec4:	f009 fcf6 	bl	80268b4 <__aeabi_atexit>
 801cec8:	4c0f      	ldr	r4, [pc, #60]	; (801cf08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801ceca:	7823      	ldrb	r3, [r4, #0]
 801cecc:	f3bf 8f5b 	dmb	ish
 801ced0:	07db      	lsls	r3, r3, #31
 801ced2:	d40b      	bmi.n	801ceec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801ced4:	4620      	mov	r0, r4
 801ced6:	f009 fcf4 	bl	80268c2 <__cxa_guard_acquire>
 801ceda:	b138      	cbz	r0, 801ceec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801cedc:	4620      	mov	r0, r4
 801cede:	f009 fcfc 	bl	80268da <__cxa_guard_release>
 801cee2:	4a06      	ldr	r2, [pc, #24]	; (801cefc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801cee4:	4909      	ldr	r1, [pc, #36]	; (801cf0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801cee6:	480a      	ldr	r0, [pc, #40]	; (801cf10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801cee8:	f009 fce4 	bl	80268b4 <__aeabi_atexit>
 801ceec:	4b05      	ldr	r3, [pc, #20]	; (801cf04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801ceee:	61ab      	str	r3, [r5, #24]
 801cef0:	4b07      	ldr	r3, [pc, #28]	; (801cf10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801cef2:	61eb      	str	r3, [r5, #28]
 801cef4:	bd38      	pop	{r3, r4, r5, pc}
 801cef6:	bf00      	nop
 801cef8:	2001387c 	.word	0x2001387c
 801cefc:	20000000 	.word	0x20000000
 801cf00:	08019b2f 	.word	0x08019b2f
 801cf04:	200000b4 	.word	0x200000b4
 801cf08:	20013880 	.word	0x20013880
 801cf0c:	08019b2d 	.word	0x08019b2d
 801cf10:	200000b8 	.word	0x200000b8

0801cf14 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801cf14:	b510      	push	{r4, lr}
 801cf16:	4604      	mov	r4, r0
 801cf18:	f7ff ff88 	bl	801ce2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801cf1c:	4620      	mov	r0, r4
 801cf1e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801cf22:	f7ff bfbd 	b.w	801cea0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801cf28 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801cf28:	b538      	push	{r3, r4, r5, lr}
 801cf2a:	4c15      	ldr	r4, [pc, #84]	; (801cf80 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801cf2c:	7823      	ldrb	r3, [r4, #0]
 801cf2e:	f3bf 8f5b 	dmb	ish
 801cf32:	07da      	lsls	r2, r3, #31
 801cf34:	4605      	mov	r5, r0
 801cf36:	d40b      	bmi.n	801cf50 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801cf38:	4620      	mov	r0, r4
 801cf3a:	f009 fcc2 	bl	80268c2 <__cxa_guard_acquire>
 801cf3e:	b138      	cbz	r0, 801cf50 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801cf40:	4620      	mov	r0, r4
 801cf42:	f009 fcca 	bl	80268da <__cxa_guard_release>
 801cf46:	4a0f      	ldr	r2, [pc, #60]	; (801cf84 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801cf48:	490f      	ldr	r1, [pc, #60]	; (801cf88 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801cf4a:	4810      	ldr	r0, [pc, #64]	; (801cf8c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801cf4c:	f009 fcb2 	bl	80268b4 <__aeabi_atexit>
 801cf50:	4c0f      	ldr	r4, [pc, #60]	; (801cf90 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801cf52:	7823      	ldrb	r3, [r4, #0]
 801cf54:	f3bf 8f5b 	dmb	ish
 801cf58:	07db      	lsls	r3, r3, #31
 801cf5a:	d40b      	bmi.n	801cf74 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801cf5c:	4620      	mov	r0, r4
 801cf5e:	f009 fcb0 	bl	80268c2 <__cxa_guard_acquire>
 801cf62:	b138      	cbz	r0, 801cf74 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801cf64:	4620      	mov	r0, r4
 801cf66:	f009 fcb8 	bl	80268da <__cxa_guard_release>
 801cf6a:	4a06      	ldr	r2, [pc, #24]	; (801cf84 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801cf6c:	4909      	ldr	r1, [pc, #36]	; (801cf94 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801cf6e:	480a      	ldr	r0, [pc, #40]	; (801cf98 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801cf70:	f009 fca0 	bl	80268b4 <__aeabi_atexit>
 801cf74:	4b05      	ldr	r3, [pc, #20]	; (801cf8c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801cf76:	632b      	str	r3, [r5, #48]	; 0x30
 801cf78:	4b07      	ldr	r3, [pc, #28]	; (801cf98 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801cf7a:	636b      	str	r3, [r5, #52]	; 0x34
 801cf7c:	bd38      	pop	{r3, r4, r5, pc}
 801cf7e:	bf00      	nop
 801cf80:	200138b4 	.word	0x200138b4
 801cf84:	20000000 	.word	0x20000000
 801cf88:	08019b23 	.word	0x08019b23
 801cf8c:	200000ec 	.word	0x200000ec
 801cf90:	200138b8 	.word	0x200138b8
 801cf94:	08019b21 	.word	0x08019b21
 801cf98:	200000f0 	.word	0x200000f0

0801cf9c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801cf9c:	b538      	push	{r3, r4, r5, lr}
 801cf9e:	4c15      	ldr	r4, [pc, #84]	; (801cff4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801cfa0:	7823      	ldrb	r3, [r4, #0]
 801cfa2:	f3bf 8f5b 	dmb	ish
 801cfa6:	07da      	lsls	r2, r3, #31
 801cfa8:	4605      	mov	r5, r0
 801cfaa:	d40b      	bmi.n	801cfc4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801cfac:	4620      	mov	r0, r4
 801cfae:	f009 fc88 	bl	80268c2 <__cxa_guard_acquire>
 801cfb2:	b138      	cbz	r0, 801cfc4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801cfb4:	4620      	mov	r0, r4
 801cfb6:	f009 fc90 	bl	80268da <__cxa_guard_release>
 801cfba:	4a0f      	ldr	r2, [pc, #60]	; (801cff8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801cfbc:	490f      	ldr	r1, [pc, #60]	; (801cffc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801cfbe:	4810      	ldr	r0, [pc, #64]	; (801d000 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801cfc0:	f009 fc78 	bl	80268b4 <__aeabi_atexit>
 801cfc4:	4c0f      	ldr	r4, [pc, #60]	; (801d004 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801cfc6:	7823      	ldrb	r3, [r4, #0]
 801cfc8:	f3bf 8f5b 	dmb	ish
 801cfcc:	07db      	lsls	r3, r3, #31
 801cfce:	d40b      	bmi.n	801cfe8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801cfd0:	4620      	mov	r0, r4
 801cfd2:	f009 fc76 	bl	80268c2 <__cxa_guard_acquire>
 801cfd6:	b138      	cbz	r0, 801cfe8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801cfd8:	4620      	mov	r0, r4
 801cfda:	f009 fc7e 	bl	80268da <__cxa_guard_release>
 801cfde:	4a06      	ldr	r2, [pc, #24]	; (801cff8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801cfe0:	4909      	ldr	r1, [pc, #36]	; (801d008 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801cfe2:	480a      	ldr	r0, [pc, #40]	; (801d00c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801cfe4:	f009 fc66 	bl	80268b4 <__aeabi_atexit>
 801cfe8:	4b05      	ldr	r3, [pc, #20]	; (801d000 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801cfea:	62ab      	str	r3, [r5, #40]	; 0x28
 801cfec:	4b07      	ldr	r3, [pc, #28]	; (801d00c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801cfee:	62eb      	str	r3, [r5, #44]	; 0x2c
 801cff0:	bd38      	pop	{r3, r4, r5, pc}
 801cff2:	bf00      	nop
 801cff4:	20013884 	.word	0x20013884
 801cff8:	20000000 	.word	0x20000000
 801cffc:	08019b27 	.word	0x08019b27
 801d000:	200000bc 	.word	0x200000bc
 801d004:	20013888 	.word	0x20013888
 801d008:	08019b25 	.word	0x08019b25
 801d00c:	200000c0 	.word	0x200000c0

0801d010 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801d010:	b510      	push	{r4, lr}
 801d012:	4604      	mov	r4, r0
 801d014:	f7ff ff88 	bl	801cf28 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801d018:	4620      	mov	r0, r4
 801d01a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d01e:	f7ff bfbd 	b.w	801cf9c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801d024 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801d024:	b538      	push	{r3, r4, r5, lr}
 801d026:	4c15      	ldr	r4, [pc, #84]	; (801d07c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801d028:	7823      	ldrb	r3, [r4, #0]
 801d02a:	f3bf 8f5b 	dmb	ish
 801d02e:	07da      	lsls	r2, r3, #31
 801d030:	4605      	mov	r5, r0
 801d032:	d40b      	bmi.n	801d04c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801d034:	4620      	mov	r0, r4
 801d036:	f009 fc44 	bl	80268c2 <__cxa_guard_acquire>
 801d03a:	b138      	cbz	r0, 801d04c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801d03c:	4620      	mov	r0, r4
 801d03e:	f009 fc4c 	bl	80268da <__cxa_guard_release>
 801d042:	4a0f      	ldr	r2, [pc, #60]	; (801d080 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801d044:	490f      	ldr	r1, [pc, #60]	; (801d084 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801d046:	4810      	ldr	r0, [pc, #64]	; (801d088 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801d048:	f009 fc34 	bl	80268b4 <__aeabi_atexit>
 801d04c:	4c0f      	ldr	r4, [pc, #60]	; (801d08c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801d04e:	7823      	ldrb	r3, [r4, #0]
 801d050:	f3bf 8f5b 	dmb	ish
 801d054:	07db      	lsls	r3, r3, #31
 801d056:	d40b      	bmi.n	801d070 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801d058:	4620      	mov	r0, r4
 801d05a:	f009 fc32 	bl	80268c2 <__cxa_guard_acquire>
 801d05e:	b138      	cbz	r0, 801d070 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801d060:	4620      	mov	r0, r4
 801d062:	f009 fc3a 	bl	80268da <__cxa_guard_release>
 801d066:	4a06      	ldr	r2, [pc, #24]	; (801d080 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801d068:	4909      	ldr	r1, [pc, #36]	; (801d090 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801d06a:	480a      	ldr	r0, [pc, #40]	; (801d094 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801d06c:	f009 fc22 	bl	80268b4 <__aeabi_atexit>
 801d070:	4b05      	ldr	r3, [pc, #20]	; (801d088 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801d072:	652b      	str	r3, [r5, #80]	; 0x50
 801d074:	4b07      	ldr	r3, [pc, #28]	; (801d094 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801d076:	656b      	str	r3, [r5, #84]	; 0x54
 801d078:	bd38      	pop	{r3, r4, r5, pc}
 801d07a:	bf00      	nop
 801d07c:	200138bc 	.word	0x200138bc
 801d080:	20000000 	.word	0x20000000
 801d084:	08019b13 	.word	0x08019b13
 801d088:	200000f4 	.word	0x200000f4
 801d08c:	200138c0 	.word	0x200138c0
 801d090:	08019b11 	.word	0x08019b11
 801d094:	200000f8 	.word	0x200000f8

0801d098 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801d098:	b538      	push	{r3, r4, r5, lr}
 801d09a:	4c15      	ldr	r4, [pc, #84]	; (801d0f0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801d09c:	7823      	ldrb	r3, [r4, #0]
 801d09e:	f3bf 8f5b 	dmb	ish
 801d0a2:	07da      	lsls	r2, r3, #31
 801d0a4:	4605      	mov	r5, r0
 801d0a6:	d40b      	bmi.n	801d0c0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801d0a8:	4620      	mov	r0, r4
 801d0aa:	f009 fc0a 	bl	80268c2 <__cxa_guard_acquire>
 801d0ae:	b138      	cbz	r0, 801d0c0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801d0b0:	4620      	mov	r0, r4
 801d0b2:	f009 fc12 	bl	80268da <__cxa_guard_release>
 801d0b6:	4a0f      	ldr	r2, [pc, #60]	; (801d0f4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801d0b8:	490f      	ldr	r1, [pc, #60]	; (801d0f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801d0ba:	4810      	ldr	r0, [pc, #64]	; (801d0fc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801d0bc:	f009 fbfa 	bl	80268b4 <__aeabi_atexit>
 801d0c0:	4c0f      	ldr	r4, [pc, #60]	; (801d100 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801d0c2:	7823      	ldrb	r3, [r4, #0]
 801d0c4:	f3bf 8f5b 	dmb	ish
 801d0c8:	07db      	lsls	r3, r3, #31
 801d0ca:	d40b      	bmi.n	801d0e4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801d0cc:	4620      	mov	r0, r4
 801d0ce:	f009 fbf8 	bl	80268c2 <__cxa_guard_acquire>
 801d0d2:	b138      	cbz	r0, 801d0e4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801d0d4:	4620      	mov	r0, r4
 801d0d6:	f009 fc00 	bl	80268da <__cxa_guard_release>
 801d0da:	4a06      	ldr	r2, [pc, #24]	; (801d0f4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801d0dc:	4909      	ldr	r1, [pc, #36]	; (801d104 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801d0de:	480a      	ldr	r0, [pc, #40]	; (801d108 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801d0e0:	f009 fbe8 	bl	80268b4 <__aeabi_atexit>
 801d0e4:	4b05      	ldr	r3, [pc, #20]	; (801d0fc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801d0e6:	64ab      	str	r3, [r5, #72]	; 0x48
 801d0e8:	4b07      	ldr	r3, [pc, #28]	; (801d108 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801d0ea:	64eb      	str	r3, [r5, #76]	; 0x4c
 801d0ec:	bd38      	pop	{r3, r4, r5, pc}
 801d0ee:	bf00      	nop
 801d0f0:	200138c4 	.word	0x200138c4
 801d0f4:	20000000 	.word	0x20000000
 801d0f8:	08019b17 	.word	0x08019b17
 801d0fc:	200000fc 	.word	0x200000fc
 801d100:	200138c8 	.word	0x200138c8
 801d104:	08019b15 	.word	0x08019b15
 801d108:	20000100 	.word	0x20000100

0801d10c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801d10c:	b538      	push	{r3, r4, r5, lr}
 801d10e:	4c15      	ldr	r4, [pc, #84]	; (801d164 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801d110:	7823      	ldrb	r3, [r4, #0]
 801d112:	f3bf 8f5b 	dmb	ish
 801d116:	07da      	lsls	r2, r3, #31
 801d118:	4605      	mov	r5, r0
 801d11a:	d40b      	bmi.n	801d134 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801d11c:	4620      	mov	r0, r4
 801d11e:	f009 fbd0 	bl	80268c2 <__cxa_guard_acquire>
 801d122:	b138      	cbz	r0, 801d134 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801d124:	4620      	mov	r0, r4
 801d126:	f009 fbd8 	bl	80268da <__cxa_guard_release>
 801d12a:	4a0f      	ldr	r2, [pc, #60]	; (801d168 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801d12c:	490f      	ldr	r1, [pc, #60]	; (801d16c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801d12e:	4810      	ldr	r0, [pc, #64]	; (801d170 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801d130:	f009 fbc0 	bl	80268b4 <__aeabi_atexit>
 801d134:	4c0f      	ldr	r4, [pc, #60]	; (801d174 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801d136:	7823      	ldrb	r3, [r4, #0]
 801d138:	f3bf 8f5b 	dmb	ish
 801d13c:	07db      	lsls	r3, r3, #31
 801d13e:	d40b      	bmi.n	801d158 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801d140:	4620      	mov	r0, r4
 801d142:	f009 fbbe 	bl	80268c2 <__cxa_guard_acquire>
 801d146:	b138      	cbz	r0, 801d158 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801d148:	4620      	mov	r0, r4
 801d14a:	f009 fbc6 	bl	80268da <__cxa_guard_release>
 801d14e:	4a06      	ldr	r2, [pc, #24]	; (801d168 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801d150:	4909      	ldr	r1, [pc, #36]	; (801d178 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801d152:	480a      	ldr	r0, [pc, #40]	; (801d17c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801d154:	f009 fbae 	bl	80268b4 <__aeabi_atexit>
 801d158:	4b05      	ldr	r3, [pc, #20]	; (801d170 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801d15a:	642b      	str	r3, [r5, #64]	; 0x40
 801d15c:	4b07      	ldr	r3, [pc, #28]	; (801d17c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801d15e:	646b      	str	r3, [r5, #68]	; 0x44
 801d160:	bd38      	pop	{r3, r4, r5, pc}
 801d162:	bf00      	nop
 801d164:	2001388c 	.word	0x2001388c
 801d168:	20000000 	.word	0x20000000
 801d16c:	08019b1b 	.word	0x08019b1b
 801d170:	200000c4 	.word	0x200000c4
 801d174:	20013890 	.word	0x20013890
 801d178:	08019b19 	.word	0x08019b19
 801d17c:	200000c8 	.word	0x200000c8

0801d180 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801d180:	b538      	push	{r3, r4, r5, lr}
 801d182:	4c15      	ldr	r4, [pc, #84]	; (801d1d8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801d184:	7823      	ldrb	r3, [r4, #0]
 801d186:	f3bf 8f5b 	dmb	ish
 801d18a:	07da      	lsls	r2, r3, #31
 801d18c:	4605      	mov	r5, r0
 801d18e:	d40b      	bmi.n	801d1a8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801d190:	4620      	mov	r0, r4
 801d192:	f009 fb96 	bl	80268c2 <__cxa_guard_acquire>
 801d196:	b138      	cbz	r0, 801d1a8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801d198:	4620      	mov	r0, r4
 801d19a:	f009 fb9e 	bl	80268da <__cxa_guard_release>
 801d19e:	4a0f      	ldr	r2, [pc, #60]	; (801d1dc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801d1a0:	490f      	ldr	r1, [pc, #60]	; (801d1e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801d1a2:	4810      	ldr	r0, [pc, #64]	; (801d1e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801d1a4:	f009 fb86 	bl	80268b4 <__aeabi_atexit>
 801d1a8:	4c0f      	ldr	r4, [pc, #60]	; (801d1e8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801d1aa:	7823      	ldrb	r3, [r4, #0]
 801d1ac:	f3bf 8f5b 	dmb	ish
 801d1b0:	07db      	lsls	r3, r3, #31
 801d1b2:	d40b      	bmi.n	801d1cc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801d1b4:	4620      	mov	r0, r4
 801d1b6:	f009 fb84 	bl	80268c2 <__cxa_guard_acquire>
 801d1ba:	b138      	cbz	r0, 801d1cc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801d1bc:	4620      	mov	r0, r4
 801d1be:	f009 fb8c 	bl	80268da <__cxa_guard_release>
 801d1c2:	4a06      	ldr	r2, [pc, #24]	; (801d1dc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801d1c4:	4909      	ldr	r1, [pc, #36]	; (801d1ec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801d1c6:	480a      	ldr	r0, [pc, #40]	; (801d1f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801d1c8:	f009 fb74 	bl	80268b4 <__aeabi_atexit>
 801d1cc:	4b05      	ldr	r3, [pc, #20]	; (801d1e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801d1ce:	63ab      	str	r3, [r5, #56]	; 0x38
 801d1d0:	4b07      	ldr	r3, [pc, #28]	; (801d1f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801d1d2:	63eb      	str	r3, [r5, #60]	; 0x3c
 801d1d4:	bd38      	pop	{r3, r4, r5, pc}
 801d1d6:	bf00      	nop
 801d1d8:	200138ac 	.word	0x200138ac
 801d1dc:	20000000 	.word	0x20000000
 801d1e0:	08019b1f 	.word	0x08019b1f
 801d1e4:	200000e4 	.word	0x200000e4
 801d1e8:	200138b0 	.word	0x200138b0
 801d1ec:	08019b1d 	.word	0x08019b1d
 801d1f0:	200000e8 	.word	0x200000e8

0801d1f4 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801d1f4:	b510      	push	{r4, lr}
 801d1f6:	4604      	mov	r4, r0
 801d1f8:	f7ff ff14 	bl	801d024 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801d1fc:	4620      	mov	r0, r4
 801d1fe:	f7ff ff85 	bl	801d10c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801d202:	4620      	mov	r0, r4
 801d204:	f7ff ff48 	bl	801d098 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801d208:	4620      	mov	r0, r4
 801d20a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d20e:	f7ff bfb7 	b.w	801d180 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801d214 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801d214:	b538      	push	{r3, r4, r5, lr}
 801d216:	4c15      	ldr	r4, [pc, #84]	; (801d26c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801d218:	7823      	ldrb	r3, [r4, #0]
 801d21a:	f3bf 8f5b 	dmb	ish
 801d21e:	07da      	lsls	r2, r3, #31
 801d220:	4605      	mov	r5, r0
 801d222:	d40b      	bmi.n	801d23c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801d224:	4620      	mov	r0, r4
 801d226:	f009 fb4c 	bl	80268c2 <__cxa_guard_acquire>
 801d22a:	b138      	cbz	r0, 801d23c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801d22c:	4620      	mov	r0, r4
 801d22e:	f009 fb54 	bl	80268da <__cxa_guard_release>
 801d232:	4a0f      	ldr	r2, [pc, #60]	; (801d270 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801d234:	490f      	ldr	r1, [pc, #60]	; (801d274 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801d236:	4810      	ldr	r0, [pc, #64]	; (801d278 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801d238:	f009 fb3c 	bl	80268b4 <__aeabi_atexit>
 801d23c:	4c0f      	ldr	r4, [pc, #60]	; (801d27c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801d23e:	7823      	ldrb	r3, [r4, #0]
 801d240:	f3bf 8f5b 	dmb	ish
 801d244:	07db      	lsls	r3, r3, #31
 801d246:	d40b      	bmi.n	801d260 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801d248:	4620      	mov	r0, r4
 801d24a:	f009 fb3a 	bl	80268c2 <__cxa_guard_acquire>
 801d24e:	b138      	cbz	r0, 801d260 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801d250:	4620      	mov	r0, r4
 801d252:	f009 fb42 	bl	80268da <__cxa_guard_release>
 801d256:	4a06      	ldr	r2, [pc, #24]	; (801d270 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801d258:	4909      	ldr	r1, [pc, #36]	; (801d280 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801d25a:	480a      	ldr	r0, [pc, #40]	; (801d284 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801d25c:	f009 fb2a 	bl	80268b4 <__aeabi_atexit>
 801d260:	4b05      	ldr	r3, [pc, #20]	; (801d278 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801d262:	662b      	str	r3, [r5, #96]	; 0x60
 801d264:	4b07      	ldr	r3, [pc, #28]	; (801d284 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801d266:	666b      	str	r3, [r5, #100]	; 0x64
 801d268:	bd38      	pop	{r3, r4, r5, pc}
 801d26a:	bf00      	nop
 801d26c:	20013894 	.word	0x20013894
 801d270:	20000000 	.word	0x20000000
 801d274:	08019b0b 	.word	0x08019b0b
 801d278:	200000cc 	.word	0x200000cc
 801d27c:	20013898 	.word	0x20013898
 801d280:	08019b09 	.word	0x08019b09
 801d284:	200000d0 	.word	0x200000d0

0801d288 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801d288:	b538      	push	{r3, r4, r5, lr}
 801d28a:	4c15      	ldr	r4, [pc, #84]	; (801d2e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801d28c:	7823      	ldrb	r3, [r4, #0]
 801d28e:	f3bf 8f5b 	dmb	ish
 801d292:	07da      	lsls	r2, r3, #31
 801d294:	4605      	mov	r5, r0
 801d296:	d40b      	bmi.n	801d2b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801d298:	4620      	mov	r0, r4
 801d29a:	f009 fb12 	bl	80268c2 <__cxa_guard_acquire>
 801d29e:	b138      	cbz	r0, 801d2b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801d2a0:	4620      	mov	r0, r4
 801d2a2:	f009 fb1a 	bl	80268da <__cxa_guard_release>
 801d2a6:	4a0f      	ldr	r2, [pc, #60]	; (801d2e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801d2a8:	490f      	ldr	r1, [pc, #60]	; (801d2e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801d2aa:	4810      	ldr	r0, [pc, #64]	; (801d2ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801d2ac:	f009 fb02 	bl	80268b4 <__aeabi_atexit>
 801d2b0:	4c0f      	ldr	r4, [pc, #60]	; (801d2f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801d2b2:	7823      	ldrb	r3, [r4, #0]
 801d2b4:	f3bf 8f5b 	dmb	ish
 801d2b8:	07db      	lsls	r3, r3, #31
 801d2ba:	d40b      	bmi.n	801d2d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801d2bc:	4620      	mov	r0, r4
 801d2be:	f009 fb00 	bl	80268c2 <__cxa_guard_acquire>
 801d2c2:	b138      	cbz	r0, 801d2d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801d2c4:	4620      	mov	r0, r4
 801d2c6:	f009 fb08 	bl	80268da <__cxa_guard_release>
 801d2ca:	4a06      	ldr	r2, [pc, #24]	; (801d2e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801d2cc:	4909      	ldr	r1, [pc, #36]	; (801d2f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801d2ce:	480a      	ldr	r0, [pc, #40]	; (801d2f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801d2d0:	f009 faf0 	bl	80268b4 <__aeabi_atexit>
 801d2d4:	4b05      	ldr	r3, [pc, #20]	; (801d2ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801d2d6:	65ab      	str	r3, [r5, #88]	; 0x58
 801d2d8:	4b07      	ldr	r3, [pc, #28]	; (801d2f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801d2da:	65eb      	str	r3, [r5, #92]	; 0x5c
 801d2dc:	bd38      	pop	{r3, r4, r5, pc}
 801d2de:	bf00      	nop
 801d2e0:	2001386c 	.word	0x2001386c
 801d2e4:	20000000 	.word	0x20000000
 801d2e8:	08019b0f 	.word	0x08019b0f
 801d2ec:	200000a4 	.word	0x200000a4
 801d2f0:	20013870 	.word	0x20013870
 801d2f4:	08019b0d 	.word	0x08019b0d
 801d2f8:	200000a8 	.word	0x200000a8

0801d2fc <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801d2fc:	b510      	push	{r4, lr}
 801d2fe:	4604      	mov	r4, r0
 801d300:	f7ff ff88 	bl	801d214 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801d304:	4620      	mov	r0, r4
 801d306:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d30a:	f7ff bfbd 	b.w	801d288 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801d310 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801d310:	b538      	push	{r3, r4, r5, lr}
 801d312:	4c15      	ldr	r4, [pc, #84]	; (801d368 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801d314:	7823      	ldrb	r3, [r4, #0]
 801d316:	f3bf 8f5b 	dmb	ish
 801d31a:	07da      	lsls	r2, r3, #31
 801d31c:	4605      	mov	r5, r0
 801d31e:	d40b      	bmi.n	801d338 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801d320:	4620      	mov	r0, r4
 801d322:	f009 face 	bl	80268c2 <__cxa_guard_acquire>
 801d326:	b138      	cbz	r0, 801d338 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801d328:	4620      	mov	r0, r4
 801d32a:	f009 fad6 	bl	80268da <__cxa_guard_release>
 801d32e:	4a0f      	ldr	r2, [pc, #60]	; (801d36c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801d330:	490f      	ldr	r1, [pc, #60]	; (801d370 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801d332:	4810      	ldr	r0, [pc, #64]	; (801d374 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801d334:	f009 fabe 	bl	80268b4 <__aeabi_atexit>
 801d338:	4c0f      	ldr	r4, [pc, #60]	; (801d378 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801d33a:	7823      	ldrb	r3, [r4, #0]
 801d33c:	f3bf 8f5b 	dmb	ish
 801d340:	07db      	lsls	r3, r3, #31
 801d342:	d40b      	bmi.n	801d35c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801d344:	4620      	mov	r0, r4
 801d346:	f009 fabc 	bl	80268c2 <__cxa_guard_acquire>
 801d34a:	b138      	cbz	r0, 801d35c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801d34c:	4620      	mov	r0, r4
 801d34e:	f009 fac4 	bl	80268da <__cxa_guard_release>
 801d352:	4a06      	ldr	r2, [pc, #24]	; (801d36c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801d354:	4909      	ldr	r1, [pc, #36]	; (801d37c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801d356:	480a      	ldr	r0, [pc, #40]	; (801d380 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801d358:	f009 faac 	bl	80268b4 <__aeabi_atexit>
 801d35c:	4b05      	ldr	r3, [pc, #20]	; (801d374 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801d35e:	672b      	str	r3, [r5, #112]	; 0x70
 801d360:	4b07      	ldr	r3, [pc, #28]	; (801d380 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801d362:	676b      	str	r3, [r5, #116]	; 0x74
 801d364:	bd38      	pop	{r3, r4, r5, pc}
 801d366:	bf00      	nop
 801d368:	20013864 	.word	0x20013864
 801d36c:	20000000 	.word	0x20000000
 801d370:	08019b03 	.word	0x08019b03
 801d374:	2000009c 	.word	0x2000009c
 801d378:	20013868 	.word	0x20013868
 801d37c:	08019b01 	.word	0x08019b01
 801d380:	200000a0 	.word	0x200000a0

0801d384 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801d384:	b538      	push	{r3, r4, r5, lr}
 801d386:	4c15      	ldr	r4, [pc, #84]	; (801d3dc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801d388:	7823      	ldrb	r3, [r4, #0]
 801d38a:	f3bf 8f5b 	dmb	ish
 801d38e:	07da      	lsls	r2, r3, #31
 801d390:	4605      	mov	r5, r0
 801d392:	d40b      	bmi.n	801d3ac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801d394:	4620      	mov	r0, r4
 801d396:	f009 fa94 	bl	80268c2 <__cxa_guard_acquire>
 801d39a:	b138      	cbz	r0, 801d3ac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801d39c:	4620      	mov	r0, r4
 801d39e:	f009 fa9c 	bl	80268da <__cxa_guard_release>
 801d3a2:	4a0f      	ldr	r2, [pc, #60]	; (801d3e0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801d3a4:	490f      	ldr	r1, [pc, #60]	; (801d3e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801d3a6:	4810      	ldr	r0, [pc, #64]	; (801d3e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801d3a8:	f009 fa84 	bl	80268b4 <__aeabi_atexit>
 801d3ac:	4c0f      	ldr	r4, [pc, #60]	; (801d3ec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801d3ae:	7823      	ldrb	r3, [r4, #0]
 801d3b0:	f3bf 8f5b 	dmb	ish
 801d3b4:	07db      	lsls	r3, r3, #31
 801d3b6:	d40b      	bmi.n	801d3d0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801d3b8:	4620      	mov	r0, r4
 801d3ba:	f009 fa82 	bl	80268c2 <__cxa_guard_acquire>
 801d3be:	b138      	cbz	r0, 801d3d0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801d3c0:	4620      	mov	r0, r4
 801d3c2:	f009 fa8a 	bl	80268da <__cxa_guard_release>
 801d3c6:	4a06      	ldr	r2, [pc, #24]	; (801d3e0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801d3c8:	4909      	ldr	r1, [pc, #36]	; (801d3f0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801d3ca:	480a      	ldr	r0, [pc, #40]	; (801d3f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801d3cc:	f009 fa72 	bl	80268b4 <__aeabi_atexit>
 801d3d0:	4b05      	ldr	r3, [pc, #20]	; (801d3e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801d3d2:	66ab      	str	r3, [r5, #104]	; 0x68
 801d3d4:	4b07      	ldr	r3, [pc, #28]	; (801d3f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801d3d6:	66eb      	str	r3, [r5, #108]	; 0x6c
 801d3d8:	bd38      	pop	{r3, r4, r5, pc}
 801d3da:	bf00      	nop
 801d3dc:	2001385c 	.word	0x2001385c
 801d3e0:	20000000 	.word	0x20000000
 801d3e4:	08019b07 	.word	0x08019b07
 801d3e8:	20000094 	.word	0x20000094
 801d3ec:	20013860 	.word	0x20013860
 801d3f0:	08019b05 	.word	0x08019b05
 801d3f4:	20000098 	.word	0x20000098

0801d3f8 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801d3f8:	b510      	push	{r4, lr}
 801d3fa:	4604      	mov	r4, r0
 801d3fc:	f7ff ff88 	bl	801d310 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801d400:	4620      	mov	r0, r4
 801d402:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d406:	f7ff bfbd 	b.w	801d384 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801d40a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801d40a:	b510      	push	{r4, lr}
 801d40c:	4604      	mov	r4, r0
 801d40e:	f7ff fff3 	bl	801d3f8 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801d412:	4620      	mov	r0, r4
 801d414:	f7ff ff72 	bl	801d2fc <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801d418:	4620      	mov	r0, r4
 801d41a:	f7ff fdf9 	bl	801d010 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801d41e:	4620      	mov	r0, r4
 801d420:	f7ff fcfa 	bl	801ce18 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801d424:	4620      	mov	r0, r4
 801d426:	f7ff fd75 	bl	801cf14 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801d42a:	4620      	mov	r0, r4
 801d42c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d430:	f7ff bee0 	b.w	801d1f4 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801d434 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801d434:	b538      	push	{r3, r4, r5, lr}
 801d436:	4c0b      	ldr	r4, [pc, #44]	; (801d464 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801d438:	7823      	ldrb	r3, [r4, #0]
 801d43a:	f3bf 8f5b 	dmb	ish
 801d43e:	07db      	lsls	r3, r3, #31
 801d440:	4605      	mov	r5, r0
 801d442:	d40b      	bmi.n	801d45c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801d444:	4620      	mov	r0, r4
 801d446:	f009 fa3c 	bl	80268c2 <__cxa_guard_acquire>
 801d44a:	b138      	cbz	r0, 801d45c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801d44c:	4620      	mov	r0, r4
 801d44e:	f009 fa44 	bl	80268da <__cxa_guard_release>
 801d452:	4a05      	ldr	r2, [pc, #20]	; (801d468 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801d454:	4905      	ldr	r1, [pc, #20]	; (801d46c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801d456:	4806      	ldr	r0, [pc, #24]	; (801d470 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801d458:	f009 fa2c 	bl	80268b4 <__aeabi_atexit>
 801d45c:	4b04      	ldr	r3, [pc, #16]	; (801d470 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801d45e:	67ab      	str	r3, [r5, #120]	; 0x78
 801d460:	bd38      	pop	{r3, r4, r5, pc}
 801d462:	bf00      	nop
 801d464:	20013850 	.word	0x20013850
 801d468:	20000000 	.word	0x20000000
 801d46c:	08019aff 	.word	0x08019aff
 801d470:	2000008c 	.word	0x2000008c

0801d474 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801d474:	b538      	push	{r3, r4, r5, lr}
 801d476:	4c0b      	ldr	r4, [pc, #44]	; (801d4a4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801d478:	7823      	ldrb	r3, [r4, #0]
 801d47a:	f3bf 8f5b 	dmb	ish
 801d47e:	07db      	lsls	r3, r3, #31
 801d480:	4605      	mov	r5, r0
 801d482:	d40b      	bmi.n	801d49c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801d484:	4620      	mov	r0, r4
 801d486:	f009 fa1c 	bl	80268c2 <__cxa_guard_acquire>
 801d48a:	b138      	cbz	r0, 801d49c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801d48c:	4620      	mov	r0, r4
 801d48e:	f009 fa24 	bl	80268da <__cxa_guard_release>
 801d492:	4a05      	ldr	r2, [pc, #20]	; (801d4a8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801d494:	4905      	ldr	r1, [pc, #20]	; (801d4ac <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801d496:	4806      	ldr	r0, [pc, #24]	; (801d4b0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801d498:	f009 fa0c 	bl	80268b4 <__aeabi_atexit>
 801d49c:	4b04      	ldr	r3, [pc, #16]	; (801d4b0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801d49e:	67eb      	str	r3, [r5, #124]	; 0x7c
 801d4a0:	bd38      	pop	{r3, r4, r5, pc}
 801d4a2:	bf00      	nop
 801d4a4:	20013854 	.word	0x20013854
 801d4a8:	20000000 	.word	0x20000000
 801d4ac:	08019afd 	.word	0x08019afd
 801d4b0:	20000090 	.word	0x20000090

0801d4b4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801d4b4:	b570      	push	{r4, r5, r6, lr}
 801d4b6:	4d0d      	ldr	r5, [pc, #52]	; (801d4ec <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801d4b8:	4c0d      	ldr	r4, [pc, #52]	; (801d4f0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801d4ba:	782b      	ldrb	r3, [r5, #0]
 801d4bc:	f3bf 8f5b 	dmb	ish
 801d4c0:	f013 0f01 	tst.w	r3, #1
 801d4c4:	4606      	mov	r6, r0
 801d4c6:	d10d      	bne.n	801d4e4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801d4c8:	4628      	mov	r0, r5
 801d4ca:	f009 f9fa 	bl	80268c2 <__cxa_guard_acquire>
 801d4ce:	b148      	cbz	r0, 801d4e4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801d4d0:	4b08      	ldr	r3, [pc, #32]	; (801d4f4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801d4d2:	6023      	str	r3, [r4, #0]
 801d4d4:	4628      	mov	r0, r5
 801d4d6:	f009 fa00 	bl	80268da <__cxa_guard_release>
 801d4da:	4a07      	ldr	r2, [pc, #28]	; (801d4f8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801d4dc:	4907      	ldr	r1, [pc, #28]	; (801d4fc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801d4de:	4620      	mov	r0, r4
 801d4e0:	f009 f9e8 	bl	80268b4 <__aeabi_atexit>
 801d4e4:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 801d4e8:	bd70      	pop	{r4, r5, r6, pc}
 801d4ea:	bf00      	nop
 801d4ec:	20013858 	.word	0x20013858
 801d4f0:	200138cc 	.word	0x200138cc
 801d4f4:	0802b990 	.word	0x0802b990
 801d4f8:	20000000 	.word	0x20000000
 801d4fc:	08019afb 	.word	0x08019afb

0801d500 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801d500:	b510      	push	{r4, lr}
 801d502:	4604      	mov	r4, r0
 801d504:	f7ff ff96 	bl	801d434 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801d508:	4620      	mov	r0, r4
 801d50a:	f7ff ffb3 	bl	801d474 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801d50e:	4620      	mov	r0, r4
 801d510:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d514:	f7ff bfce 	b.w	801d4b4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801d518 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801d518:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d51c:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801d520:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801d524:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801d528:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801d52c:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801d530:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801d534:	8808      	ldrh	r0, [r1, #0]
 801d536:	fb05 4c0e 	mla	ip, r5, lr, r4
 801d53a:	2d00      	cmp	r5, #0
 801d53c:	eb02 0a0c 	add.w	sl, r2, ip
 801d540:	f2c0 80b0 	blt.w	801d6a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801d544:	45ab      	cmp	fp, r5
 801d546:	f340 80ad 	ble.w	801d6a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801d54a:	2c00      	cmp	r4, #0
 801d54c:	f2c0 80a8 	blt.w	801d6a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801d550:	45a6      	cmp	lr, r4
 801d552:	f340 80a5 	ble.w	801d6a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801d556:	f812 200c 	ldrb.w	r2, [r2, ip]
 801d55a:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801d55e:	1c62      	adds	r2, r4, #1
 801d560:	f100 80a3 	bmi.w	801d6aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801d564:	4596      	cmp	lr, r2
 801d566:	f340 80a0 	ble.w	801d6aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801d56a:	f1b9 0f00 	cmp.w	r9, #0
 801d56e:	f000 809c 	beq.w	801d6aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801d572:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801d576:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801d57a:	3501      	adds	r5, #1
 801d57c:	f100 8099 	bmi.w	801d6b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801d580:	45ab      	cmp	fp, r5
 801d582:	f340 8096 	ble.w	801d6b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801d586:	2f00      	cmp	r7, #0
 801d588:	f000 8093 	beq.w	801d6b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801d58c:	2c00      	cmp	r4, #0
 801d58e:	f2c0 808e 	blt.w	801d6ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801d592:	45a6      	cmp	lr, r4
 801d594:	f340 808b 	ble.w	801d6ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801d598:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801d59c:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801d5a0:	3401      	adds	r4, #1
 801d5a2:	f100 8089 	bmi.w	801d6b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801d5a6:	45a6      	cmp	lr, r4
 801d5a8:	f340 8086 	ble.w	801d6b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801d5ac:	f1b9 0f00 	cmp.w	r9, #0
 801d5b0:	f000 8082 	beq.w	801d6b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801d5b4:	44d6      	add	lr, sl
 801d5b6:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801d5ba:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801d5be:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801d5c2:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d5c6:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801d5ca:	fb19 fe07 	smulbb	lr, r9, r7
 801d5ce:	ea44 0808 	orr.w	r8, r4, r8
 801d5d2:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801d5d6:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801d5da:	f1c7 0210 	rsb	r2, r7, #16
 801d5de:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d5e2:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d5e6:	ea44 0c0c 	orr.w	ip, r4, ip
 801d5ea:	eba2 0209 	sub.w	r2, r2, r9
 801d5ee:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801d5f2:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801d5f6:	fb04 f40c 	mul.w	r4, r4, ip
 801d5fa:	fb02 4808 	mla	r8, r2, r8, r4
 801d5fe:	041a      	lsls	r2, r3, #16
 801d600:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d604:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d608:	4313      	orrs	r3, r2
 801d60a:	042a      	lsls	r2, r5, #16
 801d60c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d610:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801d614:	fb0e 8303 	mla	r3, lr, r3, r8
 801d618:	432a      	orrs	r2, r5
 801d61a:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801d61e:	fb07 3202 	mla	r2, r7, r2, r3
 801d622:	0d53      	lsrs	r3, r2, #21
 801d624:	0952      	lsrs	r2, r2, #5
 801d626:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d62a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d62e:	431a      	orrs	r2, r3
 801d630:	b293      	uxth	r3, r2
 801d632:	b2b4      	uxth	r4, r6
 801d634:	1202      	asrs	r2, r0, #8
 801d636:	43f6      	mvns	r6, r6
 801d638:	b2f6      	uxtb	r6, r6
 801d63a:	121d      	asrs	r5, r3, #8
 801d63c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801d640:	fb12 f206 	smulbb	r2, r2, r6
 801d644:	10c7      	asrs	r7, r0, #3
 801d646:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d64a:	00c0      	lsls	r0, r0, #3
 801d64c:	fb05 2504 	mla	r5, r5, r4, r2
 801d650:	b2c0      	uxtb	r0, r0
 801d652:	10da      	asrs	r2, r3, #3
 801d654:	00db      	lsls	r3, r3, #3
 801d656:	b2db      	uxtb	r3, r3
 801d658:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d65c:	fb10 f006 	smulbb	r0, r0, r6
 801d660:	b2ad      	uxth	r5, r5
 801d662:	fb03 0004 	mla	r0, r3, r4, r0
 801d666:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d66a:	fb17 f706 	smulbb	r7, r7, r6
 801d66e:	b280      	uxth	r0, r0
 801d670:	1c6b      	adds	r3, r5, #1
 801d672:	fb02 7204 	mla	r2, r2, r4, r7
 801d676:	b292      	uxth	r2, r2
 801d678:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d67c:	1c43      	adds	r3, r0, #1
 801d67e:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801d682:	1c50      	adds	r0, r2, #1
 801d684:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801d688:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d68c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d690:	0952      	lsrs	r2, r2, #5
 801d692:	432b      	orrs	r3, r5
 801d694:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d698:	4313      	orrs	r3, r2
 801d69a:	800b      	strh	r3, [r1, #0]
 801d69c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d6a0:	4680      	mov	r8, r0
 801d6a2:	e75c      	b.n	801d55e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801d6a4:	4684      	mov	ip, r0
 801d6a6:	4680      	mov	r8, r0
 801d6a8:	e767      	b.n	801d57a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801d6aa:	4684      	mov	ip, r0
 801d6ac:	e765      	b.n	801d57a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801d6ae:	4605      	mov	r5, r0
 801d6b0:	e776      	b.n	801d5a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801d6b2:	4603      	mov	r3, r0
 801d6b4:	4605      	mov	r5, r0
 801d6b6:	e782      	b.n	801d5be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801d6b8:	4603      	mov	r3, r0
 801d6ba:	e780      	b.n	801d5be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801d6bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d6bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d6c0:	b099      	sub	sp, #100	; 0x64
 801d6c2:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801d6c6:	9215      	str	r2, [sp, #84]	; 0x54
 801d6c8:	9309      	str	r3, [sp, #36]	; 0x24
 801d6ca:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801d6cc:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801d6d0:	930d      	str	r3, [sp, #52]	; 0x34
 801d6d2:	910c      	str	r1, [sp, #48]	; 0x30
 801d6d4:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 801d6d8:	9016      	str	r0, [sp, #88]	; 0x58
 801d6da:	6850      	ldr	r0, [r2, #4]
 801d6dc:	6812      	ldr	r2, [r2, #0]
 801d6de:	fb00 1303 	mla	r3, r0, r3, r1
 801d6e2:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801d6e6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d6e8:	681b      	ldr	r3, [r3, #0]
 801d6ea:	930b      	str	r3, [sp, #44]	; 0x2c
 801d6ec:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d6ee:	685e      	ldr	r6, [r3, #4]
 801d6f0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d6f2:	43db      	mvns	r3, r3
 801d6f4:	b2db      	uxtb	r3, r3
 801d6f6:	3604      	adds	r6, #4
 801d6f8:	930a      	str	r3, [sp, #40]	; 0x28
 801d6fa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d6fc:	2b00      	cmp	r3, #0
 801d6fe:	dc03      	bgt.n	801d708 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801d700:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801d702:	2b00      	cmp	r3, #0
 801d704:	f340 8225 	ble.w	801db52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801d708:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d70a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d70e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d712:	1e48      	subs	r0, r1, #1
 801d714:	1e57      	subs	r7, r2, #1
 801d716:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d718:	2b00      	cmp	r3, #0
 801d71a:	f340 80e3 	ble.w	801d8e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801d71e:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801d722:	ea4f 4325 	mov.w	r3, r5, asr #16
 801d726:	d406      	bmi.n	801d736 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d728:	4584      	cmp	ip, r0
 801d72a:	da04      	bge.n	801d736 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d72c:	2b00      	cmp	r3, #0
 801d72e:	db02      	blt.n	801d736 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d730:	42bb      	cmp	r3, r7
 801d732:	f2c0 80d8 	blt.w	801d8e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801d736:	f11c 0c01 	adds.w	ip, ip, #1
 801d73a:	f100 80c9 	bmi.w	801d8d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d73e:	4561      	cmp	r1, ip
 801d740:	f2c0 80c6 	blt.w	801d8d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d744:	3301      	adds	r3, #1
 801d746:	f100 80c3 	bmi.w	801d8d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d74a:	429a      	cmp	r2, r3
 801d74c:	f2c0 80c0 	blt.w	801d8d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d750:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801d754:	4647      	mov	r7, r8
 801d756:	f1bb 0f00 	cmp.w	fp, #0
 801d75a:	f340 80e3 	ble.w	801d924 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801d75e:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801d760:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d762:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801d766:	689b      	ldr	r3, [r3, #8]
 801d768:	ea5f 422a 	movs.w	r2, sl, asr #16
 801d76c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801d770:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801d774:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801d778:	f100 8121 	bmi.w	801d9be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801d77c:	f103 39ff 	add.w	r9, r3, #4294967295
 801d780:	454a      	cmp	r2, r9
 801d782:	f280 811c 	bge.w	801d9be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801d786:	f1bc 0f00 	cmp.w	ip, #0
 801d78a:	f2c0 8118 	blt.w	801d9be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801d78e:	f10e 39ff 	add.w	r9, lr, #4294967295
 801d792:	45cc      	cmp	ip, r9
 801d794:	f280 8113 	bge.w	801d9be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801d798:	b21b      	sxth	r3, r3
 801d79a:	fb0c 2203 	mla	r2, ip, r3, r2
 801d79e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801d7a0:	eb04 0902 	add.w	r9, r4, r2
 801d7a4:	5ca2      	ldrb	r2, [r4, r2]
 801d7a6:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801d7aa:	2800      	cmp	r0, #0
 801d7ac:	f000 80fe 	beq.w	801d9ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801d7b0:	f899 2001 	ldrb.w	r2, [r9, #1]
 801d7b4:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801d7b8:	9211      	str	r2, [sp, #68]	; 0x44
 801d7ba:	b151      	cbz	r1, 801d7d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801d7bc:	eb09 0203 	add.w	r2, r9, r3
 801d7c0:	f819 3003 	ldrb.w	r3, [r9, r3]
 801d7c4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801d7c8:	930f      	str	r3, [sp, #60]	; 0x3c
 801d7ca:	7853      	ldrb	r3, [r2, #1]
 801d7cc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801d7d0:	9312      	str	r3, [sp, #72]	; 0x48
 801d7d2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801d7d4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d7d6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801d7da:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801d7de:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d7e2:	ea4c 0c03 	orr.w	ip, ip, r3
 801d7e6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801d7e8:	041b      	lsls	r3, r3, #16
 801d7ea:	fb10 f201 	smulbb	r2, r0, r1
 801d7ee:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801d7f2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d7f6:	10d2      	asrs	r2, r2, #3
 801d7f8:	4323      	orrs	r3, r4
 801d7fa:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801d7fe:	4353      	muls	r3, r2
 801d800:	fb09 330c 	mla	r3, r9, ip, r3
 801d804:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801d808:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801d80c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801d810:	ea4c 0e0e 	orr.w	lr, ip, lr
 801d814:	f1c1 0c10 	rsb	ip, r1, #16
 801d818:	ebac 0c00 	sub.w	ip, ip, r0
 801d81c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801d820:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801d824:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d826:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801d828:	0418      	lsls	r0, r3, #16
 801d82a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d82e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d832:	4318      	orrs	r0, r3
 801d834:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801d838:	fb02 c200 	mla	r2, r2, r0, ip
 801d83c:	0d53      	lsrs	r3, r2, #21
 801d83e:	0952      	lsrs	r2, r2, #5
 801d840:	8838      	ldrh	r0, [r7, #0]
 801d842:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d846:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d84a:	431a      	orrs	r2, r3
 801d84c:	b292      	uxth	r2, r2
 801d84e:	1201      	asrs	r1, r0, #8
 801d850:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801d854:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801d858:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d85c:	fb11 f104 	smulbb	r1, r1, r4
 801d860:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801d864:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d868:	00c0      	lsls	r0, r0, #3
 801d86a:	fb0c 1c03 	mla	ip, ip, r3, r1
 801d86e:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d872:	10d1      	asrs	r1, r2, #3
 801d874:	b2c0      	uxtb	r0, r0
 801d876:	00d2      	lsls	r2, r2, #3
 801d878:	b2d2      	uxtb	r2, r2
 801d87a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d87e:	fb1e fe04 	smulbb	lr, lr, r4
 801d882:	fb10 f004 	smulbb	r0, r0, r4
 801d886:	fa1f fc8c 	uxth.w	ip, ip
 801d88a:	fb01 e103 	mla	r1, r1, r3, lr
 801d88e:	fb02 0303 	mla	r3, r2, r3, r0
 801d892:	b29a      	uxth	r2, r3
 801d894:	f10c 0301 	add.w	r3, ip, #1
 801d898:	b289      	uxth	r1, r1
 801d89a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801d89e:	1c53      	adds	r3, r2, #1
 801d8a0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d8a4:	1c4a      	adds	r2, r1, #1
 801d8a6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d8aa:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d8ae:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d8b2:	0949      	lsrs	r1, r1, #5
 801d8b4:	ea43 030c 	orr.w	r3, r3, ip
 801d8b8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d8bc:	430b      	orrs	r3, r1
 801d8be:	803b      	strh	r3, [r7, #0]
 801d8c0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801d8c2:	449a      	add	sl, r3
 801d8c4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801d8c6:	3702      	adds	r7, #2
 801d8c8:	441d      	add	r5, r3
 801d8ca:	f10b 3bff 	add.w	fp, fp, #4294967295
 801d8ce:	e742      	b.n	801d756 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801d8d0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801d8d2:	449a      	add	sl, r3
 801d8d4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801d8d6:	441d      	add	r5, r3
 801d8d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d8da:	3b01      	subs	r3, #1
 801d8dc:	9309      	str	r3, [sp, #36]	; 0x24
 801d8de:	f108 0802 	add.w	r8, r8, #2
 801d8e2:	e718      	b.n	801d716 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801d8e4:	d023      	beq.n	801d92e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801d8e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d8e8:	9825      	ldr	r0, [sp, #148]	; 0x94
 801d8ea:	3b01      	subs	r3, #1
 801d8ec:	fb00 a003 	mla	r0, r0, r3, sl
 801d8f0:	1400      	asrs	r0, r0, #16
 801d8f2:	f53f af2d 	bmi.w	801d750 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801d8f6:	3901      	subs	r1, #1
 801d8f8:	4288      	cmp	r0, r1
 801d8fa:	f6bf af29 	bge.w	801d750 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801d8fe:	9926      	ldr	r1, [sp, #152]	; 0x98
 801d900:	fb01 5303 	mla	r3, r1, r3, r5
 801d904:	141b      	asrs	r3, r3, #16
 801d906:	f53f af23 	bmi.w	801d750 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801d90a:	3a01      	subs	r2, #1
 801d90c:	4293      	cmp	r3, r2
 801d90e:	f6bf af1f 	bge.w	801d750 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801d912:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801d916:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801d91a:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801d91e:	f1be 0f00 	cmp.w	lr, #0
 801d922:	dc6c      	bgt.n	801d9fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801d924:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d926:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801d92a:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801d92e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d930:	2b00      	cmp	r3, #0
 801d932:	f340 810e 	ble.w	801db52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801d936:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d93a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d93e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d942:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801d944:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d948:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d94c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d950:	eef0 6a62 	vmov.f32	s13, s5
 801d954:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d958:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d95c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d960:	ee16 aa90 	vmov	sl, s13
 801d964:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d968:	eef0 6a43 	vmov.f32	s13, s6
 801d96c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d970:	ee12 2a90 	vmov	r2, s5
 801d974:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d978:	fb92 f3f3 	sdiv	r3, r2, r3
 801d97c:	ee13 2a10 	vmov	r2, s6
 801d980:	9325      	str	r3, [sp, #148]	; 0x94
 801d982:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801d984:	fb92 f3f3 	sdiv	r3, r2, r3
 801d988:	9326      	str	r3, [sp, #152]	; 0x98
 801d98a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d98c:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801d98e:	3b01      	subs	r3, #1
 801d990:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d994:	930c      	str	r3, [sp, #48]	; 0x30
 801d996:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801d998:	bf08      	it	eq
 801d99a:	4613      	moveq	r3, r2
 801d99c:	ee16 5a90 	vmov	r5, s13
 801d9a0:	9309      	str	r3, [sp, #36]	; 0x24
 801d9a2:	eeb0 3a67 	vmov.f32	s6, s15
 801d9a6:	eef0 2a47 	vmov.f32	s5, s14
 801d9aa:	e6a6      	b.n	801d6fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801d9ac:	2900      	cmp	r1, #0
 801d9ae:	f43f af10 	beq.w	801d7d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801d9b2:	f819 3003 	ldrb.w	r3, [r9, r3]
 801d9b6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801d9ba:	930f      	str	r3, [sp, #60]	; 0x3c
 801d9bc:	e709      	b.n	801d7d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801d9be:	f112 0901 	adds.w	r9, r2, #1
 801d9c2:	f53f af7d 	bmi.w	801d8c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801d9c6:	454b      	cmp	r3, r9
 801d9c8:	f6ff af7a 	blt.w	801d8c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801d9cc:	f11c 0901 	adds.w	r9, ip, #1
 801d9d0:	f53f af76 	bmi.w	801d8c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801d9d4:	45ce      	cmp	lr, r9
 801d9d6:	f6ff af73 	blt.w	801d8c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801d9da:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801d9dc:	9202      	str	r2, [sp, #8]
 801d9de:	b21b      	sxth	r3, r3
 801d9e0:	fa0f f28e 	sxth.w	r2, lr
 801d9e4:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801d9e8:	e9cd c003 	strd	ip, r0, [sp, #12]
 801d9ec:	9201      	str	r2, [sp, #4]
 801d9ee:	9300      	str	r3, [sp, #0]
 801d9f0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d9f2:	9816      	ldr	r0, [sp, #88]	; 0x58
 801d9f4:	4633      	mov	r3, r6
 801d9f6:	4639      	mov	r1, r7
 801d9f8:	f7ff fd8e 	bl	801d518 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801d9fc:	e760      	b.n	801d8c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801d9fe:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801da00:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801da02:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801da06:	ea4f 422a 	mov.w	r2, sl, asr #16
 801da0a:	1429      	asrs	r1, r5, #16
 801da0c:	fb03 2101 	mla	r1, r3, r1, r2
 801da10:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801da12:	440a      	add	r2, r1
 801da14:	5c61      	ldrb	r1, [r4, r1]
 801da16:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801da1a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801da1e:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801da22:	f1bc 0f00 	cmp.w	ip, #0
 801da26:	f000 808c 	beq.w	801db42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801da2a:	7857      	ldrb	r7, [r2, #1]
 801da2c:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801da30:	9413      	str	r4, [sp, #76]	; 0x4c
 801da32:	b140      	cbz	r0, 801da46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801da34:	18d7      	adds	r7, r2, r3
 801da36:	5cd3      	ldrb	r3, [r2, r3]
 801da38:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801da3c:	9310      	str	r3, [sp, #64]	; 0x40
 801da3e:	787b      	ldrb	r3, [r7, #1]
 801da40:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801da44:	9314      	str	r3, [sp, #80]	; 0x50
 801da46:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801da48:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801da4a:	fb1c f200 	smulbb	r2, ip, r0
 801da4e:	041f      	lsls	r7, r3, #16
 801da50:	10d2      	asrs	r2, r2, #3
 801da52:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801da56:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801da5a:	431f      	orrs	r7, r3
 801da5c:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801da60:	9317      	str	r3, [sp, #92]	; 0x5c
 801da62:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801da64:	041b      	lsls	r3, r3, #16
 801da66:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801da6a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801da6e:	ea43 030b 	orr.w	r3, r3, fp
 801da72:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801da74:	4353      	muls	r3, r2
 801da76:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801da7a:	fb04 3707 	mla	r7, r4, r7, r3
 801da7e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801da82:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801da86:	ea43 0b01 	orr.w	fp, r3, r1
 801da8a:	f1c0 0110 	rsb	r1, r0, #16
 801da8e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801da90:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801da92:	eba1 0c0c 	sub.w	ip, r1, ip
 801da96:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801da9a:	fb0c 770b 	mla	r7, ip, fp, r7
 801da9e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801daa2:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801daa6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801daaa:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801daae:	ea4c 0c0b 	orr.w	ip, ip, fp
 801dab2:	fb02 770c 	mla	r7, r2, ip, r7
 801dab6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801dab8:	0d79      	lsrs	r1, r7, #21
 801daba:	097f      	lsrs	r7, r7, #5
 801dabc:	8812      	ldrh	r2, [r2, #0]
 801dabe:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801dac2:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801dac6:	430f      	orrs	r7, r1
 801dac8:	b2bb      	uxth	r3, r7
 801daca:	1211      	asrs	r1, r2, #8
 801dacc:	1218      	asrs	r0, r3, #8
 801dace:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801dad2:	fb11 f104 	smulbb	r1, r1, r4
 801dad6:	10d7      	asrs	r7, r2, #3
 801dad8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801dadc:	00d2      	lsls	r2, r2, #3
 801dade:	fb00 1009 	mla	r0, r0, r9, r1
 801dae2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801dae6:	10d9      	asrs	r1, r3, #3
 801dae8:	b2d2      	uxtb	r2, r2
 801daea:	00db      	lsls	r3, r3, #3
 801daec:	fb17 f704 	smulbb	r7, r7, r4
 801daf0:	fb12 f204 	smulbb	r2, r2, r4
 801daf4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801daf8:	b2db      	uxtb	r3, r3
 801dafa:	b280      	uxth	r0, r0
 801dafc:	fb01 7109 	mla	r1, r1, r9, r7
 801db00:	fb03 2309 	mla	r3, r3, r9, r2
 801db04:	b29b      	uxth	r3, r3
 801db06:	b289      	uxth	r1, r1
 801db08:	1c42      	adds	r2, r0, #1
 801db0a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801db0e:	1c4f      	adds	r7, r1, #1
 801db10:	1c5a      	adds	r2, r3, #1
 801db12:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801db16:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801db1a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801db1e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801db22:	0949      	lsrs	r1, r1, #5
 801db24:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801db26:	4310      	orrs	r0, r2
 801db28:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801db2c:	4308      	orrs	r0, r1
 801db2e:	f823 0b02 	strh.w	r0, [r3], #2
 801db32:	930e      	str	r3, [sp, #56]	; 0x38
 801db34:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801db36:	449a      	add	sl, r3
 801db38:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801db3a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801db3e:	441d      	add	r5, r3
 801db40:	e6ed      	b.n	801d91e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801db42:	2800      	cmp	r0, #0
 801db44:	f43f af7f 	beq.w	801da46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801db48:	5cd3      	ldrb	r3, [r2, r3]
 801db4a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801db4e:	9310      	str	r3, [sp, #64]	; 0x40
 801db50:	e779      	b.n	801da46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801db52:	b019      	add	sp, #100	; 0x64
 801db54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801db58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801db58:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801db5c:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801db60:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801db64:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801db68:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801db6c:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801db70:	8808      	ldrh	r0, [r1, #0]
 801db72:	fb08 470e 	mla	r7, r8, lr, r4
 801db76:	f1b8 0f00 	cmp.w	r8, #0
 801db7a:	eb02 0907 	add.w	r9, r2, r7
 801db7e:	db67      	blt.n	801dc50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801db80:	45c2      	cmp	sl, r8
 801db82:	dd65      	ble.n	801dc50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801db84:	2c00      	cmp	r4, #0
 801db86:	db61      	blt.n	801dc4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801db88:	45a6      	cmp	lr, r4
 801db8a:	dd5f      	ble.n	801dc4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801db8c:	5dd2      	ldrb	r2, [r2, r7]
 801db8e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801db92:	1c62      	adds	r2, r4, #1
 801db94:	d45f      	bmi.n	801dc56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801db96:	4596      	cmp	lr, r2
 801db98:	dd5d      	ble.n	801dc56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801db9a:	2d00      	cmp	r5, #0
 801db9c:	d05b      	beq.n	801dc56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801db9e:	f899 2001 	ldrb.w	r2, [r9, #1]
 801dba2:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801dba6:	f118 0801 	adds.w	r8, r8, #1
 801dbaa:	d458      	bmi.n	801dc5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801dbac:	45c2      	cmp	sl, r8
 801dbae:	dd56      	ble.n	801dc5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801dbb0:	2e00      	cmp	r6, #0
 801dbb2:	d054      	beq.n	801dc5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801dbb4:	2c00      	cmp	r4, #0
 801dbb6:	db50      	blt.n	801dc5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801dbb8:	45a6      	cmp	lr, r4
 801dbba:	dd4e      	ble.n	801dc5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801dbbc:	f819 200e 	ldrb.w	r2, [r9, lr]
 801dbc0:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801dbc4:	3401      	adds	r4, #1
 801dbc6:	d407      	bmi.n	801dbd8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801dbc8:	45a6      	cmp	lr, r4
 801dbca:	dd05      	ble.n	801dbd8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801dbcc:	b125      	cbz	r5, 801dbd8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801dbce:	44ce      	add	lr, r9
 801dbd0:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801dbd4:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801dbd8:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801dbdc:	fb15 f406 	smulbb	r4, r5, r6
 801dbe0:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801dbe4:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801dbe8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801dbec:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801dbf0:	ea43 0c0c 	orr.w	ip, r3, ip
 801dbf4:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801dbf8:	f1c6 0310 	rsb	r3, r6, #16
 801dbfc:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801dc00:	1b5b      	subs	r3, r3, r5
 801dc02:	ea4e 0707 	orr.w	r7, lr, r7
 801dc06:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801dc0a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801dc0e:	437d      	muls	r5, r7
 801dc10:	fb03 5c0c 	mla	ip, r3, ip, r5
 801dc14:	0403      	lsls	r3, r0, #16
 801dc16:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801dc1a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801dc1e:	4318      	orrs	r0, r3
 801dc20:	0413      	lsls	r3, r2, #16
 801dc22:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801dc26:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801dc2a:	4313      	orrs	r3, r2
 801dc2c:	fb04 c000 	mla	r0, r4, r0, ip
 801dc30:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801dc34:	fb06 0003 	mla	r0, r6, r3, r0
 801dc38:	0d43      	lsrs	r3, r0, #21
 801dc3a:	0940      	lsrs	r0, r0, #5
 801dc3c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801dc40:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801dc44:	4318      	orrs	r0, r3
 801dc46:	8008      	strh	r0, [r1, #0]
 801dc48:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801dc4c:	4684      	mov	ip, r0
 801dc4e:	e7a0      	b.n	801db92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801dc50:	4607      	mov	r7, r0
 801dc52:	4684      	mov	ip, r0
 801dc54:	e7a7      	b.n	801dba6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801dc56:	4607      	mov	r7, r0
 801dc58:	e7a5      	b.n	801dba6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801dc5a:	4602      	mov	r2, r0
 801dc5c:	e7b2      	b.n	801dbc4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801dc5e:	4602      	mov	r2, r0
 801dc60:	e7ba      	b.n	801dbd8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801dc62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dc62:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dc66:	b093      	sub	sp, #76	; 0x4c
 801dc68:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801dc6c:	920f      	str	r2, [sp, #60]	; 0x3c
 801dc6e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801dc70:	9108      	str	r1, [sp, #32]
 801dc72:	9306      	str	r3, [sp, #24]
 801dc74:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801dc78:	9010      	str	r0, [sp, #64]	; 0x40
 801dc7a:	6850      	ldr	r0, [r2, #4]
 801dc7c:	6812      	ldr	r2, [r2, #0]
 801dc7e:	fb00 1303 	mla	r3, r0, r3, r1
 801dc82:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801dc86:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801dc88:	681b      	ldr	r3, [r3, #0]
 801dc8a:	9307      	str	r3, [sp, #28]
 801dc8c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801dc8e:	685f      	ldr	r7, [r3, #4]
 801dc90:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801dc94:	3704      	adds	r7, #4
 801dc96:	9b08      	ldr	r3, [sp, #32]
 801dc98:	2b00      	cmp	r3, #0
 801dc9a:	dc03      	bgt.n	801dca4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801dc9c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801dc9e:	2b00      	cmp	r3, #0
 801dca0:	f340 81b2 	ble.w	801e008 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801dca4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801dca6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801dcaa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801dcae:	1e48      	subs	r0, r1, #1
 801dcb0:	f102 3cff 	add.w	ip, r2, #4294967295
 801dcb4:	9b06      	ldr	r3, [sp, #24]
 801dcb6:	2b00      	cmp	r3, #0
 801dcb8:	f340 80a9 	ble.w	801de0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801dcbc:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801dcc0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801dcc4:	d406      	bmi.n	801dcd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801dcc6:	4586      	cmp	lr, r0
 801dcc8:	da04      	bge.n	801dcd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801dcca:	2b00      	cmp	r3, #0
 801dccc:	db02      	blt.n	801dcd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801dcce:	4563      	cmp	r3, ip
 801dcd0:	f2c0 809e 	blt.w	801de10 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801dcd4:	f11e 0e01 	adds.w	lr, lr, #1
 801dcd8:	f100 808f 	bmi.w	801ddfa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801dcdc:	4571      	cmp	r1, lr
 801dcde:	f2c0 808c 	blt.w	801ddfa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801dce2:	3301      	adds	r3, #1
 801dce4:	f100 8089 	bmi.w	801ddfa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801dce8:	429a      	cmp	r2, r3
 801dcea:	f2c0 8086 	blt.w	801ddfa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801dcee:	f8dd b018 	ldr.w	fp, [sp, #24]
 801dcf2:	46c8      	mov	r8, r9
 801dcf4:	f1bb 0f00 	cmp.w	fp, #0
 801dcf8:	f340 80a6 	ble.w	801de48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801dcfc:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801dcfe:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801dd00:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801dd04:	689b      	ldr	r3, [r3, #8]
 801dd06:	1422      	asrs	r2, r4, #16
 801dd08:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801dd0c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801dd10:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801dd14:	f100 80e3 	bmi.w	801dede <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801dd18:	f103 3aff 	add.w	sl, r3, #4294967295
 801dd1c:	4552      	cmp	r2, sl
 801dd1e:	f280 80de 	bge.w	801dede <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801dd22:	f1bc 0f00 	cmp.w	ip, #0
 801dd26:	f2c0 80da 	blt.w	801dede <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801dd2a:	f10e 3aff 	add.w	sl, lr, #4294967295
 801dd2e:	45d4      	cmp	ip, sl
 801dd30:	f280 80d5 	bge.w	801dede <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801dd34:	b21b      	sxth	r3, r3
 801dd36:	fb0c 2203 	mla	r2, ip, r3, r2
 801dd3a:	9d07      	ldr	r5, [sp, #28]
 801dd3c:	eb05 0a02 	add.w	sl, r5, r2
 801dd40:	5caa      	ldrb	r2, [r5, r2]
 801dd42:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801dd46:	2800      	cmp	r0, #0
 801dd48:	f000 80c0 	beq.w	801decc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801dd4c:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801dd50:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801dd54:	920b      	str	r2, [sp, #44]	; 0x2c
 801dd56:	b151      	cbz	r1, 801dd6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801dd58:	eb0a 0203 	add.w	r2, sl, r3
 801dd5c:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801dd60:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801dd64:	9309      	str	r3, [sp, #36]	; 0x24
 801dd66:	7853      	ldrb	r3, [r2, #1]
 801dd68:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801dd6c:	930c      	str	r3, [sp, #48]	; 0x30
 801dd6e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801dd70:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801dd72:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801dd76:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801dd7a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801dd7e:	ea4c 0c03 	orr.w	ip, ip, r3
 801dd82:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801dd84:	041b      	lsls	r3, r3, #16
 801dd86:	fb10 f201 	smulbb	r2, r0, r1
 801dd8a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801dd8e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801dd92:	10d2      	asrs	r2, r2, #3
 801dd94:	432b      	orrs	r3, r5
 801dd96:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801dd9a:	4353      	muls	r3, r2
 801dd9c:	fb0a 330c 	mla	r3, sl, ip, r3
 801dda0:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801dda4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801dda8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801ddac:	ea4c 0e0e 	orr.w	lr, ip, lr
 801ddb0:	f1c1 0c10 	rsb	ip, r1, #16
 801ddb4:	ebac 0c00 	sub.w	ip, ip, r0
 801ddb8:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801ddbc:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801ddc0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ddc2:	0418      	lsls	r0, r3, #16
 801ddc4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801ddc8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ddcc:	4318      	orrs	r0, r3
 801ddce:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801ddd2:	fb02 c200 	mla	r2, r2, r0, ip
 801ddd6:	0d53      	lsrs	r3, r2, #21
 801ddd8:	0952      	lsrs	r2, r2, #5
 801ddda:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ddde:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801dde2:	431a      	orrs	r2, r3
 801dde4:	f8a8 2000 	strh.w	r2, [r8]
 801dde8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ddea:	441c      	add	r4, r3
 801ddec:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ddee:	f108 0802 	add.w	r8, r8, #2
 801ddf2:	441e      	add	r6, r3
 801ddf4:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ddf8:	e77c      	b.n	801dcf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ddfa:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ddfc:	441c      	add	r4, r3
 801ddfe:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801de00:	441e      	add	r6, r3
 801de02:	9b06      	ldr	r3, [sp, #24]
 801de04:	3b01      	subs	r3, #1
 801de06:	9306      	str	r3, [sp, #24]
 801de08:	f109 0902 	add.w	r9, r9, #2
 801de0c:	e752      	b.n	801dcb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801de0e:	d020      	beq.n	801de52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801de10:	9b06      	ldr	r3, [sp, #24]
 801de12:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801de14:	3b01      	subs	r3, #1
 801de16:	fb00 4003 	mla	r0, r0, r3, r4
 801de1a:	1400      	asrs	r0, r0, #16
 801de1c:	f53f af67 	bmi.w	801dcee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801de20:	3901      	subs	r1, #1
 801de22:	4288      	cmp	r0, r1
 801de24:	f6bf af63 	bge.w	801dcee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801de28:	9920      	ldr	r1, [sp, #128]	; 0x80
 801de2a:	fb01 6303 	mla	r3, r1, r3, r6
 801de2e:	141b      	asrs	r3, r3, #16
 801de30:	f53f af5d 	bmi.w	801dcee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801de34:	3a01      	subs	r2, #1
 801de36:	4293      	cmp	r3, r2
 801de38:	f6bf af59 	bge.w	801dcee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801de3c:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801de40:	46ca      	mov	sl, r9
 801de42:	f1b8 0f00 	cmp.w	r8, #0
 801de46:	dc67      	bgt.n	801df18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801de48:	9b06      	ldr	r3, [sp, #24]
 801de4a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801de4e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801de52:	9b08      	ldr	r3, [sp, #32]
 801de54:	2b00      	cmp	r3, #0
 801de56:	f340 80d7 	ble.w	801e008 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801de5a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801de5e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801de62:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801de66:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801de68:	ee31 1a05 	vadd.f32	s2, s2, s10
 801de6c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801de70:	eeb0 6a62 	vmov.f32	s12, s5
 801de74:	ee61 7a27 	vmul.f32	s15, s2, s15
 801de78:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801de7c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801de80:	ee16 4a10 	vmov	r4, s12
 801de84:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801de88:	eeb0 6a43 	vmov.f32	s12, s6
 801de8c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801de90:	ee12 2a90 	vmov	r2, s5
 801de94:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801de98:	fb92 f3f3 	sdiv	r3, r2, r3
 801de9c:	ee13 2a10 	vmov	r2, s6
 801dea0:	931f      	str	r3, [sp, #124]	; 0x7c
 801dea2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801dea4:	fb92 f3f3 	sdiv	r3, r2, r3
 801dea8:	9320      	str	r3, [sp, #128]	; 0x80
 801deaa:	9b08      	ldr	r3, [sp, #32]
 801deac:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801deae:	3b01      	subs	r3, #1
 801deb0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801deb4:	9308      	str	r3, [sp, #32]
 801deb6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801deb8:	bf08      	it	eq
 801deba:	4613      	moveq	r3, r2
 801debc:	ee16 6a10 	vmov	r6, s12
 801dec0:	9306      	str	r3, [sp, #24]
 801dec2:	eeb0 3a67 	vmov.f32	s6, s15
 801dec6:	eef0 2a47 	vmov.f32	s5, s14
 801deca:	e6e4      	b.n	801dc96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801decc:	2900      	cmp	r1, #0
 801dece:	f43f af4e 	beq.w	801dd6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801ded2:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801ded6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801deda:	9309      	str	r3, [sp, #36]	; 0x24
 801dedc:	e747      	b.n	801dd6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801dede:	f112 0a01 	adds.w	sl, r2, #1
 801dee2:	d481      	bmi.n	801dde8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801dee4:	4553      	cmp	r3, sl
 801dee6:	f6ff af7f 	blt.w	801dde8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801deea:	f11c 0a01 	adds.w	sl, ip, #1
 801deee:	f53f af7b 	bmi.w	801dde8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801def2:	45d6      	cmp	lr, sl
 801def4:	f6ff af78 	blt.w	801dde8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801def8:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801defc:	b21b      	sxth	r3, r3
 801defe:	fa0f f28e 	sxth.w	r2, lr
 801df02:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801df06:	9201      	str	r2, [sp, #4]
 801df08:	9300      	str	r3, [sp, #0]
 801df0a:	9a07      	ldr	r2, [sp, #28]
 801df0c:	9810      	ldr	r0, [sp, #64]	; 0x40
 801df0e:	463b      	mov	r3, r7
 801df10:	4641      	mov	r1, r8
 801df12:	f7ff fe21 	bl	801db58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801df16:	e767      	b.n	801dde8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801df18:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801df1a:	9d07      	ldr	r5, [sp, #28]
 801df1c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801df20:	1422      	asrs	r2, r4, #16
 801df22:	1431      	asrs	r1, r6, #16
 801df24:	fb03 2101 	mla	r1, r3, r1, r2
 801df28:	9a07      	ldr	r2, [sp, #28]
 801df2a:	440a      	add	r2, r1
 801df2c:	5c69      	ldrb	r1, [r5, r1]
 801df2e:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801df32:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801df36:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801df3a:	f1be 0f00 	cmp.w	lr, #0
 801df3e:	d05c      	beq.n	801dffa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801df40:	f892 c001 	ldrb.w	ip, [r2, #1]
 801df44:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801df48:	950d      	str	r5, [sp, #52]	; 0x34
 801df4a:	b150      	cbz	r0, 801df62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801df4c:	eb02 0c03 	add.w	ip, r2, r3
 801df50:	5cd3      	ldrb	r3, [r2, r3]
 801df52:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801df56:	930a      	str	r3, [sp, #40]	; 0x28
 801df58:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801df5c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801df60:	930e      	str	r3, [sp, #56]	; 0x38
 801df62:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801df64:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801df66:	fb1e f200 	smulbb	r2, lr, r0
 801df6a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801df6e:	10d2      	asrs	r2, r2, #3
 801df70:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801df74:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801df78:	ea4c 0c03 	orr.w	ip, ip, r3
 801df7c:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801df80:	9311      	str	r3, [sp, #68]	; 0x44
 801df82:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801df84:	041b      	lsls	r3, r3, #16
 801df86:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 801df8a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801df8e:	ea43 030b 	orr.w	r3, r3, fp
 801df92:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801df94:	4353      	muls	r3, r2
 801df96:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801df9a:	fb05 3c0c 	mla	ip, r5, ip, r3
 801df9e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801dfa2:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801dfa6:	ea43 0b01 	orr.w	fp, r3, r1
 801dfaa:	f1c0 0110 	rsb	r1, r0, #16
 801dfae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801dfb0:	eba1 0e0e 	sub.w	lr, r1, lr
 801dfb4:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801dfb8:	fb0e cc0b 	mla	ip, lr, fp, ip
 801dfbc:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801dfc0:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801dfc4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801dfc8:	ea4b 0e0e 	orr.w	lr, fp, lr
 801dfcc:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801dfd0:	fb02 cc0e 	mla	ip, r2, lr, ip
 801dfd4:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801dfd8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801dfdc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801dfe0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801dfe4:	ea43 0c0c 	orr.w	ip, r3, ip
 801dfe8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801dfea:	f82a cb02 	strh.w	ip, [sl], #2
 801dfee:	441c      	add	r4, r3
 801dff0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801dff2:	f108 38ff 	add.w	r8, r8, #4294967295
 801dff6:	441e      	add	r6, r3
 801dff8:	e723      	b.n	801de42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801dffa:	2800      	cmp	r0, #0
 801dffc:	d0b1      	beq.n	801df62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801dffe:	5cd3      	ldrb	r3, [r2, r3]
 801e000:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801e004:	930a      	str	r3, [sp, #40]	; 0x28
 801e006:	e7ac      	b.n	801df62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801e008:	b013      	add	sp, #76	; 0x4c
 801e00a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e00e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801e00e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e012:	880d      	ldrh	r5, [r1, #0]
 801e014:	b087      	sub	sp, #28
 801e016:	10ef      	asrs	r7, r5, #3
 801e018:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801e01c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e020:	00ed      	lsls	r5, r5, #3
 801e022:	9701      	str	r7, [sp, #4]
 801e024:	b2ed      	uxtb	r5, r5
 801e026:	9502      	str	r5, [sp, #8]
 801e028:	9d01      	ldr	r5, [sp, #4]
 801e02a:	9103      	str	r1, [sp, #12]
 801e02c:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 801e030:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 801e034:	9902      	ldr	r1, [sp, #8]
 801e036:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801e03a:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 801e03e:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 801e042:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 801e046:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 801e04a:	022d      	lsls	r5, r5, #8
 801e04c:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801e050:	fb06 0709 	mla	r7, r6, r9, r0
 801e054:	430d      	orrs	r5, r1
 801e056:	2e00      	cmp	r6, #0
 801e058:	eb02 0c07 	add.w	ip, r2, r7
 801e05c:	9505      	str	r5, [sp, #20]
 801e05e:	f2c0 80b6 	blt.w	801e1ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801e062:	45b3      	cmp	fp, r6
 801e064:	f340 80b3 	ble.w	801e1ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801e068:	2800      	cmp	r0, #0
 801e06a:	f2c0 80ae 	blt.w	801e1ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801e06e:	4581      	cmp	r9, r0
 801e070:	f340 80ab 	ble.w	801e1ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801e074:	5dd7      	ldrb	r7, [r2, r7]
 801e076:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801e07a:	441f      	add	r7, r3
 801e07c:	1c42      	adds	r2, r0, #1
 801e07e:	f100 80a9 	bmi.w	801e1d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801e082:	4591      	cmp	r9, r2
 801e084:	f340 80a6 	ble.w	801e1d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801e088:	2c00      	cmp	r4, #0
 801e08a:	f000 80a3 	beq.w	801e1d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801e08e:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801e092:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801e096:	441d      	add	r5, r3
 801e098:	3601      	adds	r6, #1
 801e09a:	f100 809f 	bmi.w	801e1dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801e09e:	45b3      	cmp	fp, r6
 801e0a0:	f340 809c 	ble.w	801e1dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801e0a4:	f1be 0f00 	cmp.w	lr, #0
 801e0a8:	f000 8098 	beq.w	801e1dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801e0ac:	2800      	cmp	r0, #0
 801e0ae:	f2c0 8093 	blt.w	801e1d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801e0b2:	4581      	cmp	r9, r0
 801e0b4:	f340 8090 	ble.w	801e1d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801e0b8:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801e0bc:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801e0c0:	441e      	add	r6, r3
 801e0c2:	3001      	adds	r0, #1
 801e0c4:	f100 808d 	bmi.w	801e1e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801e0c8:	4581      	cmp	r9, r0
 801e0ca:	f340 808a 	ble.w	801e1e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801e0ce:	2c00      	cmp	r4, #0
 801e0d0:	f000 8087 	beq.w	801e1e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801e0d4:	44e1      	add	r9, ip
 801e0d6:	f899 2001 	ldrb.w	r2, [r9, #1]
 801e0da:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801e0de:	4413      	add	r3, r2
 801e0e0:	b2a4      	uxth	r4, r4
 801e0e2:	fa1f fe8e 	uxth.w	lr, lr
 801e0e6:	fb04 fb0e 	mul.w	fp, r4, lr
 801e0ea:	0124      	lsls	r4, r4, #4
 801e0ec:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801e0f0:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 801e0f4:	eba4 040b 	sub.w	r4, r4, fp
 801e0f8:	fa1f f08e 	uxth.w	r0, lr
 801e0fc:	b2a2      	uxth	r2, r4
 801e0fe:	78ac      	ldrb	r4, [r5, #2]
 801e100:	f897 c002 	ldrb.w	ip, [r7, #2]
 801e104:	9901      	ldr	r1, [sp, #4]
 801e106:	eba9 0900 	sub.w	r9, r9, r0
 801e10a:	fa1f f989 	uxth.w	r9, r9
 801e10e:	4354      	muls	r4, r2
 801e110:	fb09 440c 	mla	r4, r9, ip, r4
 801e114:	f896 c002 	ldrb.w	ip, [r6, #2]
 801e118:	fb00 440c 	mla	r4, r0, ip, r4
 801e11c:	f893 c002 	ldrb.w	ip, [r3, #2]
 801e120:	fa1f fe88 	uxth.w	lr, r8
 801e124:	ea6f 0808 	mvn.w	r8, r8
 801e128:	fa5f f888 	uxtb.w	r8, r8
 801e12c:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801e130:	fb1a fa08 	smulbb	sl, sl, r8
 801e134:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801e138:	fb0c ac0e 	mla	ip, ip, lr, sl
 801e13c:	f895 a001 	ldrb.w	sl, [r5, #1]
 801e140:	787c      	ldrb	r4, [r7, #1]
 801e142:	782d      	ldrb	r5, [r5, #0]
 801e144:	783f      	ldrb	r7, [r7, #0]
 801e146:	fb02 fa0a 	mul.w	sl, r2, sl
 801e14a:	fb09 aa04 	mla	sl, r9, r4, sl
 801e14e:	7874      	ldrb	r4, [r6, #1]
 801e150:	436a      	muls	r2, r5
 801e152:	7835      	ldrb	r5, [r6, #0]
 801e154:	fb00 aa04 	mla	sl, r0, r4, sl
 801e158:	fb09 2207 	mla	r2, r9, r7, r2
 801e15c:	785c      	ldrb	r4, [r3, #1]
 801e15e:	781b      	ldrb	r3, [r3, #0]
 801e160:	fb00 2005 	mla	r0, r0, r5, r2
 801e164:	fb0b a404 	mla	r4, fp, r4, sl
 801e168:	fb0b 0b03 	mla	fp, fp, r3, r0
 801e16c:	9b02      	ldr	r3, [sp, #8]
 801e16e:	fb11 fa08 	smulbb	sl, r1, r8
 801e172:	fa1f fc8c 	uxth.w	ip, ip
 801e176:	fb13 f808 	smulbb	r8, r3, r8
 801e17a:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801e17e:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801e182:	fb04 a40e 	mla	r4, r4, lr, sl
 801e186:	f10c 0301 	add.w	r3, ip, #1
 801e18a:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801e18e:	fa1f fe8e 	uxth.w	lr, lr
 801e192:	b2a4      	uxth	r4, r4
 801e194:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801e198:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 801e19c:	f104 0a01 	add.w	sl, r4, #1
 801e1a0:	f10e 0c01 	add.w	ip, lr, #1
 801e1a4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801e1a8:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801e1ac:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e1b0:	0964      	lsrs	r4, r4, #5
 801e1b2:	ea4c 0c03 	orr.w	ip, ip, r3
 801e1b6:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801e1ba:	9b03      	ldr	r3, [sp, #12]
 801e1bc:	ea4c 0c04 	orr.w	ip, ip, r4
 801e1c0:	f8a3 c000 	strh.w	ip, [r3]
 801e1c4:	b007      	add	sp, #28
 801e1c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e1ca:	af05      	add	r7, sp, #20
 801e1cc:	e756      	b.n	801e07c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801e1ce:	ad05      	add	r5, sp, #20
 801e1d0:	462f      	mov	r7, r5
 801e1d2:	e761      	b.n	801e098 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801e1d4:	ad05      	add	r5, sp, #20
 801e1d6:	e75f      	b.n	801e098 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801e1d8:	ae05      	add	r6, sp, #20
 801e1da:	e772      	b.n	801e0c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801e1dc:	ab05      	add	r3, sp, #20
 801e1de:	461e      	mov	r6, r3
 801e1e0:	e77e      	b.n	801e0e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801e1e2:	ab05      	add	r3, sp, #20
 801e1e4:	e77c      	b.n	801e0e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801e1e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e1e6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e1ea:	b095      	sub	sp, #84	; 0x54
 801e1ec:	9212      	str	r2, [sp, #72]	; 0x48
 801e1ee:	9309      	str	r3, [sp, #36]	; 0x24
 801e1f0:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801e1f2:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 801e1f6:	930f      	str	r3, [sp, #60]	; 0x3c
 801e1f8:	910e      	str	r1, [sp, #56]	; 0x38
 801e1fa:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 801e1fe:	9013      	str	r0, [sp, #76]	; 0x4c
 801e200:	6850      	ldr	r0, [r2, #4]
 801e202:	6812      	ldr	r2, [r2, #0]
 801e204:	fb00 1303 	mla	r3, r0, r3, r1
 801e208:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e20c:	930a      	str	r3, [sp, #40]	; 0x28
 801e20e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e210:	681b      	ldr	r3, [r3, #0]
 801e212:	930d      	str	r3, [sp, #52]	; 0x34
 801e214:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e216:	685c      	ldr	r4, [r3, #4]
 801e218:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801e21a:	43db      	mvns	r3, r3
 801e21c:	b2db      	uxtb	r3, r3
 801e21e:	3404      	adds	r4, #4
 801e220:	930b      	str	r3, [sp, #44]	; 0x2c
 801e222:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e224:	2b00      	cmp	r3, #0
 801e226:	dc03      	bgt.n	801e230 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801e228:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801e22a:	2b00      	cmp	r3, #0
 801e22c:	f340 8255 	ble.w	801e6da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801e230:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e232:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e236:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e23a:	1e48      	subs	r0, r1, #1
 801e23c:	1e55      	subs	r5, r2, #1
 801e23e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e240:	2b00      	cmp	r3, #0
 801e242:	f340 80f9 	ble.w	801e438 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801e246:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801e248:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e24a:	1436      	asrs	r6, r6, #16
 801e24c:	ea4f 4323 	mov.w	r3, r3, asr #16
 801e250:	d406      	bmi.n	801e260 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e252:	4286      	cmp	r6, r0
 801e254:	da04      	bge.n	801e260 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e256:	2b00      	cmp	r3, #0
 801e258:	db02      	blt.n	801e260 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e25a:	42ab      	cmp	r3, r5
 801e25c:	f2c0 80ed 	blt.w	801e43a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801e260:	3601      	adds	r6, #1
 801e262:	f100 80da 	bmi.w	801e41a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801e266:	42b1      	cmp	r1, r6
 801e268:	f2c0 80d7 	blt.w	801e41a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801e26c:	3301      	adds	r3, #1
 801e26e:	f100 80d4 	bmi.w	801e41a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801e272:	429a      	cmp	r2, r3
 801e274:	f2c0 80d1 	blt.w	801e41a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801e278:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e27a:	9311      	str	r3, [sp, #68]	; 0x44
 801e27c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e27e:	930c      	str	r3, [sp, #48]	; 0x30
 801e280:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e282:	2b00      	cmp	r3, #0
 801e284:	f340 80fa 	ble.w	801e47c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801e288:	9826      	ldr	r0, [sp, #152]	; 0x98
 801e28a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e28c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801e28e:	68c6      	ldr	r6, [r0, #12]
 801e290:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801e292:	141d      	asrs	r5, r3, #16
 801e294:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801e298:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801e29a:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801e29c:	1400      	asrs	r0, r0, #16
 801e29e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801e2a2:	6892      	ldr	r2, [r2, #8]
 801e2a4:	f100 813e 	bmi.w	801e524 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801e2a8:	1e57      	subs	r7, r2, #1
 801e2aa:	42b8      	cmp	r0, r7
 801e2ac:	f280 813a 	bge.w	801e524 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801e2b0:	2d00      	cmp	r5, #0
 801e2b2:	f2c0 8137 	blt.w	801e524 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801e2b6:	1e77      	subs	r7, r6, #1
 801e2b8:	42bd      	cmp	r5, r7
 801e2ba:	f280 8133 	bge.w	801e524 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801e2be:	b212      	sxth	r2, r2
 801e2c0:	fb05 0002 	mla	r0, r5, r2, r0
 801e2c4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e2c6:	f815 a000 	ldrb.w	sl, [r5, r0]
 801e2ca:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801e2ce:	182e      	adds	r6, r5, r0
 801e2d0:	eb04 050a 	add.w	r5, r4, sl
 801e2d4:	2b00      	cmp	r3, #0
 801e2d6:	f000 8117 	beq.w	801e508 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801e2da:	f896 c001 	ldrb.w	ip, [r6, #1]
 801e2de:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801e2e2:	44a4      	add	ip, r4
 801e2e4:	2900      	cmp	r1, #0
 801e2e6:	f000 8117 	beq.w	801e518 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801e2ea:	18b0      	adds	r0, r6, r2
 801e2ec:	5cb2      	ldrb	r2, [r6, r2]
 801e2ee:	7840      	ldrb	r0, [r0, #1]
 801e2f0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801e2f4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801e2f8:	4422      	add	r2, r4
 801e2fa:	4420      	add	r0, r4
 801e2fc:	b29b      	uxth	r3, r3
 801e2fe:	b289      	uxth	r1, r1
 801e300:	fb03 f901 	mul.w	r9, r3, r1
 801e304:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801e308:	011b      	lsls	r3, r3, #4
 801e30a:	b289      	uxth	r1, r1
 801e30c:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801e310:	f895 b002 	ldrb.w	fp, [r5, #2]
 801e314:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801e316:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801e31a:	f8b6 e000 	ldrh.w	lr, [r6]
 801e31e:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801e322:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801e326:	eba3 0309 	sub.w	r3, r3, r9
 801e32a:	b29b      	uxth	r3, r3
 801e32c:	eba8 0801 	sub.w	r8, r8, r1
 801e330:	fa1f f888 	uxth.w	r8, r8
 801e334:	435f      	muls	r7, r3
 801e336:	fb08 770b 	mla	r7, r8, fp, r7
 801e33a:	f892 b002 	ldrb.w	fp, [r2, #2]
 801e33e:	9310      	str	r3, [sp, #64]	; 0x40
 801e340:	fb01 770b 	mla	r7, r1, fp, r7
 801e344:	f890 b002 	ldrb.w	fp, [r0, #2]
 801e348:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e34a:	fb09 770b 	mla	r7, r9, fp, r7
 801e34e:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801e352:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801e356:	fb1b fb03 	smulbb	fp, fp, r3
 801e35a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801e35e:	fb07 b706 	mla	r7, r7, r6, fp
 801e362:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e364:	f895 b001 	ldrb.w	fp, [r5, #1]
 801e368:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801e36c:	f89c c000 	ldrb.w	ip, [ip]
 801e370:	435d      	muls	r5, r3
 801e372:	fb08 550b 	mla	r5, r8, fp, r5
 801e376:	f892 b001 	ldrb.w	fp, [r2, #1]
 801e37a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e37c:	fb01 550b 	mla	r5, r1, fp, r5
 801e380:	f890 b001 	ldrb.w	fp, [r0, #1]
 801e384:	fb09 550b 	mla	r5, r9, fp, r5
 801e388:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801e38c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801e390:	fb1b fb03 	smulbb	fp, fp, r3
 801e394:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e396:	fb03 f30c 	mul.w	r3, r3, ip
 801e39a:	f892 c000 	ldrb.w	ip, [r2]
 801e39e:	fb08 330a 	mla	r3, r8, sl, r3
 801e3a2:	fb01 330c 	mla	r3, r1, ip, r3
 801e3a6:	f890 c000 	ldrb.w	ip, [r0]
 801e3aa:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e3ae:	fb09 3c0c 	mla	ip, r9, ip, r3
 801e3b2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e3b4:	fa5f fe8e 	uxtb.w	lr, lr
 801e3b8:	b2bf      	uxth	r7, r7
 801e3ba:	fb1e fe03 	smulbb	lr, lr, r3
 801e3be:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801e3c2:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801e3c6:	fb05 b506 	mla	r5, r5, r6, fp
 801e3ca:	1c7b      	adds	r3, r7, #1
 801e3cc:	fb0c e606 	mla	r6, ip, r6, lr
 801e3d0:	b2ad      	uxth	r5, r5
 801e3d2:	b2b6      	uxth	r6, r6
 801e3d4:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801e3d8:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801e3dc:	f105 0b01 	add.w	fp, r5, #1
 801e3e0:	1c77      	adds	r7, r6, #1
 801e3e2:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801e3e6:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801e3ea:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801e3ee:	096d      	lsrs	r5, r5, #5
 801e3f0:	431f      	orrs	r7, r3
 801e3f2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e3f6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e3f8:	433d      	orrs	r5, r7
 801e3fa:	801d      	strh	r5, [r3, #0]
 801e3fc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e3fe:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801e400:	3302      	adds	r3, #2
 801e402:	930c      	str	r3, [sp, #48]	; 0x30
 801e404:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801e406:	4413      	add	r3, r2
 801e408:	931f      	str	r3, [sp, #124]	; 0x7c
 801e40a:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801e40c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e40e:	4413      	add	r3, r2
 801e410:	9320      	str	r3, [sp, #128]	; 0x80
 801e412:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e414:	3b01      	subs	r3, #1
 801e416:	9311      	str	r3, [sp, #68]	; 0x44
 801e418:	e732      	b.n	801e280 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801e41a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801e41c:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801e41e:	4433      	add	r3, r6
 801e420:	931f      	str	r3, [sp, #124]	; 0x7c
 801e422:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801e424:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e426:	4433      	add	r3, r6
 801e428:	9320      	str	r3, [sp, #128]	; 0x80
 801e42a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e42c:	3b01      	subs	r3, #1
 801e42e:	9309      	str	r3, [sp, #36]	; 0x24
 801e430:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e432:	3302      	adds	r3, #2
 801e434:	930a      	str	r3, [sp, #40]	; 0x28
 801e436:	e702      	b.n	801e23e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801e438:	d027      	beq.n	801e48a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801e43a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e43c:	9821      	ldr	r0, [sp, #132]	; 0x84
 801e43e:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801e440:	3b01      	subs	r3, #1
 801e442:	fb00 5003 	mla	r0, r0, r3, r5
 801e446:	1400      	asrs	r0, r0, #16
 801e448:	f53f af16 	bmi.w	801e278 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e44c:	3901      	subs	r1, #1
 801e44e:	4288      	cmp	r0, r1
 801e450:	f6bf af12 	bge.w	801e278 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e454:	9922      	ldr	r1, [sp, #136]	; 0x88
 801e456:	9820      	ldr	r0, [sp, #128]	; 0x80
 801e458:	fb01 0303 	mla	r3, r1, r3, r0
 801e45c:	141b      	asrs	r3, r3, #16
 801e45e:	f53f af0b 	bmi.w	801e278 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e462:	3a01      	subs	r2, #1
 801e464:	4293      	cmp	r3, r2
 801e466:	f6bf af07 	bge.w	801e278 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e46a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e46c:	9311      	str	r3, [sp, #68]	; 0x44
 801e46e:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801e472:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e474:	930c      	str	r3, [sp, #48]	; 0x30
 801e476:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e478:	2b00      	cmp	r3, #0
 801e47a:	dc70      	bgt.n	801e55e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801e47c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e47e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801e480:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e484:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e488:	930a      	str	r3, [sp, #40]	; 0x28
 801e48a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e48c:	2b00      	cmp	r3, #0
 801e48e:	f340 8124 	ble.w	801e6da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801e492:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e496:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e49a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e49e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801e4a0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e4a4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e4a8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e4ac:	eef0 6a62 	vmov.f32	s13, s5
 801e4b0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e4b4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e4b8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e4bc:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801e4c0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e4c4:	eef0 6a43 	vmov.f32	s13, s6
 801e4c8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e4cc:	ee12 2a90 	vmov	r2, s5
 801e4d0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e4d4:	fb92 f3f3 	sdiv	r3, r2, r3
 801e4d8:	ee13 2a10 	vmov	r2, s6
 801e4dc:	9321      	str	r3, [sp, #132]	; 0x84
 801e4de:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801e4e0:	fb92 f3f3 	sdiv	r3, r2, r3
 801e4e4:	9322      	str	r3, [sp, #136]	; 0x88
 801e4e6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e4e8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e4ea:	3b01      	subs	r3, #1
 801e4ec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e4f0:	930e      	str	r3, [sp, #56]	; 0x38
 801e4f2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801e4f4:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801e4f8:	bf08      	it	eq
 801e4fa:	4613      	moveq	r3, r2
 801e4fc:	9309      	str	r3, [sp, #36]	; 0x24
 801e4fe:	eeb0 3a67 	vmov.f32	s6, s15
 801e502:	eef0 2a47 	vmov.f32	s5, s14
 801e506:	e68c      	b.n	801e222 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801e508:	b149      	cbz	r1, 801e51e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801e50a:	5cb2      	ldrb	r2, [r6, r2]
 801e50c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801e510:	4422      	add	r2, r4
 801e512:	4628      	mov	r0, r5
 801e514:	46ac      	mov	ip, r5
 801e516:	e6f1      	b.n	801e2fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e518:	4628      	mov	r0, r5
 801e51a:	462a      	mov	r2, r5
 801e51c:	e6ee      	b.n	801e2fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e51e:	4628      	mov	r0, r5
 801e520:	462a      	mov	r2, r5
 801e522:	e7f7      	b.n	801e514 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801e524:	1c47      	adds	r7, r0, #1
 801e526:	f53f af69 	bmi.w	801e3fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801e52a:	42ba      	cmp	r2, r7
 801e52c:	f6ff af66 	blt.w	801e3fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801e530:	1c6f      	adds	r7, r5, #1
 801e532:	f53f af63 	bmi.w	801e3fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801e536:	42be      	cmp	r6, r7
 801e538:	f6ff af60 	blt.w	801e3fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801e53c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801e53e:	9002      	str	r0, [sp, #8]
 801e540:	b236      	sxth	r6, r6
 801e542:	b212      	sxth	r2, r2
 801e544:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801e548:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801e54c:	9200      	str	r2, [sp, #0]
 801e54e:	9601      	str	r6, [sp, #4]
 801e550:	4623      	mov	r3, r4
 801e552:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801e556:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801e558:	f7ff fd59 	bl	801e00e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801e55c:	e74e      	b.n	801e3fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801e55e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801e560:	9820      	ldr	r0, [sp, #128]	; 0x80
 801e562:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801e564:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801e566:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801e56a:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801e56c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801e570:	142d      	asrs	r5, r5, #16
 801e572:	1400      	asrs	r0, r0, #16
 801e574:	fb02 5000 	mla	r0, r2, r0, r5
 801e578:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e57a:	f815 9000 	ldrb.w	r9, [r5, r0]
 801e57e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801e582:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801e586:	182e      	adds	r6, r5, r0
 801e588:	eb04 0509 	add.w	r5, r4, r9
 801e58c:	2b00      	cmp	r3, #0
 801e58e:	f000 8096 	beq.w	801e6be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801e592:	7877      	ldrb	r7, [r6, #1]
 801e594:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801e598:	4427      	add	r7, r4
 801e59a:	2900      	cmp	r1, #0
 801e59c:	f000 8097 	beq.w	801e6ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801e5a0:	18b0      	adds	r0, r6, r2
 801e5a2:	5cb2      	ldrb	r2, [r6, r2]
 801e5a4:	7840      	ldrb	r0, [r0, #1]
 801e5a6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801e5aa:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801e5ae:	4422      	add	r2, r4
 801e5b0:	4420      	add	r0, r4
 801e5b2:	b29b      	uxth	r3, r3
 801e5b4:	b289      	uxth	r1, r1
 801e5b6:	fb03 f801 	mul.w	r8, r3, r1
 801e5ba:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801e5bc:	f895 b002 	ldrb.w	fp, [r5, #2]
 801e5c0:	f8b6 c000 	ldrh.w	ip, [r6]
 801e5c4:	78be      	ldrb	r6, [r7, #2]
 801e5c6:	f814 9009 	ldrb.w	r9, [r4, r9]
 801e5ca:	011b      	lsls	r3, r3, #4
 801e5cc:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801e5d0:	b289      	uxth	r1, r1
 801e5d2:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801e5d6:	eba3 0308 	sub.w	r3, r3, r8
 801e5da:	b29b      	uxth	r3, r3
 801e5dc:	ebae 0e01 	sub.w	lr, lr, r1
 801e5e0:	fa1f fe8e 	uxth.w	lr, lr
 801e5e4:	435e      	muls	r6, r3
 801e5e6:	fb0e 660b 	mla	r6, lr, fp, r6
 801e5ea:	f892 b002 	ldrb.w	fp, [r2, #2]
 801e5ee:	9310      	str	r3, [sp, #64]	; 0x40
 801e5f0:	fb01 660b 	mla	r6, r1, fp, r6
 801e5f4:	f890 b002 	ldrb.w	fp, [r0, #2]
 801e5f8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e5fa:	fb08 660b 	mla	r6, r8, fp, r6
 801e5fe:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801e602:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801e606:	fb1b fb03 	smulbb	fp, fp, r3
 801e60a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801e60e:	fb06 b60a 	mla	r6, r6, sl, fp
 801e612:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e614:	f895 b001 	ldrb.w	fp, [r5, #1]
 801e618:	787d      	ldrb	r5, [r7, #1]
 801e61a:	783f      	ldrb	r7, [r7, #0]
 801e61c:	435d      	muls	r5, r3
 801e61e:	fb0e 550b 	mla	r5, lr, fp, r5
 801e622:	f892 b001 	ldrb.w	fp, [r2, #1]
 801e626:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e628:	fb01 550b 	mla	r5, r1, fp, r5
 801e62c:	f890 b001 	ldrb.w	fp, [r0, #1]
 801e630:	fb08 550b 	mla	r5, r8, fp, r5
 801e634:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801e638:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801e63c:	fb1b fb03 	smulbb	fp, fp, r3
 801e640:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e642:	437b      	muls	r3, r7
 801e644:	7817      	ldrb	r7, [r2, #0]
 801e646:	fb0e 3309 	mla	r3, lr, r9, r3
 801e64a:	fb01 3307 	mla	r3, r1, r7, r3
 801e64e:	7807      	ldrb	r7, [r0, #0]
 801e650:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801e654:	fb08 3707 	mla	r7, r8, r7, r3
 801e658:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e65a:	fa5f fc8c 	uxtb.w	ip, ip
 801e65e:	fb1c fc03 	smulbb	ip, ip, r3
 801e662:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801e666:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801e66a:	fb05 b50a 	mla	r5, r5, sl, fp
 801e66e:	fb07 c70a 	mla	r7, r7, sl, ip
 801e672:	b2b6      	uxth	r6, r6
 801e674:	b2ad      	uxth	r5, r5
 801e676:	b2bf      	uxth	r7, r7
 801e678:	1c73      	adds	r3, r6, #1
 801e67a:	1c7a      	adds	r2, r7, #1
 801e67c:	f105 0b01 	add.w	fp, r5, #1
 801e680:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801e684:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801e688:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801e68c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e690:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801e694:	096d      	lsrs	r5, r5, #5
 801e696:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e698:	4316      	orrs	r6, r2
 801e69a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e69e:	432e      	orrs	r6, r5
 801e6a0:	f823 6b02 	strh.w	r6, [r3], #2
 801e6a4:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801e6a6:	930c      	str	r3, [sp, #48]	; 0x30
 801e6a8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801e6aa:	4413      	add	r3, r2
 801e6ac:	931f      	str	r3, [sp, #124]	; 0x7c
 801e6ae:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801e6b0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e6b2:	4413      	add	r3, r2
 801e6b4:	9320      	str	r3, [sp, #128]	; 0x80
 801e6b6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e6b8:	3b01      	subs	r3, #1
 801e6ba:	9311      	str	r3, [sp, #68]	; 0x44
 801e6bc:	e6db      	b.n	801e476 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801e6be:	b149      	cbz	r1, 801e6d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801e6c0:	5cb2      	ldrb	r2, [r6, r2]
 801e6c2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801e6c6:	4422      	add	r2, r4
 801e6c8:	4628      	mov	r0, r5
 801e6ca:	462f      	mov	r7, r5
 801e6cc:	e771      	b.n	801e5b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801e6ce:	4628      	mov	r0, r5
 801e6d0:	462a      	mov	r2, r5
 801e6d2:	e76e      	b.n	801e5b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801e6d4:	4628      	mov	r0, r5
 801e6d6:	462a      	mov	r2, r5
 801e6d8:	e7f7      	b.n	801e6ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801e6da:	b015      	add	sp, #84	; 0x54
 801e6dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e6e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801e6e0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e6e4:	880f      	ldrh	r7, [r1, #0]
 801e6e6:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801e6ea:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801e6ee:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801e6f2:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801e6f6:	023c      	lsls	r4, r7, #8
 801e6f8:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801e6fc:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801e700:	017c      	lsls	r4, r7, #5
 801e702:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801e706:	00ff      	lsls	r7, r7, #3
 801e708:	ea4b 0404 	orr.w	r4, fp, r4
 801e70c:	b2ff      	uxtb	r7, r7
 801e70e:	fb05 ca0e 	mla	sl, r5, lr, ip
 801e712:	4327      	orrs	r7, r4
 801e714:	2d00      	cmp	r5, #0
 801e716:	eb02 080a 	add.w	r8, r2, sl
 801e71a:	9701      	str	r7, [sp, #4]
 801e71c:	db7e      	blt.n	801e81c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801e71e:	45a9      	cmp	r9, r5
 801e720:	dd7c      	ble.n	801e81c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801e722:	f1bc 0f00 	cmp.w	ip, #0
 801e726:	db77      	blt.n	801e818 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801e728:	45e6      	cmp	lr, ip
 801e72a:	dd75      	ble.n	801e818 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801e72c:	f812 700a 	ldrb.w	r7, [r2, sl]
 801e730:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801e734:	441f      	add	r7, r3
 801e736:	f11c 0201 	adds.w	r2, ip, #1
 801e73a:	d472      	bmi.n	801e822 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801e73c:	4596      	cmp	lr, r2
 801e73e:	dd70      	ble.n	801e822 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801e740:	2800      	cmp	r0, #0
 801e742:	d06e      	beq.n	801e822 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801e744:	f898 4001 	ldrb.w	r4, [r8, #1]
 801e748:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801e74c:	441c      	add	r4, r3
 801e74e:	3501      	adds	r5, #1
 801e750:	d46b      	bmi.n	801e82a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801e752:	45a9      	cmp	r9, r5
 801e754:	dd69      	ble.n	801e82a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801e756:	2e00      	cmp	r6, #0
 801e758:	d067      	beq.n	801e82a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801e75a:	f1bc 0f00 	cmp.w	ip, #0
 801e75e:	db62      	blt.n	801e826 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801e760:	45e6      	cmp	lr, ip
 801e762:	dd60      	ble.n	801e826 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801e764:	f818 500e 	ldrb.w	r5, [r8, lr]
 801e768:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801e76c:	441d      	add	r5, r3
 801e76e:	f11c 0201 	adds.w	r2, ip, #1
 801e772:	d45d      	bmi.n	801e830 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801e774:	4596      	cmp	lr, r2
 801e776:	dd5b      	ble.n	801e830 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801e778:	2800      	cmp	r0, #0
 801e77a:	d059      	beq.n	801e830 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801e77c:	44c6      	add	lr, r8
 801e77e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801e782:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801e786:	4413      	add	r3, r2
 801e788:	b280      	uxth	r0, r0
 801e78a:	b2b2      	uxth	r2, r6
 801e78c:	fb00 f602 	mul.w	r6, r0, r2
 801e790:	0100      	lsls	r0, r0, #4
 801e792:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801e796:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801e79a:	1b80      	subs	r0, r0, r6
 801e79c:	fa1f fc82 	uxth.w	ip, r2
 801e7a0:	b282      	uxth	r2, r0
 801e7a2:	78a0      	ldrb	r0, [r4, #2]
 801e7a4:	f897 e002 	ldrb.w	lr, [r7, #2]
 801e7a8:	f897 9000 	ldrb.w	r9, [r7]
 801e7ac:	787f      	ldrb	r7, [r7, #1]
 801e7ae:	eba8 080c 	sub.w	r8, r8, ip
 801e7b2:	fa1f f888 	uxth.w	r8, r8
 801e7b6:	4350      	muls	r0, r2
 801e7b8:	fb08 0e0e 	mla	lr, r8, lr, r0
 801e7bc:	78a8      	ldrb	r0, [r5, #2]
 801e7be:	fb0c e000 	mla	r0, ip, r0, lr
 801e7c2:	f893 e002 	ldrb.w	lr, [r3, #2]
 801e7c6:	fb06 0e0e 	mla	lr, r6, lr, r0
 801e7ca:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801e7ce:	f894 e000 	ldrb.w	lr, [r4]
 801e7d2:	fb02 fe0e 	mul.w	lr, r2, lr
 801e7d6:	fb08 e909 	mla	r9, r8, r9, lr
 801e7da:	f895 e000 	ldrb.w	lr, [r5]
 801e7de:	fb0c 990e 	mla	r9, ip, lr, r9
 801e7e2:	f893 e000 	ldrb.w	lr, [r3]
 801e7e6:	785b      	ldrb	r3, [r3, #1]
 801e7e8:	fb06 9e0e 	mla	lr, r6, lr, r9
 801e7ec:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801e7f0:	ea4e 0e00 	orr.w	lr, lr, r0
 801e7f4:	7860      	ldrb	r0, [r4, #1]
 801e7f6:	4350      	muls	r0, r2
 801e7f8:	786a      	ldrb	r2, [r5, #1]
 801e7fa:	fb08 0007 	mla	r0, r8, r7, r0
 801e7fe:	fb0c 0202 	mla	r2, ip, r2, r0
 801e802:	fb06 2303 	mla	r3, r6, r3, r2
 801e806:	095b      	lsrs	r3, r3, #5
 801e808:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e80c:	ea4e 0303 	orr.w	r3, lr, r3
 801e810:	800b      	strh	r3, [r1, #0]
 801e812:	b003      	add	sp, #12
 801e814:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e818:	af01      	add	r7, sp, #4
 801e81a:	e78c      	b.n	801e736 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801e81c:	ac01      	add	r4, sp, #4
 801e81e:	4627      	mov	r7, r4
 801e820:	e795      	b.n	801e74e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801e822:	ac01      	add	r4, sp, #4
 801e824:	e793      	b.n	801e74e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801e826:	ad01      	add	r5, sp, #4
 801e828:	e7a1      	b.n	801e76e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801e82a:	ab01      	add	r3, sp, #4
 801e82c:	461d      	mov	r5, r3
 801e82e:	e7ab      	b.n	801e788 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801e830:	ab01      	add	r3, sp, #4
 801e832:	e7a9      	b.n	801e788 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801e834 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e834:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e838:	b08f      	sub	sp, #60	; 0x3c
 801e83a:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801e83e:	920c      	str	r2, [sp, #48]	; 0x30
 801e840:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801e842:	910a      	str	r1, [sp, #40]	; 0x28
 801e844:	9306      	str	r3, [sp, #24]
 801e846:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801e84a:	900d      	str	r0, [sp, #52]	; 0x34
 801e84c:	6850      	ldr	r0, [r2, #4]
 801e84e:	6812      	ldr	r2, [r2, #0]
 801e850:	fb00 1303 	mla	r3, r0, r3, r1
 801e854:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e858:	9307      	str	r3, [sp, #28]
 801e85a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e85c:	681b      	ldr	r3, [r3, #0]
 801e85e:	9308      	str	r3, [sp, #32]
 801e860:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e862:	685c      	ldr	r4, [r3, #4]
 801e864:	3404      	adds	r4, #4
 801e866:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e868:	2b00      	cmp	r3, #0
 801e86a:	dc03      	bgt.n	801e874 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801e86c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e86e:	2b00      	cmp	r3, #0
 801e870:	f340 81d6 	ble.w	801ec20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801e874:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e876:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e87a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e87e:	1e48      	subs	r0, r1, #1
 801e880:	1e56      	subs	r6, r2, #1
 801e882:	9b06      	ldr	r3, [sp, #24]
 801e884:	2b00      	cmp	r3, #0
 801e886:	f340 80b7 	ble.w	801e9f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801e88a:	ea5f 472b 	movs.w	r7, fp, asr #16
 801e88e:	ea4f 4325 	mov.w	r3, r5, asr #16
 801e892:	d406      	bmi.n	801e8a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801e894:	4287      	cmp	r7, r0
 801e896:	da04      	bge.n	801e8a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801e898:	2b00      	cmp	r3, #0
 801e89a:	db02      	blt.n	801e8a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801e89c:	42b3      	cmp	r3, r6
 801e89e:	f2c0 80ac 	blt.w	801e9fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801e8a2:	3701      	adds	r7, #1
 801e8a4:	f100 809d 	bmi.w	801e9e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801e8a8:	42b9      	cmp	r1, r7
 801e8aa:	f2c0 809a 	blt.w	801e9e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801e8ae:	3301      	adds	r3, #1
 801e8b0:	f100 8097 	bmi.w	801e9e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801e8b4:	429a      	cmp	r2, r3
 801e8b6:	f2c0 8094 	blt.w	801e9e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801e8ba:	9b06      	ldr	r3, [sp, #24]
 801e8bc:	930b      	str	r3, [sp, #44]	; 0x2c
 801e8be:	9b07      	ldr	r3, [sp, #28]
 801e8c0:	9309      	str	r3, [sp, #36]	; 0x24
 801e8c2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e8c4:	2b00      	cmp	r3, #0
 801e8c6:	f340 80b5 	ble.w	801ea34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801e8ca:	9820      	ldr	r0, [sp, #128]	; 0x80
 801e8cc:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801e8ce:	68c7      	ldr	r7, [r0, #12]
 801e8d0:	6892      	ldr	r2, [r2, #8]
 801e8d2:	ea5f 402b 	movs.w	r0, fp, asr #16
 801e8d6:	ea4f 4625 	mov.w	r6, r5, asr #16
 801e8da:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801e8de:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801e8e2:	f100 80fb 	bmi.w	801eadc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801e8e6:	f102 3cff 	add.w	ip, r2, #4294967295
 801e8ea:	4560      	cmp	r0, ip
 801e8ec:	f280 80f6 	bge.w	801eadc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801e8f0:	2e00      	cmp	r6, #0
 801e8f2:	f2c0 80f3 	blt.w	801eadc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801e8f6:	f107 3cff 	add.w	ip, r7, #4294967295
 801e8fa:	4566      	cmp	r6, ip
 801e8fc:	f280 80ee 	bge.w	801eadc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801e900:	b212      	sxth	r2, r2
 801e902:	fb06 0002 	mla	r0, r6, r2, r0
 801e906:	9e08      	ldr	r6, [sp, #32]
 801e908:	1837      	adds	r7, r6, r0
 801e90a:	5c30      	ldrb	r0, [r6, r0]
 801e90c:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801e910:	eb04 0c08 	add.w	ip, r4, r8
 801e914:	2b00      	cmp	r3, #0
 801e916:	f000 80d3 	beq.w	801eac0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801e91a:	787e      	ldrb	r6, [r7, #1]
 801e91c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801e920:	4426      	add	r6, r4
 801e922:	2900      	cmp	r1, #0
 801e924:	f000 80d4 	beq.w	801ead0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801e928:	18b8      	adds	r0, r7, r2
 801e92a:	5cba      	ldrb	r2, [r7, r2]
 801e92c:	7840      	ldrb	r0, [r0, #1]
 801e92e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801e932:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801e936:	4422      	add	r2, r4
 801e938:	4420      	add	r0, r4
 801e93a:	b29b      	uxth	r3, r3
 801e93c:	b289      	uxth	r1, r1
 801e93e:	fb03 f901 	mul.w	r9, r3, r1
 801e942:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801e946:	011b      	lsls	r3, r3, #4
 801e948:	b289      	uxth	r1, r1
 801e94a:	78b7      	ldrb	r7, [r6, #2]
 801e94c:	f89c a002 	ldrb.w	sl, [ip, #2]
 801e950:	f89c c001 	ldrb.w	ip, [ip, #1]
 801e954:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801e958:	eba3 0309 	sub.w	r3, r3, r9
 801e95c:	b29b      	uxth	r3, r3
 801e95e:	ebae 0e01 	sub.w	lr, lr, r1
 801e962:	fa1f fe8e 	uxth.w	lr, lr
 801e966:	435f      	muls	r7, r3
 801e968:	fb0e 770a 	mla	r7, lr, sl, r7
 801e96c:	f892 a002 	ldrb.w	sl, [r2, #2]
 801e970:	fb01 770a 	mla	r7, r1, sl, r7
 801e974:	f890 a002 	ldrb.w	sl, [r0, #2]
 801e978:	fb09 7a0a 	mla	sl, r9, sl, r7
 801e97c:	f814 7008 	ldrb.w	r7, [r4, r8]
 801e980:	f896 8000 	ldrb.w	r8, [r6]
 801e984:	7876      	ldrb	r6, [r6, #1]
 801e986:	fb03 f808 	mul.w	r8, r3, r8
 801e98a:	fb0e 8807 	mla	r8, lr, r7, r8
 801e98e:	7817      	ldrb	r7, [r2, #0]
 801e990:	fb01 8807 	mla	r8, r1, r7, r8
 801e994:	7807      	ldrb	r7, [r0, #0]
 801e996:	fb09 8707 	mla	r7, r9, r7, r8
 801e99a:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801e99e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801e9a2:	ea47 070a 	orr.w	r7, r7, sl
 801e9a6:	4373      	muls	r3, r6
 801e9a8:	f892 a001 	ldrb.w	sl, [r2, #1]
 801e9ac:	fb0e 330c 	mla	r3, lr, ip, r3
 801e9b0:	fb01 310a 	mla	r1, r1, sl, r3
 801e9b4:	f890 a001 	ldrb.w	sl, [r0, #1]
 801e9b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e9ba:	fb09 1a0a 	mla	sl, r9, sl, r1
 801e9be:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e9c2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e9c6:	ea47 070a 	orr.w	r7, r7, sl
 801e9ca:	801f      	strh	r7, [r3, #0]
 801e9cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e9ce:	3302      	adds	r3, #2
 801e9d0:	9309      	str	r3, [sp, #36]	; 0x24
 801e9d2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801e9d4:	449b      	add	fp, r3
 801e9d6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801e9d8:	441d      	add	r5, r3
 801e9da:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e9dc:	3b01      	subs	r3, #1
 801e9de:	930b      	str	r3, [sp, #44]	; 0x2c
 801e9e0:	e76f      	b.n	801e8c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e9e2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801e9e4:	449b      	add	fp, r3
 801e9e6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801e9e8:	441d      	add	r5, r3
 801e9ea:	9b06      	ldr	r3, [sp, #24]
 801e9ec:	3b01      	subs	r3, #1
 801e9ee:	9306      	str	r3, [sp, #24]
 801e9f0:	9b07      	ldr	r3, [sp, #28]
 801e9f2:	3302      	adds	r3, #2
 801e9f4:	9307      	str	r3, [sp, #28]
 801e9f6:	e744      	b.n	801e882 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801e9f8:	d023      	beq.n	801ea42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801e9fa:	9b06      	ldr	r3, [sp, #24]
 801e9fc:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801e9fe:	3b01      	subs	r3, #1
 801ea00:	fb00 b003 	mla	r0, r0, r3, fp
 801ea04:	1400      	asrs	r0, r0, #16
 801ea06:	f53f af58 	bmi.w	801e8ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801ea0a:	3901      	subs	r1, #1
 801ea0c:	4288      	cmp	r0, r1
 801ea0e:	f6bf af54 	bge.w	801e8ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801ea12:	991c      	ldr	r1, [sp, #112]	; 0x70
 801ea14:	fb01 5303 	mla	r3, r1, r3, r5
 801ea18:	141b      	asrs	r3, r3, #16
 801ea1a:	f53f af4e 	bmi.w	801e8ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801ea1e:	3a01      	subs	r2, #1
 801ea20:	4293      	cmp	r3, r2
 801ea22:	f6bf af4a 	bge.w	801e8ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801ea26:	9b06      	ldr	r3, [sp, #24]
 801ea28:	9309      	str	r3, [sp, #36]	; 0x24
 801ea2a:	9b07      	ldr	r3, [sp, #28]
 801ea2c:	930b      	str	r3, [sp, #44]	; 0x2c
 801ea2e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ea30:	2b00      	cmp	r3, #0
 801ea32:	dc70      	bgt.n	801eb16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801ea34:	9b06      	ldr	r3, [sp, #24]
 801ea36:	9a07      	ldr	r2, [sp, #28]
 801ea38:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ea3c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ea40:	9307      	str	r3, [sp, #28]
 801ea42:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ea44:	2b00      	cmp	r3, #0
 801ea46:	f340 80eb 	ble.w	801ec20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801ea4a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ea4e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ea52:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ea56:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ea58:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ea5c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ea60:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ea64:	eef0 6a62 	vmov.f32	s13, s5
 801ea68:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ea6c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ea70:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ea74:	ee16 ba90 	vmov	fp, s13
 801ea78:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ea7c:	eef0 6a43 	vmov.f32	s13, s6
 801ea80:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ea84:	ee12 2a90 	vmov	r2, s5
 801ea88:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ea8c:	fb92 f3f3 	sdiv	r3, r2, r3
 801ea90:	ee13 2a10 	vmov	r2, s6
 801ea94:	931b      	str	r3, [sp, #108]	; 0x6c
 801ea96:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ea98:	fb92 f3f3 	sdiv	r3, r2, r3
 801ea9c:	931c      	str	r3, [sp, #112]	; 0x70
 801ea9e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801eaa0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801eaa2:	3b01      	subs	r3, #1
 801eaa4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801eaa8:	930a      	str	r3, [sp, #40]	; 0x28
 801eaaa:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801eaac:	bf08      	it	eq
 801eaae:	4613      	moveq	r3, r2
 801eab0:	ee16 5a90 	vmov	r5, s13
 801eab4:	9306      	str	r3, [sp, #24]
 801eab6:	eeb0 3a67 	vmov.f32	s6, s15
 801eaba:	eef0 2a47 	vmov.f32	s5, s14
 801eabe:	e6d2      	b.n	801e866 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801eac0:	b149      	cbz	r1, 801ead6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801eac2:	5cba      	ldrb	r2, [r7, r2]
 801eac4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801eac8:	4422      	add	r2, r4
 801eaca:	4660      	mov	r0, ip
 801eacc:	4666      	mov	r6, ip
 801eace:	e734      	b.n	801e93a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801ead0:	4660      	mov	r0, ip
 801ead2:	4662      	mov	r2, ip
 801ead4:	e731      	b.n	801e93a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801ead6:	4660      	mov	r0, ip
 801ead8:	4662      	mov	r2, ip
 801eada:	e7f7      	b.n	801eacc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801eadc:	f110 0c01 	adds.w	ip, r0, #1
 801eae0:	f53f af74 	bmi.w	801e9cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801eae4:	4562      	cmp	r2, ip
 801eae6:	f6ff af71 	blt.w	801e9cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801eaea:	f116 0c01 	adds.w	ip, r6, #1
 801eaee:	f53f af6d 	bmi.w	801e9cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801eaf2:	4567      	cmp	r7, ip
 801eaf4:	f6ff af6a 	blt.w	801e9cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801eaf8:	b23f      	sxth	r7, r7
 801eafa:	b212      	sxth	r2, r2
 801eafc:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801eb00:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801eb04:	9200      	str	r2, [sp, #0]
 801eb06:	9701      	str	r7, [sp, #4]
 801eb08:	4623      	mov	r3, r4
 801eb0a:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801eb0e:	980d      	ldr	r0, [sp, #52]	; 0x34
 801eb10:	f7ff fde6 	bl	801e6e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801eb14:	e75a      	b.n	801e9cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801eb16:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801eb18:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801eb1c:	ea4f 462b 	mov.w	r6, fp, asr #16
 801eb20:	1428      	asrs	r0, r5, #16
 801eb22:	fb02 6000 	mla	r0, r2, r0, r6
 801eb26:	9e08      	ldr	r6, [sp, #32]
 801eb28:	f816 8000 	ldrb.w	r8, [r6, r0]
 801eb2c:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801eb30:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801eb34:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801eb38:	1837      	adds	r7, r6, r0
 801eb3a:	eb04 0c08 	add.w	ip, r4, r8
 801eb3e:	2b00      	cmp	r3, #0
 801eb40:	d060      	beq.n	801ec04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801eb42:	787e      	ldrb	r6, [r7, #1]
 801eb44:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801eb48:	4426      	add	r6, r4
 801eb4a:	2900      	cmp	r1, #0
 801eb4c:	d062      	beq.n	801ec14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801eb4e:	18b8      	adds	r0, r7, r2
 801eb50:	5cba      	ldrb	r2, [r7, r2]
 801eb52:	7840      	ldrb	r0, [r0, #1]
 801eb54:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801eb58:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801eb5c:	4422      	add	r2, r4
 801eb5e:	4420      	add	r0, r4
 801eb60:	b29b      	uxth	r3, r3
 801eb62:	b289      	uxth	r1, r1
 801eb64:	fb03 f901 	mul.w	r9, r3, r1
 801eb68:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801eb6c:	011b      	lsls	r3, r3, #4
 801eb6e:	b289      	uxth	r1, r1
 801eb70:	78b7      	ldrb	r7, [r6, #2]
 801eb72:	f89c a002 	ldrb.w	sl, [ip, #2]
 801eb76:	f89c c001 	ldrb.w	ip, [ip, #1]
 801eb7a:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801eb7e:	eba3 0309 	sub.w	r3, r3, r9
 801eb82:	b29b      	uxth	r3, r3
 801eb84:	ebae 0e01 	sub.w	lr, lr, r1
 801eb88:	fa1f fe8e 	uxth.w	lr, lr
 801eb8c:	435f      	muls	r7, r3
 801eb8e:	fb0e 770a 	mla	r7, lr, sl, r7
 801eb92:	f892 a002 	ldrb.w	sl, [r2, #2]
 801eb96:	fb01 770a 	mla	r7, r1, sl, r7
 801eb9a:	f890 a002 	ldrb.w	sl, [r0, #2]
 801eb9e:	fb09 7a0a 	mla	sl, r9, sl, r7
 801eba2:	f814 7008 	ldrb.w	r7, [r4, r8]
 801eba6:	f896 8000 	ldrb.w	r8, [r6]
 801ebaa:	7876      	ldrb	r6, [r6, #1]
 801ebac:	fb03 f808 	mul.w	r8, r3, r8
 801ebb0:	fb0e 8807 	mla	r8, lr, r7, r8
 801ebb4:	7817      	ldrb	r7, [r2, #0]
 801ebb6:	fb01 8807 	mla	r8, r1, r7, r8
 801ebba:	7807      	ldrb	r7, [r0, #0]
 801ebbc:	fb09 8707 	mla	r7, r9, r7, r8
 801ebc0:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801ebc4:	4373      	muls	r3, r6
 801ebc6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801ebca:	7856      	ldrb	r6, [r2, #1]
 801ebcc:	ea47 070a 	orr.w	r7, r7, sl
 801ebd0:	fb0e 330c 	mla	r3, lr, ip, r3
 801ebd4:	f890 a001 	ldrb.w	sl, [r0, #1]
 801ebd8:	fb01 3306 	mla	r3, r1, r6, r3
 801ebdc:	fb09 3a0a 	mla	sl, r9, sl, r3
 801ebe0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ebe4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ebe6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ebea:	ea47 070a 	orr.w	r7, r7, sl
 801ebee:	f823 7b02 	strh.w	r7, [r3], #2
 801ebf2:	930b      	str	r3, [sp, #44]	; 0x2c
 801ebf4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801ebf6:	449b      	add	fp, r3
 801ebf8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ebfa:	441d      	add	r5, r3
 801ebfc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ebfe:	3b01      	subs	r3, #1
 801ec00:	9309      	str	r3, [sp, #36]	; 0x24
 801ec02:	e714      	b.n	801ea2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801ec04:	b149      	cbz	r1, 801ec1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801ec06:	5cba      	ldrb	r2, [r7, r2]
 801ec08:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ec0c:	4422      	add	r2, r4
 801ec0e:	4660      	mov	r0, ip
 801ec10:	4666      	mov	r6, ip
 801ec12:	e7a5      	b.n	801eb60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801ec14:	4660      	mov	r0, ip
 801ec16:	4662      	mov	r2, ip
 801ec18:	e7a2      	b.n	801eb60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801ec1a:	4660      	mov	r0, ip
 801ec1c:	4662      	mov	r2, ip
 801ec1e:	e7f7      	b.n	801ec10 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801ec20:	b00f      	add	sp, #60	; 0x3c
 801ec22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ec26 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801ec26:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ec2a:	b085      	sub	sp, #20
 801ec2c:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 801ec30:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801ec34:	9102      	str	r1, [sp, #8]
 801ec36:	2c00      	cmp	r4, #0
 801ec38:	fb04 710c 	mla	r1, r4, ip, r7
 801ec3c:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801ec40:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801ec44:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801ec48:	eb02 0e01 	add.w	lr, r2, r1
 801ec4c:	f2c0 8122 	blt.w	801ee94 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801ec50:	45a0      	cmp	r8, r4
 801ec52:	f340 811f 	ble.w	801ee94 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801ec56:	2f00      	cmp	r7, #0
 801ec58:	f2c0 811a 	blt.w	801ee90 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801ec5c:	45bc      	cmp	ip, r7
 801ec5e:	f340 8117 	ble.w	801ee90 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801ec62:	5c52      	ldrb	r2, [r2, r1]
 801ec64:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801ec68:	1c7a      	adds	r2, r7, #1
 801ec6a:	f100 8116 	bmi.w	801ee9a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801ec6e:	4594      	cmp	ip, r2
 801ec70:	f340 8113 	ble.w	801ee9a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801ec74:	2e00      	cmp	r6, #0
 801ec76:	f000 8112 	beq.w	801ee9e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801ec7a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801ec7e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801ec82:	3401      	adds	r4, #1
 801ec84:	f100 810f 	bmi.w	801eea6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801ec88:	45a0      	cmp	r8, r4
 801ec8a:	f340 810c 	ble.w	801eea6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801ec8e:	2800      	cmp	r0, #0
 801ec90:	f000 810c 	beq.w	801eeac <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801ec94:	2f00      	cmp	r7, #0
 801ec96:	f2c0 8104 	blt.w	801eea2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801ec9a:	45bc      	cmp	ip, r7
 801ec9c:	f340 8101 	ble.w	801eea2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801eca0:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801eca4:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801eca8:	3701      	adds	r7, #1
 801ecaa:	f100 8102 	bmi.w	801eeb2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801ecae:	45bc      	cmp	ip, r7
 801ecb0:	f340 80ff 	ble.w	801eeb2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801ecb4:	2e00      	cmp	r6, #0
 801ecb6:	f000 80fe 	beq.w	801eeb6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801ecba:	44f4      	add	ip, lr
 801ecbc:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801ecc0:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801ecc4:	b2b6      	uxth	r6, r6
 801ecc6:	b280      	uxth	r0, r0
 801ecc8:	fb00 fe06 	mul.w	lr, r0, r6
 801eccc:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801ecd0:	0136      	lsls	r6, r6, #4
 801ecd2:	eba6 070e 	sub.w	r7, r6, lr
 801ecd6:	b280      	uxth	r0, r0
 801ecd8:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801ecdc:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801ece0:	b2bf      	uxth	r7, r7
 801ece2:	1a1b      	subs	r3, r3, r0
 801ece4:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801ece8:	b29b      	uxth	r3, r3
 801ecea:	fb0a f607 	mul.w	r6, sl, r7
 801ecee:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801ecf2:	fb0b 6603 	mla	r6, fp, r3, r6
 801ecf6:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801ecfa:	fb00 6609 	mla	r6, r0, r9, r6
 801ecfe:	fb0e 6608 	mla	r6, lr, r8, r6
 801ed02:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801ed06:	9600      	str	r6, [sp, #0]
 801ed08:	2e00      	cmp	r6, #0
 801ed0a:	f000 80be 	beq.w	801ee8a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801ed0e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ed12:	fb0b fc0c 	mul.w	ip, fp, ip
 801ed16:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801ed1a:	fb0b f505 	mul.w	r5, fp, r5
 801ed1e:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801ed22:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801ed26:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ed2a:	44dc      	add	ip, fp
 801ed2c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ed30:	9501      	str	r5, [sp, #4]
 801ed32:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801ed36:	9503      	str	r5, [sp, #12]
 801ed38:	9d01      	ldr	r5, [sp, #4]
 801ed3a:	9e02      	ldr	r6, [sp, #8]
 801ed3c:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801ed40:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ed44:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801ed48:	fb0a fc0c 	mul.w	ip, sl, ip
 801ed4c:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801ed50:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801ed54:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801ed58:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ed5c:	4465      	add	r5, ip
 801ed5e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801ed62:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801ed66:	fb09 fc0c 	mul.w	ip, r9, ip
 801ed6a:	fb09 f904 	mul.w	r9, r9, r4
 801ed6e:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801ed72:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801ed76:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801ed7a:	fb08 f404 	mul.w	r4, r8, r4
 801ed7e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801ed82:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ed86:	fb08 f802 	mul.w	r8, r8, r2
 801ed8a:	fb0a fa01 	mul.w	sl, sl, r1
 801ed8e:	0a22      	lsrs	r2, r4, #8
 801ed90:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801ed94:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ed98:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801ed9c:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801eda0:	4414      	add	r4, r2
 801eda2:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801eda6:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801edaa:	0a2d      	lsrs	r5, r5, #8
 801edac:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801edb0:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801edb4:	9a03      	ldr	r2, [sp, #12]
 801edb6:	8836      	ldrh	r6, [r6, #0]
 801edb8:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801edbc:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801edc0:	437d      	muls	r5, r7
 801edc2:	4461      	add	r1, ip
 801edc4:	0a24      	lsrs	r4, r4, #8
 801edc6:	fb02 5503 	mla	r5, r2, r3, r5
 801edca:	0a09      	lsrs	r1, r1, #8
 801edcc:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801edd0:	fb04 540e 	mla	r4, r4, lr, r5
 801edd4:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801edd8:	fb01 4100 	mla	r1, r1, r0, r4
 801eddc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ede0:	0a09      	lsrs	r1, r1, #8
 801ede2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ede6:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801edea:	fb07 f70a 	mul.w	r7, r7, sl
 801edee:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801edf2:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801edf6:	fb03 7101 	mla	r1, r3, r1, r7
 801edfa:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801edfe:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801ee02:	fb0e 1e08 	mla	lr, lr, r8, r1
 801ee06:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801ee0a:	fb00 e101 	mla	r1, r0, r1, lr
 801ee0e:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801ee12:	9a00      	ldr	r2, [sp, #0]
 801ee14:	b287      	uxth	r7, r0
 801ee16:	437a      	muls	r2, r7
 801ee18:	0a09      	lsrs	r1, r1, #8
 801ee1a:	1c53      	adds	r3, r2, #1
 801ee1c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801ee20:	4321      	orrs	r1, r4
 801ee22:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ee26:	1235      	asrs	r5, r6, #8
 801ee28:	0c0a      	lsrs	r2, r1, #16
 801ee2a:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801ee2e:	b2db      	uxtb	r3, r3
 801ee30:	fb12 f207 	smulbb	r2, r2, r7
 801ee34:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801ee38:	fb05 2503 	mla	r5, r5, r3, r2
 801ee3c:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801ee40:	10f2      	asrs	r2, r6, #3
 801ee42:	b2c8      	uxtb	r0, r1
 801ee44:	00f6      	lsls	r6, r6, #3
 801ee46:	fb14 f407 	smulbb	r4, r4, r7
 801ee4a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ee4e:	b2f6      	uxtb	r6, r6
 801ee50:	fb10 f007 	smulbb	r0, r0, r7
 801ee54:	fb02 4203 	mla	r2, r2, r3, r4
 801ee58:	b2ad      	uxth	r5, r5
 801ee5a:	fb06 0303 	mla	r3, r6, r3, r0
 801ee5e:	b299      	uxth	r1, r3
 801ee60:	b294      	uxth	r4, r2
 801ee62:	1c6b      	adds	r3, r5, #1
 801ee64:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801ee68:	1c62      	adds	r2, r4, #1
 801ee6a:	1c4b      	adds	r3, r1, #1
 801ee6c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801ee70:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801ee74:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ee78:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ee7c:	0952      	lsrs	r2, r2, #5
 801ee7e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ee82:	432b      	orrs	r3, r5
 801ee84:	4313      	orrs	r3, r2
 801ee86:	9a02      	ldr	r2, [sp, #8]
 801ee88:	8013      	strh	r3, [r2, #0]
 801ee8a:	b005      	add	sp, #20
 801ee8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ee90:	2500      	movs	r5, #0
 801ee92:	e6e9      	b.n	801ec68 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801ee94:	2100      	movs	r1, #0
 801ee96:	460d      	mov	r5, r1
 801ee98:	e6f3      	b.n	801ec82 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ee9a:	2100      	movs	r1, #0
 801ee9c:	e6f1      	b.n	801ec82 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ee9e:	4631      	mov	r1, r6
 801eea0:	e6ef      	b.n	801ec82 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801eea2:	2400      	movs	r4, #0
 801eea4:	e700      	b.n	801eca8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801eea6:	2200      	movs	r2, #0
 801eea8:	4614      	mov	r4, r2
 801eeaa:	e70b      	b.n	801ecc4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801eeac:	4602      	mov	r2, r0
 801eeae:	4604      	mov	r4, r0
 801eeb0:	e708      	b.n	801ecc4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801eeb2:	2200      	movs	r2, #0
 801eeb4:	e706      	b.n	801ecc4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801eeb6:	4632      	mov	r2, r6
 801eeb8:	e704      	b.n	801ecc4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801eeba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801eeba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801eebe:	b09f      	sub	sp, #124	; 0x7c
 801eec0:	921b      	str	r2, [sp, #108]	; 0x6c
 801eec2:	9309      	str	r3, [sp, #36]	; 0x24
 801eec4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801eec6:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801eeca:	931c      	str	r3, [sp, #112]	; 0x70
 801eecc:	9119      	str	r1, [sp, #100]	; 0x64
 801eece:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801eed2:	901d      	str	r0, [sp, #116]	; 0x74
 801eed4:	6850      	ldr	r0, [r2, #4]
 801eed6:	6812      	ldr	r2, [r2, #0]
 801eed8:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801eeda:	fb00 1303 	mla	r3, r0, r3, r1
 801eede:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801eee2:	930c      	str	r3, [sp, #48]	; 0x30
 801eee4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801eee6:	681b      	ldr	r3, [r3, #0]
 801eee8:	9312      	str	r3, [sp, #72]	; 0x48
 801eeea:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801eeec:	685e      	ldr	r6, [r3, #4]
 801eeee:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 801eef2:	930d      	str	r3, [sp, #52]	; 0x34
 801eef4:	3604      	adds	r6, #4
 801eef6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801eef8:	2b00      	cmp	r3, #0
 801eefa:	dc03      	bgt.n	801ef04 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801eefc:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801eefe:	2b00      	cmp	r3, #0
 801ef00:	f340 8388 	ble.w	801f614 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801ef04:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ef06:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ef0a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ef0e:	1e48      	subs	r0, r1, #1
 801ef10:	1e57      	subs	r7, r2, #1
 801ef12:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ef14:	2b00      	cmp	r3, #0
 801ef16:	f340 8195 	ble.w	801f244 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ef1a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801ef1c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801ef20:	ea4f 4325 	mov.w	r3, r5, asr #16
 801ef24:	d406      	bmi.n	801ef34 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ef26:	4584      	cmp	ip, r0
 801ef28:	da04      	bge.n	801ef34 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ef2a:	2b00      	cmp	r3, #0
 801ef2c:	db02      	blt.n	801ef34 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ef2e:	42bb      	cmp	r3, r7
 801ef30:	f2c0 8189 	blt.w	801f246 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801ef34:	f11c 0c01 	adds.w	ip, ip, #1
 801ef38:	f100 8177 	bmi.w	801f22a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801ef3c:	4561      	cmp	r1, ip
 801ef3e:	f2c0 8174 	blt.w	801f22a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801ef42:	3301      	adds	r3, #1
 801ef44:	f100 8171 	bmi.w	801f22a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801ef48:	429a      	cmp	r2, r3
 801ef4a:	f2c0 816e 	blt.w	801f22a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801ef4e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ef50:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801ef52:	931a      	str	r3, [sp, #104]	; 0x68
 801ef54:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801ef56:	2b00      	cmp	r3, #0
 801ef58:	f340 8193 	ble.w	801f282 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801ef5c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801ef5e:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801ef62:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ef64:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801ef68:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801ef6a:	141b      	asrs	r3, r3, #16
 801ef6c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801ef70:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801ef74:	f100 81d6 	bmi.w	801f324 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ef78:	f100 38ff 	add.w	r8, r0, #4294967295
 801ef7c:	4543      	cmp	r3, r8
 801ef7e:	f280 81d1 	bge.w	801f324 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ef82:	f1bc 0f00 	cmp.w	ip, #0
 801ef86:	f2c0 81cd 	blt.w	801f324 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ef8a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801ef8e:	45c4      	cmp	ip, r8
 801ef90:	f280 81c8 	bge.w	801f324 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ef94:	b200      	sxth	r0, r0
 801ef96:	fb0c 3300 	mla	r3, ip, r0, r3
 801ef9a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ef9c:	eb04 0803 	add.w	r8, r4, r3
 801efa0:	5ce3      	ldrb	r3, [r4, r3]
 801efa2:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801efa6:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801efaa:	2a00      	cmp	r2, #0
 801efac:	f000 81af 	beq.w	801f30e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801efb0:	f898 c001 	ldrb.w	ip, [r8, #1]
 801efb4:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801efb8:	940e      	str	r4, [sp, #56]	; 0x38
 801efba:	0e24      	lsrs	r4, r4, #24
 801efbc:	9415      	str	r4, [sp, #84]	; 0x54
 801efbe:	b179      	cbz	r1, 801efe0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801efc0:	eb08 0c00 	add.w	ip, r8, r0
 801efc4:	f818 0000 	ldrb.w	r0, [r8, r0]
 801efc8:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801efcc:	900a      	str	r0, [sp, #40]	; 0x28
 801efce:	0e00      	lsrs	r0, r0, #24
 801efd0:	9013      	str	r0, [sp, #76]	; 0x4c
 801efd2:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801efd6:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801efda:	900f      	str	r0, [sp, #60]	; 0x3c
 801efdc:	0e00      	lsrs	r0, r0, #24
 801efde:	9016      	str	r0, [sp, #88]	; 0x58
 801efe0:	b292      	uxth	r2, r2
 801efe2:	b289      	uxth	r1, r1
 801efe4:	fb02 f901 	mul.w	r9, r2, r1
 801efe8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801efec:	0112      	lsls	r2, r2, #4
 801efee:	eba2 0809 	sub.w	r8, r2, r9
 801eff2:	b289      	uxth	r1, r1
 801eff4:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801eff8:	9815      	ldr	r0, [sp, #84]	; 0x54
 801effa:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801effc:	fa1f f888 	uxth.w	r8, r8
 801f000:	1a52      	subs	r2, r2, r1
 801f002:	b292      	uxth	r2, r2
 801f004:	fb08 f000 	mul.w	r0, r8, r0
 801f008:	fb02 000e 	mla	r0, r2, lr, r0
 801f00c:	fb01 0004 	mla	r0, r1, r4, r0
 801f010:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801f012:	fb09 0004 	mla	r0, r9, r4, r0
 801f016:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801f01a:	2800      	cmp	r0, #0
 801f01c:	f000 80fa 	beq.w	801f214 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f020:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801f024:	d01b      	beq.n	801f05e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801f026:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801f02a:	fb0e fa0a 	mul.w	sl, lr, sl
 801f02e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f032:	fb0e fe03 	mul.w	lr, lr, r3
 801f036:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801f03a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801f03e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801f042:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801f046:	4453      	add	r3, sl
 801f048:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801f04c:	0a1b      	lsrs	r3, r3, #8
 801f04e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f052:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801f056:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801f05a:	ea43 030c 	orr.w	r3, r3, ip
 801f05e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801f060:	2cff      	cmp	r4, #255	; 0xff
 801f062:	d021      	beq.n	801f0a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801f064:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801f066:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801f06a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801f06c:	fb04 fb0b 	mul.w	fp, r4, fp
 801f070:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801f072:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801f076:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801f078:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f07c:	fb04 fa0a 	mul.w	sl, r4, sl
 801f080:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f084:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801f088:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801f08c:	44de      	add	lr, fp
 801f08e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f092:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f096:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f09a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f09e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f0a2:	ea4e 040a 	orr.w	r4, lr, sl
 801f0a6:	940e      	str	r4, [sp, #56]	; 0x38
 801f0a8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801f0aa:	2cff      	cmp	r4, #255	; 0xff
 801f0ac:	d021      	beq.n	801f0f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801f0ae:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801f0b0:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801f0b4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801f0b6:	fb04 fb0b 	mul.w	fp, r4, fp
 801f0ba:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801f0bc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801f0c0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801f0c2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f0c6:	fb04 fa0a 	mul.w	sl, r4, sl
 801f0ca:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f0ce:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801f0d2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801f0d6:	44de      	add	lr, fp
 801f0d8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f0dc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f0e0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f0e4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f0e8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f0ec:	ea4e 040a 	orr.w	r4, lr, sl
 801f0f0:	940a      	str	r4, [sp, #40]	; 0x28
 801f0f2:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801f0f4:	2cff      	cmp	r4, #255	; 0xff
 801f0f6:	d021      	beq.n	801f13c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801f0f8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801f0fa:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801f0fe:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801f100:	fb04 fb0b 	mul.w	fp, r4, fp
 801f104:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801f106:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801f10a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801f10c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f110:	fb04 fa0a 	mul.w	sl, r4, sl
 801f114:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f118:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801f11c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801f120:	44de      	add	lr, fp
 801f122:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f126:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f12a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f12e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f132:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f136:	ea4e 040a 	orr.w	r4, lr, sl
 801f13a:	940f      	str	r4, [sp, #60]	; 0x3c
 801f13c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801f13e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801f142:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801f144:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801f148:	fb08 fc0c 	mul.w	ip, r8, ip
 801f14c:	fb02 cc0e 	mla	ip, r2, lr, ip
 801f150:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801f154:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801f156:	fb01 cc0e 	mla	ip, r1, lr, ip
 801f15a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801f15e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801f160:	fb09 cc0e 	mla	ip, r9, lr, ip
 801f164:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801f168:	fb08 f80e 	mul.w	r8, r8, lr
 801f16c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f170:	fb02 8303 	mla	r3, r2, r3, r8
 801f174:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f176:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801f178:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801f17c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f17e:	fb01 330a 	mla	r3, r1, sl, r3
 801f182:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801f186:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801f188:	fb09 3901 	mla	r9, r9, r1, r3
 801f18c:	4342      	muls	r2, r0
 801f18e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f192:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f196:	883b      	ldrh	r3, [r7, #0]
 801f198:	1c50      	adds	r0, r2, #1
 801f19a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f19e:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801f1a2:	ea4c 0c09 	orr.w	ip, ip, r9
 801f1a6:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801f1aa:	1219      	asrs	r1, r3, #8
 801f1ac:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801f1b0:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801f1b4:	b2c0      	uxtb	r0, r0
 801f1b6:	fb12 f204 	smulbb	r2, r2, r4
 801f1ba:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801f1be:	fb01 2100 	mla	r1, r1, r0, r2
 801f1c2:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801f1c6:	10da      	asrs	r2, r3, #3
 801f1c8:	fa5f fc8c 	uxtb.w	ip, ip
 801f1cc:	00db      	lsls	r3, r3, #3
 801f1ce:	fb1c fc04 	smulbb	ip, ip, r4
 801f1d2:	b2db      	uxtb	r3, r3
 801f1d4:	b289      	uxth	r1, r1
 801f1d6:	fb03 c300 	mla	r3, r3, r0, ip
 801f1da:	fa1f fc83 	uxth.w	ip, r3
 801f1de:	1c4b      	adds	r3, r1, #1
 801f1e0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801f1e4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801f1e8:	fb1e fe04 	smulbb	lr, lr, r4
 801f1ec:	f10c 0301 	add.w	r3, ip, #1
 801f1f0:	fb02 e200 	mla	r2, r2, r0, lr
 801f1f4:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801f1f8:	b292      	uxth	r2, r2
 801f1fa:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801f1fe:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f202:	430b      	orrs	r3, r1
 801f204:	1c51      	adds	r1, r2, #1
 801f206:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f20a:	0952      	lsrs	r2, r2, #5
 801f20c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f210:	4313      	orrs	r3, r2
 801f212:	803b      	strh	r3, [r7, #0]
 801f214:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801f216:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801f218:	441a      	add	r2, r3
 801f21a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f21c:	9229      	str	r2, [sp, #164]	; 0xa4
 801f21e:	441d      	add	r5, r3
 801f220:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801f222:	3b01      	subs	r3, #1
 801f224:	3702      	adds	r7, #2
 801f226:	931a      	str	r3, [sp, #104]	; 0x68
 801f228:	e694      	b.n	801ef54 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801f22a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801f22c:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801f22e:	441c      	add	r4, r3
 801f230:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f232:	9429      	str	r4, [sp, #164]	; 0xa4
 801f234:	441d      	add	r5, r3
 801f236:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f238:	3b01      	subs	r3, #1
 801f23a:	9309      	str	r3, [sp, #36]	; 0x24
 801f23c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f23e:	3302      	adds	r3, #2
 801f240:	930c      	str	r3, [sp, #48]	; 0x30
 801f242:	e666      	b.n	801ef12 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f244:	d024      	beq.n	801f290 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801f246:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f248:	982b      	ldr	r0, [sp, #172]	; 0xac
 801f24a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801f24c:	3b01      	subs	r3, #1
 801f24e:	fb00 4003 	mla	r0, r0, r3, r4
 801f252:	1400      	asrs	r0, r0, #16
 801f254:	f53f ae7b 	bmi.w	801ef4e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f258:	3901      	subs	r1, #1
 801f25a:	4288      	cmp	r0, r1
 801f25c:	f6bf ae77 	bge.w	801ef4e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f260:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801f262:	fb01 5303 	mla	r3, r1, r3, r5
 801f266:	141b      	asrs	r3, r3, #16
 801f268:	f53f ae71 	bmi.w	801ef4e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f26c:	3a01      	subs	r2, #1
 801f26e:	4293      	cmp	r3, r2
 801f270:	f6bf ae6d 	bge.w	801ef4e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f274:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801f278:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801f27c:	f1bb 0f00 	cmp.w	fp, #0
 801f280:	dc70      	bgt.n	801f364 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801f282:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f284:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801f288:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f28a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801f28e:	930c      	str	r3, [sp, #48]	; 0x30
 801f290:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801f292:	2b00      	cmp	r3, #0
 801f294:	f340 81be 	ble.w	801f614 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801f298:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f29c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f2a0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f2a4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f2a6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f2aa:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f2ae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f2b2:	eef0 6a62 	vmov.f32	s13, s5
 801f2b6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f2ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f2be:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f2c2:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801f2c6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f2ca:	eef0 6a43 	vmov.f32	s13, s6
 801f2ce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f2d2:	ee12 2a90 	vmov	r2, s5
 801f2d6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f2da:	fb92 f3f3 	sdiv	r3, r2, r3
 801f2de:	ee13 2a10 	vmov	r2, s6
 801f2e2:	932b      	str	r3, [sp, #172]	; 0xac
 801f2e4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f2e6:	fb92 f3f3 	sdiv	r3, r2, r3
 801f2ea:	932c      	str	r3, [sp, #176]	; 0xb0
 801f2ec:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801f2ee:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801f2f0:	3b01      	subs	r3, #1
 801f2f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f2f6:	9319      	str	r3, [sp, #100]	; 0x64
 801f2f8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f2fa:	bf08      	it	eq
 801f2fc:	4613      	moveq	r3, r2
 801f2fe:	ee16 5a90 	vmov	r5, s13
 801f302:	9309      	str	r3, [sp, #36]	; 0x24
 801f304:	eeb0 3a67 	vmov.f32	s6, s15
 801f308:	eef0 2a47 	vmov.f32	s5, s14
 801f30c:	e5f3      	b.n	801eef6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801f30e:	2900      	cmp	r1, #0
 801f310:	f43f ae66 	beq.w	801efe0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801f314:	f818 0000 	ldrb.w	r0, [r8, r0]
 801f318:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801f31c:	900a      	str	r0, [sp, #40]	; 0x28
 801f31e:	0e00      	lsrs	r0, r0, #24
 801f320:	9013      	str	r0, [sp, #76]	; 0x4c
 801f322:	e65d      	b.n	801efe0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801f324:	f113 0801 	adds.w	r8, r3, #1
 801f328:	f53f af74 	bmi.w	801f214 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f32c:	4540      	cmp	r0, r8
 801f32e:	f6ff af71 	blt.w	801f214 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f332:	f11c 0801 	adds.w	r8, ip, #1
 801f336:	f53f af6d 	bmi.w	801f214 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f33a:	45c6      	cmp	lr, r8
 801f33c:	f6ff af6a 	blt.w	801f214 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f340:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801f342:	9302      	str	r3, [sp, #8]
 801f344:	b200      	sxth	r0, r0
 801f346:	fa0f f38e 	sxth.w	r3, lr
 801f34a:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801f34e:	e9cd c203 	strd	ip, r2, [sp, #12]
 801f352:	9301      	str	r3, [sp, #4]
 801f354:	9000      	str	r0, [sp, #0]
 801f356:	4633      	mov	r3, r6
 801f358:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801f35a:	981d      	ldr	r0, [sp, #116]	; 0x74
 801f35c:	4639      	mov	r1, r7
 801f35e:	f7ff fc62 	bl	801ec26 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801f362:	e757      	b.n	801f214 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f364:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801f366:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801f368:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801f36c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801f36e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f372:	1427      	asrs	r7, r4, #16
 801f374:	142b      	asrs	r3, r5, #16
 801f376:	fb01 7303 	mla	r3, r1, r3, r7
 801f37a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801f37c:	18e7      	adds	r7, r4, r3
 801f37e:	5ce3      	ldrb	r3, [r4, r3]
 801f380:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801f384:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801f388:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801f38c:	2a00      	cmp	r2, #0
 801f38e:	f000 8137 	beq.w	801f600 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801f392:	f897 e001 	ldrb.w	lr, [r7, #1]
 801f396:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801f39a:	9410      	str	r4, [sp, #64]	; 0x40
 801f39c:	0e24      	lsrs	r4, r4, #24
 801f39e:	9417      	str	r4, [sp, #92]	; 0x5c
 801f3a0:	b170      	cbz	r0, 801f3c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801f3a2:	eb07 0e01 	add.w	lr, r7, r1
 801f3a6:	5c79      	ldrb	r1, [r7, r1]
 801f3a8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801f3ac:	910b      	str	r1, [sp, #44]	; 0x2c
 801f3ae:	0e09      	lsrs	r1, r1, #24
 801f3b0:	9114      	str	r1, [sp, #80]	; 0x50
 801f3b2:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801f3b6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801f3ba:	9111      	str	r1, [sp, #68]	; 0x44
 801f3bc:	0e09      	lsrs	r1, r1, #24
 801f3be:	9118      	str	r1, [sp, #96]	; 0x60
 801f3c0:	b292      	uxth	r2, r2
 801f3c2:	b280      	uxth	r0, r0
 801f3c4:	fb02 f800 	mul.w	r8, r2, r0
 801f3c8:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801f3cc:	0112      	lsls	r2, r2, #4
 801f3ce:	eba2 0e08 	sub.w	lr, r2, r8
 801f3d2:	b280      	uxth	r0, r0
 801f3d4:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801f3d8:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801f3da:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801f3dc:	fa1f fe8e 	uxth.w	lr, lr
 801f3e0:	1a12      	subs	r2, r2, r0
 801f3e2:	b292      	uxth	r2, r2
 801f3e4:	fb0e f101 	mul.w	r1, lr, r1
 801f3e8:	fb02 110c 	mla	r1, r2, ip, r1
 801f3ec:	fb00 1104 	mla	r1, r0, r4, r1
 801f3f0:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801f3f2:	fb08 1104 	mla	r1, r8, r4, r1
 801f3f6:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801f3fa:	2900      	cmp	r1, #0
 801f3fc:	f000 80f5 	beq.w	801f5ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801f400:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801f404:	d019      	beq.n	801f43a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801f406:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801f40a:	fb0c fa0a 	mul.w	sl, ip, sl
 801f40e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f412:	fb0c fc03 	mul.w	ip, ip, r3
 801f416:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801f41a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801f41e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801f422:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801f426:	4453      	add	r3, sl
 801f428:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801f42c:	0a1b      	lsrs	r3, r3, #8
 801f42e:	0a3f      	lsrs	r7, r7, #8
 801f430:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801f434:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801f438:	433b      	orrs	r3, r7
 801f43a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801f43c:	2cff      	cmp	r4, #255	; 0xff
 801f43e:	d020      	beq.n	801f482 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801f440:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801f442:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801f446:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801f448:	4367      	muls	r7, r4
 801f44a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801f44c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801f450:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801f452:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f456:	fb04 fa0a 	mul.w	sl, r4, sl
 801f45a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f45e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f462:	44bc      	add	ip, r7
 801f464:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801f468:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f46c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f470:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f474:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f478:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f47c:	ea4c 040a 	orr.w	r4, ip, sl
 801f480:	9410      	str	r4, [sp, #64]	; 0x40
 801f482:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801f484:	2cff      	cmp	r4, #255	; 0xff
 801f486:	d020      	beq.n	801f4ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801f488:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f48a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801f48e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801f490:	4367      	muls	r7, r4
 801f492:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f494:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801f498:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801f49a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f49e:	fb04 fa0a 	mul.w	sl, r4, sl
 801f4a2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f4a6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f4aa:	44bc      	add	ip, r7
 801f4ac:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801f4b0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f4b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f4b8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f4bc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f4c0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f4c4:	ea4c 040a 	orr.w	r4, ip, sl
 801f4c8:	940b      	str	r4, [sp, #44]	; 0x2c
 801f4ca:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801f4cc:	2cff      	cmp	r4, #255	; 0xff
 801f4ce:	d020      	beq.n	801f512 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801f4d0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801f4d2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801f4d6:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801f4d8:	4367      	muls	r7, r4
 801f4da:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801f4dc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801f4e0:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801f4e2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f4e6:	fb04 fa0a 	mul.w	sl, r4, sl
 801f4ea:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f4ee:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f4f2:	44bc      	add	ip, r7
 801f4f4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801f4f8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f4fc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f500:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f504:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f508:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f50c:	ea4c 040a 	orr.w	r4, ip, sl
 801f510:	9411      	str	r4, [sp, #68]	; 0x44
 801f512:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801f514:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801f518:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f51a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801f51e:	fb0e f707 	mul.w	r7, lr, r7
 801f522:	fb02 770c 	mla	r7, r2, ip, r7
 801f526:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801f52a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801f52c:	fb00 770c 	mla	r7, r0, ip, r7
 801f530:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801f534:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801f536:	fb08 770c 	mla	r7, r8, ip, r7
 801f53a:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801f53e:	fb0e fe0c 	mul.w	lr, lr, ip
 801f542:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f546:	fb02 e303 	mla	r3, r2, r3, lr
 801f54a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801f54c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801f54e:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801f552:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801f554:	fb00 330a 	mla	r3, r0, sl, r3
 801f558:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801f55c:	fb08 3c0c 	mla	ip, r8, ip, r3
 801f560:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f562:	f8b9 0000 	ldrh.w	r0, [r9]
 801f566:	434b      	muls	r3, r1
 801f568:	0a3f      	lsrs	r7, r7, #8
 801f56a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f56e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801f572:	1c59      	adds	r1, r3, #1
 801f574:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801f578:	ea47 070c 	orr.w	r7, r7, ip
 801f57c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801f580:	1202      	asrs	r2, r0, #8
 801f582:	0c3b      	lsrs	r3, r7, #16
 801f584:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801f588:	b2c9      	uxtb	r1, r1
 801f58a:	fb13 f304 	smulbb	r3, r3, r4
 801f58e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801f592:	fb02 3201 	mla	r2, r2, r1, r3
 801f596:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801f59a:	10c3      	asrs	r3, r0, #3
 801f59c:	b2ff      	uxtb	r7, r7
 801f59e:	00c0      	lsls	r0, r0, #3
 801f5a0:	b292      	uxth	r2, r2
 801f5a2:	fb1c fc04 	smulbb	ip, ip, r4
 801f5a6:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801f5aa:	b2c0      	uxtb	r0, r0
 801f5ac:	fb17 f704 	smulbb	r7, r7, r4
 801f5b0:	fb03 c301 	mla	r3, r3, r1, ip
 801f5b4:	fb00 7001 	mla	r0, r0, r1, r7
 801f5b8:	f102 0c01 	add.w	ip, r2, #1
 801f5bc:	b280      	uxth	r0, r0
 801f5be:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801f5c2:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 801f5c6:	1c42      	adds	r2, r0, #1
 801f5c8:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801f5cc:	b29b      	uxth	r3, r3
 801f5ce:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f5d2:	ea42 020c 	orr.w	r2, r2, ip
 801f5d6:	f103 0c01 	add.w	ip, r3, #1
 801f5da:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801f5de:	095b      	lsrs	r3, r3, #5
 801f5e0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f5e4:	431a      	orrs	r2, r3
 801f5e6:	f8a9 2000 	strh.w	r2, [r9]
 801f5ea:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801f5ec:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801f5ee:	441a      	add	r2, r3
 801f5f0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f5f2:	9229      	str	r2, [sp, #164]	; 0xa4
 801f5f4:	f109 0902 	add.w	r9, r9, #2
 801f5f8:	441d      	add	r5, r3
 801f5fa:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f5fe:	e63d      	b.n	801f27c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801f600:	2800      	cmp	r0, #0
 801f602:	f43f aedd 	beq.w	801f3c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801f606:	5c79      	ldrb	r1, [r7, r1]
 801f608:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801f60c:	910b      	str	r1, [sp, #44]	; 0x2c
 801f60e:	0e09      	lsrs	r1, r1, #24
 801f610:	9114      	str	r1, [sp, #80]	; 0x50
 801f612:	e6d5      	b.n	801f3c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801f614:	b01f      	add	sp, #124	; 0x7c
 801f616:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f61a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801f61a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f61e:	b089      	sub	sp, #36	; 0x24
 801f620:	9101      	str	r1, [sp, #4]
 801f622:	9801      	ldr	r0, [sp, #4]
 801f624:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 801f628:	8800      	ldrh	r0, [r0, #0]
 801f62a:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 801f62e:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801f632:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 801f636:	1206      	asrs	r6, r0, #8
 801f638:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 801f63c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801f640:	9602      	str	r6, [sp, #8]
 801f642:	10c6      	asrs	r6, r0, #3
 801f644:	00c0      	lsls	r0, r0, #3
 801f646:	b2c0      	uxtb	r0, r0
 801f648:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801f64c:	9004      	str	r0, [sp, #16]
 801f64e:	2f00      	cmp	r7, #0
 801f650:	fb07 100c 	mla	r0, r7, ip, r1
 801f654:	9603      	str	r6, [sp, #12]
 801f656:	eb02 0e00 	add.w	lr, r2, r0
 801f65a:	f2c0 810a 	blt.w	801f872 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801f65e:	45b8      	cmp	r8, r7
 801f660:	f340 8107 	ble.w	801f872 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801f664:	2900      	cmp	r1, #0
 801f666:	f2c0 8102 	blt.w	801f86e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801f66a:	458c      	cmp	ip, r1
 801f66c:	f340 80ff 	ble.w	801f86e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801f670:	5c12      	ldrb	r2, [r2, r0]
 801f672:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801f676:	1c4a      	adds	r2, r1, #1
 801f678:	f100 80fe 	bmi.w	801f878 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801f67c:	4594      	cmp	ip, r2
 801f67e:	f340 80fb 	ble.w	801f878 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801f682:	2d00      	cmp	r5, #0
 801f684:	f000 80fa 	beq.w	801f87c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801f688:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801f68c:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801f690:	3701      	adds	r7, #1
 801f692:	f100 80f7 	bmi.w	801f884 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801f696:	45b8      	cmp	r8, r7
 801f698:	f340 80f4 	ble.w	801f884 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801f69c:	2c00      	cmp	r4, #0
 801f69e:	f000 80f4 	beq.w	801f88a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801f6a2:	2900      	cmp	r1, #0
 801f6a4:	eb0e 020c 	add.w	r2, lr, ip
 801f6a8:	f2c0 80ea 	blt.w	801f880 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801f6ac:	458c      	cmp	ip, r1
 801f6ae:	f340 80e7 	ble.w	801f880 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801f6b2:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801f6b6:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801f6ba:	3101      	adds	r1, #1
 801f6bc:	f100 80e8 	bmi.w	801f890 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801f6c0:	458c      	cmp	ip, r1
 801f6c2:	f340 80e5 	ble.w	801f890 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801f6c6:	2d00      	cmp	r5, #0
 801f6c8:	f000 80e4 	beq.w	801f894 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801f6cc:	7852      	ldrb	r2, [r2, #1]
 801f6ce:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801f6d2:	0e0b      	lsrs	r3, r1, #24
 801f6d4:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801f6d8:	9300      	str	r3, [sp, #0]
 801f6da:	b2a4      	uxth	r4, r4
 801f6dc:	b2ab      	uxth	r3, r5
 801f6de:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 801f6e2:	fb03 f904 	mul.w	r9, r3, r4
 801f6e6:	fb0a f505 	mul.w	r5, sl, r5
 801f6ea:	011b      	lsls	r3, r3, #4
 801f6ec:	eba3 0e09 	sub.w	lr, r3, r9
 801f6f0:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 801f6f4:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 801f6f8:	0a28      	lsrs	r0, r5, #8
 801f6fa:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801f6fe:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 801f702:	4405      	add	r5, r0
 801f704:	0a2d      	lsrs	r5, r5, #8
 801f706:	fb0a f303 	mul.w	r3, sl, r3
 801f70a:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 801f70e:	9005      	str	r0, [sp, #20]
 801f710:	f503 7080 	add.w	r0, r3, #256	; 0x100
 801f714:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801f718:	0a1b      	lsrs	r3, r3, #8
 801f71a:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801f71e:	9306      	str	r3, [sp, #24]
 801f720:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 801f724:	fb0b f303 	mul.w	r3, fp, r3
 801f728:	0a1d      	lsrs	r5, r3, #8
 801f72a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801f72e:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801f732:	fb0b f606 	mul.w	r6, fp, r6
 801f736:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801f73a:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 801f73e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801f742:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801f746:	fb08 f707 	mul.w	r7, r8, r7
 801f74a:	441d      	add	r5, r3
 801f74c:	f506 7380 	add.w	r3, r6, #256	; 0x100
 801f750:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801f754:	f507 7380 	add.w	r3, r7, #256	; 0x100
 801f758:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801f75c:	fb08 fc0c 	mul.w	ip, r8, ip
 801f760:	0a1b      	lsrs	r3, r3, #8
 801f762:	9307      	str	r3, [sp, #28]
 801f764:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801f768:	0e0b      	lsrs	r3, r1, #24
 801f76a:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 801f76e:	435f      	muls	r7, r3
 801f770:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801f774:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801f778:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801f77c:	4460      	add	r0, ip
 801f77e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f782:	b2a4      	uxth	r4, r4
 801f784:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f788:	0a2d      	lsrs	r5, r5, #8
 801f78a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801f78e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f792:	fa1f fe8e 	uxth.w	lr, lr
 801f796:	4359      	muls	r1, r3
 801f798:	1b12      	subs	r2, r2, r4
 801f79a:	9b05      	ldr	r3, [sp, #20]
 801f79c:	44bc      	add	ip, r7
 801f79e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801f7a2:	b292      	uxth	r2, r2
 801f7a4:	fb05 f50e 	mul.w	r5, r5, lr
 801f7a8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f7ac:	fb03 5502 	mla	r5, r3, r2, r5
 801f7b0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f7b4:	9b06      	ldr	r3, [sp, #24]
 801f7b6:	f501 7780 	add.w	r7, r1, #256	; 0x100
 801f7ba:	0a36      	lsrs	r6, r6, #8
 801f7bc:	0a00      	lsrs	r0, r0, #8
 801f7be:	fb0c 5509 	mla	r5, ip, r9, r5
 801f7c2:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801f7c6:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801f7ca:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801f7ce:	fb00 5504 	mla	r5, r0, r4, r5
 801f7d2:	fb0e f606 	mul.w	r6, lr, r6
 801f7d6:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801f7da:	0a09      	lsrs	r1, r1, #8
 801f7dc:	9b07      	ldr	r3, [sp, #28]
 801f7de:	fb02 6000 	mla	r0, r2, r0, r6
 801f7e2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801f7e6:	fb09 0001 	mla	r0, r9, r1, r0
 801f7ea:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f7ee:	fb0e fe0b 	mul.w	lr, lr, fp
 801f7f2:	fb04 0003 	mla	r0, r4, r3, r0
 801f7f6:	fb02 e20a 	mla	r2, r2, sl, lr
 801f7fa:	9b00      	ldr	r3, [sp, #0]
 801f7fc:	fb04 2408 	mla	r4, r4, r8, r2
 801f800:	fb09 4903 	mla	r9, r9, r3, r4
 801f804:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801f808:	9b02      	ldr	r3, [sp, #8]
 801f80a:	9a04      	ldr	r2, [sp, #16]
 801f80c:	fa5f f989 	uxtb.w	r9, r9
 801f810:	fb03 f109 	mul.w	r1, r3, r9
 801f814:	9b03      	ldr	r3, [sp, #12]
 801f816:	0a2d      	lsrs	r5, r5, #8
 801f818:	0a00      	lsrs	r0, r0, #8
 801f81a:	fb03 f309 	mul.w	r3, r3, r9
 801f81e:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801f822:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801f826:	4305      	orrs	r5, r0
 801f828:	fb02 f909 	mul.w	r9, r2, r9
 801f82c:	1c58      	adds	r0, r3, #1
 801f82e:	1c4a      	adds	r2, r1, #1
 801f830:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801f834:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801f838:	0a2b      	lsrs	r3, r5, #8
 801f83a:	0c2a      	lsrs	r2, r5, #16
 801f83c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801f840:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801f844:	00db      	lsls	r3, r3, #3
 801f846:	0212      	lsls	r2, r2, #8
 801f848:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801f84c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f850:	4313      	orrs	r3, r2
 801f852:	f109 0201 	add.w	r2, r9, #1
 801f856:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801f85a:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801f85e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801f862:	431d      	orrs	r5, r3
 801f864:	9b01      	ldr	r3, [sp, #4]
 801f866:	801d      	strh	r5, [r3, #0]
 801f868:	b009      	add	sp, #36	; 0x24
 801f86a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f86e:	2000      	movs	r0, #0
 801f870:	e701      	b.n	801f676 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801f872:	2600      	movs	r6, #0
 801f874:	4630      	mov	r0, r6
 801f876:	e70b      	b.n	801f690 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801f878:	2600      	movs	r6, #0
 801f87a:	e709      	b.n	801f690 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801f87c:	462e      	mov	r6, r5
 801f87e:	e707      	b.n	801f690 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801f880:	2700      	movs	r7, #0
 801f882:	e71a      	b.n	801f6ba <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801f884:	2100      	movs	r1, #0
 801f886:	460f      	mov	r7, r1
 801f888:	e723      	b.n	801f6d2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801f88a:	4621      	mov	r1, r4
 801f88c:	4627      	mov	r7, r4
 801f88e:	e720      	b.n	801f6d2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801f890:	2100      	movs	r1, #0
 801f892:	e71e      	b.n	801f6d2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801f894:	4629      	mov	r1, r5
 801f896:	e71c      	b.n	801f6d2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801f898 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f898:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f89c:	b09b      	sub	sp, #108	; 0x6c
 801f89e:	9218      	str	r2, [sp, #96]	; 0x60
 801f8a0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801f8a2:	9116      	str	r1, [sp, #88]	; 0x58
 801f8a4:	9307      	str	r3, [sp, #28]
 801f8a6:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801f8aa:	9019      	str	r0, [sp, #100]	; 0x64
 801f8ac:	6850      	ldr	r0, [r2, #4]
 801f8ae:	6812      	ldr	r2, [r2, #0]
 801f8b0:	9d26      	ldr	r5, [sp, #152]	; 0x98
 801f8b2:	fb00 1303 	mla	r3, r0, r3, r1
 801f8b6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f8ba:	930a      	str	r3, [sp, #40]	; 0x28
 801f8bc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f8be:	681b      	ldr	r3, [r3, #0]
 801f8c0:	930f      	str	r3, [sp, #60]	; 0x3c
 801f8c2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f8c4:	685e      	ldr	r6, [r3, #4]
 801f8c6:	3604      	adds	r6, #4
 801f8c8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801f8ca:	2b00      	cmp	r3, #0
 801f8cc:	dc03      	bgt.n	801f8d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801f8ce:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f8d0:	2b00      	cmp	r3, #0
 801f8d2:	f340 8373 	ble.w	801ffbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801f8d6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f8d8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f8dc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f8e0:	1e48      	subs	r0, r1, #1
 801f8e2:	1e57      	subs	r7, r2, #1
 801f8e4:	9b07      	ldr	r3, [sp, #28]
 801f8e6:	2b00      	cmp	r3, #0
 801f8e8:	f340 8190 	ble.w	801fc0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801f8ec:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801f8ee:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801f8f2:	ea4f 4325 	mov.w	r3, r5, asr #16
 801f8f6:	d406      	bmi.n	801f906 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f8f8:	4584      	cmp	ip, r0
 801f8fa:	da04      	bge.n	801f906 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f8fc:	2b00      	cmp	r3, #0
 801f8fe:	db02      	blt.n	801f906 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f900:	42bb      	cmp	r3, r7
 801f902:	f2c0 8184 	blt.w	801fc0e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801f906:	f11c 0c01 	adds.w	ip, ip, #1
 801f90a:	f100 8172 	bmi.w	801fbf2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f90e:	4561      	cmp	r1, ip
 801f910:	f2c0 816f 	blt.w	801fbf2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f914:	3301      	adds	r3, #1
 801f916:	f100 816c 	bmi.w	801fbf2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f91a:	429a      	cmp	r2, r3
 801f91c:	f2c0 8169 	blt.w	801fbf2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f920:	9b07      	ldr	r3, [sp, #28]
 801f922:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801f924:	9317      	str	r3, [sp, #92]	; 0x5c
 801f926:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801f928:	2b00      	cmp	r3, #0
 801f92a:	f340 818e 	ble.w	801fc4a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801f92e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801f930:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801f934:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f936:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801f93a:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801f93c:	141b      	asrs	r3, r3, #16
 801f93e:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801f942:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801f946:	f100 81d1 	bmi.w	801fcec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801f94a:	f101 38ff 	add.w	r8, r1, #4294967295
 801f94e:	4543      	cmp	r3, r8
 801f950:	f280 81cc 	bge.w	801fcec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801f954:	f1bc 0f00 	cmp.w	ip, #0
 801f958:	f2c0 81c8 	blt.w	801fcec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801f95c:	f10e 38ff 	add.w	r8, lr, #4294967295
 801f960:	45c4      	cmp	ip, r8
 801f962:	f280 81c3 	bge.w	801fcec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801f966:	b209      	sxth	r1, r1
 801f968:	fb0c 3301 	mla	r3, ip, r1, r3
 801f96c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801f96e:	eb04 0803 	add.w	r8, r4, r3
 801f972:	5ce3      	ldrb	r3, [r4, r3]
 801f974:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801f978:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801f97c:	2a00      	cmp	r2, #0
 801f97e:	f000 81aa 	beq.w	801fcd6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801f982:	f898 c001 	ldrb.w	ip, [r8, #1]
 801f986:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801f98a:	940b      	str	r4, [sp, #44]	; 0x2c
 801f98c:	0e24      	lsrs	r4, r4, #24
 801f98e:	9412      	str	r4, [sp, #72]	; 0x48
 801f990:	b178      	cbz	r0, 801f9b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801f992:	eb08 0c01 	add.w	ip, r8, r1
 801f996:	f818 1001 	ldrb.w	r1, [r8, r1]
 801f99a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801f99e:	9108      	str	r1, [sp, #32]
 801f9a0:	0e09      	lsrs	r1, r1, #24
 801f9a2:	9110      	str	r1, [sp, #64]	; 0x40
 801f9a4:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801f9a8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801f9ac:	910c      	str	r1, [sp, #48]	; 0x30
 801f9ae:	0e09      	lsrs	r1, r1, #24
 801f9b0:	9113      	str	r1, [sp, #76]	; 0x4c
 801f9b2:	b292      	uxth	r2, r2
 801f9b4:	b280      	uxth	r0, r0
 801f9b6:	fb02 f900 	mul.w	r9, r2, r0
 801f9ba:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801f9be:	0112      	lsls	r2, r2, #4
 801f9c0:	eba2 0809 	sub.w	r8, r2, r9
 801f9c4:	b280      	uxth	r0, r0
 801f9c6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801f9ca:	9912      	ldr	r1, [sp, #72]	; 0x48
 801f9cc:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801f9ce:	fa1f f888 	uxth.w	r8, r8
 801f9d2:	1a12      	subs	r2, r2, r0
 801f9d4:	b292      	uxth	r2, r2
 801f9d6:	fb08 f101 	mul.w	r1, r8, r1
 801f9da:	fb02 110e 	mla	r1, r2, lr, r1
 801f9de:	fb00 1104 	mla	r1, r0, r4, r1
 801f9e2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801f9e4:	fb09 1104 	mla	r1, r9, r4, r1
 801f9e8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801f9ec:	2900      	cmp	r1, #0
 801f9ee:	f000 80f5 	beq.w	801fbdc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801f9f2:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801f9f6:	d01b      	beq.n	801fa30 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f9f8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801f9fc:	fb0e fa0a 	mul.w	sl, lr, sl
 801fa00:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801fa04:	fb0e fe03 	mul.w	lr, lr, r3
 801fa08:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801fa0c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801fa10:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801fa14:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801fa18:	4453      	add	r3, sl
 801fa1a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801fa1e:	0a1b      	lsrs	r3, r3, #8
 801fa20:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fa24:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801fa28:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801fa2c:	ea43 030c 	orr.w	r3, r3, ip
 801fa30:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801fa32:	2cff      	cmp	r4, #255	; 0xff
 801fa34:	d021      	beq.n	801fa7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801fa36:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801fa38:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801fa3c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801fa3e:	fb04 fb0b 	mul.w	fp, r4, fp
 801fa42:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801fa44:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801fa48:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801fa4a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801fa4e:	fb04 fa0a 	mul.w	sl, r4, sl
 801fa52:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801fa56:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801fa5a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801fa5e:	44de      	add	lr, fp
 801fa60:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801fa64:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801fa68:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fa6c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801fa70:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fa74:	ea4e 040a 	orr.w	r4, lr, sl
 801fa78:	940b      	str	r4, [sp, #44]	; 0x2c
 801fa7a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801fa7c:	2cff      	cmp	r4, #255	; 0xff
 801fa7e:	d021      	beq.n	801fac4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801fa80:	9c08      	ldr	r4, [sp, #32]
 801fa82:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801fa86:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801fa88:	fb04 fb0b 	mul.w	fp, r4, fp
 801fa8c:	9c08      	ldr	r4, [sp, #32]
 801fa8e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801fa92:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801fa94:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801fa98:	fb04 fa0a 	mul.w	sl, r4, sl
 801fa9c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801faa0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801faa4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801faa8:	44de      	add	lr, fp
 801faaa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801faae:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801fab2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fab6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801faba:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fabe:	ea4e 040a 	orr.w	r4, lr, sl
 801fac2:	9408      	str	r4, [sp, #32]
 801fac4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801fac6:	2cff      	cmp	r4, #255	; 0xff
 801fac8:	d021      	beq.n	801fb0e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801faca:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801facc:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801fad0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801fad2:	fb04 fb0b 	mul.w	fp, r4, fp
 801fad6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801fad8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801fadc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801fade:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801fae2:	fb04 fa0a 	mul.w	sl, r4, sl
 801fae6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801faea:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801faee:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801faf2:	44de      	add	lr, fp
 801faf4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801faf8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801fafc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fb00:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801fb04:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fb08:	ea4e 040a 	orr.w	r4, lr, sl
 801fb0c:	940c      	str	r4, [sp, #48]	; 0x30
 801fb0e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801fb10:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801fb14:	9c08      	ldr	r4, [sp, #32]
 801fb16:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801fb1a:	fb08 fc0c 	mul.w	ip, r8, ip
 801fb1e:	fb02 cc0e 	mla	ip, r2, lr, ip
 801fb22:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801fb26:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801fb28:	fb00 cc0e 	mla	ip, r0, lr, ip
 801fb2c:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801fb30:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801fb32:	fb09 cc0e 	mla	ip, r9, lr, ip
 801fb36:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801fb3a:	fb08 f80e 	mul.w	r8, r8, lr
 801fb3e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801fb42:	fb02 8303 	mla	r3, r2, r3, r8
 801fb46:	9a08      	ldr	r2, [sp, #32]
 801fb48:	f8b7 8000 	ldrh.w	r8, [r7]
 801fb4c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801fb50:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801fb52:	fb00 330a 	mla	r3, r0, sl, r3
 801fb56:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801fb5a:	fb09 3900 	mla	r9, r9, r0, r3
 801fb5e:	43c9      	mvns	r1, r1
 801fb60:	ea4f 2228 	mov.w	r2, r8, asr #8
 801fb64:	fa5f fe81 	uxtb.w	lr, r1
 801fb68:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fb6c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801fb70:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801fb74:	fb02 f20e 	mul.w	r2, r2, lr
 801fb78:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fb7c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801fb80:	ea4c 0c09 	orr.w	ip, ip, r9
 801fb84:	1c53      	adds	r3, r2, #1
 801fb86:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801fb8a:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801fb8e:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801fb92:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fb96:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801fb9a:	4a63      	ldr	r2, [pc, #396]	; (801fd28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801fb9c:	fb00 f00e 	mul.w	r0, r0, lr
 801fba0:	b2db      	uxtb	r3, r3
 801fba2:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801fba6:	1c43      	adds	r3, r0, #1
 801fba8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801fbac:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801fbb0:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801fbb4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801fbb8:	b2c9      	uxtb	r1, r1
 801fbba:	00db      	lsls	r3, r3, #3
 801fbbc:	fb01 f10e 	mul.w	r1, r1, lr
 801fbc0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fbc4:	4313      	orrs	r3, r2
 801fbc6:	1c4a      	adds	r2, r1, #1
 801fbc8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801fbcc:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801fbd0:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801fbd4:	ea4c 0c03 	orr.w	ip, ip, r3
 801fbd8:	f8a7 c000 	strh.w	ip, [r7]
 801fbdc:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801fbde:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801fbe0:	441a      	add	r2, r3
 801fbe2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801fbe4:	9225      	str	r2, [sp, #148]	; 0x94
 801fbe6:	441d      	add	r5, r3
 801fbe8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801fbea:	3b01      	subs	r3, #1
 801fbec:	3702      	adds	r7, #2
 801fbee:	9317      	str	r3, [sp, #92]	; 0x5c
 801fbf0:	e699      	b.n	801f926 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801fbf2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801fbf4:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801fbf6:	441c      	add	r4, r3
 801fbf8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801fbfa:	9425      	str	r4, [sp, #148]	; 0x94
 801fbfc:	441d      	add	r5, r3
 801fbfe:	9b07      	ldr	r3, [sp, #28]
 801fc00:	3b01      	subs	r3, #1
 801fc02:	9307      	str	r3, [sp, #28]
 801fc04:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fc06:	3302      	adds	r3, #2
 801fc08:	930a      	str	r3, [sp, #40]	; 0x28
 801fc0a:	e66b      	b.n	801f8e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801fc0c:	d024      	beq.n	801fc58 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801fc0e:	9b07      	ldr	r3, [sp, #28]
 801fc10:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801fc12:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801fc14:	3b01      	subs	r3, #1
 801fc16:	fb00 4003 	mla	r0, r0, r3, r4
 801fc1a:	1400      	asrs	r0, r0, #16
 801fc1c:	f53f ae80 	bmi.w	801f920 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801fc20:	3901      	subs	r1, #1
 801fc22:	4288      	cmp	r0, r1
 801fc24:	f6bf ae7c 	bge.w	801f920 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801fc28:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801fc2a:	fb01 5303 	mla	r3, r1, r3, r5
 801fc2e:	141b      	asrs	r3, r3, #16
 801fc30:	f53f ae76 	bmi.w	801f920 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801fc34:	3a01      	subs	r2, #1
 801fc36:	4293      	cmp	r3, r2
 801fc38:	f6bf ae72 	bge.w	801f920 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801fc3c:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801fc40:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801fc44:	f1bb 0f00 	cmp.w	fp, #0
 801fc48:	dc70      	bgt.n	801fd2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801fc4a:	9b07      	ldr	r3, [sp, #28]
 801fc4c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801fc50:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fc52:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801fc56:	930a      	str	r3, [sp, #40]	; 0x28
 801fc58:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801fc5a:	2b00      	cmp	r3, #0
 801fc5c:	f340 81ae 	ble.w	801ffbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801fc60:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fc64:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801fc68:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fc6c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fc6e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fc72:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fc76:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fc7a:	eef0 6a62 	vmov.f32	s13, s5
 801fc7e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fc82:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fc86:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fc8a:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 801fc8e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fc92:	eef0 6a43 	vmov.f32	s13, s6
 801fc96:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fc9a:	ee12 2a90 	vmov	r2, s5
 801fc9e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fca2:	fb92 f3f3 	sdiv	r3, r2, r3
 801fca6:	ee13 2a10 	vmov	r2, s6
 801fcaa:	9327      	str	r3, [sp, #156]	; 0x9c
 801fcac:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fcae:	fb92 f3f3 	sdiv	r3, r2, r3
 801fcb2:	9328      	str	r3, [sp, #160]	; 0xa0
 801fcb4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801fcb6:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801fcb8:	3b01      	subs	r3, #1
 801fcba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fcbe:	9316      	str	r3, [sp, #88]	; 0x58
 801fcc0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fcc2:	bf08      	it	eq
 801fcc4:	4613      	moveq	r3, r2
 801fcc6:	ee16 5a90 	vmov	r5, s13
 801fcca:	9307      	str	r3, [sp, #28]
 801fccc:	eeb0 3a67 	vmov.f32	s6, s15
 801fcd0:	eef0 2a47 	vmov.f32	s5, s14
 801fcd4:	e5f8      	b.n	801f8c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801fcd6:	2800      	cmp	r0, #0
 801fcd8:	f43f ae6b 	beq.w	801f9b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801fcdc:	f818 1001 	ldrb.w	r1, [r8, r1]
 801fce0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801fce4:	9108      	str	r1, [sp, #32]
 801fce6:	0e09      	lsrs	r1, r1, #24
 801fce8:	9110      	str	r1, [sp, #64]	; 0x40
 801fcea:	e662      	b.n	801f9b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801fcec:	f113 0801 	adds.w	r8, r3, #1
 801fcf0:	f53f af74 	bmi.w	801fbdc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801fcf4:	4541      	cmp	r1, r8
 801fcf6:	f6ff af71 	blt.w	801fbdc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801fcfa:	f11c 0801 	adds.w	r8, ip, #1
 801fcfe:	f53f af6d 	bmi.w	801fbdc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801fd02:	45c6      	cmp	lr, r8
 801fd04:	f6ff af6a 	blt.w	801fbdc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801fd08:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801fd0c:	b209      	sxth	r1, r1
 801fd0e:	fa0f f38e 	sxth.w	r3, lr
 801fd12:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801fd16:	9301      	str	r3, [sp, #4]
 801fd18:	9100      	str	r1, [sp, #0]
 801fd1a:	4633      	mov	r3, r6
 801fd1c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801fd1e:	9819      	ldr	r0, [sp, #100]	; 0x64
 801fd20:	4639      	mov	r1, r7
 801fd22:	f7ff fc7a 	bl	801f61a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801fd26:	e759      	b.n	801fbdc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801fd28:	fffff800 	.word	0xfffff800
 801fd2c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801fd2e:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801fd30:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801fd34:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801fd36:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fd3a:	1427      	asrs	r7, r4, #16
 801fd3c:	142b      	asrs	r3, r5, #16
 801fd3e:	fb01 7303 	mla	r3, r1, r3, r7
 801fd42:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801fd44:	18e7      	adds	r7, r4, r3
 801fd46:	5ce3      	ldrb	r3, [r4, r3]
 801fd48:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801fd4c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801fd50:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801fd54:	2a00      	cmp	r2, #0
 801fd56:	f000 8127 	beq.w	801ffa8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801fd5a:	f897 e001 	ldrb.w	lr, [r7, #1]
 801fd5e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801fd62:	940d      	str	r4, [sp, #52]	; 0x34
 801fd64:	0e24      	lsrs	r4, r4, #24
 801fd66:	9414      	str	r4, [sp, #80]	; 0x50
 801fd68:	b170      	cbz	r0, 801fd88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801fd6a:	eb07 0e01 	add.w	lr, r7, r1
 801fd6e:	5c79      	ldrb	r1, [r7, r1]
 801fd70:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801fd74:	9109      	str	r1, [sp, #36]	; 0x24
 801fd76:	0e09      	lsrs	r1, r1, #24
 801fd78:	9111      	str	r1, [sp, #68]	; 0x44
 801fd7a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801fd7e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801fd82:	910e      	str	r1, [sp, #56]	; 0x38
 801fd84:	0e09      	lsrs	r1, r1, #24
 801fd86:	9115      	str	r1, [sp, #84]	; 0x54
 801fd88:	b292      	uxth	r2, r2
 801fd8a:	b280      	uxth	r0, r0
 801fd8c:	fb02 f800 	mul.w	r8, r2, r0
 801fd90:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801fd94:	0112      	lsls	r2, r2, #4
 801fd96:	eba2 0e08 	sub.w	lr, r2, r8
 801fd9a:	b280      	uxth	r0, r0
 801fd9c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801fda0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801fda2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801fda4:	fa1f fe8e 	uxth.w	lr, lr
 801fda8:	1a09      	subs	r1, r1, r0
 801fdaa:	b289      	uxth	r1, r1
 801fdac:	fb0e f202 	mul.w	r2, lr, r2
 801fdb0:	fb01 220c 	mla	r2, r1, ip, r2
 801fdb4:	fb00 2204 	mla	r2, r0, r4, r2
 801fdb8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801fdba:	fb08 2204 	mla	r2, r8, r4, r2
 801fdbe:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801fdc2:	2a00      	cmp	r2, #0
 801fdc4:	f000 80e5 	beq.w	801ff92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801fdc8:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801fdcc:	d019      	beq.n	801fe02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801fdce:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801fdd2:	fb0c fa0a 	mul.w	sl, ip, sl
 801fdd6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801fdda:	fb0c fc03 	mul.w	ip, ip, r3
 801fdde:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801fde2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801fde6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801fdea:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801fdee:	4453      	add	r3, sl
 801fdf0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801fdf4:	0a1b      	lsrs	r3, r3, #8
 801fdf6:	0a3f      	lsrs	r7, r7, #8
 801fdf8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801fdfc:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801fe00:	433b      	orrs	r3, r7
 801fe02:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801fe04:	2cff      	cmp	r4, #255	; 0xff
 801fe06:	d020      	beq.n	801fe4a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801fe08:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801fe0a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801fe0e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801fe10:	4367      	muls	r7, r4
 801fe12:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801fe14:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801fe18:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801fe1a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801fe1e:	fb04 fa0a 	mul.w	sl, r4, sl
 801fe22:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801fe26:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fe2a:	44bc      	add	ip, r7
 801fe2c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801fe30:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801fe34:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fe38:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fe3c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fe40:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fe44:	ea4c 040a 	orr.w	r4, ip, sl
 801fe48:	940d      	str	r4, [sp, #52]	; 0x34
 801fe4a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801fe4c:	2cff      	cmp	r4, #255	; 0xff
 801fe4e:	d020      	beq.n	801fe92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801fe50:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801fe52:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801fe56:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801fe58:	4367      	muls	r7, r4
 801fe5a:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801fe5c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801fe60:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801fe62:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801fe66:	fb04 fa0a 	mul.w	sl, r4, sl
 801fe6a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801fe6e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fe72:	44bc      	add	ip, r7
 801fe74:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801fe78:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801fe7c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fe80:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fe84:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fe88:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fe8c:	ea4c 040a 	orr.w	r4, ip, sl
 801fe90:	9409      	str	r4, [sp, #36]	; 0x24
 801fe92:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801fe94:	2cff      	cmp	r4, #255	; 0xff
 801fe96:	d020      	beq.n	801feda <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801fe98:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801fe9a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801fe9e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801fea0:	4367      	muls	r7, r4
 801fea2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801fea4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801fea8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801feaa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801feae:	fb04 fa0a 	mul.w	sl, r4, sl
 801feb2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801feb6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801feba:	44bc      	add	ip, r7
 801febc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801fec0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801fec4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fec8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fecc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fed0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fed4:	ea4c 040a 	orr.w	r4, ip, sl
 801fed8:	940e      	str	r4, [sp, #56]	; 0x38
 801feda:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801fedc:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801fee0:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801fee2:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801fee6:	fb0e f707 	mul.w	r7, lr, r7
 801feea:	fb01 770c 	mla	r7, r1, ip, r7
 801feee:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801fef2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801fef4:	fb00 770c 	mla	r7, r0, ip, r7
 801fef8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801fefc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801fefe:	fb08 770c 	mla	r7, r8, ip, r7
 801ff02:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801ff06:	fb0e fe0c 	mul.w	lr, lr, ip
 801ff0a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ff0e:	fb01 e303 	mla	r3, r1, r3, lr
 801ff12:	9909      	ldr	r1, [sp, #36]	; 0x24
 801ff14:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801ff18:	990e      	ldr	r1, [sp, #56]	; 0x38
 801ff1a:	fb00 330a 	mla	r3, r0, sl, r3
 801ff1e:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801ff22:	fb08 3c0c 	mla	ip, r8, ip, r3
 801ff26:	f8b9 3000 	ldrh.w	r3, [r9]
 801ff2a:	43d2      	mvns	r2, r2
 801ff2c:	1218      	asrs	r0, r3, #8
 801ff2e:	b2d2      	uxtb	r2, r2
 801ff30:	10d9      	asrs	r1, r3, #3
 801ff32:	0a3f      	lsrs	r7, r7, #8
 801ff34:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ff38:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ff3c:	00db      	lsls	r3, r3, #3
 801ff3e:	4350      	muls	r0, r2
 801ff40:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801ff44:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801ff48:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ff4c:	b2db      	uxtb	r3, r3
 801ff4e:	ea47 070c 	orr.w	r7, r7, ip
 801ff52:	4351      	muls	r1, r2
 801ff54:	4353      	muls	r3, r2
 801ff56:	1c42      	adds	r2, r0, #1
 801ff58:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ff5c:	0c3a      	lsrs	r2, r7, #16
 801ff5e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ff62:	4a18      	ldr	r2, [pc, #96]	; (801ffc4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801ff64:	b2c0      	uxtb	r0, r0
 801ff66:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801ff6a:	1c4a      	adds	r2, r1, #1
 801ff6c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ff70:	0a3a      	lsrs	r2, r7, #8
 801ff72:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ff76:	00c9      	lsls	r1, r1, #3
 801ff78:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ff7c:	4301      	orrs	r1, r0
 801ff7e:	1c58      	adds	r0, r3, #1
 801ff80:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801ff84:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801ff88:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801ff8c:	4308      	orrs	r0, r1
 801ff8e:	f8a9 0000 	strh.w	r0, [r9]
 801ff92:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ff94:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801ff96:	441a      	add	r2, r3
 801ff98:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ff9a:	9225      	str	r2, [sp, #148]	; 0x94
 801ff9c:	f109 0902 	add.w	r9, r9, #2
 801ffa0:	441d      	add	r5, r3
 801ffa2:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ffa6:	e64d      	b.n	801fc44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801ffa8:	2800      	cmp	r0, #0
 801ffaa:	f43f aeed 	beq.w	801fd88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801ffae:	5c79      	ldrb	r1, [r7, r1]
 801ffb0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ffb4:	9109      	str	r1, [sp, #36]	; 0x24
 801ffb6:	0e09      	lsrs	r1, r1, #24
 801ffb8:	9111      	str	r1, [sp, #68]	; 0x44
 801ffba:	e6e5      	b.n	801fd88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801ffbc:	b01b      	add	sp, #108	; 0x6c
 801ffbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ffc2:	bf00      	nop
 801ffc4:	fffff800 	.word	0xfffff800

0801ffc8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801ffc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ffcc:	b085      	sub	sp, #20
 801ffce:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801ffd2:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801ffd6:	9103      	str	r1, [sp, #12]
 801ffd8:	fb00 7406 	mla	r4, r0, r6, r7
 801ffdc:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801ffe0:	2800      	cmp	r0, #0
 801ffe2:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801ffe6:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801ffea:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801ffee:	9501      	str	r5, [sp, #4]
 801fff0:	eb03 0904 	add.w	r9, r3, r4
 801fff4:	f2c0 8150 	blt.w	8020298 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801fff8:	4583      	cmp	fp, r0
 801fffa:	f340 814d 	ble.w	8020298 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801fffe:	2f00      	cmp	r7, #0
 8020000:	f2c0 8146 	blt.w	8020290 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8020004:	42be      	cmp	r6, r7
 8020006:	f340 8143 	ble.w	8020290 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 802000a:	f813 c004 	ldrb.w	ip, [r3, r4]
 802000e:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8020012:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8020016:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 802001a:	4355      	muls	r5, r2
 802001c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020020:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8020024:	fb0c f203 	mul.w	r2, ip, r3
 8020028:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 802002c:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8020030:	441d      	add	r5, r3
 8020032:	f102 0320 	add.w	r3, r2, #32
 8020036:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802003a:	0a1b      	lsrs	r3, r3, #8
 802003c:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8020040:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020044:	431c      	orrs	r4, r3
 8020046:	1c7b      	adds	r3, r7, #1
 8020048:	f100 812b 	bmi.w	80202a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 802004c:	429e      	cmp	r6, r3
 802004e:	f340 8128 	ble.w	80202a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8020052:	2900      	cmp	r1, #0
 8020054:	f000 8128 	beq.w	80202a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 8020058:	9a01      	ldr	r2, [sp, #4]
 802005a:	f899 3001 	ldrb.w	r3, [r9, #1]
 802005e:	8855      	ldrh	r5, [r2, #2]
 8020060:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8020064:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8020068:	fb08 f802 	mul.w	r8, r8, r2
 802006c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020070:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8020074:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8020078:	435d      	muls	r5, r3
 802007a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802007e:	44d0      	add	r8, sl
 8020080:	f105 0a20 	add.w	sl, r5, #32
 8020084:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8020088:	0a2d      	lsrs	r5, r5, #8
 802008a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 802008e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020092:	432a      	orrs	r2, r5
 8020094:	3001      	adds	r0, #1
 8020096:	f100 810d 	bmi.w	80202b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 802009a:	4583      	cmp	fp, r0
 802009c:	f340 810a 	ble.w	80202b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80200a0:	f1be 0f00 	cmp.w	lr, #0
 80200a4:	f000 810b 	beq.w	80202be <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 80200a8:	2f00      	cmp	r7, #0
 80200aa:	f2c0 8100 	blt.w	80202ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80200ae:	42be      	cmp	r6, r7
 80200b0:	f340 80fd 	ble.w	80202ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80200b4:	9801      	ldr	r0, [sp, #4]
 80200b6:	f819 5006 	ldrb.w	r5, [r9, r6]
 80200ba:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 80200be:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80200c2:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 80200c6:	fb0a fa00 	mul.w	sl, sl, r0
 80200ca:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80200ce:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80200d2:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 80200d6:	fb05 f808 	mul.w	r8, r5, r8
 80200da:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80200de:	4482      	add	sl, r0
 80200e0:	f108 0020 	add.w	r0, r8, #32
 80200e4:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80200e8:	0a00      	lsrs	r0, r0, #8
 80200ea:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 80200ee:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80200f2:	ea4b 0b00 	orr.w	fp, fp, r0
 80200f6:	3701      	adds	r7, #1
 80200f8:	f100 80e6 	bmi.w	80202c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 80200fc:	42be      	cmp	r6, r7
 80200fe:	f340 80e3 	ble.w	80202c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8020102:	2900      	cmp	r1, #0
 8020104:	f000 80e3 	beq.w	80202ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8020108:	3601      	adds	r6, #1
 802010a:	9801      	ldr	r0, [sp, #4]
 802010c:	f819 7006 	ldrb.w	r7, [r9, r6]
 8020110:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8020114:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8020118:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 802011c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020120:	fb09 f906 	mul.w	r9, r9, r6
 8020124:	fb07 f800 	mul.w	r8, r7, r0
 8020128:	f64f 001f 	movw	r0, #63519	; 0xf81f
 802012c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8020130:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8020134:	44d1      	add	r9, sl
 8020136:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 802013a:	f108 0020 	add.w	r0, r8, #32
 802013e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8020142:	0a00      	lsrs	r0, r0, #8
 8020144:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020148:	4330      	orrs	r0, r6
 802014a:	b28e      	uxth	r6, r1
 802014c:	fa1f f98e 	uxth.w	r9, lr
 8020150:	fb06 f809 	mul.w	r8, r6, r9
 8020154:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8020158:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 802015c:	0136      	lsls	r6, r6, #4
 802015e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020162:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8020166:	9601      	str	r6, [sp, #4]
 8020168:	ea4a 0404 	orr.w	r4, sl, r4
 802016c:	fa1f f689 	uxth.w	r6, r9
 8020170:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8020174:	fb11 f90e 	smulbb	r9, r1, lr
 8020178:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 802017c:	9602      	str	r6, [sp, #8]
 802017e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020182:	4626      	mov	r6, r4
 8020184:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020188:	f1ce 0410 	rsb	r4, lr, #16
 802018c:	1a64      	subs	r4, r4, r1
 802018e:	ea4a 0202 	orr.w	r2, sl, r2
 8020192:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8020196:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802019a:	434a      	muls	r2, r1
 802019c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80201a0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80201a4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80201a8:	fb04 2406 	mla	r4, r4, r6, r2
 80201ac:	ea4a 0000 	orr.w	r0, sl, r0
 80201b0:	fb09 4200 	mla	r2, r9, r0, r4
 80201b4:	ea4f 440b 	mov.w	r4, fp, lsl #16
 80201b8:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80201bc:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80201c0:	ea44 0b0b 	orr.w	fp, r4, fp
 80201c4:	9c01      	ldr	r4, [sp, #4]
 80201c6:	9e02      	ldr	r6, [sp, #8]
 80201c8:	9903      	ldr	r1, [sp, #12]
 80201ca:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 80201ce:	1ba4      	subs	r4, r4, r6
 80201d0:	9e01      	ldr	r6, [sp, #4]
 80201d2:	8808      	ldrh	r0, [r1, #0]
 80201d4:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 80201d8:	eba6 0608 	sub.w	r6, r6, r8
 80201dc:	b2b6      	uxth	r6, r6
 80201de:	b2a4      	uxth	r4, r4
 80201e0:	4373      	muls	r3, r6
 80201e2:	fb0c 3304 	mla	r3, ip, r4, r3
 80201e6:	9c02      	ldr	r4, [sp, #8]
 80201e8:	fb04 3505 	mla	r5, r4, r5, r3
 80201ec:	fb08 5707 	mla	r7, r8, r7, r5
 80201f0:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 80201f4:	b289      	uxth	r1, r1
 80201f6:	fb0e 2e0b 	mla	lr, lr, fp, r2
 80201fa:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80201fe:	434f      	muls	r7, r1
 8020200:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8020204:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8020208:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802020c:	1c7b      	adds	r3, r7, #1
 802020e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8020212:	ea42 0e0e 	orr.w	lr, r2, lr
 8020216:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 802021a:	fa1f f28e 	uxth.w	r2, lr
 802021e:	1203      	asrs	r3, r0, #8
 8020220:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8020224:	b2ff      	uxtb	r7, r7
 8020226:	1215      	asrs	r5, r2, #8
 8020228:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 802022c:	fb13 f307 	smulbb	r3, r3, r7
 8020230:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8020234:	fb05 3501 	mla	r5, r5, r1, r3
 8020238:	10c3      	asrs	r3, r0, #3
 802023a:	10d4      	asrs	r4, r2, #3
 802023c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8020240:	fb13 f307 	smulbb	r3, r3, r7
 8020244:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8020248:	fb04 3401 	mla	r4, r4, r1, r3
 802024c:	00c3      	lsls	r3, r0, #3
 802024e:	00d2      	lsls	r2, r2, #3
 8020250:	b2db      	uxtb	r3, r3
 8020252:	fb13 f307 	smulbb	r3, r3, r7
 8020256:	b2d2      	uxtb	r2, r2
 8020258:	fb02 3101 	mla	r1, r2, r1, r3
 802025c:	b2ad      	uxth	r5, r5
 802025e:	b289      	uxth	r1, r1
 8020260:	b2a4      	uxth	r4, r4
 8020262:	1c6b      	adds	r3, r5, #1
 8020264:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8020268:	1c62      	adds	r2, r4, #1
 802026a:	1c4b      	adds	r3, r1, #1
 802026c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8020270:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8020274:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8020278:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802027c:	0964      	lsrs	r4, r4, #5
 802027e:	432b      	orrs	r3, r5
 8020280:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8020284:	9a03      	ldr	r2, [sp, #12]
 8020286:	4323      	orrs	r3, r4
 8020288:	8013      	strh	r3, [r2, #0]
 802028a:	b005      	add	sp, #20
 802028c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020290:	f04f 0c00 	mov.w	ip, #0
 8020294:	4664      	mov	r4, ip
 8020296:	e6d6      	b.n	8020046 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 8020298:	2300      	movs	r3, #0
 802029a:	469c      	mov	ip, r3
 802029c:	461a      	mov	r2, r3
 802029e:	461c      	mov	r4, r3
 80202a0:	e6f8      	b.n	8020094 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80202a2:	2300      	movs	r3, #0
 80202a4:	461a      	mov	r2, r3
 80202a6:	e6f5      	b.n	8020094 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80202a8:	460b      	mov	r3, r1
 80202aa:	460a      	mov	r2, r1
 80202ac:	e6f2      	b.n	8020094 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80202ae:	2500      	movs	r5, #0
 80202b0:	46ab      	mov	fp, r5
 80202b2:	e720      	b.n	80200f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 80202b4:	2700      	movs	r7, #0
 80202b6:	463d      	mov	r5, r7
 80202b8:	4638      	mov	r0, r7
 80202ba:	46bb      	mov	fp, r7
 80202bc:	e745      	b.n	802014a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80202be:	4677      	mov	r7, lr
 80202c0:	4675      	mov	r5, lr
 80202c2:	4670      	mov	r0, lr
 80202c4:	46f3      	mov	fp, lr
 80202c6:	e740      	b.n	802014a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80202c8:	2700      	movs	r7, #0
 80202ca:	4638      	mov	r0, r7
 80202cc:	e73d      	b.n	802014a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80202ce:	460f      	mov	r7, r1
 80202d0:	4608      	mov	r0, r1
 80202d2:	e73a      	b.n	802014a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

080202d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80202d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80202d8:	b097      	sub	sp, #92	; 0x5c
 80202da:	9214      	str	r2, [sp, #80]	; 0x50
 80202dc:	9308      	str	r3, [sp, #32]
 80202de:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80202e0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80202e4:	9312      	str	r3, [sp, #72]	; 0x48
 80202e6:	9111      	str	r1, [sp, #68]	; 0x44
 80202e8:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 80202ec:	9015      	str	r0, [sp, #84]	; 0x54
 80202ee:	6850      	ldr	r0, [r2, #4]
 80202f0:	6812      	ldr	r2, [r2, #0]
 80202f2:	fb00 1303 	mla	r3, r0, r3, r1
 80202f6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80202fa:	9309      	str	r3, [sp, #36]	; 0x24
 80202fc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80202fe:	681b      	ldr	r3, [r3, #0]
 8020300:	930b      	str	r3, [sp, #44]	; 0x2c
 8020302:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020304:	685b      	ldr	r3, [r3, #4]
 8020306:	930c      	str	r3, [sp, #48]	; 0x30
 8020308:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 802030c:	930a      	str	r3, [sp, #40]	; 0x28
 802030e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020310:	2b00      	cmp	r3, #0
 8020312:	dc03      	bgt.n	802031c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8020314:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8020316:	2b00      	cmp	r3, #0
 8020318:	f340 83cb 	ble.w	8020ab2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 802031c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802031e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020322:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020326:	1e48      	subs	r0, r1, #1
 8020328:	1e55      	subs	r5, r2, #1
 802032a:	9b08      	ldr	r3, [sp, #32]
 802032c:	2b00      	cmp	r3, #0
 802032e:	f340 81a3 	ble.w	8020678 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8020332:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8020334:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8020336:	1436      	asrs	r6, r6, #16
 8020338:	ea4f 4323 	mov.w	r3, r3, asr #16
 802033c:	d406      	bmi.n	802034c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802033e:	4286      	cmp	r6, r0
 8020340:	da04      	bge.n	802034c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8020342:	2b00      	cmp	r3, #0
 8020344:	db02      	blt.n	802034c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8020346:	42ab      	cmp	r3, r5
 8020348:	f2c0 8197 	blt.w	802067a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 802034c:	3601      	adds	r6, #1
 802034e:	f100 8184 	bmi.w	802065a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8020352:	42b1      	cmp	r1, r6
 8020354:	f2c0 8181 	blt.w	802065a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8020358:	3301      	adds	r3, #1
 802035a:	f100 817e 	bmi.w	802065a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802035e:	429a      	cmp	r2, r3
 8020360:	f2c0 817b 	blt.w	802065a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8020364:	9b08      	ldr	r3, [sp, #32]
 8020366:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8020368:	9313      	str	r3, [sp, #76]	; 0x4c
 802036a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802036e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8020370:	2b00      	cmp	r3, #0
 8020372:	f340 81a4 	ble.w	80206be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8020376:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8020378:	9d21      	ldr	r5, [sp, #132]	; 0x84
 802037a:	1418      	asrs	r0, r3, #16
 802037c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802037e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8020382:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8020384:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8020388:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802038a:	142d      	asrs	r5, r5, #16
 802038c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8020390:	f100 81f8 	bmi.w	8020784 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8020394:	f102 3eff 	add.w	lr, r2, #4294967295
 8020398:	4575      	cmp	r5, lr
 802039a:	f280 81f3 	bge.w	8020784 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802039e:	2800      	cmp	r0, #0
 80203a0:	f2c0 81f0 	blt.w	8020784 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80203a4:	f103 3eff 	add.w	lr, r3, #4294967295
 80203a8:	4570      	cmp	r0, lr
 80203aa:	f280 81eb 	bge.w	8020784 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80203ae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80203b0:	b212      	sxth	r2, r2
 80203b2:	fb00 5002 	mla	r0, r0, r2, r5
 80203b6:	fa1f fe81 	uxth.w	lr, r1
 80203ba:	eb03 0a00 	add.w	sl, r3, r0
 80203be:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80203c2:	f813 9000 	ldrb.w	r9, [r3, r0]
 80203c6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80203ca:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80203ce:	b29b      	uxth	r3, r3
 80203d0:	f1bc 0f00 	cmp.w	ip, #0
 80203d4:	f000 81b9 	beq.w	802074a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80203d8:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80203dc:	940d      	str	r4, [sp, #52]	; 0x34
 80203de:	eb0a 0b02 	add.w	fp, sl, r2
 80203e2:	fa1f fa8c 	uxth.w	sl, ip
 80203e6:	fb0a fe0e 	mul.w	lr, sl, lr
 80203ea:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80203ee:	fa1f fa8a 	uxth.w	sl, sl
 80203f2:	eba5 050e 	sub.w	r5, r5, lr
 80203f6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80203fa:	940e      	str	r4, [sp, #56]	; 0x38
 80203fc:	eba3 030a 	sub.w	r3, r3, sl
 8020400:	b2ad      	uxth	r5, r5
 8020402:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020404:	b29b      	uxth	r3, r3
 8020406:	fb08 f505 	mul.w	r5, r8, r5
 802040a:	fb09 5303 	mla	r3, r9, r3, r5
 802040e:	fb0a 3304 	mla	r3, sl, r4, r3
 8020412:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020414:	fb0e 3304 	mla	r3, lr, r4, r3
 8020418:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802041c:	2b00      	cmp	r3, #0
 802041e:	f000 810f 	beq.w	8020640 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8020422:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020424:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8020428:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 802042c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8020430:	f000 8190 	beq.w	8020754 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8020434:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8020438:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802043c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020440:	fb09 f000 	mul.w	r0, r9, r0
 8020444:	fb0a fe0e 	mul.w	lr, sl, lr
 8020448:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 802044c:	f100 0b20 	add.w	fp, r0, #32
 8020450:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8020454:	44ce      	add	lr, r9
 8020456:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802045a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802045e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8020462:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8020466:	ea4e 0909 	orr.w	r9, lr, r9
 802046a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802046e:	8868      	ldrh	r0, [r5, #2]
 8020470:	d019      	beq.n	80204a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8020472:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8020476:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802047a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802047e:	fb08 f800 	mul.w	r8, r8, r0
 8020482:	fb0a fe0e 	mul.w	lr, sl, lr
 8020486:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802048a:	f108 0b20 	add.w	fp, r8, #32
 802048e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8020492:	4486      	add	lr, r0
 8020494:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8020498:	0a00      	lsrs	r0, r0, #8
 802049a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802049e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80204a2:	ea4e 0000 	orr.w	r0, lr, r0
 80204a6:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80204aa:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80204ae:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80204b2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80204b6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80204ba:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80204be:	ea4e 0909 	orr.w	r9, lr, r9
 80204c2:	ea4a 0000 	orr.w	r0, sl, r0
 80204c6:	f1bc 0f00 	cmp.w	ip, #0
 80204ca:	f000 8145 	beq.w	8020758 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 80204ce:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80204d2:	3a01      	subs	r2, #1
 80204d4:	0052      	lsls	r2, r2, #1
 80204d6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80204d8:	3202      	adds	r2, #2
 80204da:	2cff      	cmp	r4, #255	; 0xff
 80204dc:	eb05 0e02 	add.w	lr, r5, r2
 80204e0:	5aaa      	ldrh	r2, [r5, r2]
 80204e2:	d018      	beq.n	8020516 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80204e4:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 80204e8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80204ec:	fb04 fa02 	mul.w	sl, r4, r2
 80204f0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80204f4:	fb08 f805 	mul.w	r8, r8, r5
 80204f8:	f10a 0520 	add.w	r5, sl, #32
 80204fc:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8020500:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8020504:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8020508:	4442      	add	r2, r8
 802050a:	0a2d      	lsrs	r5, r5, #8
 802050c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8020510:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020514:	432a      	orrs	r2, r5
 8020516:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020518:	f8be 5002 	ldrh.w	r5, [lr, #2]
 802051c:	2cff      	cmp	r4, #255	; 0xff
 802051e:	d01a      	beq.n	8020556 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8020520:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8020524:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020528:	fb04 fa05 	mul.w	sl, r4, r5
 802052c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8020530:	fb08 f80e 	mul.w	r8, r8, lr
 8020534:	f10a 0e20 	add.w	lr, sl, #32
 8020538:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 802053c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8020540:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8020544:	4445      	add	r5, r8
 8020546:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802054a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 802054e:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8020552:	ea45 050e 	orr.w	r5, r5, lr
 8020556:	fb1c fe01 	smulbb	lr, ip, r1
 802055a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 802055e:	f1cc 0810 	rsb	r8, ip, #16
 8020562:	eba8 0801 	sub.w	r8, r8, r1
 8020566:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802056a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802056e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8020572:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8020576:	4341      	muls	r1, r0
 8020578:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802057c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020580:	ea4a 0202 	orr.w	r2, sl, r2
 8020584:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8020588:	fb09 1108 	mla	r1, r9, r8, r1
 802058c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8020590:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8020594:	fb0c 1102 	mla	r1, ip, r2, r1
 8020598:	ea4b 0505 	orr.w	r5, fp, r5
 802059c:	fb0e 1e05 	mla	lr, lr, r5, r1
 80205a0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80205a4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80205a8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80205ac:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80205b0:	ea42 0e0e 	orr.w	lr, r2, lr
 80205b4:	fa1f f28e 	uxth.w	r2, lr
 80205b8:	2bff      	cmp	r3, #255	; 0xff
 80205ba:	d103      	bne.n	80205c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80205bc:	9912      	ldr	r1, [sp, #72]	; 0x48
 80205be:	29ff      	cmp	r1, #255	; 0xff
 80205c0:	f000 80de 	beq.w	8020780 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 80205c4:	990a      	ldr	r1, [sp, #40]	; 0x28
 80205c6:	8838      	ldrh	r0, [r7, #0]
 80205c8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80205ca:	434b      	muls	r3, r1
 80205cc:	f103 0c01 	add.w	ip, r3, #1
 80205d0:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 80205d4:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80205d8:	fa5f fc83 	uxtb.w	ip, r3
 80205dc:	1203      	asrs	r3, r0, #8
 80205de:	1215      	asrs	r5, r2, #8
 80205e0:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80205e4:	fb13 f30c 	smulbb	r3, r3, ip
 80205e8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80205ec:	fb05 3501 	mla	r5, r5, r1, r3
 80205f0:	10c3      	asrs	r3, r0, #3
 80205f2:	10d1      	asrs	r1, r2, #3
 80205f4:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80205f8:	fb13 f30c 	smulbb	r3, r3, ip
 80205fc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8020600:	fb01 3104 	mla	r1, r1, r4, r3
 8020604:	00c3      	lsls	r3, r0, #3
 8020606:	00d2      	lsls	r2, r2, #3
 8020608:	b2db      	uxtb	r3, r3
 802060a:	b2d2      	uxtb	r2, r2
 802060c:	fb13 f30c 	smulbb	r3, r3, ip
 8020610:	b2ad      	uxth	r5, r5
 8020612:	fb02 3304 	mla	r3, r2, r4, r3
 8020616:	b29a      	uxth	r2, r3
 8020618:	1c6b      	adds	r3, r5, #1
 802061a:	b289      	uxth	r1, r1
 802061c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8020620:	1c53      	adds	r3, r2, #1
 8020622:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020626:	1c4a      	adds	r2, r1, #1
 8020628:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802062c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8020630:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020634:	0949      	lsrs	r1, r1, #5
 8020636:	432b      	orrs	r3, r5
 8020638:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802063c:	430b      	orrs	r3, r1
 802063e:	803b      	strh	r3, [r7, #0]
 8020640:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8020642:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8020644:	4413      	add	r3, r2
 8020646:	9321      	str	r3, [sp, #132]	; 0x84
 8020648:	9a22      	ldr	r2, [sp, #136]	; 0x88
 802064a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802064c:	441a      	add	r2, r3
 802064e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8020650:	9222      	str	r2, [sp, #136]	; 0x88
 8020652:	3b01      	subs	r3, #1
 8020654:	3702      	adds	r7, #2
 8020656:	9313      	str	r3, [sp, #76]	; 0x4c
 8020658:	e689      	b.n	802036e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802065a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802065c:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 802065e:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8020660:	4433      	add	r3, r6
 8020662:	9321      	str	r3, [sp, #132]	; 0x84
 8020664:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020666:	441c      	add	r4, r3
 8020668:	9b08      	ldr	r3, [sp, #32]
 802066a:	9422      	str	r4, [sp, #136]	; 0x88
 802066c:	3b01      	subs	r3, #1
 802066e:	9308      	str	r3, [sp, #32]
 8020670:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020672:	3302      	adds	r3, #2
 8020674:	9309      	str	r3, [sp, #36]	; 0x24
 8020676:	e658      	b.n	802032a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8020678:	d028      	beq.n	80206cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802067a:	9b08      	ldr	r3, [sp, #32]
 802067c:	9823      	ldr	r0, [sp, #140]	; 0x8c
 802067e:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8020680:	3b01      	subs	r3, #1
 8020682:	fb00 5003 	mla	r0, r0, r3, r5
 8020686:	1400      	asrs	r0, r0, #16
 8020688:	f53f ae6c 	bmi.w	8020364 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802068c:	3901      	subs	r1, #1
 802068e:	4288      	cmp	r0, r1
 8020690:	f6bf ae68 	bge.w	8020364 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8020694:	9924      	ldr	r1, [sp, #144]	; 0x90
 8020696:	9822      	ldr	r0, [sp, #136]	; 0x88
 8020698:	fb01 0303 	mla	r3, r1, r3, r0
 802069c:	141b      	asrs	r3, r3, #16
 802069e:	f53f ae61 	bmi.w	8020364 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80206a2:	3a01      	subs	r2, #1
 80206a4:	4293      	cmp	r3, r2
 80206a6:	f6bf ae5d 	bge.w	8020364 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80206aa:	9b08      	ldr	r3, [sp, #32]
 80206ac:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80206b0:	9313      	str	r3, [sp, #76]	; 0x4c
 80206b2:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80206b6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80206b8:	2b00      	cmp	r3, #0
 80206ba:	f300 8082 	bgt.w	80207c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80206be:	9b08      	ldr	r3, [sp, #32]
 80206c0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80206c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80206c6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80206ca:	9309      	str	r3, [sp, #36]	; 0x24
 80206cc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80206ce:	2b00      	cmp	r3, #0
 80206d0:	f340 81ef 	ble.w	8020ab2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80206d4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80206d8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80206dc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80206e0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80206e2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80206e6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80206ea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80206ee:	eef0 6a62 	vmov.f32	s13, s5
 80206f2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80206f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80206fa:	ee77 2a62 	vsub.f32	s5, s14, s5
 80206fe:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 8020702:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020706:	eef0 6a43 	vmov.f32	s13, s6
 802070a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802070e:	ee12 2a90 	vmov	r2, s5
 8020712:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020716:	fb92 f3f3 	sdiv	r3, r2, r3
 802071a:	ee13 2a10 	vmov	r2, s6
 802071e:	9323      	str	r3, [sp, #140]	; 0x8c
 8020720:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020722:	fb92 f3f3 	sdiv	r3, r2, r3
 8020726:	9324      	str	r3, [sp, #144]	; 0x90
 8020728:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802072a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802072c:	3b01      	subs	r3, #1
 802072e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020732:	9311      	str	r3, [sp, #68]	; 0x44
 8020734:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020736:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 802073a:	bf08      	it	eq
 802073c:	4613      	moveq	r3, r2
 802073e:	9308      	str	r3, [sp, #32]
 8020740:	eeb0 3a67 	vmov.f32	s6, s15
 8020744:	eef0 2a47 	vmov.f32	s5, s14
 8020748:	e5e1      	b.n	802030e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802074a:	fb08 f505 	mul.w	r5, r8, r5
 802074e:	fb09 5303 	mla	r3, r9, r3, r5
 8020752:	e661      	b.n	8020418 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8020754:	4681      	mov	r9, r0
 8020756:	e688      	b.n	802046a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8020758:	f1c1 0210 	rsb	r2, r1, #16
 802075c:	4341      	muls	r1, r0
 802075e:	fb09 1902 	mla	r9, r9, r2, r1
 8020762:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8020766:	ea4f 5259 	mov.w	r2, r9, lsr #21
 802076a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 802076e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020772:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8020776:	ea42 0909 	orr.w	r9, r2, r9
 802077a:	fa1f f289 	uxth.w	r2, r9
 802077e:	e71b      	b.n	80205b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8020780:	803a      	strh	r2, [r7, #0]
 8020782:	e75d      	b.n	8020640 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8020784:	f115 0e01 	adds.w	lr, r5, #1
 8020788:	f53f af5a 	bmi.w	8020640 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802078c:	4572      	cmp	r2, lr
 802078e:	f6ff af57 	blt.w	8020640 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8020792:	f110 0e01 	adds.w	lr, r0, #1
 8020796:	f53f af53 	bmi.w	8020640 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802079a:	4573      	cmp	r3, lr
 802079c:	f6ff af50 	blt.w	8020640 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80207a0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80207a2:	9502      	str	r5, [sp, #8]
 80207a4:	b21b      	sxth	r3, r3
 80207a6:	b212      	sxth	r2, r2
 80207a8:	e9cd 0103 	strd	r0, r1, [sp, #12]
 80207ac:	9301      	str	r3, [sp, #4]
 80207ae:	9200      	str	r2, [sp, #0]
 80207b0:	e9cd c405 	strd	ip, r4, [sp, #20]
 80207b4:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 80207b8:	4639      	mov	r1, r7
 80207ba:	9815      	ldr	r0, [sp, #84]	; 0x54
 80207bc:	f7ff fc04 	bl	801ffc8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 80207c0:	e73e      	b.n	8020640 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80207c2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80207c4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80207c8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80207ca:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80207ce:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80207d0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80207d4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80207d6:	141f      	asrs	r7, r3, #16
 80207d8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80207da:	141b      	asrs	r3, r3, #16
 80207dc:	fb01 3707 	mla	r7, r1, r7, r3
 80207e0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80207e2:	fa1f fc82 	uxth.w	ip, r2
 80207e6:	eb03 0a07 	add.w	sl, r3, r7
 80207ea:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80207ee:	f813 9007 	ldrb.w	r9, [r3, r7]
 80207f2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80207f6:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80207fa:	b29b      	uxth	r3, r3
 80207fc:	2d00      	cmp	r5, #0
 80207fe:	f000 813d 	beq.w	8020a7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8020802:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8020806:	940f      	str	r4, [sp, #60]	; 0x3c
 8020808:	eb0a 0b01 	add.w	fp, sl, r1
 802080c:	fa1f fa85 	uxth.w	sl, r5
 8020810:	fb0a fc0c 	mul.w	ip, sl, ip
 8020814:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8020818:	fa1f fa8a 	uxth.w	sl, sl
 802081c:	eba0 000c 	sub.w	r0, r0, ip
 8020820:	eba3 030a 	sub.w	r3, r3, sl
 8020824:	b280      	uxth	r0, r0
 8020826:	fb08 f000 	mul.w	r0, r8, r0
 802082a:	b29b      	uxth	r3, r3
 802082c:	fb09 0303 	mla	r3, r9, r3, r0
 8020830:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8020832:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8020836:	9410      	str	r4, [sp, #64]	; 0x40
 8020838:	fb0a 3300 	mla	r3, sl, r0, r3
 802083c:	fb0c 3304 	mla	r3, ip, r4, r3
 8020840:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020844:	2b00      	cmp	r3, #0
 8020846:	f000 810b 	beq.w	8020a60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 802084a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 802084c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802084e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8020852:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8020856:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802085a:	f000 8114 	beq.w	8020a86 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 802085e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8020862:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8020866:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802086a:	fb09 f707 	mul.w	r7, r9, r7
 802086e:	fb0a fc0c 	mul.w	ip, sl, ip
 8020872:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8020876:	f107 0b20 	add.w	fp, r7, #32
 802087a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 802087e:	44cc      	add	ip, r9
 8020880:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8020884:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020888:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802088c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8020890:	ea4c 0909 	orr.w	r9, ip, r9
 8020894:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8020898:	8847      	ldrh	r7, [r0, #2]
 802089a:	d019      	beq.n	80208d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 802089c:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80208a0:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80208a4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80208a8:	fb08 f807 	mul.w	r8, r8, r7
 80208ac:	fb0a fc0c 	mul.w	ip, sl, ip
 80208b0:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80208b4:	f108 0b20 	add.w	fp, r8, #32
 80208b8:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80208bc:	44bc      	add	ip, r7
 80208be:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80208c2:	0a3f      	lsrs	r7, r7, #8
 80208c4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80208c8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80208cc:	ea4c 0707 	orr.w	r7, ip, r7
 80208d0:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80208d4:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80208d8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80208dc:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80208e0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80208e4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80208e8:	ea4c 0909 	orr.w	r9, ip, r9
 80208ec:	ea4a 0707 	orr.w	r7, sl, r7
 80208f0:	2d00      	cmp	r5, #0
 80208f2:	f000 80ca 	beq.w	8020a8a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 80208f6:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80208fa:	3901      	subs	r1, #1
 80208fc:	0049      	lsls	r1, r1, #1
 80208fe:	3102      	adds	r1, #2
 8020900:	eb00 0c01 	add.w	ip, r0, r1
 8020904:	5a41      	ldrh	r1, [r0, r1]
 8020906:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8020908:	28ff      	cmp	r0, #255	; 0xff
 802090a:	d019      	beq.n	8020940 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 802090c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802090e:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8020912:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020916:	fb04 fa01 	mul.w	sl, r4, r1
 802091a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802091e:	fb08 f800 	mul.w	r8, r8, r0
 8020922:	f10a 0020 	add.w	r0, sl, #32
 8020926:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 802092a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 802092e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8020932:	4441      	add	r1, r8
 8020934:	0a00      	lsrs	r0, r0, #8
 8020936:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802093a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802093e:	4301      	orrs	r1, r0
 8020940:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020942:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8020946:	2cff      	cmp	r4, #255	; 0xff
 8020948:	d01a      	beq.n	8020980 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 802094a:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 802094e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020952:	fb04 fa00 	mul.w	sl, r4, r0
 8020956:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802095a:	fb08 f80c 	mul.w	r8, r8, ip
 802095e:	f10a 0c20 	add.w	ip, sl, #32
 8020962:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8020966:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802096a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802096e:	4440      	add	r0, r8
 8020970:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020974:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8020978:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 802097c:	ea40 000c 	orr.w	r0, r0, ip
 8020980:	fb15 fc02 	smulbb	ip, r5, r2
 8020984:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8020988:	f1c5 0810 	rsb	r8, r5, #16
 802098c:	eba8 0802 	sub.w	r8, r8, r2
 8020990:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8020994:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8020998:	437a      	muls	r2, r7
 802099a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 802099e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80209a2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80209a6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80209aa:	fb09 2208 	mla	r2, r9, r8, r2
 80209ae:	ea4a 0101 	orr.w	r1, sl, r1
 80209b2:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80209b6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80209ba:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80209be:	fb05 2201 	mla	r2, r5, r1, r2
 80209c2:	ea4b 0000 	orr.w	r0, fp, r0
 80209c6:	fb0c 2200 	mla	r2, ip, r0, r2
 80209ca:	0d57      	lsrs	r7, r2, #21
 80209cc:	0952      	lsrs	r2, r2, #5
 80209ce:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80209d2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80209d6:	433a      	orrs	r2, r7
 80209d8:	2bff      	cmp	r3, #255	; 0xff
 80209da:	b292      	uxth	r2, r2
 80209dc:	d102      	bne.n	80209e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80209de:	9912      	ldr	r1, [sp, #72]	; 0x48
 80209e0:	29ff      	cmp	r1, #255	; 0xff
 80209e2:	d063      	beq.n	8020aac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 80209e4:	980a      	ldr	r0, [sp, #40]	; 0x28
 80209e6:	f8be 1000 	ldrh.w	r1, [lr]
 80209ea:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80209ec:	4343      	muls	r3, r0
 80209ee:	1c58      	adds	r0, r3, #1
 80209f0:	eb00 2323 	add.w	r3, r0, r3, asr #8
 80209f4:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80209f8:	1208      	asrs	r0, r1, #8
 80209fa:	b2db      	uxtb	r3, r3
 80209fc:	1215      	asrs	r5, r2, #8
 80209fe:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8020a02:	fb10 f003 	smulbb	r0, r0, r3
 8020a06:	10cf      	asrs	r7, r1, #3
 8020a08:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8020a0c:	00c9      	lsls	r1, r1, #3
 8020a0e:	fb05 0504 	mla	r5, r5, r4, r0
 8020a12:	b2c9      	uxtb	r1, r1
 8020a14:	10d0      	asrs	r0, r2, #3
 8020a16:	00d2      	lsls	r2, r2, #3
 8020a18:	fb11 f103 	smulbb	r1, r1, r3
 8020a1c:	b2d2      	uxtb	r2, r2
 8020a1e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8020a22:	fb02 1204 	mla	r2, r2, r4, r1
 8020a26:	fb17 f703 	smulbb	r7, r7, r3
 8020a2a:	b2ad      	uxth	r5, r5
 8020a2c:	b292      	uxth	r2, r2
 8020a2e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8020a32:	fb00 7004 	mla	r0, r0, r4, r7
 8020a36:	1c6b      	adds	r3, r5, #1
 8020a38:	1c57      	adds	r7, r2, #1
 8020a3a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8020a3e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8020a42:	b280      	uxth	r0, r0
 8020a44:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020a48:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8020a4c:	433d      	orrs	r5, r7
 8020a4e:	1c47      	adds	r7, r0, #1
 8020a50:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8020a54:	097f      	lsrs	r7, r7, #5
 8020a56:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8020a5a:	433d      	orrs	r5, r7
 8020a5c:	f8ae 5000 	strh.w	r5, [lr]
 8020a60:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8020a62:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8020a64:	4413      	add	r3, r2
 8020a66:	9321      	str	r3, [sp, #132]	; 0x84
 8020a68:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8020a6a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020a6c:	441a      	add	r2, r3
 8020a6e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8020a70:	9222      	str	r2, [sp, #136]	; 0x88
 8020a72:	3b01      	subs	r3, #1
 8020a74:	f10e 0e02 	add.w	lr, lr, #2
 8020a78:	9313      	str	r3, [sp, #76]	; 0x4c
 8020a7a:	e61c      	b.n	80206b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8020a7c:	fb08 f000 	mul.w	r0, r8, r0
 8020a80:	fb09 0303 	mla	r3, r9, r3, r0
 8020a84:	e6dc      	b.n	8020840 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8020a86:	46b9      	mov	r9, r7
 8020a88:	e704      	b.n	8020894 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8020a8a:	f1c2 0110 	rsb	r1, r2, #16
 8020a8e:	437a      	muls	r2, r7
 8020a90:	fb09 2901 	mla	r9, r9, r1, r2
 8020a94:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8020a98:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8020a9c:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8020aa0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020aa4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020aa8:	4302      	orrs	r2, r0
 8020aaa:	e795      	b.n	80209d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8020aac:	f8ae 2000 	strh.w	r2, [lr]
 8020ab0:	e7d6      	b.n	8020a60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8020ab2:	b017      	add	sp, #92	; 0x5c
 8020ab4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020ab8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8020ab8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020abc:	b085      	sub	sp, #20
 8020abe:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8020ac2:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8020ac6:	9103      	str	r1, [sp, #12]
 8020ac8:	fb00 7406 	mla	r4, r0, r6, r7
 8020acc:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8020ad0:	2800      	cmp	r0, #0
 8020ad2:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8020ad6:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8020ada:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8020ade:	9501      	str	r5, [sp, #4]
 8020ae0:	eb02 0904 	add.w	r9, r2, r4
 8020ae4:	f2c0 8141 	blt.w	8020d6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8020ae8:	4583      	cmp	fp, r0
 8020aea:	f340 813e 	ble.w	8020d6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8020aee:	2f00      	cmp	r7, #0
 8020af0:	f2c0 8137 	blt.w	8020d62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8020af4:	42be      	cmp	r6, r7
 8020af6:	f340 8134 	ble.w	8020d62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8020afa:	f812 c004 	ldrb.w	ip, [r2, r4]
 8020afe:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8020b02:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8020b06:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8020b0a:	4355      	muls	r5, r2
 8020b0c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020b10:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8020b14:	fb0c f203 	mul.w	r2, ip, r3
 8020b18:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8020b1c:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8020b20:	441d      	add	r5, r3
 8020b22:	f102 0320 	add.w	r3, r2, #32
 8020b26:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020b2a:	0a1b      	lsrs	r3, r3, #8
 8020b2c:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8020b30:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020b34:	431c      	orrs	r4, r3
 8020b36:	1c7b      	adds	r3, r7, #1
 8020b38:	f100 811c 	bmi.w	8020d74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8020b3c:	429e      	cmp	r6, r3
 8020b3e:	f340 8119 	ble.w	8020d74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8020b42:	2900      	cmp	r1, #0
 8020b44:	f000 8119 	beq.w	8020d7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8020b48:	9a01      	ldr	r2, [sp, #4]
 8020b4a:	f899 3001 	ldrb.w	r3, [r9, #1]
 8020b4e:	8855      	ldrh	r5, [r2, #2]
 8020b50:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8020b54:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8020b58:	fb08 f802 	mul.w	r8, r8, r2
 8020b5c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020b60:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8020b64:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8020b68:	435d      	muls	r5, r3
 8020b6a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8020b6e:	44d0      	add	r8, sl
 8020b70:	f105 0a20 	add.w	sl, r5, #32
 8020b74:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8020b78:	0a2d      	lsrs	r5, r5, #8
 8020b7a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8020b7e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020b82:	432a      	orrs	r2, r5
 8020b84:	3001      	adds	r0, #1
 8020b86:	f100 80fe 	bmi.w	8020d86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8020b8a:	4583      	cmp	fp, r0
 8020b8c:	f340 80fb 	ble.w	8020d86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8020b90:	f1be 0f00 	cmp.w	lr, #0
 8020b94:	f000 80fc 	beq.w	8020d90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8020b98:	2f00      	cmp	r7, #0
 8020b9a:	f2c0 80f1 	blt.w	8020d80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8020b9e:	42be      	cmp	r6, r7
 8020ba0:	f340 80ee 	ble.w	8020d80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8020ba4:	9801      	ldr	r0, [sp, #4]
 8020ba6:	f819 5006 	ldrb.w	r5, [r9, r6]
 8020baa:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8020bae:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8020bb2:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8020bb6:	fb0a fa00 	mul.w	sl, sl, r0
 8020bba:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8020bbe:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8020bc2:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8020bc6:	fb05 f808 	mul.w	r8, r5, r8
 8020bca:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8020bce:	4482      	add	sl, r0
 8020bd0:	f108 0020 	add.w	r0, r8, #32
 8020bd4:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8020bd8:	0a00      	lsrs	r0, r0, #8
 8020bda:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8020bde:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020be2:	ea4b 0b00 	orr.w	fp, fp, r0
 8020be6:	3701      	adds	r7, #1
 8020be8:	f100 80d7 	bmi.w	8020d9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8020bec:	42be      	cmp	r6, r7
 8020bee:	f340 80d4 	ble.w	8020d9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8020bf2:	2900      	cmp	r1, #0
 8020bf4:	f000 80d4 	beq.w	8020da0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8020bf8:	3601      	adds	r6, #1
 8020bfa:	9801      	ldr	r0, [sp, #4]
 8020bfc:	f819 7006 	ldrb.w	r7, [r9, r6]
 8020c00:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8020c04:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8020c08:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8020c0c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020c10:	fb09 f906 	mul.w	r9, r9, r6
 8020c14:	fb07 f800 	mul.w	r8, r7, r0
 8020c18:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8020c1c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8020c20:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8020c24:	44d1      	add	r9, sl
 8020c26:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8020c2a:	f108 0020 	add.w	r0, r8, #32
 8020c2e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8020c32:	0a00      	lsrs	r0, r0, #8
 8020c34:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020c38:	4330      	orrs	r0, r6
 8020c3a:	b28e      	uxth	r6, r1
 8020c3c:	fa1f f98e 	uxth.w	r9, lr
 8020c40:	fb06 f809 	mul.w	r8, r6, r9
 8020c44:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8020c48:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8020c4c:	0136      	lsls	r6, r6, #4
 8020c4e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020c52:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8020c56:	9601      	str	r6, [sp, #4]
 8020c58:	ea4a 0404 	orr.w	r4, sl, r4
 8020c5c:	fa1f f689 	uxth.w	r6, r9
 8020c60:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8020c64:	fb11 f90e 	smulbb	r9, r1, lr
 8020c68:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8020c6c:	9602      	str	r6, [sp, #8]
 8020c6e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020c72:	4626      	mov	r6, r4
 8020c74:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020c78:	f1ce 0410 	rsb	r4, lr, #16
 8020c7c:	1a64      	subs	r4, r4, r1
 8020c7e:	ea4a 0202 	orr.w	r2, sl, r2
 8020c82:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8020c86:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8020c8a:	434a      	muls	r2, r1
 8020c8c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8020c90:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020c94:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8020c98:	fb04 2406 	mla	r4, r4, r6, r2
 8020c9c:	ea4a 0000 	orr.w	r0, sl, r0
 8020ca0:	fb09 4200 	mla	r2, r9, r0, r4
 8020ca4:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8020ca8:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8020cac:	9801      	ldr	r0, [sp, #4]
 8020cae:	9903      	ldr	r1, [sp, #12]
 8020cb0:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8020cb4:	ea44 0b0b 	orr.w	fp, r4, fp
 8020cb8:	9c02      	ldr	r4, [sp, #8]
 8020cba:	8809      	ldrh	r1, [r1, #0]
 8020cbc:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8020cc0:	1b00      	subs	r0, r0, r4
 8020cc2:	9c01      	ldr	r4, [sp, #4]
 8020cc4:	eba4 0608 	sub.w	r6, r4, r8
 8020cc8:	b2b6      	uxth	r6, r6
 8020cca:	b280      	uxth	r0, r0
 8020ccc:	4373      	muls	r3, r6
 8020cce:	fb0c 3300 	mla	r3, ip, r0, r3
 8020cd2:	9802      	ldr	r0, [sp, #8]
 8020cd4:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8020cd8:	fb00 3505 	mla	r5, r0, r5, r3
 8020cdc:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8020ce0:	fb08 5707 	mla	r7, r8, r7, r5
 8020ce4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8020ce8:	120b      	asrs	r3, r1, #8
 8020cea:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8020cee:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8020cf2:	b2ff      	uxtb	r7, r7
 8020cf4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020cf8:	10c8      	asrs	r0, r1, #3
 8020cfa:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8020cfe:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8020d02:	00c9      	lsls	r1, r1, #3
 8020d04:	437b      	muls	r3, r7
 8020d06:	ea42 0e0e 	orr.w	lr, r2, lr
 8020d0a:	b2c9      	uxtb	r1, r1
 8020d0c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8020d10:	fa1f f28e 	uxth.w	r2, lr
 8020d14:	4378      	muls	r0, r7
 8020d16:	434f      	muls	r7, r1
 8020d18:	1c59      	adds	r1, r3, #1
 8020d1a:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8020d1e:	1213      	asrs	r3, r2, #8
 8020d20:	f023 0307 	bic.w	r3, r3, #7
 8020d24:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8020d28:	1c41      	adds	r1, r0, #1
 8020d2a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8020d2e:	10d1      	asrs	r1, r2, #3
 8020d30:	f021 0103 	bic.w	r1, r1, #3
 8020d34:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8020d38:	021b      	lsls	r3, r3, #8
 8020d3a:	00c9      	lsls	r1, r1, #3
 8020d3c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020d40:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8020d44:	430b      	orrs	r3, r1
 8020d46:	1c79      	adds	r1, r7, #1
 8020d48:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8020d4c:	00d2      	lsls	r2, r2, #3
 8020d4e:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8020d52:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020d56:	431a      	orrs	r2, r3
 8020d58:	9b03      	ldr	r3, [sp, #12]
 8020d5a:	801a      	strh	r2, [r3, #0]
 8020d5c:	b005      	add	sp, #20
 8020d5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020d62:	f04f 0c00 	mov.w	ip, #0
 8020d66:	4664      	mov	r4, ip
 8020d68:	e6e5      	b.n	8020b36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8020d6a:	2300      	movs	r3, #0
 8020d6c:	469c      	mov	ip, r3
 8020d6e:	461a      	mov	r2, r3
 8020d70:	461c      	mov	r4, r3
 8020d72:	e707      	b.n	8020b84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8020d74:	2300      	movs	r3, #0
 8020d76:	461a      	mov	r2, r3
 8020d78:	e704      	b.n	8020b84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8020d7a:	460b      	mov	r3, r1
 8020d7c:	460a      	mov	r2, r1
 8020d7e:	e701      	b.n	8020b84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8020d80:	2500      	movs	r5, #0
 8020d82:	46ab      	mov	fp, r5
 8020d84:	e72f      	b.n	8020be6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8020d86:	2700      	movs	r7, #0
 8020d88:	463d      	mov	r5, r7
 8020d8a:	4638      	mov	r0, r7
 8020d8c:	46bb      	mov	fp, r7
 8020d8e:	e754      	b.n	8020c3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8020d90:	4677      	mov	r7, lr
 8020d92:	4675      	mov	r5, lr
 8020d94:	4670      	mov	r0, lr
 8020d96:	46f3      	mov	fp, lr
 8020d98:	e74f      	b.n	8020c3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8020d9a:	2700      	movs	r7, #0
 8020d9c:	4638      	mov	r0, r7
 8020d9e:	e74c      	b.n	8020c3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8020da0:	460f      	mov	r7, r1
 8020da2:	4608      	mov	r0, r1
 8020da4:	e749      	b.n	8020c3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08020da8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020da8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020dac:	b093      	sub	sp, #76	; 0x4c
 8020dae:	9210      	str	r2, [sp, #64]	; 0x40
 8020db0:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8020db2:	910e      	str	r1, [sp, #56]	; 0x38
 8020db4:	9306      	str	r3, [sp, #24]
 8020db6:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8020dba:	9011      	str	r0, [sp, #68]	; 0x44
 8020dbc:	6850      	ldr	r0, [r2, #4]
 8020dbe:	6812      	ldr	r2, [r2, #0]
 8020dc0:	fb00 1303 	mla	r3, r0, r3, r1
 8020dc4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020dc8:	9307      	str	r3, [sp, #28]
 8020dca:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020dcc:	681b      	ldr	r3, [r3, #0]
 8020dce:	9308      	str	r3, [sp, #32]
 8020dd0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020dd2:	685b      	ldr	r3, [r3, #4]
 8020dd4:	9309      	str	r3, [sp, #36]	; 0x24
 8020dd6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020dd8:	2b00      	cmp	r3, #0
 8020dda:	dc03      	bgt.n	8020de4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8020ddc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020dde:	2b00      	cmp	r3, #0
 8020de0:	f340 83b4 	ble.w	802154c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8020de4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020de6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020dea:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020dee:	1e48      	subs	r0, r1, #1
 8020df0:	1e55      	subs	r5, r2, #1
 8020df2:	9b06      	ldr	r3, [sp, #24]
 8020df4:	2b00      	cmp	r3, #0
 8020df6:	f340 8163 	ble.w	80210c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8020dfa:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8020dfc:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8020dfe:	1436      	asrs	r6, r6, #16
 8020e00:	ea4f 4323 	mov.w	r3, r3, asr #16
 8020e04:	d406      	bmi.n	8020e14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8020e06:	4286      	cmp	r6, r0
 8020e08:	da04      	bge.n	8020e14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8020e0a:	2b00      	cmp	r3, #0
 8020e0c:	db02      	blt.n	8020e14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8020e0e:	42ab      	cmp	r3, r5
 8020e10:	f2c0 8157 	blt.w	80210c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8020e14:	3601      	adds	r6, #1
 8020e16:	f100 8144 	bmi.w	80210a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8020e1a:	42b1      	cmp	r1, r6
 8020e1c:	f2c0 8141 	blt.w	80210a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8020e20:	3301      	adds	r3, #1
 8020e22:	f100 813e 	bmi.w	80210a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8020e26:	429a      	cmp	r2, r3
 8020e28:	f2c0 813b 	blt.w	80210a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8020e2c:	9b06      	ldr	r3, [sp, #24]
 8020e2e:	9f07      	ldr	r7, [sp, #28]
 8020e30:	930f      	str	r3, [sp, #60]	; 0x3c
 8020e32:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8020e36:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020e38:	2b00      	cmp	r3, #0
 8020e3a:	f340 8164 	ble.w	8021106 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8020e3e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8020e40:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8020e42:	1418      	asrs	r0, r3, #16
 8020e44:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8020e46:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8020e4a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8020e4c:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8020e50:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020e52:	142d      	asrs	r5, r5, #16
 8020e54:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8020e58:	f100 81ee 	bmi.w	8021238 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8020e5c:	f102 3eff 	add.w	lr, r2, #4294967295
 8020e60:	4575      	cmp	r5, lr
 8020e62:	f280 81e9 	bge.w	8021238 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8020e66:	2800      	cmp	r0, #0
 8020e68:	f2c0 81e6 	blt.w	8021238 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8020e6c:	f103 3eff 	add.w	lr, r3, #4294967295
 8020e70:	4570      	cmp	r0, lr
 8020e72:	f280 81e1 	bge.w	8021238 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8020e76:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020e78:	b212      	sxth	r2, r2
 8020e7a:	fb00 5002 	mla	r0, r0, r2, r5
 8020e7e:	fa1f fe81 	uxth.w	lr, r1
 8020e82:	eb03 0a00 	add.w	sl, r3, r0
 8020e86:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8020e8a:	f813 9000 	ldrb.w	r9, [r3, r0]
 8020e8e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8020e92:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8020e96:	b29b      	uxth	r3, r3
 8020e98:	f1bc 0f00 	cmp.w	ip, #0
 8020e9c:	f000 8179 	beq.w	8021192 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8020ea0:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8020ea4:	940a      	str	r4, [sp, #40]	; 0x28
 8020ea6:	eb0a 0b02 	add.w	fp, sl, r2
 8020eaa:	fa1f fa8c 	uxth.w	sl, ip
 8020eae:	fb0a fe0e 	mul.w	lr, sl, lr
 8020eb2:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8020eb6:	fa1f fa8a 	uxth.w	sl, sl
 8020eba:	eba5 050e 	sub.w	r5, r5, lr
 8020ebe:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8020ec2:	940b      	str	r4, [sp, #44]	; 0x2c
 8020ec4:	eba3 030a 	sub.w	r3, r3, sl
 8020ec8:	b2ad      	uxth	r5, r5
 8020eca:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020ecc:	b29b      	uxth	r3, r3
 8020ece:	fb08 f505 	mul.w	r5, r8, r5
 8020ed2:	fb09 5303 	mla	r3, r9, r3, r5
 8020ed6:	fb0a 3304 	mla	r3, sl, r4, r3
 8020eda:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020edc:	fb0e 3304 	mla	r3, lr, r4, r3
 8020ee0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020ee4:	2b00      	cmp	r3, #0
 8020ee6:	f000 80cf 	beq.w	8021088 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8020eea:	9c08      	ldr	r4, [sp, #32]
 8020eec:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8020ef0:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8020ef4:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8020ef8:	f000 8150 	beq.w	802119c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8020efc:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8020f00:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8020f04:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020f08:	fb09 f000 	mul.w	r0, r9, r0
 8020f0c:	fb0a fe0e 	mul.w	lr, sl, lr
 8020f10:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8020f14:	f100 0b20 	add.w	fp, r0, #32
 8020f18:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8020f1c:	44ce      	add	lr, r9
 8020f1e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8020f22:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020f26:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8020f2a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8020f2e:	ea4e 0909 	orr.w	r9, lr, r9
 8020f32:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8020f36:	8868      	ldrh	r0, [r5, #2]
 8020f38:	d019      	beq.n	8020f6e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8020f3a:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8020f3e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8020f42:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020f46:	fb08 f800 	mul.w	r8, r8, r0
 8020f4a:	fb0a fe0e 	mul.w	lr, sl, lr
 8020f4e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8020f52:	f108 0b20 	add.w	fp, r8, #32
 8020f56:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8020f5a:	4486      	add	lr, r0
 8020f5c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8020f60:	0a00      	lsrs	r0, r0, #8
 8020f62:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8020f66:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020f6a:	ea4e 0000 	orr.w	r0, lr, r0
 8020f6e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8020f72:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8020f76:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8020f7a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8020f7e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020f82:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8020f86:	ea4e 0909 	orr.w	r9, lr, r9
 8020f8a:	ea4a 0000 	orr.w	r0, sl, r0
 8020f8e:	f1bc 0f00 	cmp.w	ip, #0
 8020f92:	f000 8105 	beq.w	80211a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8020f96:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8020f9a:	3a01      	subs	r2, #1
 8020f9c:	0052      	lsls	r2, r2, #1
 8020f9e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020fa0:	3202      	adds	r2, #2
 8020fa2:	2cff      	cmp	r4, #255	; 0xff
 8020fa4:	eb05 0e02 	add.w	lr, r5, r2
 8020fa8:	5aaa      	ldrh	r2, [r5, r2]
 8020faa:	d018      	beq.n	8020fde <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8020fac:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8020fb0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020fb4:	fb04 fa02 	mul.w	sl, r4, r2
 8020fb8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8020fbc:	fb08 f805 	mul.w	r8, r8, r5
 8020fc0:	f10a 0520 	add.w	r5, sl, #32
 8020fc4:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8020fc8:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8020fcc:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8020fd0:	4442      	add	r2, r8
 8020fd2:	0a2d      	lsrs	r5, r5, #8
 8020fd4:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8020fd8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020fdc:	432a      	orrs	r2, r5
 8020fde:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020fe0:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8020fe4:	2cff      	cmp	r4, #255	; 0xff
 8020fe6:	d01a      	beq.n	802101e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8020fe8:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8020fec:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020ff0:	fb04 fa05 	mul.w	sl, r4, r5
 8020ff4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8020ff8:	fb08 f80e 	mul.w	r8, r8, lr
 8020ffc:	f10a 0e20 	add.w	lr, sl, #32
 8021000:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8021004:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8021008:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802100c:	4445      	add	r5, r8
 802100e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021012:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8021016:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 802101a:	ea45 050e 	orr.w	r5, r5, lr
 802101e:	fb1c fe01 	smulbb	lr, ip, r1
 8021022:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8021026:	f1cc 0810 	rsb	r8, ip, #16
 802102a:	eba8 0801 	sub.w	r8, r8, r1
 802102e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021032:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8021036:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 802103a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 802103e:	4341      	muls	r1, r0
 8021040:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021044:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021048:	ea4a 0202 	orr.w	r2, sl, r2
 802104c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8021050:	fb09 1108 	mla	r1, r9, r8, r1
 8021054:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021058:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 802105c:	fb0c 1102 	mla	r1, ip, r2, r1
 8021060:	ea4b 0505 	orr.w	r5, fp, r5
 8021064:	fb0e 1e05 	mla	lr, lr, r5, r1
 8021068:	ea4f 525e 	mov.w	r2, lr, lsr #21
 802106c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021070:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021074:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8021078:	ea42 0e0e 	orr.w	lr, r2, lr
 802107c:	fa1f f28e 	uxth.w	r2, lr
 8021080:	2bff      	cmp	r3, #255	; 0xff
 8021082:	f040 80a1 	bne.w	80211c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 8021086:	803a      	strh	r2, [r7, #0]
 8021088:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802108a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 802108c:	4413      	add	r3, r2
 802108e:	931d      	str	r3, [sp, #116]	; 0x74
 8021090:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8021092:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021094:	441a      	add	r2, r3
 8021096:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021098:	921e      	str	r2, [sp, #120]	; 0x78
 802109a:	3b01      	subs	r3, #1
 802109c:	3702      	adds	r7, #2
 802109e:	930f      	str	r3, [sp, #60]	; 0x3c
 80210a0:	e6c9      	b.n	8020e36 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80210a2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80210a4:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 80210a6:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 80210a8:	4433      	add	r3, r6
 80210aa:	931d      	str	r3, [sp, #116]	; 0x74
 80210ac:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80210ae:	441c      	add	r4, r3
 80210b0:	9b06      	ldr	r3, [sp, #24]
 80210b2:	941e      	str	r4, [sp, #120]	; 0x78
 80210b4:	3b01      	subs	r3, #1
 80210b6:	9306      	str	r3, [sp, #24]
 80210b8:	9b07      	ldr	r3, [sp, #28]
 80210ba:	3302      	adds	r3, #2
 80210bc:	9307      	str	r3, [sp, #28]
 80210be:	e698      	b.n	8020df2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80210c0:	d028      	beq.n	8021114 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80210c2:	9b06      	ldr	r3, [sp, #24]
 80210c4:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80210c6:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80210c8:	3b01      	subs	r3, #1
 80210ca:	fb00 5003 	mla	r0, r0, r3, r5
 80210ce:	1400      	asrs	r0, r0, #16
 80210d0:	f53f aeac 	bmi.w	8020e2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80210d4:	3901      	subs	r1, #1
 80210d6:	4288      	cmp	r0, r1
 80210d8:	f6bf aea8 	bge.w	8020e2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80210dc:	9920      	ldr	r1, [sp, #128]	; 0x80
 80210de:	981e      	ldr	r0, [sp, #120]	; 0x78
 80210e0:	fb01 0303 	mla	r3, r1, r3, r0
 80210e4:	141b      	asrs	r3, r3, #16
 80210e6:	f53f aea1 	bmi.w	8020e2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80210ea:	3a01      	subs	r2, #1
 80210ec:	4293      	cmp	r3, r2
 80210ee:	f6bf ae9d 	bge.w	8020e2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80210f2:	9b06      	ldr	r3, [sp, #24]
 80210f4:	f8dd e01c 	ldr.w	lr, [sp, #28]
 80210f8:	930f      	str	r3, [sp, #60]	; 0x3c
 80210fa:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80210fe:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021100:	2b00      	cmp	r3, #0
 8021102:	f300 80b6 	bgt.w	8021272 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 8021106:	9b06      	ldr	r3, [sp, #24]
 8021108:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802110c:	9b07      	ldr	r3, [sp, #28]
 802110e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8021112:	9307      	str	r3, [sp, #28]
 8021114:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021116:	2b00      	cmp	r3, #0
 8021118:	f340 8218 	ble.w	802154c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 802111c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021120:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021124:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021128:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802112a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802112e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021132:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021136:	eef0 6a62 	vmov.f32	s13, s5
 802113a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802113e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021142:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021146:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 802114a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802114e:	eef0 6a43 	vmov.f32	s13, s6
 8021152:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021156:	ee12 2a90 	vmov	r2, s5
 802115a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802115e:	fb92 f3f3 	sdiv	r3, r2, r3
 8021162:	ee13 2a10 	vmov	r2, s6
 8021166:	931f      	str	r3, [sp, #124]	; 0x7c
 8021168:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802116a:	fb92 f3f3 	sdiv	r3, r2, r3
 802116e:	9320      	str	r3, [sp, #128]	; 0x80
 8021170:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021172:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8021174:	3b01      	subs	r3, #1
 8021176:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802117a:	930e      	str	r3, [sp, #56]	; 0x38
 802117c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802117e:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 8021182:	bf08      	it	eq
 8021184:	4613      	moveq	r3, r2
 8021186:	9306      	str	r3, [sp, #24]
 8021188:	eeb0 3a67 	vmov.f32	s6, s15
 802118c:	eef0 2a47 	vmov.f32	s5, s14
 8021190:	e621      	b.n	8020dd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8021192:	fb08 f505 	mul.w	r5, r8, r5
 8021196:	fb09 5303 	mla	r3, r9, r3, r5
 802119a:	e6a1      	b.n	8020ee0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 802119c:	4681      	mov	r9, r0
 802119e:	e6c8      	b.n	8020f32 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 80211a0:	f1c1 0210 	rsb	r2, r1, #16
 80211a4:	4341      	muls	r1, r0
 80211a6:	fb09 1902 	mla	r9, r9, r2, r1
 80211aa:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80211ae:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80211b2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80211b6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80211ba:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80211be:	ea42 0909 	orr.w	r9, r2, r9
 80211c2:	fa1f f289 	uxth.w	r2, r9
 80211c6:	e75b      	b.n	8021080 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80211c8:	f8b7 c000 	ldrh.w	ip, [r7]
 80211cc:	43db      	mvns	r3, r3
 80211ce:	ea4f 202c 	mov.w	r0, ip, asr #8
 80211d2:	fa5f fe83 	uxtb.w	lr, r3
 80211d6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80211da:	fb00 f00e 	mul.w	r0, r0, lr
 80211de:	1c41      	adds	r1, r0, #1
 80211e0:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80211e4:	1211      	asrs	r1, r2, #8
 80211e6:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80211ea:	f021 0107 	bic.w	r1, r1, #7
 80211ee:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80211f2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80211f6:	48d7      	ldr	r0, [pc, #860]	; (8021554 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 80211f8:	fb05 f50e 	mul.w	r5, r5, lr
 80211fc:	b2c9      	uxtb	r1, r1
 80211fe:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8021202:	1c69      	adds	r1, r5, #1
 8021204:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8021208:	10d1      	asrs	r1, r2, #3
 802120a:	f021 0103 	bic.w	r1, r1, #3
 802120e:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8021212:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8021216:	b2db      	uxtb	r3, r3
 8021218:	00c9      	lsls	r1, r1, #3
 802121a:	fb03 f30e 	mul.w	r3, r3, lr
 802121e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021222:	4301      	orrs	r1, r0
 8021224:	1c58      	adds	r0, r3, #1
 8021226:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802122a:	00d2      	lsls	r2, r2, #3
 802122c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8021230:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021234:	430a      	orrs	r2, r1
 8021236:	e726      	b.n	8021086 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 8021238:	f115 0e01 	adds.w	lr, r5, #1
 802123c:	f53f af24 	bmi.w	8021088 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8021240:	4572      	cmp	r2, lr
 8021242:	f6ff af21 	blt.w	8021088 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8021246:	f110 0e01 	adds.w	lr, r0, #1
 802124a:	f53f af1d 	bmi.w	8021088 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802124e:	4573      	cmp	r3, lr
 8021250:	f6ff af1a 	blt.w	8021088 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8021254:	b21b      	sxth	r3, r3
 8021256:	b212      	sxth	r2, r2
 8021258:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 802125c:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8021260:	9301      	str	r3, [sp, #4]
 8021262:	9200      	str	r2, [sp, #0]
 8021264:	4639      	mov	r1, r7
 8021266:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 802126a:	9811      	ldr	r0, [sp, #68]	; 0x44
 802126c:	f7ff fc24 	bl	8020ab8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8021270:	e70a      	b.n	8021088 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8021272:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8021274:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021278:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802127a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 802127e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021280:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021284:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021286:	141f      	asrs	r7, r3, #16
 8021288:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802128a:	141b      	asrs	r3, r3, #16
 802128c:	fb01 3707 	mla	r7, r1, r7, r3
 8021290:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021292:	fa1f fc82 	uxth.w	ip, r2
 8021296:	eb03 0a07 	add.w	sl, r3, r7
 802129a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 802129e:	f813 9007 	ldrb.w	r9, [r3, r7]
 80212a2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80212a6:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80212aa:	b29b      	uxth	r3, r3
 80212ac:	2d00      	cmp	r5, #0
 80212ae:	f000 80fe 	beq.w	80214ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 80212b2:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80212b6:	940c      	str	r4, [sp, #48]	; 0x30
 80212b8:	eb0a 0b01 	add.w	fp, sl, r1
 80212bc:	fa1f fa85 	uxth.w	sl, r5
 80212c0:	fb0a fc0c 	mul.w	ip, sl, ip
 80212c4:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80212c8:	fa1f fa8a 	uxth.w	sl, sl
 80212cc:	eba0 000c 	sub.w	r0, r0, ip
 80212d0:	eba3 030a 	sub.w	r3, r3, sl
 80212d4:	b280      	uxth	r0, r0
 80212d6:	fb08 f000 	mul.w	r0, r8, r0
 80212da:	b29b      	uxth	r3, r3
 80212dc:	fb09 0303 	mla	r3, r9, r3, r0
 80212e0:	980c      	ldr	r0, [sp, #48]	; 0x30
 80212e2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80212e6:	940d      	str	r4, [sp, #52]	; 0x34
 80212e8:	fb0a 3300 	mla	r3, sl, r0, r3
 80212ec:	fb0c 3304 	mla	r3, ip, r4, r3
 80212f0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80212f4:	2b00      	cmp	r3, #0
 80212f6:	f000 80cc 	beq.w	8021492 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 80212fa:	9808      	ldr	r0, [sp, #32]
 80212fc:	9c08      	ldr	r4, [sp, #32]
 80212fe:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8021302:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8021306:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802130a:	f000 80d5 	beq.w	80214b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 802130e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8021312:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021316:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802131a:	fb09 f707 	mul.w	r7, r9, r7
 802131e:	fb0a fc0c 	mul.w	ip, sl, ip
 8021322:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8021326:	f107 0b20 	add.w	fp, r7, #32
 802132a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 802132e:	44cc      	add	ip, r9
 8021330:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8021334:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021338:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802133c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021340:	ea4c 0909 	orr.w	r9, ip, r9
 8021344:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8021348:	8847      	ldrh	r7, [r0, #2]
 802134a:	d019      	beq.n	8021380 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 802134c:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8021350:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8021354:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021358:	fb08 f807 	mul.w	r8, r8, r7
 802135c:	fb0a fc0c 	mul.w	ip, sl, ip
 8021360:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8021364:	f108 0b20 	add.w	fp, r8, #32
 8021368:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 802136c:	44bc      	add	ip, r7
 802136e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8021372:	0a3f      	lsrs	r7, r7, #8
 8021374:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8021378:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802137c:	ea4c 0707 	orr.w	r7, ip, r7
 8021380:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8021384:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8021388:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802138c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021390:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021394:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8021398:	ea4c 0909 	orr.w	r9, ip, r9
 802139c:	ea4a 0707 	orr.w	r7, sl, r7
 80213a0:	2d00      	cmp	r5, #0
 80213a2:	f000 808b 	beq.w	80214bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 80213a6:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80213aa:	3901      	subs	r1, #1
 80213ac:	0049      	lsls	r1, r1, #1
 80213ae:	3102      	adds	r1, #2
 80213b0:	eb00 0c01 	add.w	ip, r0, r1
 80213b4:	5a41      	ldrh	r1, [r0, r1]
 80213b6:	980c      	ldr	r0, [sp, #48]	; 0x30
 80213b8:	28ff      	cmp	r0, #255	; 0xff
 80213ba:	d019      	beq.n	80213f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 80213bc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80213be:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80213c2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80213c6:	fb04 fa01 	mul.w	sl, r4, r1
 80213ca:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80213ce:	fb08 f800 	mul.w	r8, r8, r0
 80213d2:	f10a 0020 	add.w	r0, sl, #32
 80213d6:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80213da:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80213de:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80213e2:	4441      	add	r1, r8
 80213e4:	0a00      	lsrs	r0, r0, #8
 80213e6:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80213ea:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80213ee:	4301      	orrs	r1, r0
 80213f0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80213f2:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80213f6:	2cff      	cmp	r4, #255	; 0xff
 80213f8:	d01a      	beq.n	8021430 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 80213fa:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 80213fe:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021402:	fb04 fa00 	mul.w	sl, r4, r0
 8021406:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802140a:	fb08 f80c 	mul.w	r8, r8, ip
 802140e:	f10a 0c20 	add.w	ip, sl, #32
 8021412:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8021416:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802141a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802141e:	4440      	add	r0, r8
 8021420:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021424:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8021428:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 802142c:	ea40 000c 	orr.w	r0, r0, ip
 8021430:	fb15 fc02 	smulbb	ip, r5, r2
 8021434:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8021438:	f1c5 0810 	rsb	r8, r5, #16
 802143c:	eba8 0802 	sub.w	r8, r8, r2
 8021440:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8021444:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8021448:	437a      	muls	r2, r7
 802144a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 802144e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8021452:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021456:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802145a:	fb09 2208 	mla	r2, r9, r8, r2
 802145e:	ea4a 0101 	orr.w	r1, sl, r1
 8021462:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8021466:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802146a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802146e:	fb05 2201 	mla	r2, r5, r1, r2
 8021472:	ea4b 0000 	orr.w	r0, fp, r0
 8021476:	fb0c 2200 	mla	r2, ip, r0, r2
 802147a:	0d57      	lsrs	r7, r2, #21
 802147c:	0952      	lsrs	r2, r2, #5
 802147e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021482:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021486:	433a      	orrs	r2, r7
 8021488:	2bff      	cmp	r3, #255	; 0xff
 802148a:	b292      	uxth	r2, r2
 802148c:	d127      	bne.n	80214de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 802148e:	f8ae 2000 	strh.w	r2, [lr]
 8021492:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8021494:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8021496:	4413      	add	r3, r2
 8021498:	931d      	str	r3, [sp, #116]	; 0x74
 802149a:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 802149c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802149e:	441a      	add	r2, r3
 80214a0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80214a2:	921e      	str	r2, [sp, #120]	; 0x78
 80214a4:	3b01      	subs	r3, #1
 80214a6:	f10e 0e02 	add.w	lr, lr, #2
 80214aa:	930f      	str	r3, [sp, #60]	; 0x3c
 80214ac:	e627      	b.n	80210fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80214ae:	fb08 f000 	mul.w	r0, r8, r0
 80214b2:	fb09 0303 	mla	r3, r9, r3, r0
 80214b6:	e71b      	b.n	80212f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 80214b8:	46b9      	mov	r9, r7
 80214ba:	e743      	b.n	8021344 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 80214bc:	f1c2 0110 	rsb	r1, r2, #16
 80214c0:	437a      	muls	r2, r7
 80214c2:	fb09 2901 	mla	r9, r9, r1, r2
 80214c6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80214ca:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80214ce:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80214d2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80214d6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80214da:	4302      	orrs	r2, r0
 80214dc:	e7d4      	b.n	8021488 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 80214de:	f8be 7000 	ldrh.w	r7, [lr]
 80214e2:	4c1c      	ldr	r4, [pc, #112]	; (8021554 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 80214e4:	43db      	mvns	r3, r3
 80214e6:	1238      	asrs	r0, r7, #8
 80214e8:	fa5f fc83 	uxtb.w	ip, r3
 80214ec:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80214f0:	10fd      	asrs	r5, r7, #3
 80214f2:	fb00 f00c 	mul.w	r0, r0, ip
 80214f6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80214fa:	fb05 f10c 	mul.w	r1, r5, ip
 80214fe:	1c45      	adds	r5, r0, #1
 8021500:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8021504:	1215      	asrs	r5, r2, #8
 8021506:	f025 0507 	bic.w	r5, r5, #7
 802150a:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 802150e:	1c4d      	adds	r5, r1, #1
 8021510:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8021514:	10d1      	asrs	r1, r2, #3
 8021516:	f021 0103 	bic.w	r1, r1, #3
 802151a:	00fb      	lsls	r3, r7, #3
 802151c:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8021520:	b2db      	uxtb	r3, r3
 8021522:	b2c0      	uxtb	r0, r0
 8021524:	00c9      	lsls	r1, r1, #3
 8021526:	fb03 f30c 	mul.w	r3, r3, ip
 802152a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802152e:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8021532:	4308      	orrs	r0, r1
 8021534:	1c59      	adds	r1, r3, #1
 8021536:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 802153a:	00d2      	lsls	r2, r2, #3
 802153c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8021540:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8021544:	4318      	orrs	r0, r3
 8021546:	f8ae 0000 	strh.w	r0, [lr]
 802154a:	e7a2      	b.n	8021492 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 802154c:	b013      	add	sp, #76	; 0x4c
 802154e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021552:	bf00      	nop
 8021554:	fffff800 	.word	0xfffff800

08021558 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8021558:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802155c:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 8021560:	fb05 4c03 	mla	ip, r5, r3, r4
 8021564:	2d00      	cmp	r5, #0
 8021566:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 802156a:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 802156e:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8021572:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8021576:	8808      	ldrh	r0, [r1, #0]
 8021578:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 802157c:	f2c0 80a7 	blt.w	80216ce <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8021580:	45aa      	cmp	sl, r5
 8021582:	f340 80a4 	ble.w	80216ce <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8021586:	2c00      	cmp	r4, #0
 8021588:	f2c0 809f 	blt.w	80216ca <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 802158c:	42a3      	cmp	r3, r4
 802158e:	f340 809c 	ble.w	80216ca <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8021592:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 8021596:	1c62      	adds	r2, r4, #1
 8021598:	f100 809c 	bmi.w	80216d4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802159c:	4293      	cmp	r3, r2
 802159e:	f340 8099 	ble.w	80216d4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80215a2:	f1b9 0f00 	cmp.w	r9, #0
 80215a6:	f000 8095 	beq.w	80216d4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80215aa:	f8be c002 	ldrh.w	ip, [lr, #2]
 80215ae:	3501      	adds	r5, #1
 80215b0:	f100 8094 	bmi.w	80216dc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80215b4:	45aa      	cmp	sl, r5
 80215b6:	f340 8091 	ble.w	80216dc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80215ba:	2f00      	cmp	r7, #0
 80215bc:	f000 808e 	beq.w	80216dc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80215c0:	2c00      	cmp	r4, #0
 80215c2:	f2c0 8089 	blt.w	80216d8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80215c6:	42a3      	cmp	r3, r4
 80215c8:	f340 8086 	ble.w	80216d8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80215cc:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 80215d0:	3401      	adds	r4, #1
 80215d2:	f100 8086 	bmi.w	80216e2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80215d6:	42a3      	cmp	r3, r4
 80215d8:	f340 8083 	ble.w	80216e2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80215dc:	f1b9 0f00 	cmp.w	r9, #0
 80215e0:	d07f      	beq.n	80216e2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80215e2:	3301      	adds	r3, #1
 80215e4:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 80215e8:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80215ec:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80215f0:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80215f4:	fb19 fe07 	smulbb	lr, r9, r7
 80215f8:	ea44 0808 	orr.w	r8, r4, r8
 80215fc:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8021600:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8021604:	f1c7 0210 	rsb	r2, r7, #16
 8021608:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 802160c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8021610:	ea44 0c0c 	orr.w	ip, r4, ip
 8021614:	eba2 0209 	sub.w	r2, r2, r9
 8021618:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 802161c:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8021620:	fb04 f40c 	mul.w	r4, r4, ip
 8021624:	fb02 4808 	mla	r8, r2, r8, r4
 8021628:	041a      	lsls	r2, r3, #16
 802162a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802162e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8021632:	4313      	orrs	r3, r2
 8021634:	042a      	lsls	r2, r5, #16
 8021636:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802163a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 802163e:	fb0e 8303 	mla	r3, lr, r3, r8
 8021642:	432a      	orrs	r2, r5
 8021644:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8021648:	fb07 3202 	mla	r2, r7, r2, r3
 802164c:	0d53      	lsrs	r3, r2, #21
 802164e:	0952      	lsrs	r2, r2, #5
 8021650:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021654:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021658:	431a      	orrs	r2, r3
 802165a:	b293      	uxth	r3, r2
 802165c:	b2b4      	uxth	r4, r6
 802165e:	1202      	asrs	r2, r0, #8
 8021660:	43f6      	mvns	r6, r6
 8021662:	b2f6      	uxtb	r6, r6
 8021664:	121d      	asrs	r5, r3, #8
 8021666:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802166a:	fb12 f206 	smulbb	r2, r2, r6
 802166e:	10c7      	asrs	r7, r0, #3
 8021670:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021674:	00c0      	lsls	r0, r0, #3
 8021676:	fb05 2504 	mla	r5, r5, r4, r2
 802167a:	b2c0      	uxtb	r0, r0
 802167c:	10da      	asrs	r2, r3, #3
 802167e:	00db      	lsls	r3, r3, #3
 8021680:	b2db      	uxtb	r3, r3
 8021682:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8021686:	fb10 f006 	smulbb	r0, r0, r6
 802168a:	b2ad      	uxth	r5, r5
 802168c:	fb03 0004 	mla	r0, r3, r4, r0
 8021690:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8021694:	fb17 f706 	smulbb	r7, r7, r6
 8021698:	b280      	uxth	r0, r0
 802169a:	1c6b      	adds	r3, r5, #1
 802169c:	fb02 7204 	mla	r2, r2, r4, r7
 80216a0:	b292      	uxth	r2, r2
 80216a2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80216a6:	1c43      	adds	r3, r0, #1
 80216a8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80216ac:	1c50      	adds	r0, r2, #1
 80216ae:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80216b2:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80216b6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80216ba:	0952      	lsrs	r2, r2, #5
 80216bc:	432b      	orrs	r3, r5
 80216be:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80216c2:	4313      	orrs	r3, r2
 80216c4:	800b      	strh	r3, [r1, #0]
 80216c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80216ca:	4680      	mov	r8, r0
 80216cc:	e763      	b.n	8021596 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 80216ce:	4684      	mov	ip, r0
 80216d0:	4680      	mov	r8, r0
 80216d2:	e76c      	b.n	80215ae <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80216d4:	4684      	mov	ip, r0
 80216d6:	e76a      	b.n	80215ae <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80216d8:	4605      	mov	r5, r0
 80216da:	e779      	b.n	80215d0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 80216dc:	4603      	mov	r3, r0
 80216de:	4605      	mov	r5, r0
 80216e0:	e782      	b.n	80215e8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 80216e2:	4603      	mov	r3, r0
 80216e4:	e780      	b.n	80215e8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

080216e6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80216e6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80216ea:	b093      	sub	sp, #76	; 0x4c
 80216ec:	461d      	mov	r5, r3
 80216ee:	9210      	str	r2, [sp, #64]	; 0x40
 80216f0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80216f2:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 80216f6:	920b      	str	r2, [sp, #44]	; 0x2c
 80216f8:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 80216fc:	910a      	str	r1, [sp, #40]	; 0x28
 80216fe:	6859      	ldr	r1, [r3, #4]
 8021700:	681b      	ldr	r3, [r3, #0]
 8021702:	9011      	str	r0, [sp, #68]	; 0x44
 8021704:	fb01 2707 	mla	r7, r1, r7, r2
 8021708:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 802170c:	9307      	str	r3, [sp, #28]
 802170e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021710:	681b      	ldr	r3, [r3, #0]
 8021712:	9309      	str	r3, [sp, #36]	; 0x24
 8021714:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021716:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 802171a:	43db      	mvns	r3, r3
 802171c:	b2db      	uxtb	r3, r3
 802171e:	9308      	str	r3, [sp, #32]
 8021720:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021722:	2b00      	cmp	r3, #0
 8021724:	dc03      	bgt.n	802172e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8021726:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021728:	2b00      	cmp	r3, #0
 802172a:	f340 8203 	ble.w	8021b34 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802172e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021730:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021734:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021738:	1e48      	subs	r0, r1, #1
 802173a:	f102 3cff 	add.w	ip, r2, #4294967295
 802173e:	2d00      	cmp	r5, #0
 8021740:	f340 80da 	ble.w	80218f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8021744:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8021748:	ea4f 4326 	mov.w	r3, r6, asr #16
 802174c:	d406      	bmi.n	802175c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802174e:	4586      	cmp	lr, r0
 8021750:	da04      	bge.n	802175c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8021752:	2b00      	cmp	r3, #0
 8021754:	db02      	blt.n	802175c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8021756:	4563      	cmp	r3, ip
 8021758:	f2c0 80cf 	blt.w	80218fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 802175c:	f11e 0e01 	adds.w	lr, lr, #1
 8021760:	f100 80c1 	bmi.w	80218e6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8021764:	4571      	cmp	r1, lr
 8021766:	f2c0 80be 	blt.w	80218e6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802176a:	3301      	adds	r3, #1
 802176c:	f100 80bb 	bmi.w	80218e6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8021770:	429a      	cmp	r2, r3
 8021772:	f2c0 80b8 	blt.w	80218e6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8021776:	f8dd 801c 	ldr.w	r8, [sp, #28]
 802177a:	46a9      	mov	r9, r5
 802177c:	f1b9 0f00 	cmp.w	r9, #0
 8021780:	f340 80d8 	ble.w	8021934 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8021784:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021786:	1421      	asrs	r1, r4, #16
 8021788:	ea4f 4026 	mov.w	r0, r6, asr #16
 802178c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8021790:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8021794:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8021798:	f100 8111 	bmi.w	80219be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802179c:	f10e 3aff 	add.w	sl, lr, #4294967295
 80217a0:	4551      	cmp	r1, sl
 80217a2:	f280 810c 	bge.w	80219be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80217a6:	2800      	cmp	r0, #0
 80217a8:	f2c0 8109 	blt.w	80219be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80217ac:	f103 3aff 	add.w	sl, r3, #4294967295
 80217b0:	4550      	cmp	r0, sl
 80217b2:	f280 8104 	bge.w	80219be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80217b6:	fa0f f38e 	sxth.w	r3, lr
 80217ba:	fb00 1103 	mla	r1, r0, r3, r1
 80217be:	9809      	ldr	r0, [sp, #36]	; 0x24
 80217c0:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 80217c4:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 80217c8:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 80217cc:	f1bc 0f00 	cmp.w	ip, #0
 80217d0:	d007      	beq.n	80217e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 80217d2:	005b      	lsls	r3, r3, #1
 80217d4:	eb0a 0003 	add.w	r0, sl, r3
 80217d8:	f83a 3003 	ldrh.w	r3, [sl, r3]
 80217dc:	930c      	str	r3, [sp, #48]	; 0x30
 80217de:	8843      	ldrh	r3, [r0, #2]
 80217e0:	930d      	str	r3, [sp, #52]	; 0x34
 80217e2:	ea4f 400e 	mov.w	r0, lr, lsl #16
 80217e6:	fb12 f30c 	smulbb	r3, r2, ip
 80217ea:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80217ee:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80217f2:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80217f6:	10db      	asrs	r3, r3, #3
 80217f8:	ea40 000e 	orr.w	r0, r0, lr
 80217fc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021800:	f1cc 0e10 	rsb	lr, ip, #16
 8021804:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8021808:	ebae 0e02 	sub.w	lr, lr, r2
 802180c:	ea4a 0101 	orr.w	r1, sl, r1
 8021810:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8021814:	4351      	muls	r1, r2
 8021816:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8021818:	9f08      	ldr	r7, [sp, #32]
 802181a:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 802181e:	fb0e 1e00 	mla	lr, lr, r0, r1
 8021822:	0410      	lsls	r0, r2, #16
 8021824:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8021828:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802182c:	4310      	orrs	r0, r2
 802182e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8021830:	990c      	ldr	r1, [sp, #48]	; 0x30
 8021832:	0412      	lsls	r2, r2, #16
 8021834:	fb03 e000 	mla	r0, r3, r0, lr
 8021838:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802183c:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8021840:	ea42 020e 	orr.w	r2, r2, lr
 8021844:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8021848:	fb03 0302 	mla	r3, r3, r2, r0
 802184c:	0d5a      	lsrs	r2, r3, #21
 802184e:	095b      	lsrs	r3, r3, #5
 8021850:	f8b8 0000 	ldrh.w	r0, [r8]
 8021854:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021858:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802185c:	4313      	orrs	r3, r2
 802185e:	b29b      	uxth	r3, r3
 8021860:	1201      	asrs	r1, r0, #8
 8021862:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8021866:	ea4f 2c23 	mov.w	ip, r3, asr #8
 802186a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802186e:	fb11 f107 	smulbb	r1, r1, r7
 8021872:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8021876:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 802187a:	00c0      	lsls	r0, r0, #3
 802187c:	fb0c 1c02 	mla	ip, ip, r2, r1
 8021880:	b2c0      	uxtb	r0, r0
 8021882:	10d9      	asrs	r1, r3, #3
 8021884:	00db      	lsls	r3, r3, #3
 8021886:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 802188a:	b2db      	uxtb	r3, r3
 802188c:	fb10 f007 	smulbb	r0, r0, r7
 8021890:	fa1f fc8c 	uxth.w	ip, ip
 8021894:	fb03 0302 	mla	r3, r3, r2, r0
 8021898:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802189c:	fb1e fe07 	smulbb	lr, lr, r7
 80218a0:	fb01 e102 	mla	r1, r1, r2, lr
 80218a4:	b29a      	uxth	r2, r3
 80218a6:	f10c 0301 	add.w	r3, ip, #1
 80218aa:	b289      	uxth	r1, r1
 80218ac:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80218b0:	1c53      	adds	r3, r2, #1
 80218b2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80218b6:	1c4a      	adds	r2, r1, #1
 80218b8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80218bc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80218c0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80218c4:	0949      	lsrs	r1, r1, #5
 80218c6:	ea43 030c 	orr.w	r3, r3, ip
 80218ca:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80218ce:	430b      	orrs	r3, r1
 80218d0:	f8a8 3000 	strh.w	r3, [r8]
 80218d4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80218d6:	441c      	add	r4, r3
 80218d8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80218da:	f108 0802 	add.w	r8, r8, #2
 80218de:	441e      	add	r6, r3
 80218e0:	f109 39ff 	add.w	r9, r9, #4294967295
 80218e4:	e74a      	b.n	802177c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80218e6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80218e8:	441c      	add	r4, r3
 80218ea:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80218ec:	441e      	add	r6, r3
 80218ee:	9b07      	ldr	r3, [sp, #28]
 80218f0:	3302      	adds	r3, #2
 80218f2:	3d01      	subs	r5, #1
 80218f4:	9307      	str	r3, [sp, #28]
 80218f6:	e722      	b.n	802173e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80218f8:	d022      	beq.n	8021940 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 80218fa:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80218fc:	1e6b      	subs	r3, r5, #1
 80218fe:	fb00 4003 	mla	r0, r0, r3, r4
 8021902:	1400      	asrs	r0, r0, #16
 8021904:	f53f af37 	bmi.w	8021776 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021908:	3901      	subs	r1, #1
 802190a:	4288      	cmp	r0, r1
 802190c:	f6bf af33 	bge.w	8021776 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021910:	9920      	ldr	r1, [sp, #128]	; 0x80
 8021912:	fb01 6303 	mla	r3, r1, r3, r6
 8021916:	141b      	asrs	r3, r3, #16
 8021918:	f53f af2d 	bmi.w	8021776 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802191c:	3a01      	subs	r2, #1
 802191e:	4293      	cmp	r3, r2
 8021920:	f6bf af29 	bge.w	8021776 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021924:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8021928:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 802192c:	46a8      	mov	r8, r5
 802192e:	f1b8 0f00 	cmp.w	r8, #0
 8021932:	dc5e      	bgt.n	80219f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8021934:	9b07      	ldr	r3, [sp, #28]
 8021936:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802193a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802193e:	9307      	str	r3, [sp, #28]
 8021940:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021942:	2b00      	cmp	r3, #0
 8021944:	f340 80f6 	ble.w	8021b34 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8021948:	ee30 0a04 	vadd.f32	s0, s0, s8
 802194c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021950:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021954:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021956:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802195a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802195e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021962:	eef0 6a62 	vmov.f32	s13, s5
 8021966:	ee61 7a27 	vmul.f32	s15, s2, s15
 802196a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802196e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021972:	ee16 4a90 	vmov	r4, s13
 8021976:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802197a:	eef0 6a43 	vmov.f32	s13, s6
 802197e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021982:	ee12 2a90 	vmov	r2, s5
 8021986:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802198a:	fb92 f3f3 	sdiv	r3, r2, r3
 802198e:	ee13 2a10 	vmov	r2, s6
 8021992:	931f      	str	r3, [sp, #124]	; 0x7c
 8021994:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021996:	fb92 f3f3 	sdiv	r3, r2, r3
 802199a:	9320      	str	r3, [sp, #128]	; 0x80
 802199c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802199e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80219a0:	3b01      	subs	r3, #1
 80219a2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80219a6:	930a      	str	r3, [sp, #40]	; 0x28
 80219a8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80219aa:	ee16 6a90 	vmov	r6, s13
 80219ae:	bf14      	ite	ne
 80219b0:	461d      	movne	r5, r3
 80219b2:	4615      	moveq	r5, r2
 80219b4:	eeb0 3a67 	vmov.f32	s6, s15
 80219b8:	eef0 2a47 	vmov.f32	s5, s14
 80219bc:	e6b0      	b.n	8021720 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80219be:	f111 0a01 	adds.w	sl, r1, #1
 80219c2:	d487      	bmi.n	80218d4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80219c4:	45d6      	cmp	lr, sl
 80219c6:	db85      	blt.n	80218d4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80219c8:	f110 0a01 	adds.w	sl, r0, #1
 80219cc:	d482      	bmi.n	80218d4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80219ce:	4553      	cmp	r3, sl
 80219d0:	db80      	blt.n	80218d4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80219d2:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80219d4:	9101      	str	r1, [sp, #4]
 80219d6:	b21b      	sxth	r3, r3
 80219d8:	e9cd 0202 	strd	r0, r2, [sp, #8]
 80219dc:	9300      	str	r3, [sp, #0]
 80219de:	e9cd c704 	strd	ip, r7, [sp, #16]
 80219e2:	fa0f f38e 	sxth.w	r3, lr
 80219e6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80219e8:	9811      	ldr	r0, [sp, #68]	; 0x44
 80219ea:	4641      	mov	r1, r8
 80219ec:	f7ff fdb4 	bl	8021558 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 80219f0:	e770      	b.n	80218d4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80219f2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80219f4:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80219f6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80219fa:	1430      	asrs	r0, r6, #16
 80219fc:	1423      	asrs	r3, r4, #16
 80219fe:	fb01 3000 	mla	r0, r1, r0, r3
 8021a02:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021a04:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8021a08:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8021a0c:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8021a10:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8021a14:	8858      	ldrh	r0, [r3, #2]
 8021a16:	f1be 0f00 	cmp.w	lr, #0
 8021a1a:	d00b      	beq.n	8021a34 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8021a1c:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8021a20:	3901      	subs	r1, #1
 8021a22:	0049      	lsls	r1, r1, #1
 8021a24:	3102      	adds	r1, #2
 8021a26:	eb03 0b01 	add.w	fp, r3, r1
 8021a2a:	5a5b      	ldrh	r3, [r3, r1]
 8021a2c:	930e      	str	r3, [sp, #56]	; 0x38
 8021a2e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8021a32:	930f      	str	r3, [sp, #60]	; 0x3c
 8021a34:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8021a38:	fb12 f30e 	smulbb	r3, r2, lr
 8021a3c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8021a40:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8021a44:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8021a48:	10db      	asrs	r3, r3, #3
 8021a4a:	ea41 010c 	orr.w	r1, r1, ip
 8021a4e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021a52:	f1ce 0c10 	rsb	ip, lr, #16
 8021a56:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021a5a:	ebac 0c02 	sub.w	ip, ip, r2
 8021a5e:	ea4b 0000 	orr.w	r0, fp, r0
 8021a62:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8021a66:	4350      	muls	r0, r2
 8021a68:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8021a6a:	9f08      	ldr	r7, [sp, #32]
 8021a6c:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8021a70:	fb0c 0c01 	mla	ip, ip, r1, r0
 8021a74:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8021a78:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8021a7c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8021a7e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8021a80:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021a84:	0412      	lsls	r2, r2, #16
 8021a86:	ea4b 0101 	orr.w	r1, fp, r1
 8021a8a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021a8e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8021a92:	fb03 c101 	mla	r1, r3, r1, ip
 8021a96:	4302      	orrs	r2, r0
 8021a98:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8021a9c:	fb03 1202 	mla	r2, r3, r2, r1
 8021aa0:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8021aa4:	0952      	lsrs	r2, r2, #5
 8021aa6:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8021aaa:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8021aae:	f8b9 2000 	ldrh.w	r2, [r9]
 8021ab2:	ea4b 0303 	orr.w	r3, fp, r3
 8021ab6:	b29b      	uxth	r3, r3
 8021ab8:	1211      	asrs	r1, r2, #8
 8021aba:	1218      	asrs	r0, r3, #8
 8021abc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8021ac0:	fb11 f107 	smulbb	r1, r1, r7
 8021ac4:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8021ac8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021acc:	00d2      	lsls	r2, r2, #3
 8021ace:	fb00 100a 	mla	r0, r0, sl, r1
 8021ad2:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8021ad6:	10d9      	asrs	r1, r3, #3
 8021ad8:	b2d2      	uxtb	r2, r2
 8021ada:	00db      	lsls	r3, r3, #3
 8021adc:	fb1c fc07 	smulbb	ip, ip, r7
 8021ae0:	fb12 f207 	smulbb	r2, r2, r7
 8021ae4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8021ae8:	b2db      	uxtb	r3, r3
 8021aea:	b280      	uxth	r0, r0
 8021aec:	fb01 c10a 	mla	r1, r1, sl, ip
 8021af0:	fb03 230a 	mla	r3, r3, sl, r2
 8021af4:	b29b      	uxth	r3, r3
 8021af6:	b289      	uxth	r1, r1
 8021af8:	1c42      	adds	r2, r0, #1
 8021afa:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8021afe:	f101 0c01 	add.w	ip, r1, #1
 8021b02:	1c5a      	adds	r2, r3, #1
 8021b04:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8021b08:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8021b0c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8021b0e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8021b12:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8021b16:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8021b1a:	4310      	orrs	r0, r2
 8021b1c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8021b20:	441c      	add	r4, r3
 8021b22:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021b24:	ea40 000c 	orr.w	r0, r0, ip
 8021b28:	f829 0b02 	strh.w	r0, [r9], #2
 8021b2c:	441e      	add	r6, r3
 8021b2e:	f108 38ff 	add.w	r8, r8, #4294967295
 8021b32:	e6fc      	b.n	802192e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8021b34:	b013      	add	sp, #76	; 0x4c
 8021b36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021b3a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8021b3a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8021b3e:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8021b42:	fb0e 4703 	mla	r7, lr, r3, r4
 8021b46:	f1be 0f00 	cmp.w	lr, #0
 8021b4a:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8021b4e:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8021b52:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8021b56:	8808      	ldrh	r0, [r1, #0]
 8021b58:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8021b5c:	db60      	blt.n	8021c20 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8021b5e:	45f1      	cmp	r9, lr
 8021b60:	dd5e      	ble.n	8021c20 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8021b62:	2c00      	cmp	r4, #0
 8021b64:	db5a      	blt.n	8021c1c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8021b66:	42a3      	cmp	r3, r4
 8021b68:	dd58      	ble.n	8021c1c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8021b6a:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8021b6e:	1c62      	adds	r2, r4, #1
 8021b70:	d459      	bmi.n	8021c26 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8021b72:	4293      	cmp	r3, r2
 8021b74:	dd57      	ble.n	8021c26 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8021b76:	2d00      	cmp	r5, #0
 8021b78:	d055      	beq.n	8021c26 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8021b7a:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8021b7e:	f11e 0e01 	adds.w	lr, lr, #1
 8021b82:	d454      	bmi.n	8021c2e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8021b84:	45f1      	cmp	r9, lr
 8021b86:	dd52      	ble.n	8021c2e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8021b88:	2e00      	cmp	r6, #0
 8021b8a:	d050      	beq.n	8021c2e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8021b8c:	2c00      	cmp	r4, #0
 8021b8e:	db4c      	blt.n	8021c2a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8021b90:	42a3      	cmp	r3, r4
 8021b92:	dd4a      	ble.n	8021c2a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8021b94:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8021b98:	3401      	adds	r4, #1
 8021b9a:	d405      	bmi.n	8021ba8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8021b9c:	42a3      	cmp	r3, r4
 8021b9e:	dd03      	ble.n	8021ba8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8021ba0:	b115      	cbz	r5, 8021ba8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8021ba2:	3301      	adds	r3, #1
 8021ba4:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8021ba8:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8021bac:	fb15 f406 	smulbb	r4, r5, r6
 8021bb0:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8021bb4:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8021bb8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8021bbc:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8021bc0:	ea43 0c0c 	orr.w	ip, r3, ip
 8021bc4:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8021bc8:	f1c6 0310 	rsb	r3, r6, #16
 8021bcc:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8021bd0:	1b5b      	subs	r3, r3, r5
 8021bd2:	ea4e 0707 	orr.w	r7, lr, r7
 8021bd6:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8021bda:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8021bde:	437d      	muls	r5, r7
 8021be0:	fb03 5c0c 	mla	ip, r3, ip, r5
 8021be4:	0403      	lsls	r3, r0, #16
 8021be6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8021bea:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021bee:	4318      	orrs	r0, r3
 8021bf0:	0413      	lsls	r3, r2, #16
 8021bf2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8021bf6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021bfa:	4313      	orrs	r3, r2
 8021bfc:	fb04 c000 	mla	r0, r4, r0, ip
 8021c00:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8021c04:	fb06 0003 	mla	r0, r6, r3, r0
 8021c08:	0d43      	lsrs	r3, r0, #21
 8021c0a:	0940      	lsrs	r0, r0, #5
 8021c0c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021c10:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021c14:	4318      	orrs	r0, r3
 8021c16:	8008      	strh	r0, [r1, #0]
 8021c18:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8021c1c:	4684      	mov	ip, r0
 8021c1e:	e7a6      	b.n	8021b6e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8021c20:	4607      	mov	r7, r0
 8021c22:	4684      	mov	ip, r0
 8021c24:	e7ab      	b.n	8021b7e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8021c26:	4607      	mov	r7, r0
 8021c28:	e7a9      	b.n	8021b7e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8021c2a:	4602      	mov	r2, r0
 8021c2c:	e7b4      	b.n	8021b98 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8021c2e:	4602      	mov	r2, r0
 8021c30:	e7ba      	b.n	8021ba8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08021c32 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021c32:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021c36:	b08f      	sub	sp, #60	; 0x3c
 8021c38:	461d      	mov	r5, r3
 8021c3a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8021c3c:	920c      	str	r2, [sp, #48]	; 0x30
 8021c3e:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8021c42:	9107      	str	r1, [sp, #28]
 8021c44:	6859      	ldr	r1, [r3, #4]
 8021c46:	681b      	ldr	r3, [r3, #0]
 8021c48:	900d      	str	r0, [sp, #52]	; 0x34
 8021c4a:	fb01 2707 	mla	r7, r1, r7, r2
 8021c4e:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8021c52:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021c54:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8021c58:	f8d3 8000 	ldr.w	r8, [r3]
 8021c5c:	9b07      	ldr	r3, [sp, #28]
 8021c5e:	2b00      	cmp	r3, #0
 8021c60:	dc03      	bgt.n	8021c6a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8021c62:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021c64:	2b00      	cmp	r3, #0
 8021c66:	f340 8181 	ble.w	8021f6c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8021c6a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021c6c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021c70:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021c74:	1e48      	subs	r0, r1, #1
 8021c76:	f102 3cff 	add.w	ip, r2, #4294967295
 8021c7a:	2d00      	cmp	r5, #0
 8021c7c:	f340 809b 	ble.w	8021db6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8021c80:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8021c84:	ea4f 4326 	mov.w	r3, r6, asr #16
 8021c88:	d406      	bmi.n	8021c98 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8021c8a:	4586      	cmp	lr, r0
 8021c8c:	da04      	bge.n	8021c98 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8021c8e:	2b00      	cmp	r3, #0
 8021c90:	db02      	blt.n	8021c98 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8021c92:	4563      	cmp	r3, ip
 8021c94:	f2c0 8090 	blt.w	8021db8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8021c98:	f11e 0e01 	adds.w	lr, lr, #1
 8021c9c:	f100 8084 	bmi.w	8021da8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8021ca0:	4571      	cmp	r1, lr
 8021ca2:	f2c0 8081 	blt.w	8021da8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8021ca6:	3301      	adds	r3, #1
 8021ca8:	d47e      	bmi.n	8021da8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8021caa:	429a      	cmp	r2, r3
 8021cac:	db7c      	blt.n	8021da8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8021cae:	46aa      	mov	sl, r5
 8021cb0:	46b9      	mov	r9, r7
 8021cb2:	f1ba 0f00 	cmp.w	sl, #0
 8021cb6:	f340 8099 	ble.w	8021dec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8021cba:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021cbc:	1421      	asrs	r1, r4, #16
 8021cbe:	ea4f 4026 	mov.w	r0, r6, asr #16
 8021cc2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8021cc6:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8021cca:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8021cce:	f100 80d0 	bmi.w	8021e72 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8021cd2:	f10e 3bff 	add.w	fp, lr, #4294967295
 8021cd6:	4559      	cmp	r1, fp
 8021cd8:	f280 80cb 	bge.w	8021e72 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8021cdc:	2800      	cmp	r0, #0
 8021cde:	f2c0 80c8 	blt.w	8021e72 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8021ce2:	f103 3bff 	add.w	fp, r3, #4294967295
 8021ce6:	4558      	cmp	r0, fp
 8021ce8:	f280 80c3 	bge.w	8021e72 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8021cec:	fa0f fe8e 	sxth.w	lr, lr
 8021cf0:	fb00 110e 	mla	r1, r0, lr, r1
 8021cf4:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8021cf8:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8021cfc:	8841      	ldrh	r1, [r0, #2]
 8021cfe:	f1bc 0f00 	cmp.w	ip, #0
 8021d02:	d00b      	beq.n	8021d1c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8021d04:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8021d08:	3b01      	subs	r3, #1
 8021d0a:	005b      	lsls	r3, r3, #1
 8021d0c:	3302      	adds	r3, #2
 8021d0e:	eb00 0e03 	add.w	lr, r0, r3
 8021d12:	5ac3      	ldrh	r3, [r0, r3]
 8021d14:	9308      	str	r3, [sp, #32]
 8021d16:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8021d1a:	9309      	str	r3, [sp, #36]	; 0x24
 8021d1c:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8021d20:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8021d24:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8021d28:	ea40 000b 	orr.w	r0, r0, fp
 8021d2c:	fb12 f30c 	smulbb	r3, r2, ip
 8021d30:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8021d34:	10db      	asrs	r3, r3, #3
 8021d36:	f1cc 0e10 	rsb	lr, ip, #16
 8021d3a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021d3e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8021d42:	ebae 0e02 	sub.w	lr, lr, r2
 8021d46:	ea4b 0101 	orr.w	r1, fp, r1
 8021d4a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8021d4e:	4351      	muls	r1, r2
 8021d50:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8021d52:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8021d56:	fb0e 1e00 	mla	lr, lr, r0, r1
 8021d5a:	0410      	lsls	r0, r2, #16
 8021d5c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8021d60:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021d64:	4310      	orrs	r0, r2
 8021d66:	9a08      	ldr	r2, [sp, #32]
 8021d68:	9908      	ldr	r1, [sp, #32]
 8021d6a:	0412      	lsls	r2, r2, #16
 8021d6c:	fb03 e000 	mla	r0, r3, r0, lr
 8021d70:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8021d74:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8021d78:	ea42 020e 	orr.w	r2, r2, lr
 8021d7c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8021d80:	fb03 0302 	mla	r3, r3, r2, r0
 8021d84:	0d5a      	lsrs	r2, r3, #21
 8021d86:	095b      	lsrs	r3, r3, #5
 8021d88:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021d8c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8021d90:	4313      	orrs	r3, r2
 8021d92:	f8a9 3000 	strh.w	r3, [r9]
 8021d96:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021d98:	441c      	add	r4, r3
 8021d9a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021d9c:	f109 0902 	add.w	r9, r9, #2
 8021da0:	441e      	add	r6, r3
 8021da2:	f10a 3aff 	add.w	sl, sl, #4294967295
 8021da6:	e784      	b.n	8021cb2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8021da8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021daa:	441c      	add	r4, r3
 8021dac:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021dae:	3d01      	subs	r5, #1
 8021db0:	441e      	add	r6, r3
 8021db2:	3702      	adds	r7, #2
 8021db4:	e761      	b.n	8021c7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8021db6:	d01d      	beq.n	8021df4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8021db8:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8021dba:	1e6b      	subs	r3, r5, #1
 8021dbc:	fb00 4003 	mla	r0, r0, r3, r4
 8021dc0:	1400      	asrs	r0, r0, #16
 8021dc2:	f53f af74 	bmi.w	8021cae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021dc6:	3901      	subs	r1, #1
 8021dc8:	4288      	cmp	r0, r1
 8021dca:	f6bf af70 	bge.w	8021cae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021dce:	991c      	ldr	r1, [sp, #112]	; 0x70
 8021dd0:	fb01 6303 	mla	r3, r1, r3, r6
 8021dd4:	141b      	asrs	r3, r3, #16
 8021dd6:	f53f af6a 	bmi.w	8021cae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021dda:	3a01      	subs	r2, #1
 8021ddc:	4293      	cmp	r3, r2
 8021dde:	f6bf af66 	bge.w	8021cae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021de2:	46a9      	mov	r9, r5
 8021de4:	46ba      	mov	sl, r7
 8021de6:	f1b9 0f00 	cmp.w	r9, #0
 8021dea:	dc5a      	bgt.n	8021ea2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8021dec:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8021df0:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8021df4:	9b07      	ldr	r3, [sp, #28]
 8021df6:	2b00      	cmp	r3, #0
 8021df8:	f340 80b8 	ble.w	8021f6c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8021dfc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021e00:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021e04:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021e08:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021e0a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021e0e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021e12:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021e16:	eef0 6a62 	vmov.f32	s13, s5
 8021e1a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021e1e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021e22:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021e26:	ee16 4a90 	vmov	r4, s13
 8021e2a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021e2e:	eef0 6a43 	vmov.f32	s13, s6
 8021e32:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021e36:	ee12 2a90 	vmov	r2, s5
 8021e3a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021e3e:	fb92 f3f3 	sdiv	r3, r2, r3
 8021e42:	ee13 2a10 	vmov	r2, s6
 8021e46:	931b      	str	r3, [sp, #108]	; 0x6c
 8021e48:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021e4a:	fb92 f3f3 	sdiv	r3, r2, r3
 8021e4e:	931c      	str	r3, [sp, #112]	; 0x70
 8021e50:	9b07      	ldr	r3, [sp, #28]
 8021e52:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8021e54:	3b01      	subs	r3, #1
 8021e56:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021e5a:	9307      	str	r3, [sp, #28]
 8021e5c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021e5e:	ee16 6a90 	vmov	r6, s13
 8021e62:	bf14      	ite	ne
 8021e64:	461d      	movne	r5, r3
 8021e66:	4615      	moveq	r5, r2
 8021e68:	eeb0 3a67 	vmov.f32	s6, s15
 8021e6c:	eef0 2a47 	vmov.f32	s5, s14
 8021e70:	e6f4      	b.n	8021c5c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8021e72:	f111 0b01 	adds.w	fp, r1, #1
 8021e76:	d48e      	bmi.n	8021d96 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8021e78:	45de      	cmp	lr, fp
 8021e7a:	db8c      	blt.n	8021d96 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8021e7c:	f110 0b01 	adds.w	fp, r0, #1
 8021e80:	d489      	bmi.n	8021d96 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8021e82:	455b      	cmp	r3, fp
 8021e84:	db87      	blt.n	8021d96 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8021e86:	b21b      	sxth	r3, r3
 8021e88:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8021e8c:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8021e90:	9300      	str	r3, [sp, #0]
 8021e92:	4642      	mov	r2, r8
 8021e94:	fa0f f38e 	sxth.w	r3, lr
 8021e98:	4649      	mov	r1, r9
 8021e9a:	980d      	ldr	r0, [sp, #52]	; 0x34
 8021e9c:	f7ff fe4d 	bl	8021b3a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8021ea0:	e779      	b.n	8021d96 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8021ea2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021ea4:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8021ea8:	1420      	asrs	r0, r4, #16
 8021eaa:	1431      	asrs	r1, r6, #16
 8021eac:	fb03 0101 	mla	r1, r3, r1, r0
 8021eb0:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8021eb4:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8021eb8:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8021ebc:	8841      	ldrh	r1, [r0, #2]
 8021ebe:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8021ec2:	f1be 0f00 	cmp.w	lr, #0
 8021ec6:	d00b      	beq.n	8021ee0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8021ec8:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8021ecc:	3b01      	subs	r3, #1
 8021ece:	005b      	lsls	r3, r3, #1
 8021ed0:	3302      	adds	r3, #2
 8021ed2:	eb00 0b03 	add.w	fp, r0, r3
 8021ed6:	5ac3      	ldrh	r3, [r0, r3]
 8021ed8:	930a      	str	r3, [sp, #40]	; 0x28
 8021eda:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8021ede:	930b      	str	r3, [sp, #44]	; 0x2c
 8021ee0:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8021ee4:	fb12 f30e 	smulbb	r3, r2, lr
 8021ee8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8021eec:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8021ef0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8021ef4:	10db      	asrs	r3, r3, #3
 8021ef6:	ea40 000c 	orr.w	r0, r0, ip
 8021efa:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021efe:	f1ce 0c10 	rsb	ip, lr, #16
 8021f02:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8021f06:	ebac 0c02 	sub.w	ip, ip, r2
 8021f0a:	ea4b 0101 	orr.w	r1, fp, r1
 8021f0e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8021f12:	4351      	muls	r1, r2
 8021f14:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8021f16:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8021f1a:	fb0c 1c00 	mla	ip, ip, r0, r1
 8021f1e:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8021f22:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 8021f26:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8021f28:	990a      	ldr	r1, [sp, #40]	; 0x28
 8021f2a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021f2e:	0412      	lsls	r2, r2, #16
 8021f30:	ea4b 0000 	orr.w	r0, fp, r0
 8021f34:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8021f38:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8021f3c:	fb03 c000 	mla	r0, r3, r0, ip
 8021f40:	ea42 0b0b 	orr.w	fp, r2, fp
 8021f44:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8021f48:	fb03 000b 	mla	r0, r3, fp, r0
 8021f4c:	0d43      	lsrs	r3, r0, #21
 8021f4e:	0940      	lsrs	r0, r0, #5
 8021f50:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021f54:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021f58:	4318      	orrs	r0, r3
 8021f5a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021f5c:	f82a 0b02 	strh.w	r0, [sl], #2
 8021f60:	441c      	add	r4, r3
 8021f62:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021f64:	f109 39ff 	add.w	r9, r9, #4294967295
 8021f68:	441e      	add	r6, r3
 8021f6a:	e73c      	b.n	8021de6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8021f6c:	b00f      	add	sp, #60	; 0x3c
 8021f6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021f72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8021f72:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021f76:	b085      	sub	sp, #20
 8021f78:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8021f7c:	9102      	str	r1, [sp, #8]
 8021f7e:	2c00      	cmp	r4, #0
 8021f80:	fb04 7103 	mla	r1, r4, r3, r7
 8021f84:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8021f88:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8021f8c:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8021f90:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8021f94:	f2c0 811b 	blt.w	80221ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8021f98:	45a6      	cmp	lr, r4
 8021f9a:	f340 8118 	ble.w	80221ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8021f9e:	2f00      	cmp	r7, #0
 8021fa0:	f2c0 8113 	blt.w	80221ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8021fa4:	42bb      	cmp	r3, r7
 8021fa6:	f340 8110 	ble.w	80221ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8021faa:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8021fae:	1c7a      	adds	r2, r7, #1
 8021fb0:	f100 8110 	bmi.w	80221d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8021fb4:	4293      	cmp	r3, r2
 8021fb6:	f340 810d 	ble.w	80221d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8021fba:	2e00      	cmp	r6, #0
 8021fbc:	f000 810c 	beq.w	80221d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8021fc0:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8021fc4:	3401      	adds	r4, #1
 8021fc6:	f100 810b 	bmi.w	80221e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8021fca:	45a6      	cmp	lr, r4
 8021fcc:	f340 8108 	ble.w	80221e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8021fd0:	2800      	cmp	r0, #0
 8021fd2:	f000 8108 	beq.w	80221e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 8021fd6:	2f00      	cmp	r7, #0
 8021fd8:	f2c0 8100 	blt.w	80221dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8021fdc:	42bb      	cmp	r3, r7
 8021fde:	f340 80fd 	ble.w	80221dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8021fe2:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8021fe6:	3701      	adds	r7, #1
 8021fe8:	f100 8100 	bmi.w	80221ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8021fec:	42bb      	cmp	r3, r7
 8021fee:	f340 80fd 	ble.w	80221ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8021ff2:	2e00      	cmp	r6, #0
 8021ff4:	f000 80fc 	beq.w	80221f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8021ff8:	3301      	adds	r3, #1
 8021ffa:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8021ffe:	b2b6      	uxth	r6, r6
 8022000:	b280      	uxth	r0, r0
 8022002:	fb00 fe06 	mul.w	lr, r0, r6
 8022006:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 802200a:	0136      	lsls	r6, r6, #4
 802200c:	eba6 070e 	sub.w	r7, r6, lr
 8022010:	b280      	uxth	r0, r0
 8022012:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8022016:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 802201a:	b2bf      	uxth	r7, r7
 802201c:	1a1b      	subs	r3, r3, r0
 802201e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8022022:	b29b      	uxth	r3, r3
 8022024:	fb0a f607 	mul.w	r6, sl, r7
 8022028:	ea4f 6914 	mov.w	r9, r4, lsr #24
 802202c:	fb0b 6603 	mla	r6, fp, r3, r6
 8022030:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8022034:	fb00 6609 	mla	r6, r0, r9, r6
 8022038:	fb0e 6608 	mla	r6, lr, r8, r6
 802203c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8022040:	9600      	str	r6, [sp, #0]
 8022042:	2e00      	cmp	r6, #0
 8022044:	f000 80be 	beq.w	80221c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 8022048:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802204c:	fb0b fc0c 	mul.w	ip, fp, ip
 8022050:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8022054:	fb0b f505 	mul.w	r5, fp, r5
 8022058:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 802205c:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8022060:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8022064:	44dc      	add	ip, fp
 8022066:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802206a:	9501      	str	r5, [sp, #4]
 802206c:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8022070:	9503      	str	r5, [sp, #12]
 8022072:	9d01      	ldr	r5, [sp, #4]
 8022074:	9e02      	ldr	r6, [sp, #8]
 8022076:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 802207a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 802207e:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8022082:	fb0a fc0c 	mul.w	ip, sl, ip
 8022086:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802208a:	ea4f 251c 	mov.w	r5, ip, lsr #8
 802208e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8022092:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8022096:	4465      	add	r5, ip
 8022098:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802209c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80220a0:	fb09 fc0c 	mul.w	ip, r9, ip
 80220a4:	fb09 f904 	mul.w	r9, r9, r4
 80220a8:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80220ac:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80220b0:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80220b4:	fb08 f404 	mul.w	r4, r8, r4
 80220b8:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80220bc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80220c0:	fb08 f802 	mul.w	r8, r8, r2
 80220c4:	fb0a fa01 	mul.w	sl, sl, r1
 80220c8:	0a22      	lsrs	r2, r4, #8
 80220ca:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80220ce:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80220d2:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80220d6:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80220da:	4414      	add	r4, r2
 80220dc:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80220e0:	f508 7280 	add.w	r2, r8, #256	; 0x100
 80220e4:	0a2d      	lsrs	r5, r5, #8
 80220e6:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80220ea:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80220ee:	9a03      	ldr	r2, [sp, #12]
 80220f0:	8836      	ldrh	r6, [r6, #0]
 80220f2:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80220f6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80220fa:	437d      	muls	r5, r7
 80220fc:	4461      	add	r1, ip
 80220fe:	0a24      	lsrs	r4, r4, #8
 8022100:	fb02 5503 	mla	r5, r2, r3, r5
 8022104:	0a09      	lsrs	r1, r1, #8
 8022106:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 802210a:	fb04 540e 	mla	r4, r4, lr, r5
 802210e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8022112:	fb01 4100 	mla	r1, r1, r0, r4
 8022116:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802211a:	0a09      	lsrs	r1, r1, #8
 802211c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022120:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8022124:	fb07 f70a 	mul.w	r7, r7, sl
 8022128:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802212c:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8022130:	fb03 7101 	mla	r1, r3, r1, r7
 8022134:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022138:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 802213c:	fb0e 1e08 	mla	lr, lr, r8, r1
 8022140:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8022144:	fb00 e101 	mla	r1, r0, r1, lr
 8022148:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 802214c:	9a00      	ldr	r2, [sp, #0]
 802214e:	b287      	uxth	r7, r0
 8022150:	437a      	muls	r2, r7
 8022152:	0a09      	lsrs	r1, r1, #8
 8022154:	1c53      	adds	r3, r2, #1
 8022156:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802215a:	4321      	orrs	r1, r4
 802215c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022160:	1235      	asrs	r5, r6, #8
 8022162:	0c0a      	lsrs	r2, r1, #16
 8022164:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8022168:	b2db      	uxtb	r3, r3
 802216a:	fb12 f207 	smulbb	r2, r2, r7
 802216e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022172:	fb05 2503 	mla	r5, r5, r3, r2
 8022176:	f3c1 2407 	ubfx	r4, r1, #8, #8
 802217a:	10f2      	asrs	r2, r6, #3
 802217c:	b2c8      	uxtb	r0, r1
 802217e:	00f6      	lsls	r6, r6, #3
 8022180:	fb14 f407 	smulbb	r4, r4, r7
 8022184:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8022188:	b2f6      	uxtb	r6, r6
 802218a:	fb10 f007 	smulbb	r0, r0, r7
 802218e:	fb02 4203 	mla	r2, r2, r3, r4
 8022192:	b2ad      	uxth	r5, r5
 8022194:	fb06 0303 	mla	r3, r6, r3, r0
 8022198:	b299      	uxth	r1, r3
 802219a:	b294      	uxth	r4, r2
 802219c:	1c6b      	adds	r3, r5, #1
 802219e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80221a2:	1c62      	adds	r2, r4, #1
 80221a4:	1c4b      	adds	r3, r1, #1
 80221a6:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80221aa:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80221ae:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80221b2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80221b6:	0952      	lsrs	r2, r2, #5
 80221b8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80221bc:	432b      	orrs	r3, r5
 80221be:	4313      	orrs	r3, r2
 80221c0:	9a02      	ldr	r2, [sp, #8]
 80221c2:	8013      	strh	r3, [r2, #0]
 80221c4:	b005      	add	sp, #20
 80221c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80221ca:	2500      	movs	r5, #0
 80221cc:	e6ef      	b.n	8021fae <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 80221ce:	2100      	movs	r1, #0
 80221d0:	460d      	mov	r5, r1
 80221d2:	e6f7      	b.n	8021fc4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80221d4:	2100      	movs	r1, #0
 80221d6:	e6f5      	b.n	8021fc4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80221d8:	4631      	mov	r1, r6
 80221da:	e6f3      	b.n	8021fc4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80221dc:	2400      	movs	r4, #0
 80221de:	e702      	b.n	8021fe6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 80221e0:	2200      	movs	r2, #0
 80221e2:	4614      	mov	r4, r2
 80221e4:	e70b      	b.n	8021ffe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80221e6:	4602      	mov	r2, r0
 80221e8:	4604      	mov	r4, r0
 80221ea:	e708      	b.n	8021ffe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80221ec:	2200      	movs	r2, #0
 80221ee:	e706      	b.n	8021ffe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80221f0:	4632      	mov	r2, r6
 80221f2:	e704      	b.n	8021ffe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

080221f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80221f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80221f8:	b09d      	sub	sp, #116	; 0x74
 80221fa:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 80221fe:	9219      	str	r2, [sp, #100]	; 0x64
 8022200:	9307      	str	r3, [sp, #28]
 8022202:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8022204:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8022208:	931a      	str	r3, [sp, #104]	; 0x68
 802220a:	9117      	str	r1, [sp, #92]	; 0x5c
 802220c:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8022210:	901b      	str	r0, [sp, #108]	; 0x6c
 8022212:	6850      	ldr	r0, [r2, #4]
 8022214:	6812      	ldr	r2, [r2, #0]
 8022216:	fb00 1303 	mla	r3, r0, r3, r1
 802221a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802221e:	930a      	str	r3, [sp, #40]	; 0x28
 8022220:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8022222:	681b      	ldr	r3, [r3, #0]
 8022224:	9310      	str	r3, [sp, #64]	; 0x40
 8022226:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 802222a:	930b      	str	r3, [sp, #44]	; 0x2c
 802222c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802222e:	2b00      	cmp	r3, #0
 8022230:	dc03      	bgt.n	802223a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8022232:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8022234:	2b00      	cmp	r3, #0
 8022236:	f340 8375 	ble.w	8022924 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802223a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 802223c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022240:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022244:	1e48      	subs	r0, r1, #1
 8022246:	1e57      	subs	r7, r2, #1
 8022248:	9b07      	ldr	r3, [sp, #28]
 802224a:	2b00      	cmp	r3, #0
 802224c:	f340 818e 	ble.w	802256c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8022250:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8022254:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022258:	d406      	bmi.n	8022268 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802225a:	4584      	cmp	ip, r0
 802225c:	da04      	bge.n	8022268 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802225e:	2b00      	cmp	r3, #0
 8022260:	db02      	blt.n	8022268 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8022262:	42bb      	cmp	r3, r7
 8022264:	f2c0 8183 	blt.w	802256e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8022268:	f11c 0c01 	adds.w	ip, ip, #1
 802226c:	f100 8173 	bmi.w	8022556 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8022270:	4561      	cmp	r1, ip
 8022272:	f2c0 8170 	blt.w	8022556 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8022276:	3301      	adds	r3, #1
 8022278:	f100 816d 	bmi.w	8022556 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802227c:	429a      	cmp	r2, r3
 802227e:	f2c0 816a 	blt.w	8022556 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8022282:	9b07      	ldr	r3, [sp, #28]
 8022284:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8022286:	9318      	str	r3, [sp, #96]	; 0x60
 8022288:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802228a:	2b00      	cmp	r3, #0
 802228c:	f340 818c 	ble.w	80225a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8022290:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8022292:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8022294:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8022298:	689b      	ldr	r3, [r3, #8]
 802229a:	1422      	asrs	r2, r4, #16
 802229c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80222a0:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80222a4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80222a8:	f100 81cd 	bmi.w	8022646 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80222ac:	f103 38ff 	add.w	r8, r3, #4294967295
 80222b0:	4542      	cmp	r2, r8
 80222b2:	f280 81c8 	bge.w	8022646 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80222b6:	f1bc 0f00 	cmp.w	ip, #0
 80222ba:	f2c0 81c4 	blt.w	8022646 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80222be:	f10e 38ff 	add.w	r8, lr, #4294967295
 80222c2:	45c4      	cmp	ip, r8
 80222c4:	f280 81bf 	bge.w	8022646 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80222c8:	b21b      	sxth	r3, r3
 80222ca:	fb0c 2203 	mla	r2, ip, r3, r2
 80222ce:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80222d0:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80222d4:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80222d8:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80222dc:	2800      	cmp	r0, #0
 80222de:	f000 81a9 	beq.w	8022634 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 80222e2:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80222e6:	950c      	str	r5, [sp, #48]	; 0x30
 80222e8:	0e2d      	lsrs	r5, r5, #24
 80222ea:	9513      	str	r5, [sp, #76]	; 0x4c
 80222ec:	b181      	cbz	r1, 8022310 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80222ee:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80222f2:	3b01      	subs	r3, #1
 80222f4:	009b      	lsls	r3, r3, #2
 80222f6:	3304      	adds	r3, #4
 80222f8:	eb08 0c03 	add.w	ip, r8, r3
 80222fc:	f858 3003 	ldr.w	r3, [r8, r3]
 8022300:	9308      	str	r3, [sp, #32]
 8022302:	0e1b      	lsrs	r3, r3, #24
 8022304:	9311      	str	r3, [sp, #68]	; 0x44
 8022306:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802230a:	930d      	str	r3, [sp, #52]	; 0x34
 802230c:	0e1b      	lsrs	r3, r3, #24
 802230e:	9314      	str	r3, [sp, #80]	; 0x50
 8022310:	b280      	uxth	r0, r0
 8022312:	b289      	uxth	r1, r1
 8022314:	fb00 f901 	mul.w	r9, r0, r1
 8022318:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802231c:	0100      	lsls	r0, r0, #4
 802231e:	eba0 0809 	sub.w	r8, r0, r9
 8022322:	b289      	uxth	r1, r1
 8022324:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8022328:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802232a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802232c:	fa1f f888 	uxth.w	r8, r8
 8022330:	1a5b      	subs	r3, r3, r1
 8022332:	b29b      	uxth	r3, r3
 8022334:	fb08 f000 	mul.w	r0, r8, r0
 8022338:	fb03 000e 	mla	r0, r3, lr, r0
 802233c:	fb01 0005 	mla	r0, r1, r5, r0
 8022340:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8022342:	fb09 0005 	mla	r0, r9, r5, r0
 8022346:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802234a:	2800      	cmp	r0, #0
 802234c:	f000 80fa 	beq.w	8022544 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8022350:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8022354:	d01b      	beq.n	802238e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8022356:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 802235a:	fb0e fa0a 	mul.w	sl, lr, sl
 802235e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8022362:	fb0e fe02 	mul.w	lr, lr, r2
 8022366:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802236a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802236e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8022372:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8022376:	4452      	add	r2, sl
 8022378:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802237c:	0a12      	lsrs	r2, r2, #8
 802237e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022382:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8022386:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802238a:	ea42 020c 	orr.w	r2, r2, ip
 802238e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8022390:	2dff      	cmp	r5, #255	; 0xff
 8022392:	d021      	beq.n	80223d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8022394:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8022396:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802239a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802239c:	fb05 fb0b 	mul.w	fp, r5, fp
 80223a0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80223a2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80223a6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80223a8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80223ac:	fb05 fa0a 	mul.w	sl, r5, sl
 80223b0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80223b4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80223b8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80223bc:	44de      	add	lr, fp
 80223be:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80223c2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80223c6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80223ca:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80223ce:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80223d2:	ea4e 050a 	orr.w	r5, lr, sl
 80223d6:	950c      	str	r5, [sp, #48]	; 0x30
 80223d8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80223da:	2dff      	cmp	r5, #255	; 0xff
 80223dc:	d021      	beq.n	8022422 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 80223de:	9d08      	ldr	r5, [sp, #32]
 80223e0:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80223e4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80223e6:	fb05 fb0b 	mul.w	fp, r5, fp
 80223ea:	9d08      	ldr	r5, [sp, #32]
 80223ec:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80223f0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80223f2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80223f6:	fb05 fa0a 	mul.w	sl, r5, sl
 80223fa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80223fe:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022402:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022406:	44de      	add	lr, fp
 8022408:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802240c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022410:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022414:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022418:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802241c:	ea4e 050a 	orr.w	r5, lr, sl
 8022420:	9508      	str	r5, [sp, #32]
 8022422:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8022424:	2dff      	cmp	r5, #255	; 0xff
 8022426:	d021      	beq.n	802246c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8022428:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802242a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802242e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8022430:	fb05 fb0b 	mul.w	fp, r5, fp
 8022434:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8022436:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802243a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802243c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022440:	fb05 fa0a 	mul.w	sl, r5, sl
 8022444:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022448:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802244c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022450:	44de      	add	lr, fp
 8022452:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022456:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802245a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802245e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022462:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022466:	ea4e 050a 	orr.w	r5, lr, sl
 802246a:	950d      	str	r5, [sp, #52]	; 0x34
 802246c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802246e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8022472:	9d08      	ldr	r5, [sp, #32]
 8022474:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8022478:	fb08 fc0c 	mul.w	ip, r8, ip
 802247c:	fb03 cc0e 	mla	ip, r3, lr, ip
 8022480:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8022484:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8022486:	fb01 cc0e 	mla	ip, r1, lr, ip
 802248a:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802248e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8022490:	fb09 cc0e 	mla	ip, r9, lr, ip
 8022494:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8022498:	fb08 f80e 	mul.w	r8, r8, lr
 802249c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80224a0:	fb03 8202 	mla	r2, r3, r2, r8
 80224a4:	9b08      	ldr	r3, [sp, #32]
 80224a6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80224a8:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 80224ac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80224ae:	fb01 220a 	mla	r2, r1, sl, r2
 80224b2:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 80224b6:	fb09 2901 	mla	r9, r9, r1, r2
 80224ba:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80224bc:	883b      	ldrh	r3, [r7, #0]
 80224be:	4342      	muls	r2, r0
 80224c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80224c4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80224c8:	1c50      	adds	r0, r2, #1
 80224ca:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80224ce:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80224d2:	ea4c 0c09 	orr.w	ip, ip, r9
 80224d6:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80224da:	1219      	asrs	r1, r3, #8
 80224dc:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80224e0:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80224e4:	b2c0      	uxtb	r0, r0
 80224e6:	fb12 f205 	smulbb	r2, r2, r5
 80224ea:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80224ee:	fb01 2100 	mla	r1, r1, r0, r2
 80224f2:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80224f6:	10da      	asrs	r2, r3, #3
 80224f8:	fa5f fc8c 	uxtb.w	ip, ip
 80224fc:	00db      	lsls	r3, r3, #3
 80224fe:	fb1c fc05 	smulbb	ip, ip, r5
 8022502:	b2db      	uxtb	r3, r3
 8022504:	b289      	uxth	r1, r1
 8022506:	fb03 c300 	mla	r3, r3, r0, ip
 802250a:	fa1f fc83 	uxth.w	ip, r3
 802250e:	1c4b      	adds	r3, r1, #1
 8022510:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8022514:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8022518:	fb1e fe05 	smulbb	lr, lr, r5
 802251c:	f10c 0301 	add.w	r3, ip, #1
 8022520:	fb02 e200 	mla	r2, r2, r0, lr
 8022524:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8022528:	b292      	uxth	r2, r2
 802252a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 802252e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022532:	430b      	orrs	r3, r1
 8022534:	1c51      	adds	r1, r2, #1
 8022536:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802253a:	0952      	lsrs	r2, r2, #5
 802253c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022540:	4313      	orrs	r3, r2
 8022542:	803b      	strh	r3, [r7, #0]
 8022544:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8022546:	441c      	add	r4, r3
 8022548:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802254a:	441e      	add	r6, r3
 802254c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802254e:	3b01      	subs	r3, #1
 8022550:	3702      	adds	r7, #2
 8022552:	9318      	str	r3, [sp, #96]	; 0x60
 8022554:	e698      	b.n	8022288 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022556:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8022558:	441c      	add	r4, r3
 802255a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802255c:	441e      	add	r6, r3
 802255e:	9b07      	ldr	r3, [sp, #28]
 8022560:	3b01      	subs	r3, #1
 8022562:	9307      	str	r3, [sp, #28]
 8022564:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022566:	3302      	adds	r3, #2
 8022568:	930a      	str	r3, [sp, #40]	; 0x28
 802256a:	e66d      	b.n	8022248 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 802256c:	d023      	beq.n	80225b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802256e:	9b07      	ldr	r3, [sp, #28]
 8022570:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8022572:	3b01      	subs	r3, #1
 8022574:	fb00 4003 	mla	r0, r0, r3, r4
 8022578:	1400      	asrs	r0, r0, #16
 802257a:	f53f ae82 	bmi.w	8022282 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802257e:	3901      	subs	r1, #1
 8022580:	4288      	cmp	r0, r1
 8022582:	f6bf ae7e 	bge.w	8022282 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8022586:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8022588:	fb01 6303 	mla	r3, r1, r3, r6
 802258c:	141b      	asrs	r3, r3, #16
 802258e:	f53f ae78 	bmi.w	8022282 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8022592:	3a01      	subs	r2, #1
 8022594:	4293      	cmp	r3, r2
 8022596:	f6bf ae74 	bge.w	8022282 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802259a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802259e:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 80225a2:	f1bb 0f00 	cmp.w	fp, #0
 80225a6:	dc6c      	bgt.n	8022682 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80225a8:	9b07      	ldr	r3, [sp, #28]
 80225aa:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80225ae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80225b0:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80225b4:	930a      	str	r3, [sp, #40]	; 0x28
 80225b6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80225b8:	2b00      	cmp	r3, #0
 80225ba:	f340 81b3 	ble.w	8022924 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80225be:	ee30 0a04 	vadd.f32	s0, s0, s8
 80225c2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80225c6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80225ca:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80225cc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80225d0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80225d4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80225d8:	eef0 6a62 	vmov.f32	s13, s5
 80225dc:	ee61 7a27 	vmul.f32	s15, s2, s15
 80225e0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80225e4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80225e8:	ee16 4a90 	vmov	r4, s13
 80225ec:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80225f0:	eef0 6a43 	vmov.f32	s13, s6
 80225f4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80225f8:	ee12 2a90 	vmov	r2, s5
 80225fc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022600:	fb92 f3f3 	sdiv	r3, r2, r3
 8022604:	ee13 2a10 	vmov	r2, s6
 8022608:	9329      	str	r3, [sp, #164]	; 0xa4
 802260a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802260c:	fb92 f3f3 	sdiv	r3, r2, r3
 8022610:	932a      	str	r3, [sp, #168]	; 0xa8
 8022612:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8022614:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8022616:	3b01      	subs	r3, #1
 8022618:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802261c:	9317      	str	r3, [sp, #92]	; 0x5c
 802261e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8022620:	bf08      	it	eq
 8022622:	4613      	moveq	r3, r2
 8022624:	ee16 6a90 	vmov	r6, s13
 8022628:	9307      	str	r3, [sp, #28]
 802262a:	eeb0 3a67 	vmov.f32	s6, s15
 802262e:	eef0 2a47 	vmov.f32	s5, s14
 8022632:	e5fb      	b.n	802222c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8022634:	2900      	cmp	r1, #0
 8022636:	f43f ae6b 	beq.w	8022310 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802263a:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 802263e:	9308      	str	r3, [sp, #32]
 8022640:	0e1b      	lsrs	r3, r3, #24
 8022642:	9311      	str	r3, [sp, #68]	; 0x44
 8022644:	e664      	b.n	8022310 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8022646:	f112 0801 	adds.w	r8, r2, #1
 802264a:	f53f af7b 	bmi.w	8022544 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802264e:	4543      	cmp	r3, r8
 8022650:	f6ff af78 	blt.w	8022544 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8022654:	f11c 0801 	adds.w	r8, ip, #1
 8022658:	f53f af74 	bmi.w	8022544 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802265c:	45c6      	cmp	lr, r8
 802265e:	f6ff af71 	blt.w	8022544 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8022662:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8022664:	9201      	str	r2, [sp, #4]
 8022666:	fa0f f28e 	sxth.w	r2, lr
 802266a:	e9cd 1504 	strd	r1, r5, [sp, #16]
 802266e:	e9cd c002 	strd	ip, r0, [sp, #8]
 8022672:	9200      	str	r2, [sp, #0]
 8022674:	b21b      	sxth	r3, r3
 8022676:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8022678:	981b      	ldr	r0, [sp, #108]	; 0x6c
 802267a:	4639      	mov	r1, r7
 802267c:	f7ff fc79 	bl	8021f72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8022680:	e760      	b.n	8022544 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8022682:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8022684:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8022686:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802268a:	1427      	asrs	r7, r4, #16
 802268c:	1433      	asrs	r3, r6, #16
 802268e:	fb01 7303 	mla	r3, r1, r3, r7
 8022692:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8022696:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802269a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802269e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80226a2:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80226a6:	2a00      	cmp	r2, #0
 80226a8:	f000 8133 	beq.w	8022912 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 80226ac:	687d      	ldr	r5, [r7, #4]
 80226ae:	950e      	str	r5, [sp, #56]	; 0x38
 80226b0:	0e2d      	lsrs	r5, r5, #24
 80226b2:	9515      	str	r5, [sp, #84]	; 0x54
 80226b4:	b178      	cbz	r0, 80226d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80226b6:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 80226ba:	3901      	subs	r1, #1
 80226bc:	0089      	lsls	r1, r1, #2
 80226be:	3104      	adds	r1, #4
 80226c0:	eb07 0e01 	add.w	lr, r7, r1
 80226c4:	5879      	ldr	r1, [r7, r1]
 80226c6:	9109      	str	r1, [sp, #36]	; 0x24
 80226c8:	0e09      	lsrs	r1, r1, #24
 80226ca:	9112      	str	r1, [sp, #72]	; 0x48
 80226cc:	f8de 1004 	ldr.w	r1, [lr, #4]
 80226d0:	910f      	str	r1, [sp, #60]	; 0x3c
 80226d2:	0e09      	lsrs	r1, r1, #24
 80226d4:	9116      	str	r1, [sp, #88]	; 0x58
 80226d6:	b292      	uxth	r2, r2
 80226d8:	b280      	uxth	r0, r0
 80226da:	fb02 f800 	mul.w	r8, r2, r0
 80226de:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80226e2:	0112      	lsls	r2, r2, #4
 80226e4:	eba2 0e08 	sub.w	lr, r2, r8
 80226e8:	b280      	uxth	r0, r0
 80226ea:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80226ee:	9915      	ldr	r1, [sp, #84]	; 0x54
 80226f0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80226f2:	fa1f fe8e 	uxth.w	lr, lr
 80226f6:	1a12      	subs	r2, r2, r0
 80226f8:	b292      	uxth	r2, r2
 80226fa:	fb0e f101 	mul.w	r1, lr, r1
 80226fe:	fb02 110c 	mla	r1, r2, ip, r1
 8022702:	fb00 1105 	mla	r1, r0, r5, r1
 8022706:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8022708:	fb08 1105 	mla	r1, r8, r5, r1
 802270c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8022710:	2900      	cmp	r1, #0
 8022712:	f000 80f5 	beq.w	8022900 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 8022716:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802271a:	d019      	beq.n	8022750 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 802271c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8022720:	fb0c fa0a 	mul.w	sl, ip, sl
 8022724:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022728:	fb0c fc03 	mul.w	ip, ip, r3
 802272c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8022730:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022734:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8022738:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802273c:	4453      	add	r3, sl
 802273e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8022742:	0a1b      	lsrs	r3, r3, #8
 8022744:	0a3f      	lsrs	r7, r7, #8
 8022746:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802274a:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802274e:	433b      	orrs	r3, r7
 8022750:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8022752:	2dff      	cmp	r5, #255	; 0xff
 8022754:	d020      	beq.n	8022798 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8022756:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8022758:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802275c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802275e:	436f      	muls	r7, r5
 8022760:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8022762:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8022766:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8022768:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802276c:	fb05 fa0a 	mul.w	sl, r5, sl
 8022770:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022774:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022778:	44bc      	add	ip, r7
 802277a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802277e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022782:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022786:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802278a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802278e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022792:	ea4c 050a 	orr.w	r5, ip, sl
 8022796:	950e      	str	r5, [sp, #56]	; 0x38
 8022798:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802279a:	2dff      	cmp	r5, #255	; 0xff
 802279c:	d020      	beq.n	80227e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 802279e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80227a0:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80227a4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80227a6:	436f      	muls	r7, r5
 80227a8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80227aa:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80227ae:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80227b0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80227b4:	fb05 fa0a 	mul.w	sl, r5, sl
 80227b8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80227bc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80227c0:	44bc      	add	ip, r7
 80227c2:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80227c6:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80227ca:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80227ce:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80227d2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80227d6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80227da:	ea4c 050a 	orr.w	r5, ip, sl
 80227de:	9509      	str	r5, [sp, #36]	; 0x24
 80227e0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80227e2:	2dff      	cmp	r5, #255	; 0xff
 80227e4:	d020      	beq.n	8022828 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 80227e6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80227e8:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80227ec:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80227ee:	436f      	muls	r7, r5
 80227f0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80227f2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80227f6:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80227f8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80227fc:	fb05 fa0a 	mul.w	sl, r5, sl
 8022800:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022804:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022808:	44bc      	add	ip, r7
 802280a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802280e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022812:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022816:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802281a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802281e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022822:	ea4c 050a 	orr.w	r5, ip, sl
 8022826:	950f      	str	r5, [sp, #60]	; 0x3c
 8022828:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802282a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802282e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8022830:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8022834:	fb0e f707 	mul.w	r7, lr, r7
 8022838:	fb02 770c 	mla	r7, r2, ip, r7
 802283c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8022840:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8022842:	fb00 770c 	mla	r7, r0, ip, r7
 8022846:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802284a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802284c:	fb08 770c 	mla	r7, r8, ip, r7
 8022850:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8022854:	fb0e fe0c 	mul.w	lr, lr, ip
 8022858:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802285c:	fb02 e303 	mla	r3, r2, r3, lr
 8022860:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8022862:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8022864:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8022868:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802286a:	fb00 330a 	mla	r3, r0, sl, r3
 802286e:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8022872:	fb08 3c0c 	mla	ip, r8, ip, r3
 8022876:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022878:	f8b9 0000 	ldrh.w	r0, [r9]
 802287c:	4359      	muls	r1, r3
 802287e:	0a3f      	lsrs	r7, r7, #8
 8022880:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022884:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8022888:	1c4b      	adds	r3, r1, #1
 802288a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802288e:	ea47 070c 	orr.w	r7, r7, ip
 8022892:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8022896:	1202      	asrs	r2, r0, #8
 8022898:	0c3b      	lsrs	r3, r7, #16
 802289a:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802289e:	b2c9      	uxtb	r1, r1
 80228a0:	fb13 f305 	smulbb	r3, r3, r5
 80228a4:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80228a8:	fb02 3201 	mla	r2, r2, r1, r3
 80228ac:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80228b0:	10c3      	asrs	r3, r0, #3
 80228b2:	b2ff      	uxtb	r7, r7
 80228b4:	00c0      	lsls	r0, r0, #3
 80228b6:	b2c0      	uxtb	r0, r0
 80228b8:	fb17 f705 	smulbb	r7, r7, r5
 80228bc:	fb00 7001 	mla	r0, r0, r1, r7
 80228c0:	b292      	uxth	r2, r2
 80228c2:	fb1c fc05 	smulbb	ip, ip, r5
 80228c6:	b280      	uxth	r0, r0
 80228c8:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80228cc:	fb03 c301 	mla	r3, r3, r1, ip
 80228d0:	1c51      	adds	r1, r2, #1
 80228d2:	f100 0c01 	add.w	ip, r0, #1
 80228d6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80228da:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 80228de:	b29b      	uxth	r3, r3
 80228e0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80228e4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80228e8:	ea4c 0202 	orr.w	r2, ip, r2
 80228ec:	f103 0c01 	add.w	ip, r3, #1
 80228f0:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80228f4:	095b      	lsrs	r3, r3, #5
 80228f6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80228fa:	431a      	orrs	r2, r3
 80228fc:	f8a9 2000 	strh.w	r2, [r9]
 8022900:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8022902:	441c      	add	r4, r3
 8022904:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8022906:	f109 0902 	add.w	r9, r9, #2
 802290a:	441e      	add	r6, r3
 802290c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8022910:	e647      	b.n	80225a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8022912:	2800      	cmp	r0, #0
 8022914:	f43f aedf 	beq.w	80226d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8022918:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 802291c:	9109      	str	r1, [sp, #36]	; 0x24
 802291e:	0e09      	lsrs	r1, r1, #24
 8022920:	9112      	str	r1, [sp, #72]	; 0x48
 8022922:	e6d8      	b.n	80226d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8022924:	b01d      	add	sp, #116	; 0x74
 8022926:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802292a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 802292a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802292e:	b085      	sub	sp, #20
 8022930:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8022934:	9102      	str	r1, [sp, #8]
 8022936:	2c00      	cmp	r4, #0
 8022938:	fb04 7103 	mla	r1, r4, r3, r7
 802293c:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8022940:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8022944:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8022948:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 802294c:	f2c0 810c 	blt.w	8022b68 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8022950:	45a6      	cmp	lr, r4
 8022952:	f340 8109 	ble.w	8022b68 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8022956:	2f00      	cmp	r7, #0
 8022958:	f2c0 8104 	blt.w	8022b64 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 802295c:	42bb      	cmp	r3, r7
 802295e:	f340 8101 	ble.w	8022b64 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8022962:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8022966:	1c7a      	adds	r2, r7, #1
 8022968:	f100 8101 	bmi.w	8022b6e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 802296c:	4293      	cmp	r3, r2
 802296e:	f340 80fe 	ble.w	8022b6e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8022972:	2e00      	cmp	r6, #0
 8022974:	f000 80fd 	beq.w	8022b72 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8022978:	f8dc 1004 	ldr.w	r1, [ip, #4]
 802297c:	3401      	adds	r4, #1
 802297e:	f100 80fc 	bmi.w	8022b7a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8022982:	45a6      	cmp	lr, r4
 8022984:	f340 80f9 	ble.w	8022b7a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8022988:	2800      	cmp	r0, #0
 802298a:	f000 80f9 	beq.w	8022b80 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 802298e:	2f00      	cmp	r7, #0
 8022990:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8022994:	f2c0 80ef 	blt.w	8022b76 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8022998:	42bb      	cmp	r3, r7
 802299a:	f340 80ec 	ble.w	8022b76 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 802299e:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 80229a2:	3701      	adds	r7, #1
 80229a4:	f100 80ef 	bmi.w	8022b86 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 80229a8:	42bb      	cmp	r3, r7
 80229aa:	f340 80ec 	ble.w	8022b86 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 80229ae:	2e00      	cmp	r6, #0
 80229b0:	f000 80eb 	beq.w	8022b8a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 80229b4:	6852      	ldr	r2, [r2, #4]
 80229b6:	b2b6      	uxth	r6, r6
 80229b8:	b280      	uxth	r0, r0
 80229ba:	fb00 fe06 	mul.w	lr, r0, r6
 80229be:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80229c2:	0136      	lsls	r6, r6, #4
 80229c4:	eba6 070e 	sub.w	r7, r6, lr
 80229c8:	b280      	uxth	r0, r0
 80229ca:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 80229ce:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80229d2:	b2bf      	uxth	r7, r7
 80229d4:	1a1b      	subs	r3, r3, r0
 80229d6:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80229da:	b29b      	uxth	r3, r3
 80229dc:	fb07 f60a 	mul.w	r6, r7, sl
 80229e0:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80229e4:	fb0b 6603 	mla	r6, fp, r3, r6
 80229e8:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80229ec:	fb00 6609 	mla	r6, r0, r9, r6
 80229f0:	fb0e 6608 	mla	r6, lr, r8, r6
 80229f4:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80229f8:	9600      	str	r6, [sp, #0]
 80229fa:	2e00      	cmp	r6, #0
 80229fc:	f000 80af 	beq.w	8022b5e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8022a00:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8022a04:	fb0b fc0c 	mul.w	ip, fp, ip
 8022a08:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8022a0c:	fb0b f505 	mul.w	r5, fp, r5
 8022a10:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8022a14:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8022a18:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8022a1c:	44dc      	add	ip, fp
 8022a1e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022a22:	9501      	str	r5, [sp, #4]
 8022a24:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8022a28:	9503      	str	r5, [sp, #12]
 8022a2a:	9d01      	ldr	r5, [sp, #4]
 8022a2c:	9e02      	ldr	r6, [sp, #8]
 8022a2e:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8022a32:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8022a36:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8022a3a:	fb0a fc0c 	mul.w	ip, sl, ip
 8022a3e:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8022a42:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8022a46:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8022a4a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8022a4e:	4465      	add	r5, ip
 8022a50:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022a54:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8022a58:	fb09 fc0c 	mul.w	ip, r9, ip
 8022a5c:	fb09 f904 	mul.w	r9, r9, r4
 8022a60:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8022a64:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8022a68:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8022a6c:	fb08 f404 	mul.w	r4, r8, r4
 8022a70:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8022a74:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8022a78:	fb08 f802 	mul.w	r8, r8, r2
 8022a7c:	fb0a fa01 	mul.w	sl, sl, r1
 8022a80:	0a22      	lsrs	r2, r4, #8
 8022a82:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8022a86:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8022a8a:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8022a8e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8022a92:	4414      	add	r4, r2
 8022a94:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8022a98:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8022a9c:	0a2d      	lsrs	r5, r5, #8
 8022a9e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8022aa2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8022aa6:	9a03      	ldr	r2, [sp, #12]
 8022aa8:	8836      	ldrh	r6, [r6, #0]
 8022aaa:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8022aae:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8022ab2:	437d      	muls	r5, r7
 8022ab4:	4461      	add	r1, ip
 8022ab6:	0a24      	lsrs	r4, r4, #8
 8022ab8:	fb02 5503 	mla	r5, r2, r3, r5
 8022abc:	0a09      	lsrs	r1, r1, #8
 8022abe:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8022ac2:	fb04 540e 	mla	r4, r4, lr, r5
 8022ac6:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8022aca:	fb01 4100 	mla	r1, r1, r0, r4
 8022ace:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022ad2:	0a09      	lsrs	r1, r1, #8
 8022ad4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022ad8:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8022adc:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8022ae0:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8022ae4:	fb07 f70a 	mul.w	r7, r7, sl
 8022ae8:	fb03 7101 	mla	r1, r3, r1, r7
 8022aec:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022af0:	9b00      	ldr	r3, [sp, #0]
 8022af2:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8022af6:	fb0e 1e08 	mla	lr, lr, r8, r1
 8022afa:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8022afe:	fb00 e101 	mla	r1, r0, r1, lr
 8022b02:	43da      	mvns	r2, r3
 8022b04:	1233      	asrs	r3, r6, #8
 8022b06:	b2d2      	uxtb	r2, r2
 8022b08:	10f0      	asrs	r0, r6, #3
 8022b0a:	0a09      	lsrs	r1, r1, #8
 8022b0c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8022b10:	00f6      	lsls	r6, r6, #3
 8022b12:	4353      	muls	r3, r2
 8022b14:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8022b18:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8022b1c:	b2f6      	uxtb	r6, r6
 8022b1e:	4321      	orrs	r1, r4
 8022b20:	4350      	muls	r0, r2
 8022b22:	4356      	muls	r6, r2
 8022b24:	1c5a      	adds	r2, r3, #1
 8022b26:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022b2a:	0c0b      	lsrs	r3, r1, #16
 8022b2c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022b30:	1c42      	adds	r2, r0, #1
 8022b32:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022b36:	0a0a      	lsrs	r2, r1, #8
 8022b38:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8022b3c:	021b      	lsls	r3, r3, #8
 8022b3e:	00d2      	lsls	r2, r2, #3
 8022b40:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022b44:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8022b48:	4313      	orrs	r3, r2
 8022b4a:	1c72      	adds	r2, r6, #1
 8022b4c:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8022b50:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8022b54:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8022b58:	4319      	orrs	r1, r3
 8022b5a:	9b02      	ldr	r3, [sp, #8]
 8022b5c:	8019      	strh	r1, [r3, #0]
 8022b5e:	b005      	add	sp, #20
 8022b60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022b64:	2500      	movs	r5, #0
 8022b66:	e6fe      	b.n	8022966 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8022b68:	2100      	movs	r1, #0
 8022b6a:	460d      	mov	r5, r1
 8022b6c:	e706      	b.n	802297c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8022b6e:	2100      	movs	r1, #0
 8022b70:	e704      	b.n	802297c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8022b72:	4631      	mov	r1, r6
 8022b74:	e702      	b.n	802297c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8022b76:	2400      	movs	r4, #0
 8022b78:	e713      	b.n	80229a2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8022b7a:	2200      	movs	r2, #0
 8022b7c:	4614      	mov	r4, r2
 8022b7e:	e71a      	b.n	80229b6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8022b80:	4602      	mov	r2, r0
 8022b82:	4604      	mov	r4, r0
 8022b84:	e717      	b.n	80229b6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8022b86:	2200      	movs	r2, #0
 8022b88:	e715      	b.n	80229b6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8022b8a:	4632      	mov	r2, r6
 8022b8c:	e713      	b.n	80229b6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08022b90 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022b90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022b94:	b09b      	sub	sp, #108	; 0x6c
 8022b96:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8022b9a:	9218      	str	r2, [sp, #96]	; 0x60
 8022b9c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8022b9e:	9116      	str	r1, [sp, #88]	; 0x58
 8022ba0:	9307      	str	r3, [sp, #28]
 8022ba2:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8022ba6:	9019      	str	r0, [sp, #100]	; 0x64
 8022ba8:	6850      	ldr	r0, [r2, #4]
 8022baa:	6812      	ldr	r2, [r2, #0]
 8022bac:	fb00 1303 	mla	r3, r0, r3, r1
 8022bb0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022bb4:	930a      	str	r3, [sp, #40]	; 0x28
 8022bb6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022bb8:	681b      	ldr	r3, [r3, #0]
 8022bba:	930f      	str	r3, [sp, #60]	; 0x3c
 8022bbc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8022bbe:	2b00      	cmp	r3, #0
 8022bc0:	dc03      	bgt.n	8022bca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8022bc2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022bc4:	2b00      	cmp	r3, #0
 8022bc6:	f340 8386 	ble.w	80232d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8022bca:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022bcc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022bd0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022bd4:	1e48      	subs	r0, r1, #1
 8022bd6:	1e57      	subs	r7, r2, #1
 8022bd8:	9b07      	ldr	r3, [sp, #28]
 8022bda:	2b00      	cmp	r3, #0
 8022bdc:	f340 8166 	ble.w	8022eac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8022be0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8022be4:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022be8:	d406      	bmi.n	8022bf8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8022bea:	4584      	cmp	ip, r0
 8022bec:	da04      	bge.n	8022bf8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8022bee:	2b00      	cmp	r3, #0
 8022bf0:	db02      	blt.n	8022bf8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8022bf2:	42bb      	cmp	r3, r7
 8022bf4:	f2c0 815b 	blt.w	8022eae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8022bf8:	f11c 0c01 	adds.w	ip, ip, #1
 8022bfc:	f100 814b 	bmi.w	8022e96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8022c00:	4561      	cmp	r1, ip
 8022c02:	f2c0 8148 	blt.w	8022e96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8022c06:	3301      	adds	r3, #1
 8022c08:	f100 8145 	bmi.w	8022e96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8022c0c:	429a      	cmp	r2, r3
 8022c0e:	f2c0 8142 	blt.w	8022e96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8022c12:	9b07      	ldr	r3, [sp, #28]
 8022c14:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8022c16:	9317      	str	r3, [sp, #92]	; 0x5c
 8022c18:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8022c1a:	2b00      	cmp	r3, #0
 8022c1c:	f340 8165 	ble.w	8022eea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022c20:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8022c22:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022c24:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8022c28:	689b      	ldr	r3, [r3, #8]
 8022c2a:	1422      	asrs	r2, r4, #16
 8022c2c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8022c30:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8022c34:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8022c38:	f100 81d5 	bmi.w	8022fe6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8022c3c:	f103 38ff 	add.w	r8, r3, #4294967295
 8022c40:	4542      	cmp	r2, r8
 8022c42:	f280 81d0 	bge.w	8022fe6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8022c46:	f1bc 0f00 	cmp.w	ip, #0
 8022c4a:	f2c0 81cc 	blt.w	8022fe6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8022c4e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8022c52:	45c4      	cmp	ip, r8
 8022c54:	f280 81c7 	bge.w	8022fe6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8022c58:	b21b      	sxth	r3, r3
 8022c5a:	fb0c 2203 	mla	r2, ip, r3, r2
 8022c5e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8022c60:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8022c64:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8022c68:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8022c6c:	2900      	cmp	r1, #0
 8022c6e:	f000 8182 	beq.w	8022f76 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8022c72:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8022c76:	950b      	str	r5, [sp, #44]	; 0x2c
 8022c78:	0e2d      	lsrs	r5, r5, #24
 8022c7a:	9512      	str	r5, [sp, #72]	; 0x48
 8022c7c:	b180      	cbz	r0, 8022ca0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8022c7e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8022c82:	3b01      	subs	r3, #1
 8022c84:	009b      	lsls	r3, r3, #2
 8022c86:	3304      	adds	r3, #4
 8022c88:	eb08 0c03 	add.w	ip, r8, r3
 8022c8c:	f858 3003 	ldr.w	r3, [r8, r3]
 8022c90:	9308      	str	r3, [sp, #32]
 8022c92:	0e1b      	lsrs	r3, r3, #24
 8022c94:	9310      	str	r3, [sp, #64]	; 0x40
 8022c96:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8022c9a:	930c      	str	r3, [sp, #48]	; 0x30
 8022c9c:	0e1b      	lsrs	r3, r3, #24
 8022c9e:	9313      	str	r3, [sp, #76]	; 0x4c
 8022ca0:	b289      	uxth	r1, r1
 8022ca2:	b280      	uxth	r0, r0
 8022ca4:	fb01 f900 	mul.w	r9, r1, r0
 8022ca8:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8022cac:	0109      	lsls	r1, r1, #4
 8022cae:	eba1 0809 	sub.w	r8, r1, r9
 8022cb2:	b280      	uxth	r0, r0
 8022cb4:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8022cb8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8022cba:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8022cbc:	fa1f f888 	uxth.w	r8, r8
 8022cc0:	1a09      	subs	r1, r1, r0
 8022cc2:	b289      	uxth	r1, r1
 8022cc4:	fb08 f303 	mul.w	r3, r8, r3
 8022cc8:	fb01 330e 	mla	r3, r1, lr, r3
 8022ccc:	fb00 3305 	mla	r3, r0, r5, r3
 8022cd0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8022cd2:	fb09 3305 	mla	r3, r9, r5, r3
 8022cd6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022cda:	2b00      	cmp	r3, #0
 8022cdc:	f000 80d2 	beq.w	8022e84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8022ce0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8022ce4:	d01b      	beq.n	8022d1e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8022ce6:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8022cea:	fb0e fa0a 	mul.w	sl, lr, sl
 8022cee:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8022cf2:	fb0e fe02 	mul.w	lr, lr, r2
 8022cf6:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8022cfa:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8022cfe:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8022d02:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8022d06:	4452      	add	r2, sl
 8022d08:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8022d0c:	0a12      	lsrs	r2, r2, #8
 8022d0e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022d12:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8022d16:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8022d1a:	ea42 020c 	orr.w	r2, r2, ip
 8022d1e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8022d20:	2dff      	cmp	r5, #255	; 0xff
 8022d22:	d021      	beq.n	8022d68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8022d24:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8022d26:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8022d2a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8022d2c:	fb05 fb0b 	mul.w	fp, r5, fp
 8022d30:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8022d32:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8022d36:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8022d38:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022d3c:	fb05 fa0a 	mul.w	sl, r5, sl
 8022d40:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022d44:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022d48:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022d4c:	44de      	add	lr, fp
 8022d4e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022d52:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022d56:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022d5a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022d5e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022d62:	ea4e 050a 	orr.w	r5, lr, sl
 8022d66:	950b      	str	r5, [sp, #44]	; 0x2c
 8022d68:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8022d6a:	2dff      	cmp	r5, #255	; 0xff
 8022d6c:	d021      	beq.n	8022db2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8022d6e:	9d08      	ldr	r5, [sp, #32]
 8022d70:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8022d74:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8022d76:	fb05 fb0b 	mul.w	fp, r5, fp
 8022d7a:	9d08      	ldr	r5, [sp, #32]
 8022d7c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8022d80:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8022d82:	fb05 fa0e 	mul.w	sl, r5, lr
 8022d86:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022d8a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022d8e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022d92:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022d96:	44de      	add	lr, fp
 8022d98:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022d9c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022da0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022da4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022da8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022dac:	ea4e 050a 	orr.w	r5, lr, sl
 8022db0:	9508      	str	r5, [sp, #32]
 8022db2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8022db4:	2dff      	cmp	r5, #255	; 0xff
 8022db6:	d021      	beq.n	8022dfc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8022db8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8022dba:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8022dbe:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8022dc0:	fb05 fb0b 	mul.w	fp, r5, fp
 8022dc4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8022dc6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8022dca:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8022dcc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022dd0:	fb05 fa0a 	mul.w	sl, r5, sl
 8022dd4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022dd8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022ddc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022de0:	44de      	add	lr, fp
 8022de2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022de6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022dea:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022dee:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022df2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022df6:	ea4e 050a 	orr.w	r5, lr, sl
 8022dfa:	950c      	str	r5, [sp, #48]	; 0x30
 8022dfc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8022dfe:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8022e02:	9d08      	ldr	r5, [sp, #32]
 8022e04:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8022e08:	fb08 fc0c 	mul.w	ip, r8, ip
 8022e0c:	fb01 cc0e 	mla	ip, r1, lr, ip
 8022e10:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8022e14:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8022e16:	fb00 cc0e 	mla	ip, r0, lr, ip
 8022e1a:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8022e1e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8022e20:	fb09 cc0e 	mla	ip, r9, lr, ip
 8022e24:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8022e28:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8022e2c:	fb08 f80e 	mul.w	r8, r8, lr
 8022e30:	fb01 8202 	mla	r2, r1, r2, r8
 8022e34:	9908      	ldr	r1, [sp, #32]
 8022e36:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8022e3a:	990c      	ldr	r1, [sp, #48]	; 0x30
 8022e3c:	fb00 220a 	mla	r2, r0, sl, r2
 8022e40:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8022e44:	fb09 2900 	mla	r9, r9, r0, r2
 8022e48:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022e4c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022e50:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022e54:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8022e58:	ea4c 0c09 	orr.w	ip, ip, r9
 8022e5c:	2bff      	cmp	r3, #255	; 0xff
 8022e5e:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8022e62:	f040 8091 	bne.w	8022f88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8022e66:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8022e6a:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8022e6e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022e72:	f022 0207 	bic.w	r2, r2, #7
 8022e76:	431a      	orrs	r2, r3
 8022e78:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8022e7c:	ea4c 0c02 	orr.w	ip, ip, r2
 8022e80:	f8a7 c000 	strh.w	ip, [r7]
 8022e84:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022e86:	441c      	add	r4, r3
 8022e88:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022e8a:	441e      	add	r6, r3
 8022e8c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8022e8e:	3b01      	subs	r3, #1
 8022e90:	3702      	adds	r7, #2
 8022e92:	9317      	str	r3, [sp, #92]	; 0x5c
 8022e94:	e6c0      	b.n	8022c18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8022e96:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022e98:	441c      	add	r4, r3
 8022e9a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022e9c:	441e      	add	r6, r3
 8022e9e:	9b07      	ldr	r3, [sp, #28]
 8022ea0:	3b01      	subs	r3, #1
 8022ea2:	9307      	str	r3, [sp, #28]
 8022ea4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022ea6:	3302      	adds	r3, #2
 8022ea8:	930a      	str	r3, [sp, #40]	; 0x28
 8022eaa:	e695      	b.n	8022bd8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022eac:	d024      	beq.n	8022ef8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8022eae:	9b07      	ldr	r3, [sp, #28]
 8022eb0:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8022eb2:	3b01      	subs	r3, #1
 8022eb4:	fb00 4003 	mla	r0, r0, r3, r4
 8022eb8:	1400      	asrs	r0, r0, #16
 8022eba:	f53f aeaa 	bmi.w	8022c12 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8022ebe:	3901      	subs	r1, #1
 8022ec0:	4288      	cmp	r0, r1
 8022ec2:	f6bf aea6 	bge.w	8022c12 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8022ec6:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8022ec8:	fb01 6303 	mla	r3, r1, r3, r6
 8022ecc:	141b      	asrs	r3, r3, #16
 8022ece:	f53f aea0 	bmi.w	8022c12 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8022ed2:	3a01      	subs	r2, #1
 8022ed4:	4293      	cmp	r3, r2
 8022ed6:	f6bf ae9c 	bge.w	8022c12 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8022eda:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8022ede:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8022ee2:	f1bb 0f00 	cmp.w	fp, #0
 8022ee6:	f300 809a 	bgt.w	802301e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8022eea:	9b07      	ldr	r3, [sp, #28]
 8022eec:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8022ef0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022ef2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8022ef6:	930a      	str	r3, [sp, #40]	; 0x28
 8022ef8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8022efa:	2b00      	cmp	r3, #0
 8022efc:	f340 81eb 	ble.w	80232d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8022f00:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022f04:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022f08:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022f0c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022f0e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022f12:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022f16:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022f1a:	eef0 6a62 	vmov.f32	s13, s5
 8022f1e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022f22:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022f26:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022f2a:	ee16 4a90 	vmov	r4, s13
 8022f2e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022f32:	eef0 6a43 	vmov.f32	s13, s6
 8022f36:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022f3a:	ee12 2a90 	vmov	r2, s5
 8022f3e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022f42:	fb92 f3f3 	sdiv	r3, r2, r3
 8022f46:	ee13 2a10 	vmov	r2, s6
 8022f4a:	9327      	str	r3, [sp, #156]	; 0x9c
 8022f4c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022f4e:	fb92 f3f3 	sdiv	r3, r2, r3
 8022f52:	9328      	str	r3, [sp, #160]	; 0xa0
 8022f54:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8022f56:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8022f58:	3b01      	subs	r3, #1
 8022f5a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022f5e:	9316      	str	r3, [sp, #88]	; 0x58
 8022f60:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022f62:	bf08      	it	eq
 8022f64:	4613      	moveq	r3, r2
 8022f66:	ee16 6a90 	vmov	r6, s13
 8022f6a:	9307      	str	r3, [sp, #28]
 8022f6c:	eeb0 3a67 	vmov.f32	s6, s15
 8022f70:	eef0 2a47 	vmov.f32	s5, s14
 8022f74:	e622      	b.n	8022bbc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 8022f76:	2800      	cmp	r0, #0
 8022f78:	f43f ae92 	beq.w	8022ca0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8022f7c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8022f80:	9308      	str	r3, [sp, #32]
 8022f82:	0e1b      	lsrs	r3, r3, #24
 8022f84:	9310      	str	r3, [sp, #64]	; 0x40
 8022f86:	e68b      	b.n	8022ca0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8022f88:	8839      	ldrh	r1, [r7, #0]
 8022f8a:	4dd4      	ldr	r5, [pc, #848]	; (80232dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8022f8c:	43db      	mvns	r3, r3
 8022f8e:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8022f92:	fa5f f883 	uxtb.w	r8, r3
 8022f96:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8022f9a:	fb0e fe08 	mul.w	lr, lr, r8
 8022f9e:	10c8      	asrs	r0, r1, #3
 8022fa0:	00cb      	lsls	r3, r1, #3
 8022fa2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8022fa6:	f10e 0101 	add.w	r1, lr, #1
 8022faa:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8022fae:	fb00 f008 	mul.w	r0, r0, r8
 8022fb2:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8022fb6:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8022fba:	f100 0e01 	add.w	lr, r0, #1
 8022fbe:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8022fc2:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8022fc6:	b2db      	uxtb	r3, r3
 8022fc8:	b2c9      	uxtb	r1, r1
 8022fca:	00d2      	lsls	r2, r2, #3
 8022fcc:	fb03 f308 	mul.w	r3, r3, r8
 8022fd0:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8022fd4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022fd8:	430a      	orrs	r2, r1
 8022fda:	1c59      	adds	r1, r3, #1
 8022fdc:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8022fe0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8022fe4:	e748      	b.n	8022e78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8022fe6:	f112 0801 	adds.w	r8, r2, #1
 8022fea:	f53f af4b 	bmi.w	8022e84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8022fee:	4543      	cmp	r3, r8
 8022ff0:	f6ff af48 	blt.w	8022e84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8022ff4:	f11c 0801 	adds.w	r8, ip, #1
 8022ff8:	f53f af44 	bmi.w	8022e84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8022ffc:	45c6      	cmp	lr, r8
 8022ffe:	f6ff af41 	blt.w	8022e84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023002:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8023006:	fa0f f28e 	sxth.w	r2, lr
 802300a:	e9cd 1003 	strd	r1, r0, [sp, #12]
 802300e:	9200      	str	r2, [sp, #0]
 8023010:	b21b      	sxth	r3, r3
 8023012:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8023014:	9819      	ldr	r0, [sp, #100]	; 0x64
 8023016:	4639      	mov	r1, r7
 8023018:	f7ff fc87 	bl	802292a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 802301c:	e732      	b.n	8022e84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802301e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023020:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023022:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8023026:	1421      	asrs	r1, r4, #16
 8023028:	1433      	asrs	r3, r6, #16
 802302a:	fb07 1303 	mla	r3, r7, r3, r1
 802302e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8023030:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8023034:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8023038:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802303c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023040:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8023044:	2a00      	cmp	r2, #0
 8023046:	f000 8107 	beq.w	8023258 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 802304a:	684d      	ldr	r5, [r1, #4]
 802304c:	950d      	str	r5, [sp, #52]	; 0x34
 802304e:	0e2d      	lsrs	r5, r5, #24
 8023050:	9514      	str	r5, [sp, #80]	; 0x50
 8023052:	b178      	cbz	r0, 8023074 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8023054:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8023058:	3f01      	subs	r7, #1
 802305a:	00bf      	lsls	r7, r7, #2
 802305c:	3704      	adds	r7, #4
 802305e:	eb01 0e07 	add.w	lr, r1, r7
 8023062:	59c9      	ldr	r1, [r1, r7]
 8023064:	9109      	str	r1, [sp, #36]	; 0x24
 8023066:	0e09      	lsrs	r1, r1, #24
 8023068:	9111      	str	r1, [sp, #68]	; 0x44
 802306a:	f8de 1004 	ldr.w	r1, [lr, #4]
 802306e:	910e      	str	r1, [sp, #56]	; 0x38
 8023070:	0e09      	lsrs	r1, r1, #24
 8023072:	9115      	str	r1, [sp, #84]	; 0x54
 8023074:	b292      	uxth	r2, r2
 8023076:	b280      	uxth	r0, r0
 8023078:	fb02 f900 	mul.w	r9, r2, r0
 802307c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8023080:	0112      	lsls	r2, r2, #4
 8023082:	eba2 0e09 	sub.w	lr, r2, r9
 8023086:	b280      	uxth	r0, r0
 8023088:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 802308c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802308e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023090:	fa1f fe8e 	uxth.w	lr, lr
 8023094:	1a09      	subs	r1, r1, r0
 8023096:	b289      	uxth	r1, r1
 8023098:	fb0e f202 	mul.w	r2, lr, r2
 802309c:	fb01 220c 	mla	r2, r1, ip, r2
 80230a0:	fb00 2205 	mla	r2, r0, r5, r2
 80230a4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80230a6:	fb09 2205 	mla	r2, r9, r5, r2
 80230aa:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80230ae:	2a00      	cmp	r2, #0
 80230b0:	f000 80c9 	beq.w	8023246 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80230b4:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80230b8:	d019      	beq.n	80230ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 80230ba:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80230be:	fb0c fa0a 	mul.w	sl, ip, sl
 80230c2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80230c6:	fb0c fc03 	mul.w	ip, ip, r3
 80230ca:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80230ce:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80230d2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80230d6:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80230da:	4453      	add	r3, sl
 80230dc:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80230e0:	0a1b      	lsrs	r3, r3, #8
 80230e2:	0a3f      	lsrs	r7, r7, #8
 80230e4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80230e8:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80230ec:	433b      	orrs	r3, r7
 80230ee:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80230f0:	2dff      	cmp	r5, #255	; 0xff
 80230f2:	d020      	beq.n	8023136 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 80230f4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80230f6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80230fa:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80230fc:	436f      	muls	r7, r5
 80230fe:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023100:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023104:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023106:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802310a:	fb05 fa0a 	mul.w	sl, r5, sl
 802310e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023112:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023116:	44bc      	add	ip, r7
 8023118:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802311c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023120:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023124:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023128:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802312c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023130:	ea4c 050a 	orr.w	r5, ip, sl
 8023134:	950d      	str	r5, [sp, #52]	; 0x34
 8023136:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023138:	2dff      	cmp	r5, #255	; 0xff
 802313a:	d020      	beq.n	802317e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 802313c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802313e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023142:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023144:	436f      	muls	r7, r5
 8023146:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023148:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 802314c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802314e:	fb05 fa0c 	mul.w	sl, r5, ip
 8023152:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023156:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802315a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802315e:	44bc      	add	ip, r7
 8023160:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023164:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023168:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802316c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023170:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023174:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023178:	ea4c 050a 	orr.w	r5, ip, sl
 802317c:	9509      	str	r5, [sp, #36]	; 0x24
 802317e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023180:	2dff      	cmp	r5, #255	; 0xff
 8023182:	d020      	beq.n	80231c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8023184:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023186:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802318a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802318c:	436f      	muls	r7, r5
 802318e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023190:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023194:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023196:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802319a:	fb05 fa0a 	mul.w	sl, r5, sl
 802319e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80231a2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80231a6:	44bc      	add	ip, r7
 80231a8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80231ac:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80231b0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80231b4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80231b8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80231bc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80231c0:	ea4c 050a 	orr.w	r5, ip, sl
 80231c4:	950e      	str	r5, [sp, #56]	; 0x38
 80231c6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80231c8:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80231cc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80231ce:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80231d2:	fb0e f707 	mul.w	r7, lr, r7
 80231d6:	fb01 770c 	mla	r7, r1, ip, r7
 80231da:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80231de:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80231e0:	fb00 770c 	mla	r7, r0, ip, r7
 80231e4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80231e8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80231ea:	fb09 770c 	mla	r7, r9, ip, r7
 80231ee:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80231f2:	fb0e fe0c 	mul.w	lr, lr, ip
 80231f6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80231fa:	fb01 e303 	mla	r3, r1, r3, lr
 80231fe:	9909      	ldr	r1, [sp, #36]	; 0x24
 8023200:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8023204:	990e      	ldr	r1, [sp, #56]	; 0x38
 8023206:	fb00 330a 	mla	r3, r0, sl, r3
 802320a:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 802320e:	fb09 3c0c 	mla	ip, r9, ip, r3
 8023212:	0a3f      	lsrs	r7, r7, #8
 8023214:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023218:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802321c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8023220:	ea47 070c 	orr.w	r7, r7, ip
 8023224:	2aff      	cmp	r2, #255	; 0xff
 8023226:	ea4f 2317 	mov.w	r3, r7, lsr #8
 802322a:	d11e      	bne.n	802326a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 802322c:	097a      	lsrs	r2, r7, #5
 802322e:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8023232:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023236:	f023 0307 	bic.w	r3, r3, #7
 802323a:	4313      	orrs	r3, r2
 802323c:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8023240:	431f      	orrs	r7, r3
 8023242:	f8a8 7000 	strh.w	r7, [r8]
 8023246:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8023248:	441c      	add	r4, r3
 802324a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802324c:	f108 0802 	add.w	r8, r8, #2
 8023250:	441e      	add	r6, r3
 8023252:	f10b 3bff 	add.w	fp, fp, #4294967295
 8023256:	e644      	b.n	8022ee2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8023258:	2800      	cmp	r0, #0
 802325a:	f43f af0b 	beq.w	8023074 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802325e:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8023262:	9109      	str	r1, [sp, #36]	; 0x24
 8023264:	0e09      	lsrs	r1, r1, #24
 8023266:	9111      	str	r1, [sp, #68]	; 0x44
 8023268:	e704      	b.n	8023074 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802326a:	f8b8 1000 	ldrh.w	r1, [r8]
 802326e:	43d2      	mvns	r2, r2
 8023270:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8023274:	fa5f fe82 	uxtb.w	lr, r2
 8023278:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 802327c:	fb0c fc0e 	mul.w	ip, ip, lr
 8023280:	10c8      	asrs	r0, r1, #3
 8023282:	00ca      	lsls	r2, r1, #3
 8023284:	f10c 0101 	add.w	r1, ip, #1
 8023288:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802328c:	0c39      	lsrs	r1, r7, #16
 802328e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8023292:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023296:	4911      	ldr	r1, [pc, #68]	; (80232dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8023298:	fb00 f00e 	mul.w	r0, r0, lr
 802329c:	fa5f fc8c 	uxtb.w	ip, ip
 80232a0:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 80232a4:	b2d2      	uxtb	r2, r2
 80232a6:	1c41      	adds	r1, r0, #1
 80232a8:	fb02 f20e 	mul.w	r2, r2, lr
 80232ac:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80232b0:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80232b4:	1c51      	adds	r1, r2, #1
 80232b6:	00c0      	lsls	r0, r0, #3
 80232b8:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80232bc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80232c0:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80232c4:	ea4c 0c00 	orr.w	ip, ip, r0
 80232c8:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80232cc:	ea47 0c0c 	orr.w	ip, r7, ip
 80232d0:	f8a8 c000 	strh.w	ip, [r8]
 80232d4:	e7b7      	b.n	8023246 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80232d6:	b01b      	add	sp, #108	; 0x6c
 80232d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80232dc:	fffff800 	.word	0xfffff800

080232e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 80232e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80232e4:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 80232e8:	2d00      	cmp	r5, #0
 80232ea:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80232ee:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80232f2:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80232f6:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 80232fa:	fb05 0e03 	mla	lr, r5, r3, r0
 80232fe:	f2c0 808c 	blt.w	802341a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8023302:	45a9      	cmp	r9, r5
 8023304:	f340 8089 	ble.w	802341a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8023308:	2800      	cmp	r0, #0
 802330a:	f2c0 8084 	blt.w	8023416 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 802330e:	4580      	cmp	r8, r0
 8023310:	f340 8081 	ble.w	8023416 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8023314:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8023318:	f01e 0f01 	tst.w	lr, #1
 802331c:	5d16      	ldrb	r6, [r2, r4]
 802331e:	bf0c      	ite	eq
 8023320:	f006 060f 	andeq.w	r6, r6, #15
 8023324:	1136      	asrne	r6, r6, #4
 8023326:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802332a:	b2f6      	uxtb	r6, r6
 802332c:	1c44      	adds	r4, r0, #1
 802332e:	d477      	bmi.n	8023420 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8023330:	45a0      	cmp	r8, r4
 8023332:	dd75      	ble.n	8023420 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8023334:	2f00      	cmp	r7, #0
 8023336:	d075      	beq.n	8023424 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 8023338:	f10e 0a01 	add.w	sl, lr, #1
 802333c:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8023340:	f01a 0f01 	tst.w	sl, #1
 8023344:	5d14      	ldrb	r4, [r2, r4]
 8023346:	bf0c      	ite	eq
 8023348:	f004 040f 	andeq.w	r4, r4, #15
 802334c:	1124      	asrne	r4, r4, #4
 802334e:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8023352:	b2e4      	uxtb	r4, r4
 8023354:	3501      	adds	r5, #1
 8023356:	d469      	bmi.n	802342c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8023358:	45a9      	cmp	r9, r5
 802335a:	dd67      	ble.n	802342c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 802335c:	f1bc 0f00 	cmp.w	ip, #0
 8023360:	d067      	beq.n	8023432 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8023362:	2800      	cmp	r0, #0
 8023364:	db60      	blt.n	8023428 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8023366:	4580      	cmp	r8, r0
 8023368:	dd5e      	ble.n	8023428 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802336a:	eb03 090e 	add.w	r9, r3, lr
 802336e:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8023372:	f019 0f01 	tst.w	r9, #1
 8023376:	5d55      	ldrb	r5, [r2, r5]
 8023378:	bf0c      	ite	eq
 802337a:	f005 050f 	andeq.w	r5, r5, #15
 802337e:	112d      	asrne	r5, r5, #4
 8023380:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8023384:	b2ed      	uxtb	r5, r5
 8023386:	3001      	adds	r0, #1
 8023388:	d456      	bmi.n	8023438 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802338a:	4580      	cmp	r8, r0
 802338c:	dd54      	ble.n	8023438 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802338e:	2f00      	cmp	r7, #0
 8023390:	d054      	beq.n	802343c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8023392:	3301      	adds	r3, #1
 8023394:	449e      	add	lr, r3
 8023396:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802339a:	f01e 0f01 	tst.w	lr, #1
 802339e:	5cd0      	ldrb	r0, [r2, r3]
 80233a0:	bf0c      	ite	eq
 80233a2:	f000 000f 	andeq.w	r0, r0, #15
 80233a6:	1100      	asrne	r0, r0, #4
 80233a8:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80233ac:	b2c3      	uxtb	r3, r0
 80233ae:	b2ba      	uxth	r2, r7
 80233b0:	fa1f fc8c 	uxth.w	ip, ip
 80233b4:	fb02 f00c 	mul.w	r0, r2, ip
 80233b8:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 80233bc:	0112      	lsls	r2, r2, #4
 80233be:	fa1f fc8c 	uxth.w	ip, ip
 80233c2:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 80233c6:	1a12      	subs	r2, r2, r0
 80233c8:	eba7 070c 	sub.w	r7, r7, ip
 80233cc:	b292      	uxth	r2, r2
 80233ce:	b2bf      	uxth	r7, r7
 80233d0:	4362      	muls	r2, r4
 80233d2:	fb06 2207 	mla	r2, r6, r7, r2
 80233d6:	fb0c 2505 	mla	r5, ip, r5, r2
 80233da:	fb00 5303 	mla	r3, r0, r3, r5
 80233de:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80233e2:	b1b3      	cbz	r3, 8023412 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80233e4:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 80233e8:	435a      	muls	r2, r3
 80233ea:	1c53      	adds	r3, r2, #1
 80233ec:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80233f0:	4a2d      	ldr	r2, [pc, #180]	; (80234a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 80233f2:	121b      	asrs	r3, r3, #8
 80233f4:	6812      	ldr	r2, [r2, #0]
 80233f6:	2bff      	cmp	r3, #255	; 0xff
 80233f8:	ea4f 2612 	mov.w	r6, r2, lsr #8
 80233fc:	d120      	bne.n	8023440 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 80233fe:	4b2b      	ldr	r3, [pc, #172]	; (80234ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8023400:	0950      	lsrs	r0, r2, #5
 8023402:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023406:	4033      	ands	r3, r6
 8023408:	4318      	orrs	r0, r3
 802340a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802340e:	4302      	orrs	r2, r0
 8023410:	800a      	strh	r2, [r1, #0]
 8023412:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023416:	2600      	movs	r6, #0
 8023418:	e788      	b.n	802332c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 802341a:	2400      	movs	r4, #0
 802341c:	4626      	mov	r6, r4
 802341e:	e799      	b.n	8023354 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8023420:	2400      	movs	r4, #0
 8023422:	e797      	b.n	8023354 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8023424:	463c      	mov	r4, r7
 8023426:	e795      	b.n	8023354 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8023428:	2500      	movs	r5, #0
 802342a:	e7ac      	b.n	8023386 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 802342c:	2300      	movs	r3, #0
 802342e:	461d      	mov	r5, r3
 8023430:	e7bd      	b.n	80233ae <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8023432:	4663      	mov	r3, ip
 8023434:	4665      	mov	r5, ip
 8023436:	e7ba      	b.n	80233ae <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8023438:	2300      	movs	r3, #0
 802343a:	e7b8      	b.n	80233ae <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802343c:	463b      	mov	r3, r7
 802343e:	e7b6      	b.n	80233ae <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8023440:	880d      	ldrh	r5, [r1, #0]
 8023442:	b29f      	uxth	r7, r3
 8023444:	122c      	asrs	r4, r5, #8
 8023446:	f3c2 4007 	ubfx	r0, r2, #16, #8
 802344a:	43db      	mvns	r3, r3
 802344c:	b2db      	uxtb	r3, r3
 802344e:	fb10 f007 	smulbb	r0, r0, r7
 8023452:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8023456:	fb04 0403 	mla	r4, r4, r3, r0
 802345a:	b2f6      	uxtb	r6, r6
 802345c:	10e8      	asrs	r0, r5, #3
 802345e:	b2d2      	uxtb	r2, r2
 8023460:	00ed      	lsls	r5, r5, #3
 8023462:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023466:	fb12 f207 	smulbb	r2, r2, r7
 802346a:	fb16 f607 	smulbb	r6, r6, r7
 802346e:	b2ed      	uxtb	r5, r5
 8023470:	b2a4      	uxth	r4, r4
 8023472:	fb00 6603 	mla	r6, r0, r3, r6
 8023476:	fb05 2303 	mla	r3, r5, r3, r2
 802347a:	b29a      	uxth	r2, r3
 802347c:	1c63      	adds	r3, r4, #1
 802347e:	b2b0      	uxth	r0, r6
 8023480:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8023484:	1c53      	adds	r3, r2, #1
 8023486:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802348a:	1c42      	adds	r2, r0, #1
 802348c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023490:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8023494:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023498:	0940      	lsrs	r0, r0, #5
 802349a:	4323      	orrs	r3, r4
 802349c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80234a0:	4303      	orrs	r3, r0
 80234a2:	800b      	strh	r3, [r1, #0]
 80234a4:	e7b5      	b.n	8023412 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80234a6:	bf00      	nop
 80234a8:	200137cc 	.word	0x200137cc
 80234ac:	00fff800 	.word	0x00fff800

080234b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80234b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80234b4:	b097      	sub	sp, #92	; 0x5c
 80234b6:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 80234ba:	9214      	str	r2, [sp, #80]	; 0x50
 80234bc:	9309      	str	r3, [sp, #36]	; 0x24
 80234be:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80234c0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80234c4:	910d      	str	r1, [sp, #52]	; 0x34
 80234c6:	930f      	str	r3, [sp, #60]	; 0x3c
 80234c8:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 80234cc:	9015      	str	r0, [sp, #84]	; 0x54
 80234ce:	6850      	ldr	r0, [r2, #4]
 80234d0:	6812      	ldr	r2, [r2, #0]
 80234d2:	fb00 1303 	mla	r3, r0, r3, r1
 80234d6:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80234da:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80234dc:	689b      	ldr	r3, [r3, #8]
 80234de:	3301      	adds	r3, #1
 80234e0:	f023 0301 	bic.w	r3, r3, #1
 80234e4:	930a      	str	r3, [sp, #40]	; 0x28
 80234e6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80234e8:	681f      	ldr	r7, [r3, #0]
 80234ea:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80234ec:	2b00      	cmp	r3, #0
 80234ee:	dc03      	bgt.n	80234f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80234f0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80234f2:	2b00      	cmp	r3, #0
 80234f4:	f340 8287 	ble.w	8023a06 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80234f8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80234fa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80234fe:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023502:	1e48      	subs	r0, r1, #1
 8023504:	f102 3cff 	add.w	ip, r2, #4294967295
 8023508:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802350a:	2b00      	cmp	r3, #0
 802350c:	f340 80c4 	ble.w	8023698 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8023510:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8023514:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023518:	d406      	bmi.n	8023528 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802351a:	4586      	cmp	lr, r0
 802351c:	da04      	bge.n	8023528 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802351e:	2b00      	cmp	r3, #0
 8023520:	db02      	blt.n	8023528 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8023522:	4563      	cmp	r3, ip
 8023524:	f2c0 80b9 	blt.w	802369a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8023528:	f11e 0e01 	adds.w	lr, lr, #1
 802352c:	f100 80aa 	bmi.w	8023684 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8023530:	4571      	cmp	r1, lr
 8023532:	f2c0 80a7 	blt.w	8023684 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8023536:	3301      	adds	r3, #1
 8023538:	f100 80a4 	bmi.w	8023684 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802353c:	429a      	cmp	r2, r3
 802353e:	f2c0 80a1 	blt.w	8023684 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8023542:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023544:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 8023548:	930e      	str	r3, [sp, #56]	; 0x38
 802354a:	46c8      	mov	r8, r9
 802354c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802354e:	2b00      	cmp	r3, #0
 8023550:	f340 80c3 	ble.w	80236da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8023554:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023556:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802355a:	1423      	asrs	r3, r4, #16
 802355c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8023560:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023564:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8023568:	f100 814d 	bmi.w	8023806 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802356c:	f10c 3bff 	add.w	fp, ip, #4294967295
 8023570:	455b      	cmp	r3, fp
 8023572:	f280 8148 	bge.w	8023806 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8023576:	2800      	cmp	r0, #0
 8023578:	f2c0 8145 	blt.w	8023806 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802357c:	f10e 3bff 	add.w	fp, lr, #4294967295
 8023580:	4558      	cmp	r0, fp
 8023582:	f280 8140 	bge.w	8023806 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8023586:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8023588:	fb00 3305 	mla	r3, r0, r5, r3
 802358c:	0858      	lsrs	r0, r3, #1
 802358e:	07dd      	lsls	r5, r3, #31
 8023590:	f817 c000 	ldrb.w	ip, [r7, r0]
 8023594:	bf54      	ite	pl
 8023596:	f00c 0c0f 	andpl.w	ip, ip, #15
 802359a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802359e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80235a2:	fa5f fc8c 	uxtb.w	ip, ip
 80235a6:	2a00      	cmp	r2, #0
 80235a8:	f000 80db 	beq.w	8023762 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 80235ac:	1c58      	adds	r0, r3, #1
 80235ae:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80235b2:	07c0      	lsls	r0, r0, #31
 80235b4:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80235b8:	bf54      	ite	pl
 80235ba:	f00e 0e0f 	andpl.w	lr, lr, #15
 80235be:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80235c2:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80235c6:	fa5f f08e 	uxtb.w	r0, lr
 80235ca:	9010      	str	r0, [sp, #64]	; 0x40
 80235cc:	b1c9      	cbz	r1, 8023602 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80235ce:	4453      	add	r3, sl
 80235d0:	0858      	lsrs	r0, r3, #1
 80235d2:	07dd      	lsls	r5, r3, #31
 80235d4:	5c38      	ldrb	r0, [r7, r0]
 80235d6:	bf54      	ite	pl
 80235d8:	f000 000f 	andpl.w	r0, r0, #15
 80235dc:	1100      	asrmi	r0, r0, #4
 80235de:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80235e2:	3301      	adds	r3, #1
 80235e4:	b2c0      	uxtb	r0, r0
 80235e6:	900b      	str	r0, [sp, #44]	; 0x2c
 80235e8:	0858      	lsrs	r0, r3, #1
 80235ea:	07dd      	lsls	r5, r3, #31
 80235ec:	f817 e000 	ldrb.w	lr, [r7, r0]
 80235f0:	bf54      	ite	pl
 80235f2:	f00e 030f 	andpl.w	r3, lr, #15
 80235f6:	ea4f 132e 	movmi.w	r3, lr, asr #4
 80235fa:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80235fe:	b2db      	uxtb	r3, r3
 8023600:	9311      	str	r3, [sp, #68]	; 0x44
 8023602:	b292      	uxth	r2, r2
 8023604:	b289      	uxth	r1, r1
 8023606:	fb02 f301 	mul.w	r3, r2, r1
 802360a:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 802360e:	0112      	lsls	r2, r2, #4
 8023610:	b289      	uxth	r1, r1
 8023612:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8023616:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023618:	1ad2      	subs	r2, r2, r3
 802361a:	1a40      	subs	r0, r0, r1
 802361c:	b292      	uxth	r2, r2
 802361e:	436a      	muls	r2, r5
 8023620:	b280      	uxth	r0, r0
 8023622:	fb0c 2c00 	mla	ip, ip, r0, r2
 8023626:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8023628:	fb01 c102 	mla	r1, r1, r2, ip
 802362c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 802362e:	fb03 1302 	mla	r3, r3, r2, r1
 8023632:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023636:	b1db      	cbz	r3, 8023670 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8023638:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802363a:	4353      	muls	r3, r2
 802363c:	1c5a      	adds	r2, r3, #1
 802363e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8023642:	4ac6      	ldr	r2, [pc, #792]	; (802395c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8023644:	121b      	asrs	r3, r3, #8
 8023646:	6812      	ldr	r2, [r2, #0]
 8023648:	2bff      	cmp	r3, #255	; 0xff
 802364a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802364e:	f040 8099 	bne.w	8023784 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8023652:	0953      	lsrs	r3, r2, #5
 8023654:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8023658:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802365c:	f02c 0c07 	bic.w	ip, ip, #7
 8023660:	ea43 0c0c 	orr.w	ip, r3, ip
 8023664:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8023668:	ea4c 0202 	orr.w	r2, ip, r2
 802366c:	f8a8 2000 	strh.w	r2, [r8]
 8023670:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8023672:	441c      	add	r4, r3
 8023674:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023676:	441e      	add	r6, r3
 8023678:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802367a:	3b01      	subs	r3, #1
 802367c:	f108 0802 	add.w	r8, r8, #2
 8023680:	930e      	str	r3, [sp, #56]	; 0x38
 8023682:	e763      	b.n	802354c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8023684:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8023686:	441c      	add	r4, r3
 8023688:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802368a:	441e      	add	r6, r3
 802368c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802368e:	3b01      	subs	r3, #1
 8023690:	9309      	str	r3, [sp, #36]	; 0x24
 8023692:	f109 0902 	add.w	r9, r9, #2
 8023696:	e737      	b.n	8023508 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8023698:	d024      	beq.n	80236e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802369a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802369c:	9823      	ldr	r0, [sp, #140]	; 0x8c
 802369e:	3b01      	subs	r3, #1
 80236a0:	fb00 4003 	mla	r0, r0, r3, r4
 80236a4:	1400      	asrs	r0, r0, #16
 80236a6:	f53f af4c 	bmi.w	8023542 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80236aa:	3901      	subs	r1, #1
 80236ac:	4288      	cmp	r0, r1
 80236ae:	f6bf af48 	bge.w	8023542 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80236b2:	9924      	ldr	r1, [sp, #144]	; 0x90
 80236b4:	fb01 6303 	mla	r3, r1, r3, r6
 80236b8:	141b      	asrs	r3, r3, #16
 80236ba:	f53f af42 	bmi.w	8023542 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80236be:	3a01      	subs	r2, #1
 80236c0:	4293      	cmp	r3, r2
 80236c2:	f6bf af3e 	bge.w	8023542 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80236c6:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80236ca:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80236ce:	930e      	str	r3, [sp, #56]	; 0x38
 80236d0:	46c8      	mov	r8, r9
 80236d2:	f1bb 0f00 	cmp.w	fp, #0
 80236d6:	f300 80b7 	bgt.w	8023848 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 80236da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80236dc:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80236e0:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80236e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80236e6:	2b00      	cmp	r3, #0
 80236e8:	f340 818d 	ble.w	8023a06 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80236ec:	ee30 0a04 	vadd.f32	s0, s0, s8
 80236f0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80236f4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80236f8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80236fa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80236fe:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023702:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023706:	eef0 6a62 	vmov.f32	s13, s5
 802370a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802370e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023712:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023716:	ee16 4a90 	vmov	r4, s13
 802371a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802371e:	eef0 6a43 	vmov.f32	s13, s6
 8023722:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023726:	ee12 2a90 	vmov	r2, s5
 802372a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802372e:	fb92 f3f3 	sdiv	r3, r2, r3
 8023732:	ee13 2a10 	vmov	r2, s6
 8023736:	9323      	str	r3, [sp, #140]	; 0x8c
 8023738:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802373a:	fb92 f3f3 	sdiv	r3, r2, r3
 802373e:	9324      	str	r3, [sp, #144]	; 0x90
 8023740:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8023742:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8023744:	3b01      	subs	r3, #1
 8023746:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802374a:	930d      	str	r3, [sp, #52]	; 0x34
 802374c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802374e:	bf08      	it	eq
 8023750:	4613      	moveq	r3, r2
 8023752:	ee16 6a90 	vmov	r6, s13
 8023756:	9309      	str	r3, [sp, #36]	; 0x24
 8023758:	eeb0 3a67 	vmov.f32	s6, s15
 802375c:	eef0 2a47 	vmov.f32	s5, s14
 8023760:	e6c3      	b.n	80234ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8023762:	2900      	cmp	r1, #0
 8023764:	f43f af4d 	beq.w	8023602 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8023768:	eb0a 0003 	add.w	r0, sl, r3
 802376c:	0843      	lsrs	r3, r0, #1
 802376e:	07c0      	lsls	r0, r0, #31
 8023770:	5cfb      	ldrb	r3, [r7, r3]
 8023772:	bf54      	ite	pl
 8023774:	f003 030f 	andpl.w	r3, r3, #15
 8023778:	111b      	asrmi	r3, r3, #4
 802377a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802377e:	b2db      	uxtb	r3, r3
 8023780:	930b      	str	r3, [sp, #44]	; 0x2c
 8023782:	e73e      	b.n	8023602 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8023784:	f8b8 e000 	ldrh.w	lr, [r8]
 8023788:	fa1f fb83 	uxth.w	fp, r3
 802378c:	ea4f 202e 	mov.w	r0, lr, asr #8
 8023790:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8023794:	43db      	mvns	r3, r3
 8023796:	b2db      	uxtb	r3, r3
 8023798:	fb11 f10b 	smulbb	r1, r1, fp
 802379c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80237a0:	fb00 1003 	mla	r0, r0, r3, r1
 80237a4:	fa5f fc8c 	uxtb.w	ip, ip
 80237a8:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80237ac:	b2d2      	uxtb	r2, r2
 80237ae:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80237b2:	b280      	uxth	r0, r0
 80237b4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80237b8:	fb1c fc0b 	smulbb	ip, ip, fp
 80237bc:	fa5f fe8e 	uxtb.w	lr, lr
 80237c0:	fb12 fb0b 	smulbb	fp, r2, fp
 80237c4:	fb01 cc03 	mla	ip, r1, r3, ip
 80237c8:	fb0e bb03 	mla	fp, lr, r3, fp
 80237cc:	1c43      	adds	r3, r0, #1
 80237ce:	fa1f fc8c 	uxth.w	ip, ip
 80237d2:	fa1f fb8b 	uxth.w	fp, fp
 80237d6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80237da:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 80237de:	f10c 0101 	add.w	r1, ip, #1
 80237e2:	f10b 0001 	add.w	r0, fp, #1
 80237e6:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80237ea:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80237ee:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80237f2:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80237f6:	4318      	orrs	r0, r3
 80237f8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80237fc:	ea40 000c 	orr.w	r0, r0, ip
 8023800:	f8a8 0000 	strh.w	r0, [r8]
 8023804:	e734      	b.n	8023670 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8023806:	f113 0b01 	adds.w	fp, r3, #1
 802380a:	f53f af31 	bmi.w	8023670 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802380e:	45dc      	cmp	ip, fp
 8023810:	f6ff af2e 	blt.w	8023670 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8023814:	f110 0b01 	adds.w	fp, r0, #1
 8023818:	f53f af2a 	bmi.w	8023670 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802381c:	45de      	cmp	lr, fp
 802381e:	f6ff af27 	blt.w	8023670 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8023822:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023824:	9302      	str	r3, [sp, #8]
 8023826:	fa0f f38e 	sxth.w	r3, lr
 802382a:	9301      	str	r3, [sp, #4]
 802382c:	fa0f f38c 	sxth.w	r3, ip
 8023830:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8023834:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8023838:	9300      	str	r3, [sp, #0]
 802383a:	463a      	mov	r2, r7
 802383c:	4653      	mov	r3, sl
 802383e:	4641      	mov	r1, r8
 8023840:	9815      	ldr	r0, [sp, #84]	; 0x54
 8023842:	f7ff fd4d 	bl	80232e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8023846:	e713      	b.n	8023670 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8023848:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 802384a:	1422      	asrs	r2, r4, #16
 802384c:	1433      	asrs	r3, r6, #16
 802384e:	fb05 2303 	mla	r3, r5, r3, r2
 8023852:	085a      	lsrs	r2, r3, #1
 8023854:	07dd      	lsls	r5, r3, #31
 8023856:	5cba      	ldrb	r2, [r7, r2]
 8023858:	bf54      	ite	pl
 802385a:	f002 020f 	andpl.w	r2, r2, #15
 802385e:	1112      	asrmi	r2, r2, #4
 8023860:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8023864:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8023868:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802386c:	b2d2      	uxtb	r2, r2
 802386e:	2900      	cmp	r1, #0
 8023870:	d076      	beq.n	8023960 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8023872:	f103 0e01 	add.w	lr, r3, #1
 8023876:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802387a:	f01e 0f01 	tst.w	lr, #1
 802387e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8023882:	bf0c      	ite	eq
 8023884:	f00c 0c0f 	andeq.w	ip, ip, #15
 8023888:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 802388c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8023890:	fa5f f58c 	uxtb.w	r5, ip
 8023894:	9512      	str	r5, [sp, #72]	; 0x48
 8023896:	b300      	cbz	r0, 80238da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8023898:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802389a:	442b      	add	r3, r5
 802389c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80238a0:	07dd      	lsls	r5, r3, #31
 80238a2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80238a6:	bf54      	ite	pl
 80238a8:	f00c 0c0f 	andpl.w	ip, ip, #15
 80238ac:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80238b0:	3301      	adds	r3, #1
 80238b2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80238b6:	fa5f f58c 	uxtb.w	r5, ip
 80238ba:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80238be:	950c      	str	r5, [sp, #48]	; 0x30
 80238c0:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80238c4:	07dd      	lsls	r5, r3, #31
 80238c6:	bf54      	ite	pl
 80238c8:	f00c 0c0f 	andpl.w	ip, ip, #15
 80238cc:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80238d0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80238d4:	fa5f f38c 	uxtb.w	r3, ip
 80238d8:	9313      	str	r3, [sp, #76]	; 0x4c
 80238da:	b289      	uxth	r1, r1
 80238dc:	b280      	uxth	r0, r0
 80238de:	fb01 f300 	mul.w	r3, r1, r0
 80238e2:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 80238e6:	0109      	lsls	r1, r1, #4
 80238e8:	b280      	uxth	r0, r0
 80238ea:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 80238ee:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80238f0:	1ac9      	subs	r1, r1, r3
 80238f2:	ebac 0c00 	sub.w	ip, ip, r0
 80238f6:	b289      	uxth	r1, r1
 80238f8:	4369      	muls	r1, r5
 80238fa:	fa1f fc8c 	uxth.w	ip, ip
 80238fe:	fb02 120c 	mla	r2, r2, ip, r1
 8023902:	990c      	ldr	r1, [sp, #48]	; 0x30
 8023904:	fb00 2001 	mla	r0, r0, r1, r2
 8023908:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 802390a:	fb03 0302 	mla	r3, r3, r2, r0
 802390e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023912:	b1d3      	cbz	r3, 802394a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8023914:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8023916:	4353      	muls	r3, r2
 8023918:	1c5a      	adds	r2, r3, #1
 802391a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802391e:	4a0f      	ldr	r2, [pc, #60]	; (802395c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8023920:	121b      	asrs	r3, r3, #8
 8023922:	6812      	ldr	r2, [r2, #0]
 8023924:	2bff      	cmp	r3, #255	; 0xff
 8023926:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802392a:	d12d      	bne.n	8023988 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 802392c:	0953      	lsrs	r3, r2, #5
 802392e:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8023932:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023936:	f02c 0c07 	bic.w	ip, ip, #7
 802393a:	ea43 0c0c 	orr.w	ip, r3, ip
 802393e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8023942:	ea4c 0202 	orr.w	r2, ip, r2
 8023946:	f8a8 2000 	strh.w	r2, [r8]
 802394a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 802394c:	441c      	add	r4, r3
 802394e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023950:	f108 0802 	add.w	r8, r8, #2
 8023954:	441e      	add	r6, r3
 8023956:	f10b 3bff 	add.w	fp, fp, #4294967295
 802395a:	e6ba      	b.n	80236d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 802395c:	200137cc 	.word	0x200137cc
 8023960:	2800      	cmp	r0, #0
 8023962:	d0ba      	beq.n	80238da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8023964:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023966:	442b      	add	r3, r5
 8023968:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802396c:	07db      	lsls	r3, r3, #31
 802396e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8023972:	bf54      	ite	pl
 8023974:	f00c 0c0f 	andpl.w	ip, ip, #15
 8023978:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802397c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8023980:	fa5f f38c 	uxtb.w	r3, ip
 8023984:	930c      	str	r3, [sp, #48]	; 0x30
 8023986:	e7a8      	b.n	80238da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8023988:	f8b8 e000 	ldrh.w	lr, [r8]
 802398c:	fa1f fa83 	uxth.w	sl, r3
 8023990:	ea4f 202e 	mov.w	r0, lr, asr #8
 8023994:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8023998:	43db      	mvns	r3, r3
 802399a:	b2db      	uxtb	r3, r3
 802399c:	fb11 f10a 	smulbb	r1, r1, sl
 80239a0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80239a4:	fb00 1003 	mla	r0, r0, r3, r1
 80239a8:	b2d2      	uxtb	r2, r2
 80239aa:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80239ae:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80239b2:	fa5f fe8e 	uxtb.w	lr, lr
 80239b6:	fb12 f20a 	smulbb	r2, r2, sl
 80239ba:	fb0e 2203 	mla	r2, lr, r3, r2
 80239be:	fa5f fc8c 	uxtb.w	ip, ip
 80239c2:	b280      	uxth	r0, r0
 80239c4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80239c8:	b292      	uxth	r2, r2
 80239ca:	fb1c fc0a 	smulbb	ip, ip, sl
 80239ce:	fb01 cc03 	mla	ip, r1, r3, ip
 80239d2:	1c43      	adds	r3, r0, #1
 80239d4:	1c51      	adds	r1, r2, #1
 80239d6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80239da:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 80239de:	fa1f fc8c 	uxth.w	ip, ip
 80239e2:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80239e6:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80239ea:	4308      	orrs	r0, r1
 80239ec:	f10c 0101 	add.w	r1, ip, #1
 80239f0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80239f4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80239f8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80239fc:	ea40 000c 	orr.w	r0, r0, ip
 8023a00:	f8a8 0000 	strh.w	r0, [r8]
 8023a04:	e7a1      	b.n	802394a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8023a06:	b017      	add	sp, #92	; 0x5c
 8023a08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023a0c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8023a0c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023a10:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8023a14:	2d00      	cmp	r5, #0
 8023a16:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8023a1a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8023a1e:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8023a22:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8023a26:	fb05 0e03 	mla	lr, r5, r3, r0
 8023a2a:	f2c0 80b0 	blt.w	8023b8e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8023a2e:	45a9      	cmp	r9, r5
 8023a30:	f340 80ad 	ble.w	8023b8e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8023a34:	2800      	cmp	r0, #0
 8023a36:	f2c0 80a8 	blt.w	8023b8a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8023a3a:	4580      	cmp	r8, r0
 8023a3c:	f340 80a5 	ble.w	8023b8a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8023a40:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8023a44:	f01e 0f01 	tst.w	lr, #1
 8023a48:	5d16      	ldrb	r6, [r2, r4]
 8023a4a:	bf0c      	ite	eq
 8023a4c:	f006 060f 	andeq.w	r6, r6, #15
 8023a50:	1136      	asrne	r6, r6, #4
 8023a52:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8023a56:	b2f6      	uxtb	r6, r6
 8023a58:	1c44      	adds	r4, r0, #1
 8023a5a:	f100 809b 	bmi.w	8023b94 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8023a5e:	45a0      	cmp	r8, r4
 8023a60:	f340 8098 	ble.w	8023b94 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8023a64:	2f00      	cmp	r7, #0
 8023a66:	f000 8097 	beq.w	8023b98 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8023a6a:	f10e 0a01 	add.w	sl, lr, #1
 8023a6e:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8023a72:	f01a 0f01 	tst.w	sl, #1
 8023a76:	5d14      	ldrb	r4, [r2, r4]
 8023a78:	bf0c      	ite	eq
 8023a7a:	f004 040f 	andeq.w	r4, r4, #15
 8023a7e:	1124      	asrne	r4, r4, #4
 8023a80:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8023a84:	b2e4      	uxtb	r4, r4
 8023a86:	3501      	adds	r5, #1
 8023a88:	f100 808a 	bmi.w	8023ba0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8023a8c:	45a9      	cmp	r9, r5
 8023a8e:	f340 8087 	ble.w	8023ba0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8023a92:	f1bc 0f00 	cmp.w	ip, #0
 8023a96:	f000 8086 	beq.w	8023ba6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8023a9a:	2800      	cmp	r0, #0
 8023a9c:	db7e      	blt.n	8023b9c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8023a9e:	4580      	cmp	r8, r0
 8023aa0:	dd7c      	ble.n	8023b9c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8023aa2:	eb03 090e 	add.w	r9, r3, lr
 8023aa6:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8023aaa:	f019 0f01 	tst.w	r9, #1
 8023aae:	5d55      	ldrb	r5, [r2, r5]
 8023ab0:	bf0c      	ite	eq
 8023ab2:	f005 050f 	andeq.w	r5, r5, #15
 8023ab6:	112d      	asrne	r5, r5, #4
 8023ab8:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8023abc:	b2ed      	uxtb	r5, r5
 8023abe:	3001      	adds	r0, #1
 8023ac0:	d474      	bmi.n	8023bac <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8023ac2:	4580      	cmp	r8, r0
 8023ac4:	dd72      	ble.n	8023bac <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8023ac6:	2f00      	cmp	r7, #0
 8023ac8:	d072      	beq.n	8023bb0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8023aca:	3301      	adds	r3, #1
 8023acc:	449e      	add	lr, r3
 8023ace:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8023ad2:	f01e 0f01 	tst.w	lr, #1
 8023ad6:	5cd0      	ldrb	r0, [r2, r3]
 8023ad8:	bf0c      	ite	eq
 8023ada:	f000 000f 	andeq.w	r0, r0, #15
 8023ade:	1100      	asrne	r0, r0, #4
 8023ae0:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8023ae4:	b2c3      	uxtb	r3, r0
 8023ae6:	b2ba      	uxth	r2, r7
 8023ae8:	fa1f fc8c 	uxth.w	ip, ip
 8023aec:	fb02 f00c 	mul.w	r0, r2, ip
 8023af0:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8023af4:	0112      	lsls	r2, r2, #4
 8023af6:	fa1f fc8c 	uxth.w	ip, ip
 8023afa:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8023afe:	1a12      	subs	r2, r2, r0
 8023b00:	eba7 070c 	sub.w	r7, r7, ip
 8023b04:	b292      	uxth	r2, r2
 8023b06:	b2bf      	uxth	r7, r7
 8023b08:	4362      	muls	r2, r4
 8023b0a:	fb06 2207 	mla	r2, r6, r7, r2
 8023b0e:	fb0c 2505 	mla	r5, ip, r5, r2
 8023b12:	fb00 5303 	mla	r3, r0, r3, r5
 8023b16:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023b1a:	b3a3      	cbz	r3, 8023b86 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8023b1c:	4a25      	ldr	r2, [pc, #148]	; (8023bb4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8023b1e:	880e      	ldrh	r6, [r1, #0]
 8023b20:	6815      	ldr	r5, [r2, #0]
 8023b22:	1234      	asrs	r4, r6, #8
 8023b24:	b29a      	uxth	r2, r3
 8023b26:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8023b2a:	43db      	mvns	r3, r3
 8023b2c:	b2db      	uxtb	r3, r3
 8023b2e:	fb10 f002 	smulbb	r0, r0, r2
 8023b32:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8023b36:	fb04 0403 	mla	r4, r4, r3, r0
 8023b3a:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8023b3e:	10f0      	asrs	r0, r6, #3
 8023b40:	b2ed      	uxtb	r5, r5
 8023b42:	00f6      	lsls	r6, r6, #3
 8023b44:	fb17 f702 	smulbb	r7, r7, r2
 8023b48:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023b4c:	fb15 f202 	smulbb	r2, r5, r2
 8023b50:	b2f6      	uxtb	r6, r6
 8023b52:	b2a4      	uxth	r4, r4
 8023b54:	fb00 7003 	mla	r0, r0, r3, r7
 8023b58:	fb06 2303 	mla	r3, r6, r3, r2
 8023b5c:	b29a      	uxth	r2, r3
 8023b5e:	1c63      	adds	r3, r4, #1
 8023b60:	b280      	uxth	r0, r0
 8023b62:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8023b66:	1c53      	adds	r3, r2, #1
 8023b68:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023b6c:	1c42      	adds	r2, r0, #1
 8023b6e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023b72:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8023b76:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023b7a:	0940      	lsrs	r0, r0, #5
 8023b7c:	4323      	orrs	r3, r4
 8023b7e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023b82:	4303      	orrs	r3, r0
 8023b84:	800b      	strh	r3, [r1, #0]
 8023b86:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023b8a:	2600      	movs	r6, #0
 8023b8c:	e764      	b.n	8023a58 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8023b8e:	2400      	movs	r4, #0
 8023b90:	4626      	mov	r6, r4
 8023b92:	e778      	b.n	8023a86 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8023b94:	2400      	movs	r4, #0
 8023b96:	e776      	b.n	8023a86 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8023b98:	463c      	mov	r4, r7
 8023b9a:	e774      	b.n	8023a86 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8023b9c:	2500      	movs	r5, #0
 8023b9e:	e78e      	b.n	8023abe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8023ba0:	2300      	movs	r3, #0
 8023ba2:	461d      	mov	r5, r3
 8023ba4:	e79f      	b.n	8023ae6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8023ba6:	4663      	mov	r3, ip
 8023ba8:	4665      	mov	r5, ip
 8023baa:	e79c      	b.n	8023ae6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8023bac:	2300      	movs	r3, #0
 8023bae:	e79a      	b.n	8023ae6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8023bb0:	463b      	mov	r3, r7
 8023bb2:	e798      	b.n	8023ae6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8023bb4:	200137cc 	.word	0x200137cc

08023bb8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023bb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023bbc:	b093      	sub	sp, #76	; 0x4c
 8023bbe:	461d      	mov	r5, r3
 8023bc0:	920c      	str	r2, [sp, #48]	; 0x30
 8023bc2:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8023bc4:	9107      	str	r1, [sp, #28]
 8023bc6:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8023bca:	9011      	str	r0, [sp, #68]	; 0x44
 8023bcc:	6850      	ldr	r0, [r2, #4]
 8023bce:	6812      	ldr	r2, [r2, #0]
 8023bd0:	fb00 1303 	mla	r3, r0, r3, r1
 8023bd4:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8023bd8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023bda:	689b      	ldr	r3, [r3, #8]
 8023bdc:	3301      	adds	r3, #1
 8023bde:	f023 0301 	bic.w	r3, r3, #1
 8023be2:	9306      	str	r3, [sp, #24]
 8023be4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023be6:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8023bea:	681f      	ldr	r7, [r3, #0]
 8023bec:	9b07      	ldr	r3, [sp, #28]
 8023bee:	2b00      	cmp	r3, #0
 8023bf0:	dc03      	bgt.n	8023bfa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8023bf2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023bf4:	2b00      	cmp	r3, #0
 8023bf6:	f340 8267 	ble.w	80240c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8023bfa:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023bfc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023c00:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023c04:	1e48      	subs	r0, r1, #1
 8023c06:	f102 3cff 	add.w	ip, r2, #4294967295
 8023c0a:	2d00      	cmp	r5, #0
 8023c0c:	f340 80b8 	ble.w	8023d80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8023c10:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8023c14:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023c18:	d406      	bmi.n	8023c28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8023c1a:	4586      	cmp	lr, r0
 8023c1c:	da04      	bge.n	8023c28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8023c1e:	2b00      	cmp	r3, #0
 8023c20:	db02      	blt.n	8023c28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8023c22:	4563      	cmp	r3, ip
 8023c24:	f2c0 80ad 	blt.w	8023d82 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8023c28:	f11e 0e01 	adds.w	lr, lr, #1
 8023c2c:	f100 80a0 	bmi.w	8023d70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8023c30:	4571      	cmp	r1, lr
 8023c32:	f2c0 809d 	blt.w	8023d70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8023c36:	3301      	adds	r3, #1
 8023c38:	f100 809a 	bmi.w	8023d70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8023c3c:	429a      	cmp	r2, r3
 8023c3e:	f2c0 8097 	blt.w	8023d70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8023c42:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8023c46:	9509      	str	r5, [sp, #36]	; 0x24
 8023c48:	46c8      	mov	r8, r9
 8023c4a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023c4c:	2b00      	cmp	r3, #0
 8023c4e:	f340 80b6 	ble.w	8023dbe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8023c52:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8023c56:	9308      	str	r3, [sp, #32]
 8023c58:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023c5a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8023c5e:	1423      	asrs	r3, r4, #16
 8023c60:	ea4f 4026 	mov.w	r0, r6, asr #16
 8023c64:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8023c68:	f100 813e 	bmi.w	8023ee8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8023c6c:	f10c 3bff 	add.w	fp, ip, #4294967295
 8023c70:	455b      	cmp	r3, fp
 8023c72:	f280 8139 	bge.w	8023ee8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8023c76:	2800      	cmp	r0, #0
 8023c78:	f2c0 8136 	blt.w	8023ee8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8023c7c:	f10e 3bff 	add.w	fp, lr, #4294967295
 8023c80:	4558      	cmp	r0, fp
 8023c82:	f280 8131 	bge.w	8023ee8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8023c86:	9a06      	ldr	r2, [sp, #24]
 8023c88:	fb00 3302 	mla	r3, r0, r2, r3
 8023c8c:	0858      	lsrs	r0, r3, #1
 8023c8e:	07da      	lsls	r2, r3, #31
 8023c90:	f817 c000 	ldrb.w	ip, [r7, r0]
 8023c94:	9a08      	ldr	r2, [sp, #32]
 8023c96:	bf54      	ite	pl
 8023c98:	f00c 0c0f 	andpl.w	ip, ip, #15
 8023c9c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8023ca0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8023ca4:	fa5f fc8c 	uxtb.w	ip, ip
 8023ca8:	2a00      	cmp	r2, #0
 8023caa:	f000 80cb 	beq.w	8023e44 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8023cae:	1c58      	adds	r0, r3, #1
 8023cb0:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8023cb4:	07c0      	lsls	r0, r0, #31
 8023cb6:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8023cba:	bf54      	ite	pl
 8023cbc:	f00e 0e0f 	andpl.w	lr, lr, #15
 8023cc0:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8023cc4:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8023cc8:	fa5f fe8e 	uxtb.w	lr, lr
 8023ccc:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8023cd0:	b1b9      	cbz	r1, 8023d02 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8023cd2:	4453      	add	r3, sl
 8023cd4:	0858      	lsrs	r0, r3, #1
 8023cd6:	07da      	lsls	r2, r3, #31
 8023cd8:	5c38      	ldrb	r0, [r7, r0]
 8023cda:	bf54      	ite	pl
 8023cdc:	f000 000f 	andpl.w	r0, r0, #15
 8023ce0:	1100      	asrmi	r0, r0, #4
 8023ce2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8023ce6:	b2c0      	uxtb	r0, r0
 8023ce8:	900a      	str	r0, [sp, #40]	; 0x28
 8023cea:	1c58      	adds	r0, r3, #1
 8023cec:	0843      	lsrs	r3, r0, #1
 8023cee:	07c2      	lsls	r2, r0, #31
 8023cf0:	5cfb      	ldrb	r3, [r7, r3]
 8023cf2:	bf54      	ite	pl
 8023cf4:	f003 030f 	andpl.w	r3, r3, #15
 8023cf8:	111b      	asrmi	r3, r3, #4
 8023cfa:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8023cfe:	b2db      	uxtb	r3, r3
 8023d00:	930e      	str	r3, [sp, #56]	; 0x38
 8023d02:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8023d06:	b289      	uxth	r1, r1
 8023d08:	fb02 f301 	mul.w	r3, r2, r1
 8023d0c:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8023d10:	0112      	lsls	r2, r2, #4
 8023d12:	b289      	uxth	r1, r1
 8023d14:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8023d18:	1a40      	subs	r0, r0, r1
 8023d1a:	fa1f fe80 	uxth.w	lr, r0
 8023d1e:	1ad2      	subs	r2, r2, r3
 8023d20:	980d      	ldr	r0, [sp, #52]	; 0x34
 8023d22:	b292      	uxth	r2, r2
 8023d24:	4342      	muls	r2, r0
 8023d26:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8023d2a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8023d2c:	fb01 c102 	mla	r1, r1, r2, ip
 8023d30:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8023d32:	fb03 1302 	mla	r3, r3, r2, r1
 8023d36:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023d3a:	2bff      	cmp	r3, #255	; 0xff
 8023d3c:	f040 8093 	bne.w	8023e66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8023d40:	4bbe      	ldr	r3, [pc, #760]	; (802403c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8023d42:	681a      	ldr	r2, [r3, #0]
 8023d44:	4bbe      	ldr	r3, [pc, #760]	; (8024040 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8023d46:	0951      	lsrs	r1, r2, #5
 8023d48:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8023d4c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023d50:	430b      	orrs	r3, r1
 8023d52:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8023d56:	4313      	orrs	r3, r2
 8023d58:	f8a8 3000 	strh.w	r3, [r8]
 8023d5c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023d5e:	441c      	add	r4, r3
 8023d60:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023d62:	441e      	add	r6, r3
 8023d64:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023d66:	3b01      	subs	r3, #1
 8023d68:	f108 0802 	add.w	r8, r8, #2
 8023d6c:	9309      	str	r3, [sp, #36]	; 0x24
 8023d6e:	e76c      	b.n	8023c4a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023d70:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023d72:	441c      	add	r4, r3
 8023d74:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023d76:	3d01      	subs	r5, #1
 8023d78:	441e      	add	r6, r3
 8023d7a:	f109 0902 	add.w	r9, r9, #2
 8023d7e:	e744      	b.n	8023c0a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8023d80:	d021      	beq.n	8023dc6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8023d82:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8023d84:	1e6b      	subs	r3, r5, #1
 8023d86:	fb00 4003 	mla	r0, r0, r3, r4
 8023d8a:	1400      	asrs	r0, r0, #16
 8023d8c:	f53f af59 	bmi.w	8023c42 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8023d90:	3901      	subs	r1, #1
 8023d92:	4288      	cmp	r0, r1
 8023d94:	f6bf af55 	bge.w	8023c42 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8023d98:	9920      	ldr	r1, [sp, #128]	; 0x80
 8023d9a:	fb01 6303 	mla	r3, r1, r3, r6
 8023d9e:	141b      	asrs	r3, r3, #16
 8023da0:	f53f af4f 	bmi.w	8023c42 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8023da4:	3a01      	subs	r2, #1
 8023da6:	4293      	cmp	r3, r2
 8023da8:	f6bf af4b 	bge.w	8023c42 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8023dac:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8023db0:	9308      	str	r3, [sp, #32]
 8023db2:	46a8      	mov	r8, r5
 8023db4:	46ce      	mov	lr, r9
 8023db6:	f1b8 0f00 	cmp.w	r8, #0
 8023dba:	f300 80b5 	bgt.w	8023f28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8023dbe:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8023dc2:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8023dc6:	9b07      	ldr	r3, [sp, #28]
 8023dc8:	2b00      	cmp	r3, #0
 8023dca:	f340 817d 	ble.w	80240c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8023dce:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023dd2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023dd6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023dda:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023ddc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023de0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023de4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023de8:	eef0 6a62 	vmov.f32	s13, s5
 8023dec:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023df0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023df4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023df8:	ee16 4a90 	vmov	r4, s13
 8023dfc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023e00:	eef0 6a43 	vmov.f32	s13, s6
 8023e04:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023e08:	ee12 2a90 	vmov	r2, s5
 8023e0c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023e10:	fb92 f3f3 	sdiv	r3, r2, r3
 8023e14:	ee13 2a10 	vmov	r2, s6
 8023e18:	931f      	str	r3, [sp, #124]	; 0x7c
 8023e1a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023e1c:	fb92 f3f3 	sdiv	r3, r2, r3
 8023e20:	9320      	str	r3, [sp, #128]	; 0x80
 8023e22:	9b07      	ldr	r3, [sp, #28]
 8023e24:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8023e26:	3b01      	subs	r3, #1
 8023e28:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023e2c:	9307      	str	r3, [sp, #28]
 8023e2e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023e30:	ee16 6a90 	vmov	r6, s13
 8023e34:	bf14      	ite	ne
 8023e36:	461d      	movne	r5, r3
 8023e38:	4615      	moveq	r5, r2
 8023e3a:	eeb0 3a67 	vmov.f32	s6, s15
 8023e3e:	eef0 2a47 	vmov.f32	s5, s14
 8023e42:	e6d3      	b.n	8023bec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8023e44:	2900      	cmp	r1, #0
 8023e46:	f43f af5c 	beq.w	8023d02 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8023e4a:	eb0a 0003 	add.w	r0, sl, r3
 8023e4e:	0843      	lsrs	r3, r0, #1
 8023e50:	07c0      	lsls	r0, r0, #31
 8023e52:	5cfb      	ldrb	r3, [r7, r3]
 8023e54:	bf54      	ite	pl
 8023e56:	f003 030f 	andpl.w	r3, r3, #15
 8023e5a:	111b      	asrmi	r3, r3, #4
 8023e5c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8023e60:	b2db      	uxtb	r3, r3
 8023e62:	930a      	str	r3, [sp, #40]	; 0x28
 8023e64:	e74d      	b.n	8023d02 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8023e66:	2b00      	cmp	r3, #0
 8023e68:	f43f af78 	beq.w	8023d5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8023e6c:	4a73      	ldr	r2, [pc, #460]	; (802403c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8023e6e:	f8b8 c000 	ldrh.w	ip, [r8]
 8023e72:	6810      	ldr	r0, [r2, #0]
 8023e74:	fa1f fe83 	uxth.w	lr, r3
 8023e78:	ea4f 212c 	mov.w	r1, ip, asr #8
 8023e7c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8023e80:	43db      	mvns	r3, r3
 8023e82:	b2db      	uxtb	r3, r3
 8023e84:	fb12 f20e 	smulbb	r2, r2, lr
 8023e88:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023e8c:	fb01 2103 	mla	r1, r1, r3, r2
 8023e90:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8023e94:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8023e98:	b2c0      	uxtb	r0, r0
 8023e9a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8023e9e:	fb1b fb0e 	smulbb	fp, fp, lr
 8023ea2:	b289      	uxth	r1, r1
 8023ea4:	fb10 fe0e 	smulbb	lr, r0, lr
 8023ea8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8023eac:	fa5f fc8c 	uxtb.w	ip, ip
 8023eb0:	fb02 b203 	mla	r2, r2, r3, fp
 8023eb4:	1c48      	adds	r0, r1, #1
 8023eb6:	fb0c e303 	mla	r3, ip, r3, lr
 8023eba:	b292      	uxth	r2, r2
 8023ebc:	b29b      	uxth	r3, r3
 8023ebe:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8023ec2:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8023ec6:	f102 0b01 	add.w	fp, r2, #1
 8023eca:	1c59      	adds	r1, r3, #1
 8023ecc:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8023ed0:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8023ed4:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8023ed8:	0952      	lsrs	r2, r2, #5
 8023eda:	4301      	orrs	r1, r0
 8023edc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023ee0:	4311      	orrs	r1, r2
 8023ee2:	f8a8 1000 	strh.w	r1, [r8]
 8023ee6:	e739      	b.n	8023d5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8023ee8:	f113 0b01 	adds.w	fp, r3, #1
 8023eec:	f53f af36 	bmi.w	8023d5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8023ef0:	45dc      	cmp	ip, fp
 8023ef2:	f6ff af33 	blt.w	8023d5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8023ef6:	f110 0b01 	adds.w	fp, r0, #1
 8023efa:	f53f af2f 	bmi.w	8023d5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8023efe:	45de      	cmp	lr, fp
 8023f00:	f6ff af2c 	blt.w	8023d5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8023f04:	9a08      	ldr	r2, [sp, #32]
 8023f06:	9302      	str	r3, [sp, #8]
 8023f08:	fa0f f38e 	sxth.w	r3, lr
 8023f0c:	9301      	str	r3, [sp, #4]
 8023f0e:	fa0f f38c 	sxth.w	r3, ip
 8023f12:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8023f16:	9105      	str	r1, [sp, #20]
 8023f18:	9300      	str	r3, [sp, #0]
 8023f1a:	463a      	mov	r2, r7
 8023f1c:	4653      	mov	r3, sl
 8023f1e:	4641      	mov	r1, r8
 8023f20:	9811      	ldr	r0, [sp, #68]	; 0x44
 8023f22:	f7ff fd73 	bl	8023a0c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8023f26:	e719      	b.n	8023d5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8023f28:	9906      	ldr	r1, [sp, #24]
 8023f2a:	1422      	asrs	r2, r4, #16
 8023f2c:	1433      	asrs	r3, r6, #16
 8023f2e:	fb01 2303 	mla	r3, r1, r3, r2
 8023f32:	085a      	lsrs	r2, r3, #1
 8023f34:	07d9      	lsls	r1, r3, #31
 8023f36:	5cba      	ldrb	r2, [r7, r2]
 8023f38:	bf54      	ite	pl
 8023f3a:	f002 020f 	andpl.w	r2, r2, #15
 8023f3e:	1112      	asrmi	r2, r2, #4
 8023f40:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8023f44:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8023f48:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8023f4c:	b2d2      	uxtb	r2, r2
 8023f4e:	2800      	cmp	r0, #0
 8023f50:	d062      	beq.n	8024018 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 8023f52:	f103 0a01 	add.w	sl, r3, #1
 8023f56:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8023f5a:	f01a 0f01 	tst.w	sl, #1
 8023f5e:	5c79      	ldrb	r1, [r7, r1]
 8023f60:	bf0c      	ite	eq
 8023f62:	f001 010f 	andeq.w	r1, r1, #15
 8023f66:	1109      	asrne	r1, r1, #4
 8023f68:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8023f6c:	b2c9      	uxtb	r1, r1
 8023f6e:	910f      	str	r1, [sp, #60]	; 0x3c
 8023f70:	f1bc 0f00 	cmp.w	ip, #0
 8023f74:	d019      	beq.n	8023faa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8023f76:	9908      	ldr	r1, [sp, #32]
 8023f78:	440b      	add	r3, r1
 8023f7a:	0859      	lsrs	r1, r3, #1
 8023f7c:	f013 0f01 	tst.w	r3, #1
 8023f80:	5c79      	ldrb	r1, [r7, r1]
 8023f82:	bf0c      	ite	eq
 8023f84:	f001 010f 	andeq.w	r1, r1, #15
 8023f88:	1109      	asrne	r1, r1, #4
 8023f8a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8023f8e:	b2c9      	uxtb	r1, r1
 8023f90:	3301      	adds	r3, #1
 8023f92:	910b      	str	r1, [sp, #44]	; 0x2c
 8023f94:	0859      	lsrs	r1, r3, #1
 8023f96:	07db      	lsls	r3, r3, #31
 8023f98:	5c79      	ldrb	r1, [r7, r1]
 8023f9a:	bf54      	ite	pl
 8023f9c:	f001 010f 	andpl.w	r1, r1, #15
 8023fa0:	1109      	asrmi	r1, r1, #4
 8023fa2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8023fa6:	b2c9      	uxtb	r1, r1
 8023fa8:	9110      	str	r1, [sp, #64]	; 0x40
 8023faa:	b280      	uxth	r0, r0
 8023fac:	fa1f fc8c 	uxth.w	ip, ip
 8023fb0:	fb00 f30c 	mul.w	r3, r0, ip
 8023fb4:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8023fb8:	0100      	lsls	r0, r0, #4
 8023fba:	fa1f fc8c 	uxth.w	ip, ip
 8023fbe:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8023fc2:	eba1 010c 	sub.w	r1, r1, ip
 8023fc6:	fa1f fa81 	uxth.w	sl, r1
 8023fca:	1ac0      	subs	r0, r0, r3
 8023fcc:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8023fce:	b280      	uxth	r0, r0
 8023fd0:	4348      	muls	r0, r1
 8023fd2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8023fd4:	fb02 020a 	mla	r2, r2, sl, r0
 8023fd8:	fb0c 2c01 	mla	ip, ip, r1, r2
 8023fdc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8023fde:	fb03 c302 	mla	r3, r3, r2, ip
 8023fe2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023fe6:	2bff      	cmp	r3, #255	; 0xff
 8023fe8:	d12c      	bne.n	8024044 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8023fea:	4b14      	ldr	r3, [pc, #80]	; (802403c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8023fec:	681a      	ldr	r2, [r3, #0]
 8023fee:	4b14      	ldr	r3, [pc, #80]	; (8024040 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8023ff0:	0951      	lsrs	r1, r2, #5
 8023ff2:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8023ff6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023ffa:	430b      	orrs	r3, r1
 8023ffc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024000:	4313      	orrs	r3, r2
 8024002:	f8ae 3000 	strh.w	r3, [lr]
 8024006:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024008:	441c      	add	r4, r3
 802400a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802400c:	f10e 0e02 	add.w	lr, lr, #2
 8024010:	441e      	add	r6, r3
 8024012:	f108 38ff 	add.w	r8, r8, #4294967295
 8024016:	e6ce      	b.n	8023db6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8024018:	f1bc 0f00 	cmp.w	ip, #0
 802401c:	d0c5      	beq.n	8023faa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802401e:	9908      	ldr	r1, [sp, #32]
 8024020:	440b      	add	r3, r1
 8024022:	0859      	lsrs	r1, r3, #1
 8024024:	07db      	lsls	r3, r3, #31
 8024026:	5c79      	ldrb	r1, [r7, r1]
 8024028:	bf54      	ite	pl
 802402a:	f001 010f 	andpl.w	r1, r1, #15
 802402e:	1109      	asrmi	r1, r1, #4
 8024030:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8024034:	b2c9      	uxtb	r1, r1
 8024036:	910b      	str	r1, [sp, #44]	; 0x2c
 8024038:	e7b7      	b.n	8023faa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802403a:	bf00      	nop
 802403c:	200137cc 	.word	0x200137cc
 8024040:	fffff800 	.word	0xfffff800
 8024044:	2b00      	cmp	r3, #0
 8024046:	d0de      	beq.n	8024006 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8024048:	4a21      	ldr	r2, [pc, #132]	; (80240d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 802404a:	f8be c000 	ldrh.w	ip, [lr]
 802404e:	6810      	ldr	r0, [r2, #0]
 8024050:	fa1f fa83 	uxth.w	sl, r3
 8024054:	ea4f 212c 	mov.w	r1, ip, asr #8
 8024058:	f3c0 4207 	ubfx	r2, r0, #16, #8
 802405c:	43db      	mvns	r3, r3
 802405e:	b2db      	uxtb	r3, r3
 8024060:	fb12 f20a 	smulbb	r2, r2, sl
 8024064:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8024068:	fb01 2103 	mla	r1, r1, r3, r2
 802406c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8024070:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8024074:	b2c0      	uxtb	r0, r0
 8024076:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802407a:	fa5f fc8c 	uxtb.w	ip, ip
 802407e:	fb10 f00a 	smulbb	r0, r0, sl
 8024082:	fb0c 0003 	mla	r0, ip, r3, r0
 8024086:	b289      	uxth	r1, r1
 8024088:	fb1b fb0a 	smulbb	fp, fp, sl
 802408c:	b280      	uxth	r0, r0
 802408e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8024092:	fb02 b203 	mla	r2, r2, r3, fp
 8024096:	1c4b      	adds	r3, r1, #1
 8024098:	f100 0b01 	add.w	fp, r0, #1
 802409c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80240a0:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 80240a4:	b292      	uxth	r2, r2
 80240a6:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 80240aa:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80240ae:	ea4b 0101 	orr.w	r1, fp, r1
 80240b2:	f102 0b01 	add.w	fp, r2, #1
 80240b6:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80240ba:	0952      	lsrs	r2, r2, #5
 80240bc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80240c0:	4311      	orrs	r1, r2
 80240c2:	f8ae 1000 	strh.w	r1, [lr]
 80240c6:	e79e      	b.n	8024006 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80240c8:	b013      	add	sp, #76	; 0x4c
 80240ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80240ce:	bf00      	nop
 80240d0:	200137cc 	.word	0x200137cc

080240d4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 80240d4:	b570      	push	{r4, r5, r6, lr}
 80240d6:	1208      	asrs	r0, r1, #8
 80240d8:	b29e      	uxth	r6, r3
 80240da:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 80240de:	1213      	asrs	r3, r2, #8
 80240e0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80240e4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80240e8:	fb13 f305 	smulbb	r3, r3, r5
 80240ec:	fb10 f006 	smulbb	r0, r0, r6
 80240f0:	4418      	add	r0, r3
 80240f2:	10cc      	asrs	r4, r1, #3
 80240f4:	10d3      	asrs	r3, r2, #3
 80240f6:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80240fa:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80240fe:	fb13 f305 	smulbb	r3, r3, r5
 8024102:	fb14 f406 	smulbb	r4, r4, r6
 8024106:	00c9      	lsls	r1, r1, #3
 8024108:	00d2      	lsls	r2, r2, #3
 802410a:	441c      	add	r4, r3
 802410c:	b2d2      	uxtb	r2, r2
 802410e:	b2cb      	uxtb	r3, r1
 8024110:	fb12 f205 	smulbb	r2, r2, r5
 8024114:	b280      	uxth	r0, r0
 8024116:	fb13 f306 	smulbb	r3, r3, r6
 802411a:	4413      	add	r3, r2
 802411c:	1c42      	adds	r2, r0, #1
 802411e:	b29b      	uxth	r3, r3
 8024120:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024124:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 8024128:	1c58      	adds	r0, r3, #1
 802412a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802412e:	b2a4      	uxth	r4, r4
 8024130:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8024134:	4310      	orrs	r0, r2
 8024136:	1c62      	adds	r2, r4, #1
 8024138:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802413c:	0964      	lsrs	r4, r4, #5
 802413e:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8024142:	4320      	orrs	r0, r4
 8024144:	bd70      	pop	{r4, r5, r6, pc}
	...

08024148 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8024148:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802414c:	b08f      	sub	sp, #60	; 0x3c
 802414e:	461c      	mov	r4, r3
 8024150:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8024154:	9004      	str	r0, [sp, #16]
 8024156:	460d      	mov	r5, r1
 8024158:	4616      	mov	r6, r2
 802415a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802415c:	2f00      	cmp	r7, #0
 802415e:	f000 80f6 	beq.w	802434e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8024162:	6820      	ldr	r0, [r4, #0]
 8024164:	6861      	ldr	r1, [r4, #4]
 8024166:	aa0a      	add	r2, sp, #40	; 0x28
 8024168:	c203      	stmia	r2!, {r0, r1}
 802416a:	6818      	ldr	r0, [r3, #0]
 802416c:	6859      	ldr	r1, [r3, #4]
 802416e:	aa0c      	add	r2, sp, #48	; 0x30
 8024170:	c203      	stmia	r2!, {r0, r1}
 8024172:	a80a      	add	r0, sp, #40	; 0x28
 8024174:	f7ef fc90 	bl	8013a98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024178:	4621      	mov	r1, r4
 802417a:	a80c      	add	r0, sp, #48	; 0x30
 802417c:	f7ef fcd0 	bl	8013b20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8024180:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8024184:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8024188:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 802418c:	f002 0301 	and.w	r3, r2, #1
 8024190:	9306      	str	r3, [sp, #24]
 8024192:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8024196:	f003 0101 	and.w	r1, r3, #1
 802419a:	9105      	str	r1, [sp, #20]
 802419c:	9805      	ldr	r0, [sp, #20]
 802419e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 80241a2:	4403      	add	r3, r0
 80241a4:	fb01 2303 	mla	r3, r1, r3, r2
 80241a8:	f04f 0802 	mov.w	r8, #2
 80241ac:	fb93 f3f8 	sdiv	r3, r3, r8
 80241b0:	441d      	add	r5, r3
 80241b2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80241b6:	441a      	add	r2, r3
 80241b8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80241bc:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80241c0:	4419      	add	r1, r3
 80241c2:	4b64      	ldr	r3, [pc, #400]	; (8024354 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80241c4:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 80241c8:	6818      	ldr	r0, [r3, #0]
 80241ca:	6803      	ldr	r3, [r0, #0]
 80241cc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80241ce:	4798      	blx	r3
 80241d0:	4a61      	ldr	r2, [pc, #388]	; (8024358 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 80241d2:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 80241d6:	8813      	ldrh	r3, [r2, #0]
 80241d8:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 80241dc:	2fff      	cmp	r7, #255	; 0xff
 80241de:	fb03 a404 	mla	r4, r3, r4, sl
 80241e2:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80241e6:	f106 0604 	add.w	r6, r6, #4
 80241ea:	4611      	mov	r1, r2
 80241ec:	fb03 fb0b 	mul.w	fp, r3, fp
 80241f0:	d06b      	beq.n	80242ca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 80241f2:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 80241f6:	9303      	str	r3, [sp, #12]
 80241f8:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 80241fc:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8024200:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8024204:	9b07      	ldr	r3, [sp, #28]
 8024206:	42a3      	cmp	r3, r4
 8024208:	f240 809c 	bls.w	8024344 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 802420c:	9b06      	ldr	r3, [sp, #24]
 802420e:	2b00      	cmp	r3, #0
 8024210:	d039      	beq.n	8024286 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8024212:	782b      	ldrb	r3, [r5, #0]
 8024214:	8822      	ldrh	r2, [r4, #0]
 8024216:	9804      	ldr	r0, [sp, #16]
 8024218:	f003 030f 	and.w	r3, r3, #15
 802421c:	f105 0801 	add.w	r8, r5, #1
 8024220:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8024224:	9b03      	ldr	r3, [sp, #12]
 8024226:	9300      	str	r3, [sp, #0]
 8024228:	463b      	mov	r3, r7
 802422a:	f7ff ff53 	bl	80240d4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802422e:	f824 0b02 	strh.w	r0, [r4], #2
 8024232:	f109 3bff 	add.w	fp, r9, #4294967295
 8024236:	f1bb 0f01 	cmp.w	fp, #1
 802423a:	46a2      	mov	sl, r4
 802423c:	f104 0404 	add.w	r4, r4, #4
 8024240:	dd24      	ble.n	802428c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 8024242:	f898 3000 	ldrb.w	r3, [r8]
 8024246:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802424a:	9804      	ldr	r0, [sp, #16]
 802424c:	091b      	lsrs	r3, r3, #4
 802424e:	f1ab 0b02 	sub.w	fp, fp, #2
 8024252:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8024256:	9b03      	ldr	r3, [sp, #12]
 8024258:	9300      	str	r3, [sp, #0]
 802425a:	463b      	mov	r3, r7
 802425c:	f7ff ff3a 	bl	80240d4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8024260:	f824 0c04 	strh.w	r0, [r4, #-4]
 8024264:	f818 3b01 	ldrb.w	r3, [r8], #1
 8024268:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 802426c:	9804      	ldr	r0, [sp, #16]
 802426e:	f003 030f 	and.w	r3, r3, #15
 8024272:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8024276:	9b03      	ldr	r3, [sp, #12]
 8024278:	9300      	str	r3, [sp, #0]
 802427a:	463b      	mov	r3, r7
 802427c:	f7ff ff2a 	bl	80240d4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8024280:	f824 0c02 	strh.w	r0, [r4, #-2]
 8024284:	e7d7      	b.n	8024236 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8024286:	46a8      	mov	r8, r5
 8024288:	46cb      	mov	fp, r9
 802428a:	e7d4      	b.n	8024236 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 802428c:	d10e      	bne.n	80242ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 802428e:	f898 3000 	ldrb.w	r3, [r8]
 8024292:	f8ba 2000 	ldrh.w	r2, [sl]
 8024296:	9804      	ldr	r0, [sp, #16]
 8024298:	091b      	lsrs	r3, r3, #4
 802429a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802429e:	9b03      	ldr	r3, [sp, #12]
 80242a0:	9300      	str	r3, [sp, #0]
 80242a2:	463b      	mov	r3, r7
 80242a4:	f7ff ff16 	bl	80240d4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80242a8:	f82a 0b02 	strh.w	r0, [sl], #2
 80242ac:	9b08      	ldr	r3, [sp, #32]
 80242ae:	9a05      	ldr	r2, [sp, #20]
 80242b0:	881c      	ldrh	r4, [r3, #0]
 80242b2:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80242b6:	eba4 0409 	sub.w	r4, r4, r9
 80242ba:	4413      	add	r3, r2
 80242bc:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 80242c0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80242c2:	fb93 f3f2 	sdiv	r3, r3, r2
 80242c6:	441d      	add	r5, r3
 80242c8:	e79c      	b.n	8024204 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 80242ca:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 80242ce:	45a3      	cmp	fp, r4
 80242d0:	d938      	bls.n	8024344 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80242d2:	9b06      	ldr	r3, [sp, #24]
 80242d4:	b1f3      	cbz	r3, 8024314 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 80242d6:	782b      	ldrb	r3, [r5, #0]
 80242d8:	f003 030f 	and.w	r3, r3, #15
 80242dc:	1c6a      	adds	r2, r5, #1
 80242de:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80242e2:	8023      	strh	r3, [r4, #0]
 80242e4:	f109 30ff 	add.w	r0, r9, #4294967295
 80242e8:	3402      	adds	r4, #2
 80242ea:	2801      	cmp	r0, #1
 80242ec:	4623      	mov	r3, r4
 80242ee:	f104 0404 	add.w	r4, r4, #4
 80242f2:	dd12      	ble.n	802431a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 80242f4:	7813      	ldrb	r3, [r2, #0]
 80242f6:	091b      	lsrs	r3, r3, #4
 80242f8:	3802      	subs	r0, #2
 80242fa:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80242fe:	f824 3c04 	strh.w	r3, [r4, #-4]
 8024302:	f812 3b01 	ldrb.w	r3, [r2], #1
 8024306:	f003 030f 	and.w	r3, r3, #15
 802430a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802430e:	f824 3c02 	strh.w	r3, [r4, #-2]
 8024312:	e7ea      	b.n	80242ea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8024314:	462a      	mov	r2, r5
 8024316:	4648      	mov	r0, r9
 8024318:	e7e7      	b.n	80242ea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802431a:	d106      	bne.n	802432a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 802431c:	7812      	ldrb	r2, [r2, #0]
 802431e:	0912      	lsrs	r2, r2, #4
 8024320:	3302      	adds	r3, #2
 8024322:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8024326:	f823 2c02 	strh.w	r2, [r3, #-2]
 802432a:	880c      	ldrh	r4, [r1, #0]
 802432c:	9a05      	ldr	r2, [sp, #20]
 802432e:	eba4 0409 	sub.w	r4, r4, r9
 8024332:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8024336:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802433a:	4413      	add	r3, r2
 802433c:	fb93 f3f8 	sdiv	r3, r3, r8
 8024340:	441d      	add	r5, r3
 8024342:	e7c4      	b.n	80242ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8024344:	4b03      	ldr	r3, [pc, #12]	; (8024354 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8024346:	6818      	ldr	r0, [r3, #0]
 8024348:	6803      	ldr	r3, [r0, #0]
 802434a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802434c:	4798      	blx	r3
 802434e:	b00f      	add	sp, #60	; 0x3c
 8024350:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024354:	200137bc 	.word	0x200137bc
 8024358:	200137b6 	.word	0x200137b6

0802435c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 802435c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802435e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8024362:	2dff      	cmp	r5, #255	; 0xff
 8024364:	ea4f 2711 	mov.w	r7, r1, lsr #8
 8024368:	d10c      	bne.n	8024384 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802436a:	2bff      	cmp	r3, #255	; 0xff
 802436c:	d10a      	bne.n	8024384 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802436e:	4b25      	ldr	r3, [pc, #148]	; (8024404 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8024370:	0948      	lsrs	r0, r1, #5
 8024372:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024376:	403b      	ands	r3, r7
 8024378:	4318      	orrs	r0, r3
 802437a:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 802437e:	4308      	orrs	r0, r1
 8024380:	b280      	uxth	r0, r0
 8024382:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8024384:	fb15 f503 	smulbb	r5, r5, r3
 8024388:	b2ab      	uxth	r3, r5
 802438a:	1c5d      	adds	r5, r3, #1
 802438c:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8024390:	1214      	asrs	r4, r2, #8
 8024392:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8024396:	fa1f fc85 	uxth.w	ip, r5
 802439a:	10d6      	asrs	r6, r2, #3
 802439c:	00d0      	lsls	r0, r2, #3
 802439e:	43ed      	mvns	r5, r5
 80243a0:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80243a4:	f3c1 4207 	ubfx	r2, r1, #16, #8
 80243a8:	b2eb      	uxtb	r3, r5
 80243aa:	b2c0      	uxtb	r0, r0
 80243ac:	fb12 f20c 	smulbb	r2, r2, ip
 80243b0:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80243b4:	fb04 2403 	mla	r4, r4, r3, r2
 80243b8:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 80243bc:	b2c8      	uxtb	r0, r1
 80243be:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80243c2:	b2fd      	uxtb	r5, r7
 80243c4:	fb10 f00c 	smulbb	r0, r0, ip
 80243c8:	b2a4      	uxth	r4, r4
 80243ca:	fb02 0003 	mla	r0, r2, r3, r0
 80243ce:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80243d2:	fb15 f50c 	smulbb	r5, r5, ip
 80243d6:	fb06 5503 	mla	r5, r6, r3, r5
 80243da:	b283      	uxth	r3, r0
 80243dc:	1c60      	adds	r0, r4, #1
 80243de:	b2ad      	uxth	r5, r5
 80243e0:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 80243e4:	1c58      	adds	r0, r3, #1
 80243e6:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80243ea:	1c6b      	adds	r3, r5, #1
 80243ec:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80243f0:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80243f4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80243f8:	096d      	lsrs	r5, r5, #5
 80243fa:	4320      	orrs	r0, r4
 80243fc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8024400:	4328      	orrs	r0, r5
 8024402:	e7be      	b.n	8024382 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8024404:	00fff800 	.word	0x00fff800

08024408 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8024408:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802440c:	461c      	mov	r4, r3
 802440e:	b08d      	sub	sp, #52	; 0x34
 8024410:	460d      	mov	r5, r1
 8024412:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024414:	6861      	ldr	r1, [r4, #4]
 8024416:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 802441a:	4680      	mov	r8, r0
 802441c:	6820      	ldr	r0, [r4, #0]
 802441e:	4616      	mov	r6, r2
 8024420:	aa08      	add	r2, sp, #32
 8024422:	c203      	stmia	r2!, {r0, r1}
 8024424:	6818      	ldr	r0, [r3, #0]
 8024426:	6859      	ldr	r1, [r3, #4]
 8024428:	aa0a      	add	r2, sp, #40	; 0x28
 802442a:	c203      	stmia	r2!, {r0, r1}
 802442c:	a808      	add	r0, sp, #32
 802442e:	f7ef fb33 	bl	8013a98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024432:	4621      	mov	r1, r4
 8024434:	a80a      	add	r0, sp, #40	; 0x28
 8024436:	f7ef fb73 	bl	8013b20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802443a:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 802443e:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 8024442:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8024446:	f002 0301 	and.w	r3, r2, #1
 802444a:	9303      	str	r3, [sp, #12]
 802444c:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8024450:	f003 0101 	and.w	r1, r3, #1
 8024454:	9102      	str	r1, [sp, #8]
 8024456:	9802      	ldr	r0, [sp, #8]
 8024458:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 802445c:	4403      	add	r3, r0
 802445e:	fb01 2303 	mla	r3, r1, r3, r2
 8024462:	f04f 0a02 	mov.w	sl, #2
 8024466:	fb93 f3fa 	sdiv	r3, r3, sl
 802446a:	441d      	add	r5, r3
 802446c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8024470:	441a      	add	r2, r3
 8024472:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8024476:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 802447a:	4a3f      	ldr	r2, [pc, #252]	; (8024578 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 802447c:	9205      	str	r2, [sp, #20]
 802447e:	4419      	add	r1, r3
 8024480:	6810      	ldr	r0, [r2, #0]
 8024482:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 8024486:	6803      	ldr	r3, [r0, #0]
 8024488:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802448a:	4798      	blx	r3
 802448c:	4b3b      	ldr	r3, [pc, #236]	; (802457c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 802448e:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8024492:	8819      	ldrh	r1, [r3, #0]
 8024494:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 8024498:	fb01 c404 	mla	r4, r1, r4, ip
 802449c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80244a0:	434f      	muls	r7, r1
 80244a2:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 80244a6:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 80244aa:	3604      	adds	r6, #4
 80244ac:	9204      	str	r2, [sp, #16]
 80244ae:	9b04      	ldr	r3, [sp, #16]
 80244b0:	429c      	cmp	r4, r3
 80244b2:	d258      	bcs.n	8024566 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 80244b4:	9b03      	ldr	r3, [sp, #12]
 80244b6:	2b00      	cmp	r3, #0
 80244b8:	d034      	beq.n	8024524 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 80244ba:	782b      	ldrb	r3, [r5, #0]
 80244bc:	f003 030f 	and.w	r3, r3, #15
 80244c0:	1c6f      	adds	r7, r5, #1
 80244c2:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80244c6:	0e0b      	lsrs	r3, r1, #24
 80244c8:	d006      	beq.n	80244d8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 80244ca:	8822      	ldrh	r2, [r4, #0]
 80244cc:	9300      	str	r3, [sp, #0]
 80244ce:	4640      	mov	r0, r8
 80244d0:	464b      	mov	r3, r9
 80244d2:	f7ff ff43 	bl	802435c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80244d6:	8020      	strh	r0, [r4, #0]
 80244d8:	3402      	adds	r4, #2
 80244da:	f10b 3aff 	add.w	sl, fp, #4294967295
 80244de:	f1ba 0f01 	cmp.w	sl, #1
 80244e2:	dd22      	ble.n	802452a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 80244e4:	783b      	ldrb	r3, [r7, #0]
 80244e6:	091b      	lsrs	r3, r3, #4
 80244e8:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80244ec:	0e0b      	lsrs	r3, r1, #24
 80244ee:	d006      	beq.n	80244fe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 80244f0:	8822      	ldrh	r2, [r4, #0]
 80244f2:	9300      	str	r3, [sp, #0]
 80244f4:	4640      	mov	r0, r8
 80244f6:	464b      	mov	r3, r9
 80244f8:	f7ff ff30 	bl	802435c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80244fc:	8020      	strh	r0, [r4, #0]
 80244fe:	f817 3b01 	ldrb.w	r3, [r7], #1
 8024502:	f003 030f 	and.w	r3, r3, #15
 8024506:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802450a:	0e0b      	lsrs	r3, r1, #24
 802450c:	d006      	beq.n	802451c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 802450e:	8862      	ldrh	r2, [r4, #2]
 8024510:	9300      	str	r3, [sp, #0]
 8024512:	4640      	mov	r0, r8
 8024514:	464b      	mov	r3, r9
 8024516:	f7ff ff21 	bl	802435c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802451a:	8060      	strh	r0, [r4, #2]
 802451c:	3404      	adds	r4, #4
 802451e:	f1aa 0a02 	sub.w	sl, sl, #2
 8024522:	e7dc      	b.n	80244de <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8024524:	462f      	mov	r7, r5
 8024526:	46da      	mov	sl, fp
 8024528:	e7d9      	b.n	80244de <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 802452a:	d10d      	bne.n	8024548 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 802452c:	783b      	ldrb	r3, [r7, #0]
 802452e:	091b      	lsrs	r3, r3, #4
 8024530:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8024534:	0e0b      	lsrs	r3, r1, #24
 8024536:	d006      	beq.n	8024546 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8024538:	8822      	ldrh	r2, [r4, #0]
 802453a:	9300      	str	r3, [sp, #0]
 802453c:	4640      	mov	r0, r8
 802453e:	464b      	mov	r3, r9
 8024540:	f7ff ff0c 	bl	802435c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8024544:	8020      	strh	r0, [r4, #0]
 8024546:	3402      	adds	r4, #2
 8024548:	9b06      	ldr	r3, [sp, #24]
 802454a:	9a02      	ldr	r2, [sp, #8]
 802454c:	881b      	ldrh	r3, [r3, #0]
 802454e:	eba3 030b 	sub.w	r3, r3, fp
 8024552:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8024556:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 802455a:	4413      	add	r3, r2
 802455c:	9a07      	ldr	r2, [sp, #28]
 802455e:	fb93 f3f2 	sdiv	r3, r3, r2
 8024562:	441d      	add	r5, r3
 8024564:	e7a3      	b.n	80244ae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 8024566:	9b05      	ldr	r3, [sp, #20]
 8024568:	6818      	ldr	r0, [r3, #0]
 802456a:	6803      	ldr	r3, [r0, #0]
 802456c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802456e:	4798      	blx	r3
 8024570:	b00d      	add	sp, #52	; 0x34
 8024572:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024576:	bf00      	nop
 8024578:	200137bc 	.word	0x200137bc
 802457c:	200137b6 	.word	0x200137b6

08024580 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8024580:	b570      	push	{r4, r5, r6, lr}
 8024582:	1214      	asrs	r4, r2, #8
 8024584:	788d      	ldrb	r5, [r1, #2]
 8024586:	f89d 6010 	ldrb.w	r6, [sp, #16]
 802458a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802458e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8024592:	fb15 f503 	smulbb	r5, r5, r3
 8024596:	fb04 5506 	mla	r5, r4, r6, r5
 802459a:	10d0      	asrs	r0, r2, #3
 802459c:	784c      	ldrb	r4, [r1, #1]
 802459e:	7809      	ldrb	r1, [r1, #0]
 80245a0:	00d2      	lsls	r2, r2, #3
 80245a2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80245a6:	b2d2      	uxtb	r2, r2
 80245a8:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 80245ac:	fb14 f403 	smulbb	r4, r4, r3
 80245b0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80245b4:	fb11 f303 	smulbb	r3, r1, r3
 80245b8:	fb00 4406 	mla	r4, r0, r6, r4
 80245bc:	fb02 3306 	mla	r3, r2, r6, r3
 80245c0:	b2ad      	uxth	r5, r5
 80245c2:	b29b      	uxth	r3, r3
 80245c4:	b2a4      	uxth	r4, r4
 80245c6:	1c68      	adds	r0, r5, #1
 80245c8:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 80245cc:	1c62      	adds	r2, r4, #1
 80245ce:	1c58      	adds	r0, r3, #1
 80245d0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80245d4:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80245d8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80245dc:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80245e0:	0964      	lsrs	r4, r4, #5
 80245e2:	4328      	orrs	r0, r5
 80245e4:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80245e8:	4320      	orrs	r0, r4
 80245ea:	bd70      	pop	{r4, r5, r6, pc}

080245ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80245ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80245f0:	b08f      	sub	sp, #60	; 0x3c
 80245f2:	461c      	mov	r4, r3
 80245f4:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 80245f8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80245fa:	4682      	mov	sl, r0
 80245fc:	460e      	mov	r6, r1
 80245fe:	4615      	mov	r5, r2
 8024600:	2f00      	cmp	r7, #0
 8024602:	f000 8142 	beq.w	802488a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 8024606:	6820      	ldr	r0, [r4, #0]
 8024608:	6861      	ldr	r1, [r4, #4]
 802460a:	aa0a      	add	r2, sp, #40	; 0x28
 802460c:	c203      	stmia	r2!, {r0, r1}
 802460e:	6818      	ldr	r0, [r3, #0]
 8024610:	6859      	ldr	r1, [r3, #4]
 8024612:	aa0c      	add	r2, sp, #48	; 0x30
 8024614:	c203      	stmia	r2!, {r0, r1}
 8024616:	a80a      	add	r0, sp, #40	; 0x28
 8024618:	f7ef fa3e 	bl	8013a98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802461c:	4621      	mov	r1, r4
 802461e:	a80c      	add	r0, sp, #48	; 0x30
 8024620:	f7ef fa7e 	bl	8013b20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8024624:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8024628:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 802462c:	f002 0301 	and.w	r3, r2, #1
 8024630:	9306      	str	r3, [sp, #24]
 8024632:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8024636:	f003 0101 	and.w	r1, r3, #1
 802463a:	9105      	str	r1, [sp, #20]
 802463c:	9805      	ldr	r0, [sp, #20]
 802463e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8024642:	4403      	add	r3, r0
 8024644:	fb01 2303 	mla	r3, r1, r3, r2
 8024648:	f04f 0802 	mov.w	r8, #2
 802464c:	fb93 f3f8 	sdiv	r3, r3, r8
 8024650:	441e      	add	r6, r3
 8024652:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8024656:	441a      	add	r2, r3
 8024658:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 802465c:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8024660:	4419      	add	r1, r3
 8024662:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8024666:	9303      	str	r3, [sp, #12]
 8024668:	4b89      	ldr	r3, [pc, #548]	; (8024890 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802466a:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 802466e:	6818      	ldr	r0, [r3, #0]
 8024670:	6803      	ldr	r3, [r0, #0]
 8024672:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8024674:	4798      	blx	r3
 8024676:	4a87      	ldr	r2, [pc, #540]	; (8024894 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8024678:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 802467c:	8813      	ldrh	r3, [r2, #0]
 802467e:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 8024682:	2fff      	cmp	r7, #255	; 0xff
 8024684:	fb03 9404 	mla	r4, r3, r4, r9
 8024688:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802468c:	f105 0504 	add.w	r5, r5, #4
 8024690:	4694      	mov	ip, r2
 8024692:	fb03 f30b 	mul.w	r3, r3, fp
 8024696:	d071      	beq.n	802477c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8024698:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802469c:	43f9      	mvns	r1, r7
 802469e:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80246a2:	b2c9      	uxtb	r1, r1
 80246a4:	9104      	str	r1, [sp, #16]
 80246a6:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 80246aa:	9b07      	ldr	r3, [sp, #28]
 80246ac:	42a3      	cmp	r3, r4
 80246ae:	f240 80e7 	bls.w	8024880 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 80246b2:	9b06      	ldr	r3, [sp, #24]
 80246b4:	2b00      	cmp	r3, #0
 80246b6:	d03d      	beq.n	8024734 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 80246b8:	7831      	ldrb	r1, [r6, #0]
 80246ba:	9b04      	ldr	r3, [sp, #16]
 80246bc:	8822      	ldrh	r2, [r4, #0]
 80246be:	9300      	str	r3, [sp, #0]
 80246c0:	f001 010f 	and.w	r1, r1, #15
 80246c4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80246c8:	463b      	mov	r3, r7
 80246ca:	4429      	add	r1, r5
 80246cc:	4650      	mov	r0, sl
 80246ce:	f7ff ff57 	bl	8024580 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80246d2:	9b03      	ldr	r3, [sp, #12]
 80246d4:	f824 0b02 	strh.w	r0, [r4], #2
 80246d8:	f106 0801 	add.w	r8, r6, #1
 80246dc:	f103 3bff 	add.w	fp, r3, #4294967295
 80246e0:	f1bb 0f01 	cmp.w	fp, #1
 80246e4:	46a1      	mov	r9, r4
 80246e6:	f104 0404 	add.w	r4, r4, #4
 80246ea:	dd27      	ble.n	802473c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 80246ec:	f898 1000 	ldrb.w	r1, [r8]
 80246f0:	9b04      	ldr	r3, [sp, #16]
 80246f2:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80246f6:	9300      	str	r3, [sp, #0]
 80246f8:	0909      	lsrs	r1, r1, #4
 80246fa:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80246fe:	463b      	mov	r3, r7
 8024700:	4429      	add	r1, r5
 8024702:	4650      	mov	r0, sl
 8024704:	f7ff ff3c 	bl	8024580 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8024708:	f824 0c04 	strh.w	r0, [r4, #-4]
 802470c:	f818 1b01 	ldrb.w	r1, [r8], #1
 8024710:	9b04      	ldr	r3, [sp, #16]
 8024712:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8024716:	9300      	str	r3, [sp, #0]
 8024718:	f001 010f 	and.w	r1, r1, #15
 802471c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8024720:	463b      	mov	r3, r7
 8024722:	4429      	add	r1, r5
 8024724:	4650      	mov	r0, sl
 8024726:	f7ff ff2b 	bl	8024580 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802472a:	f1ab 0b02 	sub.w	fp, fp, #2
 802472e:	f824 0c02 	strh.w	r0, [r4, #-2]
 8024732:	e7d5      	b.n	80246e0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8024734:	46b0      	mov	r8, r6
 8024736:	f8dd b00c 	ldr.w	fp, [sp, #12]
 802473a:	e7d1      	b.n	80246e0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 802473c:	d10f      	bne.n	802475e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 802473e:	f898 1000 	ldrb.w	r1, [r8]
 8024742:	9b04      	ldr	r3, [sp, #16]
 8024744:	f8b9 2000 	ldrh.w	r2, [r9]
 8024748:	9300      	str	r3, [sp, #0]
 802474a:	0909      	lsrs	r1, r1, #4
 802474c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8024750:	463b      	mov	r3, r7
 8024752:	4429      	add	r1, r5
 8024754:	4650      	mov	r0, sl
 8024756:	f7ff ff13 	bl	8024580 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802475a:	f829 0b02 	strh.w	r0, [r9], #2
 802475e:	9b08      	ldr	r3, [sp, #32]
 8024760:	9a05      	ldr	r2, [sp, #20]
 8024762:	881c      	ldrh	r4, [r3, #0]
 8024764:	9b03      	ldr	r3, [sp, #12]
 8024766:	1ae4      	subs	r4, r4, r3
 8024768:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802476c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8024770:	4413      	add	r3, r2
 8024772:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8024774:	fb93 f3f2 	sdiv	r3, r3, r2
 8024778:	441e      	add	r6, r3
 802477a:	e796      	b.n	80246aa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 802477c:	4f46      	ldr	r7, [pc, #280]	; (8024898 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 802477e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8024782:	42a3      	cmp	r3, r4
 8024784:	d97c      	bls.n	8024880 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8024786:	9a06      	ldr	r2, [sp, #24]
 8024788:	2a00      	cmp	r2, #0
 802478a:	d054      	beq.n	8024836 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 802478c:	7830      	ldrb	r0, [r6, #0]
 802478e:	f000 000f 	and.w	r0, r0, #15
 8024792:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8024796:	eb05 0e00 	add.w	lr, r5, r0
 802479a:	5c28      	ldrb	r0, [r5, r0]
 802479c:	f89e 2002 	ldrb.w	r2, [lr, #2]
 80247a0:	f89e e001 	ldrb.w	lr, [lr, #1]
 80247a4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80247a8:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80247ac:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80247b0:	ea42 020e 	orr.w	r2, r2, lr
 80247b4:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 80247b8:	f824 2b02 	strh.w	r2, [r4], #2
 80247bc:	9a03      	ldr	r2, [sp, #12]
 80247be:	1c71      	adds	r1, r6, #1
 80247c0:	f102 3eff 	add.w	lr, r2, #4294967295
 80247c4:	f1be 0f01 	cmp.w	lr, #1
 80247c8:	4620      	mov	r0, r4
 80247ca:	f104 0404 	add.w	r4, r4, #4
 80247ce:	dd36      	ble.n	802483e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 80247d0:	7808      	ldrb	r0, [r1, #0]
 80247d2:	0900      	lsrs	r0, r0, #4
 80247d4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80247d8:	eb05 0a00 	add.w	sl, r5, r0
 80247dc:	f1ae 0e02 	sub.w	lr, lr, #2
 80247e0:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80247e4:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80247e8:	00d2      	lsls	r2, r2, #3
 80247ea:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80247ee:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80247f2:	ea49 0202 	orr.w	r2, r9, r2
 80247f6:	f815 9000 	ldrb.w	r9, [r5, r0]
 80247fa:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80247fe:	f824 2c04 	strh.w	r2, [r4, #-4]
 8024802:	f811 0b01 	ldrb.w	r0, [r1], #1
 8024806:	f000 000f 	and.w	r0, r0, #15
 802480a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802480e:	eb05 0a00 	add.w	sl, r5, r0
 8024812:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8024816:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802481a:	00d2      	lsls	r2, r2, #3
 802481c:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8024820:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024824:	ea49 0202 	orr.w	r2, r9, r2
 8024828:	f815 9000 	ldrb.w	r9, [r5, r0]
 802482c:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8024830:	f824 2c02 	strh.w	r2, [r4, #-2]
 8024834:	e7c6      	b.n	80247c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8024836:	4631      	mov	r1, r6
 8024838:	f8dd e00c 	ldr.w	lr, [sp, #12]
 802483c:	e7c2      	b.n	80247c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 802483e:	d111      	bne.n	8024864 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8024840:	7809      	ldrb	r1, [r1, #0]
 8024842:	0909      	lsrs	r1, r1, #4
 8024844:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8024848:	186c      	adds	r4, r5, r1
 802484a:	5c69      	ldrb	r1, [r5, r1]
 802484c:	78a2      	ldrb	r2, [r4, #2]
 802484e:	7864      	ldrb	r4, [r4, #1]
 8024850:	00e4      	lsls	r4, r4, #3
 8024852:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8024856:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802485a:	4322      	orrs	r2, r4
 802485c:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8024860:	f820 2b02 	strh.w	r2, [r0], #2
 8024864:	9a03      	ldr	r2, [sp, #12]
 8024866:	f8bc 4000 	ldrh.w	r4, [ip]
 802486a:	9905      	ldr	r1, [sp, #20]
 802486c:	1aa4      	subs	r4, r4, r2
 802486e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8024872:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8024876:	440a      	add	r2, r1
 8024878:	fb92 f2f8 	sdiv	r2, r2, r8
 802487c:	4416      	add	r6, r2
 802487e:	e780      	b.n	8024782 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8024880:	4b03      	ldr	r3, [pc, #12]	; (8024890 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8024882:	6818      	ldr	r0, [r3, #0]
 8024884:	6803      	ldr	r3, [r0, #0]
 8024886:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8024888:	4798      	blx	r3
 802488a:	b00f      	add	sp, #60	; 0x3c
 802488c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024890:	200137bc 	.word	0x200137bc
 8024894:	200137b6 	.word	0x200137b6
 8024898:	fffff800 	.word	0xfffff800

0802489c <CRC_Lock>:
 802489c:	b530      	push	{r4, r5, lr}
 802489e:	4a20      	ldr	r2, [pc, #128]	; (8024920 <CRC_Lock+0x84>)
 80248a0:	6813      	ldr	r3, [r2, #0]
 80248a2:	f023 0301 	bic.w	r3, r3, #1
 80248a6:	6013      	str	r3, [r2, #0]
 80248a8:	4b1e      	ldr	r3, [pc, #120]	; (8024924 <CRC_Lock+0x88>)
 80248aa:	681a      	ldr	r2, [r3, #0]
 80248ac:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 80248b0:	4022      	ands	r2, r4
 80248b2:	f24c 2540 	movw	r5, #49728	; 0xc240
 80248b6:	42aa      	cmp	r2, r5
 80248b8:	d005      	beq.n	80248c6 <CRC_Lock+0x2a>
 80248ba:	681b      	ldr	r3, [r3, #0]
 80248bc:	f24c 2270 	movw	r2, #49776	; 0xc270
 80248c0:	4023      	ands	r3, r4
 80248c2:	4293      	cmp	r3, r2
 80248c4:	d124      	bne.n	8024910 <CRC_Lock+0x74>
 80248c6:	4b18      	ldr	r3, [pc, #96]	; (8024928 <CRC_Lock+0x8c>)
 80248c8:	681b      	ldr	r3, [r3, #0]
 80248ca:	bb0b      	cbnz	r3, 8024910 <CRC_Lock+0x74>
 80248cc:	4b17      	ldr	r3, [pc, #92]	; (802492c <CRC_Lock+0x90>)
 80248ce:	681a      	ldr	r2, [r3, #0]
 80248d0:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80248d4:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 80248d8:	d00d      	beq.n	80248f6 <CRC_Lock+0x5a>
 80248da:	681a      	ldr	r2, [r3, #0]
 80248dc:	f240 4483 	movw	r4, #1155	; 0x483
 80248e0:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80248e4:	42a2      	cmp	r2, r4
 80248e6:	d006      	beq.n	80248f6 <CRC_Lock+0x5a>
 80248e8:	681b      	ldr	r3, [r3, #0]
 80248ea:	f240 4285 	movw	r2, #1157	; 0x485
 80248ee:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80248f2:	4293      	cmp	r3, r2
 80248f4:	d10c      	bne.n	8024910 <CRC_Lock+0x74>
 80248f6:	4b0e      	ldr	r3, [pc, #56]	; (8024930 <CRC_Lock+0x94>)
 80248f8:	2201      	movs	r2, #1
 80248fa:	601a      	str	r2, [r3, #0]
 80248fc:	681a      	ldr	r2, [r3, #0]
 80248fe:	2a00      	cmp	r2, #0
 8024900:	d1fc      	bne.n	80248fc <CRC_Lock+0x60>
 8024902:	4b0c      	ldr	r3, [pc, #48]	; (8024934 <CRC_Lock+0x98>)
 8024904:	6018      	str	r0, [r3, #0]
 8024906:	6818      	ldr	r0, [r3, #0]
 8024908:	1a43      	subs	r3, r0, r1
 802490a:	4258      	negs	r0, r3
 802490c:	4158      	adcs	r0, r3
 802490e:	bd30      	pop	{r4, r5, pc}
 8024910:	4b09      	ldr	r3, [pc, #36]	; (8024938 <CRC_Lock+0x9c>)
 8024912:	2201      	movs	r2, #1
 8024914:	601a      	str	r2, [r3, #0]
 8024916:	681a      	ldr	r2, [r3, #0]
 8024918:	2a00      	cmp	r2, #0
 802491a:	d1fc      	bne.n	8024916 <CRC_Lock+0x7a>
 802491c:	4b07      	ldr	r3, [pc, #28]	; (802493c <CRC_Lock+0xa0>)
 802491e:	e7f1      	b.n	8024904 <CRC_Lock+0x68>
 8024920:	e0002000 	.word	0xe0002000
 8024924:	e000ed00 	.word	0xe000ed00
 8024928:	e0042000 	.word	0xe0042000
 802492c:	5c001000 	.word	0x5c001000
 8024930:	58024c08 	.word	0x58024c08
 8024934:	58024c00 	.word	0x58024c00
 8024938:	40023008 	.word	0x40023008
 802493c:	40023000 	.word	0x40023000

08024940 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8024940:	6101      	str	r1, [r0, #16]
 8024942:	4770      	bx	lr

08024944 <_ZN8touchgfx8Gestures4tickEv>:
 8024944:	7b83      	ldrb	r3, [r0, #14]
 8024946:	b14b      	cbz	r3, 802495c <_ZN8touchgfx8Gestures4tickEv+0x18>
 8024948:	8903      	ldrh	r3, [r0, #8]
 802494a:	3301      	adds	r3, #1
 802494c:	b29b      	uxth	r3, r3
 802494e:	2b07      	cmp	r3, #7
 8024950:	8103      	strh	r3, [r0, #8]
 8024952:	bf81      	itttt	hi
 8024954:	2300      	movhi	r3, #0
 8024956:	8143      	strhhi	r3, [r0, #10]
 8024958:	8183      	strhhi	r3, [r0, #12]
 802495a:	7383      	strbhi	r3, [r0, #14]
 802495c:	4770      	bx	lr
	...

08024960 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8024960:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8024964:	4698      	mov	r8, r3
 8024966:	8883      	ldrh	r3, [r0, #4]
 8024968:	f8ad 3006 	strh.w	r3, [sp, #6]
 802496c:	eba8 0303 	sub.w	r3, r8, r3
 8024970:	b21b      	sxth	r3, r3
 8024972:	4604      	mov	r4, r0
 8024974:	2b00      	cmp	r3, #0
 8024976:	4617      	mov	r7, r2
 8024978:	4a18      	ldr	r2, [pc, #96]	; (80249dc <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 802497a:	9200      	str	r2, [sp, #0]
 802497c:	bfb8      	it	lt
 802497e:	425b      	neglt	r3, r3
 8024980:	8aa2      	ldrh	r2, [r4, #20]
 8024982:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8024986:	f8ad 800a 	strh.w	r8, [sp, #10]
 802498a:	b21b      	sxth	r3, r3
 802498c:	460e      	mov	r6, r1
 802498e:	4293      	cmp	r3, r2
 8024990:	88c1      	ldrh	r1, [r0, #6]
 8024992:	f8ad 1008 	strh.w	r1, [sp, #8]
 8024996:	f04f 0000 	mov.w	r0, #0
 802499a:	f88d 0004 	strb.w	r0, [sp, #4]
 802499e:	f8ad 500c 	strh.w	r5, [sp, #12]
 80249a2:	dc07      	bgt.n	80249b4 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 80249a4:	1a69      	subs	r1, r5, r1
 80249a6:	b209      	sxth	r1, r1
 80249a8:	2900      	cmp	r1, #0
 80249aa:	bfb8      	it	lt
 80249ac:	4249      	neglt	r1, r1
 80249ae:	b209      	sxth	r1, r1
 80249b0:	428a      	cmp	r2, r1
 80249b2:	da10      	bge.n	80249d6 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 80249b4:	6920      	ldr	r0, [r4, #16]
 80249b6:	6803      	ldr	r3, [r0, #0]
 80249b8:	4669      	mov	r1, sp
 80249ba:	685b      	ldr	r3, [r3, #4]
 80249bc:	4798      	blx	r3
 80249be:	eba8 0606 	sub.w	r6, r8, r6
 80249c2:	2300      	movs	r3, #0
 80249c4:	1bef      	subs	r7, r5, r7
 80249c6:	2001      	movs	r0, #1
 80249c8:	8123      	strh	r3, [r4, #8]
 80249ca:	8166      	strh	r6, [r4, #10]
 80249cc:	81a7      	strh	r7, [r4, #12]
 80249ce:	f8a4 8004 	strh.w	r8, [r4, #4]
 80249d2:	80e5      	strh	r5, [r4, #6]
 80249d4:	73a0      	strb	r0, [r4, #14]
 80249d6:	b004      	add	sp, #16
 80249d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80249dc:	0802b8fc 	.word	0x0802b8fc

080249e0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 80249e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80249e2:	461e      	mov	r6, r3
 80249e4:	1e4b      	subs	r3, r1, #1
 80249e6:	2b01      	cmp	r3, #1
 80249e8:	b085      	sub	sp, #20
 80249ea:	4604      	mov	r4, r0
 80249ec:	460d      	mov	r5, r1
 80249ee:	4617      	mov	r7, r2
 80249f0:	d84b      	bhi.n	8024a8a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 80249f2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80249f6:	1cd3      	adds	r3, r2, #3
 80249f8:	b29b      	uxth	r3, r3
 80249fa:	2b06      	cmp	r3, #6
 80249fc:	d916      	bls.n	8024a2c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 80249fe:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8024aa0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8024a02:	f8cd c004 	str.w	ip, [sp, #4]
 8024a06:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8024a0a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8024a0e:	6900      	ldr	r0, [r0, #16]
 8024a10:	f8ad 100c 	strh.w	r1, [sp, #12]
 8024a14:	f04f 0c00 	mov.w	ip, #0
 8024a18:	f88d c008 	strb.w	ip, [sp, #8]
 8024a1c:	f8ad 200a 	strh.w	r2, [sp, #10]
 8024a20:	f8ad 300e 	strh.w	r3, [sp, #14]
 8024a24:	6803      	ldr	r3, [r0, #0]
 8024a26:	a901      	add	r1, sp, #4
 8024a28:	689b      	ldr	r3, [r3, #8]
 8024a2a:	4798      	blx	r3
 8024a2c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8024a30:	1cd3      	adds	r3, r2, #3
 8024a32:	b29b      	uxth	r3, r3
 8024a34:	2b06      	cmp	r3, #6
 8024a36:	d916      	bls.n	8024a66 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8024a38:	f8df c064 	ldr.w	ip, [pc, #100]	; 8024aa0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8024a3c:	f8cd c004 	str.w	ip, [sp, #4]
 8024a40:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8024a44:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8024a48:	6920      	ldr	r0, [r4, #16]
 8024a4a:	f8ad 100c 	strh.w	r1, [sp, #12]
 8024a4e:	f04f 0c01 	mov.w	ip, #1
 8024a52:	f88d c008 	strb.w	ip, [sp, #8]
 8024a56:	f8ad 200a 	strh.w	r2, [sp, #10]
 8024a5a:	f8ad 300e 	strh.w	r3, [sp, #14]
 8024a5e:	6803      	ldr	r3, [r0, #0]
 8024a60:	a901      	add	r1, sp, #4
 8024a62:	689b      	ldr	r3, [r3, #8]
 8024a64:	4798      	blx	r3
 8024a66:	4b0d      	ldr	r3, [pc, #52]	; (8024a9c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8024a68:	9301      	str	r3, [sp, #4]
 8024a6a:	6920      	ldr	r0, [r4, #16]
 8024a6c:	f88d 5008 	strb.w	r5, [sp, #8]
 8024a70:	2300      	movs	r3, #0
 8024a72:	f8ad 700a 	strh.w	r7, [sp, #10]
 8024a76:	f8ad 600c 	strh.w	r6, [sp, #12]
 8024a7a:	f8ad 300e 	strh.w	r3, [sp, #14]
 8024a7e:	6803      	ldr	r3, [r0, #0]
 8024a80:	a901      	add	r1, sp, #4
 8024a82:	681b      	ldr	r3, [r3, #0]
 8024a84:	4798      	blx	r3
 8024a86:	b005      	add	sp, #20
 8024a88:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8024a8a:	2900      	cmp	r1, #0
 8024a8c:	d1eb      	bne.n	8024a66 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8024a8e:	80a2      	strh	r2, [r4, #4]
 8024a90:	80c6      	strh	r6, [r0, #6]
 8024a92:	60a1      	str	r1, [r4, #8]
 8024a94:	81a1      	strh	r1, [r4, #12]
 8024a96:	73a1      	strb	r1, [r4, #14]
 8024a98:	e7e5      	b.n	8024a66 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8024a9a:	bf00      	nop
 8024a9c:	0802b8e8 	.word	0x0802b8e8
 8024aa0:	0802b910 	.word	0x0802b910

08024aa4 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8024aa4:	10c9      	asrs	r1, r1, #3
 8024aa6:	2900      	cmp	r1, #0
 8024aa8:	bfb8      	it	lt
 8024aaa:	4249      	neglt	r1, r1
 8024aac:	2801      	cmp	r0, #1
 8024aae:	d108      	bne.n	8024ac2 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8024ab0:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8024ab4:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8024ab8:	4601      	mov	r1, r0
 8024aba:	dd02      	ble.n	8024ac2 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8024abc:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8024ac0:	4770      	bx	lr
 8024ac2:	29ff      	cmp	r1, #255	; 0xff
 8024ac4:	bfa8      	it	ge
 8024ac6:	21ff      	movge	r1, #255	; 0xff
 8024ac8:	4608      	mov	r0, r1
 8024aca:	4770      	bx	lr

08024acc <_ZN8touchgfx10Rasterizer6lineToEii>:
 8024acc:	b410      	push	{r4}
 8024ace:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8024ad2:	429c      	cmp	r4, r3
 8024ad4:	d803      	bhi.n	8024ade <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8024ad6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8024ada:	f7ed bae3 	b.w	80120a4 <_ZN8touchgfx7Outline6lineToEii>
 8024ade:	f85d 4b04 	ldr.w	r4, [sp], #4
 8024ae2:	4770      	bx	lr

08024ae4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8024ae4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024ae8:	b08b      	sub	sp, #44	; 0x2c
 8024aea:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8024aee:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8024af2:	9308      	str	r3, [sp, #32]
 8024af4:	4606      	mov	r6, r0
 8024af6:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8024afa:	9309      	str	r3, [sp, #36]	; 0x24
 8024afc:	468a      	mov	sl, r1
 8024afe:	f7ed fc3e 	bl	801237e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8024b02:	68b5      	ldr	r5, [r6, #8]
 8024b04:	4604      	mov	r4, r0
 8024b06:	2d00      	cmp	r5, #0
 8024b08:	d044      	beq.n	8024b94 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8024b0a:	6873      	ldr	r3, [r6, #4]
 8024b0c:	42ab      	cmp	r3, r5
 8024b0e:	d33d      	bcc.n	8024b8c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8024b10:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8024b14:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8024b18:	eb02 0b03 	add.w	fp, r2, r3
 8024b1c:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8024b20:	fb02 1203 	mla	r2, r2, r3, r1
 8024b24:	9205      	str	r2, [sp, #20]
 8024b26:	1e6a      	subs	r2, r5, #1
 8024b28:	9204      	str	r2, [sp, #16]
 8024b2a:	f04f 0800 	mov.w	r8, #0
 8024b2e:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8024b32:	f9b4 7000 	ldrsh.w	r7, [r4]
 8024b36:	454b      	cmp	r3, r9
 8024b38:	463a      	mov	r2, r7
 8024b3a:	d008      	beq.n	8024b4e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8024b3c:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8024b40:	eb03 0b09 	add.w	fp, r3, r9
 8024b44:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8024b48:	fb03 1309 	mla	r3, r3, r9, r1
 8024b4c:	9305      	str	r3, [sp, #20]
 8024b4e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8024b52:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8024b56:	4498      	add	r8, r3
 8024b58:	9b04      	ldr	r3, [sp, #16]
 8024b5a:	3b01      	subs	r3, #1
 8024b5c:	9304      	str	r3, [sp, #16]
 8024b5e:	9b04      	ldr	r3, [sp, #16]
 8024b60:	3301      	adds	r3, #1
 8024b62:	d015      	beq.n	8024b90 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8024b64:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8024b68:	42bb      	cmp	r3, r7
 8024b6a:	d117      	bne.n	8024b9c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8024b6c:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8024b70:	9b04      	ldr	r3, [sp, #16]
 8024b72:	4548      	cmp	r0, r9
 8024b74:	f103 33ff 	add.w	r3, r3, #4294967295
 8024b78:	d17f      	bne.n	8024c7a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8024b7a:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8024b7e:	4401      	add	r1, r0
 8024b80:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8024b84:	4480      	add	r8, r0
 8024b86:	e7e9      	b.n	8024b5c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8024b88:	461f      	mov	r7, r3
 8024b8a:	e044      	b.n	8024c16 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8024b8c:	2000      	movs	r0, #0
 8024b8e:	e002      	b.n	8024b96 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8024b90:	2900      	cmp	r1, #0
 8024b92:	d16f      	bne.n	8024c74 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8024b94:	2001      	movs	r0, #1
 8024b96:	b00b      	add	sp, #44	; 0x2c
 8024b98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024b9c:	2900      	cmp	r1, #0
 8024b9e:	d030      	beq.n	8024c02 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8024ba0:	2f00      	cmp	r7, #0
 8024ba2:	db29      	blt.n	8024bf8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8024ba4:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8024ba8:	42bb      	cmp	r3, r7
 8024baa:	dd25      	ble.n	8024bf8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8024bac:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8024bb0:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8024bb4:	f7ff ff76 	bl	8024aa4 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8024bb8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024bba:	fb10 f003 	smulbb	r0, r0, r3
 8024bbe:	b280      	uxth	r0, r0
 8024bc0:	1c41      	adds	r1, r0, #1
 8024bc2:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8024bc6:	1209      	asrs	r1, r1, #8
 8024bc8:	f011 0fff 	tst.w	r1, #255	; 0xff
 8024bcc:	d014      	beq.n	8024bf8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8024bce:	9808      	ldr	r0, [sp, #32]
 8024bd0:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8024bd2:	b2c9      	uxtb	r1, r1
 8024bd4:	b2ba      	uxth	r2, r7
 8024bd6:	9102      	str	r1, [sp, #8]
 8024bd8:	2101      	movs	r1, #1
 8024bda:	4413      	add	r3, r2
 8024bdc:	9101      	str	r1, [sp, #4]
 8024bde:	4402      	add	r2, r0
 8024be0:	fa0f f18b 	sxth.w	r1, fp
 8024be4:	f8da 0000 	ldr.w	r0, [sl]
 8024be8:	9100      	str	r1, [sp, #0]
 8024bea:	6941      	ldr	r1, [r0, #20]
 8024bec:	b21b      	sxth	r3, r3
 8024bee:	460d      	mov	r5, r1
 8024bf0:	b212      	sxth	r2, r2
 8024bf2:	9905      	ldr	r1, [sp, #20]
 8024bf4:	4650      	mov	r0, sl
 8024bf6:	47a8      	blx	r5
 8024bf8:	9b04      	ldr	r3, [sp, #16]
 8024bfa:	3301      	adds	r3, #1
 8024bfc:	f107 0201 	add.w	r2, r7, #1
 8024c00:	d0c8      	beq.n	8024b94 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8024c02:	f9b4 7000 	ldrsh.w	r7, [r4]
 8024c06:	1abb      	subs	r3, r7, r2
 8024c08:	2b00      	cmp	r3, #0
 8024c0a:	dd31      	ble.n	8024c70 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8024c0c:	2a00      	cmp	r2, #0
 8024c0e:	dabb      	bge.n	8024b88 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8024c10:	2f00      	cmp	r7, #0
 8024c12:	dd2d      	ble.n	8024c70 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8024c14:	2200      	movs	r2, #0
 8024c16:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8024c1a:	19d1      	adds	r1, r2, r7
 8024c1c:	4299      	cmp	r1, r3
 8024c1e:	db02      	blt.n	8024c26 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8024c20:	1a9f      	subs	r7, r3, r2
 8024c22:	2f00      	cmp	r7, #0
 8024c24:	dd24      	ble.n	8024c70 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8024c26:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8024c2a:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8024c2e:	f7ff ff39 	bl	8024aa4 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8024c32:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024c34:	fb10 f003 	smulbb	r0, r0, r3
 8024c38:	b280      	uxth	r0, r0
 8024c3a:	1c41      	adds	r1, r0, #1
 8024c3c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8024c40:	1209      	asrs	r1, r1, #8
 8024c42:	f011 0fff 	tst.w	r1, #255	; 0xff
 8024c46:	d013      	beq.n	8024c70 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8024c48:	9808      	ldr	r0, [sp, #32]
 8024c4a:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8024c4c:	b292      	uxth	r2, r2
 8024c4e:	b2c9      	uxtb	r1, r1
 8024c50:	4413      	add	r3, r2
 8024c52:	9102      	str	r1, [sp, #8]
 8024c54:	4402      	add	r2, r0
 8024c56:	b23f      	sxth	r7, r7
 8024c58:	f8da 0000 	ldr.w	r0, [sl]
 8024c5c:	9701      	str	r7, [sp, #4]
 8024c5e:	fa0f f18b 	sxth.w	r1, fp
 8024c62:	9100      	str	r1, [sp, #0]
 8024c64:	6947      	ldr	r7, [r0, #20]
 8024c66:	9905      	ldr	r1, [sp, #20]
 8024c68:	b21b      	sxth	r3, r3
 8024c6a:	b212      	sxth	r2, r2
 8024c6c:	4650      	mov	r0, sl
 8024c6e:	47b8      	blx	r7
 8024c70:	464b      	mov	r3, r9
 8024c72:	e75c      	b.n	8024b2e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8024c74:	2f00      	cmp	r7, #0
 8024c76:	da95      	bge.n	8024ba4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8024c78:	e78c      	b.n	8024b94 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8024c7a:	2900      	cmp	r1, #0
 8024c7c:	d0f8      	beq.n	8024c70 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8024c7e:	e78f      	b.n	8024ba0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08024c80 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8024c80:	4b4b      	ldr	r3, [pc, #300]	; (8024db0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 8024c82:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8024c86:	2500      	movs	r5, #0
 8024c88:	f100 0620 	add.w	r6, r0, #32
 8024c8c:	4604      	mov	r4, r0
 8024c8e:	e9c0 3100 	strd	r3, r1, [r0]
 8024c92:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8024c96:	e9c0 5504 	strd	r5, r5, [r0, #16]
 8024c9a:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8024c9e:	f100 0718 	add.w	r7, r0, #24
 8024ca2:	4630      	mov	r0, r6
 8024ca4:	4690      	mov	r8, r2
 8024ca6:	f7ec fd35 	bl	8011714 <_ZN8touchgfx7OutlineC1Ev>
 8024caa:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8024cae:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8024cb2:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8024cb6:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 8024cba:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8024cbe:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8024cc2:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 8024cc6:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 8024cca:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8024cce:	f9b8 2000 	ldrsh.w	r2, [r8]
 8024cd2:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 8024cd6:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8024cda:	9500      	str	r5, [sp, #0]
 8024cdc:	4410      	add	r0, r2
 8024cde:	b280      	uxth	r0, r0
 8024ce0:	fa0f fa80 	sxth.w	sl, r0
 8024ce4:	45aa      	cmp	sl, r5
 8024ce6:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 8024cea:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8024cee:	dd5c      	ble.n	8024daa <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8024cf0:	4591      	cmp	r9, r2
 8024cf2:	dd5a      	ble.n	8024daa <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8024cf4:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8024cf8:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8024cfc:	440b      	add	r3, r1
 8024cfe:	b29b      	uxth	r3, r3
 8024d00:	b21d      	sxth	r5, r3
 8024d02:	2d00      	cmp	r5, #0
 8024d04:	dd51      	ble.n	8024daa <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8024d06:	458e      	cmp	lr, r1
 8024d08:	dd4f      	ble.n	8024daa <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8024d0a:	45d1      	cmp	r9, sl
 8024d0c:	bfb8      	it	lt
 8024d0e:	fa1f f089 	uxthlt.w	r0, r9
 8024d12:	45ae      	cmp	lr, r5
 8024d14:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8024d18:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8024d1c:	bfb8      	it	lt
 8024d1e:	fa1f f38e 	uxthlt.w	r3, lr
 8024d22:	1a80      	subs	r0, r0, r2
 8024d24:	1a5b      	subs	r3, r3, r1
 8024d26:	f8ad 0004 	strh.w	r0, [sp, #4]
 8024d2a:	f8ad 3006 	strh.w	r3, [sp, #6]
 8024d2e:	f8ad 2000 	strh.w	r2, [sp]
 8024d32:	f8ad 1002 	strh.w	r1, [sp, #2]
 8024d36:	466d      	mov	r5, sp
 8024d38:	e895 0003 	ldmia.w	r5, {r0, r1}
 8024d3c:	e887 0003 	stmia.w	r7, {r0, r1}
 8024d40:	f8dc 3000 	ldr.w	r3, [ip]
 8024d44:	4660      	mov	r0, ip
 8024d46:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8024d48:	4639      	mov	r1, r7
 8024d4a:	4798      	blx	r3
 8024d4c:	6861      	ldr	r1, [r4, #4]
 8024d4e:	4628      	mov	r0, r5
 8024d50:	3104      	adds	r1, #4
 8024d52:	f7ee fee5 	bl	8013b20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8024d56:	4638      	mov	r0, r7
 8024d58:	f7ee fe9e 	bl	8013a98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024d5c:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8024d60:	f8bd 2000 	ldrh.w	r2, [sp]
 8024d64:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 8024d68:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8024d6c:	4630      	mov	r0, r6
 8024d6e:	f7ec fcb5 	bl	80116dc <_ZN8touchgfx7Outline5resetEv>
 8024d72:	f9bd 3000 	ldrsh.w	r3, [sp]
 8024d76:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8024d7a:	015b      	lsls	r3, r3, #5
 8024d7c:	60a3      	str	r3, [r4, #8]
 8024d7e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8024d82:	015b      	lsls	r3, r3, #5
 8024d84:	60e3      	str	r3, [r4, #12]
 8024d86:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8024d8a:	015b      	lsls	r3, r3, #5
 8024d8c:	6123      	str	r3, [r4, #16]
 8024d8e:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8024d92:	015b      	lsls	r3, r3, #5
 8024d94:	6163      	str	r3, [r4, #20]
 8024d96:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 8024d9a:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8024d9e:	4620      	mov	r0, r4
 8024da0:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 8024da4:	b002      	add	sp, #8
 8024da6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8024daa:	2300      	movs	r3, #0
 8024dac:	9301      	str	r3, [sp, #4]
 8024dae:	e7c2      	b.n	8024d36 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 8024db0:	0802bc34 	.word	0x0802bc34

08024db4 <_ZN8touchgfx6Canvas5closeEv>:
 8024db4:	b538      	push	{r3, r4, r5, lr}
 8024db6:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8024dba:	4604      	mov	r4, r0
 8024dbc:	b193      	cbz	r3, 8024de4 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8024dbe:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 8024dc2:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8024dc6:	4213      	tst	r3, r2
 8024dc8:	d10c      	bne.n	8024de4 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8024dca:	f100 0520 	add.w	r5, r0, #32
 8024dce:	b123      	cbz	r3, 8024dda <_ZN8touchgfx6Canvas5closeEv+0x26>
 8024dd0:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 8024dd4:	4628      	mov	r0, r5
 8024dd6:	f7ff fe79 	bl	8024acc <_ZN8touchgfx10Rasterizer6lineToEii>
 8024dda:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 8024dde:	4628      	mov	r0, r5
 8024de0:	f7ff fe74 	bl	8024acc <_ZN8touchgfx10Rasterizer6lineToEii>
 8024de4:	2300      	movs	r3, #0
 8024de6:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8024dea:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 8024dee:	4298      	cmp	r0, r3
 8024df0:	bf34      	ite	cc
 8024df2:	2000      	movcc	r0, #0
 8024df4:	2001      	movcs	r0, #1
 8024df6:	bd38      	pop	{r3, r4, r5, pc}

08024df8 <_ZN8touchgfx6Canvas6renderEh>:
 8024df8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8024dfc:	4604      	mov	r4, r0
 8024dfe:	6840      	ldr	r0, [r0, #4]
 8024e00:	6803      	ldr	r3, [r0, #0]
 8024e02:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8024e04:	460d      	mov	r5, r1
 8024e06:	4798      	blx	r3
 8024e08:	fb10 f105 	smulbb	r1, r0, r5
 8024e0c:	b289      	uxth	r1, r1
 8024e0e:	1c4d      	adds	r5, r1, #1
 8024e10:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8024e14:	122d      	asrs	r5, r5, #8
 8024e16:	f000 809d 	beq.w	8024f54 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8024e1a:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8024e1e:	2b00      	cmp	r3, #0
 8024e20:	f000 8098 	beq.w	8024f54 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8024e24:	4620      	mov	r0, r4
 8024e26:	f7ff ffc5 	bl	8024db4 <_ZN8touchgfx6Canvas5closeEv>
 8024e2a:	4607      	mov	r7, r0
 8024e2c:	2800      	cmp	r0, #0
 8024e2e:	d048      	beq.n	8024ec2 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8024e30:	6863      	ldr	r3, [r4, #4]
 8024e32:	4e49      	ldr	r6, [pc, #292]	; (8024f58 <_ZN8touchgfx6Canvas6renderEh+0x160>)
 8024e34:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8024e36:	6837      	ldr	r7, [r6, #0]
 8024e38:	6803      	ldr	r3, [r0, #0]
 8024e3a:	689b      	ldr	r3, [r3, #8]
 8024e3c:	4798      	blx	r3
 8024e3e:	4601      	mov	r1, r0
 8024e40:	4638      	mov	r0, r7
 8024e42:	f7ea fdb9 	bl	800f9b8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8024e46:	4607      	mov	r7, r0
 8024e48:	f7de f840 	bl	8002ecc <_ZN8touchgfx3HAL3lcdEv>
 8024e4c:	6803      	ldr	r3, [r0, #0]
 8024e4e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8024e50:	4798      	blx	r3
 8024e52:	4680      	mov	r8, r0
 8024e54:	f7de f83a 	bl	8002ecc <_ZN8touchgfx3HAL3lcdEv>
 8024e58:	6803      	ldr	r3, [r0, #0]
 8024e5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8024e5c:	4798      	blx	r3
 8024e5e:	280b      	cmp	r0, #11
 8024e60:	d85d      	bhi.n	8024f1e <_ZN8touchgfx6Canvas6renderEh+0x126>
 8024e62:	e8df f000 	tbb	[pc, r0]
 8024e66:	5e53      	.short	0x5e53
 8024e68:	325c066e 	.word	0x325c066e
 8024e6c:	67676742 	.word	0x67676742
 8024e70:	6767      	.short	0x6767
 8024e72:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8024e76:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8024e7a:	2208      	movs	r2, #8
 8024e7c:	fb91 f2f2 	sdiv	r2, r1, r2
 8024e80:	fb08 2303 	mla	r3, r8, r3, r2
 8024e84:	441f      	add	r7, r3
 8024e86:	424b      	negs	r3, r1
 8024e88:	f003 0307 	and.w	r3, r3, #7
 8024e8c:	f001 0107 	and.w	r1, r1, #7
 8024e90:	bf58      	it	pl
 8024e92:	4259      	negpl	r1, r3
 8024e94:	b2c9      	uxtb	r1, r1
 8024e96:	b2ed      	uxtb	r5, r5
 8024e98:	e9cd 1500 	strd	r1, r5, [sp]
 8024e9c:	6860      	ldr	r0, [r4, #4]
 8024e9e:	463a      	mov	r2, r7
 8024ea0:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8024ea2:	fa0f f388 	sxth.w	r3, r8
 8024ea6:	f104 0020 	add.w	r0, r4, #32
 8024eaa:	f7ff fe1b 	bl	8024ae4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8024eae:	6863      	ldr	r3, [r4, #4]
 8024eb0:	4607      	mov	r7, r0
 8024eb2:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8024eb4:	6803      	ldr	r3, [r0, #0]
 8024eb6:	691b      	ldr	r3, [r3, #16]
 8024eb8:	4798      	blx	r3
 8024eba:	6830      	ldr	r0, [r6, #0]
 8024ebc:	6803      	ldr	r3, [r0, #0]
 8024ebe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8024ec0:	4798      	blx	r3
 8024ec2:	4638      	mov	r0, r7
 8024ec4:	b002      	add	sp, #8
 8024ec6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8024eca:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8024ece:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8024ed2:	2204      	movs	r2, #4
 8024ed4:	fb91 f2f2 	sdiv	r2, r1, r2
 8024ed8:	fb08 2303 	mla	r3, r8, r3, r2
 8024edc:	441f      	add	r7, r3
 8024ede:	424b      	negs	r3, r1
 8024ee0:	f003 0303 	and.w	r3, r3, #3
 8024ee4:	f001 0103 	and.w	r1, r1, #3
 8024ee8:	e7d2      	b.n	8024e90 <_ZN8touchgfx6Canvas6renderEh+0x98>
 8024eea:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8024eee:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8024ef2:	2900      	cmp	r1, #0
 8024ef4:	f04f 0202 	mov.w	r2, #2
 8024ef8:	fb91 f2f2 	sdiv	r2, r1, r2
 8024efc:	f001 0101 	and.w	r1, r1, #1
 8024f00:	fb08 2303 	mla	r3, r8, r3, r2
 8024f04:	441f      	add	r7, r3
 8024f06:	bfb8      	it	lt
 8024f08:	4249      	neglt	r1, r1
 8024f0a:	e7c3      	b.n	8024e94 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 8024f0c:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8024f10:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8024f14:	fb08 f303 	mul.w	r3, r8, r3
 8024f18:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8024f1c:	441f      	add	r7, r3
 8024f1e:	2100      	movs	r1, #0
 8024f20:	e7b9      	b.n	8024e96 <_ZN8touchgfx6Canvas6renderEh+0x9e>
 8024f22:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8024f26:	fb08 f203 	mul.w	r2, r8, r3
 8024f2a:	8b23      	ldrh	r3, [r4, #24]
 8024f2c:	2103      	movs	r1, #3
 8024f2e:	fb13 2301 	smlabb	r3, r3, r1, r2
 8024f32:	e7f3      	b.n	8024f1c <_ZN8touchgfx6Canvas6renderEh+0x124>
 8024f34:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8024f38:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8024f3c:	fb08 2303 	mla	r3, r8, r3, r2
 8024f40:	e7ec      	b.n	8024f1c <_ZN8touchgfx6Canvas6renderEh+0x124>
 8024f42:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8024f46:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8024f4a:	fb08 f303 	mul.w	r3, r8, r3
 8024f4e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8024f52:	e7e3      	b.n	8024f1c <_ZN8touchgfx6Canvas6renderEh+0x124>
 8024f54:	2701      	movs	r7, #1
 8024f56:	e7b4      	b.n	8024ec2 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8024f58:	200137bc 	.word	0x200137bc

08024f5c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8024f5c:	b510      	push	{r4, lr}
 8024f5e:	4b07      	ldr	r3, [pc, #28]	; (8024f7c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 8024f60:	781b      	ldrb	r3, [r3, #0]
 8024f62:	2b01      	cmp	r3, #1
 8024f64:	d108      	bne.n	8024f78 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 8024f66:	6843      	ldr	r3, [r0, #4]
 8024f68:	6814      	ldr	r4, [r2, #0]
 8024f6a:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8024f6e:	680b      	ldr	r3, [r1, #0]
 8024f70:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8024f74:	6013      	str	r3, [r2, #0]
 8024f76:	600c      	str	r4, [r1, #0]
 8024f78:	bd10      	pop	{r4, pc}
 8024f7a:	bf00      	nop
 8024f7c:	200137b4 	.word	0x200137b4

08024f80 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8024f80:	b513      	push	{r0, r1, r4, lr}
 8024f82:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8024f86:	4604      	mov	r4, r0
 8024f88:	e9cd 2100 	strd	r2, r1, [sp]
 8024f8c:	b9a3      	cbnz	r3, 8024fb8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8024f8e:	466a      	mov	r2, sp
 8024f90:	a901      	add	r1, sp, #4
 8024f92:	4620      	mov	r0, r4
 8024f94:	f7ff ffe2 	bl	8024f5c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8024f98:	68a3      	ldr	r3, [r4, #8]
 8024f9a:	9901      	ldr	r1, [sp, #4]
 8024f9c:	9a00      	ldr	r2, [sp, #0]
 8024f9e:	1ac9      	subs	r1, r1, r3
 8024fa0:	68e3      	ldr	r3, [r4, #12]
 8024fa2:	9101      	str	r1, [sp, #4]
 8024fa4:	1ad2      	subs	r2, r2, r3
 8024fa6:	2a00      	cmp	r2, #0
 8024fa8:	9200      	str	r2, [sp, #0]
 8024faa:	da0b      	bge.n	8024fc4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8024fac:	2301      	movs	r3, #1
 8024fae:	2900      	cmp	r1, #0
 8024fb0:	da0e      	bge.n	8024fd0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8024fb2:	f043 0304 	orr.w	r3, r3, #4
 8024fb6:	e013      	b.n	8024fe0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8024fb8:	f7ff fefc 	bl	8024db4 <_ZN8touchgfx6Canvas5closeEv>
 8024fbc:	2800      	cmp	r0, #0
 8024fbe:	d1e6      	bne.n	8024f8e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8024fc0:	b002      	add	sp, #8
 8024fc2:	bd10      	pop	{r4, pc}
 8024fc4:	6963      	ldr	r3, [r4, #20]
 8024fc6:	429a      	cmp	r2, r3
 8024fc8:	bfac      	ite	ge
 8024fca:	2302      	movge	r3, #2
 8024fcc:	2300      	movlt	r3, #0
 8024fce:	e7ee      	b.n	8024fae <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8024fd0:	6920      	ldr	r0, [r4, #16]
 8024fd2:	4281      	cmp	r1, r0
 8024fd4:	bfac      	ite	ge
 8024fd6:	2008      	movge	r0, #8
 8024fd8:	2000      	movlt	r0, #0
 8024fda:	4318      	orrs	r0, r3
 8024fdc:	b2c3      	uxtb	r3, r0
 8024fde:	b158      	cbz	r0, 8024ff8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8024fe0:	2200      	movs	r2, #0
 8024fe2:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 8024fe6:	9901      	ldr	r1, [sp, #4]
 8024fe8:	9a00      	ldr	r2, [sp, #0]
 8024fea:	66a1      	str	r1, [r4, #104]	; 0x68
 8024fec:	66e2      	str	r2, [r4, #108]	; 0x6c
 8024fee:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 8024ff2:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8024ff6:	e7e3      	b.n	8024fc0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8024ff8:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8024ffc:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8025000:	4298      	cmp	r0, r3
 8025002:	d803      	bhi.n	802500c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8025004:	f104 0020 	add.w	r0, r4, #32
 8025008:	f7ed f866 	bl	80120d8 <_ZN8touchgfx7Outline6moveToEii>
 802500c:	2301      	movs	r3, #1
 802500e:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8025012:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8025016:	2300      	movs	r3, #0
 8025018:	e7e5      	b.n	8024fe6 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

0802501a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 802501a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802501c:	ab02      	add	r3, sp, #8
 802501e:	4604      	mov	r4, r0
 8025020:	f843 2d08 	str.w	r2, [r3, #-8]!
 8025024:	9101      	str	r1, [sp, #4]
 8025026:	461a      	mov	r2, r3
 8025028:	a901      	add	r1, sp, #4
 802502a:	f7ff ff97 	bl	8024f5c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802502e:	68a3      	ldr	r3, [r4, #8]
 8025030:	9901      	ldr	r1, [sp, #4]
 8025032:	9a00      	ldr	r2, [sp, #0]
 8025034:	1ac9      	subs	r1, r1, r3
 8025036:	68e3      	ldr	r3, [r4, #12]
 8025038:	9101      	str	r1, [sp, #4]
 802503a:	1ad2      	subs	r2, r2, r3
 802503c:	2a00      	cmp	r2, #0
 802503e:	9200      	str	r2, [sp, #0]
 8025040:	db1c      	blt.n	802507c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 8025042:	6963      	ldr	r3, [r4, #20]
 8025044:	429a      	cmp	r2, r3
 8025046:	bfac      	ite	ge
 8025048:	2002      	movge	r0, #2
 802504a:	2000      	movlt	r0, #0
 802504c:	2900      	cmp	r1, #0
 802504e:	db17      	blt.n	8025080 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8025050:	6923      	ldr	r3, [r4, #16]
 8025052:	4299      	cmp	r1, r3
 8025054:	bfac      	ite	ge
 8025056:	2308      	movge	r3, #8
 8025058:	2300      	movlt	r3, #0
 802505a:	4303      	orrs	r3, r0
 802505c:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 8025060:	b2dd      	uxtb	r5, r3
 8025062:	b978      	cbnz	r0, 8025084 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 8025064:	f104 0020 	add.w	r0, r4, #32
 8025068:	f7ff fd30 	bl	8024acc <_ZN8touchgfx10Rasterizer6lineToEii>
 802506c:	9b01      	ldr	r3, [sp, #4]
 802506e:	65e3      	str	r3, [r4, #92]	; 0x5c
 8025070:	9b00      	ldr	r3, [sp, #0]
 8025072:	6623      	str	r3, [r4, #96]	; 0x60
 8025074:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 8025078:	b002      	add	sp, #8
 802507a:	bd70      	pop	{r4, r5, r6, pc}
 802507c:	2001      	movs	r0, #1
 802507e:	e7e5      	b.n	802504c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8025080:	2304      	movs	r3, #4
 8025082:	e7ea      	b.n	802505a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8025084:	b113      	cbz	r3, 802508c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 8025086:	ea10 0305 	ands.w	r3, r0, r5
 802508a:	d11c      	bne.n	80250c6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 802508c:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 8025090:	f104 0620 	add.w	r6, r4, #32
 8025094:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 8025098:	b98b      	cbnz	r3, 80250be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 802509a:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 802509e:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 80250a2:	4298      	cmp	r0, r3
 80250a4:	d802      	bhi.n	80250ac <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 80250a6:	4630      	mov	r0, r6
 80250a8:	f7ed f816 	bl	80120d8 <_ZN8touchgfx7Outline6moveToEii>
 80250ac:	2301      	movs	r3, #1
 80250ae:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80250b2:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80250b6:	e9dd 2100 	ldrd	r2, r1, [sp]
 80250ba:	4630      	mov	r0, r6
 80250bc:	e7d4      	b.n	8025068 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 80250be:	4630      	mov	r0, r6
 80250c0:	f7ff fd04 	bl	8024acc <_ZN8touchgfx10Rasterizer6lineToEii>
 80250c4:	e7f7      	b.n	80250b6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 80250c6:	461d      	mov	r5, r3
 80250c8:	e7d0      	b.n	802506c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

080250cc <_ZN8touchgfx6CanvasD1Ev>:
 80250cc:	b510      	push	{r4, lr}
 80250ce:	4b04      	ldr	r3, [pc, #16]	; (80250e0 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 80250d0:	4604      	mov	r4, r0
 80250d2:	f840 3b20 	str.w	r3, [r0], #32
 80250d6:	f7ec faf9 	bl	80116cc <_ZN8touchgfx7OutlineD1Ev>
 80250da:	4620      	mov	r0, r4
 80250dc:	bd10      	pop	{r4, pc}
 80250de:	bf00      	nop
 80250e0:	0802bc34 	.word	0x0802bc34

080250e4 <_ZN8touchgfx6CanvasD0Ev>:
 80250e4:	b510      	push	{r4, lr}
 80250e6:	4604      	mov	r4, r0
 80250e8:	f7ff fff0 	bl	80250cc <_ZN8touchgfx6CanvasD1Ev>
 80250ec:	4620      	mov	r0, r4
 80250ee:	2170      	movs	r1, #112	; 0x70
 80250f0:	f001 fbe5 	bl	80268be <_ZdlPvj>
 80250f4:	4620      	mov	r0, r4
 80250f6:	bd10      	pop	{r4, pc}

080250f8 <_ZN8touchgfx6CircleD1Ev>:
 80250f8:	4770      	bx	lr

080250fa <_ZN8touchgfx6CircleD0Ev>:
 80250fa:	b510      	push	{r4, lr}
 80250fc:	2148      	movs	r1, #72	; 0x48
 80250fe:	4604      	mov	r4, r0
 8025100:	f001 fbdd 	bl	80268be <_ZdlPvj>
 8025104:	4620      	mov	r0, r4
 8025106:	bd10      	pop	{r4, pc}

08025108 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 8025108:	b508      	push	{r3, lr}
 802510a:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 802510e:	f7ea ffa9 	bl	8010064 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8025112:	bd08      	pop	{r3, pc}

08025114 <_ZN8touchgfx6CircleC1Ev>:
 8025114:	b510      	push	{r4, lr}
 8025116:	4604      	mov	r4, r0
 8025118:	f7ea fe40 	bl	800fd9c <_ZN8touchgfx12CanvasWidgetC1Ev>
 802511c:	4b08      	ldr	r3, [pc, #32]	; (8025140 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 802511e:	6023      	str	r3, [r4, #0]
 8025120:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 8025124:	2300      	movs	r3, #0
 8025126:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 802512a:	f24b 4205 	movw	r2, #46085	; 0xb405
 802512e:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8025132:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8025136:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 802513a:	60a3      	str	r3, [r4, #8]
 802513c:	4620      	mov	r0, r4
 802513e:	bd10      	pop	{r4, pc}
 8025140:	0802bc48 	.word	0x0802bc48

08025144 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 8025144:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025148:	428a      	cmp	r2, r1
 802514a:	4680      	mov	r8, r0
 802514c:	4610      	mov	r0, r2
 802514e:	4699      	mov	r9, r3
 8025150:	bfa6      	itte	ge
 8025152:	460a      	movge	r2, r1
 8025154:	4603      	movge	r3, r0
 8025156:	460b      	movlt	r3, r1
 8025158:	1a99      	subs	r1, r3, r2
 802515a:	b085      	sub	sp, #20
 802515c:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 8025160:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 8025164:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025166:	bfa4      	itt	ge
 8025168:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 802516c:	2200      	movge	r2, #0
 802516e:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 8025172:	9300      	str	r3, [sp, #0]
 8025174:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 8025178:	f102 0b01 	add.w	fp, r2, #1
 802517c:	2c00      	cmp	r4, #0
 802517e:	f040 80af 	bne.w	80252e0 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 8025182:	4610      	mov	r0, r2
 8025184:	9201      	str	r2, [sp, #4]
 8025186:	f7ea ff6d 	bl	8010064 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802518a:	a903      	add	r1, sp, #12
 802518c:	9003      	str	r0, [sp, #12]
 802518e:	4650      	mov	r0, sl
 8025190:	f7ea fe30 	bl	800fdf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025194:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8025198:	9a01      	ldr	r2, [sp, #4]
 802519a:	4408      	add	r0, r1
 802519c:	f8d9 1000 	ldr.w	r1, [r9]
 80251a0:	4281      	cmp	r1, r0
 80251a2:	bfc8      	it	gt
 80251a4:	f8c9 0000 	strgt.w	r0, [r9]
 80251a8:	6839      	ldr	r1, [r7, #0]
 80251aa:	4288      	cmp	r0, r1
 80251ac:	bfc8      	it	gt
 80251ae:	6038      	strgt	r0, [r7, #0]
 80251b0:	4610      	mov	r0, r2
 80251b2:	f7ff ffa9 	bl	8025108 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80251b6:	a903      	add	r1, sp, #12
 80251b8:	9003      	str	r0, [sp, #12]
 80251ba:	4650      	mov	r0, sl
 80251bc:	f7ea fe1a 	bl	800fdf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80251c0:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80251c4:	1a10      	subs	r0, r2, r0
 80251c6:	6832      	ldr	r2, [r6, #0]
 80251c8:	4282      	cmp	r2, r0
 80251ca:	bfc8      	it	gt
 80251cc:	6030      	strgt	r0, [r6, #0]
 80251ce:	682a      	ldr	r2, [r5, #0]
 80251d0:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 80251d4:	4290      	cmp	r0, r2
 80251d6:	fb9b f2f1 	sdiv	r2, fp, r1
 80251da:	fb01 b212 	mls	r2, r1, r2, fp
 80251de:	eba1 0202 	sub.w	r2, r1, r2
 80251e2:	bfc8      	it	gt
 80251e4:	6028      	strgt	r0, [r5, #0]
 80251e6:	fb92 f0f1 	sdiv	r0, r2, r1
 80251ea:	fb01 2210 	mls	r2, r1, r0, r2
 80251ee:	4493      	add	fp, r2
 80251f0:	9b00      	ldr	r3, [sp, #0]
 80251f2:	455b      	cmp	r3, fp
 80251f4:	db2a      	blt.n	802524c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 80251f6:	4658      	mov	r0, fp
 80251f8:	f7ea ff34 	bl	8010064 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80251fc:	a903      	add	r1, sp, #12
 80251fe:	9003      	str	r0, [sp, #12]
 8025200:	4650      	mov	r0, sl
 8025202:	f7ea fdf7 	bl	800fdf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025206:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802520a:	4410      	add	r0, r2
 802520c:	f8d9 2000 	ldr.w	r2, [r9]
 8025210:	4282      	cmp	r2, r0
 8025212:	bfc8      	it	gt
 8025214:	f8c9 0000 	strgt.w	r0, [r9]
 8025218:	683a      	ldr	r2, [r7, #0]
 802521a:	4290      	cmp	r0, r2
 802521c:	bfc8      	it	gt
 802521e:	6038      	strgt	r0, [r7, #0]
 8025220:	4658      	mov	r0, fp
 8025222:	f7ff ff71 	bl	8025108 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8025226:	a903      	add	r1, sp, #12
 8025228:	9003      	str	r0, [sp, #12]
 802522a:	4650      	mov	r0, sl
 802522c:	f7ea fde2 	bl	800fdf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025230:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8025234:	1a10      	subs	r0, r2, r0
 8025236:	6832      	ldr	r2, [r6, #0]
 8025238:	4282      	cmp	r2, r0
 802523a:	bfc8      	it	gt
 802523c:	6030      	strgt	r0, [r6, #0]
 802523e:	682a      	ldr	r2, [r5, #0]
 8025240:	4290      	cmp	r0, r2
 8025242:	bfc8      	it	gt
 8025244:	6028      	strgt	r0, [r5, #0]
 8025246:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 802524a:	e7d1      	b.n	80251f0 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 802524c:	9b00      	ldr	r3, [sp, #0]
 802524e:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8025252:	455b      	cmp	r3, fp
 8025254:	dd27      	ble.n	80252a6 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 8025256:	4618      	mov	r0, r3
 8025258:	f7ea ff04 	bl	8010064 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802525c:	a903      	add	r1, sp, #12
 802525e:	9003      	str	r0, [sp, #12]
 8025260:	4650      	mov	r0, sl
 8025262:	f7ea fdc7 	bl	800fdf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025266:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802526a:	4410      	add	r0, r2
 802526c:	f8d9 2000 	ldr.w	r2, [r9]
 8025270:	4282      	cmp	r2, r0
 8025272:	bfc8      	it	gt
 8025274:	f8c9 0000 	strgt.w	r0, [r9]
 8025278:	683a      	ldr	r2, [r7, #0]
 802527a:	4290      	cmp	r0, r2
 802527c:	bfc8      	it	gt
 802527e:	6038      	strgt	r0, [r7, #0]
 8025280:	9800      	ldr	r0, [sp, #0]
 8025282:	f7ff ff41 	bl	8025108 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8025286:	a903      	add	r1, sp, #12
 8025288:	9003      	str	r0, [sp, #12]
 802528a:	4650      	mov	r0, sl
 802528c:	f7ea fdb2 	bl	800fdf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025290:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8025294:	1a10      	subs	r0, r2, r0
 8025296:	6832      	ldr	r2, [r6, #0]
 8025298:	4282      	cmp	r2, r0
 802529a:	bfc8      	it	gt
 802529c:	6030      	strgt	r0, [r6, #0]
 802529e:	682a      	ldr	r2, [r5, #0]
 80252a0:	4290      	cmp	r0, r2
 80252a2:	bfc8      	it	gt
 80252a4:	6028      	strgt	r0, [r5, #0]
 80252a6:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80252aa:	f8d9 1000 	ldr.w	r1, [r9]
 80252ae:	4291      	cmp	r1, r2
 80252b0:	bfc8      	it	gt
 80252b2:	f8c9 2000 	strgt.w	r2, [r9]
 80252b6:	683a      	ldr	r2, [r7, #0]
 80252b8:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 80252bc:	429a      	cmp	r2, r3
 80252be:	bfb8      	it	lt
 80252c0:	603b      	strlt	r3, [r7, #0]
 80252c2:	6832      	ldr	r2, [r6, #0]
 80252c4:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 80252c8:	429a      	cmp	r2, r3
 80252ca:	bfc8      	it	gt
 80252cc:	6033      	strgt	r3, [r6, #0]
 80252ce:	682a      	ldr	r2, [r5, #0]
 80252d0:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 80252d4:	429a      	cmp	r2, r3
 80252d6:	da00      	bge.n	80252da <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 80252d8:	602b      	str	r3, [r5, #0]
 80252da:	b005      	add	sp, #20
 80252dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80252e0:	2002      	movs	r0, #2
 80252e2:	3401      	adds	r4, #1
 80252e4:	fb94 f4f0 	sdiv	r4, r4, r0
 80252e8:	4610      	mov	r0, r2
 80252ea:	9201      	str	r2, [sp, #4]
 80252ec:	f7ea feba 	bl	8010064 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80252f0:	a903      	add	r1, sp, #12
 80252f2:	9003      	str	r0, [sp, #12]
 80252f4:	4650      	mov	r0, sl
 80252f6:	f7ea fd7d 	bl	800fdf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80252fa:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 80252fe:	9a01      	ldr	r2, [sp, #4]
 8025300:	4408      	add	r0, r1
 8025302:	f8d9 1000 	ldr.w	r1, [r9]
 8025306:	1b03      	subs	r3, r0, r4
 8025308:	4299      	cmp	r1, r3
 802530a:	bfc8      	it	gt
 802530c:	f8c9 3000 	strgt.w	r3, [r9]
 8025310:	6839      	ldr	r1, [r7, #0]
 8025312:	428b      	cmp	r3, r1
 8025314:	bfc8      	it	gt
 8025316:	603b      	strgt	r3, [r7, #0]
 8025318:	f8d9 1000 	ldr.w	r1, [r9]
 802531c:	4420      	add	r0, r4
 802531e:	4281      	cmp	r1, r0
 8025320:	bfc8      	it	gt
 8025322:	f8c9 0000 	strgt.w	r0, [r9]
 8025326:	6839      	ldr	r1, [r7, #0]
 8025328:	4288      	cmp	r0, r1
 802532a:	bfc8      	it	gt
 802532c:	6038      	strgt	r0, [r7, #0]
 802532e:	4610      	mov	r0, r2
 8025330:	f7ff feea 	bl	8025108 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8025334:	a903      	add	r1, sp, #12
 8025336:	9003      	str	r0, [sp, #12]
 8025338:	4650      	mov	r0, sl
 802533a:	f7ea fd5b 	bl	800fdf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802533e:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8025342:	1a10      	subs	r0, r2, r0
 8025344:	6832      	ldr	r2, [r6, #0]
 8025346:	1b01      	subs	r1, r0, r4
 8025348:	428a      	cmp	r2, r1
 802534a:	bfc8      	it	gt
 802534c:	6031      	strgt	r1, [r6, #0]
 802534e:	682a      	ldr	r2, [r5, #0]
 8025350:	4291      	cmp	r1, r2
 8025352:	bfc8      	it	gt
 8025354:	6029      	strgt	r1, [r5, #0]
 8025356:	6832      	ldr	r2, [r6, #0]
 8025358:	4420      	add	r0, r4
 802535a:	4282      	cmp	r2, r0
 802535c:	bfc8      	it	gt
 802535e:	6030      	strgt	r0, [r6, #0]
 8025360:	682a      	ldr	r2, [r5, #0]
 8025362:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 8025366:	4290      	cmp	r0, r2
 8025368:	fb9b f2f1 	sdiv	r2, fp, r1
 802536c:	fb01 b212 	mls	r2, r1, r2, fp
 8025370:	eba1 0202 	sub.w	r2, r1, r2
 8025374:	bfc8      	it	gt
 8025376:	6028      	strgt	r0, [r5, #0]
 8025378:	fb92 f0f1 	sdiv	r0, r2, r1
 802537c:	fb01 2210 	mls	r2, r1, r0, r2
 8025380:	4493      	add	fp, r2
 8025382:	9b00      	ldr	r3, [sp, #0]
 8025384:	455b      	cmp	r3, fp
 8025386:	db40      	blt.n	802540a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 8025388:	4658      	mov	r0, fp
 802538a:	f7ea fe6b 	bl	8010064 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802538e:	a903      	add	r1, sp, #12
 8025390:	9003      	str	r0, [sp, #12]
 8025392:	4650      	mov	r0, sl
 8025394:	f7ea fd2e 	bl	800fdf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025398:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802539c:	4410      	add	r0, r2
 802539e:	f8d9 2000 	ldr.w	r2, [r9]
 80253a2:	1b01      	subs	r1, r0, r4
 80253a4:	428a      	cmp	r2, r1
 80253a6:	bfc8      	it	gt
 80253a8:	f8c9 1000 	strgt.w	r1, [r9]
 80253ac:	683a      	ldr	r2, [r7, #0]
 80253ae:	4291      	cmp	r1, r2
 80253b0:	bfc8      	it	gt
 80253b2:	6039      	strgt	r1, [r7, #0]
 80253b4:	f8d9 2000 	ldr.w	r2, [r9]
 80253b8:	4420      	add	r0, r4
 80253ba:	4282      	cmp	r2, r0
 80253bc:	bfc8      	it	gt
 80253be:	f8c9 0000 	strgt.w	r0, [r9]
 80253c2:	683a      	ldr	r2, [r7, #0]
 80253c4:	4290      	cmp	r0, r2
 80253c6:	bfc8      	it	gt
 80253c8:	6038      	strgt	r0, [r7, #0]
 80253ca:	4658      	mov	r0, fp
 80253cc:	f7ff fe9c 	bl	8025108 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80253d0:	a903      	add	r1, sp, #12
 80253d2:	9003      	str	r0, [sp, #12]
 80253d4:	4650      	mov	r0, sl
 80253d6:	f7ea fd0d 	bl	800fdf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80253da:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80253de:	1a10      	subs	r0, r2, r0
 80253e0:	6832      	ldr	r2, [r6, #0]
 80253e2:	1b01      	subs	r1, r0, r4
 80253e4:	428a      	cmp	r2, r1
 80253e6:	bfc8      	it	gt
 80253e8:	6031      	strgt	r1, [r6, #0]
 80253ea:	682a      	ldr	r2, [r5, #0]
 80253ec:	4291      	cmp	r1, r2
 80253ee:	bfc8      	it	gt
 80253f0:	6029      	strgt	r1, [r5, #0]
 80253f2:	6832      	ldr	r2, [r6, #0]
 80253f4:	4420      	add	r0, r4
 80253f6:	4282      	cmp	r2, r0
 80253f8:	bfc8      	it	gt
 80253fa:	6030      	strgt	r0, [r6, #0]
 80253fc:	682a      	ldr	r2, [r5, #0]
 80253fe:	4290      	cmp	r0, r2
 8025400:	bfc8      	it	gt
 8025402:	6028      	strgt	r0, [r5, #0]
 8025404:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 8025408:	e7bb      	b.n	8025382 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 802540a:	9b00      	ldr	r3, [sp, #0]
 802540c:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8025410:	455b      	cmp	r3, fp
 8025412:	f77f af62 	ble.w	80252da <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8025416:	4618      	mov	r0, r3
 8025418:	f7ea fe24 	bl	8010064 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802541c:	a903      	add	r1, sp, #12
 802541e:	9003      	str	r0, [sp, #12]
 8025420:	4650      	mov	r0, sl
 8025422:	f7ea fce7 	bl	800fdf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025426:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802542a:	4410      	add	r0, r2
 802542c:	f8d9 2000 	ldr.w	r2, [r9]
 8025430:	1b01      	subs	r1, r0, r4
 8025432:	428a      	cmp	r2, r1
 8025434:	bfc8      	it	gt
 8025436:	f8c9 1000 	strgt.w	r1, [r9]
 802543a:	683a      	ldr	r2, [r7, #0]
 802543c:	4291      	cmp	r1, r2
 802543e:	bfc8      	it	gt
 8025440:	6039      	strgt	r1, [r7, #0]
 8025442:	f8d9 2000 	ldr.w	r2, [r9]
 8025446:	4420      	add	r0, r4
 8025448:	4282      	cmp	r2, r0
 802544a:	bfc8      	it	gt
 802544c:	f8c9 0000 	strgt.w	r0, [r9]
 8025450:	683b      	ldr	r3, [r7, #0]
 8025452:	4298      	cmp	r0, r3
 8025454:	bfc8      	it	gt
 8025456:	6038      	strgt	r0, [r7, #0]
 8025458:	9800      	ldr	r0, [sp, #0]
 802545a:	f7ff fe55 	bl	8025108 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802545e:	a903      	add	r1, sp, #12
 8025460:	9003      	str	r0, [sp, #12]
 8025462:	4650      	mov	r0, sl
 8025464:	f7ea fcc6 	bl	800fdf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025468:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 802546c:	6832      	ldr	r2, [r6, #0]
 802546e:	1a18      	subs	r0, r3, r0
 8025470:	1b03      	subs	r3, r0, r4
 8025472:	429a      	cmp	r2, r3
 8025474:	bfc8      	it	gt
 8025476:	6033      	strgt	r3, [r6, #0]
 8025478:	682a      	ldr	r2, [r5, #0]
 802547a:	4293      	cmp	r3, r2
 802547c:	bfc8      	it	gt
 802547e:	602b      	strgt	r3, [r5, #0]
 8025480:	6833      	ldr	r3, [r6, #0]
 8025482:	4404      	add	r4, r0
 8025484:	42a3      	cmp	r3, r4
 8025486:	bfc8      	it	gt
 8025488:	6034      	strgt	r4, [r6, #0]
 802548a:	682b      	ldr	r3, [r5, #0]
 802548c:	429c      	cmp	r4, r3
 802548e:	bfc8      	it	gt
 8025490:	602c      	strgt	r4, [r5, #0]
 8025492:	e722      	b.n	80252da <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

08025494 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 8025494:	b530      	push	{r4, r5, lr}
 8025496:	4604      	mov	r4, r0
 8025498:	4608      	mov	r0, r1
 802549a:	4611      	mov	r1, r2
 802549c:	461a      	mov	r2, r3
 802549e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80254a2:	b089      	sub	sp, #36	; 0x24
 80254a4:	015b      	lsls	r3, r3, #5
 80254a6:	9304      	str	r3, [sp, #16]
 80254a8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80254ac:	2500      	movs	r5, #0
 80254ae:	015b      	lsls	r3, r3, #5
 80254b0:	e9cd 3506 	strd	r3, r5, [sp, #24]
 80254b4:	ab07      	add	r3, sp, #28
 80254b6:	9302      	str	r3, [sp, #8]
 80254b8:	ab06      	add	r3, sp, #24
 80254ba:	9301      	str	r3, [sp, #4]
 80254bc:	ab05      	add	r3, sp, #20
 80254be:	9300      	str	r3, [sp, #0]
 80254c0:	ab04      	add	r3, sp, #16
 80254c2:	9505      	str	r5, [sp, #20]
 80254c4:	f7ff fe3e 	bl	8025144 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 80254c8:	2520      	movs	r5, #32
 80254ca:	9a04      	ldr	r2, [sp, #16]
 80254cc:	9805      	ldr	r0, [sp, #20]
 80254ce:	fb92 f2f5 	sdiv	r2, r2, r5
 80254d2:	fb90 f0f5 	sdiv	r0, r0, r5
 80254d6:	b292      	uxth	r2, r2
 80254d8:	3002      	adds	r0, #2
 80254da:	1a80      	subs	r0, r0, r2
 80254dc:	9b06      	ldr	r3, [sp, #24]
 80254de:	9907      	ldr	r1, [sp, #28]
 80254e0:	fb93 f3f5 	sdiv	r3, r3, r5
 80254e4:	fb91 f1f5 	sdiv	r1, r1, r5
 80254e8:	b29b      	uxth	r3, r3
 80254ea:	3102      	adds	r1, #2
 80254ec:	1ac9      	subs	r1, r1, r3
 80254ee:	3a01      	subs	r2, #1
 80254f0:	3b01      	subs	r3, #1
 80254f2:	80a0      	strh	r0, [r4, #4]
 80254f4:	4620      	mov	r0, r4
 80254f6:	8022      	strh	r2, [r4, #0]
 80254f8:	8063      	strh	r3, [r4, #2]
 80254fa:	80e1      	strh	r1, [r4, #6]
 80254fc:	b009      	add	sp, #36	; 0x24
 80254fe:	bd30      	pop	{r4, r5, pc}

08025500 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 8025500:	b510      	push	{r4, lr}
 8025502:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 8025506:	4604      	mov	r4, r0
 8025508:	f7ff ffc4 	bl	8025494 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 802550c:	4620      	mov	r0, r4
 802550e:	bd10      	pop	{r4, pc}

08025510 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 8025510:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8025512:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 8025516:	4606      	mov	r6, r0
 8025518:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 802551c:	6813      	ldr	r3, [r2, #0]
 802551e:	42a5      	cmp	r5, r4
 8025520:	ea4f 1040 	mov.w	r0, r0, lsl #5
 8025524:	da2b      	bge.n	802557e <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 8025526:	42a3      	cmp	r3, r4
 8025528:	dd14      	ble.n	8025554 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 802552a:	b168      	cbz	r0, 8025548 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802552c:	4267      	negs	r7, r4
 802552e:	fb97 f2f0 	sdiv	r2, r7, r0
 8025532:	fb00 7212 	mls	r2, r0, r2, r7
 8025536:	1a82      	subs	r2, r0, r2
 8025538:	fb92 f7f0 	sdiv	r7, r2, r0
 802553c:	fb00 2017 	mls	r0, r0, r7, r2
 8025540:	1a24      	subs	r4, r4, r0
 8025542:	42ac      	cmp	r4, r5
 8025544:	bfb8      	it	lt
 8025546:	462c      	movlt	r4, r5
 8025548:	4630      	mov	r0, r6
 802554a:	4622      	mov	r2, r4
 802554c:	f7ff ffa2 	bl	8025494 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8025550:	4630      	mov	r0, r6
 8025552:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8025554:	42ab      	cmp	r3, r5
 8025556:	dd0e      	ble.n	8025576 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 8025558:	b168      	cbz	r0, 8025576 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 802555a:	425f      	negs	r7, r3
 802555c:	fb97 f2f0 	sdiv	r2, r7, r0
 8025560:	fb00 7212 	mls	r2, r0, r2, r7
 8025564:	1a82      	subs	r2, r0, r2
 8025566:	fb92 f7f0 	sdiv	r7, r2, r0
 802556a:	fb00 2017 	mls	r0, r0, r7, r2
 802556e:	1a1b      	subs	r3, r3, r0
 8025570:	42ab      	cmp	r3, r5
 8025572:	bfb8      	it	lt
 8025574:	462b      	movlt	r3, r5
 8025576:	4622      	mov	r2, r4
 8025578:	461c      	mov	r4, r3
 802557a:	4613      	mov	r3, r2
 802557c:	e7e4      	b.n	8025548 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802557e:	42a3      	cmp	r3, r4
 8025580:	da10      	bge.n	80255a4 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 8025582:	b148      	cbz	r0, 8025598 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 8025584:	fb94 f2f0 	sdiv	r2, r4, r0
 8025588:	fb00 4212 	mls	r2, r0, r2, r4
 802558c:	1a82      	subs	r2, r0, r2
 802558e:	fb92 f7f0 	sdiv	r7, r2, r0
 8025592:	fb00 2017 	mls	r0, r0, r7, r2
 8025596:	4404      	add	r4, r0
 8025598:	42a5      	cmp	r5, r4
 802559a:	bfa8      	it	ge
 802559c:	4625      	movge	r5, r4
 802559e:	461c      	mov	r4, r3
 80255a0:	462b      	mov	r3, r5
 80255a2:	e7d1      	b.n	8025548 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80255a4:	42ab      	cmp	r3, r5
 80255a6:	dacf      	bge.n	8025548 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80255a8:	2800      	cmp	r0, #0
 80255aa:	d0cd      	beq.n	8025548 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80255ac:	fb93 f2f0 	sdiv	r2, r3, r0
 80255b0:	fb00 3212 	mls	r2, r0, r2, r3
 80255b4:	1a82      	subs	r2, r0, r2
 80255b6:	fb92 f7f0 	sdiv	r7, r2, r0
 80255ba:	fb00 2017 	mls	r0, r0, r7, r2
 80255be:	4403      	add	r3, r0
 80255c0:	42ab      	cmp	r3, r5
 80255c2:	bfa8      	it	ge
 80255c4:	462b      	movge	r3, r5
 80255c6:	e7bf      	b.n	8025548 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

080255c8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 80255c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80255cc:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 80255d0:	42ae      	cmp	r6, r5
 80255d2:	bfa2      	ittt	ge
 80255d4:	4633      	movge	r3, r6
 80255d6:	462e      	movge	r6, r5
 80255d8:	461d      	movge	r5, r3
 80255da:	1bab      	subs	r3, r5, r6
 80255dc:	468b      	mov	fp, r1
 80255de:	6c01      	ldr	r1, [r0, #64]	; 0x40
 80255e0:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 80255e4:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 80255e8:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 80255ec:	f04f 0220 	mov.w	r2, #32
 80255f0:	b0ab      	sub	sp, #172	; 0xac
 80255f2:	4604      	mov	r4, r0
 80255f4:	bfa4      	itt	ge
 80255f6:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 80255fa:	2600      	movge	r6, #0
 80255fc:	fb99 f9f2 	sdiv	r9, r9, r2
 8025600:	fb9a faf2 	sdiv	sl, sl, r2
 8025604:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8025606:	2900      	cmp	r1, #0
 8025608:	f000 80f5 	beq.w	80257f6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 802560c:	f9bb 0000 	ldrsh.w	r0, [fp]
 8025610:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 8025614:	eba9 0700 	sub.w	r7, r9, r0
 8025618:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 802561c:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 8025620:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 8025624:	ebaa 0802 	sub.w	r8, sl, r2
 8025628:	4407      	add	r7, r0
 802562a:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 802562e:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 8025632:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 8025636:	b23f      	sxth	r7, r7
 8025638:	4490      	add	r8, r2
 802563a:	eba9 0707 	sub.w	r7, r9, r7
 802563e:	fa0f f888 	sxth.w	r8, r8
 8025642:	ebaa 0808 	sub.w	r8, sl, r8
 8025646:	2f00      	cmp	r7, #0
 8025648:	bfb8      	it	lt
 802564a:	427f      	neglt	r7, r7
 802564c:	f1b8 0f00 	cmp.w	r8, #0
 8025650:	bfb8      	it	lt
 8025652:	f1c8 0800 	rsblt	r8, r8, #0
 8025656:	45bc      	cmp	ip, r7
 8025658:	bfcc      	ite	gt
 802565a:	f10c 0701 	addgt.w	r7, ip, #1
 802565e:	3701      	addle	r7, #1
 8025660:	4540      	cmp	r0, r8
 8025662:	bfc8      	it	gt
 8025664:	f100 0801 	addgt.w	r8, r0, #1
 8025668:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 802566c:	f100 0001 	add.w	r0, r0, #1
 8025670:	ea4f 0060 	mov.w	r0, r0, asr #1
 8025674:	f04f 0202 	mov.w	r2, #2
 8025678:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 802567c:	fb91 f1f2 	sdiv	r1, r1, r2
 8025680:	eba3 0301 	sub.w	r3, r3, r1
 8025684:	bfd8      	it	le
 8025686:	f108 0801 	addle.w	r8, r8, #1
 802568a:	9201      	str	r2, [sp, #4]
 802568c:	930d      	str	r3, [sp, #52]	; 0x34
 802568e:	f7ea fcc9 	bl	8010024 <_ZN8touchgfx7CWRUtil4sineEi>
 8025692:	a92a      	add	r1, sp, #168	; 0xa8
 8025694:	fb08 f808 	mul.w	r8, r8, r8
 8025698:	f841 0d70 	str.w	r0, [r1, #-112]!
 802569c:	a80d      	add	r0, sp, #52	; 0x34
 802569e:	f7ea fba9 	bl	800fdf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80256a2:	fb07 8707 	mla	r7, r7, r7, r8
 80256a6:	f04f 0c20 	mov.w	ip, #32
 80256aa:	fb90 f0fc 	sdiv	r0, r0, ip
 80256ae:	4340      	muls	r0, r0
 80256b0:	4287      	cmp	r7, r0
 80256b2:	9a01      	ldr	r2, [sp, #4]
 80256b4:	da04      	bge.n	80256c0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 80256b6:	2401      	movs	r4, #1
 80256b8:	4620      	mov	r0, r4
 80256ba:	b02b      	add	sp, #172	; 0xac
 80256bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80256c0:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80256c2:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80256c4:	fb91 f3f2 	sdiv	r3, r1, r2
 80256c8:	4403      	add	r3, r0
 80256ca:	fb93 f3fc 	sdiv	r3, r3, ip
 80256ce:	f9bb 1000 	ldrsh.w	r1, [fp]
 80256d2:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 80256d6:	440a      	add	r2, r1
 80256d8:	b212      	sxth	r2, r2
 80256da:	454a      	cmp	r2, r9
 80256dc:	bfa8      	it	ge
 80256de:	464a      	movge	r2, r9
 80256e0:	428a      	cmp	r2, r1
 80256e2:	bfac      	ite	ge
 80256e4:	eba9 0902 	subge.w	r9, r9, r2
 80256e8:	eba9 0901 	sublt.w	r9, r9, r1
 80256ec:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 80256f0:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80256f4:	440a      	add	r2, r1
 80256f6:	b212      	sxth	r2, r2
 80256f8:	4552      	cmp	r2, sl
 80256fa:	bfa8      	it	ge
 80256fc:	4652      	movge	r2, sl
 80256fe:	428a      	cmp	r2, r1
 8025700:	bfac      	ite	ge
 8025702:	ebaa 0a02 	subge.w	sl, sl, r2
 8025706:	ebaa 0a01 	sublt.w	sl, sl, r1
 802570a:	3301      	adds	r3, #1
 802570c:	fb0a fa0a 	mul.w	sl, sl, sl
 8025710:	fb09 a909 	mla	r9, r9, r9, sl
 8025714:	435b      	muls	r3, r3
 8025716:	4599      	cmp	r9, r3
 8025718:	dccd      	bgt.n	80256b6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 802571a:	465a      	mov	r2, fp
 802571c:	4621      	mov	r1, r4
 802571e:	a80e      	add	r0, sp, #56	; 0x38
 8025720:	f7ff faae 	bl	8024c80 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8025724:	6b62      	ldr	r2, [r4, #52]	; 0x34
 8025726:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8025728:	9209      	str	r2, [sp, #36]	; 0x24
 802572a:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 802572e:	930a      	str	r3, [sp, #40]	; 0x28
 8025730:	dd07      	ble.n	8025742 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 8025732:	2102      	movs	r1, #2
 8025734:	fb93 f3f1 	sdiv	r3, r3, r1
 8025738:	4413      	add	r3, r2
 802573a:	930a      	str	r3, [sp, #40]	; 0x28
 802573c:	fb93 f3f1 	sdiv	r3, r3, r1
 8025740:	9309      	str	r3, [sp, #36]	; 0x24
 8025742:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8025746:	4630      	mov	r0, r6
 8025748:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 802574c:	930b      	str	r3, [sp, #44]	; 0x2c
 802574e:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 8025752:	f7ea fc87 	bl	8010064 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8025756:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 802575a:	f04f 0a02 	mov.w	sl, #2
 802575e:	f849 0d74 	str.w	r0, [r9, #-116]!
 8025762:	a80b      	add	r0, sp, #44	; 0x2c
 8025764:	4649      	mov	r1, r9
 8025766:	f7ea fb45 	bl	800fdf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802576a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802576c:	fb90 f0fa 	sdiv	r0, r0, sl
 8025770:	eb00 0b03 	add.w	fp, r0, r3
 8025774:	4630      	mov	r0, r6
 8025776:	f7ff fcc7 	bl	8025108 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802577a:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 802577e:	017f      	lsls	r7, r7, #5
 8025780:	f848 0d78 	str.w	r0, [r8, #-120]!
 8025784:	a80b      	add	r0, sp, #44	; 0x2c
 8025786:	4641      	mov	r1, r8
 8025788:	f7ea fb34 	bl	800fdf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802578c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802578e:	fb90 f0fa 	sdiv	r0, r0, sl
 8025792:	4659      	mov	r1, fp
 8025794:	1a12      	subs	r2, r2, r0
 8025796:	a80e      	add	r0, sp, #56	; 0x38
 8025798:	f7ff fbf2 	bl	8024f80 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 802579c:	f106 0a20 	add.w	sl, r6, #32
 80257a0:	bb67      	cbnz	r7, 80257fc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 80257a2:	46b3      	mov	fp, r6
 80257a4:	45aa      	cmp	sl, r5
 80257a6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80257a8:	dc33      	bgt.n	8025812 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 80257aa:	9909      	ldr	r1, [sp, #36]	; 0x24
 80257ac:	4650      	mov	r0, sl
 80257ae:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 80257b2:	920b      	str	r2, [sp, #44]	; 0x2c
 80257b4:	f7ea fc56 	bl	8010064 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80257b8:	4641      	mov	r1, r8
 80257ba:	900c      	str	r0, [sp, #48]	; 0x30
 80257bc:	a80b      	add	r0, sp, #44	; 0x2c
 80257be:	f7ea fb19 	bl	800fdf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80257c2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80257c4:	2302      	movs	r3, #2
 80257c6:	fb90 f0f3 	sdiv	r0, r0, r3
 80257ca:	eb00 0b02 	add.w	fp, r0, r2
 80257ce:	4650      	mov	r0, sl
 80257d0:	f7ff fc9a 	bl	8025108 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80257d4:	4649      	mov	r1, r9
 80257d6:	900d      	str	r0, [sp, #52]	; 0x34
 80257d8:	a80b      	add	r0, sp, #44	; 0x2c
 80257da:	f7ea fb0b 	bl	800fdf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80257de:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80257e0:	2302      	movs	r3, #2
 80257e2:	4659      	mov	r1, fp
 80257e4:	fb90 f0f3 	sdiv	r0, r0, r3
 80257e8:	1a12      	subs	r2, r2, r0
 80257ea:	a80e      	add	r0, sp, #56	; 0x38
 80257ec:	46d3      	mov	fp, sl
 80257ee:	f7ff fc14 	bl	802501a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80257f2:	44ba      	add	sl, r7
 80257f4:	e7d6      	b.n	80257a4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 80257f6:	fb93 f3f2 	sdiv	r3, r3, r2
 80257fa:	e768      	b.n	80256ce <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 80257fc:	fb9a f2f7 	sdiv	r2, sl, r7
 8025800:	fb07 a212 	mls	r2, r7, r2, sl
 8025804:	1aba      	subs	r2, r7, r2
 8025806:	fb92 f1f7 	sdiv	r1, r2, r7
 802580a:	fb07 2211 	mls	r2, r7, r1, r2
 802580e:	4492      	add	sl, r2
 8025810:	e7c7      	b.n	80257a2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 8025812:	45ab      	cmp	fp, r5
 8025814:	da23      	bge.n	802585e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 8025816:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025818:	4628      	mov	r0, r5
 802581a:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 802581e:	920b      	str	r2, [sp, #44]	; 0x2c
 8025820:	f7ea fc20 	bl	8010064 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8025824:	4641      	mov	r1, r8
 8025826:	900c      	str	r0, [sp, #48]	; 0x30
 8025828:	a80b      	add	r0, sp, #44	; 0x2c
 802582a:	f7ea fae3 	bl	800fdf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802582e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8025830:	f04f 0a02 	mov.w	sl, #2
 8025834:	fb90 f0fa 	sdiv	r0, r0, sl
 8025838:	4403      	add	r3, r0
 802583a:	4628      	mov	r0, r5
 802583c:	9301      	str	r3, [sp, #4]
 802583e:	f7ff fc63 	bl	8025108 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8025842:	4649      	mov	r1, r9
 8025844:	900d      	str	r0, [sp, #52]	; 0x34
 8025846:	a80b      	add	r0, sp, #44	; 0x2c
 8025848:	f7ea fad4 	bl	800fdf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802584c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802584e:	9b01      	ldr	r3, [sp, #4]
 8025850:	fb90 f0fa 	sdiv	r0, r0, sl
 8025854:	4619      	mov	r1, r3
 8025856:	1a12      	subs	r2, r2, r0
 8025858:	a80e      	add	r0, sp, #56	; 0x38
 802585a:	f7ff fbde 	bl	802501a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802585e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8025860:	b99b      	cbnz	r3, 802588a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 8025862:	1bad      	subs	r5, r5, r6
 8025864:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 8025868:	da04      	bge.n	8025874 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802586a:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 802586e:	a80e      	add	r0, sp, #56	; 0x38
 8025870:	f7ff fbd3 	bl	802501a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8025874:	21ff      	movs	r1, #255	; 0xff
 8025876:	a80e      	add	r0, sp, #56	; 0x38
 8025878:	f7ff fabe 	bl	8024df8 <_ZN8touchgfx6Canvas6renderEh>
 802587c:	4604      	mov	r4, r0
 802587e:	4b8a      	ldr	r3, [pc, #552]	; (8025aa8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 8025880:	930e      	str	r3, [sp, #56]	; 0x38
 8025882:	a816      	add	r0, sp, #88	; 0x58
 8025884:	f7eb ff22 	bl	80116cc <_ZN8touchgfx7OutlineD1Ev>
 8025888:	e716      	b.n	80256b8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 802588a:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 802588e:	429a      	cmp	r2, r3
 8025890:	f0c0 8107 	bcc.w	8025aa2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 8025894:	1bab      	subs	r3, r5, r6
 8025896:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 802589a:	9301      	str	r3, [sp, #4]
 802589c:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 80258a0:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 80258a4:	da43      	bge.n	802592e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 80258a6:	4628      	mov	r0, r5
 80258a8:	f7ea fbdc 	bl	8010064 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80258ac:	4649      	mov	r1, r9
 80258ae:	900d      	str	r0, [sp, #52]	; 0x34
 80258b0:	a809      	add	r0, sp, #36	; 0x24
 80258b2:	f7ea fa9f 	bl	800fdf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80258b6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80258b8:	18c3      	adds	r3, r0, r3
 80258ba:	4628      	mov	r0, r5
 80258bc:	9303      	str	r3, [sp, #12]
 80258be:	f7ff fc23 	bl	8025108 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80258c2:	4649      	mov	r1, r9
 80258c4:	900d      	str	r0, [sp, #52]	; 0x34
 80258c6:	a809      	add	r0, sp, #36	; 0x24
 80258c8:	f7ea fa94 	bl	800fdf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80258cc:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80258ce:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 80258d2:	1a1b      	subs	r3, r3, r0
 80258d4:	9302      	str	r3, [sp, #8]
 80258d6:	9204      	str	r2, [sp, #16]
 80258d8:	eb0a 0305 	add.w	r3, sl, r5
 80258dc:	9a04      	ldr	r2, [sp, #16]
 80258de:	4293      	cmp	r3, r2
 80258e0:	da25      	bge.n	802592e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 80258e2:	4618      	mov	r0, r3
 80258e4:	9306      	str	r3, [sp, #24]
 80258e6:	f7ea fbbd 	bl	8010064 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80258ea:	4649      	mov	r1, r9
 80258ec:	900d      	str	r0, [sp, #52]	; 0x34
 80258ee:	a80a      	add	r0, sp, #40	; 0x28
 80258f0:	f7ea fa80 	bl	800fdf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80258f4:	9b03      	ldr	r3, [sp, #12]
 80258f6:	2202      	movs	r2, #2
 80258f8:	fb90 f0f2 	sdiv	r0, r0, r2
 80258fc:	18c3      	adds	r3, r0, r3
 80258fe:	9305      	str	r3, [sp, #20]
 8025900:	9b06      	ldr	r3, [sp, #24]
 8025902:	9207      	str	r2, [sp, #28]
 8025904:	4618      	mov	r0, r3
 8025906:	f7ff fbff 	bl	8025108 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802590a:	a92a      	add	r1, sp, #168	; 0xa8
 802590c:	f841 0d78 	str.w	r0, [r1, #-120]!
 8025910:	a80a      	add	r0, sp, #40	; 0x28
 8025912:	f7ea fa6f 	bl	800fdf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025916:	9b02      	ldr	r3, [sp, #8]
 8025918:	9a07      	ldr	r2, [sp, #28]
 802591a:	9905      	ldr	r1, [sp, #20]
 802591c:	fb90 f2f2 	sdiv	r2, r0, r2
 8025920:	a80e      	add	r0, sp, #56	; 0x38
 8025922:	1a9a      	subs	r2, r3, r2
 8025924:	f7ff fb79 	bl	802501a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8025928:	9b06      	ldr	r3, [sp, #24]
 802592a:	4453      	add	r3, sl
 802592c:	e7d6      	b.n	80258dc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 802592e:	45ab      	cmp	fp, r5
 8025930:	da25      	bge.n	802597e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 8025932:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8025936:	4628      	mov	r0, r5
 8025938:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 802593c:	930b      	str	r3, [sp, #44]	; 0x2c
 802593e:	f7ea fb91 	bl	8010064 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8025942:	4641      	mov	r1, r8
 8025944:	900c      	str	r0, [sp, #48]	; 0x30
 8025946:	a80b      	add	r0, sp, #44	; 0x2c
 8025948:	f7ea fa54 	bl	800fdf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802594c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802594e:	2202      	movs	r2, #2
 8025950:	fb90 f0f2 	sdiv	r0, r0, r2
 8025954:	eb00 0903 	add.w	r9, r0, r3
 8025958:	4628      	mov	r0, r5
 802595a:	9202      	str	r2, [sp, #8]
 802595c:	f7ff fbd4 	bl	8025108 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8025960:	a92a      	add	r1, sp, #168	; 0xa8
 8025962:	f841 0d74 	str.w	r0, [r1, #-116]!
 8025966:	a80b      	add	r0, sp, #44	; 0x2c
 8025968:	f7ea fa44 	bl	800fdf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802596c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802596e:	9a02      	ldr	r2, [sp, #8]
 8025970:	fb90 f2f2 	sdiv	r2, r0, r2
 8025974:	4649      	mov	r1, r9
 8025976:	1a9a      	subs	r2, r3, r2
 8025978:	a80e      	add	r0, sp, #56	; 0x38
 802597a:	f7ff fb4e 	bl	802501a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802597e:	46d9      	mov	r9, fp
 8025980:	2502      	movs	r5, #2
 8025982:	45b1      	cmp	r9, r6
 8025984:	db25      	blt.n	80259d2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 8025986:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802598a:	4648      	mov	r0, r9
 802598c:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8025990:	930b      	str	r3, [sp, #44]	; 0x2c
 8025992:	f7ea fb67 	bl	8010064 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8025996:	4641      	mov	r1, r8
 8025998:	900c      	str	r0, [sp, #48]	; 0x30
 802599a:	a80b      	add	r0, sp, #44	; 0x2c
 802599c:	f7ea fa2a 	bl	800fdf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80259a0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80259a2:	fb90 f0f5 	sdiv	r0, r0, r5
 80259a6:	eb00 0b03 	add.w	fp, r0, r3
 80259aa:	4648      	mov	r0, r9
 80259ac:	f7ff fbac 	bl	8025108 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80259b0:	a90d      	add	r1, sp, #52	; 0x34
 80259b2:	900d      	str	r0, [sp, #52]	; 0x34
 80259b4:	a80b      	add	r0, sp, #44	; 0x2c
 80259b6:	f7ea fa1d 	bl	800fdf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80259ba:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80259bc:	fb90 f0f5 	sdiv	r0, r0, r5
 80259c0:	4659      	mov	r1, fp
 80259c2:	1a12      	subs	r2, r2, r0
 80259c4:	a80e      	add	r0, sp, #56	; 0x38
 80259c6:	46cb      	mov	fp, r9
 80259c8:	f7ff fb27 	bl	802501a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80259cc:	eba9 0907 	sub.w	r9, r9, r7
 80259d0:	e7d7      	b.n	8025982 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 80259d2:	455e      	cmp	r6, fp
 80259d4:	da22      	bge.n	8025a1c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 80259d6:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80259da:	4630      	mov	r0, r6
 80259dc:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 80259e0:	930b      	str	r3, [sp, #44]	; 0x2c
 80259e2:	f7ea fb3f 	bl	8010064 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80259e6:	4641      	mov	r1, r8
 80259e8:	900c      	str	r0, [sp, #48]	; 0x30
 80259ea:	a80b      	add	r0, sp, #44	; 0x2c
 80259ec:	f7ea fa02 	bl	800fdf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80259f0:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 80259f2:	2502      	movs	r5, #2
 80259f4:	fb90 f0f5 	sdiv	r0, r0, r5
 80259f8:	4407      	add	r7, r0
 80259fa:	4630      	mov	r0, r6
 80259fc:	f7ff fb84 	bl	8025108 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8025a00:	a92a      	add	r1, sp, #168	; 0xa8
 8025a02:	f841 0d74 	str.w	r0, [r1, #-116]!
 8025a06:	a80b      	add	r0, sp, #44	; 0x2c
 8025a08:	f7ea f9f4 	bl	800fdf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025a0c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8025a0e:	fb90 f0f5 	sdiv	r0, r0, r5
 8025a12:	4639      	mov	r1, r7
 8025a14:	1a12      	subs	r2, r2, r0
 8025a16:	a80e      	add	r0, sp, #56	; 0x38
 8025a18:	f7ff faff 	bl	802501a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8025a1c:	9b01      	ldr	r3, [sp, #4]
 8025a1e:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8025a22:	f6bf af27 	bge.w	8025874 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8025a26:	4630      	mov	r0, r6
 8025a28:	f7ea fb1c 	bl	8010064 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8025a2c:	ad2a      	add	r5, sp, #168	; 0xa8
 8025a2e:	f04f 0b02 	mov.w	fp, #2
 8025a32:	f845 0d74 	str.w	r0, [r5, #-116]!
 8025a36:	a809      	add	r0, sp, #36	; 0x24
 8025a38:	4629      	mov	r1, r5
 8025a3a:	f7ea f9db 	bl	800fdf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025a3e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8025a40:	eb00 0903 	add.w	r9, r0, r3
 8025a44:	4630      	mov	r0, r6
 8025a46:	f7ff fb5f 	bl	8025108 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8025a4a:	4629      	mov	r1, r5
 8025a4c:	900d      	str	r0, [sp, #52]	; 0x34
 8025a4e:	a809      	add	r0, sp, #36	; 0x24
 8025a50:	f7ea f9d0 	bl	800fdf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025a54:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8025a56:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 8025a5a:	eba3 0800 	sub.w	r8, r3, r0
 8025a5e:	4454      	add	r4, sl
 8025a60:	42a6      	cmp	r6, r4
 8025a62:	f77f af07 	ble.w	8025874 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8025a66:	4620      	mov	r0, r4
 8025a68:	f7ea fafc 	bl	8010064 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8025a6c:	4629      	mov	r1, r5
 8025a6e:	900d      	str	r0, [sp, #52]	; 0x34
 8025a70:	a80a      	add	r0, sp, #40	; 0x28
 8025a72:	f7ea f9bf 	bl	800fdf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025a76:	fb90 f0fb 	sdiv	r0, r0, fp
 8025a7a:	eb00 0709 	add.w	r7, r0, r9
 8025a7e:	4620      	mov	r0, r4
 8025a80:	f7ff fb42 	bl	8025108 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8025a84:	a90c      	add	r1, sp, #48	; 0x30
 8025a86:	900c      	str	r0, [sp, #48]	; 0x30
 8025a88:	a80a      	add	r0, sp, #40	; 0x28
 8025a8a:	f7ea f9b3 	bl	800fdf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025a8e:	4639      	mov	r1, r7
 8025a90:	fb90 f2fb 	sdiv	r2, r0, fp
 8025a94:	a80e      	add	r0, sp, #56	; 0x38
 8025a96:	eba8 0202 	sub.w	r2, r8, r2
 8025a9a:	f7ff fabe 	bl	802501a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8025a9e:	4454      	add	r4, sl
 8025aa0:	e7de      	b.n	8025a60 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 8025aa2:	2400      	movs	r4, #0
 8025aa4:	e6eb      	b.n	802587e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 8025aa6:	bf00      	nop
 8025aa8:	0802bc34 	.word	0x0802bc34

08025aac <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8025aac:	b570      	push	{r4, r5, r6, lr}
 8025aae:	790b      	ldrb	r3, [r1, #4]
 8025ab0:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8025ab4:	2b00      	cmp	r3, #0
 8025ab6:	bf0c      	ite	eq
 8025ab8:	2301      	moveq	r3, #1
 8025aba:	2300      	movne	r3, #0
 8025abc:	4604      	mov	r4, r0
 8025abe:	460e      	mov	r6, r1
 8025ac0:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8025ac4:	d109      	bne.n	8025ada <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8025ac6:	b14d      	cbz	r5, 8025adc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8025ac8:	7933      	ldrb	r3, [r6, #4]
 8025aca:	2b01      	cmp	r3, #1
 8025acc:	d10c      	bne.n	8025ae8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8025ace:	6823      	ldr	r3, [r4, #0]
 8025ad0:	4620      	mov	r0, r4
 8025ad2:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8025ad4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8025ad8:	4718      	bx	r3
 8025ada:	b12d      	cbz	r5, 8025ae8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8025adc:	6823      	ldr	r3, [r4, #0]
 8025ade:	4620      	mov	r0, r4
 8025ae0:	695b      	ldr	r3, [r3, #20]
 8025ae2:	4798      	blx	r3
 8025ae4:	2d00      	cmp	r5, #0
 8025ae6:	d1ef      	bne.n	8025ac8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8025ae8:	bd70      	pop	{r4, r5, r6, pc}

08025aea <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 8025aea:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8025aee:	4770      	bx	lr

08025af0 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 8025af0:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 8025af4:	4770      	bx	lr

08025af6 <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 8025af6:	6802      	ldr	r2, [r0, #0]
 8025af8:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8025afc:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8025afe:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8025b02:	4710      	bx	r2

08025b04 <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 8025b04:	6802      	ldr	r2, [r0, #0]
 8025b06:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8025b0a:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8025b0c:	eef0 0a40 	vmov.f32	s1, s0
 8025b10:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8025b14:	4710      	bx	r2

08025b16 <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 8025b16:	6802      	ldr	r2, [r0, #0]
 8025b18:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8025b1c:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8025b1e:	eeb0 1a40 	vmov.f32	s2, s0
 8025b22:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8025b26:	4710      	bx	r2

08025b28 <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 8025b28:	6802      	ldr	r2, [r0, #0]
 8025b2a:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8025b2e:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8025b30:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8025b34:	4710      	bx	r2

08025b36 <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 8025b36:	6802      	ldr	r2, [r0, #0]
 8025b38:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8025b3c:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8025b3e:	eef0 0a40 	vmov.f32	s1, s0
 8025b42:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8025b46:	4710      	bx	r2

08025b48 <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 8025b48:	6802      	ldr	r2, [r0, #0]
 8025b4a:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8025b4e:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8025b50:	eeb0 1a40 	vmov.f32	s2, s0
 8025b54:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8025b58:	4710      	bx	r2

08025b5a <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 8025b5a:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8025b5e:	4770      	bx	lr

08025b60 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 8025b60:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 8025b64:	4770      	bx	lr

08025b66 <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 8025b66:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 8025b6a:	4770      	bx	lr

08025b6c <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 8025b6c:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 8025b70:	4770      	bx	lr

08025b72 <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 8025b72:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 8025b76:	4770      	bx	lr

08025b78 <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 8025b78:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 8025b7c:	4770      	bx	lr

08025b7e <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 8025b7e:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 8025b82:	4770      	bx	lr

08025b84 <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 8025b84:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 8025b88:	4770      	bx	lr

08025b8a <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 8025b8a:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 8025b8e:	4770      	bx	lr

08025b90 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 8025b90:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 8025b94:	4770      	bx	lr

08025b96 <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 8025b96:	ee07 2a90 	vmov	s15, r2
 8025b9a:	6803      	ldr	r3, [r0, #0]
 8025b9c:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8025ba0:	ee07 1a90 	vmov	s15, r1
 8025ba4:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8025ba8:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8025bac:	4718      	bx	r3

08025bae <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 8025bae:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 8025bb2:	4770      	bx	lr

08025bb4 <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 8025bb4:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 8025bb8:	4770      	bx	lr

08025bba <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 8025bba:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 8025bbe:	4770      	bx	lr

08025bc0 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 8025bc0:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 8025bc4:	4770      	bx	lr

08025bc6 <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 8025bc6:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 8025bca:	4770      	bx	lr

08025bcc <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 8025bcc:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 8025bd0:	4770      	bx	lr

08025bd2 <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 8025bd2:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 8025bd6:	4770      	bx	lr

08025bd8 <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 8025bd8:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 8025bdc:	4770      	bx	lr

08025bde <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 8025bde:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 8025be2:	4770      	bx	lr

08025be4 <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 8025be4:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 8025be8:	4770      	bx	lr

08025bea <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 8025bea:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 8025bee:	4770      	bx	lr

08025bf0 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 8025bf0:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 8025bf4:	4770      	bx	lr

08025bf6 <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 8025bf6:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 8025bfa:	4770      	bx	lr

08025bfc <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 8025bfc:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 8025c00:	4770      	bx	lr

08025c02 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 8025c02:	b510      	push	{r4, lr}
 8025c04:	ed2d 8b04 	vpush	{d8-d9}
 8025c08:	6803      	ldr	r3, [r0, #0]
 8025c0a:	4604      	mov	r4, r0
 8025c0c:	699b      	ldr	r3, [r3, #24]
 8025c0e:	eeb0 8a40 	vmov.f32	s16, s0
 8025c12:	eef0 8a60 	vmov.f32	s17, s1
 8025c16:	eeb0 9a41 	vmov.f32	s18, s2
 8025c1a:	4798      	blx	r3
 8025c1c:	6823      	ldr	r3, [r4, #0]
 8025c1e:	4620      	mov	r0, r4
 8025c20:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8025c22:	eeb0 1a49 	vmov.f32	s2, s18
 8025c26:	eef0 0a68 	vmov.f32	s1, s17
 8025c2a:	eeb0 0a48 	vmov.f32	s0, s16
 8025c2e:	4798      	blx	r3
 8025c30:	ecbd 8b04 	vpop	{d8-d9}
 8025c34:	6823      	ldr	r3, [r4, #0]
 8025c36:	4620      	mov	r0, r4
 8025c38:	699b      	ldr	r3, [r3, #24]
 8025c3a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8025c3e:	4718      	bx	r3

08025c40 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 8025c40:	b510      	push	{r4, lr}
 8025c42:	ed2d 8b02 	vpush	{d8}
 8025c46:	6803      	ldr	r3, [r0, #0]
 8025c48:	4604      	mov	r4, r0
 8025c4a:	699b      	ldr	r3, [r3, #24]
 8025c4c:	eeb0 8a40 	vmov.f32	s16, s0
 8025c50:	4798      	blx	r3
 8025c52:	6823      	ldr	r3, [r4, #0]
 8025c54:	4620      	mov	r0, r4
 8025c56:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8025c5a:	eeb0 0a48 	vmov.f32	s0, s16
 8025c5e:	4798      	blx	r3
 8025c60:	ecbd 8b02 	vpop	{d8}
 8025c64:	6823      	ldr	r3, [r4, #0]
 8025c66:	4620      	mov	r0, r4
 8025c68:	699b      	ldr	r3, [r3, #24]
 8025c6a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8025c6e:	4718      	bx	r3

08025c70 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 8025c70:	2200      	movs	r2, #0
 8025c72:	8002      	strh	r2, [r0, #0]
 8025c74:	8042      	strh	r2, [r0, #2]
 8025c76:	8082      	strh	r2, [r0, #4]
 8025c78:	80c2      	strh	r2, [r0, #6]
 8025c7a:	4770      	bx	lr

08025c7c <_ZN8touchgfx13TextureMapperD1Ev>:
 8025c7c:	4770      	bx	lr

08025c7e <_ZN8touchgfx13TextureMapperD0Ev>:
 8025c7e:	b510      	push	{r4, lr}
 8025c80:	2190      	movs	r1, #144	; 0x90
 8025c82:	4604      	mov	r4, r0
 8025c84:	f000 fe1b 	bl	80268be <_ZdlPvj>
 8025c88:	4620      	mov	r0, r4
 8025c8a:	bd10      	pop	{r4, pc}

08025c8c <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 8025c8c:	b538      	push	{r3, r4, r5, lr}
 8025c8e:	2500      	movs	r5, #0
 8025c90:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8025c94:	2301      	movs	r3, #1
 8025c96:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 8025c9a:	4b1f      	ldr	r3, [pc, #124]	; (8025d18 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 8025c9c:	8085      	strh	r5, [r0, #4]
 8025c9e:	80c5      	strh	r5, [r0, #6]
 8025ca0:	8105      	strh	r5, [r0, #8]
 8025ca2:	8145      	strh	r5, [r0, #10]
 8025ca4:	8185      	strh	r5, [r0, #12]
 8025ca6:	81c5      	strh	r5, [r0, #14]
 8025ca8:	8205      	strh	r5, [r0, #16]
 8025caa:	8245      	strh	r5, [r0, #18]
 8025cac:	61c5      	str	r5, [r0, #28]
 8025cae:	8405      	strh	r5, [r0, #32]
 8025cb0:	8445      	strh	r5, [r0, #34]	; 0x22
 8025cb2:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 8025cb6:	6003      	str	r3, [r0, #0]
 8025cb8:	880b      	ldrh	r3, [r1, #0]
 8025cba:	84c3      	strh	r3, [r0, #38]	; 0x26
 8025cbc:	23ff      	movs	r3, #255	; 0xff
 8025cbe:	4604      	mov	r4, r0
 8025cc0:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8025cc4:	f7eb fb93 	bl	80113ee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8025cc8:	4b14      	ldr	r3, [pc, #80]	; (8025d1c <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 8025cca:	6023      	str	r3, [r4, #0]
 8025ccc:	2300      	movs	r3, #0
 8025cce:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8025cd2:	4913      	ldr	r1, [pc, #76]	; (8025d20 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 8025cd4:	62e3      	str	r3, [r4, #44]	; 0x2c
 8025cd6:	6323      	str	r3, [r4, #48]	; 0x30
 8025cd8:	6363      	str	r3, [r4, #52]	; 0x34
 8025cda:	63a3      	str	r3, [r4, #56]	; 0x38
 8025cdc:	63e3      	str	r3, [r4, #60]	; 0x3c
 8025cde:	6463      	str	r3, [r4, #68]	; 0x44
 8025ce0:	64a3      	str	r3, [r4, #72]	; 0x48
 8025ce2:	6523      	str	r3, [r4, #80]	; 0x50
 8025ce4:	6563      	str	r3, [r4, #84]	; 0x54
 8025ce6:	65e3      	str	r3, [r4, #92]	; 0x5c
 8025ce8:	6623      	str	r3, [r4, #96]	; 0x60
 8025cea:	66a3      	str	r3, [r4, #104]	; 0x68
 8025cec:	66e3      	str	r3, [r4, #108]	; 0x6c
 8025cee:	6763      	str	r3, [r4, #116]	; 0x74
 8025cf0:	67a3      	str	r3, [r4, #120]	; 0x78
 8025cf2:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 8025cf6:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 8025cfa:	230c      	movs	r3, #12
 8025cfc:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 8025d00:	6422      	str	r2, [r4, #64]	; 0x40
 8025d02:	64e1      	str	r1, [r4, #76]	; 0x4c
 8025d04:	65a1      	str	r1, [r4, #88]	; 0x58
 8025d06:	6662      	str	r2, [r4, #100]	; 0x64
 8025d08:	6722      	str	r2, [r4, #112]	; 0x70
 8025d0a:	67e2      	str	r2, [r4, #124]	; 0x7c
 8025d0c:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 8025d10:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 8025d14:	4620      	mov	r0, r4
 8025d16:	bd38      	pop	{r3, r4, r5, pc}
 8025d18:	0802b6dc 	.word	0x0802b6dc
 8025d1c:	0802bcc0 	.word	0x0802bcc0
 8025d20:	447a0000 	.word	0x447a0000

08025d24 <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 8025d24:	b570      	push	{r4, r5, r6, lr}
 8025d26:	ed2d 8b04 	vpush	{d8-d9}
 8025d2a:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 8025d2e:	add0      	add	r5, sp, #832	; 0x340
 8025d30:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 8025d32:	f825 3d40 	strh.w	r3, [r5, #-64]!
 8025d36:	4604      	mov	r4, r0
 8025d38:	4628      	mov	r0, r5
 8025d3a:	f7f1 fa7f 	bl	801723c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8025d3e:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8025d40:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 8025d44:	4606      	mov	r6, r0
 8025d46:	4628      	mov	r0, r5
 8025d48:	f7f1 faac 	bl	80172a4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8025d4c:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8025d50:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 8025d54:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8025d56:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 8025d5a:	9312      	str	r3, [sp, #72]	; 0x48
 8025d5c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025d60:	1c72      	adds	r2, r6, #1
 8025d62:	3001      	adds	r0, #1
 8025d64:	ee76 5ac7 	vsub.f32	s11, s13, s14
 8025d68:	ee07 2a90 	vmov	s15, r2
 8025d6c:	ee06 0a90 	vmov	s13, r0
 8025d70:	ee36 6a47 	vsub.f32	s12, s12, s14
 8025d74:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8025d78:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8025d7c:	ee77 7a86 	vadd.f32	s15, s15, s12
 8025d80:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8025d84:	9316      	str	r3, [sp, #88]	; 0x58
 8025d86:	931a      	str	r3, [sp, #104]	; 0x68
 8025d88:	931e      	str	r3, [sp, #120]	; 0x78
 8025d8a:	2300      	movs	r3, #0
 8025d8c:	9320      	str	r3, [sp, #128]	; 0x80
 8025d8e:	9321      	str	r3, [sp, #132]	; 0x84
 8025d90:	9322      	str	r3, [sp, #136]	; 0x88
 8025d92:	9324      	str	r3, [sp, #144]	; 0x90
 8025d94:	9325      	str	r3, [sp, #148]	; 0x94
 8025d96:	9326      	str	r3, [sp, #152]	; 0x98
 8025d98:	9328      	str	r3, [sp, #160]	; 0xa0
 8025d9a:	9329      	str	r3, [sp, #164]	; 0xa4
 8025d9c:	932a      	str	r3, [sp, #168]	; 0xa8
 8025d9e:	932c      	str	r3, [sp, #176]	; 0xb0
 8025da0:	932d      	str	r3, [sp, #180]	; 0xb4
 8025da2:	932e      	str	r3, [sp, #184]	; 0xb8
 8025da4:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8025da8:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 8025dac:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8025db0:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8025db4:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 8025db8:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 8025dbc:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 8025dc0:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 8025dc4:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 8025dc8:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 8025dcc:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8025dd0:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 8025dd4:	a830      	add	r0, sp, #192	; 0xc0
 8025dd6:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 8025dda:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 8025dde:	f000 fc43 	bl	8026668 <_ZN8touchgfx9Matrix4x4C1Ev>
 8025de2:	eeb1 0a49 	vneg.f32	s0, s18
 8025de6:	a830      	add	r0, sp, #192	; 0xc0
 8025de8:	f000 fd12 	bl	8026810 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8025dec:	eeb1 0a68 	vneg.f32	s0, s17
 8025df0:	f000 fd1c 	bl	802682c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8025df4:	eeb1 0a48 	vneg.f32	s0, s16
 8025df8:	f000 fd27 	bl	802684a <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8025dfc:	a840      	add	r0, sp, #256	; 0x100
 8025dfe:	f000 fc33 	bl	8026668 <_ZN8touchgfx9Matrix4x4C1Ev>
 8025e02:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 8025e06:	a840      	add	r0, sp, #256	; 0x100
 8025e08:	f000 fc86 	bl	8026718 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 8025e0c:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 8025e10:	f000 fcac 	bl	802676c <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 8025e14:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 8025e18:	f000 fcd1 	bl	80267be <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 8025e1c:	a850      	add	r0, sp, #320	; 0x140
 8025e1e:	f000 fc23 	bl	8026668 <_ZN8touchgfx9Matrix4x4C1Ev>
 8025e22:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8025e26:	a850      	add	r0, sp, #320	; 0x140
 8025e28:	f000 fd1e 	bl	8026868 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 8025e2c:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8025e30:	f000 fd26 	bl	8026880 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 8025e34:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8025e38:	f000 fd2f 	bl	802689a <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 8025e3c:	a860      	add	r0, sp, #384	; 0x180
 8025e3e:	f000 fc13 	bl	8026668 <_ZN8touchgfx9Matrix4x4C1Ev>
 8025e42:	eeb0 0a49 	vmov.f32	s0, s18
 8025e46:	a860      	add	r0, sp, #384	; 0x180
 8025e48:	f000 fce2 	bl	8026810 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8025e4c:	eeb0 0a68 	vmov.f32	s0, s17
 8025e50:	f000 fcec 	bl	802682c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8025e54:	eeb0 0a48 	vmov.f32	s0, s16
 8025e58:	f000 fcf7 	bl	802684a <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8025e5c:	aa50      	add	r2, sp, #320	; 0x140
 8025e5e:	a960      	add	r1, sp, #384	; 0x180
 8025e60:	a8b0      	add	r0, sp, #704	; 0x2c0
 8025e62:	f000 fc1b 	bl	802669c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8025e66:	4628      	mov	r0, r5
 8025e68:	aa40      	add	r2, sp, #256	; 0x100
 8025e6a:	a9b0      	add	r1, sp, #704	; 0x2c0
 8025e6c:	f000 fc16 	bl	802669c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8025e70:	4629      	mov	r1, r5
 8025e72:	aa30      	add	r2, sp, #192	; 0xc0
 8025e74:	a870      	add	r0, sp, #448	; 0x1c0
 8025e76:	f000 fc11 	bl	802669c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8025e7a:	a880      	add	r0, sp, #512	; 0x200
 8025e7c:	f000 fbf4 	bl	8026668 <_ZN8touchgfx9Matrix4x4C1Ev>
 8025e80:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8025e84:	a880      	add	r0, sp, #512	; 0x200
 8025e86:	eeb1 0a40 	vneg.f32	s0, s0
 8025e8a:	f000 fcc1 	bl	8026810 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8025e8e:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8025e92:	a880      	add	r0, sp, #512	; 0x200
 8025e94:	eeb1 0a40 	vneg.f32	s0, s0
 8025e98:	f000 fcc8 	bl	802682c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8025e9c:	a890      	add	r0, sp, #576	; 0x240
 8025e9e:	f000 fbe3 	bl	8026668 <_ZN8touchgfx9Matrix4x4C1Ev>
 8025ea2:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 8025ea6:	a890      	add	r0, sp, #576	; 0x240
 8025ea8:	f000 fc26 	bl	80266f8 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 8025eac:	a8a0      	add	r0, sp, #640	; 0x280
 8025eae:	f000 fbdb 	bl	8026668 <_ZN8touchgfx9Matrix4x4C1Ev>
 8025eb2:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8025eb6:	a8a0      	add	r0, sp, #640	; 0x280
 8025eb8:	f000 fcaa 	bl	8026810 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8025ebc:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8025ec0:	f000 fcb4 	bl	802682c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8025ec4:	aa90      	add	r2, sp, #576	; 0x240
 8025ec6:	a9a0      	add	r1, sp, #640	; 0x280
 8025ec8:	a8b0      	add	r0, sp, #704	; 0x2c0
 8025eca:	f000 fbe7 	bl	802669c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8025ece:	4628      	mov	r0, r5
 8025ed0:	aa80      	add	r2, sp, #512	; 0x200
 8025ed2:	a9b0      	add	r1, sp, #704	; 0x2c0
 8025ed4:	f000 fbe2 	bl	802669c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8025ed8:	4629      	mov	r1, r5
 8025eda:	aa70      	add	r2, sp, #448	; 0x1c0
 8025edc:	4668      	mov	r0, sp
 8025ede:	466d      	mov	r5, sp
 8025ee0:	f000 fbdc 	bl	802669c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8025ee4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8025ee6:	ae70      	add	r6, sp, #448	; 0x1c0
 8025ee8:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8025eea:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8025eec:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8025eee:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8025ef0:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8025ef2:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8025ef6:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 8025efa:	2500      	movs	r5, #0
 8025efc:	0129      	lsls	r1, r5, #4
 8025efe:	ab20      	add	r3, sp, #128	; 0x80
 8025f00:	185e      	adds	r6, r3, r1
 8025f02:	ab10      	add	r3, sp, #64	; 0x40
 8025f04:	4419      	add	r1, r3
 8025f06:	a870      	add	r0, sp, #448	; 0x1c0
 8025f08:	f000 fb7e 	bl	8026608 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 8025f0c:	3501      	adds	r5, #1
 8025f0e:	2d04      	cmp	r5, #4
 8025f10:	ed86 0a00 	vstr	s0, [r6]
 8025f14:	edc6 0a01 	vstr	s1, [r6, #4]
 8025f18:	ed86 1a02 	vstr	s2, [r6, #8]
 8025f1c:	edc6 1a03 	vstr	s3, [r6, #12]
 8025f20:	d1ec      	bne.n	8025efc <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 8025f22:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 8025f26:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 8025f2a:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 8025f2e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8025f32:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 8025f36:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8025f3a:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 8025f3e:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 8025f42:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8025f46:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8025f4a:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 8025f4e:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8025f52:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 8025f56:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8025f5a:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 8025f5e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8025f62:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 8025f66:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 8025f6a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8025f6e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8025f72:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 8025f76:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 8025f7a:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 8025f7e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8025f82:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 8025f86:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8025f8a:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 8025f8e:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 8025f92:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8025f96:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8025f9a:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 8025f9e:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 8025fa2:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 8025fa6:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8025faa:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 8025fae:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8025fb2:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 8025fb6:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 8025fba:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8025fbe:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8025fc2:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 8025fc6:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 8025fca:	ecbd 8b04 	vpop	{d8-d9}
 8025fce:	bd70      	pop	{r4, r5, r6, pc}

08025fd0 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 8025fd0:	b510      	push	{r4, lr}
 8025fd2:	4604      	mov	r4, r0
 8025fd4:	f7eb fa0b 	bl	80113ee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8025fd8:	4620      	mov	r0, r4
 8025fda:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8025fde:	f7ff bea1 	b.w	8025d24 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08025fe2 <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 8025fe2:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 8025fe6:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 8025fea:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 8025fee:	f7ff be99 	b.w	8025d24 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08025ff2 <_ZN8touchgfx13TextureMapper8setScaleEf>:
 8025ff2:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 8025ff6:	f7ff be95 	b.w	8025d24 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08025ffa <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 8025ffa:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 8025ffe:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 8026002:	f7ff be8f 	b.w	8025d24 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08026006 <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 8026006:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802600a:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802600e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026012:	bfd8      	it	le
 8026014:	eeb0 0a67 	vmovle.f32	s0, s15
 8026018:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 802601c:	f7ff be82 	b.w	8025d24 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08026020 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 8026020:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 8026024:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 8026028:	f7ff be7c 	b.w	8025d24 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802602c <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 802602c:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8026030:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8026034:	f7ff be76 	b.w	8025d24 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08026038 <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 8026038:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 802603c:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8026040:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 8026044:	f7ff be6e 	b.w	8025d24 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08026048 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 8026048:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802604c:	ed2d 8b04 	vpush	{d8-d9}
 8026050:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 8026054:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 8026058:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 802605c:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 8026060:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8026064:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026068:	bf54      	ite	pl
 802606a:	eeb0 0a69 	vmovpl.f32	s0, s19
 802606e:	eeb0 0a48 	vmovmi.f32	s0, s16
 8026072:	eeb4 9ac0 	vcmpe.f32	s18, s0
 8026076:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802607a:	bfd8      	it	le
 802607c:	eeb0 0a49 	vmovle.f32	s0, s18
 8026080:	eef4 8ac0 	vcmpe.f32	s17, s0
 8026084:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026088:	bfd8      	it	le
 802608a:	eeb0 0a68 	vmovle.f32	s0, s17
 802608e:	460c      	mov	r4, r1
 8026090:	4607      	mov	r7, r0
 8026092:	f000 fd09 	bl	8026aa8 <floorf>
 8026096:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802609a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802609e:	bf58      	it	pl
 80260a0:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 80260a4:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80260a8:	bf56      	itet	pl
 80260aa:	ee10 3a10 	vmovpl	r3, s0
 80260ae:	2600      	movmi	r6, #0
 80260b0:	b21e      	sxthpl	r6, r3
 80260b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80260b6:	bfd8      	it	le
 80260b8:	eeb0 8a69 	vmovle.f32	s16, s19
 80260bc:	eeb4 9ac8 	vcmpe.f32	s18, s16
 80260c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80260c4:	bf58      	it	pl
 80260c6:	eeb0 8a49 	vmovpl.f32	s16, s18
 80260ca:	eef4 8ac8 	vcmpe.f32	s17, s16
 80260ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80260d2:	bf54      	ite	pl
 80260d4:	eeb0 0a68 	vmovpl.f32	s0, s17
 80260d8:	eeb0 0a48 	vmovmi.f32	s0, s16
 80260dc:	f000 fca2 	bl	8026a24 <ceilf>
 80260e0:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 80260e4:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 80260e8:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 80260ec:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 80260f0:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 80260f4:	ee07 8a90 	vmov	s15, r8
 80260f8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80260fc:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8026100:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026104:	bfd8      	it	le
 8026106:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 802610a:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802610e:	bfdc      	itt	le
 8026110:	ee10 3a10 	vmovle	r3, s0
 8026114:	fa0f f883 	sxthle.w	r8, r3
 8026118:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802611c:	bf54      	ite	pl
 802611e:	eeb0 0a69 	vmovpl.f32	s0, s19
 8026122:	eeb0 0a48 	vmovmi.f32	s0, s16
 8026126:	eeb4 9ac0 	vcmpe.f32	s18, s0
 802612a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802612e:	bfd8      	it	le
 8026130:	eeb0 0a49 	vmovle.f32	s0, s18
 8026134:	eef4 8ac0 	vcmpe.f32	s17, s0
 8026138:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802613c:	bfd8      	it	le
 802613e:	eeb0 0a68 	vmovle.f32	s0, s17
 8026142:	f000 fcb1 	bl	8026aa8 <floorf>
 8026146:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802614a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802614e:	bf58      	it	pl
 8026150:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 8026154:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8026158:	bf56      	itet	pl
 802615a:	ee10 3a10 	vmovpl	r3, s0
 802615e:	2500      	movmi	r5, #0
 8026160:	b21d      	sxthpl	r5, r3
 8026162:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026166:	bfd8      	it	le
 8026168:	eeb0 8a69 	vmovle.f32	s16, s19
 802616c:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8026170:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026174:	bf58      	it	pl
 8026176:	eeb0 8a49 	vmovpl.f32	s16, s18
 802617a:	eef4 8ac8 	vcmpe.f32	s17, s16
 802617e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026182:	bf54      	ite	pl
 8026184:	eeb0 0a68 	vmovpl.f32	s0, s17
 8026188:	eeb0 0a48 	vmovmi.f32	s0, s16
 802618c:	f000 fc4a 	bl	8026a24 <ceilf>
 8026190:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8026194:	803e      	strh	r6, [r7, #0]
 8026196:	ee07 3a90 	vmov	s15, r3
 802619a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802619e:	807d      	strh	r5, [r7, #2]
 80261a0:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80261a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80261a8:	bfd8      	it	le
 80261aa:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 80261ae:	eba8 0606 	sub.w	r6, r8, r6
 80261b2:	bfdc      	itt	le
 80261b4:	ee10 3a10 	vmovle	r3, s0
 80261b8:	b21b      	sxthle	r3, r3
 80261ba:	1b5d      	subs	r5, r3, r5
 80261bc:	80be      	strh	r6, [r7, #4]
 80261be:	80fd      	strh	r5, [r7, #6]
 80261c0:	ecbd 8b04 	vpop	{d8-d9}
 80261c4:	4638      	mov	r0, r7
 80261c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080261ca <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 80261ca:	b513      	push	{r0, r1, r4, lr}
 80261cc:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 80261d0:	4604      	mov	r4, r0
 80261d2:	b143      	cbz	r3, 80261e6 <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 80261d4:	4601      	mov	r1, r0
 80261d6:	4668      	mov	r0, sp
 80261d8:	f7ff ff36 	bl	8026048 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 80261dc:	6823      	ldr	r3, [r4, #0]
 80261de:	4669      	mov	r1, sp
 80261e0:	691b      	ldr	r3, [r3, #16]
 80261e2:	4620      	mov	r0, r4
 80261e4:	4798      	blx	r3
 80261e6:	b002      	add	sp, #8
 80261e8:	bd10      	pop	{r4, pc}

080261ea <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 80261ea:	4603      	mov	r3, r0
 80261ec:	3026      	adds	r0, #38	; 0x26
 80261ee:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 80261f2:	b90b      	cbnz	r3, 80261f8 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 80261f4:	f7ef b82c 	b.w	8015250 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 80261f8:	f7ef b83a 	b.w	8015270 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

080261fc <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 80261fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026200:	ed2d 8b04 	vpush	{d8-d9}
 8026204:	4604      	mov	r4, r0
 8026206:	469b      	mov	fp, r3
 8026208:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 802620c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8026210:	f9b1 6000 	ldrsh.w	r6, [r1]
 8026214:	8888      	ldrh	r0, [r1, #4]
 8026216:	b0b3      	sub	sp, #204	; 0xcc
 8026218:	4430      	add	r0, r6
 802621a:	b280      	uxth	r0, r0
 802621c:	9206      	str	r2, [sp, #24]
 802621e:	fa0f fe80 	sxth.w	lr, r0
 8026222:	2200      	movs	r2, #0
 8026224:	4596      	cmp	lr, r2
 8026226:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 802622a:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 802622e:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 8026232:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 8026234:	9211      	str	r2, [sp, #68]	; 0x44
 8026236:	f340 8129 	ble.w	802648c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802623a:	45b4      	cmp	ip, r6
 802623c:	f340 8126 	ble.w	802648c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8026240:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8026244:	88ca      	ldrh	r2, [r1, #6]
 8026246:	442a      	add	r2, r5
 8026248:	b292      	uxth	r2, r2
 802624a:	b211      	sxth	r1, r2
 802624c:	2900      	cmp	r1, #0
 802624e:	f340 811d 	ble.w	802648c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8026252:	42ab      	cmp	r3, r5
 8026254:	f340 811a 	ble.w	802648c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8026258:	45f4      	cmp	ip, lr
 802625a:	bfb8      	it	lt
 802625c:	fa1f f08c 	uxthlt.w	r0, ip
 8026260:	428b      	cmp	r3, r1
 8026262:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8026266:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802626a:	bfb8      	it	lt
 802626c:	b29a      	uxthlt	r2, r3
 802626e:	1b80      	subs	r0, r0, r6
 8026270:	1b52      	subs	r2, r2, r5
 8026272:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 8026276:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 802627a:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 802627e:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 8026282:	ab11      	add	r3, sp, #68	; 0x44
 8026284:	e893 0003 	ldmia.w	r3, {r0, r1}
 8026288:	6822      	ldr	r2, [r4, #0]
 802628a:	9307      	str	r3, [sp, #28]
 802628c:	ad13      	add	r5, sp, #76	; 0x4c
 802628e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8026290:	e885 0003 	stmia.w	r5, {r0, r1}
 8026294:	4629      	mov	r1, r5
 8026296:	4620      	mov	r0, r4
 8026298:	4790      	blx	r2
 802629a:	4621      	mov	r1, r4
 802629c:	a815      	add	r0, sp, #84	; 0x54
 802629e:	f7ee ff33 	bl	8015108 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80262a2:	a815      	add	r0, sp, #84	; 0x54
 80262a4:	f7ed fbf8 	bl	8013a98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80262a8:	9b07      	ldr	r3, [sp, #28]
 80262aa:	1d26      	adds	r6, r4, #4
 80262ac:	4618      	mov	r0, r3
 80262ae:	4631      	mov	r1, r6
 80262b0:	f7ed fc36 	bl	8013b20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80262b4:	4628      	mov	r0, r5
 80262b6:	f104 0526 	add.w	r5, r4, #38	; 0x26
 80262ba:	f7ed fbed 	bl	8013a98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80262be:	4628      	mov	r0, r5
 80262c0:	f7f1 f8a8 	bl	8017414 <_ZNK8touchgfx6Bitmap7getDataEv>
 80262c4:	9007      	str	r0, [sp, #28]
 80262c6:	2800      	cmp	r0, #0
 80262c8:	f000 80db 	beq.w	8026482 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 80262cc:	f8db 2000 	ldr.w	r2, [fp]
 80262d0:	9209      	str	r2, [sp, #36]	; 0x24
 80262d2:	f8db 2004 	ldr.w	r2, [fp, #4]
 80262d6:	920a      	str	r2, [sp, #40]	; 0x28
 80262d8:	f8db 2008 	ldr.w	r2, [fp, #8]
 80262dc:	920b      	str	r2, [sp, #44]	; 0x2c
 80262de:	f8db 200c 	ldr.w	r2, [fp, #12]
 80262e2:	920c      	str	r2, [sp, #48]	; 0x30
 80262e4:	f8da 2000 	ldr.w	r2, [sl]
 80262e8:	920d      	str	r2, [sp, #52]	; 0x34
 80262ea:	f8da 2004 	ldr.w	r2, [sl, #4]
 80262ee:	920e      	str	r2, [sp, #56]	; 0x38
 80262f0:	f8da 2008 	ldr.w	r2, [sl, #8]
 80262f4:	920f      	str	r2, [sp, #60]	; 0x3c
 80262f6:	f8da 200c 	ldr.w	r2, [sl, #12]
 80262fa:	9210      	str	r2, [sp, #64]	; 0x40
 80262fc:	a90d      	add	r1, sp, #52	; 0x34
 80262fe:	4632      	mov	r2, r6
 8026300:	a809      	add	r0, sp, #36	; 0x24
 8026302:	f7ed fbf1 	bl	8013ae8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8026306:	4632      	mov	r2, r6
 8026308:	a90e      	add	r1, sp, #56	; 0x38
 802630a:	a80a      	add	r0, sp, #40	; 0x28
 802630c:	f7ed fbec 	bl	8013ae8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8026310:	4632      	mov	r2, r6
 8026312:	a90f      	add	r1, sp, #60	; 0x3c
 8026314:	a80b      	add	r0, sp, #44	; 0x2c
 8026316:	f7ed fbe7 	bl	8013ae8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802631a:	4632      	mov	r2, r6
 802631c:	a910      	add	r1, sp, #64	; 0x40
 802631e:	a80c      	add	r0, sp, #48	; 0x30
 8026320:	f7ed fbe2 	bl	8013ae8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8026324:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 8026328:	edd7 4a00 	vldr	s9, [r7]
 802632c:	edd7 5a01 	vldr	s11, [r7, #4]
 8026330:	ed98 4a00 	vldr	s8, [r8]
 8026334:	ed98 5a01 	vldr	s10, [r8, #4]
 8026338:	ed99 9a00 	vldr	s18, [r9]
 802633c:	ed99 8a01 	vldr	s16, [r9, #4]
 8026340:	edd9 8a02 	vldr	s17, [r9, #8]
 8026344:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 8026348:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 802634c:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 8026350:	eef0 6a67 	vmov.f32	s13, s15
 8026354:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 8026358:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 802635c:	eeb0 7a67 	vmov.f32	s14, s15
 8026360:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 8026364:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 8026368:	eeb0 6a67 	vmov.f32	s12, s15
 802636c:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8026370:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 8026374:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 8026378:	ee16 6a10 	vmov	r6, s12
 802637c:	eeb0 6a67 	vmov.f32	s12, s15
 8026380:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8026384:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 8026388:	f8d7 a008 	ldr.w	sl, [r7, #8]
 802638c:	f8d8 b008 	ldr.w	fp, [r8, #8]
 8026390:	68ff      	ldr	r7, [r7, #12]
 8026392:	9624      	str	r6, [sp, #144]	; 0x90
 8026394:	ee16 0a10 	vmov	r0, s12
 8026398:	eeb0 6a67 	vmov.f32	s12, s15
 802639c:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80263a0:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 80263a4:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 80263a8:	ee16 1a10 	vmov	r1, s12
 80263ac:	eeb0 6a67 	vmov.f32	s12, s15
 80263b0:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80263b4:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 80263b8:	ee16 2a10 	vmov	r2, s12
 80263bc:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 80263c0:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 80263c4:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 80263c8:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 80263cc:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80263d0:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 80263d4:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 80263d8:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 80263dc:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 80263e0:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 80263e4:	922d      	str	r2, [sp, #180]	; 0xb4
 80263e6:	4a2b      	ldr	r2, [pc, #172]	; (8026494 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 80263e8:	9b06      	ldr	r3, [sp, #24]
 80263ea:	8812      	ldrh	r2, [r2, #0]
 80263ec:	9317      	str	r3, [sp, #92]	; 0x5c
 80263ee:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 80263f2:	9b07      	ldr	r3, [sp, #28]
 80263f4:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 80263f8:	4628      	mov	r0, r5
 80263fa:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 80263fe:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 8026402:	9218      	str	r2, [sp, #96]	; 0x60
 8026404:	9319      	str	r3, [sp, #100]	; 0x64
 8026406:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 802640a:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 802640e:	9731      	str	r7, [sp, #196]	; 0xc4
 8026410:	f7f1 f830 	bl	8017474 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8026414:	901a      	str	r0, [sp, #104]	; 0x68
 8026416:	4628      	mov	r0, r5
 8026418:	f7f0 ff10 	bl	801723c <_ZNK8touchgfx6Bitmap8getWidthEv>
 802641c:	901b      	str	r0, [sp, #108]	; 0x6c
 802641e:	4628      	mov	r0, r5
 8026420:	f7f0 ff40 	bl	80172a4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8026424:	901c      	str	r0, [sp, #112]	; 0x70
 8026426:	4628      	mov	r0, r5
 8026428:	f7f0 ff08 	bl	801723c <_ZNK8touchgfx6Bitmap8getWidthEv>
 802642c:	eeb4 9a48 	vcmp.f32	s18, s16
 8026430:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026434:	901d      	str	r0, [sp, #116]	; 0x74
 8026436:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 802643a:	d107      	bne.n	802644c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 802643c:	eeb4 8a68 	vcmp.f32	s16, s17
 8026440:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026444:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8026448:	bf08      	it	eq
 802644a:	461e      	moveq	r6, r3
 802644c:	4b12      	ldr	r3, [pc, #72]	; (8026498 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 802644e:	681b      	ldr	r3, [r3, #0]
 8026450:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8026454:	b10a      	cbz	r2, 802645a <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 8026456:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 8026458:	b905      	cbnz	r5, 802645c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 802645a:	689d      	ldr	r5, [r3, #8]
 802645c:	682b      	ldr	r3, [r5, #0]
 802645e:	4620      	mov	r0, r4
 8026460:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 8026462:	f7ff fec2 	bl	80261ea <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 8026466:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 802646a:	9604      	str	r6, [sp, #16]
 802646c:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8026470:	ab13      	add	r3, sp, #76	; 0x4c
 8026472:	9301      	str	r3, [sp, #4]
 8026474:	ab15      	add	r3, sp, #84	; 0x54
 8026476:	9300      	str	r3, [sp, #0]
 8026478:	aa1e      	add	r2, sp, #120	; 0x78
 802647a:	ab19      	add	r3, sp, #100	; 0x64
 802647c:	a917      	add	r1, sp, #92	; 0x5c
 802647e:	4628      	mov	r0, r5
 8026480:	47b8      	blx	r7
 8026482:	b033      	add	sp, #204	; 0xcc
 8026484:	ecbd 8b04 	vpop	{d8-d9}
 8026488:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802648c:	2300      	movs	r3, #0
 802648e:	9312      	str	r3, [sp, #72]	; 0x48
 8026490:	e6f7      	b.n	8026282 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 8026492:	bf00      	nop
 8026494:	200137b6 	.word	0x200137b6
 8026498:	200137bc 	.word	0x200137bc

0802649c <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 802649c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80264a0:	ed2d 8b02 	vpush	{d8}
 80264a4:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 80264a8:	b098      	sub	sp, #96	; 0x60
 80264aa:	4604      	mov	r4, r0
 80264ac:	4688      	mov	r8, r1
 80264ae:	2b00      	cmp	r3, #0
 80264b0:	d077      	beq.n	80265a2 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 80264b2:	f100 0526 	add.w	r5, r0, #38	; 0x26
 80264b6:	4628      	mov	r0, r5
 80264b8:	f7f0 fec0 	bl	801723c <_ZNK8touchgfx6Bitmap8getWidthEv>
 80264bc:	ee07 0a90 	vmov	s15, r0
 80264c0:	4628      	mov	r0, r5
 80264c2:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 80264c6:	f7f0 feed 	bl	80172a4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80264ca:	4b4e      	ldr	r3, [pc, #312]	; (8026604 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 80264cc:	781b      	ldrb	r3, [r3, #0]
 80264ce:	ee07 0a90 	vmov	s15, r0
 80264d2:	2b01      	cmp	r3, #1
 80264d4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80264d8:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 80264dc:	d066      	beq.n	80265ac <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 80264de:	eeb0 6a47 	vmov.f32	s12, s14
 80264e2:	ee17 3a10 	vmov	r3, s14
 80264e6:	eeb0 4a48 	vmov.f32	s8, s16
 80264ea:	eeb0 7a48 	vmov.f32	s14, s16
 80264ee:	eef0 4a67 	vmov.f32	s9, s15
 80264f2:	eeb0 8a67 	vmov.f32	s16, s15
 80264f6:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 80264fa:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 80264fe:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 8026502:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 8026506:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 802650a:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 802650e:	6f25      	ldr	r5, [r4, #112]	; 0x70
 8026510:	6e66      	ldr	r6, [r4, #100]	; 0x64
 8026512:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 8026514:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 8026518:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 802651c:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8026520:	ee73 1a65 	vsub.f32	s3, s6, s11
 8026524:	ee72 6ac5 	vsub.f32	s13, s5, s10
 8026528:	ee32 1a45 	vsub.f32	s2, s4, s10
 802652c:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 8026530:	ee73 1ae5 	vsub.f32	s3, s7, s11
 8026534:	eee1 6a21 	vfma.f32	s13, s2, s3
 8026538:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 802653c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026540:	dd3d      	ble.n	80265be <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 8026542:	ed8d 5a04 	vstr	s10, [sp, #16]
 8026546:	ed8d 2a05 	vstr	s4, [sp, #20]
 802654a:	edcd 2a06 	vstr	s5, [sp, #24]
 802654e:	f8cd c01c 	str.w	ip, [sp, #28]
 8026552:	edcd 5a08 	vstr	s11, [sp, #32]
 8026556:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 802655a:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 802655e:	970b      	str	r7, [sp, #44]	; 0x2c
 8026560:	960c      	str	r6, [sp, #48]	; 0x30
 8026562:	950d      	str	r5, [sp, #52]	; 0x34
 8026564:	920e      	str	r2, [sp, #56]	; 0x38
 8026566:	900f      	str	r0, [sp, #60]	; 0x3c
 8026568:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 802656c:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 8026570:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 8026574:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 8026578:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 802657c:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 8026580:	9316      	str	r3, [sp, #88]	; 0x58
 8026582:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 8026586:	ab14      	add	r3, sp, #80	; 0x50
 8026588:	9303      	str	r3, [sp, #12]
 802658a:	ab10      	add	r3, sp, #64	; 0x40
 802658c:	9302      	str	r3, [sp, #8]
 802658e:	ab0c      	add	r3, sp, #48	; 0x30
 8026590:	9301      	str	r3, [sp, #4]
 8026592:	ab08      	add	r3, sp, #32
 8026594:	9300      	str	r3, [sp, #0]
 8026596:	2200      	movs	r2, #0
 8026598:	ab04      	add	r3, sp, #16
 802659a:	4641      	mov	r1, r8
 802659c:	4620      	mov	r0, r4
 802659e:	f7ff fe2d 	bl	80261fc <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 80265a2:	b018      	add	sp, #96	; 0x60
 80265a4:	ecbd 8b02 	vpop	{d8}
 80265a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80265ac:	eeb0 6a48 	vmov.f32	s12, s16
 80265b0:	eef0 4a47 	vmov.f32	s9, s14
 80265b4:	ee17 3a90 	vmov	r3, s15
 80265b8:	eeb0 4a67 	vmov.f32	s8, s15
 80265bc:	e79b      	b.n	80264f6 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 80265be:	ed8d 5a05 	vstr	s10, [sp, #20]
 80265c2:	ed8d 2a04 	vstr	s4, [sp, #16]
 80265c6:	f8cd c018 	str.w	ip, [sp, #24]
 80265ca:	edcd 2a07 	vstr	s5, [sp, #28]
 80265ce:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 80265d2:	ed8d 3a08 	vstr	s6, [sp, #32]
 80265d6:	970a      	str	r7, [sp, #40]	; 0x28
 80265d8:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 80265dc:	960d      	str	r6, [sp, #52]	; 0x34
 80265de:	950c      	str	r5, [sp, #48]	; 0x30
 80265e0:	900e      	str	r0, [sp, #56]	; 0x38
 80265e2:	920f      	str	r2, [sp, #60]	; 0x3c
 80265e4:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 80265e8:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 80265ec:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 80265f0:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 80265f4:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 80265f8:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 80265fc:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 8026600:	9317      	str	r3, [sp, #92]	; 0x5c
 8026602:	e7c0      	b.n	8026586 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 8026604:	200137b4 	.word	0x200137b4

08026608 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 8026608:	b5f0      	push	{r4, r5, r6, r7, lr}
 802660a:	b08d      	sub	sp, #52	; 0x34
 802660c:	2300      	movs	r3, #0
 802660e:	9304      	str	r3, [sp, #16]
 8026610:	9305      	str	r3, [sp, #20]
 8026612:	9306      	str	r3, [sp, #24]
 8026614:	aa04      	add	r2, sp, #16
 8026616:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 802661a:	9307      	str	r3, [sp, #28]
 802661c:	f100 0640 	add.w	r6, r0, #64	; 0x40
 8026620:	4613      	mov	r3, r2
 8026622:	f101 0710 	add.w	r7, r1, #16
 8026626:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8026664 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 802662a:	460c      	mov	r4, r1
 802662c:	4605      	mov	r5, r0
 802662e:	ecb4 7a01 	vldmia	r4!, {s14}
 8026632:	ecf5 6a01 	vldmia	r5!, {s13}
 8026636:	42bc      	cmp	r4, r7
 8026638:	eee6 7a87 	vfma.f32	s15, s13, s14
 802663c:	d1f7      	bne.n	802662e <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 802663e:	3010      	adds	r0, #16
 8026640:	42b0      	cmp	r0, r6
 8026642:	ece2 7a01 	vstmia	r2!, {s15}
 8026646:	d1ee      	bne.n	8026626 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 8026648:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 802664a:	ac0c      	add	r4, sp, #48	; 0x30
 802664c:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8026650:	ed9d 0a08 	vldr	s0, [sp, #32]
 8026654:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 8026658:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 802665c:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 8026660:	b00d      	add	sp, #52	; 0x34
 8026662:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8026664:	00000000 	.word	0x00000000

08026668 <_ZN8touchgfx9Matrix4x4C1Ev>:
 8026668:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 8026698 <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 802666c:	2300      	movs	r3, #0
 802666e:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8026672:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 8026676:	2200      	movs	r2, #0
 8026678:	4293      	cmp	r3, r2
 802667a:	f102 0201 	add.w	r2, r2, #1
 802667e:	bf14      	ite	ne
 8026680:	eef0 6a47 	vmovne.f32	s13, s14
 8026684:	eef0 6a67 	vmoveq.f32	s13, s15
 8026688:	2a04      	cmp	r2, #4
 802668a:	ece1 6a01 	vstmia	r1!, {s13}
 802668e:	d1f3      	bne.n	8026678 <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 8026690:	3301      	adds	r3, #1
 8026692:	2b04      	cmp	r3, #4
 8026694:	d1ed      	bne.n	8026672 <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 8026696:	4770      	bx	lr
 8026698:	00000000 	.word	0x00000000

0802669c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 802669c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80266a0:	460c      	mov	r4, r1
 80266a2:	4605      	mov	r5, r0
 80266a4:	4690      	mov	r8, r2
 80266a6:	f7ff ffdf 	bl	8026668 <_ZN8touchgfx9Matrix4x4C1Ev>
 80266aa:	4628      	mov	r0, r5
 80266ac:	4621      	mov	r1, r4
 80266ae:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 80266b2:	2300      	movs	r3, #0
 80266b4:	eddf 7a0f 	vldr	s15, [pc, #60]	; 80266f4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 80266b8:	eb08 0603 	add.w	r6, r8, r3
 80266bc:	460f      	mov	r7, r1
 80266be:	2400      	movs	r4, #0
 80266c0:	4632      	mov	r2, r6
 80266c2:	ecf7 6a01 	vldmia	r7!, {s13}
 80266c6:	ed92 7a00 	vldr	s14, [r2]
 80266ca:	3401      	adds	r4, #1
 80266cc:	2c04      	cmp	r4, #4
 80266ce:	f106 0610 	add.w	r6, r6, #16
 80266d2:	eee6 7a87 	vfma.f32	s15, s13, s14
 80266d6:	d1f3      	bne.n	80266c0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 80266d8:	18c2      	adds	r2, r0, r3
 80266da:	3304      	adds	r3, #4
 80266dc:	2b10      	cmp	r3, #16
 80266de:	edc2 7a00 	vstr	s15, [r2]
 80266e2:	d1e7      	bne.n	80266b4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 80266e4:	3110      	adds	r1, #16
 80266e6:	4561      	cmp	r1, ip
 80266e8:	f100 0010 	add.w	r0, r0, #16
 80266ec:	d1e1      	bne.n	80266b2 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 80266ee:	4628      	mov	r0, r5
 80266f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80266f4:	00000000 	.word	0x00000000

080266f8 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 80266f8:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80266fc:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8026700:	f100 0320 	add.w	r3, r0, #32
 8026704:	3030      	adds	r0, #48	; 0x30
 8026706:	ecf3 7a01 	vldmia	r3!, {s15}
 802670a:	ee60 7a27 	vmul.f32	s15, s0, s15
 802670e:	4283      	cmp	r3, r0
 8026710:	edc3 7a03 	vstr	s15, [r3, #12]
 8026714:	d1f7      	bne.n	8026706 <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 8026716:	4770      	bx	lr

08026718 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 8026718:	b510      	push	{r4, lr}
 802671a:	ed2d 8b02 	vpush	{d8}
 802671e:	4604      	mov	r4, r0
 8026720:	eef0 8a40 	vmov.f32	s17, s0
 8026724:	f000 f938 	bl	8026998 <sinf>
 8026728:	eeb0 8a40 	vmov.f32	s16, s0
 802672c:	eeb0 0a68 	vmov.f32	s0, s17
 8026730:	f000 f8ee 	bl	8026910 <cosf>
 8026734:	f104 0310 	add.w	r3, r4, #16
 8026738:	f104 0220 	add.w	r2, r4, #32
 802673c:	eeb1 6a48 	vneg.f32	s12, s16
 8026740:	edd3 7a04 	vldr	s15, [r3, #16]
 8026744:	edd3 6a00 	vldr	s13, [r3]
 8026748:	ee26 7a27 	vmul.f32	s14, s12, s15
 802674c:	ee67 7a80 	vmul.f32	s15, s15, s0
 8026750:	eea6 7a80 	vfma.f32	s14, s13, s0
 8026754:	eee6 7a88 	vfma.f32	s15, s13, s16
 8026758:	eca3 7a01 	vstmia	r3!, {s14}
 802675c:	429a      	cmp	r2, r3
 802675e:	edc3 7a03 	vstr	s15, [r3, #12]
 8026762:	d1ed      	bne.n	8026740 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 8026764:	ecbd 8b02 	vpop	{d8}
 8026768:	4620      	mov	r0, r4
 802676a:	bd10      	pop	{r4, pc}

0802676c <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 802676c:	b510      	push	{r4, lr}
 802676e:	ed2d 8b02 	vpush	{d8}
 8026772:	4604      	mov	r4, r0
 8026774:	eef0 8a40 	vmov.f32	s17, s0
 8026778:	f000 f90e 	bl	8026998 <sinf>
 802677c:	eeb0 8a40 	vmov.f32	s16, s0
 8026780:	eeb0 0a68 	vmov.f32	s0, s17
 8026784:	f000 f8c4 	bl	8026910 <cosf>
 8026788:	4623      	mov	r3, r4
 802678a:	f104 0210 	add.w	r2, r4, #16
 802678e:	eeb1 6a48 	vneg.f32	s12, s16
 8026792:	edd3 7a08 	vldr	s15, [r3, #32]
 8026796:	edd3 6a00 	vldr	s13, [r3]
 802679a:	ee27 7a88 	vmul.f32	s14, s15, s16
 802679e:	ee67 7a80 	vmul.f32	s15, s15, s0
 80267a2:	eea6 7a80 	vfma.f32	s14, s13, s0
 80267a6:	eee6 7a26 	vfma.f32	s15, s12, s13
 80267aa:	eca3 7a01 	vstmia	r3!, {s14}
 80267ae:	429a      	cmp	r2, r3
 80267b0:	edc3 7a07 	vstr	s15, [r3, #28]
 80267b4:	d1ed      	bne.n	8026792 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 80267b6:	ecbd 8b02 	vpop	{d8}
 80267ba:	4620      	mov	r0, r4
 80267bc:	bd10      	pop	{r4, pc}

080267be <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 80267be:	b510      	push	{r4, lr}
 80267c0:	ed2d 8b02 	vpush	{d8}
 80267c4:	4604      	mov	r4, r0
 80267c6:	eef0 8a40 	vmov.f32	s17, s0
 80267ca:	f000 f8e5 	bl	8026998 <sinf>
 80267ce:	eeb0 8a40 	vmov.f32	s16, s0
 80267d2:	eeb0 0a68 	vmov.f32	s0, s17
 80267d6:	f000 f89b 	bl	8026910 <cosf>
 80267da:	4623      	mov	r3, r4
 80267dc:	f104 0210 	add.w	r2, r4, #16
 80267e0:	eeb1 6a48 	vneg.f32	s12, s16
 80267e4:	edd3 7a04 	vldr	s15, [r3, #16]
 80267e8:	edd3 6a00 	vldr	s13, [r3]
 80267ec:	ee26 7a27 	vmul.f32	s14, s12, s15
 80267f0:	ee67 7a80 	vmul.f32	s15, s15, s0
 80267f4:	eea6 7a80 	vfma.f32	s14, s13, s0
 80267f8:	eee6 7a88 	vfma.f32	s15, s13, s16
 80267fc:	eca3 7a01 	vstmia	r3!, {s14}
 8026800:	429a      	cmp	r2, r3
 8026802:	edc3 7a03 	vstr	s15, [r3, #12]
 8026806:	d1ed      	bne.n	80267e4 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 8026808:	ecbd 8b02 	vpop	{d8}
 802680c:	4620      	mov	r0, r4
 802680e:	bd10      	pop	{r4, pc}

08026810 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 8026810:	4603      	mov	r3, r0
 8026812:	f100 0210 	add.w	r2, r0, #16
 8026816:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 802681a:	edd3 7a00 	vldr	s15, [r3]
 802681e:	eee7 7a00 	vfma.f32	s15, s14, s0
 8026822:	ece3 7a01 	vstmia	r3!, {s15}
 8026826:	4293      	cmp	r3, r2
 8026828:	d1f5      	bne.n	8026816 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 802682a:	4770      	bx	lr

0802682c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 802682c:	f100 0310 	add.w	r3, r0, #16
 8026830:	f100 0220 	add.w	r2, r0, #32
 8026834:	ed93 7a08 	vldr	s14, [r3, #32]
 8026838:	edd3 7a00 	vldr	s15, [r3]
 802683c:	eee7 7a00 	vfma.f32	s15, s14, s0
 8026840:	ece3 7a01 	vstmia	r3!, {s15}
 8026844:	4293      	cmp	r3, r2
 8026846:	d1f5      	bne.n	8026834 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 8026848:	4770      	bx	lr

0802684a <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 802684a:	f100 0320 	add.w	r3, r0, #32
 802684e:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8026852:	ed93 7a04 	vldr	s14, [r3, #16]
 8026856:	edd3 7a00 	vldr	s15, [r3]
 802685a:	eee7 7a00 	vfma.f32	s15, s14, s0
 802685e:	ece3 7a01 	vstmia	r3!, {s15}
 8026862:	4293      	cmp	r3, r2
 8026864:	d1f5      	bne.n	8026852 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 8026866:	4770      	bx	lr

08026868 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 8026868:	4603      	mov	r3, r0
 802686a:	f100 0210 	add.w	r2, r0, #16
 802686e:	edd3 7a00 	vldr	s15, [r3]
 8026872:	ee67 7a80 	vmul.f32	s15, s15, s0
 8026876:	ece3 7a01 	vstmia	r3!, {s15}
 802687a:	4293      	cmp	r3, r2
 802687c:	d1f7      	bne.n	802686e <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 802687e:	4770      	bx	lr

08026880 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 8026880:	f100 0310 	add.w	r3, r0, #16
 8026884:	f100 0220 	add.w	r2, r0, #32
 8026888:	edd3 7a00 	vldr	s15, [r3]
 802688c:	ee67 7a80 	vmul.f32	s15, s15, s0
 8026890:	ece3 7a01 	vstmia	r3!, {s15}
 8026894:	4293      	cmp	r3, r2
 8026896:	d1f7      	bne.n	8026888 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 8026898:	4770      	bx	lr

0802689a <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 802689a:	f100 0320 	add.w	r3, r0, #32
 802689e:	f100 0230 	add.w	r2, r0, #48	; 0x30
 80268a2:	edd3 7a00 	vldr	s15, [r3]
 80268a6:	ee67 7a80 	vmul.f32	s15, s15, s0
 80268aa:	ece3 7a01 	vstmia	r3!, {s15}
 80268ae:	4293      	cmp	r3, r2
 80268b0:	d1f7      	bne.n	80268a2 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 80268b2:	4770      	bx	lr

080268b4 <__aeabi_atexit>:
 80268b4:	460b      	mov	r3, r1
 80268b6:	4601      	mov	r1, r0
 80268b8:	4618      	mov	r0, r3
 80268ba:	f000 bed1 	b.w	8027660 <__cxa_atexit>

080268be <_ZdlPvj>:
 80268be:	f000 b812 	b.w	80268e6 <_ZdlPv>

080268c2 <__cxa_guard_acquire>:
 80268c2:	6803      	ldr	r3, [r0, #0]
 80268c4:	07db      	lsls	r3, r3, #31
 80268c6:	d406      	bmi.n	80268d6 <__cxa_guard_acquire+0x14>
 80268c8:	7843      	ldrb	r3, [r0, #1]
 80268ca:	b103      	cbz	r3, 80268ce <__cxa_guard_acquire+0xc>
 80268cc:	deff      	udf	#255	; 0xff
 80268ce:	2301      	movs	r3, #1
 80268d0:	7043      	strb	r3, [r0, #1]
 80268d2:	4618      	mov	r0, r3
 80268d4:	4770      	bx	lr
 80268d6:	2000      	movs	r0, #0
 80268d8:	4770      	bx	lr

080268da <__cxa_guard_release>:
 80268da:	2301      	movs	r3, #1
 80268dc:	6003      	str	r3, [r0, #0]
 80268de:	4770      	bx	lr

080268e0 <__cxa_pure_virtual>:
 80268e0:	b508      	push	{r3, lr}
 80268e2:	f000 f80f 	bl	8026904 <_ZSt9terminatev>

080268e6 <_ZdlPv>:
 80268e6:	f000 be07 	b.w	80274f8 <free>

080268ea <_ZN10__cxxabiv111__terminateEPFvvE>:
 80268ea:	b508      	push	{r3, lr}
 80268ec:	4780      	blx	r0
 80268ee:	f000 fdcf 	bl	8027490 <abort>
	...

080268f4 <_ZSt13get_terminatev>:
 80268f4:	4b02      	ldr	r3, [pc, #8]	; (8026900 <_ZSt13get_terminatev+0xc>)
 80268f6:	6818      	ldr	r0, [r3, #0]
 80268f8:	f3bf 8f5b 	dmb	ish
 80268fc:	4770      	bx	lr
 80268fe:	bf00      	nop
 8026900:	20000104 	.word	0x20000104

08026904 <_ZSt9terminatev>:
 8026904:	b508      	push	{r3, lr}
 8026906:	f7ff fff5 	bl	80268f4 <_ZSt13get_terminatev>
 802690a:	f7ff ffee 	bl	80268ea <_ZN10__cxxabiv111__terminateEPFvvE>
	...

08026910 <cosf>:
 8026910:	ee10 3a10 	vmov	r3, s0
 8026914:	b507      	push	{r0, r1, r2, lr}
 8026916:	4a1e      	ldr	r2, [pc, #120]	; (8026990 <cosf+0x80>)
 8026918:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802691c:	4293      	cmp	r3, r2
 802691e:	dc06      	bgt.n	802692e <cosf+0x1e>
 8026920:	eddf 0a1c 	vldr	s1, [pc, #112]	; 8026994 <cosf+0x84>
 8026924:	b003      	add	sp, #12
 8026926:	f85d eb04 	ldr.w	lr, [sp], #4
 802692a:	f000 b8ff 	b.w	8026b2c <__kernel_cosf>
 802692e:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8026932:	db04      	blt.n	802693e <cosf+0x2e>
 8026934:	ee30 0a40 	vsub.f32	s0, s0, s0
 8026938:	b003      	add	sp, #12
 802693a:	f85d fb04 	ldr.w	pc, [sp], #4
 802693e:	4668      	mov	r0, sp
 8026940:	f000 f99a 	bl	8026c78 <__ieee754_rem_pio2f>
 8026944:	f000 0003 	and.w	r0, r0, #3
 8026948:	2801      	cmp	r0, #1
 802694a:	d009      	beq.n	8026960 <cosf+0x50>
 802694c:	2802      	cmp	r0, #2
 802694e:	d010      	beq.n	8026972 <cosf+0x62>
 8026950:	b9b0      	cbnz	r0, 8026980 <cosf+0x70>
 8026952:	eddd 0a01 	vldr	s1, [sp, #4]
 8026956:	ed9d 0a00 	vldr	s0, [sp]
 802695a:	f000 f8e7 	bl	8026b2c <__kernel_cosf>
 802695e:	e7eb      	b.n	8026938 <cosf+0x28>
 8026960:	eddd 0a01 	vldr	s1, [sp, #4]
 8026964:	ed9d 0a00 	vldr	s0, [sp]
 8026968:	f000 f93e 	bl	8026be8 <__kernel_sinf>
 802696c:	eeb1 0a40 	vneg.f32	s0, s0
 8026970:	e7e2      	b.n	8026938 <cosf+0x28>
 8026972:	eddd 0a01 	vldr	s1, [sp, #4]
 8026976:	ed9d 0a00 	vldr	s0, [sp]
 802697a:	f000 f8d7 	bl	8026b2c <__kernel_cosf>
 802697e:	e7f5      	b.n	802696c <cosf+0x5c>
 8026980:	eddd 0a01 	vldr	s1, [sp, #4]
 8026984:	ed9d 0a00 	vldr	s0, [sp]
 8026988:	2001      	movs	r0, #1
 802698a:	f000 f92d 	bl	8026be8 <__kernel_sinf>
 802698e:	e7d3      	b.n	8026938 <cosf+0x28>
 8026990:	3f490fd8 	.word	0x3f490fd8
 8026994:	00000000 	.word	0x00000000

08026998 <sinf>:
 8026998:	ee10 3a10 	vmov	r3, s0
 802699c:	b507      	push	{r0, r1, r2, lr}
 802699e:	4a1f      	ldr	r2, [pc, #124]	; (8026a1c <sinf+0x84>)
 80269a0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80269a4:	4293      	cmp	r3, r2
 80269a6:	dc07      	bgt.n	80269b8 <sinf+0x20>
 80269a8:	eddf 0a1d 	vldr	s1, [pc, #116]	; 8026a20 <sinf+0x88>
 80269ac:	2000      	movs	r0, #0
 80269ae:	b003      	add	sp, #12
 80269b0:	f85d eb04 	ldr.w	lr, [sp], #4
 80269b4:	f000 b918 	b.w	8026be8 <__kernel_sinf>
 80269b8:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 80269bc:	db04      	blt.n	80269c8 <sinf+0x30>
 80269be:	ee30 0a40 	vsub.f32	s0, s0, s0
 80269c2:	b003      	add	sp, #12
 80269c4:	f85d fb04 	ldr.w	pc, [sp], #4
 80269c8:	4668      	mov	r0, sp
 80269ca:	f000 f955 	bl	8026c78 <__ieee754_rem_pio2f>
 80269ce:	f000 0003 	and.w	r0, r0, #3
 80269d2:	2801      	cmp	r0, #1
 80269d4:	d00a      	beq.n	80269ec <sinf+0x54>
 80269d6:	2802      	cmp	r0, #2
 80269d8:	d00f      	beq.n	80269fa <sinf+0x62>
 80269da:	b9c0      	cbnz	r0, 8026a0e <sinf+0x76>
 80269dc:	eddd 0a01 	vldr	s1, [sp, #4]
 80269e0:	ed9d 0a00 	vldr	s0, [sp]
 80269e4:	2001      	movs	r0, #1
 80269e6:	f000 f8ff 	bl	8026be8 <__kernel_sinf>
 80269ea:	e7ea      	b.n	80269c2 <sinf+0x2a>
 80269ec:	eddd 0a01 	vldr	s1, [sp, #4]
 80269f0:	ed9d 0a00 	vldr	s0, [sp]
 80269f4:	f000 f89a 	bl	8026b2c <__kernel_cosf>
 80269f8:	e7e3      	b.n	80269c2 <sinf+0x2a>
 80269fa:	eddd 0a01 	vldr	s1, [sp, #4]
 80269fe:	ed9d 0a00 	vldr	s0, [sp]
 8026a02:	2001      	movs	r0, #1
 8026a04:	f000 f8f0 	bl	8026be8 <__kernel_sinf>
 8026a08:	eeb1 0a40 	vneg.f32	s0, s0
 8026a0c:	e7d9      	b.n	80269c2 <sinf+0x2a>
 8026a0e:	eddd 0a01 	vldr	s1, [sp, #4]
 8026a12:	ed9d 0a00 	vldr	s0, [sp]
 8026a16:	f000 f889 	bl	8026b2c <__kernel_cosf>
 8026a1a:	e7f5      	b.n	8026a08 <sinf+0x70>
 8026a1c:	3f490fd8 	.word	0x3f490fd8
 8026a20:	00000000 	.word	0x00000000

08026a24 <ceilf>:
 8026a24:	ee10 3a10 	vmov	r3, s0
 8026a28:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8026a2c:	3a7f      	subs	r2, #127	; 0x7f
 8026a2e:	2a16      	cmp	r2, #22
 8026a30:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8026a34:	dc2a      	bgt.n	8026a8c <ceilf+0x68>
 8026a36:	2a00      	cmp	r2, #0
 8026a38:	da11      	bge.n	8026a5e <ceilf+0x3a>
 8026a3a:	eddf 7a19 	vldr	s15, [pc, #100]	; 8026aa0 <ceilf+0x7c>
 8026a3e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8026a42:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8026a46:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026a4a:	dd05      	ble.n	8026a58 <ceilf+0x34>
 8026a4c:	2b00      	cmp	r3, #0
 8026a4e:	db23      	blt.n	8026a98 <ceilf+0x74>
 8026a50:	2900      	cmp	r1, #0
 8026a52:	bf18      	it	ne
 8026a54:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 8026a58:	ee00 3a10 	vmov	s0, r3
 8026a5c:	4770      	bx	lr
 8026a5e:	4911      	ldr	r1, [pc, #68]	; (8026aa4 <ceilf+0x80>)
 8026a60:	4111      	asrs	r1, r2
 8026a62:	420b      	tst	r3, r1
 8026a64:	d0fa      	beq.n	8026a5c <ceilf+0x38>
 8026a66:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8026aa0 <ceilf+0x7c>
 8026a6a:	ee30 0a27 	vadd.f32	s0, s0, s15
 8026a6e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8026a72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026a76:	ddef      	ble.n	8026a58 <ceilf+0x34>
 8026a78:	2b00      	cmp	r3, #0
 8026a7a:	bfc2      	ittt	gt
 8026a7c:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 8026a80:	fa40 f202 	asrgt.w	r2, r0, r2
 8026a84:	189b      	addgt	r3, r3, r2
 8026a86:	ea23 0301 	bic.w	r3, r3, r1
 8026a8a:	e7e5      	b.n	8026a58 <ceilf+0x34>
 8026a8c:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8026a90:	d3e4      	bcc.n	8026a5c <ceilf+0x38>
 8026a92:	ee30 0a00 	vadd.f32	s0, s0, s0
 8026a96:	4770      	bx	lr
 8026a98:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8026a9c:	e7dc      	b.n	8026a58 <ceilf+0x34>
 8026a9e:	bf00      	nop
 8026aa0:	7149f2ca 	.word	0x7149f2ca
 8026aa4:	007fffff 	.word	0x007fffff

08026aa8 <floorf>:
 8026aa8:	ee10 3a10 	vmov	r3, s0
 8026aac:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8026ab0:	3a7f      	subs	r2, #127	; 0x7f
 8026ab2:	2a16      	cmp	r2, #22
 8026ab4:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8026ab8:	dc2a      	bgt.n	8026b10 <floorf+0x68>
 8026aba:	2a00      	cmp	r2, #0
 8026abc:	da11      	bge.n	8026ae2 <floorf+0x3a>
 8026abe:	eddf 7a18 	vldr	s15, [pc, #96]	; 8026b20 <floorf+0x78>
 8026ac2:	ee30 0a27 	vadd.f32	s0, s0, s15
 8026ac6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8026aca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026ace:	dd05      	ble.n	8026adc <floorf+0x34>
 8026ad0:	2b00      	cmp	r3, #0
 8026ad2:	da23      	bge.n	8026b1c <floorf+0x74>
 8026ad4:	4a13      	ldr	r2, [pc, #76]	; (8026b24 <floorf+0x7c>)
 8026ad6:	2900      	cmp	r1, #0
 8026ad8:	bf18      	it	ne
 8026ada:	4613      	movne	r3, r2
 8026adc:	ee00 3a10 	vmov	s0, r3
 8026ae0:	4770      	bx	lr
 8026ae2:	4911      	ldr	r1, [pc, #68]	; (8026b28 <floorf+0x80>)
 8026ae4:	4111      	asrs	r1, r2
 8026ae6:	420b      	tst	r3, r1
 8026ae8:	d0fa      	beq.n	8026ae0 <floorf+0x38>
 8026aea:	eddf 7a0d 	vldr	s15, [pc, #52]	; 8026b20 <floorf+0x78>
 8026aee:	ee30 0a27 	vadd.f32	s0, s0, s15
 8026af2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8026af6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026afa:	ddef      	ble.n	8026adc <floorf+0x34>
 8026afc:	2b00      	cmp	r3, #0
 8026afe:	bfbe      	ittt	lt
 8026b00:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 8026b04:	fa40 f202 	asrlt.w	r2, r0, r2
 8026b08:	189b      	addlt	r3, r3, r2
 8026b0a:	ea23 0301 	bic.w	r3, r3, r1
 8026b0e:	e7e5      	b.n	8026adc <floorf+0x34>
 8026b10:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8026b14:	d3e4      	bcc.n	8026ae0 <floorf+0x38>
 8026b16:	ee30 0a00 	vadd.f32	s0, s0, s0
 8026b1a:	4770      	bx	lr
 8026b1c:	2300      	movs	r3, #0
 8026b1e:	e7dd      	b.n	8026adc <floorf+0x34>
 8026b20:	7149f2ca 	.word	0x7149f2ca
 8026b24:	bf800000 	.word	0xbf800000
 8026b28:	007fffff 	.word	0x007fffff

08026b2c <__kernel_cosf>:
 8026b2c:	ee10 3a10 	vmov	r3, s0
 8026b30:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8026b34:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 8026b38:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8026b3c:	da05      	bge.n	8026b4a <__kernel_cosf+0x1e>
 8026b3e:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8026b42:	ee17 2a90 	vmov	r2, s15
 8026b46:	2a00      	cmp	r2, #0
 8026b48:	d03b      	beq.n	8026bc2 <__kernel_cosf+0x96>
 8026b4a:	ee20 7a00 	vmul.f32	s14, s0, s0
 8026b4e:	eddf 7a1e 	vldr	s15, [pc, #120]	; 8026bc8 <__kernel_cosf+0x9c>
 8026b52:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 8026bcc <__kernel_cosf+0xa0>
 8026b56:	4a1e      	ldr	r2, [pc, #120]	; (8026bd0 <__kernel_cosf+0xa4>)
 8026b58:	eea7 6a27 	vfma.f32	s12, s14, s15
 8026b5c:	4293      	cmp	r3, r2
 8026b5e:	eddf 7a1d 	vldr	s15, [pc, #116]	; 8026bd4 <__kernel_cosf+0xa8>
 8026b62:	eee6 7a07 	vfma.f32	s15, s12, s14
 8026b66:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 8026bd8 <__kernel_cosf+0xac>
 8026b6a:	eea7 6a87 	vfma.f32	s12, s15, s14
 8026b6e:	eddf 7a1b 	vldr	s15, [pc, #108]	; 8026bdc <__kernel_cosf+0xb0>
 8026b72:	eee6 7a07 	vfma.f32	s15, s12, s14
 8026b76:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 8026be0 <__kernel_cosf+0xb4>
 8026b7a:	eea7 6a87 	vfma.f32	s12, s15, s14
 8026b7e:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 8026b82:	ee26 6a07 	vmul.f32	s12, s12, s14
 8026b86:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8026b8a:	eee7 0a06 	vfma.f32	s1, s14, s12
 8026b8e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8026b92:	dc04      	bgt.n	8026b9e <__kernel_cosf+0x72>
 8026b94:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8026b98:	ee36 0ae7 	vsub.f32	s0, s13, s15
 8026b9c:	4770      	bx	lr
 8026b9e:	4a11      	ldr	r2, [pc, #68]	; (8026be4 <__kernel_cosf+0xb8>)
 8026ba0:	4293      	cmp	r3, r2
 8026ba2:	bfda      	itte	le
 8026ba4:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 8026ba8:	ee07 3a10 	vmovle	s14, r3
 8026bac:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 8026bb0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8026bb4:	ee36 0ac7 	vsub.f32	s0, s13, s14
 8026bb8:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8026bbc:	ee30 0a67 	vsub.f32	s0, s0, s15
 8026bc0:	4770      	bx	lr
 8026bc2:	eeb0 0a66 	vmov.f32	s0, s13
 8026bc6:	4770      	bx	lr
 8026bc8:	ad47d74e 	.word	0xad47d74e
 8026bcc:	310f74f6 	.word	0x310f74f6
 8026bd0:	3e999999 	.word	0x3e999999
 8026bd4:	b493f27c 	.word	0xb493f27c
 8026bd8:	37d00d01 	.word	0x37d00d01
 8026bdc:	bab60b61 	.word	0xbab60b61
 8026be0:	3d2aaaab 	.word	0x3d2aaaab
 8026be4:	3f480000 	.word	0x3f480000

08026be8 <__kernel_sinf>:
 8026be8:	ee10 3a10 	vmov	r3, s0
 8026bec:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8026bf0:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 8026bf4:	da04      	bge.n	8026c00 <__kernel_sinf+0x18>
 8026bf6:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8026bfa:	ee17 3a90 	vmov	r3, s15
 8026bfe:	b35b      	cbz	r3, 8026c58 <__kernel_sinf+0x70>
 8026c00:	ee20 7a00 	vmul.f32	s14, s0, s0
 8026c04:	eddf 7a15 	vldr	s15, [pc, #84]	; 8026c5c <__kernel_sinf+0x74>
 8026c08:	ed9f 6a15 	vldr	s12, [pc, #84]	; 8026c60 <__kernel_sinf+0x78>
 8026c0c:	eea7 6a27 	vfma.f32	s12, s14, s15
 8026c10:	eddf 7a14 	vldr	s15, [pc, #80]	; 8026c64 <__kernel_sinf+0x7c>
 8026c14:	eee6 7a07 	vfma.f32	s15, s12, s14
 8026c18:	ed9f 6a13 	vldr	s12, [pc, #76]	; 8026c68 <__kernel_sinf+0x80>
 8026c1c:	eea7 6a87 	vfma.f32	s12, s15, s14
 8026c20:	eddf 7a12 	vldr	s15, [pc, #72]	; 8026c6c <__kernel_sinf+0x84>
 8026c24:	ee60 6a07 	vmul.f32	s13, s0, s14
 8026c28:	eee6 7a07 	vfma.f32	s15, s12, s14
 8026c2c:	b930      	cbnz	r0, 8026c3c <__kernel_sinf+0x54>
 8026c2e:	ed9f 6a10 	vldr	s12, [pc, #64]	; 8026c70 <__kernel_sinf+0x88>
 8026c32:	eea7 6a27 	vfma.f32	s12, s14, s15
 8026c36:	eea6 0a26 	vfma.f32	s0, s12, s13
 8026c3a:	4770      	bx	lr
 8026c3c:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8026c40:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8026c44:	eee0 7a86 	vfma.f32	s15, s1, s12
 8026c48:	eed7 0a87 	vfnms.f32	s1, s15, s14
 8026c4c:	eddf 7a09 	vldr	s15, [pc, #36]	; 8026c74 <__kernel_sinf+0x8c>
 8026c50:	eee6 0aa7 	vfma.f32	s1, s13, s15
 8026c54:	ee30 0a60 	vsub.f32	s0, s0, s1
 8026c58:	4770      	bx	lr
 8026c5a:	bf00      	nop
 8026c5c:	2f2ec9d3 	.word	0x2f2ec9d3
 8026c60:	b2d72f34 	.word	0xb2d72f34
 8026c64:	3638ef1b 	.word	0x3638ef1b
 8026c68:	b9500d01 	.word	0xb9500d01
 8026c6c:	3c088889 	.word	0x3c088889
 8026c70:	be2aaaab 	.word	0xbe2aaaab
 8026c74:	3e2aaaab 	.word	0x3e2aaaab

08026c78 <__ieee754_rem_pio2f>:
 8026c78:	b5f0      	push	{r4, r5, r6, r7, lr}
 8026c7a:	ee10 6a10 	vmov	r6, s0
 8026c7e:	4b86      	ldr	r3, [pc, #536]	; (8026e98 <__ieee754_rem_pio2f+0x220>)
 8026c80:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 8026c84:	429d      	cmp	r5, r3
 8026c86:	b087      	sub	sp, #28
 8026c88:	4604      	mov	r4, r0
 8026c8a:	dc05      	bgt.n	8026c98 <__ieee754_rem_pio2f+0x20>
 8026c8c:	2300      	movs	r3, #0
 8026c8e:	ed80 0a00 	vstr	s0, [r0]
 8026c92:	6043      	str	r3, [r0, #4]
 8026c94:	2000      	movs	r0, #0
 8026c96:	e020      	b.n	8026cda <__ieee754_rem_pio2f+0x62>
 8026c98:	4b80      	ldr	r3, [pc, #512]	; (8026e9c <__ieee754_rem_pio2f+0x224>)
 8026c9a:	429d      	cmp	r5, r3
 8026c9c:	dc38      	bgt.n	8026d10 <__ieee754_rem_pio2f+0x98>
 8026c9e:	2e00      	cmp	r6, #0
 8026ca0:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 8026ea0 <__ieee754_rem_pio2f+0x228>
 8026ca4:	4b7f      	ldr	r3, [pc, #508]	; (8026ea4 <__ieee754_rem_pio2f+0x22c>)
 8026ca6:	f025 050f 	bic.w	r5, r5, #15
 8026caa:	dd18      	ble.n	8026cde <__ieee754_rem_pio2f+0x66>
 8026cac:	429d      	cmp	r5, r3
 8026cae:	ee70 7a47 	vsub.f32	s15, s0, s14
 8026cb2:	bf09      	itett	eq
 8026cb4:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 8026ea8 <__ieee754_rem_pio2f+0x230>
 8026cb8:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 8026eac <__ieee754_rem_pio2f+0x234>
 8026cbc:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 8026cc0:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 8026eb0 <__ieee754_rem_pio2f+0x238>
 8026cc4:	ee77 6ac7 	vsub.f32	s13, s15, s14
 8026cc8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8026ccc:	edc0 6a00 	vstr	s13, [r0]
 8026cd0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8026cd4:	edc0 7a01 	vstr	s15, [r0, #4]
 8026cd8:	2001      	movs	r0, #1
 8026cda:	b007      	add	sp, #28
 8026cdc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8026cde:	429d      	cmp	r5, r3
 8026ce0:	ee70 7a07 	vadd.f32	s15, s0, s14
 8026ce4:	bf09      	itett	eq
 8026ce6:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 8026ea8 <__ieee754_rem_pio2f+0x230>
 8026cea:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 8026eac <__ieee754_rem_pio2f+0x234>
 8026cee:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 8026cf2:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 8026eb0 <__ieee754_rem_pio2f+0x238>
 8026cf6:	ee77 6a87 	vadd.f32	s13, s15, s14
 8026cfa:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8026cfe:	edc0 6a00 	vstr	s13, [r0]
 8026d02:	ee77 7a87 	vadd.f32	s15, s15, s14
 8026d06:	edc0 7a01 	vstr	s15, [r0, #4]
 8026d0a:	f04f 30ff 	mov.w	r0, #4294967295
 8026d0e:	e7e4      	b.n	8026cda <__ieee754_rem_pio2f+0x62>
 8026d10:	4b68      	ldr	r3, [pc, #416]	; (8026eb4 <__ieee754_rem_pio2f+0x23c>)
 8026d12:	429d      	cmp	r5, r3
 8026d14:	dc71      	bgt.n	8026dfa <__ieee754_rem_pio2f+0x182>
 8026d16:	f000 f8db 	bl	8026ed0 <fabsf>
 8026d1a:	ed9f 7a67 	vldr	s14, [pc, #412]	; 8026eb8 <__ieee754_rem_pio2f+0x240>
 8026d1e:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8026d22:	eee0 7a07 	vfma.f32	s15, s0, s14
 8026d26:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8026d2a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8026d2e:	ee17 0a90 	vmov	r0, s15
 8026d32:	eddf 7a5b 	vldr	s15, [pc, #364]	; 8026ea0 <__ieee754_rem_pio2f+0x228>
 8026d36:	eea7 0a67 	vfms.f32	s0, s14, s15
 8026d3a:	281f      	cmp	r0, #31
 8026d3c:	eddf 7a5b 	vldr	s15, [pc, #364]	; 8026eac <__ieee754_rem_pio2f+0x234>
 8026d40:	ee67 7a27 	vmul.f32	s15, s14, s15
 8026d44:	eeb1 6a47 	vneg.f32	s12, s14
 8026d48:	ee70 6a67 	vsub.f32	s13, s0, s15
 8026d4c:	ee16 2a90 	vmov	r2, s13
 8026d50:	dc1c      	bgt.n	8026d8c <__ieee754_rem_pio2f+0x114>
 8026d52:	495a      	ldr	r1, [pc, #360]	; (8026ebc <__ieee754_rem_pio2f+0x244>)
 8026d54:	1e47      	subs	r7, r0, #1
 8026d56:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 8026d5a:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8026d5e:	428b      	cmp	r3, r1
 8026d60:	d014      	beq.n	8026d8c <__ieee754_rem_pio2f+0x114>
 8026d62:	6022      	str	r2, [r4, #0]
 8026d64:	ed94 7a00 	vldr	s14, [r4]
 8026d68:	ee30 0a47 	vsub.f32	s0, s0, s14
 8026d6c:	2e00      	cmp	r6, #0
 8026d6e:	ee30 0a67 	vsub.f32	s0, s0, s15
 8026d72:	ed84 0a01 	vstr	s0, [r4, #4]
 8026d76:	dab0      	bge.n	8026cda <__ieee754_rem_pio2f+0x62>
 8026d78:	eeb1 7a47 	vneg.f32	s14, s14
 8026d7c:	eeb1 0a40 	vneg.f32	s0, s0
 8026d80:	ed84 7a00 	vstr	s14, [r4]
 8026d84:	ed84 0a01 	vstr	s0, [r4, #4]
 8026d88:	4240      	negs	r0, r0
 8026d8a:	e7a6      	b.n	8026cda <__ieee754_rem_pio2f+0x62>
 8026d8c:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8026d90:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 8026d94:	2908      	cmp	r1, #8
 8026d96:	ea4f 53e5 	mov.w	r3, r5, asr #23
 8026d9a:	dde2      	ble.n	8026d62 <__ieee754_rem_pio2f+0xea>
 8026d9c:	eddf 5a42 	vldr	s11, [pc, #264]	; 8026ea8 <__ieee754_rem_pio2f+0x230>
 8026da0:	eef0 6a40 	vmov.f32	s13, s0
 8026da4:	eee6 6a25 	vfma.f32	s13, s12, s11
 8026da8:	ee70 7a66 	vsub.f32	s15, s0, s13
 8026dac:	eee6 7a25 	vfma.f32	s15, s12, s11
 8026db0:	eddf 5a3f 	vldr	s11, [pc, #252]	; 8026eb0 <__ieee754_rem_pio2f+0x238>
 8026db4:	eed7 7a25 	vfnms.f32	s15, s14, s11
 8026db8:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8026dbc:	ee15 2a90 	vmov	r2, s11
 8026dc0:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8026dc4:	1a5b      	subs	r3, r3, r1
 8026dc6:	2b19      	cmp	r3, #25
 8026dc8:	dc04      	bgt.n	8026dd4 <__ieee754_rem_pio2f+0x15c>
 8026dca:	edc4 5a00 	vstr	s11, [r4]
 8026dce:	eeb0 0a66 	vmov.f32	s0, s13
 8026dd2:	e7c7      	b.n	8026d64 <__ieee754_rem_pio2f+0xec>
 8026dd4:	eddf 5a3a 	vldr	s11, [pc, #232]	; 8026ec0 <__ieee754_rem_pio2f+0x248>
 8026dd8:	eeb0 0a66 	vmov.f32	s0, s13
 8026ddc:	eea6 0a25 	vfma.f32	s0, s12, s11
 8026de0:	ee76 7ac0 	vsub.f32	s15, s13, s0
 8026de4:	eddf 6a37 	vldr	s13, [pc, #220]	; 8026ec4 <__ieee754_rem_pio2f+0x24c>
 8026de8:	eee6 7a25 	vfma.f32	s15, s12, s11
 8026dec:	eed7 7a26 	vfnms.f32	s15, s14, s13
 8026df0:	ee30 7a67 	vsub.f32	s14, s0, s15
 8026df4:	ed84 7a00 	vstr	s14, [r4]
 8026df8:	e7b4      	b.n	8026d64 <__ieee754_rem_pio2f+0xec>
 8026dfa:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 8026dfe:	db06      	blt.n	8026e0e <__ieee754_rem_pio2f+0x196>
 8026e00:	ee70 7a40 	vsub.f32	s15, s0, s0
 8026e04:	edc0 7a01 	vstr	s15, [r0, #4]
 8026e08:	edc0 7a00 	vstr	s15, [r0]
 8026e0c:	e742      	b.n	8026c94 <__ieee754_rem_pio2f+0x1c>
 8026e0e:	15ea      	asrs	r2, r5, #23
 8026e10:	3a86      	subs	r2, #134	; 0x86
 8026e12:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 8026e16:	ee07 3a90 	vmov	s15, r3
 8026e1a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8026e1e:	eddf 6a2a 	vldr	s13, [pc, #168]	; 8026ec8 <__ieee754_rem_pio2f+0x250>
 8026e22:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8026e26:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8026e2a:	ed8d 7a03 	vstr	s14, [sp, #12]
 8026e2e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8026e32:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8026e36:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8026e3a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8026e3e:	ed8d 7a04 	vstr	s14, [sp, #16]
 8026e42:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8026e46:	eef5 7a40 	vcmp.f32	s15, #0.0
 8026e4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026e4e:	edcd 7a05 	vstr	s15, [sp, #20]
 8026e52:	d11e      	bne.n	8026e92 <__ieee754_rem_pio2f+0x21a>
 8026e54:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8026e58:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026e5c:	bf14      	ite	ne
 8026e5e:	2302      	movne	r3, #2
 8026e60:	2301      	moveq	r3, #1
 8026e62:	491a      	ldr	r1, [pc, #104]	; (8026ecc <__ieee754_rem_pio2f+0x254>)
 8026e64:	9101      	str	r1, [sp, #4]
 8026e66:	2102      	movs	r1, #2
 8026e68:	9100      	str	r1, [sp, #0]
 8026e6a:	a803      	add	r0, sp, #12
 8026e6c:	4621      	mov	r1, r4
 8026e6e:	f000 f89d 	bl	8026fac <__kernel_rem_pio2f>
 8026e72:	2e00      	cmp	r6, #0
 8026e74:	f6bf af31 	bge.w	8026cda <__ieee754_rem_pio2f+0x62>
 8026e78:	edd4 7a00 	vldr	s15, [r4]
 8026e7c:	eef1 7a67 	vneg.f32	s15, s15
 8026e80:	edc4 7a00 	vstr	s15, [r4]
 8026e84:	edd4 7a01 	vldr	s15, [r4, #4]
 8026e88:	eef1 7a67 	vneg.f32	s15, s15
 8026e8c:	edc4 7a01 	vstr	s15, [r4, #4]
 8026e90:	e77a      	b.n	8026d88 <__ieee754_rem_pio2f+0x110>
 8026e92:	2303      	movs	r3, #3
 8026e94:	e7e5      	b.n	8026e62 <__ieee754_rem_pio2f+0x1ea>
 8026e96:	bf00      	nop
 8026e98:	3f490fd8 	.word	0x3f490fd8
 8026e9c:	4016cbe3 	.word	0x4016cbe3
 8026ea0:	3fc90f80 	.word	0x3fc90f80
 8026ea4:	3fc90fd0 	.word	0x3fc90fd0
 8026ea8:	37354400 	.word	0x37354400
 8026eac:	37354443 	.word	0x37354443
 8026eb0:	2e85a308 	.word	0x2e85a308
 8026eb4:	43490f80 	.word	0x43490f80
 8026eb8:	3f22f984 	.word	0x3f22f984
 8026ebc:	0802bdcc 	.word	0x0802bdcc
 8026ec0:	2e85a300 	.word	0x2e85a300
 8026ec4:	248d3132 	.word	0x248d3132
 8026ec8:	43800000 	.word	0x43800000
 8026ecc:	0802be4c 	.word	0x0802be4c

08026ed0 <fabsf>:
 8026ed0:	ee10 3a10 	vmov	r3, s0
 8026ed4:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8026ed8:	ee00 3a10 	vmov	s0, r3
 8026edc:	4770      	bx	lr
	...

08026ee0 <scalbnf>:
 8026ee0:	ee10 3a10 	vmov	r3, s0
 8026ee4:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 8026ee8:	d02b      	beq.n	8026f42 <scalbnf+0x62>
 8026eea:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 8026eee:	d302      	bcc.n	8026ef6 <scalbnf+0x16>
 8026ef0:	ee30 0a00 	vadd.f32	s0, s0, s0
 8026ef4:	4770      	bx	lr
 8026ef6:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 8026efa:	d123      	bne.n	8026f44 <scalbnf+0x64>
 8026efc:	4b24      	ldr	r3, [pc, #144]	; (8026f90 <scalbnf+0xb0>)
 8026efe:	eddf 7a25 	vldr	s15, [pc, #148]	; 8026f94 <scalbnf+0xb4>
 8026f02:	4298      	cmp	r0, r3
 8026f04:	ee20 0a27 	vmul.f32	s0, s0, s15
 8026f08:	db17      	blt.n	8026f3a <scalbnf+0x5a>
 8026f0a:	ee10 3a10 	vmov	r3, s0
 8026f0e:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8026f12:	3a19      	subs	r2, #25
 8026f14:	f24c 3150 	movw	r1, #50000	; 0xc350
 8026f18:	4288      	cmp	r0, r1
 8026f1a:	dd15      	ble.n	8026f48 <scalbnf+0x68>
 8026f1c:	eddf 7a1e 	vldr	s15, [pc, #120]	; 8026f98 <scalbnf+0xb8>
 8026f20:	eddf 6a1e 	vldr	s13, [pc, #120]	; 8026f9c <scalbnf+0xbc>
 8026f24:	ee10 3a10 	vmov	r3, s0
 8026f28:	eeb0 7a67 	vmov.f32	s14, s15
 8026f2c:	2b00      	cmp	r3, #0
 8026f2e:	bfb8      	it	lt
 8026f30:	eef0 7a66 	vmovlt.f32	s15, s13
 8026f34:	ee27 0a87 	vmul.f32	s0, s15, s14
 8026f38:	4770      	bx	lr
 8026f3a:	eddf 7a19 	vldr	s15, [pc, #100]	; 8026fa0 <scalbnf+0xc0>
 8026f3e:	ee27 0a80 	vmul.f32	s0, s15, s0
 8026f42:	4770      	bx	lr
 8026f44:	0dd2      	lsrs	r2, r2, #23
 8026f46:	e7e5      	b.n	8026f14 <scalbnf+0x34>
 8026f48:	4410      	add	r0, r2
 8026f4a:	28fe      	cmp	r0, #254	; 0xfe
 8026f4c:	dce6      	bgt.n	8026f1c <scalbnf+0x3c>
 8026f4e:	2800      	cmp	r0, #0
 8026f50:	dd06      	ble.n	8026f60 <scalbnf+0x80>
 8026f52:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8026f56:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8026f5a:	ee00 3a10 	vmov	s0, r3
 8026f5e:	4770      	bx	lr
 8026f60:	f110 0f16 	cmn.w	r0, #22
 8026f64:	da09      	bge.n	8026f7a <scalbnf+0x9a>
 8026f66:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8026fa0 <scalbnf+0xc0>
 8026f6a:	eddf 6a0e 	vldr	s13, [pc, #56]	; 8026fa4 <scalbnf+0xc4>
 8026f6e:	ee10 3a10 	vmov	r3, s0
 8026f72:	eeb0 7a67 	vmov.f32	s14, s15
 8026f76:	2b00      	cmp	r3, #0
 8026f78:	e7d9      	b.n	8026f2e <scalbnf+0x4e>
 8026f7a:	3019      	adds	r0, #25
 8026f7c:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8026f80:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8026f84:	ed9f 0a08 	vldr	s0, [pc, #32]	; 8026fa8 <scalbnf+0xc8>
 8026f88:	ee07 3a90 	vmov	s15, r3
 8026f8c:	e7d7      	b.n	8026f3e <scalbnf+0x5e>
 8026f8e:	bf00      	nop
 8026f90:	ffff3cb0 	.word	0xffff3cb0
 8026f94:	4c000000 	.word	0x4c000000
 8026f98:	7149f2ca 	.word	0x7149f2ca
 8026f9c:	f149f2ca 	.word	0xf149f2ca
 8026fa0:	0da24260 	.word	0x0da24260
 8026fa4:	8da24260 	.word	0x8da24260
 8026fa8:	33000000 	.word	0x33000000

08026fac <__kernel_rem_pio2f>:
 8026fac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026fb0:	ed2d 8b04 	vpush	{d8-d9}
 8026fb4:	b0d9      	sub	sp, #356	; 0x164
 8026fb6:	4688      	mov	r8, r1
 8026fb8:	9002      	str	r0, [sp, #8]
 8026fba:	49b8      	ldr	r1, [pc, #736]	; (802729c <__kernel_rem_pio2f+0x2f0>)
 8026fbc:	9866      	ldr	r0, [sp, #408]	; 0x198
 8026fbe:	9301      	str	r3, [sp, #4]
 8026fc0:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 8026fc4:	9901      	ldr	r1, [sp, #4]
 8026fc6:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 8026fc8:	f101 3bff 	add.w	fp, r1, #4294967295
 8026fcc:	1d11      	adds	r1, r2, #4
 8026fce:	db25      	blt.n	802701c <__kernel_rem_pio2f+0x70>
 8026fd0:	1ed0      	subs	r0, r2, #3
 8026fd2:	bf48      	it	mi
 8026fd4:	1d10      	addmi	r0, r2, #4
 8026fd6:	10c0      	asrs	r0, r0, #3
 8026fd8:	1c45      	adds	r5, r0, #1
 8026fda:	00e9      	lsls	r1, r5, #3
 8026fdc:	eba0 070b 	sub.w	r7, r0, fp
 8026fe0:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 80272ac <__kernel_rem_pio2f+0x300>
 8026fe4:	9103      	str	r1, [sp, #12]
 8026fe6:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 8026fea:	eb0a 0c0b 	add.w	ip, sl, fp
 8026fee:	ae1c      	add	r6, sp, #112	; 0x70
 8026ff0:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 8026ff4:	2400      	movs	r4, #0
 8026ff6:	4564      	cmp	r4, ip
 8026ff8:	dd12      	ble.n	8027020 <__kernel_rem_pio2f+0x74>
 8026ffa:	9901      	ldr	r1, [sp, #4]
 8026ffc:	ac1c      	add	r4, sp, #112	; 0x70
 8026ffe:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8027002:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 8027006:	f04f 0c00 	mov.w	ip, #0
 802700a:	45d4      	cmp	ip, sl
 802700c:	dc27      	bgt.n	802705e <__kernel_rem_pio2f+0xb2>
 802700e:	f8dd e008 	ldr.w	lr, [sp, #8]
 8027012:	eddf 7aa6 	vldr	s15, [pc, #664]	; 80272ac <__kernel_rem_pio2f+0x300>
 8027016:	4627      	mov	r7, r4
 8027018:	2600      	movs	r6, #0
 802701a:	e016      	b.n	802704a <__kernel_rem_pio2f+0x9e>
 802701c:	2000      	movs	r0, #0
 802701e:	e7db      	b.n	8026fd8 <__kernel_rem_pio2f+0x2c>
 8027020:	42e7      	cmn	r7, r4
 8027022:	bf5d      	ittte	pl
 8027024:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 8027028:	ee07 1a90 	vmovpl	s15, r1
 802702c:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 8027030:	eef0 7a47 	vmovmi.f32	s15, s14
 8027034:	ece6 7a01 	vstmia	r6!, {s15}
 8027038:	3401      	adds	r4, #1
 802703a:	e7dc      	b.n	8026ff6 <__kernel_rem_pio2f+0x4a>
 802703c:	ecfe 6a01 	vldmia	lr!, {s13}
 8027040:	ed97 7a00 	vldr	s14, [r7]
 8027044:	eee6 7a87 	vfma.f32	s15, s13, s14
 8027048:	3601      	adds	r6, #1
 802704a:	455e      	cmp	r6, fp
 802704c:	f1a7 0704 	sub.w	r7, r7, #4
 8027050:	ddf4      	ble.n	802703c <__kernel_rem_pio2f+0x90>
 8027052:	ece9 7a01 	vstmia	r9!, {s15}
 8027056:	f10c 0c01 	add.w	ip, ip, #1
 802705a:	3404      	adds	r4, #4
 802705c:	e7d5      	b.n	802700a <__kernel_rem_pio2f+0x5e>
 802705e:	a908      	add	r1, sp, #32
 8027060:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8027064:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 8027068:	eddf 8a8f 	vldr	s17, [pc, #572]	; 80272a8 <__kernel_rem_pio2f+0x2fc>
 802706c:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 80272a4 <__kernel_rem_pio2f+0x2f8>
 8027070:	9105      	str	r1, [sp, #20]
 8027072:	9304      	str	r3, [sp, #16]
 8027074:	4656      	mov	r6, sl
 8027076:	00b3      	lsls	r3, r6, #2
 8027078:	9306      	str	r3, [sp, #24]
 802707a:	ab58      	add	r3, sp, #352	; 0x160
 802707c:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 8027080:	ac08      	add	r4, sp, #32
 8027082:	ab44      	add	r3, sp, #272	; 0x110
 8027084:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 8027088:	46a4      	mov	ip, r4
 802708a:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802708e:	4637      	mov	r7, r6
 8027090:	2f00      	cmp	r7, #0
 8027092:	f1a0 0004 	sub.w	r0, r0, #4
 8027096:	dc4a      	bgt.n	802712e <__kernel_rem_pio2f+0x182>
 8027098:	4628      	mov	r0, r5
 802709a:	9207      	str	r2, [sp, #28]
 802709c:	f7ff ff20 	bl	8026ee0 <scalbnf>
 80270a0:	eeb0 8a40 	vmov.f32	s16, s0
 80270a4:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 80270a8:	ee28 0a00 	vmul.f32	s0, s16, s0
 80270ac:	f7ff fcfc 	bl	8026aa8 <floorf>
 80270b0:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 80270b4:	eea0 8a67 	vfms.f32	s16, s0, s15
 80270b8:	2d00      	cmp	r5, #0
 80270ba:	9a07      	ldr	r2, [sp, #28]
 80270bc:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 80270c0:	ee17 9a90 	vmov	r9, s15
 80270c4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80270c8:	ee38 8a67 	vsub.f32	s16, s16, s15
 80270cc:	dd41      	ble.n	8027152 <__kernel_rem_pio2f+0x1a6>
 80270ce:	f106 3cff 	add.w	ip, r6, #4294967295
 80270d2:	ab08      	add	r3, sp, #32
 80270d4:	f1c5 0e08 	rsb	lr, r5, #8
 80270d8:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 80270dc:	fa47 f00e 	asr.w	r0, r7, lr
 80270e0:	4481      	add	r9, r0
 80270e2:	fa00 f00e 	lsl.w	r0, r0, lr
 80270e6:	1a3f      	subs	r7, r7, r0
 80270e8:	f1c5 0007 	rsb	r0, r5, #7
 80270ec:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 80270f0:	4107      	asrs	r7, r0
 80270f2:	2f00      	cmp	r7, #0
 80270f4:	dd3c      	ble.n	8027170 <__kernel_rem_pio2f+0x1c4>
 80270f6:	f04f 0e00 	mov.w	lr, #0
 80270fa:	f109 0901 	add.w	r9, r9, #1
 80270fe:	4671      	mov	r1, lr
 8027100:	4576      	cmp	r6, lr
 8027102:	dc67      	bgt.n	80271d4 <__kernel_rem_pio2f+0x228>
 8027104:	2d00      	cmp	r5, #0
 8027106:	dd03      	ble.n	8027110 <__kernel_rem_pio2f+0x164>
 8027108:	2d01      	cmp	r5, #1
 802710a:	d074      	beq.n	80271f6 <__kernel_rem_pio2f+0x24a>
 802710c:	2d02      	cmp	r5, #2
 802710e:	d07b      	beq.n	8027208 <__kernel_rem_pio2f+0x25c>
 8027110:	2f02      	cmp	r7, #2
 8027112:	d12d      	bne.n	8027170 <__kernel_rem_pio2f+0x1c4>
 8027114:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8027118:	ee30 8a48 	vsub.f32	s16, s0, s16
 802711c:	b341      	cbz	r1, 8027170 <__kernel_rem_pio2f+0x1c4>
 802711e:	4628      	mov	r0, r5
 8027120:	9207      	str	r2, [sp, #28]
 8027122:	f7ff fedd 	bl	8026ee0 <scalbnf>
 8027126:	9a07      	ldr	r2, [sp, #28]
 8027128:	ee38 8a40 	vsub.f32	s16, s16, s0
 802712c:	e020      	b.n	8027170 <__kernel_rem_pio2f+0x1c4>
 802712e:	ee60 7a28 	vmul.f32	s15, s0, s17
 8027132:	3f01      	subs	r7, #1
 8027134:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8027138:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802713c:	eea7 0ac9 	vfms.f32	s0, s15, s18
 8027140:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8027144:	ecac 0a01 	vstmia	ip!, {s0}
 8027148:	ed90 0a00 	vldr	s0, [r0]
 802714c:	ee37 0a80 	vadd.f32	s0, s15, s0
 8027150:	e79e      	b.n	8027090 <__kernel_rem_pio2f+0xe4>
 8027152:	d105      	bne.n	8027160 <__kernel_rem_pio2f+0x1b4>
 8027154:	1e70      	subs	r0, r6, #1
 8027156:	ab08      	add	r3, sp, #32
 8027158:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 802715c:	11ff      	asrs	r7, r7, #7
 802715e:	e7c8      	b.n	80270f2 <__kernel_rem_pio2f+0x146>
 8027160:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8027164:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8027168:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802716c:	da30      	bge.n	80271d0 <__kernel_rem_pio2f+0x224>
 802716e:	2700      	movs	r7, #0
 8027170:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8027174:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027178:	f040 809a 	bne.w	80272b0 <__kernel_rem_pio2f+0x304>
 802717c:	1e74      	subs	r4, r6, #1
 802717e:	46a4      	mov	ip, r4
 8027180:	2100      	movs	r1, #0
 8027182:	45d4      	cmp	ip, sl
 8027184:	da47      	bge.n	8027216 <__kernel_rem_pio2f+0x26a>
 8027186:	2900      	cmp	r1, #0
 8027188:	d063      	beq.n	8027252 <__kernel_rem_pio2f+0x2a6>
 802718a:	ab08      	add	r3, sp, #32
 802718c:	3d08      	subs	r5, #8
 802718e:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8027192:	2b00      	cmp	r3, #0
 8027194:	d07f      	beq.n	8027296 <__kernel_rem_pio2f+0x2ea>
 8027196:	4628      	mov	r0, r5
 8027198:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802719c:	f7ff fea0 	bl	8026ee0 <scalbnf>
 80271a0:	1c63      	adds	r3, r4, #1
 80271a2:	aa44      	add	r2, sp, #272	; 0x110
 80271a4:	ed9f 7a40 	vldr	s14, [pc, #256]	; 80272a8 <__kernel_rem_pio2f+0x2fc>
 80271a8:	0099      	lsls	r1, r3, #2
 80271aa:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 80271ae:	4623      	mov	r3, r4
 80271b0:	2b00      	cmp	r3, #0
 80271b2:	f280 80ad 	bge.w	8027310 <__kernel_rem_pio2f+0x364>
 80271b6:	4623      	mov	r3, r4
 80271b8:	2b00      	cmp	r3, #0
 80271ba:	f2c0 80cb 	blt.w	8027354 <__kernel_rem_pio2f+0x3a8>
 80271be:	aa44      	add	r2, sp, #272	; 0x110
 80271c0:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 80271c4:	4e36      	ldr	r6, [pc, #216]	; (80272a0 <__kernel_rem_pio2f+0x2f4>)
 80271c6:	eddf 7a39 	vldr	s15, [pc, #228]	; 80272ac <__kernel_rem_pio2f+0x300>
 80271ca:	2000      	movs	r0, #0
 80271cc:	1ae2      	subs	r2, r4, r3
 80271ce:	e0b6      	b.n	802733e <__kernel_rem_pio2f+0x392>
 80271d0:	2702      	movs	r7, #2
 80271d2:	e790      	b.n	80270f6 <__kernel_rem_pio2f+0x14a>
 80271d4:	6820      	ldr	r0, [r4, #0]
 80271d6:	b949      	cbnz	r1, 80271ec <__kernel_rem_pio2f+0x240>
 80271d8:	b118      	cbz	r0, 80271e2 <__kernel_rem_pio2f+0x236>
 80271da:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 80271de:	6020      	str	r0, [r4, #0]
 80271e0:	2001      	movs	r0, #1
 80271e2:	f10e 0e01 	add.w	lr, lr, #1
 80271e6:	3404      	adds	r4, #4
 80271e8:	4601      	mov	r1, r0
 80271ea:	e789      	b.n	8027100 <__kernel_rem_pio2f+0x154>
 80271ec:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 80271f0:	6020      	str	r0, [r4, #0]
 80271f2:	4608      	mov	r0, r1
 80271f4:	e7f5      	b.n	80271e2 <__kernel_rem_pio2f+0x236>
 80271f6:	1e74      	subs	r4, r6, #1
 80271f8:	ab08      	add	r3, sp, #32
 80271fa:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80271fe:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8027202:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8027206:	e783      	b.n	8027110 <__kernel_rem_pio2f+0x164>
 8027208:	1e74      	subs	r4, r6, #1
 802720a:	ab08      	add	r3, sp, #32
 802720c:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8027210:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 8027214:	e7f5      	b.n	8027202 <__kernel_rem_pio2f+0x256>
 8027216:	ab08      	add	r3, sp, #32
 8027218:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 802721c:	f10c 3cff 	add.w	ip, ip, #4294967295
 8027220:	4301      	orrs	r1, r0
 8027222:	e7ae      	b.n	8027182 <__kernel_rem_pio2f+0x1d6>
 8027224:	3001      	adds	r0, #1
 8027226:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 802722a:	2f00      	cmp	r7, #0
 802722c:	d0fa      	beq.n	8027224 <__kernel_rem_pio2f+0x278>
 802722e:	9b06      	ldr	r3, [sp, #24]
 8027230:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 8027234:	eb0d 0403 	add.w	r4, sp, r3
 8027238:	9b01      	ldr	r3, [sp, #4]
 802723a:	18f7      	adds	r7, r6, r3
 802723c:	ab1c      	add	r3, sp, #112	; 0x70
 802723e:	f106 0c01 	add.w	ip, r6, #1
 8027242:	3c4c      	subs	r4, #76	; 0x4c
 8027244:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8027248:	4430      	add	r0, r6
 802724a:	4560      	cmp	r0, ip
 802724c:	da04      	bge.n	8027258 <__kernel_rem_pio2f+0x2ac>
 802724e:	4606      	mov	r6, r0
 8027250:	e711      	b.n	8027076 <__kernel_rem_pio2f+0xca>
 8027252:	9c05      	ldr	r4, [sp, #20]
 8027254:	2001      	movs	r0, #1
 8027256:	e7e6      	b.n	8027226 <__kernel_rem_pio2f+0x27a>
 8027258:	9b04      	ldr	r3, [sp, #16]
 802725a:	f8dd e008 	ldr.w	lr, [sp, #8]
 802725e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8027262:	9306      	str	r3, [sp, #24]
 8027264:	ee07 3a90 	vmov	s15, r3
 8027268:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802726c:	2600      	movs	r6, #0
 802726e:	ece7 7a01 	vstmia	r7!, {s15}
 8027272:	eddf 7a0e 	vldr	s15, [pc, #56]	; 80272ac <__kernel_rem_pio2f+0x300>
 8027276:	46b9      	mov	r9, r7
 8027278:	455e      	cmp	r6, fp
 802727a:	dd04      	ble.n	8027286 <__kernel_rem_pio2f+0x2da>
 802727c:	ece4 7a01 	vstmia	r4!, {s15}
 8027280:	f10c 0c01 	add.w	ip, ip, #1
 8027284:	e7e1      	b.n	802724a <__kernel_rem_pio2f+0x29e>
 8027286:	ecfe 6a01 	vldmia	lr!, {s13}
 802728a:	ed39 7a01 	vldmdb	r9!, {s14}
 802728e:	3601      	adds	r6, #1
 8027290:	eee6 7a87 	vfma.f32	s15, s13, s14
 8027294:	e7f0      	b.n	8027278 <__kernel_rem_pio2f+0x2cc>
 8027296:	3c01      	subs	r4, #1
 8027298:	e777      	b.n	802718a <__kernel_rem_pio2f+0x1de>
 802729a:	bf00      	nop
 802729c:	0802c190 	.word	0x0802c190
 80272a0:	0802c164 	.word	0x0802c164
 80272a4:	43800000 	.word	0x43800000
 80272a8:	3b800000 	.word	0x3b800000
 80272ac:	00000000 	.word	0x00000000
 80272b0:	9b03      	ldr	r3, [sp, #12]
 80272b2:	eeb0 0a48 	vmov.f32	s0, s16
 80272b6:	1a98      	subs	r0, r3, r2
 80272b8:	f7ff fe12 	bl	8026ee0 <scalbnf>
 80272bc:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 80272a4 <__kernel_rem_pio2f+0x2f8>
 80272c0:	eeb4 0ac7 	vcmpe.f32	s0, s14
 80272c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80272c8:	db19      	blt.n	80272fe <__kernel_rem_pio2f+0x352>
 80272ca:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 80272a8 <__kernel_rem_pio2f+0x2fc>
 80272ce:	ee60 7a27 	vmul.f32	s15, s0, s15
 80272d2:	aa08      	add	r2, sp, #32
 80272d4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80272d8:	1c74      	adds	r4, r6, #1
 80272da:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80272de:	3508      	adds	r5, #8
 80272e0:	eea7 0ac7 	vfms.f32	s0, s15, s14
 80272e4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80272e8:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80272ec:	ee10 3a10 	vmov	r3, s0
 80272f0:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 80272f4:	ee17 3a90 	vmov	r3, s15
 80272f8:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 80272fc:	e74b      	b.n	8027196 <__kernel_rem_pio2f+0x1ea>
 80272fe:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8027302:	aa08      	add	r2, sp, #32
 8027304:	ee10 3a10 	vmov	r3, s0
 8027308:	4634      	mov	r4, r6
 802730a:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802730e:	e742      	b.n	8027196 <__kernel_rem_pio2f+0x1ea>
 8027310:	a808      	add	r0, sp, #32
 8027312:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 8027316:	9001      	str	r0, [sp, #4]
 8027318:	ee07 0a90 	vmov	s15, r0
 802731c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8027320:	3b01      	subs	r3, #1
 8027322:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027326:	ee20 0a07 	vmul.f32	s0, s0, s14
 802732a:	ed62 7a01 	vstmdb	r2!, {s15}
 802732e:	e73f      	b.n	80271b0 <__kernel_rem_pio2f+0x204>
 8027330:	ecf6 6a01 	vldmia	r6!, {s13}
 8027334:	ecb5 7a01 	vldmia	r5!, {s14}
 8027338:	eee6 7a87 	vfma.f32	s15, s13, s14
 802733c:	3001      	adds	r0, #1
 802733e:	4550      	cmp	r0, sl
 8027340:	dc01      	bgt.n	8027346 <__kernel_rem_pio2f+0x39a>
 8027342:	4290      	cmp	r0, r2
 8027344:	ddf4      	ble.n	8027330 <__kernel_rem_pio2f+0x384>
 8027346:	a858      	add	r0, sp, #352	; 0x160
 8027348:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802734c:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 8027350:	3b01      	subs	r3, #1
 8027352:	e731      	b.n	80271b8 <__kernel_rem_pio2f+0x20c>
 8027354:	9b66      	ldr	r3, [sp, #408]	; 0x198
 8027356:	2b02      	cmp	r3, #2
 8027358:	dc09      	bgt.n	802736e <__kernel_rem_pio2f+0x3c2>
 802735a:	2b00      	cmp	r3, #0
 802735c:	dc2b      	bgt.n	80273b6 <__kernel_rem_pio2f+0x40a>
 802735e:	d044      	beq.n	80273ea <__kernel_rem_pio2f+0x43e>
 8027360:	f009 0007 	and.w	r0, r9, #7
 8027364:	b059      	add	sp, #356	; 0x164
 8027366:	ecbd 8b04 	vpop	{d8-d9}
 802736a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802736e:	9b66      	ldr	r3, [sp, #408]	; 0x198
 8027370:	2b03      	cmp	r3, #3
 8027372:	d1f5      	bne.n	8027360 <__kernel_rem_pio2f+0x3b4>
 8027374:	aa30      	add	r2, sp, #192	; 0xc0
 8027376:	1f0b      	subs	r3, r1, #4
 8027378:	4413      	add	r3, r2
 802737a:	461a      	mov	r2, r3
 802737c:	4620      	mov	r0, r4
 802737e:	2800      	cmp	r0, #0
 8027380:	f1a2 0204 	sub.w	r2, r2, #4
 8027384:	dc52      	bgt.n	802742c <__kernel_rem_pio2f+0x480>
 8027386:	4622      	mov	r2, r4
 8027388:	2a01      	cmp	r2, #1
 802738a:	f1a3 0304 	sub.w	r3, r3, #4
 802738e:	dc5d      	bgt.n	802744c <__kernel_rem_pio2f+0x4a0>
 8027390:	ab30      	add	r3, sp, #192	; 0xc0
 8027392:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 80272ac <__kernel_rem_pio2f+0x300>
 8027396:	440b      	add	r3, r1
 8027398:	2c01      	cmp	r4, #1
 802739a:	dc67      	bgt.n	802746c <__kernel_rem_pio2f+0x4c0>
 802739c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 80273a0:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 80273a4:	2f00      	cmp	r7, #0
 80273a6:	d167      	bne.n	8027478 <__kernel_rem_pio2f+0x4cc>
 80273a8:	edc8 6a00 	vstr	s13, [r8]
 80273ac:	ed88 7a01 	vstr	s14, [r8, #4]
 80273b0:	edc8 7a02 	vstr	s15, [r8, #8]
 80273b4:	e7d4      	b.n	8027360 <__kernel_rem_pio2f+0x3b4>
 80273b6:	ab30      	add	r3, sp, #192	; 0xc0
 80273b8:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 80272ac <__kernel_rem_pio2f+0x300>
 80273bc:	440b      	add	r3, r1
 80273be:	4622      	mov	r2, r4
 80273c0:	2a00      	cmp	r2, #0
 80273c2:	da24      	bge.n	802740e <__kernel_rem_pio2f+0x462>
 80273c4:	b34f      	cbz	r7, 802741a <__kernel_rem_pio2f+0x46e>
 80273c6:	eef1 7a47 	vneg.f32	s15, s14
 80273ca:	edc8 7a00 	vstr	s15, [r8]
 80273ce:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 80273d2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80273d6:	aa31      	add	r2, sp, #196	; 0xc4
 80273d8:	2301      	movs	r3, #1
 80273da:	429c      	cmp	r4, r3
 80273dc:	da20      	bge.n	8027420 <__kernel_rem_pio2f+0x474>
 80273de:	b10f      	cbz	r7, 80273e4 <__kernel_rem_pio2f+0x438>
 80273e0:	eef1 7a67 	vneg.f32	s15, s15
 80273e4:	edc8 7a01 	vstr	s15, [r8, #4]
 80273e8:	e7ba      	b.n	8027360 <__kernel_rem_pio2f+0x3b4>
 80273ea:	ab30      	add	r3, sp, #192	; 0xc0
 80273ec:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 80272ac <__kernel_rem_pio2f+0x300>
 80273f0:	440b      	add	r3, r1
 80273f2:	2c00      	cmp	r4, #0
 80273f4:	da05      	bge.n	8027402 <__kernel_rem_pio2f+0x456>
 80273f6:	b10f      	cbz	r7, 80273fc <__kernel_rem_pio2f+0x450>
 80273f8:	eef1 7a67 	vneg.f32	s15, s15
 80273fc:	edc8 7a00 	vstr	s15, [r8]
 8027400:	e7ae      	b.n	8027360 <__kernel_rem_pio2f+0x3b4>
 8027402:	ed33 7a01 	vldmdb	r3!, {s14}
 8027406:	3c01      	subs	r4, #1
 8027408:	ee77 7a87 	vadd.f32	s15, s15, s14
 802740c:	e7f1      	b.n	80273f2 <__kernel_rem_pio2f+0x446>
 802740e:	ed73 7a01 	vldmdb	r3!, {s15}
 8027412:	3a01      	subs	r2, #1
 8027414:	ee37 7a27 	vadd.f32	s14, s14, s15
 8027418:	e7d2      	b.n	80273c0 <__kernel_rem_pio2f+0x414>
 802741a:	eef0 7a47 	vmov.f32	s15, s14
 802741e:	e7d4      	b.n	80273ca <__kernel_rem_pio2f+0x41e>
 8027420:	ecb2 7a01 	vldmia	r2!, {s14}
 8027424:	3301      	adds	r3, #1
 8027426:	ee77 7a87 	vadd.f32	s15, s15, s14
 802742a:	e7d6      	b.n	80273da <__kernel_rem_pio2f+0x42e>
 802742c:	edd2 7a00 	vldr	s15, [r2]
 8027430:	edd2 6a01 	vldr	s13, [r2, #4]
 8027434:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8027438:	3801      	subs	r0, #1
 802743a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802743e:	ed82 7a00 	vstr	s14, [r2]
 8027442:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8027446:	edc2 7a01 	vstr	s15, [r2, #4]
 802744a:	e798      	b.n	802737e <__kernel_rem_pio2f+0x3d2>
 802744c:	edd3 7a00 	vldr	s15, [r3]
 8027450:	edd3 6a01 	vldr	s13, [r3, #4]
 8027454:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8027458:	3a01      	subs	r2, #1
 802745a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802745e:	ed83 7a00 	vstr	s14, [r3]
 8027462:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8027466:	edc3 7a01 	vstr	s15, [r3, #4]
 802746a:	e78d      	b.n	8027388 <__kernel_rem_pio2f+0x3dc>
 802746c:	ed33 7a01 	vldmdb	r3!, {s14}
 8027470:	3c01      	subs	r4, #1
 8027472:	ee77 7a87 	vadd.f32	s15, s15, s14
 8027476:	e78f      	b.n	8027398 <__kernel_rem_pio2f+0x3ec>
 8027478:	eef1 6a66 	vneg.f32	s13, s13
 802747c:	eeb1 7a47 	vneg.f32	s14, s14
 8027480:	edc8 6a00 	vstr	s13, [r8]
 8027484:	ed88 7a01 	vstr	s14, [r8, #4]
 8027488:	eef1 7a67 	vneg.f32	s15, s15
 802748c:	e790      	b.n	80273b0 <__kernel_rem_pio2f+0x404>
 802748e:	bf00      	nop

08027490 <abort>:
 8027490:	b508      	push	{r3, lr}
 8027492:	2006      	movs	r0, #6
 8027494:	f000 fa3a 	bl	802790c <raise>
 8027498:	2001      	movs	r0, #1
 802749a:	f7da fe7b 	bl	8002194 <_exit>
	...

080274a0 <__assert_func>:
 80274a0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80274a2:	4614      	mov	r4, r2
 80274a4:	461a      	mov	r2, r3
 80274a6:	4b09      	ldr	r3, [pc, #36]	; (80274cc <__assert_func+0x2c>)
 80274a8:	681b      	ldr	r3, [r3, #0]
 80274aa:	4605      	mov	r5, r0
 80274ac:	68d8      	ldr	r0, [r3, #12]
 80274ae:	b14c      	cbz	r4, 80274c4 <__assert_func+0x24>
 80274b0:	4b07      	ldr	r3, [pc, #28]	; (80274d0 <__assert_func+0x30>)
 80274b2:	9100      	str	r1, [sp, #0]
 80274b4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80274b8:	4906      	ldr	r1, [pc, #24]	; (80274d4 <__assert_func+0x34>)
 80274ba:	462b      	mov	r3, r5
 80274bc:	f000 f982 	bl	80277c4 <fiprintf>
 80274c0:	f7ff ffe6 	bl	8027490 <abort>
 80274c4:	4b04      	ldr	r3, [pc, #16]	; (80274d8 <__assert_func+0x38>)
 80274c6:	461c      	mov	r4, r3
 80274c8:	e7f3      	b.n	80274b2 <__assert_func+0x12>
 80274ca:	bf00      	nop
 80274cc:	20000160 	.word	0x20000160
 80274d0:	0802c19c 	.word	0x0802c19c
 80274d4:	0802c1a9 	.word	0x0802c1a9
 80274d8:	0802c1d7 	.word	0x0802c1d7

080274dc <atexit>:
 80274dc:	2300      	movs	r3, #0
 80274de:	4601      	mov	r1, r0
 80274e0:	461a      	mov	r2, r3
 80274e2:	4618      	mov	r0, r3
 80274e4:	f000 bb16 	b.w	8027b14 <__register_exitproc>

080274e8 <malloc>:
 80274e8:	4b02      	ldr	r3, [pc, #8]	; (80274f4 <malloc+0xc>)
 80274ea:	4601      	mov	r1, r0
 80274ec:	6818      	ldr	r0, [r3, #0]
 80274ee:	f000 b82b 	b.w	8027548 <_malloc_r>
 80274f2:	bf00      	nop
 80274f4:	20000160 	.word	0x20000160

080274f8 <free>:
 80274f8:	4b02      	ldr	r3, [pc, #8]	; (8027504 <free+0xc>)
 80274fa:	4601      	mov	r1, r0
 80274fc:	6818      	ldr	r0, [r3, #0]
 80274fe:	f000 bb67 	b.w	8027bd0 <_free_r>
 8027502:	bf00      	nop
 8027504:	20000160 	.word	0x20000160

08027508 <sbrk_aligned>:
 8027508:	b570      	push	{r4, r5, r6, lr}
 802750a:	4e0e      	ldr	r6, [pc, #56]	; (8027544 <sbrk_aligned+0x3c>)
 802750c:	460c      	mov	r4, r1
 802750e:	6831      	ldr	r1, [r6, #0]
 8027510:	4605      	mov	r5, r0
 8027512:	b911      	cbnz	r1, 802751a <sbrk_aligned+0x12>
 8027514:	f000 faa0 	bl	8027a58 <_sbrk_r>
 8027518:	6030      	str	r0, [r6, #0]
 802751a:	4621      	mov	r1, r4
 802751c:	4628      	mov	r0, r5
 802751e:	f000 fa9b 	bl	8027a58 <_sbrk_r>
 8027522:	1c43      	adds	r3, r0, #1
 8027524:	d00a      	beq.n	802753c <sbrk_aligned+0x34>
 8027526:	1cc4      	adds	r4, r0, #3
 8027528:	f024 0403 	bic.w	r4, r4, #3
 802752c:	42a0      	cmp	r0, r4
 802752e:	d007      	beq.n	8027540 <sbrk_aligned+0x38>
 8027530:	1a21      	subs	r1, r4, r0
 8027532:	4628      	mov	r0, r5
 8027534:	f000 fa90 	bl	8027a58 <_sbrk_r>
 8027538:	3001      	adds	r0, #1
 802753a:	d101      	bne.n	8027540 <sbrk_aligned+0x38>
 802753c:	f04f 34ff 	mov.w	r4, #4294967295
 8027540:	4620      	mov	r0, r4
 8027542:	bd70      	pop	{r4, r5, r6, pc}
 8027544:	20014114 	.word	0x20014114

08027548 <_malloc_r>:
 8027548:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802754c:	1ccd      	adds	r5, r1, #3
 802754e:	f025 0503 	bic.w	r5, r5, #3
 8027552:	3508      	adds	r5, #8
 8027554:	2d0c      	cmp	r5, #12
 8027556:	bf38      	it	cc
 8027558:	250c      	movcc	r5, #12
 802755a:	2d00      	cmp	r5, #0
 802755c:	4607      	mov	r7, r0
 802755e:	db01      	blt.n	8027564 <_malloc_r+0x1c>
 8027560:	42a9      	cmp	r1, r5
 8027562:	d905      	bls.n	8027570 <_malloc_r+0x28>
 8027564:	230c      	movs	r3, #12
 8027566:	603b      	str	r3, [r7, #0]
 8027568:	2600      	movs	r6, #0
 802756a:	4630      	mov	r0, r6
 802756c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8027570:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8027644 <_malloc_r+0xfc>
 8027574:	f000 f868 	bl	8027648 <__malloc_lock>
 8027578:	f8d8 3000 	ldr.w	r3, [r8]
 802757c:	461c      	mov	r4, r3
 802757e:	bb5c      	cbnz	r4, 80275d8 <_malloc_r+0x90>
 8027580:	4629      	mov	r1, r5
 8027582:	4638      	mov	r0, r7
 8027584:	f7ff ffc0 	bl	8027508 <sbrk_aligned>
 8027588:	1c43      	adds	r3, r0, #1
 802758a:	4604      	mov	r4, r0
 802758c:	d155      	bne.n	802763a <_malloc_r+0xf2>
 802758e:	f8d8 4000 	ldr.w	r4, [r8]
 8027592:	4626      	mov	r6, r4
 8027594:	2e00      	cmp	r6, #0
 8027596:	d145      	bne.n	8027624 <_malloc_r+0xdc>
 8027598:	2c00      	cmp	r4, #0
 802759a:	d048      	beq.n	802762e <_malloc_r+0xe6>
 802759c:	6823      	ldr	r3, [r4, #0]
 802759e:	4631      	mov	r1, r6
 80275a0:	4638      	mov	r0, r7
 80275a2:	eb04 0903 	add.w	r9, r4, r3
 80275a6:	f000 fa57 	bl	8027a58 <_sbrk_r>
 80275aa:	4581      	cmp	r9, r0
 80275ac:	d13f      	bne.n	802762e <_malloc_r+0xe6>
 80275ae:	6821      	ldr	r1, [r4, #0]
 80275b0:	1a6d      	subs	r5, r5, r1
 80275b2:	4629      	mov	r1, r5
 80275b4:	4638      	mov	r0, r7
 80275b6:	f7ff ffa7 	bl	8027508 <sbrk_aligned>
 80275ba:	3001      	adds	r0, #1
 80275bc:	d037      	beq.n	802762e <_malloc_r+0xe6>
 80275be:	6823      	ldr	r3, [r4, #0]
 80275c0:	442b      	add	r3, r5
 80275c2:	6023      	str	r3, [r4, #0]
 80275c4:	f8d8 3000 	ldr.w	r3, [r8]
 80275c8:	2b00      	cmp	r3, #0
 80275ca:	d038      	beq.n	802763e <_malloc_r+0xf6>
 80275cc:	685a      	ldr	r2, [r3, #4]
 80275ce:	42a2      	cmp	r2, r4
 80275d0:	d12b      	bne.n	802762a <_malloc_r+0xe2>
 80275d2:	2200      	movs	r2, #0
 80275d4:	605a      	str	r2, [r3, #4]
 80275d6:	e00f      	b.n	80275f8 <_malloc_r+0xb0>
 80275d8:	6822      	ldr	r2, [r4, #0]
 80275da:	1b52      	subs	r2, r2, r5
 80275dc:	d41f      	bmi.n	802761e <_malloc_r+0xd6>
 80275de:	2a0b      	cmp	r2, #11
 80275e0:	d917      	bls.n	8027612 <_malloc_r+0xca>
 80275e2:	1961      	adds	r1, r4, r5
 80275e4:	42a3      	cmp	r3, r4
 80275e6:	6025      	str	r5, [r4, #0]
 80275e8:	bf18      	it	ne
 80275ea:	6059      	strne	r1, [r3, #4]
 80275ec:	6863      	ldr	r3, [r4, #4]
 80275ee:	bf08      	it	eq
 80275f0:	f8c8 1000 	streq.w	r1, [r8]
 80275f4:	5162      	str	r2, [r4, r5]
 80275f6:	604b      	str	r3, [r1, #4]
 80275f8:	4638      	mov	r0, r7
 80275fa:	f104 060b 	add.w	r6, r4, #11
 80275fe:	f000 f829 	bl	8027654 <__malloc_unlock>
 8027602:	f026 0607 	bic.w	r6, r6, #7
 8027606:	1d23      	adds	r3, r4, #4
 8027608:	1af2      	subs	r2, r6, r3
 802760a:	d0ae      	beq.n	802756a <_malloc_r+0x22>
 802760c:	1b9b      	subs	r3, r3, r6
 802760e:	50a3      	str	r3, [r4, r2]
 8027610:	e7ab      	b.n	802756a <_malloc_r+0x22>
 8027612:	42a3      	cmp	r3, r4
 8027614:	6862      	ldr	r2, [r4, #4]
 8027616:	d1dd      	bne.n	80275d4 <_malloc_r+0x8c>
 8027618:	f8c8 2000 	str.w	r2, [r8]
 802761c:	e7ec      	b.n	80275f8 <_malloc_r+0xb0>
 802761e:	4623      	mov	r3, r4
 8027620:	6864      	ldr	r4, [r4, #4]
 8027622:	e7ac      	b.n	802757e <_malloc_r+0x36>
 8027624:	4634      	mov	r4, r6
 8027626:	6876      	ldr	r6, [r6, #4]
 8027628:	e7b4      	b.n	8027594 <_malloc_r+0x4c>
 802762a:	4613      	mov	r3, r2
 802762c:	e7cc      	b.n	80275c8 <_malloc_r+0x80>
 802762e:	230c      	movs	r3, #12
 8027630:	603b      	str	r3, [r7, #0]
 8027632:	4638      	mov	r0, r7
 8027634:	f000 f80e 	bl	8027654 <__malloc_unlock>
 8027638:	e797      	b.n	802756a <_malloc_r+0x22>
 802763a:	6025      	str	r5, [r4, #0]
 802763c:	e7dc      	b.n	80275f8 <_malloc_r+0xb0>
 802763e:	605b      	str	r3, [r3, #4]
 8027640:	deff      	udf	#255	; 0xff
 8027642:	bf00      	nop
 8027644:	20014110 	.word	0x20014110

08027648 <__malloc_lock>:
 8027648:	4801      	ldr	r0, [pc, #4]	; (8027650 <__malloc_lock+0x8>)
 802764a:	f000 ba52 	b.w	8027af2 <__retarget_lock_acquire_recursive>
 802764e:	bf00      	nop
 8027650:	20014259 	.word	0x20014259

08027654 <__malloc_unlock>:
 8027654:	4801      	ldr	r0, [pc, #4]	; (802765c <__malloc_unlock+0x8>)
 8027656:	f000 ba4d 	b.w	8027af4 <__retarget_lock_release_recursive>
 802765a:	bf00      	nop
 802765c:	20014259 	.word	0x20014259

08027660 <__cxa_atexit>:
 8027660:	b510      	push	{r4, lr}
 8027662:	4c05      	ldr	r4, [pc, #20]	; (8027678 <__cxa_atexit+0x18>)
 8027664:	4613      	mov	r3, r2
 8027666:	b12c      	cbz	r4, 8027674 <__cxa_atexit+0x14>
 8027668:	460a      	mov	r2, r1
 802766a:	4601      	mov	r1, r0
 802766c:	2002      	movs	r0, #2
 802766e:	f000 fa51 	bl	8027b14 <__register_exitproc>
 8027672:	bd10      	pop	{r4, pc}
 8027674:	4620      	mov	r0, r4
 8027676:	e7fc      	b.n	8027672 <__cxa_atexit+0x12>
 8027678:	08027b15 	.word	0x08027b15

0802767c <std>:
 802767c:	2300      	movs	r3, #0
 802767e:	b510      	push	{r4, lr}
 8027680:	4604      	mov	r4, r0
 8027682:	e9c0 3300 	strd	r3, r3, [r0]
 8027686:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802768a:	6083      	str	r3, [r0, #8]
 802768c:	8181      	strh	r1, [r0, #12]
 802768e:	6643      	str	r3, [r0, #100]	; 0x64
 8027690:	81c2      	strh	r2, [r0, #14]
 8027692:	6183      	str	r3, [r0, #24]
 8027694:	4619      	mov	r1, r3
 8027696:	2208      	movs	r2, #8
 8027698:	305c      	adds	r0, #92	; 0x5c
 802769a:	f000 f906 	bl	80278aa <memset>
 802769e:	4b0d      	ldr	r3, [pc, #52]	; (80276d4 <std+0x58>)
 80276a0:	6263      	str	r3, [r4, #36]	; 0x24
 80276a2:	4b0d      	ldr	r3, [pc, #52]	; (80276d8 <std+0x5c>)
 80276a4:	62a3      	str	r3, [r4, #40]	; 0x28
 80276a6:	4b0d      	ldr	r3, [pc, #52]	; (80276dc <std+0x60>)
 80276a8:	62e3      	str	r3, [r4, #44]	; 0x2c
 80276aa:	4b0d      	ldr	r3, [pc, #52]	; (80276e0 <std+0x64>)
 80276ac:	6323      	str	r3, [r4, #48]	; 0x30
 80276ae:	4b0d      	ldr	r3, [pc, #52]	; (80276e4 <std+0x68>)
 80276b0:	6224      	str	r4, [r4, #32]
 80276b2:	429c      	cmp	r4, r3
 80276b4:	d006      	beq.n	80276c4 <std+0x48>
 80276b6:	f103 0268 	add.w	r2, r3, #104	; 0x68
 80276ba:	4294      	cmp	r4, r2
 80276bc:	d002      	beq.n	80276c4 <std+0x48>
 80276be:	33d0      	adds	r3, #208	; 0xd0
 80276c0:	429c      	cmp	r4, r3
 80276c2:	d105      	bne.n	80276d0 <std+0x54>
 80276c4:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80276c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80276cc:	f000 ba10 	b.w	8027af0 <__retarget_lock_init_recursive>
 80276d0:	bd10      	pop	{r4, pc}
 80276d2:	bf00      	nop
 80276d4:	08027825 	.word	0x08027825
 80276d8:	08027847 	.word	0x08027847
 80276dc:	0802787f 	.word	0x0802787f
 80276e0:	080278a3 	.word	0x080278a3
 80276e4:	20014118 	.word	0x20014118

080276e8 <stdio_exit_handler>:
 80276e8:	4a02      	ldr	r2, [pc, #8]	; (80276f4 <stdio_exit_handler+0xc>)
 80276ea:	4903      	ldr	r1, [pc, #12]	; (80276f8 <stdio_exit_handler+0x10>)
 80276ec:	4803      	ldr	r0, [pc, #12]	; (80276fc <stdio_exit_handler+0x14>)
 80276ee:	f000 b87b 	b.w	80277e8 <_fwalk_sglue>
 80276f2:	bf00      	nop
 80276f4:	20000108 	.word	0x20000108
 80276f8:	0802831d 	.word	0x0802831d
 80276fc:	20000114 	.word	0x20000114

08027700 <cleanup_stdio>:
 8027700:	6841      	ldr	r1, [r0, #4]
 8027702:	4b0c      	ldr	r3, [pc, #48]	; (8027734 <cleanup_stdio+0x34>)
 8027704:	4299      	cmp	r1, r3
 8027706:	b510      	push	{r4, lr}
 8027708:	4604      	mov	r4, r0
 802770a:	d001      	beq.n	8027710 <cleanup_stdio+0x10>
 802770c:	f000 fe06 	bl	802831c <_fflush_r>
 8027710:	68a1      	ldr	r1, [r4, #8]
 8027712:	4b09      	ldr	r3, [pc, #36]	; (8027738 <cleanup_stdio+0x38>)
 8027714:	4299      	cmp	r1, r3
 8027716:	d002      	beq.n	802771e <cleanup_stdio+0x1e>
 8027718:	4620      	mov	r0, r4
 802771a:	f000 fdff 	bl	802831c <_fflush_r>
 802771e:	68e1      	ldr	r1, [r4, #12]
 8027720:	4b06      	ldr	r3, [pc, #24]	; (802773c <cleanup_stdio+0x3c>)
 8027722:	4299      	cmp	r1, r3
 8027724:	d004      	beq.n	8027730 <cleanup_stdio+0x30>
 8027726:	4620      	mov	r0, r4
 8027728:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802772c:	f000 bdf6 	b.w	802831c <_fflush_r>
 8027730:	bd10      	pop	{r4, pc}
 8027732:	bf00      	nop
 8027734:	20014118 	.word	0x20014118
 8027738:	20014180 	.word	0x20014180
 802773c:	200141e8 	.word	0x200141e8

08027740 <global_stdio_init.part.0>:
 8027740:	b510      	push	{r4, lr}
 8027742:	4b0b      	ldr	r3, [pc, #44]	; (8027770 <global_stdio_init.part.0+0x30>)
 8027744:	4c0b      	ldr	r4, [pc, #44]	; (8027774 <global_stdio_init.part.0+0x34>)
 8027746:	4a0c      	ldr	r2, [pc, #48]	; (8027778 <global_stdio_init.part.0+0x38>)
 8027748:	601a      	str	r2, [r3, #0]
 802774a:	4620      	mov	r0, r4
 802774c:	2200      	movs	r2, #0
 802774e:	2104      	movs	r1, #4
 8027750:	f7ff ff94 	bl	802767c <std>
 8027754:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8027758:	2201      	movs	r2, #1
 802775a:	2109      	movs	r1, #9
 802775c:	f7ff ff8e 	bl	802767c <std>
 8027760:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8027764:	2202      	movs	r2, #2
 8027766:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802776a:	2112      	movs	r1, #18
 802776c:	f7ff bf86 	b.w	802767c <std>
 8027770:	20014250 	.word	0x20014250
 8027774:	20014118 	.word	0x20014118
 8027778:	080276e9 	.word	0x080276e9

0802777c <__sfp_lock_acquire>:
 802777c:	4801      	ldr	r0, [pc, #4]	; (8027784 <__sfp_lock_acquire+0x8>)
 802777e:	f000 b9b8 	b.w	8027af2 <__retarget_lock_acquire_recursive>
 8027782:	bf00      	nop
 8027784:	2001425a 	.word	0x2001425a

08027788 <__sfp_lock_release>:
 8027788:	4801      	ldr	r0, [pc, #4]	; (8027790 <__sfp_lock_release+0x8>)
 802778a:	f000 b9b3 	b.w	8027af4 <__retarget_lock_release_recursive>
 802778e:	bf00      	nop
 8027790:	2001425a 	.word	0x2001425a

08027794 <__sinit>:
 8027794:	b510      	push	{r4, lr}
 8027796:	4604      	mov	r4, r0
 8027798:	f7ff fff0 	bl	802777c <__sfp_lock_acquire>
 802779c:	6a23      	ldr	r3, [r4, #32]
 802779e:	b11b      	cbz	r3, 80277a8 <__sinit+0x14>
 80277a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80277a4:	f7ff bff0 	b.w	8027788 <__sfp_lock_release>
 80277a8:	4b04      	ldr	r3, [pc, #16]	; (80277bc <__sinit+0x28>)
 80277aa:	6223      	str	r3, [r4, #32]
 80277ac:	4b04      	ldr	r3, [pc, #16]	; (80277c0 <__sinit+0x2c>)
 80277ae:	681b      	ldr	r3, [r3, #0]
 80277b0:	2b00      	cmp	r3, #0
 80277b2:	d1f5      	bne.n	80277a0 <__sinit+0xc>
 80277b4:	f7ff ffc4 	bl	8027740 <global_stdio_init.part.0>
 80277b8:	e7f2      	b.n	80277a0 <__sinit+0xc>
 80277ba:	bf00      	nop
 80277bc:	08027701 	.word	0x08027701
 80277c0:	20014250 	.word	0x20014250

080277c4 <fiprintf>:
 80277c4:	b40e      	push	{r1, r2, r3}
 80277c6:	b503      	push	{r0, r1, lr}
 80277c8:	4601      	mov	r1, r0
 80277ca:	ab03      	add	r3, sp, #12
 80277cc:	4805      	ldr	r0, [pc, #20]	; (80277e4 <fiprintf+0x20>)
 80277ce:	f853 2b04 	ldr.w	r2, [r3], #4
 80277d2:	6800      	ldr	r0, [r0, #0]
 80277d4:	9301      	str	r3, [sp, #4]
 80277d6:	f000 fa71 	bl	8027cbc <_vfiprintf_r>
 80277da:	b002      	add	sp, #8
 80277dc:	f85d eb04 	ldr.w	lr, [sp], #4
 80277e0:	b003      	add	sp, #12
 80277e2:	4770      	bx	lr
 80277e4:	20000160 	.word	0x20000160

080277e8 <_fwalk_sglue>:
 80277e8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80277ec:	4607      	mov	r7, r0
 80277ee:	4688      	mov	r8, r1
 80277f0:	4614      	mov	r4, r2
 80277f2:	2600      	movs	r6, #0
 80277f4:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80277f8:	f1b9 0901 	subs.w	r9, r9, #1
 80277fc:	d505      	bpl.n	802780a <_fwalk_sglue+0x22>
 80277fe:	6824      	ldr	r4, [r4, #0]
 8027800:	2c00      	cmp	r4, #0
 8027802:	d1f7      	bne.n	80277f4 <_fwalk_sglue+0xc>
 8027804:	4630      	mov	r0, r6
 8027806:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802780a:	89ab      	ldrh	r3, [r5, #12]
 802780c:	2b01      	cmp	r3, #1
 802780e:	d907      	bls.n	8027820 <_fwalk_sglue+0x38>
 8027810:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8027814:	3301      	adds	r3, #1
 8027816:	d003      	beq.n	8027820 <_fwalk_sglue+0x38>
 8027818:	4629      	mov	r1, r5
 802781a:	4638      	mov	r0, r7
 802781c:	47c0      	blx	r8
 802781e:	4306      	orrs	r6, r0
 8027820:	3568      	adds	r5, #104	; 0x68
 8027822:	e7e9      	b.n	80277f8 <_fwalk_sglue+0x10>

08027824 <__sread>:
 8027824:	b510      	push	{r4, lr}
 8027826:	460c      	mov	r4, r1
 8027828:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802782c:	f000 f8ee 	bl	8027a0c <_read_r>
 8027830:	2800      	cmp	r0, #0
 8027832:	bfab      	itete	ge
 8027834:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8027836:	89a3      	ldrhlt	r3, [r4, #12]
 8027838:	181b      	addge	r3, r3, r0
 802783a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802783e:	bfac      	ite	ge
 8027840:	6563      	strge	r3, [r4, #84]	; 0x54
 8027842:	81a3      	strhlt	r3, [r4, #12]
 8027844:	bd10      	pop	{r4, pc}

08027846 <__swrite>:
 8027846:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802784a:	461f      	mov	r7, r3
 802784c:	898b      	ldrh	r3, [r1, #12]
 802784e:	05db      	lsls	r3, r3, #23
 8027850:	4605      	mov	r5, r0
 8027852:	460c      	mov	r4, r1
 8027854:	4616      	mov	r6, r2
 8027856:	d505      	bpl.n	8027864 <__swrite+0x1e>
 8027858:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802785c:	2302      	movs	r3, #2
 802785e:	2200      	movs	r2, #0
 8027860:	f000 f8c2 	bl	80279e8 <_lseek_r>
 8027864:	89a3      	ldrh	r3, [r4, #12]
 8027866:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802786a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802786e:	81a3      	strh	r3, [r4, #12]
 8027870:	4632      	mov	r2, r6
 8027872:	463b      	mov	r3, r7
 8027874:	4628      	mov	r0, r5
 8027876:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802787a:	f000 b8fd 	b.w	8027a78 <_write_r>

0802787e <__sseek>:
 802787e:	b510      	push	{r4, lr}
 8027880:	460c      	mov	r4, r1
 8027882:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8027886:	f000 f8af 	bl	80279e8 <_lseek_r>
 802788a:	1c43      	adds	r3, r0, #1
 802788c:	89a3      	ldrh	r3, [r4, #12]
 802788e:	bf15      	itete	ne
 8027890:	6560      	strne	r0, [r4, #84]	; 0x54
 8027892:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8027896:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802789a:	81a3      	strheq	r3, [r4, #12]
 802789c:	bf18      	it	ne
 802789e:	81a3      	strhne	r3, [r4, #12]
 80278a0:	bd10      	pop	{r4, pc}

080278a2 <__sclose>:
 80278a2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80278a6:	f000 b839 	b.w	802791c <_close_r>

080278aa <memset>:
 80278aa:	4402      	add	r2, r0
 80278ac:	4603      	mov	r3, r0
 80278ae:	4293      	cmp	r3, r2
 80278b0:	d100      	bne.n	80278b4 <memset+0xa>
 80278b2:	4770      	bx	lr
 80278b4:	f803 1b01 	strb.w	r1, [r3], #1
 80278b8:	e7f9      	b.n	80278ae <memset+0x4>

080278ba <_raise_r>:
 80278ba:	291f      	cmp	r1, #31
 80278bc:	b538      	push	{r3, r4, r5, lr}
 80278be:	4604      	mov	r4, r0
 80278c0:	460d      	mov	r5, r1
 80278c2:	d904      	bls.n	80278ce <_raise_r+0x14>
 80278c4:	2316      	movs	r3, #22
 80278c6:	6003      	str	r3, [r0, #0]
 80278c8:	f04f 30ff 	mov.w	r0, #4294967295
 80278cc:	bd38      	pop	{r3, r4, r5, pc}
 80278ce:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 80278d0:	b112      	cbz	r2, 80278d8 <_raise_r+0x1e>
 80278d2:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80278d6:	b94b      	cbnz	r3, 80278ec <_raise_r+0x32>
 80278d8:	4620      	mov	r0, r4
 80278da:	f000 f8bb 	bl	8027a54 <_getpid_r>
 80278de:	462a      	mov	r2, r5
 80278e0:	4601      	mov	r1, r0
 80278e2:	4620      	mov	r0, r4
 80278e4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80278e8:	f000 b8a2 	b.w	8027a30 <_kill_r>
 80278ec:	2b01      	cmp	r3, #1
 80278ee:	d00a      	beq.n	8027906 <_raise_r+0x4c>
 80278f0:	1c59      	adds	r1, r3, #1
 80278f2:	d103      	bne.n	80278fc <_raise_r+0x42>
 80278f4:	2316      	movs	r3, #22
 80278f6:	6003      	str	r3, [r0, #0]
 80278f8:	2001      	movs	r0, #1
 80278fa:	e7e7      	b.n	80278cc <_raise_r+0x12>
 80278fc:	2400      	movs	r4, #0
 80278fe:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8027902:	4628      	mov	r0, r5
 8027904:	4798      	blx	r3
 8027906:	2000      	movs	r0, #0
 8027908:	e7e0      	b.n	80278cc <_raise_r+0x12>
	...

0802790c <raise>:
 802790c:	4b02      	ldr	r3, [pc, #8]	; (8027918 <raise+0xc>)
 802790e:	4601      	mov	r1, r0
 8027910:	6818      	ldr	r0, [r3, #0]
 8027912:	f7ff bfd2 	b.w	80278ba <_raise_r>
 8027916:	bf00      	nop
 8027918:	20000160 	.word	0x20000160

0802791c <_close_r>:
 802791c:	b538      	push	{r3, r4, r5, lr}
 802791e:	4d06      	ldr	r5, [pc, #24]	; (8027938 <_close_r+0x1c>)
 8027920:	2300      	movs	r3, #0
 8027922:	4604      	mov	r4, r0
 8027924:	4608      	mov	r0, r1
 8027926:	602b      	str	r3, [r5, #0]
 8027928:	f7da fc56 	bl	80021d8 <_close>
 802792c:	1c43      	adds	r3, r0, #1
 802792e:	d102      	bne.n	8027936 <_close_r+0x1a>
 8027930:	682b      	ldr	r3, [r5, #0]
 8027932:	b103      	cbz	r3, 8027936 <_close_r+0x1a>
 8027934:	6023      	str	r3, [r4, #0]
 8027936:	bd38      	pop	{r3, r4, r5, pc}
 8027938:	20014254 	.word	0x20014254

0802793c <_reclaim_reent>:
 802793c:	4b29      	ldr	r3, [pc, #164]	; (80279e4 <_reclaim_reent+0xa8>)
 802793e:	681b      	ldr	r3, [r3, #0]
 8027940:	4283      	cmp	r3, r0
 8027942:	b570      	push	{r4, r5, r6, lr}
 8027944:	4604      	mov	r4, r0
 8027946:	d04b      	beq.n	80279e0 <_reclaim_reent+0xa4>
 8027948:	69c3      	ldr	r3, [r0, #28]
 802794a:	b143      	cbz	r3, 802795e <_reclaim_reent+0x22>
 802794c:	68db      	ldr	r3, [r3, #12]
 802794e:	2b00      	cmp	r3, #0
 8027950:	d144      	bne.n	80279dc <_reclaim_reent+0xa0>
 8027952:	69e3      	ldr	r3, [r4, #28]
 8027954:	6819      	ldr	r1, [r3, #0]
 8027956:	b111      	cbz	r1, 802795e <_reclaim_reent+0x22>
 8027958:	4620      	mov	r0, r4
 802795a:	f000 f939 	bl	8027bd0 <_free_r>
 802795e:	6961      	ldr	r1, [r4, #20]
 8027960:	b111      	cbz	r1, 8027968 <_reclaim_reent+0x2c>
 8027962:	4620      	mov	r0, r4
 8027964:	f000 f934 	bl	8027bd0 <_free_r>
 8027968:	69e1      	ldr	r1, [r4, #28]
 802796a:	b111      	cbz	r1, 8027972 <_reclaim_reent+0x36>
 802796c:	4620      	mov	r0, r4
 802796e:	f000 f92f 	bl	8027bd0 <_free_r>
 8027972:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8027974:	b111      	cbz	r1, 802797c <_reclaim_reent+0x40>
 8027976:	4620      	mov	r0, r4
 8027978:	f000 f92a 	bl	8027bd0 <_free_r>
 802797c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802797e:	b111      	cbz	r1, 8027986 <_reclaim_reent+0x4a>
 8027980:	4620      	mov	r0, r4
 8027982:	f000 f925 	bl	8027bd0 <_free_r>
 8027986:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8027988:	b111      	cbz	r1, 8027990 <_reclaim_reent+0x54>
 802798a:	4620      	mov	r0, r4
 802798c:	f000 f920 	bl	8027bd0 <_free_r>
 8027990:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8027992:	b111      	cbz	r1, 802799a <_reclaim_reent+0x5e>
 8027994:	4620      	mov	r0, r4
 8027996:	f000 f91b 	bl	8027bd0 <_free_r>
 802799a:	6c61      	ldr	r1, [r4, #68]	; 0x44
 802799c:	b111      	cbz	r1, 80279a4 <_reclaim_reent+0x68>
 802799e:	4620      	mov	r0, r4
 80279a0:	f000 f916 	bl	8027bd0 <_free_r>
 80279a4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80279a6:	b111      	cbz	r1, 80279ae <_reclaim_reent+0x72>
 80279a8:	4620      	mov	r0, r4
 80279aa:	f000 f911 	bl	8027bd0 <_free_r>
 80279ae:	6a23      	ldr	r3, [r4, #32]
 80279b0:	b1b3      	cbz	r3, 80279e0 <_reclaim_reent+0xa4>
 80279b2:	4620      	mov	r0, r4
 80279b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80279b8:	4718      	bx	r3
 80279ba:	5949      	ldr	r1, [r1, r5]
 80279bc:	b941      	cbnz	r1, 80279d0 <_reclaim_reent+0x94>
 80279be:	3504      	adds	r5, #4
 80279c0:	69e3      	ldr	r3, [r4, #28]
 80279c2:	2d80      	cmp	r5, #128	; 0x80
 80279c4:	68d9      	ldr	r1, [r3, #12]
 80279c6:	d1f8      	bne.n	80279ba <_reclaim_reent+0x7e>
 80279c8:	4620      	mov	r0, r4
 80279ca:	f000 f901 	bl	8027bd0 <_free_r>
 80279ce:	e7c0      	b.n	8027952 <_reclaim_reent+0x16>
 80279d0:	680e      	ldr	r6, [r1, #0]
 80279d2:	4620      	mov	r0, r4
 80279d4:	f000 f8fc 	bl	8027bd0 <_free_r>
 80279d8:	4631      	mov	r1, r6
 80279da:	e7ef      	b.n	80279bc <_reclaim_reent+0x80>
 80279dc:	2500      	movs	r5, #0
 80279de:	e7ef      	b.n	80279c0 <_reclaim_reent+0x84>
 80279e0:	bd70      	pop	{r4, r5, r6, pc}
 80279e2:	bf00      	nop
 80279e4:	20000160 	.word	0x20000160

080279e8 <_lseek_r>:
 80279e8:	b538      	push	{r3, r4, r5, lr}
 80279ea:	4d07      	ldr	r5, [pc, #28]	; (8027a08 <_lseek_r+0x20>)
 80279ec:	4604      	mov	r4, r0
 80279ee:	4608      	mov	r0, r1
 80279f0:	4611      	mov	r1, r2
 80279f2:	2200      	movs	r2, #0
 80279f4:	602a      	str	r2, [r5, #0]
 80279f6:	461a      	mov	r2, r3
 80279f8:	f7da fbfa 	bl	80021f0 <_lseek>
 80279fc:	1c43      	adds	r3, r0, #1
 80279fe:	d102      	bne.n	8027a06 <_lseek_r+0x1e>
 8027a00:	682b      	ldr	r3, [r5, #0]
 8027a02:	b103      	cbz	r3, 8027a06 <_lseek_r+0x1e>
 8027a04:	6023      	str	r3, [r4, #0]
 8027a06:	bd38      	pop	{r3, r4, r5, pc}
 8027a08:	20014254 	.word	0x20014254

08027a0c <_read_r>:
 8027a0c:	b538      	push	{r3, r4, r5, lr}
 8027a0e:	4d07      	ldr	r5, [pc, #28]	; (8027a2c <_read_r+0x20>)
 8027a10:	4604      	mov	r4, r0
 8027a12:	4608      	mov	r0, r1
 8027a14:	4611      	mov	r1, r2
 8027a16:	2200      	movs	r2, #0
 8027a18:	602a      	str	r2, [r5, #0]
 8027a1a:	461a      	mov	r2, r3
 8027a1c:	f7da fbc0 	bl	80021a0 <_read>
 8027a20:	1c43      	adds	r3, r0, #1
 8027a22:	d102      	bne.n	8027a2a <_read_r+0x1e>
 8027a24:	682b      	ldr	r3, [r5, #0]
 8027a26:	b103      	cbz	r3, 8027a2a <_read_r+0x1e>
 8027a28:	6023      	str	r3, [r4, #0]
 8027a2a:	bd38      	pop	{r3, r4, r5, pc}
 8027a2c:	20014254 	.word	0x20014254

08027a30 <_kill_r>:
 8027a30:	b538      	push	{r3, r4, r5, lr}
 8027a32:	4d07      	ldr	r5, [pc, #28]	; (8027a50 <_kill_r+0x20>)
 8027a34:	2300      	movs	r3, #0
 8027a36:	4604      	mov	r4, r0
 8027a38:	4608      	mov	r0, r1
 8027a3a:	4611      	mov	r1, r2
 8027a3c:	602b      	str	r3, [r5, #0]
 8027a3e:	f7da fba1 	bl	8002184 <_kill>
 8027a42:	1c43      	adds	r3, r0, #1
 8027a44:	d102      	bne.n	8027a4c <_kill_r+0x1c>
 8027a46:	682b      	ldr	r3, [r5, #0]
 8027a48:	b103      	cbz	r3, 8027a4c <_kill_r+0x1c>
 8027a4a:	6023      	str	r3, [r4, #0]
 8027a4c:	bd38      	pop	{r3, r4, r5, pc}
 8027a4e:	bf00      	nop
 8027a50:	20014254 	.word	0x20014254

08027a54 <_getpid_r>:
 8027a54:	f7da bb94 	b.w	8002180 <_getpid>

08027a58 <_sbrk_r>:
 8027a58:	b538      	push	{r3, r4, r5, lr}
 8027a5a:	4d06      	ldr	r5, [pc, #24]	; (8027a74 <_sbrk_r+0x1c>)
 8027a5c:	2300      	movs	r3, #0
 8027a5e:	4604      	mov	r4, r0
 8027a60:	4608      	mov	r0, r1
 8027a62:	602b      	str	r3, [r5, #0]
 8027a64:	f7da fbc6 	bl	80021f4 <_sbrk>
 8027a68:	1c43      	adds	r3, r0, #1
 8027a6a:	d102      	bne.n	8027a72 <_sbrk_r+0x1a>
 8027a6c:	682b      	ldr	r3, [r5, #0]
 8027a6e:	b103      	cbz	r3, 8027a72 <_sbrk_r+0x1a>
 8027a70:	6023      	str	r3, [r4, #0]
 8027a72:	bd38      	pop	{r3, r4, r5, pc}
 8027a74:	20014254 	.word	0x20014254

08027a78 <_write_r>:
 8027a78:	b538      	push	{r3, r4, r5, lr}
 8027a7a:	4d07      	ldr	r5, [pc, #28]	; (8027a98 <_write_r+0x20>)
 8027a7c:	4604      	mov	r4, r0
 8027a7e:	4608      	mov	r0, r1
 8027a80:	4611      	mov	r1, r2
 8027a82:	2200      	movs	r2, #0
 8027a84:	602a      	str	r2, [r5, #0]
 8027a86:	461a      	mov	r2, r3
 8027a88:	f7da fb98 	bl	80021bc <_write>
 8027a8c:	1c43      	adds	r3, r0, #1
 8027a8e:	d102      	bne.n	8027a96 <_write_r+0x1e>
 8027a90:	682b      	ldr	r3, [r5, #0]
 8027a92:	b103      	cbz	r3, 8027a96 <_write_r+0x1e>
 8027a94:	6023      	str	r3, [r4, #0]
 8027a96:	bd38      	pop	{r3, r4, r5, pc}
 8027a98:	20014254 	.word	0x20014254

08027a9c <__errno>:
 8027a9c:	4b01      	ldr	r3, [pc, #4]	; (8027aa4 <__errno+0x8>)
 8027a9e:	6818      	ldr	r0, [r3, #0]
 8027aa0:	4770      	bx	lr
 8027aa2:	bf00      	nop
 8027aa4:	20000160 	.word	0x20000160

08027aa8 <__libc_init_array>:
 8027aa8:	b570      	push	{r4, r5, r6, lr}
 8027aaa:	4d0d      	ldr	r5, [pc, #52]	; (8027ae0 <__libc_init_array+0x38>)
 8027aac:	4c0d      	ldr	r4, [pc, #52]	; (8027ae4 <__libc_init_array+0x3c>)
 8027aae:	1b64      	subs	r4, r4, r5
 8027ab0:	10a4      	asrs	r4, r4, #2
 8027ab2:	2600      	movs	r6, #0
 8027ab4:	42a6      	cmp	r6, r4
 8027ab6:	d109      	bne.n	8027acc <__libc_init_array+0x24>
 8027ab8:	4d0b      	ldr	r5, [pc, #44]	; (8027ae8 <__libc_init_array+0x40>)
 8027aba:	4c0c      	ldr	r4, [pc, #48]	; (8027aec <__libc_init_array+0x44>)
 8027abc:	f000 fd70 	bl	80285a0 <_init>
 8027ac0:	1b64      	subs	r4, r4, r5
 8027ac2:	10a4      	asrs	r4, r4, #2
 8027ac4:	2600      	movs	r6, #0
 8027ac6:	42a6      	cmp	r6, r4
 8027ac8:	d105      	bne.n	8027ad6 <__libc_init_array+0x2e>
 8027aca:	bd70      	pop	{r4, r5, r6, pc}
 8027acc:	f855 3b04 	ldr.w	r3, [r5], #4
 8027ad0:	4798      	blx	r3
 8027ad2:	3601      	adds	r6, #1
 8027ad4:	e7ee      	b.n	8027ab4 <__libc_init_array+0xc>
 8027ad6:	f855 3b04 	ldr.w	r3, [r5], #4
 8027ada:	4798      	blx	r3
 8027adc:	3601      	adds	r6, #1
 8027ade:	e7f2      	b.n	8027ac6 <__libc_init_array+0x1e>
 8027ae0:	08147a74 	.word	0x08147a74
 8027ae4:	08147a74 	.word	0x08147a74
 8027ae8:	08147a74 	.word	0x08147a74
 8027aec:	08147a88 	.word	0x08147a88

08027af0 <__retarget_lock_init_recursive>:
 8027af0:	4770      	bx	lr

08027af2 <__retarget_lock_acquire_recursive>:
 8027af2:	4770      	bx	lr

08027af4 <__retarget_lock_release_recursive>:
 8027af4:	4770      	bx	lr

08027af6 <memcpy>:
 8027af6:	440a      	add	r2, r1
 8027af8:	4291      	cmp	r1, r2
 8027afa:	f100 33ff 	add.w	r3, r0, #4294967295
 8027afe:	d100      	bne.n	8027b02 <memcpy+0xc>
 8027b00:	4770      	bx	lr
 8027b02:	b510      	push	{r4, lr}
 8027b04:	f811 4b01 	ldrb.w	r4, [r1], #1
 8027b08:	f803 4f01 	strb.w	r4, [r3, #1]!
 8027b0c:	4291      	cmp	r1, r2
 8027b0e:	d1f9      	bne.n	8027b04 <memcpy+0xe>
 8027b10:	bd10      	pop	{r4, pc}
	...

08027b14 <__register_exitproc>:
 8027b14:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8027b18:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8027bcc <__register_exitproc+0xb8>
 8027b1c:	4606      	mov	r6, r0
 8027b1e:	f8d8 0000 	ldr.w	r0, [r8]
 8027b22:	461f      	mov	r7, r3
 8027b24:	460d      	mov	r5, r1
 8027b26:	4691      	mov	r9, r2
 8027b28:	f7ff ffe3 	bl	8027af2 <__retarget_lock_acquire_recursive>
 8027b2c:	4b23      	ldr	r3, [pc, #140]	; (8027bbc <__register_exitproc+0xa8>)
 8027b2e:	681c      	ldr	r4, [r3, #0]
 8027b30:	b934      	cbnz	r4, 8027b40 <__register_exitproc+0x2c>
 8027b32:	4c23      	ldr	r4, [pc, #140]	; (8027bc0 <__register_exitproc+0xac>)
 8027b34:	601c      	str	r4, [r3, #0]
 8027b36:	4b23      	ldr	r3, [pc, #140]	; (8027bc4 <__register_exitproc+0xb0>)
 8027b38:	b113      	cbz	r3, 8027b40 <__register_exitproc+0x2c>
 8027b3a:	681b      	ldr	r3, [r3, #0]
 8027b3c:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 8027b40:	6863      	ldr	r3, [r4, #4]
 8027b42:	2b1f      	cmp	r3, #31
 8027b44:	dd07      	ble.n	8027b56 <__register_exitproc+0x42>
 8027b46:	f8d8 0000 	ldr.w	r0, [r8]
 8027b4a:	f7ff ffd3 	bl	8027af4 <__retarget_lock_release_recursive>
 8027b4e:	f04f 30ff 	mov.w	r0, #4294967295
 8027b52:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8027b56:	b32e      	cbz	r6, 8027ba4 <__register_exitproc+0x90>
 8027b58:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8027b5c:	b968      	cbnz	r0, 8027b7a <__register_exitproc+0x66>
 8027b5e:	4b1a      	ldr	r3, [pc, #104]	; (8027bc8 <__register_exitproc+0xb4>)
 8027b60:	2b00      	cmp	r3, #0
 8027b62:	d0f0      	beq.n	8027b46 <__register_exitproc+0x32>
 8027b64:	f44f 7084 	mov.w	r0, #264	; 0x108
 8027b68:	f7ff fcbe 	bl	80274e8 <malloc>
 8027b6c:	2800      	cmp	r0, #0
 8027b6e:	d0ea      	beq.n	8027b46 <__register_exitproc+0x32>
 8027b70:	2300      	movs	r3, #0
 8027b72:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 8027b76:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 8027b7a:	6863      	ldr	r3, [r4, #4]
 8027b7c:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8027b80:	2201      	movs	r2, #1
 8027b82:	409a      	lsls	r2, r3
 8027b84:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8027b88:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8027b8c:	4313      	orrs	r3, r2
 8027b8e:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 8027b92:	2e02      	cmp	r6, #2
 8027b94:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 8027b98:	bf02      	ittt	eq
 8027b9a:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 8027b9e:	4313      	orreq	r3, r2
 8027ba0:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 8027ba4:	6863      	ldr	r3, [r4, #4]
 8027ba6:	f8d8 0000 	ldr.w	r0, [r8]
 8027baa:	1c5a      	adds	r2, r3, #1
 8027bac:	3302      	adds	r3, #2
 8027bae:	6062      	str	r2, [r4, #4]
 8027bb0:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8027bb4:	f7ff ff9e 	bl	8027af4 <__retarget_lock_release_recursive>
 8027bb8:	2000      	movs	r0, #0
 8027bba:	e7ca      	b.n	8027b52 <__register_exitproc+0x3e>
 8027bbc:	200142e8 	.word	0x200142e8
 8027bc0:	2001425c 	.word	0x2001425c
 8027bc4:	0802c1d8 	.word	0x0802c1d8
 8027bc8:	080274e9 	.word	0x080274e9
 8027bcc:	20000164 	.word	0x20000164

08027bd0 <_free_r>:
 8027bd0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8027bd2:	2900      	cmp	r1, #0
 8027bd4:	d044      	beq.n	8027c60 <_free_r+0x90>
 8027bd6:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8027bda:	9001      	str	r0, [sp, #4]
 8027bdc:	2b00      	cmp	r3, #0
 8027bde:	f1a1 0404 	sub.w	r4, r1, #4
 8027be2:	bfb8      	it	lt
 8027be4:	18e4      	addlt	r4, r4, r3
 8027be6:	f7ff fd2f 	bl	8027648 <__malloc_lock>
 8027bea:	4a1e      	ldr	r2, [pc, #120]	; (8027c64 <_free_r+0x94>)
 8027bec:	9801      	ldr	r0, [sp, #4]
 8027bee:	6813      	ldr	r3, [r2, #0]
 8027bf0:	b933      	cbnz	r3, 8027c00 <_free_r+0x30>
 8027bf2:	6063      	str	r3, [r4, #4]
 8027bf4:	6014      	str	r4, [r2, #0]
 8027bf6:	b003      	add	sp, #12
 8027bf8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8027bfc:	f7ff bd2a 	b.w	8027654 <__malloc_unlock>
 8027c00:	42a3      	cmp	r3, r4
 8027c02:	d908      	bls.n	8027c16 <_free_r+0x46>
 8027c04:	6825      	ldr	r5, [r4, #0]
 8027c06:	1961      	adds	r1, r4, r5
 8027c08:	428b      	cmp	r3, r1
 8027c0a:	bf01      	itttt	eq
 8027c0c:	6819      	ldreq	r1, [r3, #0]
 8027c0e:	685b      	ldreq	r3, [r3, #4]
 8027c10:	1949      	addeq	r1, r1, r5
 8027c12:	6021      	streq	r1, [r4, #0]
 8027c14:	e7ed      	b.n	8027bf2 <_free_r+0x22>
 8027c16:	461a      	mov	r2, r3
 8027c18:	685b      	ldr	r3, [r3, #4]
 8027c1a:	b10b      	cbz	r3, 8027c20 <_free_r+0x50>
 8027c1c:	42a3      	cmp	r3, r4
 8027c1e:	d9fa      	bls.n	8027c16 <_free_r+0x46>
 8027c20:	6811      	ldr	r1, [r2, #0]
 8027c22:	1855      	adds	r5, r2, r1
 8027c24:	42a5      	cmp	r5, r4
 8027c26:	d10b      	bne.n	8027c40 <_free_r+0x70>
 8027c28:	6824      	ldr	r4, [r4, #0]
 8027c2a:	4421      	add	r1, r4
 8027c2c:	1854      	adds	r4, r2, r1
 8027c2e:	42a3      	cmp	r3, r4
 8027c30:	6011      	str	r1, [r2, #0]
 8027c32:	d1e0      	bne.n	8027bf6 <_free_r+0x26>
 8027c34:	681c      	ldr	r4, [r3, #0]
 8027c36:	685b      	ldr	r3, [r3, #4]
 8027c38:	6053      	str	r3, [r2, #4]
 8027c3a:	440c      	add	r4, r1
 8027c3c:	6014      	str	r4, [r2, #0]
 8027c3e:	e7da      	b.n	8027bf6 <_free_r+0x26>
 8027c40:	d902      	bls.n	8027c48 <_free_r+0x78>
 8027c42:	230c      	movs	r3, #12
 8027c44:	6003      	str	r3, [r0, #0]
 8027c46:	e7d6      	b.n	8027bf6 <_free_r+0x26>
 8027c48:	6825      	ldr	r5, [r4, #0]
 8027c4a:	1961      	adds	r1, r4, r5
 8027c4c:	428b      	cmp	r3, r1
 8027c4e:	bf04      	itt	eq
 8027c50:	6819      	ldreq	r1, [r3, #0]
 8027c52:	685b      	ldreq	r3, [r3, #4]
 8027c54:	6063      	str	r3, [r4, #4]
 8027c56:	bf04      	itt	eq
 8027c58:	1949      	addeq	r1, r1, r5
 8027c5a:	6021      	streq	r1, [r4, #0]
 8027c5c:	6054      	str	r4, [r2, #4]
 8027c5e:	e7ca      	b.n	8027bf6 <_free_r+0x26>
 8027c60:	b003      	add	sp, #12
 8027c62:	bd30      	pop	{r4, r5, pc}
 8027c64:	20014110 	.word	0x20014110

08027c68 <__sfputc_r>:
 8027c68:	6893      	ldr	r3, [r2, #8]
 8027c6a:	3b01      	subs	r3, #1
 8027c6c:	2b00      	cmp	r3, #0
 8027c6e:	b410      	push	{r4}
 8027c70:	6093      	str	r3, [r2, #8]
 8027c72:	da08      	bge.n	8027c86 <__sfputc_r+0x1e>
 8027c74:	6994      	ldr	r4, [r2, #24]
 8027c76:	42a3      	cmp	r3, r4
 8027c78:	db01      	blt.n	8027c7e <__sfputc_r+0x16>
 8027c7a:	290a      	cmp	r1, #10
 8027c7c:	d103      	bne.n	8027c86 <__sfputc_r+0x1e>
 8027c7e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8027c82:	f000 bb73 	b.w	802836c <__swbuf_r>
 8027c86:	6813      	ldr	r3, [r2, #0]
 8027c88:	1c58      	adds	r0, r3, #1
 8027c8a:	6010      	str	r0, [r2, #0]
 8027c8c:	7019      	strb	r1, [r3, #0]
 8027c8e:	4608      	mov	r0, r1
 8027c90:	f85d 4b04 	ldr.w	r4, [sp], #4
 8027c94:	4770      	bx	lr

08027c96 <__sfputs_r>:
 8027c96:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8027c98:	4606      	mov	r6, r0
 8027c9a:	460f      	mov	r7, r1
 8027c9c:	4614      	mov	r4, r2
 8027c9e:	18d5      	adds	r5, r2, r3
 8027ca0:	42ac      	cmp	r4, r5
 8027ca2:	d101      	bne.n	8027ca8 <__sfputs_r+0x12>
 8027ca4:	2000      	movs	r0, #0
 8027ca6:	e007      	b.n	8027cb8 <__sfputs_r+0x22>
 8027ca8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8027cac:	463a      	mov	r2, r7
 8027cae:	4630      	mov	r0, r6
 8027cb0:	f7ff ffda 	bl	8027c68 <__sfputc_r>
 8027cb4:	1c43      	adds	r3, r0, #1
 8027cb6:	d1f3      	bne.n	8027ca0 <__sfputs_r+0xa>
 8027cb8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08027cbc <_vfiprintf_r>:
 8027cbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027cc0:	460d      	mov	r5, r1
 8027cc2:	b09d      	sub	sp, #116	; 0x74
 8027cc4:	4614      	mov	r4, r2
 8027cc6:	4698      	mov	r8, r3
 8027cc8:	4606      	mov	r6, r0
 8027cca:	b118      	cbz	r0, 8027cd4 <_vfiprintf_r+0x18>
 8027ccc:	6a03      	ldr	r3, [r0, #32]
 8027cce:	b90b      	cbnz	r3, 8027cd4 <_vfiprintf_r+0x18>
 8027cd0:	f7ff fd60 	bl	8027794 <__sinit>
 8027cd4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8027cd6:	07d9      	lsls	r1, r3, #31
 8027cd8:	d405      	bmi.n	8027ce6 <_vfiprintf_r+0x2a>
 8027cda:	89ab      	ldrh	r3, [r5, #12]
 8027cdc:	059a      	lsls	r2, r3, #22
 8027cde:	d402      	bmi.n	8027ce6 <_vfiprintf_r+0x2a>
 8027ce0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8027ce2:	f7ff ff06 	bl	8027af2 <__retarget_lock_acquire_recursive>
 8027ce6:	89ab      	ldrh	r3, [r5, #12]
 8027ce8:	071b      	lsls	r3, r3, #28
 8027cea:	d501      	bpl.n	8027cf0 <_vfiprintf_r+0x34>
 8027cec:	692b      	ldr	r3, [r5, #16]
 8027cee:	b99b      	cbnz	r3, 8027d18 <_vfiprintf_r+0x5c>
 8027cf0:	4629      	mov	r1, r5
 8027cf2:	4630      	mov	r0, r6
 8027cf4:	f000 fb78 	bl	80283e8 <__swsetup_r>
 8027cf8:	b170      	cbz	r0, 8027d18 <_vfiprintf_r+0x5c>
 8027cfa:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8027cfc:	07dc      	lsls	r4, r3, #31
 8027cfe:	d504      	bpl.n	8027d0a <_vfiprintf_r+0x4e>
 8027d00:	f04f 30ff 	mov.w	r0, #4294967295
 8027d04:	b01d      	add	sp, #116	; 0x74
 8027d06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027d0a:	89ab      	ldrh	r3, [r5, #12]
 8027d0c:	0598      	lsls	r0, r3, #22
 8027d0e:	d4f7      	bmi.n	8027d00 <_vfiprintf_r+0x44>
 8027d10:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8027d12:	f7ff feef 	bl	8027af4 <__retarget_lock_release_recursive>
 8027d16:	e7f3      	b.n	8027d00 <_vfiprintf_r+0x44>
 8027d18:	2300      	movs	r3, #0
 8027d1a:	9309      	str	r3, [sp, #36]	; 0x24
 8027d1c:	2320      	movs	r3, #32
 8027d1e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8027d22:	f8cd 800c 	str.w	r8, [sp, #12]
 8027d26:	2330      	movs	r3, #48	; 0x30
 8027d28:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8027edc <_vfiprintf_r+0x220>
 8027d2c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8027d30:	f04f 0901 	mov.w	r9, #1
 8027d34:	4623      	mov	r3, r4
 8027d36:	469a      	mov	sl, r3
 8027d38:	f813 2b01 	ldrb.w	r2, [r3], #1
 8027d3c:	b10a      	cbz	r2, 8027d42 <_vfiprintf_r+0x86>
 8027d3e:	2a25      	cmp	r2, #37	; 0x25
 8027d40:	d1f9      	bne.n	8027d36 <_vfiprintf_r+0x7a>
 8027d42:	ebba 0b04 	subs.w	fp, sl, r4
 8027d46:	d00b      	beq.n	8027d60 <_vfiprintf_r+0xa4>
 8027d48:	465b      	mov	r3, fp
 8027d4a:	4622      	mov	r2, r4
 8027d4c:	4629      	mov	r1, r5
 8027d4e:	4630      	mov	r0, r6
 8027d50:	f7ff ffa1 	bl	8027c96 <__sfputs_r>
 8027d54:	3001      	adds	r0, #1
 8027d56:	f000 80a9 	beq.w	8027eac <_vfiprintf_r+0x1f0>
 8027d5a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8027d5c:	445a      	add	r2, fp
 8027d5e:	9209      	str	r2, [sp, #36]	; 0x24
 8027d60:	f89a 3000 	ldrb.w	r3, [sl]
 8027d64:	2b00      	cmp	r3, #0
 8027d66:	f000 80a1 	beq.w	8027eac <_vfiprintf_r+0x1f0>
 8027d6a:	2300      	movs	r3, #0
 8027d6c:	f04f 32ff 	mov.w	r2, #4294967295
 8027d70:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8027d74:	f10a 0a01 	add.w	sl, sl, #1
 8027d78:	9304      	str	r3, [sp, #16]
 8027d7a:	9307      	str	r3, [sp, #28]
 8027d7c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8027d80:	931a      	str	r3, [sp, #104]	; 0x68
 8027d82:	4654      	mov	r4, sl
 8027d84:	2205      	movs	r2, #5
 8027d86:	f814 1b01 	ldrb.w	r1, [r4], #1
 8027d8a:	4854      	ldr	r0, [pc, #336]	; (8027edc <_vfiprintf_r+0x220>)
 8027d8c:	f7d8 fa30 	bl	80001f0 <memchr>
 8027d90:	9a04      	ldr	r2, [sp, #16]
 8027d92:	b9d8      	cbnz	r0, 8027dcc <_vfiprintf_r+0x110>
 8027d94:	06d1      	lsls	r1, r2, #27
 8027d96:	bf44      	itt	mi
 8027d98:	2320      	movmi	r3, #32
 8027d9a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8027d9e:	0713      	lsls	r3, r2, #28
 8027da0:	bf44      	itt	mi
 8027da2:	232b      	movmi	r3, #43	; 0x2b
 8027da4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8027da8:	f89a 3000 	ldrb.w	r3, [sl]
 8027dac:	2b2a      	cmp	r3, #42	; 0x2a
 8027dae:	d015      	beq.n	8027ddc <_vfiprintf_r+0x120>
 8027db0:	9a07      	ldr	r2, [sp, #28]
 8027db2:	4654      	mov	r4, sl
 8027db4:	2000      	movs	r0, #0
 8027db6:	f04f 0c0a 	mov.w	ip, #10
 8027dba:	4621      	mov	r1, r4
 8027dbc:	f811 3b01 	ldrb.w	r3, [r1], #1
 8027dc0:	3b30      	subs	r3, #48	; 0x30
 8027dc2:	2b09      	cmp	r3, #9
 8027dc4:	d94d      	bls.n	8027e62 <_vfiprintf_r+0x1a6>
 8027dc6:	b1b0      	cbz	r0, 8027df6 <_vfiprintf_r+0x13a>
 8027dc8:	9207      	str	r2, [sp, #28]
 8027dca:	e014      	b.n	8027df6 <_vfiprintf_r+0x13a>
 8027dcc:	eba0 0308 	sub.w	r3, r0, r8
 8027dd0:	fa09 f303 	lsl.w	r3, r9, r3
 8027dd4:	4313      	orrs	r3, r2
 8027dd6:	9304      	str	r3, [sp, #16]
 8027dd8:	46a2      	mov	sl, r4
 8027dda:	e7d2      	b.n	8027d82 <_vfiprintf_r+0xc6>
 8027ddc:	9b03      	ldr	r3, [sp, #12]
 8027dde:	1d19      	adds	r1, r3, #4
 8027de0:	681b      	ldr	r3, [r3, #0]
 8027de2:	9103      	str	r1, [sp, #12]
 8027de4:	2b00      	cmp	r3, #0
 8027de6:	bfbb      	ittet	lt
 8027de8:	425b      	neglt	r3, r3
 8027dea:	f042 0202 	orrlt.w	r2, r2, #2
 8027dee:	9307      	strge	r3, [sp, #28]
 8027df0:	9307      	strlt	r3, [sp, #28]
 8027df2:	bfb8      	it	lt
 8027df4:	9204      	strlt	r2, [sp, #16]
 8027df6:	7823      	ldrb	r3, [r4, #0]
 8027df8:	2b2e      	cmp	r3, #46	; 0x2e
 8027dfa:	d10c      	bne.n	8027e16 <_vfiprintf_r+0x15a>
 8027dfc:	7863      	ldrb	r3, [r4, #1]
 8027dfe:	2b2a      	cmp	r3, #42	; 0x2a
 8027e00:	d134      	bne.n	8027e6c <_vfiprintf_r+0x1b0>
 8027e02:	9b03      	ldr	r3, [sp, #12]
 8027e04:	1d1a      	adds	r2, r3, #4
 8027e06:	681b      	ldr	r3, [r3, #0]
 8027e08:	9203      	str	r2, [sp, #12]
 8027e0a:	2b00      	cmp	r3, #0
 8027e0c:	bfb8      	it	lt
 8027e0e:	f04f 33ff 	movlt.w	r3, #4294967295
 8027e12:	3402      	adds	r4, #2
 8027e14:	9305      	str	r3, [sp, #20]
 8027e16:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8027eec <_vfiprintf_r+0x230>
 8027e1a:	7821      	ldrb	r1, [r4, #0]
 8027e1c:	2203      	movs	r2, #3
 8027e1e:	4650      	mov	r0, sl
 8027e20:	f7d8 f9e6 	bl	80001f0 <memchr>
 8027e24:	b138      	cbz	r0, 8027e36 <_vfiprintf_r+0x17a>
 8027e26:	9b04      	ldr	r3, [sp, #16]
 8027e28:	eba0 000a 	sub.w	r0, r0, sl
 8027e2c:	2240      	movs	r2, #64	; 0x40
 8027e2e:	4082      	lsls	r2, r0
 8027e30:	4313      	orrs	r3, r2
 8027e32:	3401      	adds	r4, #1
 8027e34:	9304      	str	r3, [sp, #16]
 8027e36:	f814 1b01 	ldrb.w	r1, [r4], #1
 8027e3a:	4829      	ldr	r0, [pc, #164]	; (8027ee0 <_vfiprintf_r+0x224>)
 8027e3c:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8027e40:	2206      	movs	r2, #6
 8027e42:	f7d8 f9d5 	bl	80001f0 <memchr>
 8027e46:	2800      	cmp	r0, #0
 8027e48:	d03f      	beq.n	8027eca <_vfiprintf_r+0x20e>
 8027e4a:	4b26      	ldr	r3, [pc, #152]	; (8027ee4 <_vfiprintf_r+0x228>)
 8027e4c:	bb1b      	cbnz	r3, 8027e96 <_vfiprintf_r+0x1da>
 8027e4e:	9b03      	ldr	r3, [sp, #12]
 8027e50:	3307      	adds	r3, #7
 8027e52:	f023 0307 	bic.w	r3, r3, #7
 8027e56:	3308      	adds	r3, #8
 8027e58:	9303      	str	r3, [sp, #12]
 8027e5a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027e5c:	443b      	add	r3, r7
 8027e5e:	9309      	str	r3, [sp, #36]	; 0x24
 8027e60:	e768      	b.n	8027d34 <_vfiprintf_r+0x78>
 8027e62:	fb0c 3202 	mla	r2, ip, r2, r3
 8027e66:	460c      	mov	r4, r1
 8027e68:	2001      	movs	r0, #1
 8027e6a:	e7a6      	b.n	8027dba <_vfiprintf_r+0xfe>
 8027e6c:	2300      	movs	r3, #0
 8027e6e:	3401      	adds	r4, #1
 8027e70:	9305      	str	r3, [sp, #20]
 8027e72:	4619      	mov	r1, r3
 8027e74:	f04f 0c0a 	mov.w	ip, #10
 8027e78:	4620      	mov	r0, r4
 8027e7a:	f810 2b01 	ldrb.w	r2, [r0], #1
 8027e7e:	3a30      	subs	r2, #48	; 0x30
 8027e80:	2a09      	cmp	r2, #9
 8027e82:	d903      	bls.n	8027e8c <_vfiprintf_r+0x1d0>
 8027e84:	2b00      	cmp	r3, #0
 8027e86:	d0c6      	beq.n	8027e16 <_vfiprintf_r+0x15a>
 8027e88:	9105      	str	r1, [sp, #20]
 8027e8a:	e7c4      	b.n	8027e16 <_vfiprintf_r+0x15a>
 8027e8c:	fb0c 2101 	mla	r1, ip, r1, r2
 8027e90:	4604      	mov	r4, r0
 8027e92:	2301      	movs	r3, #1
 8027e94:	e7f0      	b.n	8027e78 <_vfiprintf_r+0x1bc>
 8027e96:	ab03      	add	r3, sp, #12
 8027e98:	9300      	str	r3, [sp, #0]
 8027e9a:	462a      	mov	r2, r5
 8027e9c:	4b12      	ldr	r3, [pc, #72]	; (8027ee8 <_vfiprintf_r+0x22c>)
 8027e9e:	a904      	add	r1, sp, #16
 8027ea0:	4630      	mov	r0, r6
 8027ea2:	f3af 8000 	nop.w
 8027ea6:	4607      	mov	r7, r0
 8027ea8:	1c78      	adds	r0, r7, #1
 8027eaa:	d1d6      	bne.n	8027e5a <_vfiprintf_r+0x19e>
 8027eac:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8027eae:	07d9      	lsls	r1, r3, #31
 8027eb0:	d405      	bmi.n	8027ebe <_vfiprintf_r+0x202>
 8027eb2:	89ab      	ldrh	r3, [r5, #12]
 8027eb4:	059a      	lsls	r2, r3, #22
 8027eb6:	d402      	bmi.n	8027ebe <_vfiprintf_r+0x202>
 8027eb8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8027eba:	f7ff fe1b 	bl	8027af4 <__retarget_lock_release_recursive>
 8027ebe:	89ab      	ldrh	r3, [r5, #12]
 8027ec0:	065b      	lsls	r3, r3, #25
 8027ec2:	f53f af1d 	bmi.w	8027d00 <_vfiprintf_r+0x44>
 8027ec6:	9809      	ldr	r0, [sp, #36]	; 0x24
 8027ec8:	e71c      	b.n	8027d04 <_vfiprintf_r+0x48>
 8027eca:	ab03      	add	r3, sp, #12
 8027ecc:	9300      	str	r3, [sp, #0]
 8027ece:	462a      	mov	r2, r5
 8027ed0:	4b05      	ldr	r3, [pc, #20]	; (8027ee8 <_vfiprintf_r+0x22c>)
 8027ed2:	a904      	add	r1, sp, #16
 8027ed4:	4630      	mov	r0, r6
 8027ed6:	f000 f879 	bl	8027fcc <_printf_i>
 8027eda:	e7e4      	b.n	8027ea6 <_vfiprintf_r+0x1ea>
 8027edc:	0802c1dc 	.word	0x0802c1dc
 8027ee0:	0802c1e6 	.word	0x0802c1e6
 8027ee4:	00000000 	.word	0x00000000
 8027ee8:	08027c97 	.word	0x08027c97
 8027eec:	0802c1e2 	.word	0x0802c1e2

08027ef0 <_printf_common>:
 8027ef0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8027ef4:	4616      	mov	r6, r2
 8027ef6:	4699      	mov	r9, r3
 8027ef8:	688a      	ldr	r2, [r1, #8]
 8027efa:	690b      	ldr	r3, [r1, #16]
 8027efc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8027f00:	4293      	cmp	r3, r2
 8027f02:	bfb8      	it	lt
 8027f04:	4613      	movlt	r3, r2
 8027f06:	6033      	str	r3, [r6, #0]
 8027f08:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8027f0c:	4607      	mov	r7, r0
 8027f0e:	460c      	mov	r4, r1
 8027f10:	b10a      	cbz	r2, 8027f16 <_printf_common+0x26>
 8027f12:	3301      	adds	r3, #1
 8027f14:	6033      	str	r3, [r6, #0]
 8027f16:	6823      	ldr	r3, [r4, #0]
 8027f18:	0699      	lsls	r1, r3, #26
 8027f1a:	bf42      	ittt	mi
 8027f1c:	6833      	ldrmi	r3, [r6, #0]
 8027f1e:	3302      	addmi	r3, #2
 8027f20:	6033      	strmi	r3, [r6, #0]
 8027f22:	6825      	ldr	r5, [r4, #0]
 8027f24:	f015 0506 	ands.w	r5, r5, #6
 8027f28:	d106      	bne.n	8027f38 <_printf_common+0x48>
 8027f2a:	f104 0a19 	add.w	sl, r4, #25
 8027f2e:	68e3      	ldr	r3, [r4, #12]
 8027f30:	6832      	ldr	r2, [r6, #0]
 8027f32:	1a9b      	subs	r3, r3, r2
 8027f34:	42ab      	cmp	r3, r5
 8027f36:	dc26      	bgt.n	8027f86 <_printf_common+0x96>
 8027f38:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8027f3c:	1e13      	subs	r3, r2, #0
 8027f3e:	6822      	ldr	r2, [r4, #0]
 8027f40:	bf18      	it	ne
 8027f42:	2301      	movne	r3, #1
 8027f44:	0692      	lsls	r2, r2, #26
 8027f46:	d42b      	bmi.n	8027fa0 <_printf_common+0xb0>
 8027f48:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8027f4c:	4649      	mov	r1, r9
 8027f4e:	4638      	mov	r0, r7
 8027f50:	47c0      	blx	r8
 8027f52:	3001      	adds	r0, #1
 8027f54:	d01e      	beq.n	8027f94 <_printf_common+0xa4>
 8027f56:	6823      	ldr	r3, [r4, #0]
 8027f58:	6922      	ldr	r2, [r4, #16]
 8027f5a:	f003 0306 	and.w	r3, r3, #6
 8027f5e:	2b04      	cmp	r3, #4
 8027f60:	bf02      	ittt	eq
 8027f62:	68e5      	ldreq	r5, [r4, #12]
 8027f64:	6833      	ldreq	r3, [r6, #0]
 8027f66:	1aed      	subeq	r5, r5, r3
 8027f68:	68a3      	ldr	r3, [r4, #8]
 8027f6a:	bf0c      	ite	eq
 8027f6c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8027f70:	2500      	movne	r5, #0
 8027f72:	4293      	cmp	r3, r2
 8027f74:	bfc4      	itt	gt
 8027f76:	1a9b      	subgt	r3, r3, r2
 8027f78:	18ed      	addgt	r5, r5, r3
 8027f7a:	2600      	movs	r6, #0
 8027f7c:	341a      	adds	r4, #26
 8027f7e:	42b5      	cmp	r5, r6
 8027f80:	d11a      	bne.n	8027fb8 <_printf_common+0xc8>
 8027f82:	2000      	movs	r0, #0
 8027f84:	e008      	b.n	8027f98 <_printf_common+0xa8>
 8027f86:	2301      	movs	r3, #1
 8027f88:	4652      	mov	r2, sl
 8027f8a:	4649      	mov	r1, r9
 8027f8c:	4638      	mov	r0, r7
 8027f8e:	47c0      	blx	r8
 8027f90:	3001      	adds	r0, #1
 8027f92:	d103      	bne.n	8027f9c <_printf_common+0xac>
 8027f94:	f04f 30ff 	mov.w	r0, #4294967295
 8027f98:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8027f9c:	3501      	adds	r5, #1
 8027f9e:	e7c6      	b.n	8027f2e <_printf_common+0x3e>
 8027fa0:	18e1      	adds	r1, r4, r3
 8027fa2:	1c5a      	adds	r2, r3, #1
 8027fa4:	2030      	movs	r0, #48	; 0x30
 8027fa6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8027faa:	4422      	add	r2, r4
 8027fac:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8027fb0:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8027fb4:	3302      	adds	r3, #2
 8027fb6:	e7c7      	b.n	8027f48 <_printf_common+0x58>
 8027fb8:	2301      	movs	r3, #1
 8027fba:	4622      	mov	r2, r4
 8027fbc:	4649      	mov	r1, r9
 8027fbe:	4638      	mov	r0, r7
 8027fc0:	47c0      	blx	r8
 8027fc2:	3001      	adds	r0, #1
 8027fc4:	d0e6      	beq.n	8027f94 <_printf_common+0xa4>
 8027fc6:	3601      	adds	r6, #1
 8027fc8:	e7d9      	b.n	8027f7e <_printf_common+0x8e>
	...

08027fcc <_printf_i>:
 8027fcc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8027fd0:	7e0f      	ldrb	r7, [r1, #24]
 8027fd2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027fd4:	2f78      	cmp	r7, #120	; 0x78
 8027fd6:	4691      	mov	r9, r2
 8027fd8:	4680      	mov	r8, r0
 8027fda:	460c      	mov	r4, r1
 8027fdc:	469a      	mov	sl, r3
 8027fde:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8027fe2:	d807      	bhi.n	8027ff4 <_printf_i+0x28>
 8027fe4:	2f62      	cmp	r7, #98	; 0x62
 8027fe6:	d80a      	bhi.n	8027ffe <_printf_i+0x32>
 8027fe8:	2f00      	cmp	r7, #0
 8027fea:	f000 80d4 	beq.w	8028196 <_printf_i+0x1ca>
 8027fee:	2f58      	cmp	r7, #88	; 0x58
 8027ff0:	f000 80c0 	beq.w	8028174 <_printf_i+0x1a8>
 8027ff4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8027ff8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8027ffc:	e03a      	b.n	8028074 <_printf_i+0xa8>
 8027ffe:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8028002:	2b15      	cmp	r3, #21
 8028004:	d8f6      	bhi.n	8027ff4 <_printf_i+0x28>
 8028006:	a101      	add	r1, pc, #4	; (adr r1, 802800c <_printf_i+0x40>)
 8028008:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802800c:	08028065 	.word	0x08028065
 8028010:	08028079 	.word	0x08028079
 8028014:	08027ff5 	.word	0x08027ff5
 8028018:	08027ff5 	.word	0x08027ff5
 802801c:	08027ff5 	.word	0x08027ff5
 8028020:	08027ff5 	.word	0x08027ff5
 8028024:	08028079 	.word	0x08028079
 8028028:	08027ff5 	.word	0x08027ff5
 802802c:	08027ff5 	.word	0x08027ff5
 8028030:	08027ff5 	.word	0x08027ff5
 8028034:	08027ff5 	.word	0x08027ff5
 8028038:	0802817d 	.word	0x0802817d
 802803c:	080280a5 	.word	0x080280a5
 8028040:	08028137 	.word	0x08028137
 8028044:	08027ff5 	.word	0x08027ff5
 8028048:	08027ff5 	.word	0x08027ff5
 802804c:	0802819f 	.word	0x0802819f
 8028050:	08027ff5 	.word	0x08027ff5
 8028054:	080280a5 	.word	0x080280a5
 8028058:	08027ff5 	.word	0x08027ff5
 802805c:	08027ff5 	.word	0x08027ff5
 8028060:	0802813f 	.word	0x0802813f
 8028064:	682b      	ldr	r3, [r5, #0]
 8028066:	1d1a      	adds	r2, r3, #4
 8028068:	681b      	ldr	r3, [r3, #0]
 802806a:	602a      	str	r2, [r5, #0]
 802806c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8028070:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8028074:	2301      	movs	r3, #1
 8028076:	e09f      	b.n	80281b8 <_printf_i+0x1ec>
 8028078:	6820      	ldr	r0, [r4, #0]
 802807a:	682b      	ldr	r3, [r5, #0]
 802807c:	0607      	lsls	r7, r0, #24
 802807e:	f103 0104 	add.w	r1, r3, #4
 8028082:	6029      	str	r1, [r5, #0]
 8028084:	d501      	bpl.n	802808a <_printf_i+0xbe>
 8028086:	681e      	ldr	r6, [r3, #0]
 8028088:	e003      	b.n	8028092 <_printf_i+0xc6>
 802808a:	0646      	lsls	r6, r0, #25
 802808c:	d5fb      	bpl.n	8028086 <_printf_i+0xba>
 802808e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8028092:	2e00      	cmp	r6, #0
 8028094:	da03      	bge.n	802809e <_printf_i+0xd2>
 8028096:	232d      	movs	r3, #45	; 0x2d
 8028098:	4276      	negs	r6, r6
 802809a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802809e:	485a      	ldr	r0, [pc, #360]	; (8028208 <_printf_i+0x23c>)
 80280a0:	230a      	movs	r3, #10
 80280a2:	e012      	b.n	80280ca <_printf_i+0xfe>
 80280a4:	682b      	ldr	r3, [r5, #0]
 80280a6:	6820      	ldr	r0, [r4, #0]
 80280a8:	1d19      	adds	r1, r3, #4
 80280aa:	6029      	str	r1, [r5, #0]
 80280ac:	0605      	lsls	r5, r0, #24
 80280ae:	d501      	bpl.n	80280b4 <_printf_i+0xe8>
 80280b0:	681e      	ldr	r6, [r3, #0]
 80280b2:	e002      	b.n	80280ba <_printf_i+0xee>
 80280b4:	0641      	lsls	r1, r0, #25
 80280b6:	d5fb      	bpl.n	80280b0 <_printf_i+0xe4>
 80280b8:	881e      	ldrh	r6, [r3, #0]
 80280ba:	4853      	ldr	r0, [pc, #332]	; (8028208 <_printf_i+0x23c>)
 80280bc:	2f6f      	cmp	r7, #111	; 0x6f
 80280be:	bf0c      	ite	eq
 80280c0:	2308      	moveq	r3, #8
 80280c2:	230a      	movne	r3, #10
 80280c4:	2100      	movs	r1, #0
 80280c6:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80280ca:	6865      	ldr	r5, [r4, #4]
 80280cc:	60a5      	str	r5, [r4, #8]
 80280ce:	2d00      	cmp	r5, #0
 80280d0:	bfa2      	ittt	ge
 80280d2:	6821      	ldrge	r1, [r4, #0]
 80280d4:	f021 0104 	bicge.w	r1, r1, #4
 80280d8:	6021      	strge	r1, [r4, #0]
 80280da:	b90e      	cbnz	r6, 80280e0 <_printf_i+0x114>
 80280dc:	2d00      	cmp	r5, #0
 80280de:	d04b      	beq.n	8028178 <_printf_i+0x1ac>
 80280e0:	4615      	mov	r5, r2
 80280e2:	fbb6 f1f3 	udiv	r1, r6, r3
 80280e6:	fb03 6711 	mls	r7, r3, r1, r6
 80280ea:	5dc7      	ldrb	r7, [r0, r7]
 80280ec:	f805 7d01 	strb.w	r7, [r5, #-1]!
 80280f0:	4637      	mov	r7, r6
 80280f2:	42bb      	cmp	r3, r7
 80280f4:	460e      	mov	r6, r1
 80280f6:	d9f4      	bls.n	80280e2 <_printf_i+0x116>
 80280f8:	2b08      	cmp	r3, #8
 80280fa:	d10b      	bne.n	8028114 <_printf_i+0x148>
 80280fc:	6823      	ldr	r3, [r4, #0]
 80280fe:	07de      	lsls	r6, r3, #31
 8028100:	d508      	bpl.n	8028114 <_printf_i+0x148>
 8028102:	6923      	ldr	r3, [r4, #16]
 8028104:	6861      	ldr	r1, [r4, #4]
 8028106:	4299      	cmp	r1, r3
 8028108:	bfde      	ittt	le
 802810a:	2330      	movle	r3, #48	; 0x30
 802810c:	f805 3c01 	strble.w	r3, [r5, #-1]
 8028110:	f105 35ff 	addle.w	r5, r5, #4294967295
 8028114:	1b52      	subs	r2, r2, r5
 8028116:	6122      	str	r2, [r4, #16]
 8028118:	f8cd a000 	str.w	sl, [sp]
 802811c:	464b      	mov	r3, r9
 802811e:	aa03      	add	r2, sp, #12
 8028120:	4621      	mov	r1, r4
 8028122:	4640      	mov	r0, r8
 8028124:	f7ff fee4 	bl	8027ef0 <_printf_common>
 8028128:	3001      	adds	r0, #1
 802812a:	d14a      	bne.n	80281c2 <_printf_i+0x1f6>
 802812c:	f04f 30ff 	mov.w	r0, #4294967295
 8028130:	b004      	add	sp, #16
 8028132:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8028136:	6823      	ldr	r3, [r4, #0]
 8028138:	f043 0320 	orr.w	r3, r3, #32
 802813c:	6023      	str	r3, [r4, #0]
 802813e:	4833      	ldr	r0, [pc, #204]	; (802820c <_printf_i+0x240>)
 8028140:	2778      	movs	r7, #120	; 0x78
 8028142:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8028146:	6823      	ldr	r3, [r4, #0]
 8028148:	6829      	ldr	r1, [r5, #0]
 802814a:	061f      	lsls	r7, r3, #24
 802814c:	f851 6b04 	ldr.w	r6, [r1], #4
 8028150:	d402      	bmi.n	8028158 <_printf_i+0x18c>
 8028152:	065f      	lsls	r7, r3, #25
 8028154:	bf48      	it	mi
 8028156:	b2b6      	uxthmi	r6, r6
 8028158:	07df      	lsls	r7, r3, #31
 802815a:	bf48      	it	mi
 802815c:	f043 0320 	orrmi.w	r3, r3, #32
 8028160:	6029      	str	r1, [r5, #0]
 8028162:	bf48      	it	mi
 8028164:	6023      	strmi	r3, [r4, #0]
 8028166:	b91e      	cbnz	r6, 8028170 <_printf_i+0x1a4>
 8028168:	6823      	ldr	r3, [r4, #0]
 802816a:	f023 0320 	bic.w	r3, r3, #32
 802816e:	6023      	str	r3, [r4, #0]
 8028170:	2310      	movs	r3, #16
 8028172:	e7a7      	b.n	80280c4 <_printf_i+0xf8>
 8028174:	4824      	ldr	r0, [pc, #144]	; (8028208 <_printf_i+0x23c>)
 8028176:	e7e4      	b.n	8028142 <_printf_i+0x176>
 8028178:	4615      	mov	r5, r2
 802817a:	e7bd      	b.n	80280f8 <_printf_i+0x12c>
 802817c:	682b      	ldr	r3, [r5, #0]
 802817e:	6826      	ldr	r6, [r4, #0]
 8028180:	6961      	ldr	r1, [r4, #20]
 8028182:	1d18      	adds	r0, r3, #4
 8028184:	6028      	str	r0, [r5, #0]
 8028186:	0635      	lsls	r5, r6, #24
 8028188:	681b      	ldr	r3, [r3, #0]
 802818a:	d501      	bpl.n	8028190 <_printf_i+0x1c4>
 802818c:	6019      	str	r1, [r3, #0]
 802818e:	e002      	b.n	8028196 <_printf_i+0x1ca>
 8028190:	0670      	lsls	r0, r6, #25
 8028192:	d5fb      	bpl.n	802818c <_printf_i+0x1c0>
 8028194:	8019      	strh	r1, [r3, #0]
 8028196:	2300      	movs	r3, #0
 8028198:	6123      	str	r3, [r4, #16]
 802819a:	4615      	mov	r5, r2
 802819c:	e7bc      	b.n	8028118 <_printf_i+0x14c>
 802819e:	682b      	ldr	r3, [r5, #0]
 80281a0:	1d1a      	adds	r2, r3, #4
 80281a2:	602a      	str	r2, [r5, #0]
 80281a4:	681d      	ldr	r5, [r3, #0]
 80281a6:	6862      	ldr	r2, [r4, #4]
 80281a8:	2100      	movs	r1, #0
 80281aa:	4628      	mov	r0, r5
 80281ac:	f7d8 f820 	bl	80001f0 <memchr>
 80281b0:	b108      	cbz	r0, 80281b6 <_printf_i+0x1ea>
 80281b2:	1b40      	subs	r0, r0, r5
 80281b4:	6060      	str	r0, [r4, #4]
 80281b6:	6863      	ldr	r3, [r4, #4]
 80281b8:	6123      	str	r3, [r4, #16]
 80281ba:	2300      	movs	r3, #0
 80281bc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80281c0:	e7aa      	b.n	8028118 <_printf_i+0x14c>
 80281c2:	6923      	ldr	r3, [r4, #16]
 80281c4:	462a      	mov	r2, r5
 80281c6:	4649      	mov	r1, r9
 80281c8:	4640      	mov	r0, r8
 80281ca:	47d0      	blx	sl
 80281cc:	3001      	adds	r0, #1
 80281ce:	d0ad      	beq.n	802812c <_printf_i+0x160>
 80281d0:	6823      	ldr	r3, [r4, #0]
 80281d2:	079b      	lsls	r3, r3, #30
 80281d4:	d413      	bmi.n	80281fe <_printf_i+0x232>
 80281d6:	68e0      	ldr	r0, [r4, #12]
 80281d8:	9b03      	ldr	r3, [sp, #12]
 80281da:	4298      	cmp	r0, r3
 80281dc:	bfb8      	it	lt
 80281de:	4618      	movlt	r0, r3
 80281e0:	e7a6      	b.n	8028130 <_printf_i+0x164>
 80281e2:	2301      	movs	r3, #1
 80281e4:	4632      	mov	r2, r6
 80281e6:	4649      	mov	r1, r9
 80281e8:	4640      	mov	r0, r8
 80281ea:	47d0      	blx	sl
 80281ec:	3001      	adds	r0, #1
 80281ee:	d09d      	beq.n	802812c <_printf_i+0x160>
 80281f0:	3501      	adds	r5, #1
 80281f2:	68e3      	ldr	r3, [r4, #12]
 80281f4:	9903      	ldr	r1, [sp, #12]
 80281f6:	1a5b      	subs	r3, r3, r1
 80281f8:	42ab      	cmp	r3, r5
 80281fa:	dcf2      	bgt.n	80281e2 <_printf_i+0x216>
 80281fc:	e7eb      	b.n	80281d6 <_printf_i+0x20a>
 80281fe:	2500      	movs	r5, #0
 8028200:	f104 0619 	add.w	r6, r4, #25
 8028204:	e7f5      	b.n	80281f2 <_printf_i+0x226>
 8028206:	bf00      	nop
 8028208:	0802c1ed 	.word	0x0802c1ed
 802820c:	0802c1fe 	.word	0x0802c1fe

08028210 <__sflush_r>:
 8028210:	898a      	ldrh	r2, [r1, #12]
 8028212:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028216:	4605      	mov	r5, r0
 8028218:	0710      	lsls	r0, r2, #28
 802821a:	460c      	mov	r4, r1
 802821c:	d458      	bmi.n	80282d0 <__sflush_r+0xc0>
 802821e:	684b      	ldr	r3, [r1, #4]
 8028220:	2b00      	cmp	r3, #0
 8028222:	dc05      	bgt.n	8028230 <__sflush_r+0x20>
 8028224:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8028226:	2b00      	cmp	r3, #0
 8028228:	dc02      	bgt.n	8028230 <__sflush_r+0x20>
 802822a:	2000      	movs	r0, #0
 802822c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028230:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8028232:	2e00      	cmp	r6, #0
 8028234:	d0f9      	beq.n	802822a <__sflush_r+0x1a>
 8028236:	2300      	movs	r3, #0
 8028238:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802823c:	682f      	ldr	r7, [r5, #0]
 802823e:	6a21      	ldr	r1, [r4, #32]
 8028240:	602b      	str	r3, [r5, #0]
 8028242:	d032      	beq.n	80282aa <__sflush_r+0x9a>
 8028244:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8028246:	89a3      	ldrh	r3, [r4, #12]
 8028248:	075a      	lsls	r2, r3, #29
 802824a:	d505      	bpl.n	8028258 <__sflush_r+0x48>
 802824c:	6863      	ldr	r3, [r4, #4]
 802824e:	1ac0      	subs	r0, r0, r3
 8028250:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8028252:	b10b      	cbz	r3, 8028258 <__sflush_r+0x48>
 8028254:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8028256:	1ac0      	subs	r0, r0, r3
 8028258:	2300      	movs	r3, #0
 802825a:	4602      	mov	r2, r0
 802825c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802825e:	6a21      	ldr	r1, [r4, #32]
 8028260:	4628      	mov	r0, r5
 8028262:	47b0      	blx	r6
 8028264:	1c43      	adds	r3, r0, #1
 8028266:	89a3      	ldrh	r3, [r4, #12]
 8028268:	d106      	bne.n	8028278 <__sflush_r+0x68>
 802826a:	6829      	ldr	r1, [r5, #0]
 802826c:	291d      	cmp	r1, #29
 802826e:	d82b      	bhi.n	80282c8 <__sflush_r+0xb8>
 8028270:	4a29      	ldr	r2, [pc, #164]	; (8028318 <__sflush_r+0x108>)
 8028272:	410a      	asrs	r2, r1
 8028274:	07d6      	lsls	r6, r2, #31
 8028276:	d427      	bmi.n	80282c8 <__sflush_r+0xb8>
 8028278:	2200      	movs	r2, #0
 802827a:	6062      	str	r2, [r4, #4]
 802827c:	04d9      	lsls	r1, r3, #19
 802827e:	6922      	ldr	r2, [r4, #16]
 8028280:	6022      	str	r2, [r4, #0]
 8028282:	d504      	bpl.n	802828e <__sflush_r+0x7e>
 8028284:	1c42      	adds	r2, r0, #1
 8028286:	d101      	bne.n	802828c <__sflush_r+0x7c>
 8028288:	682b      	ldr	r3, [r5, #0]
 802828a:	b903      	cbnz	r3, 802828e <__sflush_r+0x7e>
 802828c:	6560      	str	r0, [r4, #84]	; 0x54
 802828e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8028290:	602f      	str	r7, [r5, #0]
 8028292:	2900      	cmp	r1, #0
 8028294:	d0c9      	beq.n	802822a <__sflush_r+0x1a>
 8028296:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802829a:	4299      	cmp	r1, r3
 802829c:	d002      	beq.n	80282a4 <__sflush_r+0x94>
 802829e:	4628      	mov	r0, r5
 80282a0:	f7ff fc96 	bl	8027bd0 <_free_r>
 80282a4:	2000      	movs	r0, #0
 80282a6:	6360      	str	r0, [r4, #52]	; 0x34
 80282a8:	e7c0      	b.n	802822c <__sflush_r+0x1c>
 80282aa:	2301      	movs	r3, #1
 80282ac:	4628      	mov	r0, r5
 80282ae:	47b0      	blx	r6
 80282b0:	1c41      	adds	r1, r0, #1
 80282b2:	d1c8      	bne.n	8028246 <__sflush_r+0x36>
 80282b4:	682b      	ldr	r3, [r5, #0]
 80282b6:	2b00      	cmp	r3, #0
 80282b8:	d0c5      	beq.n	8028246 <__sflush_r+0x36>
 80282ba:	2b1d      	cmp	r3, #29
 80282bc:	d001      	beq.n	80282c2 <__sflush_r+0xb2>
 80282be:	2b16      	cmp	r3, #22
 80282c0:	d101      	bne.n	80282c6 <__sflush_r+0xb6>
 80282c2:	602f      	str	r7, [r5, #0]
 80282c4:	e7b1      	b.n	802822a <__sflush_r+0x1a>
 80282c6:	89a3      	ldrh	r3, [r4, #12]
 80282c8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80282cc:	81a3      	strh	r3, [r4, #12]
 80282ce:	e7ad      	b.n	802822c <__sflush_r+0x1c>
 80282d0:	690f      	ldr	r7, [r1, #16]
 80282d2:	2f00      	cmp	r7, #0
 80282d4:	d0a9      	beq.n	802822a <__sflush_r+0x1a>
 80282d6:	0793      	lsls	r3, r2, #30
 80282d8:	680e      	ldr	r6, [r1, #0]
 80282da:	bf08      	it	eq
 80282dc:	694b      	ldreq	r3, [r1, #20]
 80282de:	600f      	str	r7, [r1, #0]
 80282e0:	bf18      	it	ne
 80282e2:	2300      	movne	r3, #0
 80282e4:	eba6 0807 	sub.w	r8, r6, r7
 80282e8:	608b      	str	r3, [r1, #8]
 80282ea:	f1b8 0f00 	cmp.w	r8, #0
 80282ee:	dd9c      	ble.n	802822a <__sflush_r+0x1a>
 80282f0:	6a21      	ldr	r1, [r4, #32]
 80282f2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80282f4:	4643      	mov	r3, r8
 80282f6:	463a      	mov	r2, r7
 80282f8:	4628      	mov	r0, r5
 80282fa:	47b0      	blx	r6
 80282fc:	2800      	cmp	r0, #0
 80282fe:	dc06      	bgt.n	802830e <__sflush_r+0xfe>
 8028300:	89a3      	ldrh	r3, [r4, #12]
 8028302:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8028306:	81a3      	strh	r3, [r4, #12]
 8028308:	f04f 30ff 	mov.w	r0, #4294967295
 802830c:	e78e      	b.n	802822c <__sflush_r+0x1c>
 802830e:	4407      	add	r7, r0
 8028310:	eba8 0800 	sub.w	r8, r8, r0
 8028314:	e7e9      	b.n	80282ea <__sflush_r+0xda>
 8028316:	bf00      	nop
 8028318:	dfbffffe 	.word	0xdfbffffe

0802831c <_fflush_r>:
 802831c:	b538      	push	{r3, r4, r5, lr}
 802831e:	690b      	ldr	r3, [r1, #16]
 8028320:	4605      	mov	r5, r0
 8028322:	460c      	mov	r4, r1
 8028324:	b913      	cbnz	r3, 802832c <_fflush_r+0x10>
 8028326:	2500      	movs	r5, #0
 8028328:	4628      	mov	r0, r5
 802832a:	bd38      	pop	{r3, r4, r5, pc}
 802832c:	b118      	cbz	r0, 8028336 <_fflush_r+0x1a>
 802832e:	6a03      	ldr	r3, [r0, #32]
 8028330:	b90b      	cbnz	r3, 8028336 <_fflush_r+0x1a>
 8028332:	f7ff fa2f 	bl	8027794 <__sinit>
 8028336:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802833a:	2b00      	cmp	r3, #0
 802833c:	d0f3      	beq.n	8028326 <_fflush_r+0xa>
 802833e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8028340:	07d0      	lsls	r0, r2, #31
 8028342:	d404      	bmi.n	802834e <_fflush_r+0x32>
 8028344:	0599      	lsls	r1, r3, #22
 8028346:	d402      	bmi.n	802834e <_fflush_r+0x32>
 8028348:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802834a:	f7ff fbd2 	bl	8027af2 <__retarget_lock_acquire_recursive>
 802834e:	4628      	mov	r0, r5
 8028350:	4621      	mov	r1, r4
 8028352:	f7ff ff5d 	bl	8028210 <__sflush_r>
 8028356:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8028358:	07da      	lsls	r2, r3, #31
 802835a:	4605      	mov	r5, r0
 802835c:	d4e4      	bmi.n	8028328 <_fflush_r+0xc>
 802835e:	89a3      	ldrh	r3, [r4, #12]
 8028360:	059b      	lsls	r3, r3, #22
 8028362:	d4e1      	bmi.n	8028328 <_fflush_r+0xc>
 8028364:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8028366:	f7ff fbc5 	bl	8027af4 <__retarget_lock_release_recursive>
 802836a:	e7dd      	b.n	8028328 <_fflush_r+0xc>

0802836c <__swbuf_r>:
 802836c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802836e:	460e      	mov	r6, r1
 8028370:	4614      	mov	r4, r2
 8028372:	4605      	mov	r5, r0
 8028374:	b118      	cbz	r0, 802837e <__swbuf_r+0x12>
 8028376:	6a03      	ldr	r3, [r0, #32]
 8028378:	b90b      	cbnz	r3, 802837e <__swbuf_r+0x12>
 802837a:	f7ff fa0b 	bl	8027794 <__sinit>
 802837e:	69a3      	ldr	r3, [r4, #24]
 8028380:	60a3      	str	r3, [r4, #8]
 8028382:	89a3      	ldrh	r3, [r4, #12]
 8028384:	071a      	lsls	r2, r3, #28
 8028386:	d525      	bpl.n	80283d4 <__swbuf_r+0x68>
 8028388:	6923      	ldr	r3, [r4, #16]
 802838a:	b31b      	cbz	r3, 80283d4 <__swbuf_r+0x68>
 802838c:	6823      	ldr	r3, [r4, #0]
 802838e:	6922      	ldr	r2, [r4, #16]
 8028390:	1a98      	subs	r0, r3, r2
 8028392:	6963      	ldr	r3, [r4, #20]
 8028394:	b2f6      	uxtb	r6, r6
 8028396:	4283      	cmp	r3, r0
 8028398:	4637      	mov	r7, r6
 802839a:	dc04      	bgt.n	80283a6 <__swbuf_r+0x3a>
 802839c:	4621      	mov	r1, r4
 802839e:	4628      	mov	r0, r5
 80283a0:	f7ff ffbc 	bl	802831c <_fflush_r>
 80283a4:	b9e0      	cbnz	r0, 80283e0 <__swbuf_r+0x74>
 80283a6:	68a3      	ldr	r3, [r4, #8]
 80283a8:	3b01      	subs	r3, #1
 80283aa:	60a3      	str	r3, [r4, #8]
 80283ac:	6823      	ldr	r3, [r4, #0]
 80283ae:	1c5a      	adds	r2, r3, #1
 80283b0:	6022      	str	r2, [r4, #0]
 80283b2:	701e      	strb	r6, [r3, #0]
 80283b4:	6962      	ldr	r2, [r4, #20]
 80283b6:	1c43      	adds	r3, r0, #1
 80283b8:	429a      	cmp	r2, r3
 80283ba:	d004      	beq.n	80283c6 <__swbuf_r+0x5a>
 80283bc:	89a3      	ldrh	r3, [r4, #12]
 80283be:	07db      	lsls	r3, r3, #31
 80283c0:	d506      	bpl.n	80283d0 <__swbuf_r+0x64>
 80283c2:	2e0a      	cmp	r6, #10
 80283c4:	d104      	bne.n	80283d0 <__swbuf_r+0x64>
 80283c6:	4621      	mov	r1, r4
 80283c8:	4628      	mov	r0, r5
 80283ca:	f7ff ffa7 	bl	802831c <_fflush_r>
 80283ce:	b938      	cbnz	r0, 80283e0 <__swbuf_r+0x74>
 80283d0:	4638      	mov	r0, r7
 80283d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80283d4:	4621      	mov	r1, r4
 80283d6:	4628      	mov	r0, r5
 80283d8:	f000 f806 	bl	80283e8 <__swsetup_r>
 80283dc:	2800      	cmp	r0, #0
 80283de:	d0d5      	beq.n	802838c <__swbuf_r+0x20>
 80283e0:	f04f 37ff 	mov.w	r7, #4294967295
 80283e4:	e7f4      	b.n	80283d0 <__swbuf_r+0x64>
	...

080283e8 <__swsetup_r>:
 80283e8:	b538      	push	{r3, r4, r5, lr}
 80283ea:	4b2a      	ldr	r3, [pc, #168]	; (8028494 <__swsetup_r+0xac>)
 80283ec:	4605      	mov	r5, r0
 80283ee:	6818      	ldr	r0, [r3, #0]
 80283f0:	460c      	mov	r4, r1
 80283f2:	b118      	cbz	r0, 80283fc <__swsetup_r+0x14>
 80283f4:	6a03      	ldr	r3, [r0, #32]
 80283f6:	b90b      	cbnz	r3, 80283fc <__swsetup_r+0x14>
 80283f8:	f7ff f9cc 	bl	8027794 <__sinit>
 80283fc:	89a3      	ldrh	r3, [r4, #12]
 80283fe:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8028402:	0718      	lsls	r0, r3, #28
 8028404:	d422      	bmi.n	802844c <__swsetup_r+0x64>
 8028406:	06d9      	lsls	r1, r3, #27
 8028408:	d407      	bmi.n	802841a <__swsetup_r+0x32>
 802840a:	2309      	movs	r3, #9
 802840c:	602b      	str	r3, [r5, #0]
 802840e:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8028412:	81a3      	strh	r3, [r4, #12]
 8028414:	f04f 30ff 	mov.w	r0, #4294967295
 8028418:	e034      	b.n	8028484 <__swsetup_r+0x9c>
 802841a:	0758      	lsls	r0, r3, #29
 802841c:	d512      	bpl.n	8028444 <__swsetup_r+0x5c>
 802841e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8028420:	b141      	cbz	r1, 8028434 <__swsetup_r+0x4c>
 8028422:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8028426:	4299      	cmp	r1, r3
 8028428:	d002      	beq.n	8028430 <__swsetup_r+0x48>
 802842a:	4628      	mov	r0, r5
 802842c:	f7ff fbd0 	bl	8027bd0 <_free_r>
 8028430:	2300      	movs	r3, #0
 8028432:	6363      	str	r3, [r4, #52]	; 0x34
 8028434:	89a3      	ldrh	r3, [r4, #12]
 8028436:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802843a:	81a3      	strh	r3, [r4, #12]
 802843c:	2300      	movs	r3, #0
 802843e:	6063      	str	r3, [r4, #4]
 8028440:	6923      	ldr	r3, [r4, #16]
 8028442:	6023      	str	r3, [r4, #0]
 8028444:	89a3      	ldrh	r3, [r4, #12]
 8028446:	f043 0308 	orr.w	r3, r3, #8
 802844a:	81a3      	strh	r3, [r4, #12]
 802844c:	6923      	ldr	r3, [r4, #16]
 802844e:	b94b      	cbnz	r3, 8028464 <__swsetup_r+0x7c>
 8028450:	89a3      	ldrh	r3, [r4, #12]
 8028452:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8028456:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802845a:	d003      	beq.n	8028464 <__swsetup_r+0x7c>
 802845c:	4621      	mov	r1, r4
 802845e:	4628      	mov	r0, r5
 8028460:	f000 f840 	bl	80284e4 <__smakebuf_r>
 8028464:	89a0      	ldrh	r0, [r4, #12]
 8028466:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802846a:	f010 0301 	ands.w	r3, r0, #1
 802846e:	d00a      	beq.n	8028486 <__swsetup_r+0x9e>
 8028470:	2300      	movs	r3, #0
 8028472:	60a3      	str	r3, [r4, #8]
 8028474:	6963      	ldr	r3, [r4, #20]
 8028476:	425b      	negs	r3, r3
 8028478:	61a3      	str	r3, [r4, #24]
 802847a:	6923      	ldr	r3, [r4, #16]
 802847c:	b943      	cbnz	r3, 8028490 <__swsetup_r+0xa8>
 802847e:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8028482:	d1c4      	bne.n	802840e <__swsetup_r+0x26>
 8028484:	bd38      	pop	{r3, r4, r5, pc}
 8028486:	0781      	lsls	r1, r0, #30
 8028488:	bf58      	it	pl
 802848a:	6963      	ldrpl	r3, [r4, #20]
 802848c:	60a3      	str	r3, [r4, #8]
 802848e:	e7f4      	b.n	802847a <__swsetup_r+0x92>
 8028490:	2000      	movs	r0, #0
 8028492:	e7f7      	b.n	8028484 <__swsetup_r+0x9c>
 8028494:	20000160 	.word	0x20000160

08028498 <__swhatbuf_r>:
 8028498:	b570      	push	{r4, r5, r6, lr}
 802849a:	460c      	mov	r4, r1
 802849c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80284a0:	2900      	cmp	r1, #0
 80284a2:	b096      	sub	sp, #88	; 0x58
 80284a4:	4615      	mov	r5, r2
 80284a6:	461e      	mov	r6, r3
 80284a8:	da0d      	bge.n	80284c6 <__swhatbuf_r+0x2e>
 80284aa:	89a3      	ldrh	r3, [r4, #12]
 80284ac:	f013 0f80 	tst.w	r3, #128	; 0x80
 80284b0:	f04f 0100 	mov.w	r1, #0
 80284b4:	bf0c      	ite	eq
 80284b6:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 80284ba:	2340      	movne	r3, #64	; 0x40
 80284bc:	2000      	movs	r0, #0
 80284be:	6031      	str	r1, [r6, #0]
 80284c0:	602b      	str	r3, [r5, #0]
 80284c2:	b016      	add	sp, #88	; 0x58
 80284c4:	bd70      	pop	{r4, r5, r6, pc}
 80284c6:	466a      	mov	r2, sp
 80284c8:	f000 f848 	bl	802855c <_fstat_r>
 80284cc:	2800      	cmp	r0, #0
 80284ce:	dbec      	blt.n	80284aa <__swhatbuf_r+0x12>
 80284d0:	9901      	ldr	r1, [sp, #4]
 80284d2:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 80284d6:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 80284da:	4259      	negs	r1, r3
 80284dc:	4159      	adcs	r1, r3
 80284de:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80284e2:	e7eb      	b.n	80284bc <__swhatbuf_r+0x24>

080284e4 <__smakebuf_r>:
 80284e4:	898b      	ldrh	r3, [r1, #12]
 80284e6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80284e8:	079d      	lsls	r5, r3, #30
 80284ea:	4606      	mov	r6, r0
 80284ec:	460c      	mov	r4, r1
 80284ee:	d507      	bpl.n	8028500 <__smakebuf_r+0x1c>
 80284f0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80284f4:	6023      	str	r3, [r4, #0]
 80284f6:	6123      	str	r3, [r4, #16]
 80284f8:	2301      	movs	r3, #1
 80284fa:	6163      	str	r3, [r4, #20]
 80284fc:	b002      	add	sp, #8
 80284fe:	bd70      	pop	{r4, r5, r6, pc}
 8028500:	ab01      	add	r3, sp, #4
 8028502:	466a      	mov	r2, sp
 8028504:	f7ff ffc8 	bl	8028498 <__swhatbuf_r>
 8028508:	9900      	ldr	r1, [sp, #0]
 802850a:	4605      	mov	r5, r0
 802850c:	4630      	mov	r0, r6
 802850e:	f7ff f81b 	bl	8027548 <_malloc_r>
 8028512:	b948      	cbnz	r0, 8028528 <__smakebuf_r+0x44>
 8028514:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8028518:	059a      	lsls	r2, r3, #22
 802851a:	d4ef      	bmi.n	80284fc <__smakebuf_r+0x18>
 802851c:	f023 0303 	bic.w	r3, r3, #3
 8028520:	f043 0302 	orr.w	r3, r3, #2
 8028524:	81a3      	strh	r3, [r4, #12]
 8028526:	e7e3      	b.n	80284f0 <__smakebuf_r+0xc>
 8028528:	89a3      	ldrh	r3, [r4, #12]
 802852a:	6020      	str	r0, [r4, #0]
 802852c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8028530:	81a3      	strh	r3, [r4, #12]
 8028532:	9b00      	ldr	r3, [sp, #0]
 8028534:	6163      	str	r3, [r4, #20]
 8028536:	9b01      	ldr	r3, [sp, #4]
 8028538:	6120      	str	r0, [r4, #16]
 802853a:	b15b      	cbz	r3, 8028554 <__smakebuf_r+0x70>
 802853c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8028540:	4630      	mov	r0, r6
 8028542:	f000 f81d 	bl	8028580 <_isatty_r>
 8028546:	b128      	cbz	r0, 8028554 <__smakebuf_r+0x70>
 8028548:	89a3      	ldrh	r3, [r4, #12]
 802854a:	f023 0303 	bic.w	r3, r3, #3
 802854e:	f043 0301 	orr.w	r3, r3, #1
 8028552:	81a3      	strh	r3, [r4, #12]
 8028554:	89a3      	ldrh	r3, [r4, #12]
 8028556:	431d      	orrs	r5, r3
 8028558:	81a5      	strh	r5, [r4, #12]
 802855a:	e7cf      	b.n	80284fc <__smakebuf_r+0x18>

0802855c <_fstat_r>:
 802855c:	b538      	push	{r3, r4, r5, lr}
 802855e:	4d07      	ldr	r5, [pc, #28]	; (802857c <_fstat_r+0x20>)
 8028560:	2300      	movs	r3, #0
 8028562:	4604      	mov	r4, r0
 8028564:	4608      	mov	r0, r1
 8028566:	4611      	mov	r1, r2
 8028568:	602b      	str	r3, [r5, #0]
 802856a:	f7d9 fe39 	bl	80021e0 <_fstat>
 802856e:	1c43      	adds	r3, r0, #1
 8028570:	d102      	bne.n	8028578 <_fstat_r+0x1c>
 8028572:	682b      	ldr	r3, [r5, #0]
 8028574:	b103      	cbz	r3, 8028578 <_fstat_r+0x1c>
 8028576:	6023      	str	r3, [r4, #0]
 8028578:	bd38      	pop	{r3, r4, r5, pc}
 802857a:	bf00      	nop
 802857c:	20014254 	.word	0x20014254

08028580 <_isatty_r>:
 8028580:	b538      	push	{r3, r4, r5, lr}
 8028582:	4d06      	ldr	r5, [pc, #24]	; (802859c <_isatty_r+0x1c>)
 8028584:	2300      	movs	r3, #0
 8028586:	4604      	mov	r4, r0
 8028588:	4608      	mov	r0, r1
 802858a:	602b      	str	r3, [r5, #0]
 802858c:	f7d9 fe2e 	bl	80021ec <_isatty>
 8028590:	1c43      	adds	r3, r0, #1
 8028592:	d102      	bne.n	802859a <_isatty_r+0x1a>
 8028594:	682b      	ldr	r3, [r5, #0]
 8028596:	b103      	cbz	r3, 802859a <_isatty_r+0x1a>
 8028598:	6023      	str	r3, [r4, #0]
 802859a:	bd38      	pop	{r3, r4, r5, pc}
 802859c:	20014254 	.word	0x20014254

080285a0 <_init>:
 80285a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80285a2:	bf00      	nop
 80285a4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80285a6:	bc08      	pop	{r3}
 80285a8:	469e      	mov	lr, r3
 80285aa:	4770      	bx	lr

080285ac <_fini>:
 80285ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80285ae:	bf00      	nop
 80285b0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80285b2:	bc08      	pop	{r3}
 80285b4:	469e      	mov	lr, r3
 80285b6:	4770      	bx	lr

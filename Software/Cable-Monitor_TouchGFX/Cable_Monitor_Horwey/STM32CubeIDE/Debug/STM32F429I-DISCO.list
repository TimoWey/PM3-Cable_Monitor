
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002b03c  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00017538  0802b1ec  0802b1ec  0003b1ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00002d3e  08042724  08042724  00052724  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000170  08045464  08045464  00055464  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000674  080455d4  080455d4  000555d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 00119030  08045c48  08045c48  00055c48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0815ec78  0815ec78  00170168  2**0
                  CONTENTS
  8 .ARM          00000008  0815ec78  0815ec78  0016ec78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  0815ec80  0815ec80  00170168  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  0815ec80  0815ec80  0016ec80  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000004  0815ec94  0815ec94  0016ec94  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000168  20000000  0815ec98  00170000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          000139f4  20000168  0815ee00  00170168  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  20013b5c  0815ee00  00173b5c  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  00170168  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00180000  2**2
                  ALLOC
 17 .comment      00000132  00000000  00000000  00170198  2**0
                  CONTENTS, READONLY
 18 .debug_line   0009bbd9  00000000  00000000  001702ca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000093  00000000  00000000  0020bea3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   0029325e  00000000  00000000  0020bf36  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 000328ff  00000000  00000000  0049f194  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00004818  00000000  00000000  004d1a98  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    001208f4  00000000  00000000  004d62b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 0000807a  00000000  00000000  005f6ba4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 0003282a  00000000  00000000  005fec1e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  0003c7cc  00000000  00000000  00631448  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000d3e0  00000000  00000000  0066dc14  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_loc    00003378  00000000  00000000  0067aff4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_ranges 00000140  00000000  00000000  0067e36c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000168 	.word	0x20000168
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802b1d4 	.word	0x0802b1d4

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000016c 	.word	0x2000016c
 80001ec:	0802b1d4 	.word	0x0802b1d4

080001f0 <arm_bitreversal_32>:
 80001f0:	1c4b      	adds	r3, r1, #1
 80001f2:	2b01      	cmp	r3, #1
 80001f4:	bf98      	it	ls
 80001f6:	4770      	bxls	lr
 80001f8:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 80001fc:	1c91      	adds	r1, r2, #2
 80001fe:	089b      	lsrs	r3, r3, #2

08000200 <arm_bitreversal_32_0>:
 8000200:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 8000204:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000208:	880a      	ldrh	r2, [r1, #0]
 800020a:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 800020e:	4480      	add	r8, r0
 8000210:	4481      	add	r9, r0
 8000212:	4402      	add	r2, r0
 8000214:	4484      	add	ip, r0
 8000216:	f8d9 7000 	ldr.w	r7, [r9]
 800021a:	f8d8 6000 	ldr.w	r6, [r8]
 800021e:	6815      	ldr	r5, [r2, #0]
 8000220:	f8dc 4000 	ldr.w	r4, [ip]
 8000224:	f8c9 6000 	str.w	r6, [r9]
 8000228:	f8c8 7000 	str.w	r7, [r8]
 800022c:	f8cc 5000 	str.w	r5, [ip]
 8000230:	6014      	str	r4, [r2, #0]
 8000232:	f8d9 7004 	ldr.w	r7, [r9, #4]
 8000236:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800023a:	6855      	ldr	r5, [r2, #4]
 800023c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8000240:	f8c9 6004 	str.w	r6, [r9, #4]
 8000244:	f8c8 7004 	str.w	r7, [r8, #4]
 8000248:	f8cc 5004 	str.w	r5, [ip, #4]
 800024c:	6054      	str	r4, [r2, #4]
 800024e:	3108      	adds	r1, #8
 8000250:	3b01      	subs	r3, #1
 8000252:	d1d5      	bne.n	8000200 <arm_bitreversal_32_0>
 8000254:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8000258:	4770      	bx	lr

0800025a <arm_bitreversal_16>:
 800025a:	1c4b      	adds	r3, r1, #1
 800025c:	2b01      	cmp	r3, #1
 800025e:	bf98      	it	ls
 8000260:	4770      	bxls	lr
 8000262:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 8000266:	1c91      	adds	r1, r2, #2
 8000268:	089b      	lsrs	r3, r3, #2

0800026a <arm_bitreversal_16_0>:
 800026a:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 800026e:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000272:	880a      	ldrh	r2, [r1, #0]
 8000274:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 8000278:	eb00 0858 	add.w	r8, r0, r8, lsr #1
 800027c:	eb00 0959 	add.w	r9, r0, r9, lsr #1
 8000280:	eb00 0252 	add.w	r2, r0, r2, lsr #1
 8000284:	eb00 0c5c 	add.w	ip, r0, ip, lsr #1
 8000288:	f8d9 7000 	ldr.w	r7, [r9]
 800028c:	f8d8 6000 	ldr.w	r6, [r8]
 8000290:	6815      	ldr	r5, [r2, #0]
 8000292:	f8dc 4000 	ldr.w	r4, [ip]
 8000296:	f8c9 6000 	str.w	r6, [r9]
 800029a:	f8c8 7000 	str.w	r7, [r8]
 800029e:	f8cc 5000 	str.w	r5, [ip]
 80002a2:	6014      	str	r4, [r2, #0]
 80002a4:	3108      	adds	r1, #8
 80002a6:	3b01      	subs	r3, #1
 80002a8:	d1df      	bne.n	800026a <arm_bitreversal_16_0>
 80002aa:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 80002ae:	4770      	bx	lr

080002b0 <memchr>:
 80002b0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002b4:	2a10      	cmp	r2, #16
 80002b6:	db2b      	blt.n	8000310 <memchr+0x60>
 80002b8:	f010 0f07 	tst.w	r0, #7
 80002bc:	d008      	beq.n	80002d0 <memchr+0x20>
 80002be:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002c2:	3a01      	subs	r2, #1
 80002c4:	428b      	cmp	r3, r1
 80002c6:	d02d      	beq.n	8000324 <memchr+0x74>
 80002c8:	f010 0f07 	tst.w	r0, #7
 80002cc:	b342      	cbz	r2, 8000320 <memchr+0x70>
 80002ce:	d1f6      	bne.n	80002be <memchr+0xe>
 80002d0:	b4f0      	push	{r4, r5, r6, r7}
 80002d2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80002d6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80002da:	f022 0407 	bic.w	r4, r2, #7
 80002de:	f07f 0700 	mvns.w	r7, #0
 80002e2:	2300      	movs	r3, #0
 80002e4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80002e8:	3c08      	subs	r4, #8
 80002ea:	ea85 0501 	eor.w	r5, r5, r1
 80002ee:	ea86 0601 	eor.w	r6, r6, r1
 80002f2:	fa85 f547 	uadd8	r5, r5, r7
 80002f6:	faa3 f587 	sel	r5, r3, r7
 80002fa:	fa86 f647 	uadd8	r6, r6, r7
 80002fe:	faa5 f687 	sel	r6, r5, r7
 8000302:	b98e      	cbnz	r6, 8000328 <memchr+0x78>
 8000304:	d1ee      	bne.n	80002e4 <memchr+0x34>
 8000306:	bcf0      	pop	{r4, r5, r6, r7}
 8000308:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800030c:	f002 0207 	and.w	r2, r2, #7
 8000310:	b132      	cbz	r2, 8000320 <memchr+0x70>
 8000312:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000316:	3a01      	subs	r2, #1
 8000318:	ea83 0301 	eor.w	r3, r3, r1
 800031c:	b113      	cbz	r3, 8000324 <memchr+0x74>
 800031e:	d1f8      	bne.n	8000312 <memchr+0x62>
 8000320:	2000      	movs	r0, #0
 8000322:	4770      	bx	lr
 8000324:	3801      	subs	r0, #1
 8000326:	4770      	bx	lr
 8000328:	2d00      	cmp	r5, #0
 800032a:	bf06      	itte	eq
 800032c:	4635      	moveq	r5, r6
 800032e:	3803      	subeq	r0, #3
 8000330:	3807      	subne	r0, #7
 8000332:	f015 0f01 	tst.w	r5, #1
 8000336:	d107      	bne.n	8000348 <memchr+0x98>
 8000338:	3001      	adds	r0, #1
 800033a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800033e:	bf02      	ittt	eq
 8000340:	3001      	addeq	r0, #1
 8000342:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000346:	3001      	addeq	r0, #1
 8000348:	bcf0      	pop	{r4, r5, r6, r7}
 800034a:	3801      	subs	r0, #1
 800034c:	4770      	bx	lr
 800034e:	bf00      	nop

08000350 <__aeabi_uldivmod>:
 8000350:	b953      	cbnz	r3, 8000368 <__aeabi_uldivmod+0x18>
 8000352:	b94a      	cbnz	r2, 8000368 <__aeabi_uldivmod+0x18>
 8000354:	2900      	cmp	r1, #0
 8000356:	bf08      	it	eq
 8000358:	2800      	cmpeq	r0, #0
 800035a:	bf1c      	itt	ne
 800035c:	f04f 31ff 	movne.w	r1, #4294967295
 8000360:	f04f 30ff 	movne.w	r0, #4294967295
 8000364:	f000 b970 	b.w	8000648 <__aeabi_idiv0>
 8000368:	f1ad 0c08 	sub.w	ip, sp, #8
 800036c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000370:	f000 f806 	bl	8000380 <__udivmoddi4>
 8000374:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000378:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800037c:	b004      	add	sp, #16
 800037e:	4770      	bx	lr

08000380 <__udivmoddi4>:
 8000380:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000384:	9e08      	ldr	r6, [sp, #32]
 8000386:	460d      	mov	r5, r1
 8000388:	4604      	mov	r4, r0
 800038a:	460f      	mov	r7, r1
 800038c:	2b00      	cmp	r3, #0
 800038e:	d14a      	bne.n	8000426 <__udivmoddi4+0xa6>
 8000390:	428a      	cmp	r2, r1
 8000392:	4694      	mov	ip, r2
 8000394:	d965      	bls.n	8000462 <__udivmoddi4+0xe2>
 8000396:	fab2 f382 	clz	r3, r2
 800039a:	b143      	cbz	r3, 80003ae <__udivmoddi4+0x2e>
 800039c:	fa02 fc03 	lsl.w	ip, r2, r3
 80003a0:	f1c3 0220 	rsb	r2, r3, #32
 80003a4:	409f      	lsls	r7, r3
 80003a6:	fa20 f202 	lsr.w	r2, r0, r2
 80003aa:	4317      	orrs	r7, r2
 80003ac:	409c      	lsls	r4, r3
 80003ae:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 80003b2:	fa1f f58c 	uxth.w	r5, ip
 80003b6:	fbb7 f1fe 	udiv	r1, r7, lr
 80003ba:	0c22      	lsrs	r2, r4, #16
 80003bc:	fb0e 7711 	mls	r7, lr, r1, r7
 80003c0:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 80003c4:	fb01 f005 	mul.w	r0, r1, r5
 80003c8:	4290      	cmp	r0, r2
 80003ca:	d90a      	bls.n	80003e2 <__udivmoddi4+0x62>
 80003cc:	eb1c 0202 	adds.w	r2, ip, r2
 80003d0:	f101 37ff 	add.w	r7, r1, #4294967295
 80003d4:	f080 811c 	bcs.w	8000610 <__udivmoddi4+0x290>
 80003d8:	4290      	cmp	r0, r2
 80003da:	f240 8119 	bls.w	8000610 <__udivmoddi4+0x290>
 80003de:	3902      	subs	r1, #2
 80003e0:	4462      	add	r2, ip
 80003e2:	1a12      	subs	r2, r2, r0
 80003e4:	b2a4      	uxth	r4, r4
 80003e6:	fbb2 f0fe 	udiv	r0, r2, lr
 80003ea:	fb0e 2210 	mls	r2, lr, r0, r2
 80003ee:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80003f2:	fb00 f505 	mul.w	r5, r0, r5
 80003f6:	42a5      	cmp	r5, r4
 80003f8:	d90a      	bls.n	8000410 <__udivmoddi4+0x90>
 80003fa:	eb1c 0404 	adds.w	r4, ip, r4
 80003fe:	f100 32ff 	add.w	r2, r0, #4294967295
 8000402:	f080 8107 	bcs.w	8000614 <__udivmoddi4+0x294>
 8000406:	42a5      	cmp	r5, r4
 8000408:	f240 8104 	bls.w	8000614 <__udivmoddi4+0x294>
 800040c:	4464      	add	r4, ip
 800040e:	3802      	subs	r0, #2
 8000410:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000414:	1b64      	subs	r4, r4, r5
 8000416:	2100      	movs	r1, #0
 8000418:	b11e      	cbz	r6, 8000422 <__udivmoddi4+0xa2>
 800041a:	40dc      	lsrs	r4, r3
 800041c:	2300      	movs	r3, #0
 800041e:	e9c6 4300 	strd	r4, r3, [r6]
 8000422:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000426:	428b      	cmp	r3, r1
 8000428:	d908      	bls.n	800043c <__udivmoddi4+0xbc>
 800042a:	2e00      	cmp	r6, #0
 800042c:	f000 80ed 	beq.w	800060a <__udivmoddi4+0x28a>
 8000430:	2100      	movs	r1, #0
 8000432:	e9c6 0500 	strd	r0, r5, [r6]
 8000436:	4608      	mov	r0, r1
 8000438:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800043c:	fab3 f183 	clz	r1, r3
 8000440:	2900      	cmp	r1, #0
 8000442:	d149      	bne.n	80004d8 <__udivmoddi4+0x158>
 8000444:	42ab      	cmp	r3, r5
 8000446:	d302      	bcc.n	800044e <__udivmoddi4+0xce>
 8000448:	4282      	cmp	r2, r0
 800044a:	f200 80f8 	bhi.w	800063e <__udivmoddi4+0x2be>
 800044e:	1a84      	subs	r4, r0, r2
 8000450:	eb65 0203 	sbc.w	r2, r5, r3
 8000454:	2001      	movs	r0, #1
 8000456:	4617      	mov	r7, r2
 8000458:	2e00      	cmp	r6, #0
 800045a:	d0e2      	beq.n	8000422 <__udivmoddi4+0xa2>
 800045c:	e9c6 4700 	strd	r4, r7, [r6]
 8000460:	e7df      	b.n	8000422 <__udivmoddi4+0xa2>
 8000462:	b902      	cbnz	r2, 8000466 <__udivmoddi4+0xe6>
 8000464:	deff      	udf	#255	; 0xff
 8000466:	fab2 f382 	clz	r3, r2
 800046a:	2b00      	cmp	r3, #0
 800046c:	f040 8090 	bne.w	8000590 <__udivmoddi4+0x210>
 8000470:	1a8a      	subs	r2, r1, r2
 8000472:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000476:	fa1f fe8c 	uxth.w	lr, ip
 800047a:	2101      	movs	r1, #1
 800047c:	fbb2 f5f7 	udiv	r5, r2, r7
 8000480:	fb07 2015 	mls	r0, r7, r5, r2
 8000484:	0c22      	lsrs	r2, r4, #16
 8000486:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800048a:	fb0e f005 	mul.w	r0, lr, r5
 800048e:	4290      	cmp	r0, r2
 8000490:	d908      	bls.n	80004a4 <__udivmoddi4+0x124>
 8000492:	eb1c 0202 	adds.w	r2, ip, r2
 8000496:	f105 38ff 	add.w	r8, r5, #4294967295
 800049a:	d202      	bcs.n	80004a2 <__udivmoddi4+0x122>
 800049c:	4290      	cmp	r0, r2
 800049e:	f200 80cb 	bhi.w	8000638 <__udivmoddi4+0x2b8>
 80004a2:	4645      	mov	r5, r8
 80004a4:	1a12      	subs	r2, r2, r0
 80004a6:	b2a4      	uxth	r4, r4
 80004a8:	fbb2 f0f7 	udiv	r0, r2, r7
 80004ac:	fb07 2210 	mls	r2, r7, r0, r2
 80004b0:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80004b4:	fb0e fe00 	mul.w	lr, lr, r0
 80004b8:	45a6      	cmp	lr, r4
 80004ba:	d908      	bls.n	80004ce <__udivmoddi4+0x14e>
 80004bc:	eb1c 0404 	adds.w	r4, ip, r4
 80004c0:	f100 32ff 	add.w	r2, r0, #4294967295
 80004c4:	d202      	bcs.n	80004cc <__udivmoddi4+0x14c>
 80004c6:	45a6      	cmp	lr, r4
 80004c8:	f200 80bb 	bhi.w	8000642 <__udivmoddi4+0x2c2>
 80004cc:	4610      	mov	r0, r2
 80004ce:	eba4 040e 	sub.w	r4, r4, lr
 80004d2:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80004d6:	e79f      	b.n	8000418 <__udivmoddi4+0x98>
 80004d8:	f1c1 0720 	rsb	r7, r1, #32
 80004dc:	408b      	lsls	r3, r1
 80004de:	fa22 fc07 	lsr.w	ip, r2, r7
 80004e2:	ea4c 0c03 	orr.w	ip, ip, r3
 80004e6:	fa05 f401 	lsl.w	r4, r5, r1
 80004ea:	fa20 f307 	lsr.w	r3, r0, r7
 80004ee:	40fd      	lsrs	r5, r7
 80004f0:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80004f4:	4323      	orrs	r3, r4
 80004f6:	fbb5 f8f9 	udiv	r8, r5, r9
 80004fa:	fa1f fe8c 	uxth.w	lr, ip
 80004fe:	fb09 5518 	mls	r5, r9, r8, r5
 8000502:	0c1c      	lsrs	r4, r3, #16
 8000504:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000508:	fb08 f50e 	mul.w	r5, r8, lr
 800050c:	42a5      	cmp	r5, r4
 800050e:	fa02 f201 	lsl.w	r2, r2, r1
 8000512:	fa00 f001 	lsl.w	r0, r0, r1
 8000516:	d90b      	bls.n	8000530 <__udivmoddi4+0x1b0>
 8000518:	eb1c 0404 	adds.w	r4, ip, r4
 800051c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000520:	f080 8088 	bcs.w	8000634 <__udivmoddi4+0x2b4>
 8000524:	42a5      	cmp	r5, r4
 8000526:	f240 8085 	bls.w	8000634 <__udivmoddi4+0x2b4>
 800052a:	f1a8 0802 	sub.w	r8, r8, #2
 800052e:	4464      	add	r4, ip
 8000530:	1b64      	subs	r4, r4, r5
 8000532:	b29d      	uxth	r5, r3
 8000534:	fbb4 f3f9 	udiv	r3, r4, r9
 8000538:	fb09 4413 	mls	r4, r9, r3, r4
 800053c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000540:	fb03 fe0e 	mul.w	lr, r3, lr
 8000544:	45a6      	cmp	lr, r4
 8000546:	d908      	bls.n	800055a <__udivmoddi4+0x1da>
 8000548:	eb1c 0404 	adds.w	r4, ip, r4
 800054c:	f103 35ff 	add.w	r5, r3, #4294967295
 8000550:	d26c      	bcs.n	800062c <__udivmoddi4+0x2ac>
 8000552:	45a6      	cmp	lr, r4
 8000554:	d96a      	bls.n	800062c <__udivmoddi4+0x2ac>
 8000556:	3b02      	subs	r3, #2
 8000558:	4464      	add	r4, ip
 800055a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800055e:	fba3 9502 	umull	r9, r5, r3, r2
 8000562:	eba4 040e 	sub.w	r4, r4, lr
 8000566:	42ac      	cmp	r4, r5
 8000568:	46c8      	mov	r8, r9
 800056a:	46ae      	mov	lr, r5
 800056c:	d356      	bcc.n	800061c <__udivmoddi4+0x29c>
 800056e:	d053      	beq.n	8000618 <__udivmoddi4+0x298>
 8000570:	b156      	cbz	r6, 8000588 <__udivmoddi4+0x208>
 8000572:	ebb0 0208 	subs.w	r2, r0, r8
 8000576:	eb64 040e 	sbc.w	r4, r4, lr
 800057a:	fa04 f707 	lsl.w	r7, r4, r7
 800057e:	40ca      	lsrs	r2, r1
 8000580:	40cc      	lsrs	r4, r1
 8000582:	4317      	orrs	r7, r2
 8000584:	e9c6 7400 	strd	r7, r4, [r6]
 8000588:	4618      	mov	r0, r3
 800058a:	2100      	movs	r1, #0
 800058c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000590:	f1c3 0120 	rsb	r1, r3, #32
 8000594:	fa02 fc03 	lsl.w	ip, r2, r3
 8000598:	fa20 f201 	lsr.w	r2, r0, r1
 800059c:	fa25 f101 	lsr.w	r1, r5, r1
 80005a0:	409d      	lsls	r5, r3
 80005a2:	432a      	orrs	r2, r5
 80005a4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80005a8:	fa1f fe8c 	uxth.w	lr, ip
 80005ac:	fbb1 f0f7 	udiv	r0, r1, r7
 80005b0:	fb07 1510 	mls	r5, r7, r0, r1
 80005b4:	0c11      	lsrs	r1, r2, #16
 80005b6:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80005ba:	fb00 f50e 	mul.w	r5, r0, lr
 80005be:	428d      	cmp	r5, r1
 80005c0:	fa04 f403 	lsl.w	r4, r4, r3
 80005c4:	d908      	bls.n	80005d8 <__udivmoddi4+0x258>
 80005c6:	eb1c 0101 	adds.w	r1, ip, r1
 80005ca:	f100 38ff 	add.w	r8, r0, #4294967295
 80005ce:	d22f      	bcs.n	8000630 <__udivmoddi4+0x2b0>
 80005d0:	428d      	cmp	r5, r1
 80005d2:	d92d      	bls.n	8000630 <__udivmoddi4+0x2b0>
 80005d4:	3802      	subs	r0, #2
 80005d6:	4461      	add	r1, ip
 80005d8:	1b49      	subs	r1, r1, r5
 80005da:	b292      	uxth	r2, r2
 80005dc:	fbb1 f5f7 	udiv	r5, r1, r7
 80005e0:	fb07 1115 	mls	r1, r7, r5, r1
 80005e4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80005e8:	fb05 f10e 	mul.w	r1, r5, lr
 80005ec:	4291      	cmp	r1, r2
 80005ee:	d908      	bls.n	8000602 <__udivmoddi4+0x282>
 80005f0:	eb1c 0202 	adds.w	r2, ip, r2
 80005f4:	f105 38ff 	add.w	r8, r5, #4294967295
 80005f8:	d216      	bcs.n	8000628 <__udivmoddi4+0x2a8>
 80005fa:	4291      	cmp	r1, r2
 80005fc:	d914      	bls.n	8000628 <__udivmoddi4+0x2a8>
 80005fe:	3d02      	subs	r5, #2
 8000600:	4462      	add	r2, ip
 8000602:	1a52      	subs	r2, r2, r1
 8000604:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000608:	e738      	b.n	800047c <__udivmoddi4+0xfc>
 800060a:	4631      	mov	r1, r6
 800060c:	4630      	mov	r0, r6
 800060e:	e708      	b.n	8000422 <__udivmoddi4+0xa2>
 8000610:	4639      	mov	r1, r7
 8000612:	e6e6      	b.n	80003e2 <__udivmoddi4+0x62>
 8000614:	4610      	mov	r0, r2
 8000616:	e6fb      	b.n	8000410 <__udivmoddi4+0x90>
 8000618:	4548      	cmp	r0, r9
 800061a:	d2a9      	bcs.n	8000570 <__udivmoddi4+0x1f0>
 800061c:	ebb9 0802 	subs.w	r8, r9, r2
 8000620:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000624:	3b01      	subs	r3, #1
 8000626:	e7a3      	b.n	8000570 <__udivmoddi4+0x1f0>
 8000628:	4645      	mov	r5, r8
 800062a:	e7ea      	b.n	8000602 <__udivmoddi4+0x282>
 800062c:	462b      	mov	r3, r5
 800062e:	e794      	b.n	800055a <__udivmoddi4+0x1da>
 8000630:	4640      	mov	r0, r8
 8000632:	e7d1      	b.n	80005d8 <__udivmoddi4+0x258>
 8000634:	46d0      	mov	r8, sl
 8000636:	e77b      	b.n	8000530 <__udivmoddi4+0x1b0>
 8000638:	3d02      	subs	r5, #2
 800063a:	4462      	add	r2, ip
 800063c:	e732      	b.n	80004a4 <__udivmoddi4+0x124>
 800063e:	4608      	mov	r0, r1
 8000640:	e70a      	b.n	8000458 <__udivmoddi4+0xd8>
 8000642:	4464      	add	r4, ip
 8000644:	3802      	subs	r0, #2
 8000646:	e742      	b.n	80004ce <__udivmoddi4+0x14e>

08000648 <__aeabi_idiv0>:
 8000648:	4770      	bx	lr
 800064a:	bf00      	nop

0800064c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800064c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000684 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000650:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000652:	e003      	b.n	800065c <LoopCopyDataInit>

08000654 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000654:	4b0c      	ldr	r3, [pc, #48]	; (8000688 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000656:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000658:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800065a:	3104      	adds	r1, #4

0800065c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800065c:	480b      	ldr	r0, [pc, #44]	; (800068c <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800065e:	4b0c      	ldr	r3, [pc, #48]	; (8000690 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000660:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000662:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000664:	d3f6      	bcc.n	8000654 <CopyDataInit>
  ldr  r2, =_sbss
 8000666:	4a0b      	ldr	r2, [pc, #44]	; (8000694 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000668:	e002      	b.n	8000670 <LoopFillZerobss>

0800066a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800066a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800066c:	f842 3b04 	str.w	r3, [r2], #4

08000670 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000670:	4b09      	ldr	r3, [pc, #36]	; (8000698 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000672:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000674:	d3f9      	bcc.n	800066a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000676:	f008 fd19 	bl	80090ac <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800067a:	f02a f82f 	bl	802a6dc <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800067e:	f000 fecd 	bl	800141c <main>
  bx  lr    
 8000682:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000684:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000688:	0815ec98 	.word	0x0815ec98
  ldr  r0, =_sdata
 800068c:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000690:	20000168 	.word	0x20000168
  ldr  r2, =_sbss
 8000694:	20000168 	.word	0x20000168
  ldr  r3, = _ebss
 8000698:	20013b5c 	.word	0x20013b5c

0800069c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800069c:	e7fe      	b.n	800069c <ADC_IRQHandler>
	...

080006a0 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 80006a0:	4770      	bx	lr
 80006a2:	bf00      	nop

080006a4 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80006a4:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 80006a6:	f000 fbab 	bl	8000e00 <touchgfx_components_init>
  touchgfx_init();
}
 80006aa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 80006ae:	f000 bb33 	b.w	8000d18 <touchgfx_init>
 80006b2:	bf00      	nop

080006b4 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80006b4:	f000 bba6 	b.w	8000e04 <touchgfx_taskEntry>

080006b8 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80006b8:	4770      	bx	lr

080006ba <_ZN20STM32TouchControllerD0Ev>:
 80006ba:	b510      	push	{r4, lr}
 80006bc:	2104      	movs	r1, #4
 80006be:	4604      	mov	r4, r0
 80006c0:	f028 fef5 	bl	80294ae <_ZdlPvj>
 80006c4:	4620      	mov	r0, r4
 80006c6:	bd10      	pop	{r4, pc}

080006c8 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 80006c8:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 80006ca:	4b0c      	ldr	r3, [pc, #48]	; (80006fc <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006cc:	4c0c      	ldr	r4, [pc, #48]	; (8000700 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 80006ce:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 80006d0:	4b0c      	ldr	r3, [pc, #48]	; (8000704 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006d2:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 80006d4:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006d6:	6863      	ldr	r3, [r4, #4]
 80006d8:	4798      	blx	r3
 80006da:	f640 0311 	movw	r3, #2065	; 0x811
 80006de:	4298      	cmp	r0, r3
 80006e0:	d10a      	bne.n	80006f8 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 80006e2:	4d09      	ldr	r5, [pc, #36]	; (8000708 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 80006e4:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 80006e6:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 80006e8:	2082      	movs	r0, #130	; 0x82
 80006ea:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 80006ec:	682b      	ldr	r3, [r5, #0]
 80006ee:	2082      	movs	r0, #130	; 0x82
 80006f0:	68db      	ldr	r3, [r3, #12]
 80006f2:	4798      	blx	r3
 80006f4:	2000      	movs	r0, #0
    }

    return ret;
}
 80006f6:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 80006f8:	2001      	movs	r0, #1
 80006fa:	e7fc      	b.n	80006f6 <_Z11BSP_TS_Inittt+0x2e>
 80006fc:	20000184 	.word	0x20000184
 8000700:	20000050 	.word	0x20000050
 8000704:	20000186 	.word	0x20000186
 8000708:	20000188 	.word	0x20000188

0800070c <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 800070c:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000710:	20f0      	movs	r0, #240	; 0xf0
 8000712:	f7ff bfd9 	b.w	80006c8 <_Z11BSP_TS_Inittt>
	...

08000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000718:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800071a:	4d33      	ldr	r5, [pc, #204]	; (80007e8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 800071c:	682b      	ldr	r3, [r5, #0]
{
 800071e:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000720:	691b      	ldr	r3, [r3, #16]
 8000722:	2082      	movs	r0, #130	; 0x82
 8000724:	4798      	blx	r3
 8000726:	b280      	uxth	r0, r0
 8000728:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 800072a:	2800      	cmp	r0, #0
 800072c:	d04a      	beq.n	80007c4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 800072e:	682b      	ldr	r3, [r5, #0]
 8000730:	f10d 0206 	add.w	r2, sp, #6
 8000734:	695b      	ldr	r3, [r3, #20]
 8000736:	a901      	add	r1, sp, #4
 8000738:	2082      	movs	r0, #130	; 0x82
 800073a:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 800073c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000740:	f640 6274 	movw	r2, #3700	; 0xe74
 8000744:	4293      	cmp	r3, r2
 8000746:	d93f      	bls.n	80007c8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 8000748:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 800074c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000750:	1ad2      	subs	r2, r2, r3
 8000752:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8000754:	2a0a      	cmp	r2, #10
 8000756:	d93d      	bls.n	80007d4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 8000758:	230b      	movs	r3, #11
 800075a:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 800075e:	4b23      	ldr	r3, [pc, #140]	; (80007ec <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 8000760:	881b      	ldrh	r3, [r3, #0]
 8000762:	429a      	cmp	r2, r3
 8000764:	d901      	bls.n	800076a <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 8000766:	3b01      	subs	r3, #1
 8000768:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 800076a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800076e:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8000772:	428b      	cmp	r3, r1
 8000774:	d830      	bhi.n	80007d8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 8000776:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 800077a:	330e      	adds	r3, #14
 800077c:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 800077e:	210f      	movs	r1, #15
 8000780:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 8000784:	491a      	ldr	r1, [pc, #104]	; (80007f0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 8000786:	8809      	ldrh	r1, [r1, #0]
 8000788:	428b      	cmp	r3, r1
 800078a:	d901      	bls.n	8000790 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 800078c:	3901      	subs	r1, #1
 800078e:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000790:	4e18      	ldr	r6, [pc, #96]	; (80007f4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000792:	4d19      	ldr	r5, [pc, #100]	; (80007f8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000794:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000796:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000798:	4283      	cmp	r3, r0
 800079a:	b281      	uxth	r1, r0
 800079c:	bf8c      	ite	hi
 800079e:	1a59      	subhi	r1, r3, r1
 80007a0:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80007a2:	b2b8      	uxth	r0, r7
 80007a4:	42ba      	cmp	r2, r7
 80007a6:	bf8c      	ite	hi
 80007a8:	1a10      	subhi	r0, r2, r0
 80007aa:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80007ac:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80007ae:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80007b0:	4401      	add	r1, r0
 80007b2:	2905      	cmp	r1, #5
        {
            _x = x;
 80007b4:	bfc8      	it	gt
 80007b6:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80007b8:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80007ba:	bfc8      	it	gt
 80007bc:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80007be:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80007c0:	682b      	ldr	r3, [r5, #0]
 80007c2:	80a3      	strh	r3, [r4, #4]
    }
}
 80007c4:	b003      	add	sp, #12
 80007c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 80007c8:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 80007ca:	bf9c      	itt	ls
 80007cc:	23b4      	movls	r3, #180	; 0xb4
 80007ce:	f8ad 3006 	strhls.w	r3, [sp, #6]
 80007d2:	e7bb      	b.n	800074c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 80007d4:	2200      	movs	r2, #0
 80007d6:	e7c8      	b.n	800076a <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 80007d8:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 80007dc:	3308      	adds	r3, #8
 80007de:	b29b      	uxth	r3, r3
        if (xr <= 0)
 80007e0:	2b0e      	cmp	r3, #14
 80007e2:	d8cc      	bhi.n	800077e <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 80007e4:	2300      	movs	r3, #0
 80007e6:	e7d3      	b.n	8000790 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 80007e8:	20000188 	.word	0x20000188
 80007ec:	20000186 	.word	0x20000186
 80007f0:	20000184 	.word	0x20000184
 80007f4:	2000018c 	.word	0x2000018c
 80007f8:	20000190 	.word	0x20000190

080007fc <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 80007fc:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 80007fe:	4668      	mov	r0, sp
{
 8000800:	460d      	mov	r5, r1
 8000802:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000804:	f7ff ff88 	bl	8000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000808:	f8bd 0000 	ldrh.w	r0, [sp]
 800080c:	b148      	cbz	r0, 8000822 <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 800080e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000812:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000814:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000818:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 800081a:	4b03      	ldr	r3, [pc, #12]	; (8000828 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 800081c:	223c      	movs	r2, #60	; 0x3c
 800081e:	601a      	str	r2, [r3, #0]
        return true;
 8000820:	2001      	movs	r0, #1
}
 8000822:	b003      	add	sp, #12
 8000824:	bd30      	pop	{r4, r5, pc}
 8000826:	bf00      	nop
 8000828:	20000014 	.word	0x20000014

0800082c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 800082c:	b110      	cbz	r0, 8000834 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 800082e:	2802      	cmp	r0, #2
 8000830:	d009      	beq.n	8000846 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8000832:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000834:	4b07      	ldr	r3, [pc, #28]	; (8000854 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8000836:	681a      	ldr	r2, [r3, #0]
 8000838:	fab2 f282 	clz	r2, r2
 800083c:	0952      	lsrs	r2, r2, #5
 800083e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8000840:	4805      	ldr	r0, [pc, #20]	; (8000858 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8000842:	f009 b83d 	b.w	80098c0 <HAL_GPIO_WritePin>
 8000846:	4b03      	ldr	r3, [pc, #12]	; (8000854 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8000848:	689a      	ldr	r2, [r3, #8]
 800084a:	fab2 f282 	clz	r2, r2
 800084e:	0952      	lsrs	r2, r2, #5
 8000850:	2110      	movs	r1, #16
 8000852:	e7f5      	b.n	8000840 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 8000854:	20000194 	.word	0x20000194
 8000858:	40021000 	.word	0x40021000

0800085c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 800085c:	b110      	cbz	r0, 8000864 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 800085e:	2802      	cmp	r0, #2
 8000860:	d009      	beq.n	8000876 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8000862:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8000864:	4b07      	ldr	r3, [pc, #28]	; (8000884 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8000866:	681a      	ldr	r2, [r3, #0]
 8000868:	3a00      	subs	r2, #0
 800086a:	bf18      	it	ne
 800086c:	2201      	movne	r2, #1
 800086e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8000870:	4805      	ldr	r0, [pc, #20]	; (8000888 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 8000872:	f009 b825 	b.w	80098c0 <HAL_GPIO_WritePin>
 8000876:	4b03      	ldr	r3, [pc, #12]	; (8000884 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8000878:	689a      	ldr	r2, [r3, #8]
 800087a:	3a00      	subs	r2, #0
 800087c:	bf18      	it	ne
 800087e:	2201      	movne	r2, #1
 8000880:	2110      	movs	r1, #16
 8000882:	e7f5      	b.n	8000870 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 8000884:	20000194 	.word	0x20000194
 8000888:	40021000 	.word	0x40021000

0800088c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 800088c:	b110      	cbz	r0, 8000894 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 800088e:	2802      	cmp	r0, #2
 8000890:	d004      	beq.n	800089c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 8000892:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000894:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000896:	4802      	ldr	r0, [pc, #8]	; (80008a0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 8000898:	f009 b816 	b.w	80098c8 <HAL_GPIO_TogglePin>
 800089c:	2110      	movs	r1, #16
 800089e:	e7fa      	b.n	8000896 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 80008a0:	40021000 	.word	0x40021000

080008a4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 80008a4:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 80008a6:	b130      	cbz	r0, 80008b6 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 80008a8:	2802      	cmp	r0, #2
 80008aa:	d009      	beq.n	80008c0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 80008ac:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 80008ae:	1e43      	subs	r3, r0, #1
 80008b0:	4258      	negs	r0, r3
 80008b2:	4158      	adcs	r0, r3
 80008b4:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80008b6:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80008b8:	4802      	ldr	r0, [pc, #8]	; (80008c4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 80008ba:	f008 fffb 	bl	80098b4 <HAL_GPIO_ReadPin>
        break;
 80008be:	e7f6      	b.n	80008ae <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80008c0:	2110      	movs	r1, #16
 80008c2:	e7f9      	b.n	80008b8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 80008c4:	40021000 	.word	0x40021000

080008c8 <_ZN8touchgfx4GPIO4initEv>:
{
 80008c8:	b570      	push	{r4, r5, r6, lr}
 80008ca:	4d08      	ldr	r5, [pc, #32]	; (80008ec <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 80008cc:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 80008ce:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 80008d0:	b2e0      	uxtb	r0, r4
 80008d2:	f7ff ffe7 	bl	80008a4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 80008d6:	b118      	cbz	r0, 80008e0 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 80008d8:	682b      	ldr	r3, [r5, #0]
 80008da:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 80008dc:	bf18      	it	ne
 80008de:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 80008e0:	3401      	adds	r4, #1
 80008e2:	2c05      	cmp	r4, #5
 80008e4:	f105 0504 	add.w	r5, r5, #4
 80008e8:	d1f2      	bne.n	80008d0 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 80008ea:	bd70      	pop	{r4, r5, r6, pc}
 80008ec:	20000194 	.word	0x20000194

080008f0 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 80008f0:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 80008f2:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 80008f6:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 80008fa:	4770      	bx	lr

080008fc <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 80008fc:	2000      	movs	r0, #0
 80008fe:	4770      	bx	lr

08000900 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000900:	4b03      	ldr	r3, [pc, #12]	; (8000910 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8000902:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000904:	3900      	subs	r1, #0
 8000906:	bf18      	it	ne
 8000908:	2101      	movne	r1, #1
 800090a:	7019      	strb	r1, [r3, #0]
    }
 800090c:	4770      	bx	lr
 800090e:	bf00      	nop
 8000910:	20012f23 	.word	0x20012f23

08000914 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000914:	2000      	movs	r0, #0
 8000916:	4770      	bx	lr

08000918 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000918:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800091a:	b10b      	cbz	r3, 8000920 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 800091c:	4608      	mov	r0, r1
 800091e:	4718      	bx	r3
        }
    }
 8000920:	4770      	bx	lr

08000922 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000922:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8000926:	4770      	bx	lr

08000928 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000928:	6840      	ldr	r0, [r0, #4]
 800092a:	6803      	ldr	r3, [r0, #0]
 800092c:	699b      	ldr	r3, [r3, #24]
 800092e:	4718      	bx	r3

08000930 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000930:	4770      	bx	lr

08000932 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8000932:	4770      	bx	lr

08000934 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000934:	4770      	bx	lr
	...

08000938 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8000938:	b510      	push	{r4, lr}
 800093a:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800093c:	f000 fb4e 	bl	8000fdc <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8000940:	6823      	ldr	r3, [r4, #0]
 8000942:	4903      	ldr	r1, [pc, #12]	; (8000950 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8000944:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000948:	4620      	mov	r0, r4
}
 800094a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 800094e:	4718      	bx	r3
 8000950:	d0000000 	.word	0xd0000000

08000954 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8000954:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000956:	6803      	ldr	r3, [r0, #0]
{
 8000958:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 800095a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800095e:	4798      	blx	r3
    enableInterrupts();
 8000960:	6823      	ldr	r3, [r4, #0]
 8000962:	4620      	mov	r0, r4
 8000964:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8000966:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8000968:	f000 f8ec 	bl	8000b44 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 800096c:	6823      	ldr	r3, [r4, #0]
 800096e:	4620      	mov	r0, r4
 8000970:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000972:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8000974:	2029      	movs	r0, #41	; 0x29
 8000976:	f001 f897 	bl	8001aa8 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 800097a:	f000 f8e3 	bl	8000b44 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 800097e:	6823      	ldr	r3, [r4, #0]
 8000980:	4620      	mov	r0, r4
 8000982:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000984:	4798      	blx	r3
    for (;;)
 8000986:	e7f8      	b.n	800097a <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08000988 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8000988:	b510      	push	{r4, lr}
 800098a:	4604      	mov	r4, r0
        swapFrameBuffers();
 800098c:	f010 faaa 	bl	8010ee4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8000990:	6823      	ldr	r3, [r4, #0]
 8000992:	4620      	mov	r0, r4
 8000994:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8000998:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 800099c:	4718      	bx	r3

0800099e <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 800099e:	f000 bb0f 	b.w	8000fc0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080009a2 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80009a2:	f000 bb13 	b.w	8000fcc <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080009a6 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80009a6:	f000 bb37 	b.w	8001018 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080009aa <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80009aa:	f000 badf 	b.w	8000f6c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080009ae <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80009ae:	f000 bae5 	b.w	8000f7c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080009b2 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80009b2:	f000 bb3d 	b.w	8001030 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080009b6 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80009b6:	f000 bae9 	b.w	8000f8c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080009ba <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80009ba:	f00f bcff 	b.w	80103bc <_ZN8touchgfx3HAL16flushFrameBufferEv>

080009be <_ZN11TouchGFXHALD0Ev>:
 80009be:	b510      	push	{r4, lr}
 80009c0:	217c      	movs	r1, #124	; 0x7c
 80009c2:	4604      	mov	r4, r0
 80009c4:	f028 fd73 	bl	80294ae <_ZdlPvj>
 80009c8:	4620      	mov	r0, r4
 80009ca:	bd10      	pop	{r4, pc}

080009cc <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 80009cc:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 80009d0:	b11b      	cbz	r3, 80009da <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 80009d2:	6840      	ldr	r0, [r0, #4]
 80009d4:	6803      	ldr	r3, [r0, #0]
 80009d6:	681b      	ldr	r3, [r3, #0]
 80009d8:	4718      	bx	r3
    }
 80009da:	4618      	mov	r0, r3
 80009dc:	4770      	bx	lr
	...

080009e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 80009e0:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 80009e2:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 80009e6:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 80009ea:	4b0c      	ldr	r3, [pc, #48]	; (8000a1c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 80009ec:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 80009ee:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 80009f0:	d009      	beq.n	8000a06 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 80009f2:	b93a      	cbnz	r2, 8000a04 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009f4:	4a0a      	ldr	r2, [pc, #40]	; (8000a20 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 80009f6:	490b      	ldr	r1, [pc, #44]	; (8000a24 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009f8:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 80009fa:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 80009fc:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009fe:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8000a00:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8000a02:	701a      	strb	r2, [r3, #0]
    }
 8000a04:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000a06:	2a00      	cmp	r2, #0
 8000a08:	d0fc      	beq.n	8000a04 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a0a:	4a05      	ldr	r2, [pc, #20]	; (8000a20 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000a0c:	4905      	ldr	r1, [pc, #20]	; (8000a24 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a0e:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000a10:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8000a12:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a14:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000a16:	2200      	movs	r2, #0
 8000a18:	e7f3      	b.n	8000a02 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8000a1a:	bf00      	nop
 8000a1c:	20012f1c 	.word	0x20012f1c
 8000a20:	20012f18 	.word	0x20012f18
 8000a24:	20012f1a 	.word	0x20012f1a

08000a28 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000a28:	b570      	push	{r4, r5, r6, lr}
 8000a2a:	460d      	mov	r5, r1
 8000a2c:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8000a2e:	b935      	cbnz	r5, 8000a3e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8000a30:	4b09      	ldr	r3, [pc, #36]	; (8000a58 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8000a32:	4a0a      	ldr	r2, [pc, #40]	; (8000a5c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000a34:	480a      	ldr	r0, [pc, #40]	; (8000a60 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000a36:	f240 21d2 	movw	r1, #722	; 0x2d2
 8000a3a:	f029 fb4b 	bl	802a0d4 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8000a3e:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000a42:	4b08      	ldr	r3, [pc, #32]	; (8000a64 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000a44:	3a00      	subs	r2, #0
 8000a46:	bf18      	it	ne
 8000a48:	2201      	movne	r2, #1
 8000a4a:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000a4c:	6803      	ldr	r3, [r0, #0]
    }
 8000a4e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8000a52:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000a56:	4718      	bx	r3
 8000a58:	0802b244 	.word	0x0802b244
 8000a5c:	0802b27c 	.word	0x0802b27c
 8000a60:	0802b2ca 	.word	0x0802b2ca
 8000a64:	20012f22 	.word	0x20012f22

08000a68 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8000a68:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8000a6a:	4b09      	ldr	r3, [pc, #36]	; (8000a90 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8000a6c:	881b      	ldrh	r3, [r3, #0]
 8000a6e:	428b      	cmp	r3, r1
 8000a70:	d803      	bhi.n	8000a7a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8000a72:	4b08      	ldr	r3, [pc, #32]	; (8000a94 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8000a74:	881b      	ldrh	r3, [r3, #0]
 8000a76:	4293      	cmp	r3, r2
 8000a78:	d905      	bls.n	8000a86 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8000a7a:	4b07      	ldr	r3, [pc, #28]	; (8000a98 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8000a7c:	4a07      	ldr	r2, [pc, #28]	; (8000a9c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8000a7e:	4808      	ldr	r0, [pc, #32]	; (8000aa0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8000a80:	219e      	movs	r1, #158	; 0x9e
 8000a82:	f029 fb27 	bl	802a0d4 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8000a86:	4b07      	ldr	r3, [pc, #28]	; (8000aa4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8000a88:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8000a8a:	4b07      	ldr	r3, [pc, #28]	; (8000aa8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8000a8c:	801a      	strh	r2, [r3, #0]
    }
 8000a8e:	bd08      	pop	{r3, pc}
 8000a90:	20012f18 	.word	0x20012f18
 8000a94:	20012f1a 	.word	0x20012f1a
 8000a98:	0802b30f 	.word	0x0802b30f
 8000a9c:	0802b372 	.word	0x0802b372
 8000aa0:	0802b2ca 	.word	0x0802b2ca
 8000aa4:	20012f1e 	.word	0x20012f1e
 8000aa8:	20012f20 	.word	0x20012f20

08000aac <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000aac:	2101      	movs	r1, #1
{
 8000aae:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000ab0:	2200      	movs	r2, #0
 8000ab2:	4608      	mov	r0, r1
 8000ab4:	f00c fa88 	bl	800cfc8 <osSemaphoreNew>
 8000ab8:	4b0a      	ldr	r3, [pc, #40]	; (8000ae4 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000aba:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000abc:	b928      	cbnz	r0, 8000aca <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000abe:	4b0a      	ldr	r3, [pc, #40]	; (8000ae8 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000ac0:	4a0a      	ldr	r2, [pc, #40]	; (8000aec <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000ac2:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000ac4:	480a      	ldr	r0, [pc, #40]	; (8000af0 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000ac6:	f029 fb05 	bl	802a0d4 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000aca:	2200      	movs	r2, #0
 8000acc:	2104      	movs	r1, #4
 8000ace:	2001      	movs	r0, #1
 8000ad0:	f00c fb2e 	bl	800d130 <osMessageQueueNew>
 8000ad4:	4b07      	ldr	r3, [pc, #28]	; (8000af4 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000ad6:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000ad8:	b918      	cbnz	r0, 8000ae2 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000ada:	4b07      	ldr	r3, [pc, #28]	; (8000af8 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000adc:	4a03      	ldr	r2, [pc, #12]	; (8000aec <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000ade:	212c      	movs	r1, #44	; 0x2c
 8000ae0:	e7f0      	b.n	8000ac4 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000ae2:	bd08      	pop	{r3, pc}
 8000ae4:	200001a8 	.word	0x200001a8
 8000ae8:	0802b490 	.word	0x0802b490
 8000aec:	0802b4d9 	.word	0x0802b4d9
 8000af0:	0802b508 	.word	0x0802b508
 8000af4:	200001a4 	.word	0x200001a4
 8000af8:	0802b582 	.word	0x0802b582

08000afc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000afc:	4b02      	ldr	r3, [pc, #8]	; (8000b08 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000afe:	f04f 31ff 	mov.w	r1, #4294967295
 8000b02:	6818      	ldr	r0, [r3, #0]
 8000b04:	f00c bab4 	b.w	800d070 <osSemaphoreAcquire>
 8000b08:	200001a8 	.word	0x200001a8

08000b0c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000b0c:	4b01      	ldr	r3, [pc, #4]	; (8000b14 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000b0e:	6818      	ldr	r0, [r3, #0]
 8000b10:	f00c bae2 	b.w	800d0d8 <osSemaphoreRelease>
 8000b14:	200001a8 	.word	0x200001a8

08000b18 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000b18:	4b02      	ldr	r3, [pc, #8]	; (8000b24 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000b1a:	2100      	movs	r1, #0
 8000b1c:	6818      	ldr	r0, [r3, #0]
 8000b1e:	f00c baa7 	b.w	800d070 <osSemaphoreAcquire>
 8000b22:	bf00      	nop
 8000b24:	200001a8 	.word	0x200001a8

08000b28 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000b28:	f7ff bff0 	b.w	8000b0c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000b2c <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000b2c:	4803      	ldr	r0, [pc, #12]	; (8000b3c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000b2e:	4904      	ldr	r1, [pc, #16]	; (8000b40 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000b30:	6800      	ldr	r0, [r0, #0]
 8000b32:	2300      	movs	r3, #0
 8000b34:	461a      	mov	r2, r3
 8000b36:	f00c bb35 	b.w	800d1a4 <osMessageQueuePut>
 8000b3a:	bf00      	nop
 8000b3c:	200001a4 	.word	0x200001a4
 8000b40:	20000004 	.word	0x20000004

08000b44 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000b44:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000b46:	4c08      	ldr	r4, [pc, #32]	; (8000b68 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000b48:	2300      	movs	r3, #0
 8000b4a:	461a      	mov	r2, r3
 8000b4c:	a901      	add	r1, sp, #4
 8000b4e:	6820      	ldr	r0, [r4, #0]
 8000b50:	f00c fb5e 	bl	800d210 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000b54:	6820      	ldr	r0, [r4, #0]
 8000b56:	f04f 33ff 	mov.w	r3, #4294967295
 8000b5a:	2200      	movs	r2, #0
 8000b5c:	a901      	add	r1, sp, #4
 8000b5e:	f00c fb57 	bl	800d210 <osMessageQueueGet>
}
 8000b62:	b002      	add	sp, #8
 8000b64:	bd10      	pop	{r4, pc}
 8000b66:	bf00      	nop
 8000b68:	200001a4 	.word	0x200001a4

08000b6c <_ZN8touchgfx13DMA_Interface10initializeEv>:
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
    {
    }
 8000b6c:	4770      	bx	lr

08000b6e <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
 8000b6e:	2000      	movs	r0, #0
 8000b70:	4770      	bx	lr

08000b72 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
    {
    }
 8000b72:	4770      	bx	lr

08000b74 <_ZN8STM32DMA5flushEv>:
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
    {
    }
 8000b74:	4770      	bx	lr

08000b76 <_ZN8STM32DMA11getBlitCapsEv>:
}

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
    return static_cast<touchgfx::BlitOperations>(0);
}
 8000b76:	2000      	movs	r0, #0
 8000b78:	4770      	bx	lr

08000b7a <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 8000b7a:	4770      	bx	lr

08000b7c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 8000b7c:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8000b7e:	4a03      	ldr	r2, [pc, #12]	; (8000b8c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10>)
 8000b80:	4b03      	ldr	r3, [pc, #12]	; (8000b90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14>)
 8000b82:	4804      	ldr	r0, [pc, #16]	; (8000b94 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 8000b84:	2122      	movs	r1, #34	; 0x22
 8000b86:	f029 faa5 	bl	802a0d4 <__assert_func>
 8000b8a:	bf00      	nop
 8000b8c:	0802b5e7 	.word	0x0802b5e7
 8000b90:	0802b5c4 	.word	0x0802b5c4
 8000b94:	0802b625 	.word	0x0802b625

08000b98 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 8000b98:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8000b9a:	4a03      	ldr	r2, [pc, #12]	; (8000ba8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10>)
 8000b9c:	4b03      	ldr	r3, [pc, #12]	; (8000bac <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x14>)
 8000b9e:	4804      	ldr	r0, [pc, #16]	; (8000bb0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 8000ba0:	2127      	movs	r1, #39	; 0x27
 8000ba2:	f029 fa97 	bl	802a0d4 <__assert_func>
 8000ba6:	bf00      	nop
 8000ba8:	0802b69d 	.word	0x0802b69d
 8000bac:	0802b5c4 	.word	0x0802b5c4
 8000bb0:	0802b625 	.word	0x0802b625

08000bb4 <_ZN8STM32DMAD0Ev>:
 8000bb4:	b510      	push	{r4, lr}
 8000bb6:	2144      	movs	r1, #68	; 0x44
 8000bb8:	4604      	mov	r4, r0
 8000bba:	f028 fc78 	bl	80294ae <_ZdlPvj>
 8000bbe:	4620      	mov	r0, r4
 8000bc0:	bd10      	pop	{r4, pc}
	...

08000bc4 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000bc4:	b538      	push	{r3, r4, r5, lr}
 8000bc6:	4604      	mov	r4, r0
    : DMA_Interface(q), q(&b, 1)
 8000bc8:	4621      	mov	r1, r4
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000bca:	2500      	movs	r5, #0
 8000bcc:	4b06      	ldr	r3, [pc, #24]	; (8000be8 <_ZN8STM32DMAC1Ev+0x24>)
 8000bce:	7225      	strb	r5, [r4, #8]
 8000bd0:	300c      	adds	r0, #12
 8000bd2:	6060      	str	r0, [r4, #4]
 8000bd4:	7265      	strb	r5, [r4, #9]
 8000bd6:	2201      	movs	r2, #1
 8000bd8:	f841 3b20 	str.w	r3, [r1], #32
 8000bdc:	f010 fada 	bl	8011194 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000be0:	62e5      	str	r5, [r4, #44]	; 0x2c
}
 8000be2:	4620      	mov	r0, r4
 8000be4:	bd38      	pop	{r3, r4, r5, pc}
 8000be6:	bf00      	nop
 8000be8:	0802b6e4 	.word	0x0802b6e4

08000bec <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000bec:	2001      	movs	r0, #1
 8000bee:	4770      	bx	lr

08000bf0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000bf0:	2038      	movs	r0, #56	; 0x38
 8000bf2:	4770      	bx	lr

08000bf4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000bf4:	2338      	movs	r3, #56	; 0x38
 8000bf6:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000bfa:	3008      	adds	r0, #8
 8000bfc:	4770      	bx	lr

08000bfe <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000bfe:	2338      	movs	r3, #56	; 0x38
 8000c00:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000c04:	3008      	adds	r0, #8
 8000c06:	4770      	bx	lr

08000c08 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000c08:	2001      	movs	r0, #1
 8000c0a:	4770      	bx	lr

08000c0c <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000c0c:	f241 30f4 	movw	r0, #5108	; 0x13f4
 8000c10:	4770      	bx	lr

08000c12 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000c12:	f241 33f4 	movw	r3, #5108	; 0x13f4
 8000c16:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000c1a:	3008      	adds	r0, #8
 8000c1c:	4770      	bx	lr

08000c1e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000c1e:	f241 33f4 	movw	r3, #5108	; 0x13f4
 8000c22:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000c26:	3008      	adds	r0, #8
 8000c28:	4770      	bx	lr

08000c2a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000c2a:	2001      	movs	r0, #1
 8000c2c:	4770      	bx	lr

08000c2e <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000c2e:	2010      	movs	r0, #16
 8000c30:	4770      	bx	lr

08000c32 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000c32:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000c36:	3008      	adds	r0, #8
 8000c38:	4770      	bx	lr

08000c3a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000c3a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000c3e:	3008      	adds	r0, #8
 8000c40:	4770      	bx	lr

08000c42 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMain_MenuScreenNoTransition();
 8000c42:	4608      	mov	r0, r1
 8000c44:	f002 bece 	b.w	80039e4 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>

08000c48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000c48:	b510      	push	{r4, lr}
 8000c4a:	4b03      	ldr	r3, [pc, #12]	; (8000c58 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8000c4c:	6003      	str	r3, [r0, #0]
 8000c4e:	4604      	mov	r4, r0
 8000c50:	f00e ff3d 	bl	800face <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000c54:	4620      	mov	r0, r4
 8000c56:	bd10      	pop	{r4, pc}
 8000c58:	0802b79c 	.word	0x0802b79c

08000c5c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8000c5c:	b510      	push	{r4, lr}
 8000c5e:	4604      	mov	r4, r0
 8000c60:	f7ff fff2 	bl	8000c48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000c64:	4620      	mov	r0, r4
 8000c66:	2140      	movs	r1, #64	; 0x40
 8000c68:	f028 fc21 	bl	80294ae <_ZdlPvj>
 8000c6c:	4620      	mov	r0, r4
 8000c6e:	bd10      	pop	{r4, pc}

08000c70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000c70:	b510      	push	{r4, lr}
 8000c72:	4b03      	ldr	r3, [pc, #12]	; (8000c80 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000c74:	6003      	str	r3, [r0, #0]
 8000c76:	4604      	mov	r4, r0
 8000c78:	f00e ff29 	bl	800face <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000c7c:	4620      	mov	r0, r4
 8000c7e:	bd10      	pop	{r4, pc}
 8000c80:	0802b768 	.word	0x0802b768

08000c84 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000c84:	b510      	push	{r4, lr}
 8000c86:	4604      	mov	r4, r0
 8000c88:	f7ff fff2 	bl	8000c70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000c8c:	4620      	mov	r0, r4
 8000c8e:	f241 31fc 	movw	r1, #5116	; 0x13fc
 8000c92:	f028 fc0c 	bl	80294ae <_ZdlPvj>
 8000c96:	4620      	mov	r0, r4
 8000c98:	bd10      	pop	{r4, pc}
	...

08000c9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000c9c:	b510      	push	{r4, lr}
 8000c9e:	4b03      	ldr	r3, [pc, #12]	; (8000cac <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000ca0:	6003      	str	r3, [r0, #0]
 8000ca2:	4604      	mov	r4, r0
 8000ca4:	f00e ff13 	bl	800face <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000ca8:	4620      	mov	r0, r4
 8000caa:	bd10      	pop	{r4, pc}
 8000cac:	0802b734 	.word	0x0802b734

08000cb0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000cb0:	b510      	push	{r4, lr}
 8000cb2:	4604      	mov	r4, r0
 8000cb4:	f7ff fff2 	bl	8000c9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000cb8:	4620      	mov	r0, r4
 8000cba:	2118      	movs	r1, #24
 8000cbc:	f028 fbf7 	bl	80294ae <_ZdlPvj>
 8000cc0:	4620      	mov	r0, r4
 8000cc2:	bd10      	pop	{r4, pc}

08000cc4 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000cc4:	b510      	push	{r4, lr}
 8000cc6:	4b09      	ldr	r3, [pc, #36]	; (8000cec <_ZN12FrontendHeapD1Ev+0x28>)
 8000cc8:	6003      	str	r3, [r0, #0]
 8000cca:	4604      	mov	r4, r0
 8000ccc:	f500 50a1 	add.w	r0, r0, #5152	; 0x1420
 8000cd0:	3008      	adds	r0, #8
 8000cd2:	f7ff ffb9 	bl	8000c48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000cd6:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000cda:	f7ff ffc9 	bl	8000c70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000cde:	f104 0014 	add.w	r0, r4, #20
 8000ce2:	f7ff ffdb 	bl	8000c9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000ce6:	4620      	mov	r0, r4
 8000ce8:	bd10      	pop	{r4, pc}
 8000cea:	bf00      	nop
 8000cec:	0802b7d0 	.word	0x0802b7d0

08000cf0 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000cf0:	b508      	push	{r3, lr}
 8000cf2:	4802      	ldr	r0, [pc, #8]	; (8000cfc <__tcf_0+0xc>)
 8000cf4:	f7ff ffe6 	bl	8000cc4 <_ZN12FrontendHeapD1Ev>
 8000cf8:	bd08      	pop	{r3, pc}
 8000cfa:	bf00      	nop
 8000cfc:	200001b0 	.word	0x200001b0

08000d00 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000d00:	b510      	push	{r4, lr}
 8000d02:	4604      	mov	r4, r0
 8000d04:	f7ff ffde 	bl	8000cc4 <_ZN12FrontendHeapD1Ev>
 8000d08:	4620      	mov	r0, r4
 8000d0a:	f241 51cc 	movw	r1, #5580	; 0x15cc
 8000d0e:	f028 fbce 	bl	80294ae <_ZdlPvj>
 8000d12:	4620      	mov	r0, r4
 8000d14:	bd10      	pop	{r4, pc}
	...

08000d18 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000d18:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000d1c:	f001 fc54 	bl	80025c8 <_ZN14BitmapDatabase11getInstanceEv>
 8000d20:	4605      	mov	r5, r0
 8000d22:	f001 fc55 	bl	80025d0 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000d26:	2400      	movs	r4, #0
 8000d28:	4601      	mov	r1, r0
 8000d2a:	4623      	mov	r3, r4
 8000d2c:	4628      	mov	r0, r5
 8000d2e:	4622      	mov	r2, r4
 8000d30:	9400      	str	r4, [sp, #0]
 8000d32:	f017 ff43 	bl	8018bbc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000d36:	4b26      	ldr	r3, [pc, #152]	; (8000dd0 <touchgfx_init+0xb8>)
 8000d38:	4a26      	ldr	r2, [pc, #152]	; (8000dd4 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8000d3a:	4d27      	ldr	r5, [pc, #156]	; (8000dd8 <touchgfx_init+0xc0>)
 8000d3c:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000d3e:	4620      	mov	r0, r4
 8000d40:	f007 fa20 	bl	8008184 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000d44:	4825      	ldr	r0, [pc, #148]	; (8000ddc <touchgfx_init+0xc4>)
 8000d46:	f017 fea1 	bl	8018a8c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000d4a:	682b      	ldr	r3, [r5, #0]
 8000d4c:	f3bf 8f5b 	dmb	ish
 8000d50:	07db      	lsls	r3, r3, #31
 8000d52:	d436      	bmi.n	8000dc2 <touchgfx_init+0xaa>
 8000d54:	4628      	mov	r0, r5
 8000d56:	f028 fbac 	bl	80294b2 <__cxa_guard_acquire>
 8000d5a:	b390      	cbz	r0, 8000dc2 <touchgfx_init+0xaa>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8000d5c:	4c20      	ldr	r4, [pc, #128]	; (8000de0 <touchgfx_init+0xc8>)
          screenStorage(scr),
          transitionStorage(tra),
 8000d5e:	4f21      	ldr	r7, [pc, #132]	; (8000de4 <touchgfx_init+0xcc>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000d60:	4b21      	ldr	r3, [pc, #132]	; (8000de8 <touchgfx_init+0xd0>)
 8000d62:	6023      	str	r3, [r4, #0]
          frontendApplication(app)
 8000d64:	f107 0648 	add.w	r6, r7, #72	; 0x48
        : presenterStorage(pres),
 8000d68:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8000d6c:	f104 082c 	add.w	r8, r4, #44	; 0x2c
        : presenterStorage(pres),
 8000d70:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8000d72:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8000d76:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8000d78:	6126      	str	r6, [r4, #16]
 8000d7a:	f00e fea9 	bl	800fad0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000d7e:	4b1b      	ldr	r3, [pc, #108]	; (8000dec <touchgfx_init+0xd4>)
 8000d80:	6163      	str	r3, [r4, #20]
 8000d82:	4640      	mov	r0, r8
 8000d84:	f00e fea4 	bl	800fad0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000d88:	4b19      	ldr	r3, [pc, #100]	; (8000df0 <touchgfx_init+0xd8>)
 8000d8a:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000d8c:	4638      	mov	r0, r7
 8000d8e:	f00e fe9f 	bl	800fad0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000d92:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8000d96:	4a17      	ldr	r2, [pc, #92]	; (8000df4 <touchgfx_init+0xdc>)
 8000d98:	f8c3 2428 	str.w	r2, [r3, #1064]	; 0x428
 8000d9c:	f503 608d 	add.w	r0, r3, #1128	; 0x468
 8000da0:	f007 fe44 	bl	8008a2c <_ZN5ModelC1Ev>
 8000da4:	4622      	mov	r2, r4
 8000da6:	f107 0140 	add.w	r1, r7, #64	; 0x40
 8000daa:	4630      	mov	r0, r6
 8000dac:	f007 fb44 	bl	8008438 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8000db0:	4630      	mov	r0, r6
 8000db2:	f002 fe17 	bl	80039e4 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>
        static FrontendHeap instance;
 8000db6:	4810      	ldr	r0, [pc, #64]	; (8000df8 <touchgfx_init+0xe0>)
 8000db8:	f029 f9aa 	bl	802a110 <atexit>
 8000dbc:	4628      	mov	r0, r5
 8000dbe:	f028 fb84 	bl	80294ca <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8000dc2:	480e      	ldr	r0, [pc, #56]	; (8000dfc <touchgfx_init+0xe4>)
}
 8000dc4:	b002      	add	sp, #8
 8000dc6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8000dca:	f7ff bdb5 	b.w	8000938 <_ZN11TouchGFXHAL10initializeEv>
 8000dce:	bf00      	nop
 8000dd0:	20012f88 	.word	0x20012f88
 8000dd4:	20001840 	.word	0x20001840
 8000dd8:	200001ac 	.word	0x200001ac
 8000ddc:	20000008 	.word	0x20000008
 8000de0:	200001b0 	.word	0x200001b0
 8000de4:	200015d8 	.word	0x200015d8
 8000de8:	0802b7d0 	.word	0x0802b7d0
 8000dec:	0802b734 	.word	0x0802b734
 8000df0:	0802b768 	.word	0x0802b768
 8000df4:	0802b79c 	.word	0x0802b79c
 8000df8:	08000cf1 	.word	0x08000cf1
 8000dfc:	200017c4 	.word	0x200017c4

08000e00 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8000e00:	4770      	bx	lr
	...

08000e04 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8000e04:	4801      	ldr	r0, [pc, #4]	; (8000e0c <touchgfx_taskEntry+0x8>)
 8000e06:	f7ff bda5 	b.w	8000954 <_ZN11TouchGFXHAL9taskEntryEv>
 8000e0a:	bf00      	nop
 8000e0c:	200017c4 	.word	0x200017c4

08000e10 <_GLOBAL__sub_I_touchgfx_init>:
}
 8000e10:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8000e12:	4e22      	ldr	r6, [pc, #136]	; (8000e9c <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8000e14:	4c22      	ldr	r4, [pc, #136]	; (8000ea0 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 8000e16:	4d23      	ldr	r5, [pc, #140]	; (8000ea4 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8000e18:	4b23      	ldr	r3, [pc, #140]	; (8000ea8 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8000e1a:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8000e1c:	4630      	mov	r0, r6
 8000e1e:	f7ff fed1 	bl	8000bc4 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8000e22:	4628      	mov	r0, r5
 8000e24:	f01c f996 	bl	801d154 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 8000e28:	4b20      	ldr	r3, [pc, #128]	; (8000eac <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000e2a:	4821      	ldr	r0, [pc, #132]	; (8000eb0 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 8000e2c:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8000e2e:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8000e30:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 8000e34:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 8000e38:	491e      	ldr	r1, [pc, #120]	; (8000eb4 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8000e3a:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 8000e3c:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8000e40:	491d      	ldr	r1, [pc, #116]	; (8000eb8 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8000e42:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 8000e44:	491d      	ldr	r1, [pc, #116]	; (8000ebc <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 8000e46:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 8000e4a:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000e4c:	21f0      	movs	r1, #240	; 0xf0
 8000e4e:	8001      	strh	r1, [r0, #0]
 8000e50:	481b      	ldr	r0, [pc, #108]	; (8000ec0 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 8000e52:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000e54:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000e56:	481b      	ldr	r0, [pc, #108]	; (8000ec4 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 8000e58:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000e5c:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 8000e60:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8000e64:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8000e68:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8000e6c:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 8000e70:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 8000e74:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8000e78:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 8000e7c:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 8000e80:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 8000e82:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000e86:	8001      	strh	r1, [r0, #0]
 8000e88:	480f      	ldr	r0, [pc, #60]	; (8000ec8 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 8000e8a:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8000e8c:	490f      	ldr	r1, [pc, #60]	; (8000ecc <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8000e8e:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8000e90:	2201      	movs	r2, #1
 8000e92:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8000e96:	4a0e      	ldr	r2, [pc, #56]	; (8000ed0 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8000e98:	601a      	str	r2, [r3, #0]
}
 8000e9a:	bd70      	pop	{r4, r5, r6, pc}
 8000e9c:	20001780 	.word	0x20001780
 8000ea0:	2000177c 	.word	0x2000177c
 8000ea4:	20001844 	.word	0x20001844
 8000ea8:	0802b234 	.word	0x0802b234
 8000eac:	200017c4 	.word	0x200017c4
 8000eb0:	20012f18 	.word	0x20012f18
 8000eb4:	01000001 	.word	0x01000001
 8000eb8:	01010000 	.word	0x01010000
 8000ebc:	20012f24 	.word	0x20012f24
 8000ec0:	20012f1e 	.word	0x20012f1e
 8000ec4:	20012f1a 	.word	0x20012f1a
 8000ec8:	20012f20 	.word	0x20012f20
 8000ecc:	20012f1c 	.word	0x20012f1c
 8000ed0:	0802b3c0 	.word	0x0802b3c0

08000ed4 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8000ed4:	2000      	movs	r0, #0
 8000ed6:	4770      	bx	lr

08000ed8 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8000ed8:	8081      	strh	r1, [r0, #4]
    }
 8000eda:	4770      	bx	lr

08000edc <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8000edc:	80c1      	strh	r1, [r0, #6]
    }
 8000ede:	4770      	bx	lr

08000ee0 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8000ee0:	8101      	strh	r1, [r0, #8]
    }
 8000ee2:	4770      	bx	lr

08000ee4 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8000ee4:	8141      	strh	r1, [r0, #10]
    }
 8000ee6:	4770      	bx	lr

08000ee8 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8000ee8:	4770      	bx	lr

08000eea <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8000eea:	4770      	bx	lr

08000eec <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8000eec:	4770      	bx	lr

08000eee <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8000eee:	4770      	bx	lr

08000ef0 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8000ef0:	4770      	bx	lr

08000ef2 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8000ef2:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8000ef4:	88c4      	ldrh	r4, [r0, #6]
 8000ef6:	6803      	ldr	r3, [r0, #0]
 8000ef8:	1b12      	subs	r2, r2, r4
 8000efa:	8884      	ldrh	r4, [r0, #4]
 8000efc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8000efe:	1b09      	subs	r1, r1, r4
 8000f00:	b212      	sxth	r2, r2
    }
 8000f02:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8000f06:	b209      	sxth	r1, r1
 8000f08:	4718      	bx	r3

08000f0a <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8000f0a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8000f0e:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8000f10:	f04f 33ff 	mov.w	r3, #4294967295
 8000f14:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8000f16:	6813      	ldr	r3, [r2, #0]
 8000f18:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8000f1a:	6010      	str	r0, [r2, #0]
    }
 8000f1c:	4770      	bx	lr

08000f1e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8000f1e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8000f22:	b11a      	cbz	r2, 8000f2c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8000f24:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8000f28:	b102      	cbz	r2, 8000f2c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8000f2a:	6018      	str	r0, [r3, #0]
        }
    }
 8000f2c:	4770      	bx	lr

08000f2e <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8000f2e:	2000      	movs	r0, #0
 8000f30:	4770      	bx	lr

08000f32 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8000f32:	888b      	ldrh	r3, [r1, #4]
 8000f34:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8000f36:	2001      	movs	r0, #1
 8000f38:	4770      	bx	lr

08000f3a <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8000f3a:	4770      	bx	lr

08000f3c <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8000f3c:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8000f40:	4770      	bx	lr

08000f42 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8000f42:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 8000f46:	4770      	bx	lr

08000f48 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8000f48:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8000f4a:	2200      	movs	r2, #0
        return rect.width;
 8000f4c:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8000f50:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8000f54:	8002      	strh	r2, [r0, #0]
 8000f56:	8042      	strh	r2, [r0, #2]
 8000f58:	8084      	strh	r4, [r0, #4]
 8000f5a:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8000f5c:	bd10      	pop	{r4, pc}

08000f5e <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8000f5e:	2200      	movs	r2, #0
 8000f60:	8002      	strh	r2, [r0, #0]
 8000f62:	8042      	strh	r2, [r0, #2]
 8000f64:	8082      	strh	r2, [r0, #4]
 8000f66:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8000f68:	4770      	bx	lr
	...

08000f6c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000f6c:	4b02      	ldr	r3, [pc, #8]	; (8000f78 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 8000f6e:	2290      	movs	r2, #144	; 0x90
 8000f70:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8000f74:	4770      	bx	lr
 8000f76:	bf00      	nop
 8000f78:	e000e100 	.word	0xe000e100

08000f7c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000f7c:	4b02      	ldr	r3, [pc, #8]	; (8000f88 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 8000f7e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8000f82:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(LTDC_IRQn);
}
 8000f84:	4770      	bx	lr
 8000f86:	bf00      	nop
 8000f88:	e000e100 	.word	0xe000e100

08000f8c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8000f8c:	4a09      	ldr	r2, [pc, #36]	; (8000fb4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8000f8e:	490a      	ldr	r1, [pc, #40]	; (8000fb8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8000f90:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8000f92:	480a      	ldr	r0, [pc, #40]	; (8000fbc <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8000f94:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8000f98:	3b01      	subs	r3, #1
 8000f9a:	b29b      	uxth	r3, r3
 8000f9c:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8000f9e:	6911      	ldr	r1, [r2, #16]
 8000fa0:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8000fa4:	3901      	subs	r1, #1
 8000fa6:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8000fa8:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8000faa:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8000fac:	f043 0301 	orr.w	r3, r3, #1
 8000fb0:	6353      	str	r3, [r2, #52]	; 0x34
}
 8000fb2:	4770      	bx	lr
 8000fb4:	40016800 	.word	0x40016800
 8000fb8:	200018ca 	.word	0x200018ca
 8000fbc:	200018c8 	.word	0x200018c8

08000fc0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8000fc0:	4b01      	ldr	r3, [pc, #4]	; (8000fc8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8000fc2:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 8000fc6:	4770      	bx	lr
 8000fc8:	40016800 	.word	0x40016800

08000fcc <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8000fcc:	4b02      	ldr	r3, [pc, #8]	; (8000fd8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000fce:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8000fd0:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000fd4:	625a      	str	r2, [r3, #36]	; 0x24
}
 8000fd6:	4770      	bx	lr
 8000fd8:	40016800 	.word	0x40016800

08000fdc <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8000fdc:	b570      	push	{r4, r5, r6, lr}
 8000fde:	4604      	mov	r4, r0
    HAL::initialize();
 8000fe0:	f00f fa41 	bl	8010466 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8000fe4:	6823      	ldr	r3, [r4, #0]
 8000fe6:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8000fe8:	f014 f9ea 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
 8000fec:	4601      	mov	r1, r0
 8000fee:	4620      	mov	r0, r4
 8000ff0:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8000ff2:	6823      	ldr	r3, [r4, #0]
 8000ff4:	4a05      	ldr	r2, [pc, #20]	; (800100c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8000ff6:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8000ffa:	4620      	mov	r0, r4
 8000ffc:	46ac      	mov	ip, r5
 8000ffe:	2300      	movs	r3, #0
}
 8001000:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001004:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 8001008:	4760      	bx	ip
 800100a:	bf00      	nop
 800100c:	d004b000 	.word	0xd004b000

08001010 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8001010:	f00f ba10 	b.w	8010434 <_ZN8touchgfx3HAL10beginFrameEv>

08001014 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8001014:	f00f ba1a 	b.w	801044c <_ZN8touchgfx3HAL8endFrameEv>

08001018 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8001018:	f00f b9d6 	b.w	80103c8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

0800101c <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 800101c:	f00f bb37 	b.w	801068e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08001020 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8001020:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001024:	b112      	cbz	r2, 800102c <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8001026:	6803      	ldr	r3, [r0, #0]
 8001028:	695b      	ldr	r3, [r3, #20]
 800102a:	4718      	bx	r3
    }
 800102c:	4770      	bx	lr
	...

08001030 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001030:	4b04      	ldr	r3, [pc, #16]	; (8001044 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 8001032:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001036:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 800103a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800103e:	f3bf 8f6f 	isb	sy
}
 8001042:	4770      	bx	lr
 8001044:	e000e100 	.word	0xe000e100

08001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8001048:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 800104a:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800104c:	4e12      	ldr	r6, [pc, #72]	; (8001098 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 800104e:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8001050:	4b12      	ldr	r3, [pc, #72]	; (800109c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8001052:	6003      	str	r3, [r0, #0]
 8001054:	6833      	ldr	r3, [r6, #0]
 8001056:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 800105a:	4605      	mov	r5, r0
 800105c:	b10a      	cbz	r2, 8001062 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 800105e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8001060:	b900      	cbnz	r0, 8001064 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 8001062:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8001064:	6803      	ldr	r3, [r0, #0]
 8001066:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001068:	4798      	blx	r3
        return auxiliaryLCD;
 800106a:	6833      	ldr	r3, [r6, #0]
 800106c:	fab0 f480 	clz	r4, r0
 8001070:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8001072:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8001074:	b130      	cbz	r0, 8001084 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8001076:	6803      	ldr	r3, [r0, #0]
 8001078:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800107a:	4798      	blx	r3
 800107c:	2800      	cmp	r0, #0
 800107e:	bf08      	it	eq
 8001080:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8001084:	b92c      	cbnz	r4, 8001092 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8001086:	4b06      	ldr	r3, [pc, #24]	; (80010a0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8001088:	4a06      	ldr	r2, [pc, #24]	; (80010a4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 800108a:	4807      	ldr	r0, [pc, #28]	; (80010a8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 800108c:	212c      	movs	r1, #44	; 0x2c
 800108e:	f029 f821 	bl	802a0d4 <__assert_func>
    }
 8001092:	4628      	mov	r0, r5
 8001094:	bd70      	pop	{r4, r5, r6, pc}
 8001096:	bf00      	nop
 8001098:	20012f24 	.word	0x20012f24
 800109c:	0802b8e0 	.word	0x0802b8e0
 80010a0:	0802b7dc 	.word	0x0802b7dc
 80010a4:	0802b83a 	.word	0x0802b83a
 80010a8:	0802b873 	.word	0x0802b873

080010ac <_ZN8touchgfx5paint8tearDownEv>:
    blendL8CLUT = data;
}

void tearDown()
{
}
 80010ac:	4770      	bx	lr
	...

080010b0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
{
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
}

void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 80010b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint16_t* framebuffer = ptr;
    const uint16_t* const lineEnd = framebuffer + count;
    if (alpha == 0xFF)
 80010b4:	2bff      	cmp	r3, #255	; 0xff
    {
        do
        {
            *framebuffer = color565;
 80010b6:	f8bd 4018 	ldrh.w	r4, [sp, #24]
    const uint16_t* const lineEnd = framebuffer + count;
 80010ba:	eb00 0141 	add.w	r1, r0, r1, lsl #1
    if (alpha == 0xFF)
 80010be:	d105      	bne.n	80010cc <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x1c>
            *framebuffer = color565;
 80010c0:	f820 4b02 	strh.w	r4, [r0], #2
        } while (++framebuffer < lineEnd);
 80010c4:	4281      	cmp	r1, r0
 80010c6:	d8fb      	bhi.n	80010c0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x10>
        do
        {
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
        } while (++framebuffer < lineEnd);
    }
}
 80010c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 80010cc:	4f17      	ldr	r7, [pc, #92]	; (800112c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x7c>)
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80010ce:	f404 66fc 	and.w	r6, r4, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010d2:	ea04 0c07 	and.w	ip, r4, r7
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80010d6:	f004 041f 	and.w	r4, r4, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010da:	fb03 fc0c 	mul.w	ip, r3, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80010de:	435e      	muls	r6, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80010e0:	435c      	muls	r4, r3
    const uint8_t ialpha = 0xFF - alpha;
 80010e2:	43db      	mvns	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010e4:	b2db      	uxtb	r3, r3
 80010e6:	25ff      	movs	r5, #255	; 0xff
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 80010e8:	f8b0 e000 	ldrh.w	lr, [r0]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010ec:	ea0e 0207 	and.w	r2, lr, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80010f0:	f40e 68fc 	and.w	r8, lr, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010f4:	fb03 c202 	mla	r2, r3, r2, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80010f8:	fb03 6808 	mla	r8, r3, r8, r6
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80010fc:	f00e 0e1f 	and.w	lr, lr, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8001100:	fbb2 f2f5 	udiv	r2, r2, r5
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8001104:	fbb8 f8f5 	udiv	r8, r8, r5
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8001108:	403a      	ands	r2, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800110a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800110e:	ea42 0208 	orr.w	r2, r2, r8
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8001112:	fb03 4e0e 	mla	lr, r3, lr, r4
 8001116:	fbbe fef5 	udiv	lr, lr, r5
 800111a:	f00e 0e1f 	and.w	lr, lr, #31
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800111e:	ea42 020e 	orr.w	r2, r2, lr
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 8001122:	f820 2b02 	strh.w	r2, [r0], #2
        } while (++framebuffer < lineEnd);
 8001126:	4281      	cmp	r1, r0
 8001128:	d8de      	bhi.n	80010e8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x38>
 800112a:	e7cd      	b.n	80010c8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x18>
 800112c:	fffff800 	.word	0xfffff800

08001130 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001130:	b510      	push	{r4, lr}
        return instance;
 8001132:	4c14      	ldr	r4, [pc, #80]	; (8001184 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001134:	6823      	ldr	r3, [r4, #0]
 8001136:	b323      	cbz	r3, 8001182 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8001138:	4b13      	ldr	r3, [pc, #76]	; (8001188 <HAL_LTDC_LineEventCallback+0x58>)
 800113a:	4a14      	ldr	r2, [pc, #80]	; (800118c <HAL_LTDC_LineEventCallback+0x5c>)
 800113c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800113e:	8811      	ldrh	r1, [r2, #0]
 8001140:	428b      	cmp	r3, r1
 8001142:	d113      	bne.n	800116c <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001144:	4b12      	ldr	r3, [pc, #72]	; (8001190 <HAL_LTDC_LineEventCallback+0x60>)
 8001146:	8819      	ldrh	r1, [r3, #0]
 8001148:	f00a f9d6 	bl	800b4f8 <HAL_LTDC_ProgramLineEvent>
 800114c:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 800114e:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 8001152:	3301      	adds	r3, #1
 8001154:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8001158:	f7ff fce8 	bl	8000b2c <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 800115c:	6820      	ldr	r0, [r4, #0]
 800115e:	f00f fec1 	bl	8010ee4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001162:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8001166:	2000      	movs	r0, #0
 8001168:	f7ff bb60 	b.w	800082c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 800116c:	f00a f9c4 	bl	800b4f8 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001170:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8001172:	6803      	ldr	r3, [r0, #0]
 8001174:	6a1b      	ldr	r3, [r3, #32]
 8001176:	4798      	blx	r3
    }
 8001178:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 800117c:	2000      	movs	r0, #0
 800117e:	f7ff bb6d 	b.w	800085c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001182:	bd10      	pop	{r4, pc}
 8001184:	20012f24 	.word	0x20012f24
 8001188:	40016800 	.word	0x40016800
 800118c:	200018ca 	.word	0x200018ca
 8001190:	200018c8 	.word	0x200018c8

08001194 <calculate_freq_and_signalstrength>:
 * @param Channel The channel number.
 * @param samples Pointer to the input samples array.
 * @param given_frequency The given frequency.
 * @return FFT structure containing the main frequency and signal strength.
 */
FFT calculate_freq_and_signalstrength(uint8_t Channel, uint32_t* samples, uint8_t given_frequency) {
 8001194:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001198:	ed2d 8b02 	vpush	{d8}
 800119c:	b091      	sub	sp, #68	; 0x44
 800119e:	af00      	add	r7, sp, #0
 80011a0:	4605      	mov	r5, r0
 80011a2:	4688      	mov	r8, r1
 80011a4:	60fa      	str	r2, [r7, #12]
    // Perform FFT using CMSIS-DSP library
	uint8_t buffer_size = MEAS_get_num_of_samples();
 80011a6:	f000 fe47 	bl	8001e38 <MEAS_get_num_of_samples>
    const uint32_t fft_size = buffer_size;
    // Convert the samples to the specific channel
    float32_t input_samples[buffer_size];
 80011aa:	b203      	sxth	r3, r0
 80011ac:	60bb      	str	r3, [r7, #8]
 80011ae:	009b      	lsls	r3, r3, #2
 80011b0:	607b      	str	r3, [r7, #4]
 80011b2:	3307      	adds	r3, #7
 80011b4:	f023 0307 	bic.w	r3, r3, #7
 80011b8:	ebad 0d03 	sub.w	sp, sp, r3
	uint8_t buffer_size = MEAS_get_num_of_samples();
 80011bc:	4604      	mov	r4, r0
    float32_t input_samples[buffer_size];
 80011be:	46ea      	mov	sl, sp
    for (uint32_t i = 0; i < fft_size; i++) {
 80011c0:	b1f0      	cbz	r0, 8001200 <calculate_freq_and_signalstrength+0x6c>
 80011c2:	3d01      	subs	r5, #1
 80011c4:	46d1      	mov	r9, sl
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80011c6:	46d3      	mov	fp, sl
    for (uint32_t i = 0; i < fft_size; i++) {
 80011c8:	2600      	movs	r6, #0
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80011ca:	f000 fe33 	bl	8001e34 <MEAS_get_num_of_chan>
 80011ce:	fb06 5000 	mla	r0, r6, r0, r5
 80011d2:	eb08 0380 	add.w	r3, r8, r0, lsl #2
 80011d6:	edd3 7a00 	vldr	s15, [r3]
    for (uint32_t i = 0; i < fft_size; i++) {
 80011da:	3601      	adds	r6, #1
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80011dc:	eef8 7a67 	vcvt.f32.u32	s15, s15
    for (uint32_t i = 0; i < fft_size; i++) {
 80011e0:	42b4      	cmp	r4, r6
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80011e2:	eceb 7a01 	vstmia	fp!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 80011e6:	d1f0      	bne.n	80011ca <calculate_freq_and_signalstrength+0x36>
 80011e8:	687e      	ldr	r6, [r7, #4]
    }
    
    // remove DC component
    for (uint32_t i = 0; i < fft_size; i++) {
        input_samples[i] -= 2047.5;
 80011ea:	ed9f 7a2b 	vldr	s14, [pc, #172]	; 8001298 <calculate_freq_and_signalstrength+0x104>
 80011ee:	4456      	add	r6, sl
 80011f0:	edd9 7a00 	vldr	s15, [r9]
 80011f4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80011f8:	ece9 7a01 	vstmia	r9!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 80011fc:	454e      	cmp	r6, r9
 80011fe:	d1f7      	bne.n	80011f0 <calculate_freq_and_signalstrength+0x5c>
    }

    // Create an array for the FFT output
    float32_t fft_complex_output[2*buffer_size];
 8001200:	68bb      	ldr	r3, [r7, #8]
 8001202:	466a      	mov	r2, sp
 8001204:	eba2 03c3 	sub.w	r3, r2, r3, lsl #3
 8001208:	469d      	mov	sp, r3

    //calculate the index of the given frequency
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();

    //calculate the signal strength
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 800120a:	ee07 4a90 	vmov	s15, r4
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 800120e:	68fb      	ldr	r3, [r7, #12]
    float32_t fft_complex_output[2*buffer_size];
 8001210:	466d      	mov	r5, sp
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 8001212:	b2a1      	uxth	r1, r4
 8001214:	f107 0028 	add.w	r0, r7, #40	; 0x28
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8001218:	eef8 8a67 	vcvt.f32.u32	s17, s15
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 800121c:	fb13 f904 	smulbb	r9, r3, r4
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 8001220:	f027 f884 	bl	802832c <arm_rfft_fast_init_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8001224:	0864      	lsrs	r4, r4, #1
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 8001226:	2300      	movs	r3, #0
 8001228:	4651      	mov	r1, sl
 800122a:	f107 0028 	add.w	r0, r7, #40	; 0x28
 800122e:	462a      	mov	r2, r5
 8001230:	f027 f900 	bl	8028434 <arm_rfft_fast_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8001234:	4622      	mov	r2, r4
 8001236:	4629      	mov	r1, r5
 8001238:	4628      	mov	r0, r5
 800123a:	f027 fd69 	bl	8028d10 <arm_cmplx_mag_f32>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 800123e:	f000 fdfd 	bl	8001e3c <MEAS_get_samp_freq>
 8001242:	fbb9 f9f0 	udiv	r9, r9, r0
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8001246:	eb05 0989 	add.w	r9, r5, r9, lsl #2
 800124a:	edd9 7a00 	vldr	s15, [r9]
 800124e:	ee77 7aa7 	vadd.f32	s15, s15, s15

    // Find the index of the maximum magnitude in the first half of the array
    uint32_t maxIndex;
    float32_t maxValue;
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 8001252:	f107 0318 	add.w	r3, r7, #24
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8001256:	eec7 0aa8 	vdiv.f32	s1, s15, s17
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 800125a:	f107 021c 	add.w	r2, r7, #28
 800125e:	4621      	mov	r1, r4
 8001260:	4628      	mov	r0, r5
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8001262:	edc7 0a03 	vstr	s1, [r7, #12]
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 8001266:	f026 fff9 	bl	802825c <arm_max_f32>

    // Calculate the main frequency
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 800126a:	edd7 7a06 	vldr	s15, [r7, #24]
 800126e:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 8001272:	f000 fde3 	bl	8001e3c <MEAS_get_samp_freq>
 8001276:	ee07 0a90 	vmov	s15, r0
 800127a:	eef8 7a67 	vcvt.f32.u32	s15, s15
    FFT fft;

    // return the calculated values
    fft.main_freq = main_frequency;
    fft.signal_strength = signal_strength;
    return fft;
 800127e:	edd7 0a03 	vldr	s1, [r7, #12]
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8001282:	ee67 7a88 	vmul.f32	s15, s15, s16
}
 8001286:	3744      	adds	r7, #68	; 0x44
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8001288:	ee87 0aa8 	vdiv.f32	s0, s15, s17
}
 800128c:	46bd      	mov	sp, r7
 800128e:	ecbd 8b02 	vpop	{d8}
 8001292:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001296:	bf00      	nop
 8001298:	44fff000 	.word	0x44fff000

0800129c <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 800129c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 800129e:	2064      	movs	r0, #100	; 0x64
 80012a0:	f00b fe84 	bl	800cfac <osDelay>
  for(;;)
 80012a4:	e7fb      	b.n	800129e <StartDefaultTask+0x2>
 80012a6:	bf00      	nop

080012a8 <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 80012a8:	b580      	push	{r7, lr}
 80012aa:	4c0c      	ldr	r4, [pc, #48]	; (80012dc <StartTimeoutTask+0x34>)
 80012ac:	4f0c      	ldr	r7, [pc, #48]	; (80012e0 <StartTimeoutTask+0x38>)
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80012ae:	4e0d      	ldr	r6, [pc, #52]	; (80012e4 <StartTimeoutTask+0x3c>)
	  sleep_timeout_value--;
 80012b0:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80012b2:	2300      	movs	r3, #0
 80012b4:	461a      	mov	r2, r3
 80012b6:	4621      	mov	r1, r4
	  sleep_timeout_value--;
 80012b8:	1e45      	subs	r5, r0, #1
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80012ba:	6838      	ldr	r0, [r7, #0]
	  sleep_timeout_value--;
 80012bc:	6025      	str	r5, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80012be:	f00b ff71 	bl	800d1a4 <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 80012c2:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 80012c4:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80012c6:	2120      	movs	r1, #32
 80012c8:	4630      	mov	r0, r6
	  if(sleep_timeout_value == 0)
 80012ca:	b912      	cbnz	r2, 80012d2 <StartTimeoutTask+0x2a>
		  sleep_timeout_value = 60;
 80012cc:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80012ce:	f008 faf7 	bl	80098c0 <HAL_GPIO_WritePin>


	  // Toggle onboard LED as heartbeat visual feedback
//	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);

	  osDelay(1000);
 80012d2:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80012d6:	f00b fe69 	bl	800cfac <osDelay>
	  sleep_timeout_value--;
 80012da:	e7e9      	b.n	80012b0 <StartTimeoutTask+0x8>
 80012dc:	20000014 	.word	0x20000014
 80012e0:	200018d4 	.word	0x200018d4
 80012e4:	40021000 	.word	0x40021000

080012e8 <updateGUI_test>:
	return sleep_timeout_value;
 80012e8:	4b01      	ldr	r3, [pc, #4]	; (80012f0 <updateGUI_test+0x8>)
}
 80012ea:	6818      	ldr	r0, [r3, #0]
 80012ec:	4770      	bx	lr
 80012ee:	bf00      	nop
 80012f0:	20000014 	.word	0x20000014

080012f4 <gyro_disable>:
{
 80012f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80012f6:	b083      	sub	sp, #12
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 80012f8:	4e1f      	ldr	r6, [pc, #124]	; (8001378 <gyro_disable+0x84>)
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 80012fa:	4d20      	ldr	r5, [pc, #128]	; (800137c <gyro_disable+0x88>)
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 80012fc:	4c20      	ldr	r4, [pc, #128]	; (8001380 <gyro_disable+0x8c>)
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 80012fe:	2700      	movs	r7, #0
 8001300:	9700      	str	r7, [sp, #0]
 8001302:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8001304:	f043 0304 	orr.w	r3, r3, #4
 8001308:	6333      	str	r3, [r6, #48]	; 0x30
 800130a:	6b33      	ldr	r3, [r6, #48]	; 0x30
 800130c:	f003 0304 	and.w	r3, r3, #4
 8001310:	9300      	str	r3, [sp, #0]
 8001312:	9b00      	ldr	r3, [sp, #0]
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 8001314:	682b      	ldr	r3, [r5, #0]
 8001316:	f023 030c 	bic.w	r3, r3, #12
 800131a:	602b      	str	r3, [r5, #0]
	GPIOC->MODER |= 1UL << GPIO_MODER_MODER1_Pos;  // Set PC1 as output
 800131c:	682b      	ldr	r3, [r5, #0]
 800131e:	f043 0304 	orr.w	r3, r3, #4
 8001322:	602b      	str	r3, [r5, #0]
	GPIOC->BSRR |= GPIO_BSRR_BR1;  // Set GYRO (CS) to 0 for a short time
 8001324:	69ab      	ldr	r3, [r5, #24]
 8001326:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800132a:	61ab      	str	r3, [r5, #24]
	HAL_Delay(10);                 // Wait some time
 800132c:	200a      	movs	r0, #10
 800132e:	f007 fef7 	bl	8009120 <HAL_Delay>
	GPIOC->MODER |= 3UL << GPIO_MODER_MODER1_Pos;  // Analog PC1 = ADC123_IN11
 8001332:	682b      	ldr	r3, [r5, #0]
 8001334:	f043 030c 	orr.w	r3, r3, #12
 8001338:	602b      	str	r3, [r5, #0]
	__HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 800133a:	9701      	str	r7, [sp, #4]
 800133c:	6b33      	ldr	r3, [r6, #48]	; 0x30
 800133e:	f043 0320 	orr.w	r3, r3, #32
 8001342:	6333      	str	r3, [r6, #48]	; 0x30
 8001344:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8001346:	f003 0320 	and.w	r3, r3, #32
 800134a:	9301      	str	r3, [sp, #4]
 800134c:	9b01      	ldr	r3, [sp, #4]
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 800134e:	68a3      	ldr	r3, [r4, #8]
 8001350:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8001354:	60a3      	str	r3, [r4, #8]
	GPIOF->AFR[1] &= ~GPIO_AFRH_AFSEL8_Msk;  // Reset alternate function of PF8
 8001356:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001358:	f023 030f 	bic.w	r3, r3, #15
 800135c:	6263      	str	r3, [r4, #36]	; 0x24
	GPIOF->PUPDR &= ~GPIO_PUPDR_PUPD8_Msk;   // Reset pulup/down of PF8
 800135e:	68e3      	ldr	r3, [r4, #12]
 8001360:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8001364:	60e3      	str	r3, [r4, #12]
	HAL_Delay(10);                           // Wait some time
 8001366:	200a      	movs	r0, #10
 8001368:	f007 feda 	bl	8009120 <HAL_Delay>
	GPIOF->MODER |= 3UL << GPIO_MODER_MODER8_Pos;  // Analog mode PF8 = ADC3_IN4
 800136c:	6823      	ldr	r3, [r4, #0]
 800136e:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
 8001372:	6023      	str	r3, [r4, #0]
}
 8001374:	b003      	add	sp, #12
 8001376:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001378:	40023800 	.word	0x40023800
 800137c:	40020800 	.word	0x40020800
 8001380:	40021400 	.word	0x40021400

08001384 <SystemClock_Config>:
{
 8001384:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001386:	2400      	movs	r4, #0
{
 8001388:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800138a:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 800138e:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001392:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8001396:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 800139a:	4a1e      	ldr	r2, [pc, #120]	; (8001414 <SystemClock_Config+0x90>)
 800139c:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800139e:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 80013a0:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80013a2:	4b1d      	ldr	r3, [pc, #116]	; (8001418 <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 80013a4:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80013a8:	6411      	str	r1, [r2, #64]	; 0x40
 80013aa:	6c12      	ldr	r2, [r2, #64]	; 0x40
 80013ac:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 80013b0:	9201      	str	r2, [sp, #4]
 80013b2:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80013b4:	9402      	str	r4, [sp, #8]
 80013b6:	681a      	ldr	r2, [r3, #0]
 80013b8:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 80013bc:	601a      	str	r2, [r3, #0]
 80013be:	681b      	ldr	r3, [r3, #0]
 80013c0:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80013c4:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80013c6:	2201      	movs	r2, #1
 80013c8:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80013cc:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 8;
 80013d0:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80013d2:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 8;
 80013d4:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80013d6:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 336;
 80013da:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80013de:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 80013e2:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80013e4:	2202      	movs	r2, #2
 80013e6:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80013e8:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80013ea:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80013ee:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80013f0:	f00a f8a4 	bl	800b53c <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80013f4:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80013f6:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 80013fa:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80013fe:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001402:	a803      	add	r0, sp, #12
 8001404:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8001406:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800140a:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800140c:	f00a faae 	bl	800b96c <HAL_RCC_ClockConfig>
}
 8001410:	b015      	add	sp, #84	; 0x54
 8001412:	bd30      	pop	{r4, r5, pc}
 8001414:	40023800 	.word	0x40023800
 8001418:	40007000 	.word	0x40007000

0800141c <main>:
{
 800141c:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001420:	2400      	movs	r4, #0
{
 8001422:	b09f      	sub	sp, #124	; 0x7c
  HAL_Init();
 8001424:	f007 fe50 	bl	80090c8 <HAL_Init>
  SystemClock_Config();
 8001428:	f7ff ffac 	bl	8001384 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800142c:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 8001430:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001434:	4dc0      	ldr	r5, [pc, #768]	; (8001738 <main+0x31c>)
 8001436:	9402      	str	r4, [sp, #8]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001438:	9415      	str	r4, [sp, #84]	; 0x54
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800143a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 800143c:	48bf      	ldr	r0, [pc, #764]	; (800173c <main+0x320>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800143e:	f043 0310 	orr.w	r3, r3, #16
 8001442:	632b      	str	r3, [r5, #48]	; 0x30
 8001444:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001446:	f003 0310 	and.w	r3, r3, #16
 800144a:	9302      	str	r3, [sp, #8]
 800144c:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800144e:	9403      	str	r4, [sp, #12]
 8001450:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001452:	f043 0320 	orr.w	r3, r3, #32
 8001456:	632b      	str	r3, [r5, #48]	; 0x30
 8001458:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800145a:	f003 0320 	and.w	r3, r3, #32
 800145e:	9303      	str	r3, [sp, #12]
 8001460:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001462:	9404      	str	r4, [sp, #16]
 8001464:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001466:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800146a:	632b      	str	r3, [r5, #48]	; 0x30
 800146c:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800146e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001472:	9304      	str	r3, [sp, #16]
 8001474:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001476:	9405      	str	r4, [sp, #20]
 8001478:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800147a:	f043 0304 	orr.w	r3, r3, #4
 800147e:	632b      	str	r3, [r5, #48]	; 0x30
 8001480:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001482:	f003 0304 	and.w	r3, r3, #4
 8001486:	9305      	str	r3, [sp, #20]
 8001488:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800148a:	9406      	str	r4, [sp, #24]
 800148c:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800148e:	f043 0301 	orr.w	r3, r3, #1
 8001492:	632b      	str	r3, [r5, #48]	; 0x30
 8001494:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001496:	f003 0301 	and.w	r3, r3, #1
 800149a:	9306      	str	r3, [sp, #24]
 800149c:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800149e:	9407      	str	r4, [sp, #28]
 80014a0:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80014a2:	f043 0302 	orr.w	r3, r3, #2
 80014a6:	632b      	str	r3, [r5, #48]	; 0x30
 80014a8:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80014aa:	f003 0302 	and.w	r3, r3, #2
 80014ae:	9307      	str	r3, [sp, #28]
 80014b0:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80014b2:	9408      	str	r4, [sp, #32]
 80014b4:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80014b6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80014ba:	632b      	str	r3, [r5, #48]	; 0x30
 80014bc:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80014be:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80014c2:	9308      	str	r3, [sp, #32]
 80014c4:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80014c6:	9409      	str	r4, [sp, #36]	; 0x24
 80014c8:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80014ca:	f043 0308 	orr.w	r3, r3, #8
 80014ce:	632b      	str	r3, [r5, #48]	; 0x30
 80014d0:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80014d2:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80014d6:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80014d8:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80014da:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80014dc:	9b09      	ldr	r3, [sp, #36]	; 0x24
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80014de:	f008 f9ef 	bl	80098c0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 80014e2:	4896      	ldr	r0, [pc, #600]	; (800173c <main+0x320>)
 80014e4:	2120      	movs	r1, #32
 80014e6:	2201      	movs	r2, #1
 80014e8:	f008 f9ea 	bl	80098c0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80014ec:	4894      	ldr	r0, [pc, #592]	; (8001740 <main+0x324>)
 80014ee:	4622      	mov	r2, r4
 80014f0:	2104      	movs	r1, #4
 80014f2:	f008 f9e5 	bl	80098c0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 80014f6:	4893      	ldr	r0, [pc, #588]	; (8001744 <main+0x328>)
 80014f8:	4622      	mov	r2, r4
 80014fa:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 80014fe:	f008 f9df 	bl	80098c0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 8001502:	2201      	movs	r2, #1
 8001504:	4890      	ldr	r0, [pc, #576]	; (8001748 <main+0x32c>)
 8001506:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800150a:	f008 f9d9 	bl	80098c0 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800150e:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001510:	f04f 0903 	mov.w	r9, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 8001514:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001516:	4889      	ldr	r0, [pc, #548]	; (800173c <main+0x320>)
 8001518:	a911      	add	r1, sp, #68	; 0x44
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 800151a:	f04f 0808 	mov.w	r8, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800151e:	e9cd 3611 	strd	r3, r6, [sp, #68]	; 0x44
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001522:	e9cd 4913 	strd	r4, r9, [sp, #76]	; 0x4c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001526:	f008 f887 	bl	8009638 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 800152a:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 800152e:	4883      	ldr	r0, [pc, #524]	; (800173c <main+0x320>)
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8001530:	f8cd 8044 	str.w	r8, [sp, #68]	; 0x44
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001534:	a911      	add	r1, sp, #68	; 0x44
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001536:	9312      	str	r3, [sp, #72]	; 0x48
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001538:	9413      	str	r4, [sp, #76]	; 0x4c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 800153a:	f008 f87d 	bl	8009638 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 800153e:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8001540:	487e      	ldr	r0, [pc, #504]	; (800173c <main+0x320>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8001542:	9311      	str	r3, [sp, #68]	; 0x44
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8001544:	a911      	add	r1, sp, #68	; 0x44
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001546:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001548:	f04f 0a04 	mov.w	sl, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800154c:	e9cd 6412 	strd	r6, r4, [sp, #72]	; 0x48
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001550:	9414      	str	r4, [sp, #80]	; 0x50
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8001552:	f008 f871 	bl	8009638 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001556:	487a      	ldr	r0, [pc, #488]	; (8001740 <main+0x324>)
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001558:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800155c:	a911      	add	r1, sp, #68	; 0x44
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800155e:	e9cd 6412 	strd	r6, r4, [sp, #72]	; 0x48
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001562:	9714      	str	r7, [sp, #80]	; 0x50
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001564:	f008 f868 	bl	8009638 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8001568:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800156c:	4875      	ldr	r0, [pc, #468]	; (8001744 <main+0x328>)
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 800156e:	9311      	str	r3, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001570:	a911      	add	r1, sp, #68	; 0x44
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001572:	e9cd 6412 	strd	r6, r4, [sp, #72]	; 0x48
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001576:	9714      	str	r7, [sp, #80]	; 0x50
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001578:	f008 f85e 	bl	8009638 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 800157c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001580:	4872      	ldr	r0, [pc, #456]	; (800174c <main+0x330>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8001582:	9311      	str	r3, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001584:	a911      	add	r1, sp, #68	; 0x44
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 8001586:	230f      	movs	r3, #15
 8001588:	9315      	str	r3, [sp, #84]	; 0x54
  GPIO_InitStruct.Pin = DEVICE_ON_Pin;
 800158a:	f44f 5b00 	mov.w	fp, #8192	; 0x2000
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800158e:	e9cd 7412 	strd	r7, r4, [sp, #72]	; 0x48
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001592:	9414      	str	r4, [sp, #80]	; 0x50
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001594:	f008 f850 	bl	8009638 <HAL_GPIO_Init>
  HAL_GPIO_Init(DEVICE_ON_GPIO_Port, &GPIO_InitStruct);
 8001598:	486b      	ldr	r0, [pc, #428]	; (8001748 <main+0x32c>)
  GPIO_InitStruct.Pin = DEVICE_ON_Pin;
 800159a:	f8cd b044 	str.w	fp, [sp, #68]	; 0x44
  HAL_GPIO_Init(DEVICE_ON_GPIO_Port, &GPIO_InitStruct);
 800159e:	a911      	add	r1, sp, #68	; 0x44
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015a0:	e9cd 6412 	strd	r6, r4, [sp, #72]	; 0x48
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015a4:	9414      	str	r4, [sp, #80]	; 0x50
  HAL_GPIO_Init(DEVICE_ON_GPIO_Port, &GPIO_InitStruct);
 80015a6:	f008 f847 	bl	8009638 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 80015aa:	4622      	mov	r2, r4
 80015ac:	2105      	movs	r1, #5
 80015ae:	2009      	movs	r0, #9
 80015b0:	f007 fdda 	bl	8009168 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 80015b4:	2009      	movs	r0, #9
 80015b6:	f007 fe15 	bl	80091e4 <HAL_NVIC_EnableIRQ>
  __HAL_RCC_DMA1_CLK_ENABLE();
 80015ba:	9401      	str	r4, [sp, #4]
 80015bc:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80015be:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80015c2:	632b      	str	r3, [r5, #48]	; 0x30
 80015c4:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  hi2c3.Instance = I2C3;
 80015c6:	4d62      	ldr	r5, [pc, #392]	; (8001750 <main+0x334>)
  __HAL_RCC_DMA1_CLK_ENABLE();
 80015c8:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
  HAL_NVIC_SetPriority(DMA1_Stream1_IRQn, 5, 0);
 80015cc:	4622      	mov	r2, r4
 80015ce:	2105      	movs	r1, #5
  __HAL_RCC_DMA1_CLK_ENABLE();
 80015d0:	9301      	str	r3, [sp, #4]
  HAL_NVIC_SetPriority(DMA1_Stream1_IRQn, 5, 0);
 80015d2:	200c      	movs	r0, #12
  __HAL_RCC_DMA1_CLK_ENABLE();
 80015d4:	9b01      	ldr	r3, [sp, #4]
  HAL_NVIC_SetPriority(DMA1_Stream1_IRQn, 5, 0);
 80015d6:	f007 fdc7 	bl	8009168 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream1_IRQn);
 80015da:	200c      	movs	r0, #12
 80015dc:	f007 fe02 	bl	80091e4 <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 80015e0:	485c      	ldr	r0, [pc, #368]	; (8001754 <main+0x338>)
 80015e2:	4b5d      	ldr	r3, [pc, #372]	; (8001758 <main+0x33c>)
 80015e4:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80015e6:	f007 fe0b 	bl	8009200 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 80015ea:	495c      	ldr	r1, [pc, #368]	; (800175c <main+0x340>)
 80015ec:	4b5c      	ldr	r3, [pc, #368]	; (8001760 <main+0x344>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80015ee:	4628      	mov	r0, r5
  hi2c3.Init.ClockSpeed = 100000;
 80015f0:	e9c5 1300 	strd	r1, r3, [r5]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80015f4:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 80015f8:	612b      	str	r3, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 80015fa:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.OwnAddress2 = 0;
 80015fe:	e9c5 4405 	strd	r4, r4, [r5, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001602:	e9c5 4407 	strd	r4, r4, [r5, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001606:	f008 fbc1 	bl	8009d8c <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 800160a:	2110      	movs	r1, #16
 800160c:	4628      	mov	r0, r5
 800160e:	f009 fd89 	bl	800b124 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001612:	4621      	mov	r1, r4
 8001614:	4628      	mov	r0, r5
 8001616:	f009 fda5 	bl	800b164 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800161a:	f8df c15c 	ldr.w	ip, [pc, #348]	; 8001778 <main+0x35c>
  hspi5.Instance = SPI5;
 800161e:	4851      	ldr	r0, [pc, #324]	; (8001764 <main+0x348>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001620:	4d51      	ldr	r5, [pc, #324]	; (8001768 <main+0x34c>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001622:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001624:	f44f 7382 	mov.w	r3, #260	; 0x104
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001628:	f44f 7e00 	mov.w	lr, #512	; 0x200
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800162c:	e9c0 c300 	strd	ip, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001630:	2318      	movs	r3, #24
 8001632:	e9c0 e306 	strd	lr, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001636:	230a      	movs	r3, #10
 8001638:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 800163a:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 800163e:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001642:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001646:	f00a fc7f 	bl	800bf48 <HAL_SPI_Init>
  SdramTiming.ExitSelfRefreshDelay = 7;
 800164a:	2307      	movs	r3, #7
 800164c:	9312      	str	r3, [sp, #72]	; 0x48
  SdramTiming.RowCycleDelay = 7;
 800164e:	9314      	str	r3, [sp, #80]	; 0x50
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001650:	4b46      	ldr	r3, [pc, #280]	; (800176c <main+0x350>)
 8001652:	602b      	str	r3, [r5, #0]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001654:	2040      	movs	r0, #64	; 0x40
 8001656:	f44f 73c0 	mov.w	r3, #384	; 0x180
 800165a:	e9c5 0305 	strd	r0, r3, [r5, #20]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 800165e:	f8c5 b028 	str.w	fp, [r5, #40]	; 0x28
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001662:	f44f 6300 	mov.w	r3, #2048	; 0x800
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 8001666:	f04f 0b10 	mov.w	fp, #16
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800166a:	a911      	add	r1, sp, #68	; 0x44
 800166c:	4628      	mov	r0, r5
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 800166e:	622b      	str	r3, [r5, #32]
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001670:	f8c5 a00c 	str.w	sl, [r5, #12]
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8001674:	e9c5 6401 	strd	r6, r4, [r5, #4]
  SdramTiming.RPDelay = 2;
 8001678:	e9cd 9715 	strd	r9, r7, [sp, #84]	; 0x54
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 800167c:	61ec      	str	r4, [r5, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 800167e:	626c      	str	r4, [r5, #36]	; 0x24
  SdramTiming.SelfRefreshTime = 4;
 8001680:	f8cd a04c 	str.w	sl, [sp, #76]	; 0x4c
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 8001684:	f8c5 b010 	str.w	fp, [r5, #16]
  SdramTiming.LoadToActiveDelay = 2;
 8001688:	9711      	str	r7, [sp, #68]	; 0x44
  SdramTiming.RCDDelay = 2;
 800168a:	9717      	str	r7, [sp, #92]	; 0x5c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800168c:	f00a fb6a 	bl	800bd64 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001690:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001694:	a90d      	add	r1, sp, #52	; 0x34
 8001696:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001698:	e9cd 680d 	strd	r6, r8, [sp, #52]	; 0x34
  Command->ModeRegisterDefinition  = 0;
 800169c:	e9cd 640f 	strd	r6, r4, [sp, #60]	; 0x3c
 __IO uint32_t tmpmrd =0;
 80016a0:	940a      	str	r4, [sp, #40]	; 0x28
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016a2:	f00a fb81 	bl	800bda8 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 80016a6:	4630      	mov	r0, r6
 80016a8:	f007 fd3a 	bl	8009120 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016ac:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016b0:	a90d      	add	r1, sp, #52	; 0x34
 80016b2:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016b4:	e9cd 780d 	strd	r7, r8, [sp, #52]	; 0x34
  Command->ModeRegisterDefinition  = 0;
 80016b8:	e9cd 640f 	strd	r6, r4, [sp, #60]	; 0x3c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016bc:	f00a fb74 	bl	800bda8 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016c0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016c4:	a90d      	add	r1, sp, #52	; 0x34
 80016c6:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016c8:	e9cd 980d 	strd	r9, r8, [sp, #52]	; 0x34
  Command->ModeRegisterDefinition  = 0;
 80016cc:	e9cd a40f 	strd	sl, r4, [sp, #60]	; 0x3c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016d0:	f00a fb6a 	bl	800bda8 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 80016d4:	f44f 730c 	mov.w	r3, #560	; 0x230
 80016d8:	930a      	str	r3, [sp, #40]	; 0x28
  Command->ModeRegisterDefinition  = tmpmrd;
 80016da:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80016dc:	9310      	str	r3, [sp, #64]	; 0x40
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016de:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016e2:	a90d      	add	r1, sp, #52	; 0x34
 80016e4:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016e6:	e9cd a80d 	strd	sl, r8, [sp, #52]	; 0x34
  Command->AutoRefreshNumber       = 1;
 80016ea:	960f      	str	r6, [sp, #60]	; 0x3c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016ec:	f00a fb5c 	bl	800bda8 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 80016f0:	4628      	mov	r0, r5
 80016f2:	f240 516a 	movw	r1, #1386	; 0x56a
  hltdc.Instance = LTDC;
 80016f6:	4d1e      	ldr	r5, [pc, #120]	; (8001770 <main+0x354>)
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 80016f8:	f00a fb74 	bl	800bde4 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80016fc:	2234      	movs	r2, #52	; 0x34
 80016fe:	4621      	mov	r1, r4
 8001700:	a811      	add	r0, sp, #68	; 0x44
 8001702:	f028 feec 	bl	802a4de <memset>
  hltdc.Instance = LTDC;
 8001706:	4b1b      	ldr	r3, [pc, #108]	; (8001774 <main+0x358>)
 8001708:	602b      	str	r3, [r5, #0]
  hltdc.Init.AccumulatedHBP = 29;
 800170a:	231d      	movs	r3, #29
 800170c:	61eb      	str	r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 800170e:	f240 180d 	movw	r8, #269	; 0x10d
 8001712:	f240 1343 	movw	r3, #323	; 0x143
 8001716:	e9c5 8309 	strd	r8, r3, [r5, #36]	; 0x24
  hltdc.Init.AccumulatedVBP = 3;
 800171a:	f8c5 9020 	str.w	r9, [r5, #32]
  hltdc.Init.TotalHeigh = 327;
 800171e:	f240 1347 	movw	r3, #327	; 0x147
  hltdc.Init.Backcolor.Blue = 0;
 8001722:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.HorizontalSync = 9;
 8001724:	f04f 0909 	mov.w	r9, #9
  hltdc.Init.TotalHeigh = 327;
 8001728:	f240 1a17 	movw	sl, #279	; 0x117
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 800172c:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 800172e:	e9c5 a30b 	strd	sl, r3, [r5, #44]	; 0x2c
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8001732:	e9c5 4401 	strd	r4, r4, [r5, #4]
 8001736:	e021      	b.n	800177c <main+0x360>
 8001738:	40023800 	.word	0x40023800
 800173c:	40021000 	.word	0x40021000
 8001740:	40020800 	.word	0x40020800
 8001744:	40020c00 	.word	0x40020c00
 8001748:	40021800 	.word	0x40021800
 800174c:	40020000 	.word	0x40020000
 8001750:	20001988 	.word	0x20001988
 8001754:	200018e0 	.word	0x200018e0
 8001758:	40023000 	.word	0x40023000
 800175c:	40005c00 	.word	0x40005c00
 8001760:	000186a0 	.word	0x000186a0
 8001764:	20001ab8 	.word	0x20001ab8
 8001768:	20001a84 	.word	0x20001a84
 800176c:	a0000140 	.word	0xa0000140
 8001770:	200019dc 	.word	0x200019dc
 8001774:	40016800 	.word	0x40016800
 8001778:	40015000 	.word	0x40015000
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 800177c:	e9c5 4403 	strd	r4, r4, [r5, #12]
  hltdc.Init.VerticalSync = 1;
 8001780:	61ae      	str	r6, [r5, #24]
  hltdc.Init.Backcolor.Red = 0;
 8001782:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  hltdc.Init.HorizontalSync = 9;
 8001786:	f8c5 9014 	str.w	r9, [r5, #20]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 800178a:	f009 fd0f 	bl	800b1ac <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 240;
 800178e:	23f0      	movs	r3, #240	; 0xf0
 8001790:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.ImageWidth = 240;
 8001792:	931b      	str	r3, [sp, #108]	; 0x6c
  pLayerCfg.WindowY1 = 320;
 8001794:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8001798:	9314      	str	r3, [sp, #80]	; 0x50
  pLayerCfg.ImageHeight = 320;
 800179a:	931c      	str	r3, [sp, #112]	; 0x70
  pLayerCfg.Alpha = 255;
 800179c:	23ff      	movs	r3, #255	; 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800179e:	f44f 6c80 	mov.w	ip, #1024	; 0x400
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80017a2:	4622      	mov	r2, r4
 80017a4:	a911      	add	r1, sp, #68	; 0x44
 80017a6:	4628      	mov	r0, r5
  pLayerCfg.Alpha = 255;
 80017a8:	9316      	str	r3, [sp, #88]	; 0x58
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80017aa:	2305      	movs	r3, #5
 80017ac:	e9cd c318 	strd	ip, r3, [sp, #96]	; 0x60
  LcdDrv = &ili9341_drv;
 80017b0:	4d63      	ldr	r5, [pc, #396]	; (8001940 <main+0x524>)
  pLayerCfg.WindowX0 = 0;
 80017b2:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.WindowY0 = 0;
 80017b4:	9413      	str	r4, [sp, #76]	; 0x4c
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 80017b6:	9715      	str	r7, [sp, #84]	; 0x54
  pLayerCfg.Alpha0 = 0;
 80017b8:	9417      	str	r4, [sp, #92]	; 0x5c
  pLayerCfg.FBStartAdress = 0;
 80017ba:	941a      	str	r4, [sp, #104]	; 0x68
  pLayerCfg.Backcolor.Blue = 0;
 80017bc:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
  pLayerCfg.Backcolor.Red = 0;
 80017c0:	f88d 4076 	strb.w	r4, [sp, #118]	; 0x76
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80017c4:	f009 fdc8 	bl	800b358 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 80017c8:	4b5e      	ldr	r3, [pc, #376]	; (8001944 <main+0x528>)
 80017ca:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 80017cc:	681b      	ldr	r3, [r3, #0]
  htim1.Instance = TIM1;
 80017ce:	f8df 81b8 	ldr.w	r8, [pc, #440]	; 8001988 <main+0x56c>
  LcdDrv->Init();
 80017d2:	4798      	blx	r3
  LcdDrv->DisplayOff();
 80017d4:	682b      	ldr	r3, [r5, #0]
  htim3.Instance = TIM3;
 80017d6:	4d5c      	ldr	r5, [pc, #368]	; (8001948 <main+0x52c>)
  LcdDrv->DisplayOff();
 80017d8:	68db      	ldr	r3, [r3, #12]
 80017da:	4798      	blx	r3
  htim1.Init.Period = 65535;
 80017dc:	f64f 7aff 	movw	sl, #65535	; 0xffff
  htim1.Instance = TIM1;
 80017e0:	4b5a      	ldr	r3, [pc, #360]	; (800194c <main+0x530>)
 80017e2:	f8c8 3000 	str.w	r3, [r8]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 80017e6:	4640      	mov	r0, r8
  htim1.Init.Period = 65535;
 80017e8:	f8c8 a00c 	str.w	sl, [r8, #12]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 80017ec:	e9c8 4401 	strd	r4, r4, [r8, #4]
  htim1.Init.RepetitionCounter = 0;
 80017f0:	e9c8 4404 	strd	r4, r4, [r8, #16]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80017f4:	f8c8 4018 	str.w	r4, [r8, #24]
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 80017f8:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 80017fc:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001800:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8001804:	9415      	str	r4, [sp, #84]	; 0x54
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8001806:	f00a ff8f 	bl	800c728 <HAL_TIM_Base_Init>
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 800180a:	a911      	add	r1, sp, #68	; 0x44
 800180c:	4640      	mov	r0, r8
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 800180e:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 8001812:	f00b f903 	bl	800ca1c <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8001816:	a90d      	add	r1, sp, #52	; 0x34
 8001818:	4640      	mov	r0, r8
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800181a:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 800181e:	f00b fa3b 	bl	800cc98 <HAL_TIMEx_MasterConfigSynchronization>
  htim3.Instance = TIM3;
 8001822:	4b4b      	ldr	r3, [pc, #300]	; (8001950 <main+0x534>)
 8001824:	602b      	str	r3, [r5, #0]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001826:	4628      	mov	r0, r5
  htim3.Init.Period = 65535;
 8001828:	f8c5 a00c 	str.w	sl, [r5, #12]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 800182c:	e9c5 4401 	strd	r4, r4, [r5, #4]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001830:	612c      	str	r4, [r5, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001832:	61ac      	str	r4, [r5, #24]
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001834:	f44f 5a80 	mov.w	sl, #4096	; 0x1000
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001838:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
 800183c:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8001840:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 8001844:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
 8001848:	9415      	str	r4, [sp, #84]	; 0x54
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800184a:	940b      	str	r4, [sp, #44]	; 0x2c
 800184c:	940c      	str	r4, [sp, #48]	; 0x30
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 800184e:	f00a ff6b 	bl	800c728 <HAL_TIM_Base_Init>
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8001852:	a90d      	add	r1, sp, #52	; 0x34
 8001854:	4628      	mov	r0, r5
  hdma2d.Instance = DMA2D;
 8001856:	f8df 8134 	ldr.w	r8, [pc, #308]	; 800198c <main+0x570>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800185a:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 800185e:	f00b f82d 	bl	800c8bc <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 8001862:	a911      	add	r1, sp, #68	; 0x44
 8001864:	4628      	mov	r0, r5
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 8001866:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 800186a:	f00b f8d7 	bl	800ca1c <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 800186e:	a90b      	add	r1, sp, #44	; 0x2c
 8001870:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001872:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8001876:	f00b fa0f 	bl	800cc98 <HAL_TIMEx_MasterConfigSynchronization>
  hdma2d.Instance = DMA2D;
 800187a:	4b36      	ldr	r3, [pc, #216]	; (8001954 <main+0x538>)
  htim2.Instance = TIM2;
 800187c:	4d36      	ldr	r5, [pc, #216]	; (8001958 <main+0x53c>)
  hdma2d.Instance = DMA2D;
 800187e:	f8c8 3000 	str.w	r3, [r8]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 8001882:	e9c8 440a 	strd	r4, r4, [r8, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001886:	e9c8 440c 	strd	r4, r4, [r8, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800188a:	4640      	mov	r0, r8
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_ARGB8888;
 800188c:	e9c8 4401 	strd	r4, r4, [r8, #4]
  hdma2d.Init.OutputOffset = 0;
 8001890:	f8c8 400c 	str.w	r4, [r8, #12]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001894:	f007 fe4c 	bl	8009530 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001898:	4631      	mov	r1, r6
 800189a:	4640      	mov	r0, r8
 800189c:	f007 fe76 	bl	800958c <HAL_DMA2D_ConfigLayer>
  htim2.Init.Prescaler = 13124;
 80018a0:	f04f 4e80 	mov.w	lr, #1073741824	; 0x40000000
 80018a4:	f243 3344 	movw	r3, #13124	; 0x3344
 80018a8:	e9c5 e300 	strd	lr, r3, [r5]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80018ac:	4628      	mov	r0, r5
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80018ae:	2380      	movs	r3, #128	; 0x80
 80018b0:	61ab      	str	r3, [r5, #24]
  htim2.Init.Period = 9;
 80018b2:	f8c5 900c 	str.w	r9, [r5, #12]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80018b6:	60ac      	str	r4, [r5, #8]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80018b8:	612c      	str	r4, [r5, #16]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80018ba:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 80018be:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80018c2:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80018c6:	f00a ff2f 	bl	800c728 <HAL_TIM_Base_Init>
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80018ca:	a911      	add	r1, sp, #68	; 0x44
 80018cc:	4628      	mov	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80018ce:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80018d2:	f00a fff3 	bl	800c8bc <HAL_TIM_ConfigClockSource>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80018d6:	a90d      	add	r1, sp, #52	; 0x34
 80018d8:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80018da:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80018de:	f00b f9db 	bl	800cc98 <HAL_TIMEx_MasterConfigSynchronization>
  HAL_TIM_Base_Start_IT(&htim2);
 80018e2:	4628      	mov	r0, r5
 80018e4:	f00a ffae 	bl	800c844 <HAL_TIM_Base_Start_IT>
  MX_TouchGFX_Init();
 80018e8:	f7fe fedc 	bl	80006a4 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 80018ec:	f7fe fed8 	bl	80006a0 <MX_TouchGFX_PreOSInit>
  gyro_disable();
 80018f0:	f7ff fd00 	bl	80012f4 <gyro_disable>
  MEAS_GPIO_analog_init();         // Configure GPIOs in analog mode
 80018f4:	f000 f94e 	bl	8001b94 <MEAS_GPIO_analog_init>
  MEAS_timer_init();               // Configure the timer
 80018f8:	f000 f980 	bl	8001bfc <MEAS_timer_init>
  osKernelInitialize();
 80018fc:	f00b fade 	bl	800cebc <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8001900:	4a16      	ldr	r2, [pc, #88]	; (800195c <main+0x540>)
 8001902:	4639      	mov	r1, r7
 8001904:	4658      	mov	r0, fp
 8001906:	f00b fc13 	bl	800d130 <osMessageQueueNew>
 800190a:	4b15      	ldr	r3, [pc, #84]	; (8001960 <main+0x544>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800190c:	4a15      	ldr	r2, [pc, #84]	; (8001964 <main+0x548>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 800190e:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001910:	4621      	mov	r1, r4
 8001912:	4815      	ldr	r0, [pc, #84]	; (8001968 <main+0x54c>)
 8001914:	f00b fafe 	bl	800cf14 <osThreadNew>
 8001918:	4b14      	ldr	r3, [pc, #80]	; (800196c <main+0x550>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800191a:	4a15      	ldr	r2, [pc, #84]	; (8001970 <main+0x554>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800191c:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800191e:	4621      	mov	r1, r4
 8001920:	4814      	ldr	r0, [pc, #80]	; (8001974 <main+0x558>)
 8001922:	f00b faf7 	bl	800cf14 <osThreadNew>
 8001926:	4b14      	ldr	r3, [pc, #80]	; (8001978 <main+0x55c>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001928:	4a14      	ldr	r2, [pc, #80]	; (800197c <main+0x560>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800192a:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 800192c:	4621      	mov	r1, r4
 800192e:	4814      	ldr	r0, [pc, #80]	; (8001980 <main+0x564>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001930:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001932:	f00b faef 	bl	800cf14 <osThreadNew>
 8001936:	4b13      	ldr	r3, [pc, #76]	; (8001984 <main+0x568>)
 8001938:	6018      	str	r0, [r3, #0]
  osKernelStart();
 800193a:	f00b fad1 	bl	800cee0 <osKernelStart>
  while (1)
 800193e:	e7fe      	b.n	800193e <main+0x522>
 8001940:	200018d0 	.word	0x200018d0
 8001944:	20000018 	.word	0x20000018
 8001948:	20001ba0 	.word	0x20001ba0
 800194c:	40010000 	.word	0x40010000
 8001950:	40000400 	.word	0x40000400
 8001954:	4002b000 	.word	0x4002b000
 8001958:	20001b58 	.word	0x20001b58
 800195c:	0802b950 	.word	0x0802b950
 8001960:	200018d4 	.word	0x200018d4
 8001964:	0802b98c 	.word	0x0802b98c
 8001968:	0800129d 	.word	0x0800129d
 800196c:	200018dc 	.word	0x200018dc
 8001970:	0802b92c 	.word	0x0802b92c
 8001974:	080006b5 	.word	0x080006b5
 8001978:	200018cc 	.word	0x200018cc
 800197c:	0802b968 	.word	0x0802b968
 8001980:	080012a9 	.word	0x080012a9
 8001984:	200018d8 	.word	0x200018d8
 8001988:	20001b10 	.word	0x20001b10
 800198c:	200018e8 	.word	0x200018e8

08001990 <IOE_Init>:
 8001990:	4770      	bx	lr
 8001992:	bf00      	nop

08001994 <IOE_ITConfig>:
 8001994:	4770      	bx	lr
 8001996:	bf00      	nop

08001998 <IOE_Write>:
{
 8001998:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 800199a:	4c09      	ldr	r4, [pc, #36]	; (80019c0 <IOE_Write+0x28>)
{
 800199c:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 800199e:	6824      	ldr	r4, [r4, #0]
 80019a0:	9402      	str	r4, [sp, #8]
{
 80019a2:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80019a4:	2301      	movs	r3, #1
 80019a6:	f88d 4017 	strb.w	r4, [sp, #23]
 80019aa:	f10d 0417 	add.w	r4, sp, #23
 80019ae:	460a      	mov	r2, r1
 80019b0:	9301      	str	r3, [sp, #4]
 80019b2:	4601      	mov	r1, r0
 80019b4:	9400      	str	r4, [sp, #0]
 80019b6:	4803      	ldr	r0, [pc, #12]	; (80019c4 <IOE_Write+0x2c>)
 80019b8:	f008 fab0 	bl	8009f1c <HAL_I2C_Mem_Write>
}
 80019bc:	b006      	add	sp, #24
 80019be:	bd10      	pop	{r4, pc}
 80019c0:	2000000c 	.word	0x2000000c
 80019c4:	20001988 	.word	0x20001988

080019c8 <IOE_Read>:
{
 80019c8:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019ca:	4b0b      	ldr	r3, [pc, #44]	; (80019f8 <IOE_Read+0x30>)
{
 80019cc:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019ce:	681b      	ldr	r3, [r3, #0]
 80019d0:	9302      	str	r3, [sp, #8]
{
 80019d2:	4684      	mov	ip, r0
 80019d4:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019d6:	2301      	movs	r3, #1
 80019d8:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 80019dc:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019de:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 80019e2:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019e6:	4661      	mov	r1, ip
 80019e8:	4804      	ldr	r0, [pc, #16]	; (80019fc <IOE_Read+0x34>)
 80019ea:	f008 fb89 	bl	800a100 <HAL_I2C_Mem_Read>
}
 80019ee:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80019f2:	b007      	add	sp, #28
 80019f4:	f85d fb04 	ldr.w	pc, [sp], #4
 80019f8:	2000000c 	.word	0x2000000c
 80019fc:	20001988 	.word	0x20001988

08001a00 <IOE_ReadMultiple>:
{
 8001a00:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001a02:	4c09      	ldr	r4, [pc, #36]	; (8001a28 <IOE_ReadMultiple+0x28>)
{
 8001a04:	b084      	sub	sp, #16
 8001a06:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001a08:	6820      	ldr	r0, [r4, #0]
 8001a0a:	9002      	str	r0, [sp, #8]
 8001a0c:	e9cd 2300 	strd	r2, r3, [sp]
 8001a10:	4806      	ldr	r0, [pc, #24]	; (8001a2c <IOE_ReadMultiple+0x2c>)
 8001a12:	460a      	mov	r2, r1
 8001a14:	2301      	movs	r3, #1
 8001a16:	4661      	mov	r1, ip
 8001a18:	f008 fb72 	bl	800a100 <HAL_I2C_Mem_Read>
}
 8001a1c:	3800      	subs	r0, #0
 8001a1e:	bf18      	it	ne
 8001a20:	2001      	movne	r0, #1
 8001a22:	b004      	add	sp, #16
 8001a24:	bd10      	pop	{r4, pc}
 8001a26:	bf00      	nop
 8001a28:	2000000c 	.word	0x2000000c
 8001a2c:	20001988 	.word	0x20001988

08001a30 <IOE_Delay>:
 8001a30:	f007 bb76 	b.w	8009120 <HAL_Delay>

08001a34 <LCD_IO_Init>:
{
 8001a34:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a36:	4806      	ldr	r0, [pc, #24]	; (8001a50 <LCD_IO_Init+0x1c>)
 8001a38:	2200      	movs	r2, #0
 8001a3a:	2104      	movs	r1, #4
 8001a3c:	f007 ff40 	bl	80098c0 <HAL_GPIO_WritePin>
}
 8001a40:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a44:	4802      	ldr	r0, [pc, #8]	; (8001a50 <LCD_IO_Init+0x1c>)
 8001a46:	2201      	movs	r2, #1
 8001a48:	2104      	movs	r1, #4
 8001a4a:	f007 bf39 	b.w	80098c0 <HAL_GPIO_WritePin>
 8001a4e:	bf00      	nop
 8001a50:	40020800 	.word	0x40020800

08001a54 <LCD_IO_WriteData>:
{
 8001a54:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a56:	4d10      	ldr	r5, [pc, #64]	; (8001a98 <LCD_IO_WriteData+0x44>)
{
 8001a58:	b083      	sub	sp, #12
 8001a5a:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001a5c:	2201      	movs	r2, #1
 8001a5e:	480f      	ldr	r0, [pc, #60]	; (8001a9c <LCD_IO_WriteData+0x48>)
 8001a60:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a64:	f007 ff2c 	bl	80098c0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a68:	4628      	mov	r0, r5
 8001a6a:	2200      	movs	r2, #0
 8001a6c:	2104      	movs	r1, #4
 8001a6e:	f007 ff27 	bl	80098c0 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a72:	4b0b      	ldr	r3, [pc, #44]	; (8001aa0 <LCD_IO_WriteData+0x4c>)
 8001a74:	480b      	ldr	r0, [pc, #44]	; (8001aa4 <LCD_IO_WriteData+0x50>)
 8001a76:	681b      	ldr	r3, [r3, #0]
 8001a78:	f8ad 4006 	strh.w	r4, [sp, #6]
 8001a7c:	f10d 0106 	add.w	r1, sp, #6
 8001a80:	2201      	movs	r2, #1
 8001a82:	f00a fac3 	bl	800c00c <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a86:	2201      	movs	r2, #1
 8001a88:	2104      	movs	r1, #4
 8001a8a:	4628      	mov	r0, r5
}
 8001a8c:	b003      	add	sp, #12
 8001a8e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a92:	f007 bf15 	b.w	80098c0 <HAL_GPIO_WritePin>
 8001a96:	bf00      	nop
 8001a98:	40020800 	.word	0x40020800
 8001a9c:	40020c00 	.word	0x40020c00
 8001aa0:	20000010 	.word	0x20000010
 8001aa4:	20001ab8 	.word	0x20001ab8

08001aa8 <LCD_IO_WriteReg>:
{
 8001aa8:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001aaa:	4d10      	ldr	r5, [pc, #64]	; (8001aec <LCD_IO_WriteReg+0x44>)
{
 8001aac:	b083      	sub	sp, #12
 8001aae:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001ab0:	2200      	movs	r2, #0
 8001ab2:	480f      	ldr	r0, [pc, #60]	; (8001af0 <LCD_IO_WriteReg+0x48>)
 8001ab4:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001ab8:	f007 ff02 	bl	80098c0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001abc:	4628      	mov	r0, r5
 8001abe:	2200      	movs	r2, #0
 8001ac0:	2104      	movs	r1, #4
 8001ac2:	f007 fefd 	bl	80098c0 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001ac6:	4b0b      	ldr	r3, [pc, #44]	; (8001af4 <LCD_IO_WriteReg+0x4c>)
 8001ac8:	480b      	ldr	r0, [pc, #44]	; (8001af8 <LCD_IO_WriteReg+0x50>)
 8001aca:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 8001acc:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001ad0:	f10d 0106 	add.w	r1, sp, #6
 8001ad4:	2201      	movs	r2, #1
 8001ad6:	f00a fa99 	bl	800c00c <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001ada:	2201      	movs	r2, #1
 8001adc:	2104      	movs	r1, #4
 8001ade:	4628      	mov	r0, r5
}
 8001ae0:	b003      	add	sp, #12
 8001ae2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001ae6:	f007 beeb 	b.w	80098c0 <HAL_GPIO_WritePin>
 8001aea:	bf00      	nop
 8001aec:	40020800 	.word	0x40020800
 8001af0:	40020c00 	.word	0x40020c00
 8001af4:	20000010 	.word	0x20000010
 8001af8:	20001ab8 	.word	0x20001ab8

08001afc <LCD_IO_ReadData>:
{
 8001afc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001b00:	4e19      	ldr	r6, [pc, #100]	; (8001b68 <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001b02:	4f1a      	ldr	r7, [pc, #104]	; (8001b6c <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001b04:	f8df 9068 	ldr.w	r9, [pc, #104]	; 8001b70 <LCD_IO_ReadData+0x74>
 8001b08:	f8df 8068 	ldr.w	r8, [pc, #104]	; 8001b74 <LCD_IO_ReadData+0x78>
{
 8001b0c:	b083      	sub	sp, #12
 8001b0e:	460c      	mov	r4, r1
 8001b10:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001b12:	2200      	movs	r2, #0
 8001b14:	4630      	mov	r0, r6
 8001b16:	2104      	movs	r1, #4
 8001b18:	f007 fed2 	bl	80098c0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001b1c:	4638      	mov	r0, r7
 8001b1e:	2200      	movs	r2, #0
 8001b20:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001b24:	f007 fecc 	bl	80098c0 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001b28:	f8d9 3000 	ldr.w	r3, [r9]
 8001b2c:	f8ad 5004 	strh.w	r5, [sp, #4]
 8001b30:	a901      	add	r1, sp, #4
 8001b32:	2201      	movs	r2, #1
 8001b34:	4640      	mov	r0, r8
 8001b36:	f00a fa69 	bl	800c00c <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001b3a:	f8d9 3000 	ldr.w	r3, [r9]
 8001b3e:	4622      	mov	r2, r4
 8001b40:	a901      	add	r1, sp, #4
 8001b42:	4640      	mov	r0, r8
 8001b44:	f00a fd0a 	bl	800c55c <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001b48:	4638      	mov	r0, r7
 8001b4a:	2201      	movs	r2, #1
 8001b4c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001b50:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001b52:	f007 feb5 	bl	80098c0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001b56:	4630      	mov	r0, r6
 8001b58:	2201      	movs	r2, #1
 8001b5a:	2104      	movs	r1, #4
 8001b5c:	f007 feb0 	bl	80098c0 <HAL_GPIO_WritePin>
}
 8001b60:	4620      	mov	r0, r4
 8001b62:	b003      	add	sp, #12
 8001b64:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001b68:	40020800 	.word	0x40020800
 8001b6c:	40020c00 	.word	0x40020c00
 8001b70:	20000010 	.word	0x20000010
 8001b74:	20001ab8 	.word	0x20001ab8

08001b78 <LCD_Delay>:
  HAL_Delay(Delay);
 8001b78:	f007 bad2 	b.w	8009120 <HAL_Delay>

08001b7c <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001b7c:	4b03      	ldr	r3, [pc, #12]	; (8001b8c <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001b7e:	6802      	ldr	r2, [r0, #0]
 8001b80:	429a      	cmp	r2, r3
 8001b82:	d000      	beq.n	8001b86 <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001b84:	4770      	bx	lr
    HAL_IncTick();
 8001b86:	f007 bab9 	b.w	80090fc <HAL_IncTick>
 8001b8a:	bf00      	nop
 8001b8c:	40001000 	.word	0x40001000

08001b90 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001b90:	4770      	bx	lr
 8001b92:	bf00      	nop

08001b94 <MEAS_GPIO_analog_init>:
 * - ADC3_IN4 = GPIO PF6 (Pad left)
 * - ADC123_IN13 = GPIO PC3 (Pad right)
 * - ADC3_IN6 = GPIO PF8 (Hall sensor Left)
 * - ADC123_IN11 = GPIO PC1 (Hall sensor Right)
 *****************************************************************************/
void MEAS_GPIO_analog_init(void) {
 8001b94:	b410      	push	{r4}
 8001b96:	b083      	sub	sp, #12
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001b98:	4b15      	ldr	r3, [pc, #84]	; (8001bf0 <MEAS_GPIO_analog_init+0x5c>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001b9a:	4916      	ldr	r1, [pc, #88]	; (8001bf4 <MEAS_GPIO_analog_init+0x60>)
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001b9c:	2400      	movs	r4, #0
 8001b9e:	9400      	str	r4, [sp, #0]
 8001ba0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ba2:	f042 0220 	orr.w	r2, r2, #32
 8001ba6:	631a      	str	r2, [r3, #48]	; 0x30
 8001ba8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001baa:	f002 0220 	and.w	r2, r2, #32
 8001bae:	9200      	str	r2, [sp, #0]
 8001bb0:	9a00      	ldr	r2, [sp, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001bb2:	6808      	ldr	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8001bb4:	4a10      	ldr	r2, [pc, #64]	; (8001bf8 <MEAS_GPIO_analog_init+0x64>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001bb6:	f440 5040 	orr.w	r0, r0, #12288	; 0x3000
 8001bba:	6008      	str	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
 8001bbc:	6808      	ldr	r0, [r1, #0]
 8001bbe:	f440 3040 	orr.w	r0, r0, #196608	; 0x30000
 8001bc2:	6008      	str	r0, [r1, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8001bc4:	9401      	str	r4, [sp, #4]
 8001bc6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001bc8:	f041 0104 	orr.w	r1, r1, #4
 8001bcc:	6319      	str	r1, [r3, #48]	; 0x30
 8001bce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001bd0:	f003 0304 	and.w	r3, r3, #4
 8001bd4:	9301      	str	r3, [sp, #4]
 8001bd6:	9b01      	ldr	r3, [sp, #4]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8001bd8:	6813      	ldr	r3, [r2, #0]
 8001bda:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8001bde:	6013      	str	r3, [r2, #0]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER1_Pos);  // Analog PC1 = ADC3_IN11
 8001be0:	6813      	ldr	r3, [r2, #0]
 8001be2:	f043 030c 	orr.w	r3, r3, #12
 8001be6:	6013      	str	r3, [r2, #0]
}
 8001be8:	b003      	add	sp, #12
 8001bea:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001bee:	4770      	bx	lr
 8001bf0:	40023800 	.word	0x40023800
 8001bf4:	40021400 	.word	0x40021400
 8001bf8:	40020800 	.word	0x40020800

08001bfc <MEAS_timer_init>:
/** ***************************************************************************
 * @brief Configure the timer to trigger the ADC(s)
 *
 * @note For debugging purposes the timer interrupt might be useful.
 *****************************************************************************/
void MEAS_timer_init(void) {
 8001bfc:	b082      	sub	sp, #8
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001bfe:	4a0c      	ldr	r2, [pc, #48]	; (8001c30 <MEAS_timer_init+0x34>)
 8001c00:	2300      	movs	r3, #0
 8001c02:	9301      	str	r3, [sp, #4]
 8001c04:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8001c06:	f041 0101 	orr.w	r1, r1, #1
 8001c0a:	6411      	str	r1, [r2, #64]	; 0x40
 8001c0c:	6c12      	ldr	r2, [r2, #64]	; 0x40
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001c0e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001c12:	f002 0201 	and.w	r2, r2, #1
 8001c16:	9201      	str	r2, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001c18:	f243 3144 	movw	r1, #13124	; 0x3344
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001c1c:	2209      	movs	r2, #9
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001c1e:	9801      	ldr	r0, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001c20:	6299      	str	r1, [r3, #40]	; 0x28
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001c22:	62da      	str	r2, [r3, #44]	; 0x2c
    TIM2->CR2 |= TIM_CR2_MMS_1;   // TRGO on update
 8001c24:	685a      	ldr	r2, [r3, #4]
 8001c26:	f042 0220 	orr.w	r2, r2, #32
 8001c2a:	605a      	str	r2, [r3, #4]
}
 8001c2c:	b002      	add	sp, #8
 8001c2e:	4770      	bx	lr
 8001c30:	40023800 	.word	0x40023800

08001c34 <MEAS_ADC3_scan_init>:
 * @n As each conversion triggers the DMA, the number of transfers is doubled.
 * @n The DMA triggers the transfer complete interrupt when all data is ready.
 * @n The inputs used are ADC3_IN4 = GPIO PF6 (Pad Right), ADC3_IN13 = GPIO PC3
 *(Pad Left), ADC_IN6 = GPIO PF8 (HS-Right), ADC3_IN11 = GPIO PC1 (HS-Left)
 *****************************************************************************/
void MEAS_ADC3_scan_init(void) {
 8001c34:	b410      	push	{r4}
 8001c36:	b083      	sub	sp, #12
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001c38:	4934      	ldr	r1, [pc, #208]	; (8001d0c <MEAS_ADC3_scan_init+0xd8>)
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001c3a:	4a35      	ldr	r2, [pc, #212]	; (8001d10 <MEAS_ADC3_scan_init+0xdc>)
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001c3c:	2400      	movs	r4, #0
 8001c3e:	9400      	str	r4, [sp, #0]
 8001c40:	6c4b      	ldr	r3, [r1, #68]	; 0x44
 8001c42:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001c46:	644b      	str	r3, [r1, #68]	; 0x44
 8001c48:	6c4b      	ldr	r3, [r1, #68]	; 0x44
 8001c4a:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8001c4e:	9300      	str	r3, [sp, #0]
 8001c50:	9b00      	ldr	r3, [sp, #0]
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001c52:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
    ADC3->CR1 |= ADC_CR1_SCAN;                 // Enable scan mode
    ADC3->CR2 |= (1UL << ADC_CR2_EXTEN_Pos);   // En. ext. trigger on rising e.
    ADC3->CR2 |= (6UL << ADC_CR2_EXTSEL_Pos);  // Timer 2 TRGO event
    ADC3->CR2 |= ADC_CR2_DMA;                  // Enable DMA mode
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 8001c54:	4b2f      	ldr	r3, [pc, #188]	; (8001d14 <MEAS_ADC3_scan_init+0xe0>)
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001c56:	f440 1040 	orr.w	r0, r0, #3145728	; 0x300000
 8001c5a:	62d0      	str	r0, [r2, #44]	; 0x2c
    ADC3->SQR3 |= (4UL << ADC_SQR3_SQ1_Pos);   // Input 4 = first conversion
 8001c5c:	6b50      	ldr	r0, [r2, #52]	; 0x34
 8001c5e:	f040 0004 	orr.w	r0, r0, #4
 8001c62:	6350      	str	r0, [r2, #52]	; 0x34
    ADC3->SQR3 |= (13UL << ADC_SQR3_SQ2_Pos);  // Input 13 = second conversion
 8001c64:	6b50      	ldr	r0, [r2, #52]	; 0x34
 8001c66:	f440 70d0 	orr.w	r0, r0, #416	; 0x1a0
 8001c6a:	6350      	str	r0, [r2, #52]	; 0x34
    ADC3->SQR3 |= (6UL << ADC_SQR3_SQ3_Pos);   // Input 6 = third conversion
 8001c6c:	6b50      	ldr	r0, [r2, #52]	; 0x34
 8001c6e:	f440 50c0 	orr.w	r0, r0, #6144	; 0x1800
 8001c72:	6350      	str	r0, [r2, #52]	; 0x34
    ADC3->SQR3 |= (11UL << ADC_SQR3_SQ4_Pos);  // Input 11 = fourth conversion
 8001c74:	6b50      	ldr	r0, [r2, #52]	; 0x34
 8001c76:	f440 20b0 	orr.w	r0, r0, #360448	; 0x58000
 8001c7a:	6350      	str	r0, [r2, #52]	; 0x34
    ADC3->CR1 |= ADC_CR1_SCAN;                 // Enable scan mode
 8001c7c:	6850      	ldr	r0, [r2, #4]
 8001c7e:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 8001c82:	6050      	str	r0, [r2, #4]
    ADC3->CR2 |= (1UL << ADC_CR2_EXTEN_Pos);   // En. ext. trigger on rising e.
 8001c84:	6890      	ldr	r0, [r2, #8]
 8001c86:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001c8a:	6090      	str	r0, [r2, #8]
    ADC3->CR2 |= (6UL << ADC_CR2_EXTSEL_Pos);  // Timer 2 TRGO event
 8001c8c:	6890      	ldr	r0, [r2, #8]
 8001c8e:	f040 60c0 	orr.w	r0, r0, #100663296	; 0x6000000
 8001c92:	6090      	str	r0, [r2, #8]
    ADC3->CR2 |= ADC_CR2_DMA;                  // Enable DMA mode
 8001c94:	6890      	ldr	r0, [r2, #8]
 8001c96:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 8001c9a:	6090      	str	r0, [r2, #8]
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 8001c9c:	9401      	str	r4, [sp, #4]
 8001c9e:	6b0a      	ldr	r2, [r1, #48]	; 0x30
 8001ca0:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8001ca4:	630a      	str	r2, [r1, #48]	; 0x30
 8001ca6:	6b0a      	ldr	r2, [r1, #48]	; 0x30
 8001ca8:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 8001cac:	9201      	str	r2, [sp, #4]
 8001cae:	9a01      	ldr	r2, [sp, #4]
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 8001cb0:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001cb2:	f022 0201 	bic.w	r2, r2, #1
 8001cb6:	629a      	str	r2, [r3, #40]	; 0x28
    while (DMA2_Stream1->CR & DMA_SxCR_EN){};  // Wait for DMA to finish
 8001cb8:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001cba:	07d2      	lsls	r2, r2, #31
 8001cbc:	d4fc      	bmi.n	8001cb8 <MEAS_ADC3_scan_init+0x84>
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8001cbe:	689a      	ldr	r2, [r3, #8]
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
    DMA2_Stream1->NDTR =
        INPUT_COUNT * ADC_NUMS;  // Number of data items to transfer
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8001cc0:	4815      	ldr	r0, [pc, #84]	; (8001d18 <MEAS_ADC3_scan_init+0xe4>)
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 8001cc2:	4916      	ldr	r1, [pc, #88]	; (8001d1c <MEAS_ADC3_scan_init+0xe8>)
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8001cc4:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8001cc8:	609a      	str	r2, [r3, #8]
    DMA2_Stream1->CR |= (2UL << DMA_SxCR_CHSEL_Pos);  // Select channel 2
 8001cca:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001ccc:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001cd0:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PL_1;                // Priority high
 8001cd2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001cd4:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8001cd8:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MSIZE_1;  // Memory data size = 32 bit
 8001cda:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001cdc:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8001ce0:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
 8001ce2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001ce4:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001ce8:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
 8001cea:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001cec:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8001cf0:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8001cf2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR =
 8001cf4:	f44f 7480 	mov.w	r4, #256	; 0x100
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8001cf8:	f042 0210 	orr.w	r2, r2, #16
 8001cfc:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR =
 8001cfe:	62dc      	str	r4, [r3, #44]	; 0x2c
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8001d00:	6318      	str	r0, [r3, #48]	; 0x30
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 8001d02:	6359      	str	r1, [r3, #52]	; 0x34
}
 8001d04:	b003      	add	sp, #12
 8001d06:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001d0a:	4770      	bx	lr
 8001d0c:	40023800 	.word	0x40023800
 8001d10:	40012200 	.word	0x40012200
 8001d14:	40026400 	.word	0x40026400
 8001d18:	4001224c 	.word	0x4001224c
 8001d1c:	20001be8 	.word	0x20001be8

08001d20 <DMA2_Stream1_IRQHandler>:
 * and are ready for processing.
 *****************************************************************************/
void DMA2_Stream1_IRQHandler(void)
{
    static int debug = 0;
    debug++;
 8001d20:	4920      	ldr	r1, [pc, #128]	; (8001da4 <DMA2_Stream1_IRQHandler+0x84>)
    //HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);

	if (DMA2->LISR & DMA_LISR_TCIF1) // Stream1 transfer compl. interrupt f.
 8001d22:	4b21      	ldr	r3, [pc, #132]	; (8001da8 <DMA2_Stream1_IRQHandler+0x88>)
    debug++;
 8001d24:	680a      	ldr	r2, [r1, #0]
 8001d26:	3201      	adds	r2, #1
 8001d28:	600a      	str	r2, [r1, #0]
	if (DMA2->LISR & DMA_LISR_TCIF1) // Stream1 transfer compl. interrupt f.
 8001d2a:	681a      	ldr	r2, [r3, #0]
 8001d2c:	0511      	lsls	r1, r2, #20
 8001d2e:	d400      	bmi.n	8001d32 <DMA2_Stream1_IRQHandler+0x12>

        // copy data from DMA buffer to ADC_samples
        MEAS_ADC_reset();
        MEAS_data_ready = true;
    }
}
 8001d30:	4770      	bx	lr
 8001d32:	4a1e      	ldr	r2, [pc, #120]	; (8001dac <DMA2_Stream1_IRQHandler+0x8c>)
 8001d34:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 8001d38:	f8c2 1084 	str.w	r1, [r2, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 8001d3c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001d40:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001d44:	f8c2 1184 	str.w	r1, [r2, #388]	; 0x184
        DMA2_Stream1->CR &= ~DMA_SxCR_EN;         // Disable the DMA
 8001d48:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001d4a:	f022 0201 	bic.w	r2, r2, #1
 8001d4e:	629a      	str	r2, [r3, #40]	; 0x28
        while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 8001d50:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001d52:	07d2      	lsls	r2, r2, #31
 8001d54:	d4fc      	bmi.n	8001d50 <DMA2_Stream1_IRQHandler+0x30>
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8001d56:	6899      	ldr	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001d58:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8001d5c:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 8001d60:	6099      	str	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001d62:	6813      	ldr	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001d64:	4912      	ldr	r1, [pc, #72]	; (8001db0 <DMA2_Stream1_IRQHandler+0x90>)
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001d66:	f023 0301 	bic.w	r3, r3, #1
 8001d6a:	6013      	str	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001d6c:	6888      	ldr	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001d6e:	4b11      	ldr	r3, [pc, #68]	; (8001db4 <DMA2_Stream1_IRQHandler+0x94>)
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001d70:	f020 0001 	bic.w	r0, r0, #1
 8001d74:	6088      	str	r0, [r1, #8]
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode
 8001d76:	6888      	ldr	r0, [r1, #8]
 8001d78:	f420 7080 	bic.w	r0, r0, #256	; 0x100
 8001d7c:	6088      	str	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001d7e:	6a59      	ldr	r1, [r3, #36]	; 0x24
        MEAS_data_ready = true;
 8001d80:	480d      	ldr	r0, [pc, #52]	; (8001db8 <DMA2_Stream1_IRQHandler+0x98>)
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001d82:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 8001d86:	6259      	str	r1, [r3, #36]	; 0x24
    RCC->APB2RSTR &= ~RCC_APB2RSTR_ADCRST;  // Release reset of ADCs
 8001d88:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8001d8a:	f421 7180 	bic.w	r1, r1, #256	; 0x100
 8001d8e:	6259      	str	r1, [r3, #36]	; 0x24
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 8001d90:	6813      	ldr	r3, [r2, #0]
        MEAS_data_ready = true;
 8001d92:	f04f 0c01 	mov.w	ip, #1
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 8001d96:	f023 0301 	bic.w	r3, r3, #1
 8001d9a:	6013      	str	r3, [r2, #0]
        MEAS_data_ready = true;
 8001d9c:	f880 c000 	strb.w	ip, [r0]
}
 8001da0:	4770      	bx	lr
 8001da2:	bf00      	nop
 8001da4:	20001fec 	.word	0x20001fec
 8001da8:	40026400 	.word	0x40026400
 8001dac:	e000e100 	.word	0xe000e100
 8001db0:	40012200 	.word	0x40012200
 8001db4:	40023800 	.word	0x40023800
 8001db8:	20001fe8 	.word	0x20001fe8

08001dbc <MEAS_start_measure>:
 *
 * @note The result is stored alternated e.g. every 4th is together.
 *****************************************************************************/
// Start the measurement procedure
uint32_t* MEAS_start_measure(void)
{
 8001dbc:	b510      	push	{r4, lr}
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8001dbe:	4c16      	ldr	r4, [pc, #88]	; (8001e18 <MEAS_start_measure+0x5c>)
        buffer[i] = 0;
 8001dc0:	4816      	ldr	r0, [pc, #88]	; (8001e1c <MEAS_start_measure+0x60>)
 8001dc2:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001dc6:	2100      	movs	r1, #0
 8001dc8:	f028 fb89 	bl	802a4de <memset>
    //works
	MEAS_Buffer_reset(INPUT_COUNT, ADC_samples);

    //
	MEAS_ADC3_scan_init();
 8001dcc:	f7ff ff32 	bl	8001c34 <MEAS_ADC3_scan_init>
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8001dd0:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8001dd2:	4913      	ldr	r1, [pc, #76]	; (8001e20 <MEAS_start_measure+0x64>)
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001dd4:	4a13      	ldr	r2, [pc, #76]	; (8001e24 <MEAS_start_measure+0x68>)
 8001dd6:	f04f 7000 	mov.w	r0, #33554432	; 0x2000000
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8001dda:	f043 0301 	orr.w	r3, r3, #1
 8001dde:	62a3      	str	r3, [r4, #40]	; 0x28
 8001de0:	f8c1 0184 	str.w	r0, [r1, #388]	; 0x184
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001de4:	6048      	str	r0, [r1, #4]
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001de6:	6893      	ldr	r3, [r2, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001de8:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001dec:	f043 0301 	orr.w	r3, r3, #1
 8001df0:	6093      	str	r3, [r2, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001df2:	680b      	ldr	r3, [r1, #0]

	//
    MEAS_ADC3_scan_start();

    static int timeout = 0;
    while ((!MEAS_data_ready) & (timeout > 99999))
 8001df4:	4a0c      	ldr	r2, [pc, #48]	; (8001e28 <MEAS_start_measure+0x6c>)
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001df6:	f043 0301 	orr.w	r3, r3, #1
 8001dfa:	600b      	str	r3, [r1, #0]
    while ((!MEAS_data_ready) & (timeout > 99999))
 8001dfc:	6811      	ldr	r1, [r2, #0]
 8001dfe:	4b0b      	ldr	r3, [pc, #44]	; (8001e2c <MEAS_start_measure+0x70>)
 8001e00:	4299      	cmp	r1, r3
 8001e02:	490b      	ldr	r1, [pc, #44]	; (8001e30 <MEAS_start_measure+0x74>)
 8001e04:	dd03      	ble.n	8001e0e <MEAS_start_measure+0x52>
 8001e06:	780b      	ldrb	r3, [r1, #0]
 8001e08:	2b01      	cmp	r3, #1
 8001e0a:	d000      	beq.n	8001e0e <MEAS_start_measure+0x52>
 8001e0c:	e7fe      	b.n	8001e0c <MEAS_start_measure+0x50>
    {
    	// Wait for data
    	timeout++;
    }
    MEAS_data_ready = false;
 8001e0e:	2300      	movs	r3, #0
    timeout=0;

//    HAL_Delay(100);

    return ADC_samples;
}
 8001e10:	4802      	ldr	r0, [pc, #8]	; (8001e1c <MEAS_start_measure+0x60>)
    MEAS_data_ready = false;
 8001e12:	700b      	strb	r3, [r1, #0]
    timeout=0;
 8001e14:	6013      	str	r3, [r2, #0]
}
 8001e16:	bd10      	pop	{r4, pc}
 8001e18:	40026400 	.word	0x40026400
 8001e1c:	20001be8 	.word	0x20001be8
 8001e20:	e000e100 	.word	0xe000e100
 8001e24:	40012200 	.word	0x40012200
 8001e28:	20001ff0 	.word	0x20001ff0
 8001e2c:	0001869f 	.word	0x0001869f
 8001e30:	20001fe8 	.word	0x20001fe8

08001e34 <MEAS_get_num_of_chan>:
 * @return Number of channels
 *****************************************************************************/
uint8_t MEAS_get_num_of_chan(void)
{
	return INPUT_COUNT;
}
 8001e34:	2004      	movs	r0, #4
 8001e36:	4770      	bx	lr

08001e38 <MEAS_get_num_of_samples>:
 * @return Number of samples
 *****************************************************************************/
uint8_t MEAS_get_num_of_samples(void)
{
	return ADC_NUMS;
}
 8001e38:	2040      	movs	r0, #64	; 0x40
 8001e3a:	4770      	bx	lr

08001e3c <MEAS_get_samp_freq>:
 * @return Sampling frequency
 *****************************************************************************/
uint16_t MEAS_get_samp_freq(void)
{
	return ADC_FS;
}
 8001e3c:	f44f 7020 	mov.w	r0, #640	; 0x280
 8001e40:	4770      	bx	lr
 8001e42:	bf00      	nop

08001e44 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001e44:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001e46:	4b0e      	ldr	r3, [pc, #56]	; (8001e80 <HAL_MspInit+0x3c>)
 8001e48:	2200      	movs	r2, #0
 8001e4a:	9200      	str	r2, [sp, #0]
 8001e4c:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001e4e:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001e52:	6459      	str	r1, [r3, #68]	; 0x44
 8001e54:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8001e56:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 8001e5a:	9000      	str	r0, [sp, #0]
 8001e5c:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001e5e:	9201      	str	r2, [sp, #4]
 8001e60:	6c18      	ldr	r0, [r3, #64]	; 0x40
 8001e62:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001e66:	6418      	str	r0, [r3, #64]	; 0x40
 8001e68:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001e6a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001e6e:	9301      	str	r3, [sp, #4]
 8001e70:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001e72:	210f      	movs	r1, #15
 8001e74:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001e78:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001e7a:	f007 b975 	b.w	8009168 <HAL_NVIC_SetPriority>
 8001e7e:	bf00      	nop
 8001e80:	40023800 	.word	0x40023800

08001e84 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001e84:	4b0b      	ldr	r3, [pc, #44]	; (8001eb4 <HAL_CRC_MspInit+0x30>)
 8001e86:	6802      	ldr	r2, [r0, #0]
 8001e88:	429a      	cmp	r2, r3
 8001e8a:	d000      	beq.n	8001e8e <HAL_CRC_MspInit+0xa>
 8001e8c:	4770      	bx	lr
{
 8001e8e:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001e90:	2200      	movs	r2, #0
 8001e92:	9201      	str	r2, [sp, #4]
 8001e94:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 8001e98:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001e9c:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 8001ea0:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8001ea4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ea6:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001eaa:	9301      	str	r3, [sp, #4]
 8001eac:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001eae:	b002      	add	sp, #8
 8001eb0:	4770      	bx	lr
 8001eb2:	bf00      	nop
 8001eb4:	40023000 	.word	0x40023000

08001eb8 <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
 8001eb8:	4b0a      	ldr	r3, [pc, #40]	; (8001ee4 <HAL_DMA2D_MspInit+0x2c>)
 8001eba:	6802      	ldr	r2, [r0, #0]
 8001ebc:	429a      	cmp	r2, r3
 8001ebe:	d000      	beq.n	8001ec2 <HAL_DMA2D_MspInit+0xa>
 8001ec0:	4770      	bx	lr
{
 8001ec2:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001ec4:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001ec8:	2200      	movs	r2, #0
 8001eca:	9201      	str	r2, [sp, #4]
 8001ecc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ece:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8001ed2:	631a      	str	r2, [r3, #48]	; 0x30
 8001ed4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ed6:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001eda:	9301      	str	r3, [sp, #4]
 8001edc:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001ede:	b002      	add	sp, #8
 8001ee0:	4770      	bx	lr
 8001ee2:	bf00      	nop
 8001ee4:	4002b000 	.word	0x4002b000

08001ee8 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001ee8:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 8001eec:	4b2e      	ldr	r3, [pc, #184]	; (8001fa8 <HAL_I2C_MspInit+0xc0>)
 8001eee:	6802      	ldr	r2, [r0, #0]
{
 8001ef0:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ef2:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 8001ef4:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ef6:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8001efa:	e9cd 4406 	strd	r4, r4, [sp, #24]
 8001efe:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 8001f00:	d002      	beq.n	8001f08 <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001f02:	b00a      	add	sp, #40	; 0x28
 8001f04:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001f08:	4d28      	ldr	r5, [pc, #160]	; (8001fac <HAL_I2C_MspInit+0xc4>)
 8001f0a:	9401      	str	r4, [sp, #4]
 8001f0c:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f0e:	4828      	ldr	r0, [pc, #160]	; (8001fb0 <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001f10:	f043 0304 	orr.w	r3, r3, #4
 8001f14:	632b      	str	r3, [r5, #48]	; 0x30
 8001f16:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001f18:	f003 0304 	and.w	r3, r3, #4
 8001f1c:	9301      	str	r3, [sp, #4]
 8001f1e:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001f20:	9402      	str	r4, [sp, #8]
 8001f22:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001f24:	f043 0301 	orr.w	r3, r3, #1
 8001f28:	632b      	str	r3, [r5, #48]	; 0x30
 8001f2a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001f2c:	f003 0301 	and.w	r3, r3, #1
 8001f30:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001f32:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001f36:	f04f 0801 	mov.w	r8, #1
 8001f3a:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001f3e:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f40:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001f42:	2312      	movs	r3, #18
 8001f44:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001f48:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001f4c:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001f4e:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f50:	f007 fb72 	bl	8009638 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f54:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001f56:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001f5a:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f5c:	4815      	ldr	r0, [pc, #84]	; (8001fb4 <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001f5e:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001f60:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001f64:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f68:	f007 fb66 	bl	8009638 <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001f6c:	9403      	str	r4, [sp, #12]
 8001f6e:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001f70:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001f74:	642b      	str	r3, [r5, #64]	; 0x40
 8001f76:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001f78:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001f7c:	4622      	mov	r2, r4
 8001f7e:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001f80:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001f82:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001f84:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001f86:	f007 f8ef 	bl	8009168 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 8001f8a:	2048      	movs	r0, #72	; 0x48
 8001f8c:	f007 f92a 	bl	80091e4 <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 8001f90:	6a2b      	ldr	r3, [r5, #32]
 8001f92:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001f96:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001f98:	6a2b      	ldr	r3, [r5, #32]
 8001f9a:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001f9e:	622b      	str	r3, [r5, #32]
}
 8001fa0:	b00a      	add	sp, #40	; 0x28
 8001fa2:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8001fa6:	bf00      	nop
 8001fa8:	40005c00 	.word	0x40005c00
 8001fac:	40023800 	.word	0x40023800
 8001fb0:	40020800 	.word	0x40020800
 8001fb4:	40020000 	.word	0x40020000

08001fb8 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001fb8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001fbc:	4604      	mov	r4, r0
 8001fbe:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001fc0:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001fc2:	2230      	movs	r2, #48	; 0x30
 8001fc4:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001fc6:	e9cd 1108 	strd	r1, r1, [sp, #32]
 8001fca:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 8001fce:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001fd0:	f028 fa85 	bl	802a4de <memset>
  if(hltdc->Instance==LTDC)
 8001fd4:	4b67      	ldr	r3, [pc, #412]	; (8002174 <HAL_LTDC_MspInit+0x1bc>)
 8001fd6:	6822      	ldr	r2, [r4, #0]
 8001fd8:	429a      	cmp	r2, r3
 8001fda:	d002      	beq.n	8001fe2 <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001fdc:	b01a      	add	sp, #104	; 0x68
 8001fde:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001fe2:	23c0      	movs	r3, #192	; 0xc0
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001fe4:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001fe6:	2204      	movs	r2, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001fe8:	9312      	str	r3, [sp, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001fea:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001fec:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001ff0:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001ff2:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001ff4:	9317      	str	r3, [sp, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001ff6:	f009 fd89 	bl	800bb0c <HAL_RCCEx_PeriphCLKConfig>
 8001ffa:	2800      	cmp	r0, #0
 8001ffc:	f040 80b7 	bne.w	800216e <HAL_LTDC_MspInit+0x1b6>
    __HAL_RCC_LTDC_CLK_ENABLE();
 8002000:	4b5d      	ldr	r3, [pc, #372]	; (8002178 <HAL_LTDC_MspInit+0x1c0>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002002:	485e      	ldr	r0, [pc, #376]	; (800217c <HAL_LTDC_MspInit+0x1c4>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8002004:	2400      	movs	r4, #0
 8002006:	9401      	str	r4, [sp, #4]
 8002008:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800200a:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 800200e:	645a      	str	r2, [r3, #68]	; 0x44
 8002010:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002012:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8002016:	9201      	str	r2, [sp, #4]
 8002018:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800201a:	9402      	str	r4, [sp, #8]
 800201c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800201e:	f042 0220 	orr.w	r2, r2, #32
 8002022:	631a      	str	r2, [r3, #48]	; 0x30
 8002024:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002026:	f002 0220 	and.w	r2, r2, #32
 800202a:	9202      	str	r2, [sp, #8]
 800202c:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800202e:	9403      	str	r4, [sp, #12]
 8002030:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002032:	f042 0201 	orr.w	r2, r2, #1
 8002036:	631a      	str	r2, [r3, #48]	; 0x30
 8002038:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800203a:	f002 0201 	and.w	r2, r2, #1
 800203e:	9203      	str	r2, [sp, #12]
 8002040:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002042:	9404      	str	r4, [sp, #16]
 8002044:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002046:	f042 0202 	orr.w	r2, r2, #2
 800204a:	631a      	str	r2, [r3, #48]	; 0x30
 800204c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800204e:	f002 0202 	and.w	r2, r2, #2
 8002052:	9204      	str	r2, [sp, #16]
 8002054:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8002056:	9405      	str	r4, [sp, #20]
 8002058:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800205a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800205e:	631a      	str	r2, [r3, #48]	; 0x30
 8002060:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002062:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8002066:	9205      	str	r2, [sp, #20]
 8002068:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800206a:	9406      	str	r4, [sp, #24]
 800206c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800206e:	f042 0204 	orr.w	r2, r2, #4
 8002072:	631a      	str	r2, [r3, #48]	; 0x30
 8002074:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002076:	f002 0204 	and.w	r2, r2, #4
 800207a:	9206      	str	r2, [sp, #24]
 800207c:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800207e:	9407      	str	r4, [sp, #28]
 8002080:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002082:	f042 0208 	orr.w	r2, r2, #8
 8002086:	631a      	str	r2, [r3, #48]	; 0x30
 8002088:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800208a:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 800208e:	2600      	movs	r6, #0
 8002090:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002092:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002094:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002096:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8002098:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800209c:	2302      	movs	r3, #2
 800209e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80020a2:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80020a6:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80020a8:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80020aa:	f007 fac5 	bl	8009638 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80020ae:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 80020b0:	f641 0258 	movw	r2, #6232	; 0x1858
 80020b4:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80020b6:	4832      	ldr	r0, [pc, #200]	; (8002180 <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80020b8:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 80020ba:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80020be:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 80020c2:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80020c6:	f007 fab7 	bl	8009638 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80020ca:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 80020cc:	2203      	movs	r2, #3
 80020ce:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80020d0:	482c      	ldr	r0, [pc, #176]	; (8002184 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80020d2:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 80020d6:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80020da:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80020de:	f007 faab 	bl	8009638 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80020e2:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 80020e4:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 80020e8:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80020ea:	4826      	ldr	r0, [pc, #152]	; (8002184 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80020ec:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 80020ee:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80020f2:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80020f6:	f007 fa9f 	bl	8009638 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80020fa:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 80020fc:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 8002100:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002102:	4821      	ldr	r0, [pc, #132]	; (8002188 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002104:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8002106:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800210a:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800210e:	f007 fa93 	bl	8009638 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002112:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002114:	22c0      	movs	r2, #192	; 0xc0
 8002116:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002118:	481c      	ldr	r0, [pc, #112]	; (800218c <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800211a:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 800211c:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002120:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002124:	f007 fa88 	bl	8009638 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002128:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 800212a:	2208      	movs	r2, #8
 800212c:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800212e:	4818      	ldr	r0, [pc, #96]	; (8002190 <HAL_LTDC_MspInit+0x1d8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002130:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8002132:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002136:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800213a:	f007 fa7d 	bl	8009638 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 800213e:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002140:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8002142:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002146:	4810      	ldr	r0, [pc, #64]	; (8002188 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002148:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 800214c:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002150:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002154:	f007 fa70 	bl	8009638 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8002158:	4622      	mov	r2, r4
 800215a:	2105      	movs	r1, #5
 800215c:	2058      	movs	r0, #88	; 0x58
 800215e:	f007 f803 	bl	8009168 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8002162:	2058      	movs	r0, #88	; 0x58
 8002164:	f007 f83e 	bl	80091e4 <HAL_NVIC_EnableIRQ>
}
 8002168:	b01a      	add	sp, #104	; 0x68
 800216a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 800216e:	f7ff fd0f 	bl	8001b90 <Error_Handler>
 8002172:	e745      	b.n	8002000 <HAL_LTDC_MspInit+0x48>
 8002174:	40016800 	.word	0x40016800
 8002178:	40023800 	.word	0x40023800
 800217c:	40021400 	.word	0x40021400
 8002180:	40020000 	.word	0x40020000
 8002184:	40020400 	.word	0x40020400
 8002188:	40021800 	.word	0x40021800
 800218c:	40020800 	.word	0x40020800
 8002190:	40020c00 	.word	0x40020c00
 8002194:	00000000 	.word	0x00000000

08002198 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8002198:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 800219a:	4a1b      	ldr	r2, [pc, #108]	; (8002208 <HAL_SPI_MspInit+0x70>)
 800219c:	6801      	ldr	r1, [r0, #0]
{
 800219e:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80021a0:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 80021a2:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80021a4:	e9cd 3302 	strd	r3, r3, [sp, #8]
 80021a8:	e9cd 3304 	strd	r3, r3, [sp, #16]
 80021ac:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 80021ae:	d001      	beq.n	80021b4 <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 80021b0:	b008      	add	sp, #32
 80021b2:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 80021b4:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 80021b8:	9300      	str	r3, [sp, #0]
 80021ba:	6c50      	ldr	r0, [r2, #68]	; 0x44
 80021bc:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 80021c0:	6450      	str	r0, [r2, #68]	; 0x44
 80021c2:	6c50      	ldr	r0, [r2, #68]	; 0x44
 80021c4:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 80021c8:	9000      	str	r0, [sp, #0]
 80021ca:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80021cc:	9301      	str	r3, [sp, #4]
 80021ce:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80021d0:	480e      	ldr	r0, [pc, #56]	; (800220c <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80021d2:	f043 0320 	orr.w	r3, r3, #32
 80021d6:	6313      	str	r3, [r2, #48]	; 0x30
 80021d8:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 80021da:	ed9f 7b09 	vldr	d7, [pc, #36]	; 8002200 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80021de:	f003 0320 	and.w	r3, r3, #32
 80021e2:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80021e4:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80021e6:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80021e8:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 80021ea:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80021ee:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80021f2:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80021f4:	f007 fa20 	bl	8009638 <HAL_GPIO_Init>
}
 80021f8:	b008      	add	sp, #32
 80021fa:	bd10      	pop	{r4, pc}
 80021fc:	f3af 8000 	nop.w
 8002200:	00000380 	.word	0x00000380
 8002204:	00000002 	.word	0x00000002
 8002208:	40015000 	.word	0x40015000
 800220c:	40021400 	.word	0x40021400

08002210 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8002210:	b530      	push	{r4, r5, lr}
  if(htim_base->Instance==TIM1)
 8002212:	4a31      	ldr	r2, [pc, #196]	; (80022d8 <HAL_TIM_Base_MspInit+0xc8>)
 8002214:	6803      	ldr	r3, [r0, #0]
 8002216:	4293      	cmp	r3, r2
{
 8002218:	b085      	sub	sp, #20
  if(htim_base->Instance==TIM1)
 800221a:	d007      	beq.n	800222c <HAL_TIM_Base_MspInit+0x1c>
    __HAL_RCC_TIM1_CLK_ENABLE();
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
  else if(htim_base->Instance==TIM2)
 800221c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002220:	d020      	beq.n	8002264 <HAL_TIM_Base_MspInit+0x54>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 8002222:	4a2e      	ldr	r2, [pc, #184]	; (80022dc <HAL_TIM_Base_MspInit+0xcc>)
 8002224:	4293      	cmp	r3, r2
 8002226:	d00f      	beq.n	8002248 <HAL_TIM_Base_MspInit+0x38>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8002228:	b005      	add	sp, #20
 800222a:	bd30      	pop	{r4, r5, pc}
    __HAL_RCC_TIM1_CLK_ENABLE();
 800222c:	4b2c      	ldr	r3, [pc, #176]	; (80022e0 <HAL_TIM_Base_MspInit+0xd0>)
 800222e:	2200      	movs	r2, #0
 8002230:	9201      	str	r2, [sp, #4]
 8002232:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002234:	f042 0201 	orr.w	r2, r2, #1
 8002238:	645a      	str	r2, [r3, #68]	; 0x44
 800223a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800223c:	f003 0301 	and.w	r3, r3, #1
 8002240:	9301      	str	r3, [sp, #4]
 8002242:	9b01      	ldr	r3, [sp, #4]
}
 8002244:	b005      	add	sp, #20
 8002246:	bd30      	pop	{r4, r5, pc}
    __HAL_RCC_TIM3_CLK_ENABLE();
 8002248:	4b25      	ldr	r3, [pc, #148]	; (80022e0 <HAL_TIM_Base_MspInit+0xd0>)
 800224a:	2200      	movs	r2, #0
 800224c:	9203      	str	r2, [sp, #12]
 800224e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002250:	f042 0202 	orr.w	r2, r2, #2
 8002254:	641a      	str	r2, [r3, #64]	; 0x40
 8002256:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002258:	f003 0302 	and.w	r3, r3, #2
 800225c:	9303      	str	r3, [sp, #12]
 800225e:	9b03      	ldr	r3, [sp, #12]
}
 8002260:	b005      	add	sp, #20
 8002262:	bd30      	pop	{r4, r5, pc}
    __HAL_RCC_TIM2_CLK_ENABLE();
 8002264:	2300      	movs	r3, #0
 8002266:	4a1e      	ldr	r2, [pc, #120]	; (80022e0 <HAL_TIM_Base_MspInit+0xd0>)
 8002268:	9302      	str	r3, [sp, #8]
 800226a:	6c11      	ldr	r1, [r2, #64]	; 0x40
    hdma_tim2_up_ch3.Instance = DMA1_Stream1;
 800226c:	4d1d      	ldr	r5, [pc, #116]	; (80022e4 <HAL_TIM_Base_MspInit+0xd4>)
    __HAL_RCC_TIM2_CLK_ENABLE();
 800226e:	f041 0101 	orr.w	r1, r1, #1
 8002272:	6411      	str	r1, [r2, #64]	; 0x40
 8002274:	6c12      	ldr	r2, [r2, #64]	; 0x40
    hdma_tim2_up_ch3.Instance = DMA1_Stream1;
 8002276:	491c      	ldr	r1, [pc, #112]	; (80022e8 <HAL_TIM_Base_MspInit+0xd8>)
    hdma_tim2_up_ch3.Init.PeriphInc = DMA_PINC_DISABLE;
 8002278:	60eb      	str	r3, [r5, #12]
    __HAL_RCC_TIM2_CLK_ENABLE();
 800227a:	f002 0201 	and.w	r2, r2, #1
 800227e:	9202      	str	r2, [sp, #8]
    hdma_tim2_up_ch3.Init.Channel = DMA_CHANNEL_3;
 8002280:	f04f 62c0 	mov.w	r2, #100663296	; 0x6000000
 8002284:	e9c5 1200 	strd	r1, r2, [r5]
    hdma_tim2_up_ch3.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8002288:	2140      	movs	r1, #64	; 0x40
    hdma_tim2_up_ch3.Init.MemInc = DMA_MINC_ENABLE;
 800228a:	f44f 6280 	mov.w	r2, #1024	; 0x400
    hdma_tim2_up_ch3.Init.Direction = DMA_MEMORY_TO_PERIPH;
 800228e:	60a9      	str	r1, [r5, #8]
    hdma_tim2_up_ch3.Init.MemInc = DMA_MINC_ENABLE;
 8002290:	612a      	str	r2, [r5, #16]
    hdma_tim2_up_ch3.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 8002292:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8002296:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 800229a:	e9c5 1205 	strd	r1, r2, [r5, #20]
 800229e:	4604      	mov	r4, r0
    hdma_tim2_up_ch3.Init.Priority = DMA_PRIORITY_MEDIUM;
 80022a0:	f44f 3280 	mov.w	r2, #65536	; 0x10000
    __HAL_RCC_TIM2_CLK_ENABLE();
 80022a4:	9802      	ldr	r0, [sp, #8]
    hdma_tim2_up_ch3.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 80022a6:	626b      	str	r3, [r5, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_tim2_up_ch3) != HAL_OK)
 80022a8:	4628      	mov	r0, r5
    hdma_tim2_up_ch3.Init.Priority = DMA_PRIORITY_MEDIUM;
 80022aa:	e9c5 3207 	strd	r3, r2, [r5, #28]
    if (HAL_DMA_Init(&hdma_tim2_up_ch3) != HAL_OK)
 80022ae:	f006 ffbb 	bl	8009228 <HAL_DMA_Init>
 80022b2:	b968      	cbnz	r0, 80022d0 <HAL_TIM_Base_MspInit+0xc0>
    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_UPDATE],hdma_tim2_up_ch3);
 80022b4:	6225      	str	r5, [r4, #32]
    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_CC3],hdma_tim2_up_ch3);
 80022b6:	62e5      	str	r5, [r4, #44]	; 0x2c
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 80022b8:	201c      	movs	r0, #28
 80022ba:	2200      	movs	r2, #0
 80022bc:	2105      	movs	r1, #5
    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_CC3],hdma_tim2_up_ch3);
 80022be:	63ac      	str	r4, [r5, #56]	; 0x38
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 80022c0:	f006 ff52 	bl	8009168 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 80022c4:	201c      	movs	r0, #28
}
 80022c6:	b005      	add	sp, #20
 80022c8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 80022cc:	f006 bf8a 	b.w	80091e4 <HAL_NVIC_EnableIRQ>
      Error_Handler();
 80022d0:	f7ff fc5e 	bl	8001b90 <Error_Handler>
 80022d4:	e7ee      	b.n	80022b4 <HAL_TIM_Base_MspInit+0xa4>
 80022d6:	bf00      	nop
 80022d8:	40010000 	.word	0x40010000
 80022dc:	40000400 	.word	0x40000400
 80022e0:	40023800 	.word	0x40023800
 80022e4:	20001928 	.word	0x20001928
 80022e8:	40026028 	.word	0x40026028

080022ec <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 80022ec:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 80022ee:	4b2b      	ldr	r3, [pc, #172]	; (800239c <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 80022f0:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 80022f2:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 80022f4:	2200      	movs	r2, #0
 80022f6:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 80022f8:	2c00      	cmp	r4, #0
 80022fa:	d14c      	bne.n	8002396 <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 80022fc:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 80022fe:	4a28      	ldr	r2, [pc, #160]	; (80023a0 <HAL_SDRAM_MspInit+0xb4>)
 8002300:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 8002302:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8002304:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002306:	4827      	ldr	r0, [pc, #156]	; (80023a4 <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8002308:	433b      	orrs	r3, r7
 800230a:	6393      	str	r3, [r2, #56]	; 0x38
 800230c:	6b93      	ldr	r3, [r2, #56]	; 0x38
 800230e:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002310:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002312:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8002314:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 8002318:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800231a:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 800231c:	2302      	movs	r3, #2
 800231e:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002322:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 8002326:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002328:	f007 f986 	bl	8009638 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800232c:	481e      	ldr	r0, [pc, #120]	; (80023a8 <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 800232e:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002330:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002332:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002334:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002338:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800233c:	f007 f97c 	bl	8009638 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8002340:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002344:	4819      	ldr	r0, [pc, #100]	; (80023ac <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8002346:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002348:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800234a:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800234e:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002352:	f007 f971 	bl	8009638 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8002356:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800235a:	4815      	ldr	r0, [pc, #84]	; (80023b0 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 800235c:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800235e:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002360:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002364:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002368:	f007 f966 	bl	8009638 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 800236c:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002370:	4810      	ldr	r0, [pc, #64]	; (80023b4 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002372:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002374:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002376:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800237a:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800237e:	f007 f95b 	bl	8009638 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002382:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002384:	480c      	ldr	r0, [pc, #48]	; (80023b8 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002386:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002388:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800238a:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800238e:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002390:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002392:	f007 f951 	bl	8009638 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8002396:	b009      	add	sp, #36	; 0x24
 8002398:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800239a:	bf00      	nop
 800239c:	20001ff4 	.word	0x20001ff4
 80023a0:	40023800 	.word	0x40023800
 80023a4:	40021400 	.word	0x40021400
 80023a8:	40020800 	.word	0x40020800
 80023ac:	40021800 	.word	0x40021800
 80023b0:	40021000 	.word	0x40021000
 80023b4:	40020c00 	.word	0x40020c00
 80023b8:	40020400 	.word	0x40020400

080023bc <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80023bc:	b570      	push	{r4, r5, r6, lr}
 80023be:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 80023c0:	4b23      	ldr	r3, [pc, #140]	; (8002450 <HAL_InitTick+0x94>)
 80023c2:	2200      	movs	r2, #0
 80023c4:	9202      	str	r2, [sp, #8]
 80023c6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80023c8:	f042 0210 	orr.w	r2, r2, #16
 80023cc:	641a      	str	r2, [r3, #64]	; 0x40
 80023ce:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80023d0:	f003 0310 	and.w	r3, r3, #16
 80023d4:	9302      	str	r3, [sp, #8]
{
 80023d6:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80023d8:	a901      	add	r1, sp, #4
 80023da:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 80023dc:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80023de:	f009 fb73 	bl	800bac8 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 80023e2:	9b06      	ldr	r3, [sp, #24]
 80023e4:	b9d3      	cbnz	r3, 800241c <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 80023e6:	f009 fb5f 	bl	800baa8 <HAL_RCC_GetPCLK1Freq>
 80023ea:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80023ec:	4a19      	ldr	r2, [pc, #100]	; (8002454 <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 80023ee:	4c1a      	ldr	r4, [pc, #104]	; (8002458 <HAL_InitTick+0x9c>)
 80023f0:	491a      	ldr	r1, [pc, #104]	; (800245c <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80023f2:	fba2 2303 	umull	r2, r3, r2, r3
 80023f6:	0c9b      	lsrs	r3, r3, #18
 80023f8:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 80023fa:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 80023fc:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8002400:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8002402:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 8002406:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002408:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800240a:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 800240c:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 800240e:	f00a f98b 	bl	800c728 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8002412:	4606      	mov	r6, r0
 8002414:	b130      	cbz	r0, 8002424 <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 8002416:	4630      	mov	r0, r6
 8002418:	b008      	add	sp, #32
 800241a:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 800241c:	f009 fb44 	bl	800baa8 <HAL_RCC_GetPCLK1Freq>
 8002420:	0043      	lsls	r3, r0, #1
 8002422:	e7e3      	b.n	80023ec <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 8002424:	4620      	mov	r0, r4
 8002426:	f00a fa0d 	bl	800c844 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 800242a:	4606      	mov	r6, r0
 800242c:	2800      	cmp	r0, #0
 800242e:	d1f2      	bne.n	8002416 <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8002430:	2036      	movs	r0, #54	; 0x36
 8002432:	f006 fed7 	bl	80091e4 <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002436:	2d0f      	cmp	r5, #15
 8002438:	d901      	bls.n	800243e <HAL_InitTick+0x82>
        status = HAL_ERROR;
 800243a:	2601      	movs	r6, #1
 800243c:	e7eb      	b.n	8002416 <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 800243e:	4632      	mov	r2, r6
 8002440:	4629      	mov	r1, r5
 8002442:	2036      	movs	r0, #54	; 0x36
 8002444:	f006 fe90 	bl	8009168 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8002448:	4b05      	ldr	r3, [pc, #20]	; (8002460 <HAL_InitTick+0xa4>)
 800244a:	601d      	str	r5, [r3, #0]
 800244c:	e7e3      	b.n	8002416 <HAL_InitTick+0x5a>
 800244e:	bf00      	nop
 8002450:	40023800 	.word	0x40023800
 8002454:	431bde83 	.word	0x431bde83
 8002458:	20001ff8 	.word	0x20001ff8
 800245c:	40001000 	.word	0x40001000
 8002460:	20000080 	.word	0x20000080

08002464 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8002464:	4770      	bx	lr
 8002466:	bf00      	nop

08002468 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002468:	e7fe      	b.n	8002468 <HardFault_Handler>
 800246a:	bf00      	nop

0800246c <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800246c:	e7fe      	b.n	800246c <MemManage_Handler>
 800246e:	bf00      	nop

08002470 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002470:	e7fe      	b.n	8002470 <BusFault_Handler>
 8002472:	bf00      	nop

08002474 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002474:	e7fe      	b.n	8002474 <UsageFault_Handler>
 8002476:	bf00      	nop

08002478 <DebugMon_Handler>:
 8002478:	4770      	bx	lr
 800247a:	bf00      	nop

0800247c <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 800247c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 800247e:	20c8      	movs	r0, #200	; 0xc8
 8002480:	f006 fe4e 	bl	8009120 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8002484:	4804      	ldr	r0, [pc, #16]	; (8002498 <EXTI3_IRQHandler+0x1c>)
 8002486:	2200      	movs	r2, #0
 8002488:	2120      	movs	r1, #32
 800248a:	f007 fa19 	bl	80098c0 <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 800248e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 8002492:	2008      	movs	r0, #8
 8002494:	f007 ba24 	b.w	80098e0 <HAL_GPIO_EXTI_IRQHandler>
 8002498:	40021000 	.word	0x40021000

0800249c <DMA1_Stream1_IRQHandler>:
void DMA1_Stream1_IRQHandler(void)
{
  /* USER CODE BEGIN DMA1_Stream1_IRQn 0 */

  /* USER CODE END DMA1_Stream1_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_tim2_up_ch3);
 800249c:	4801      	ldr	r0, [pc, #4]	; (80024a4 <DMA1_Stream1_IRQHandler+0x8>)
 800249e:	f006 bf6d 	b.w	800937c <HAL_DMA_IRQHandler>
 80024a2:	bf00      	nop
 80024a4:	20001928 	.word	0x20001928

080024a8 <TIM2_IRQHandler>:
void TIM2_IRQHandler(void)
{
  /* USER CODE BEGIN TIM2_IRQn 0 */
//  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 80024a8:	4801      	ldr	r0, [pc, #4]	; (80024b0 <TIM2_IRQHandler+0x8>)
 80024aa:	f00a bb4b 	b.w	800cb44 <HAL_TIM_IRQHandler>
 80024ae:	bf00      	nop
 80024b0:	20001b58 	.word	0x20001b58

080024b4 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 80024b4:	4801      	ldr	r0, [pc, #4]	; (80024bc <TIM6_DAC_IRQHandler+0x8>)
 80024b6:	f00a bb45 	b.w	800cb44 <HAL_TIM_IRQHandler>
 80024ba:	bf00      	nop
 80024bc:	20001ff8 	.word	0x20001ff8

080024c0 <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 80024c0:	4801      	ldr	r0, [pc, #4]	; (80024c8 <I2C3_EV_IRQHandler+0x8>)
 80024c2:	f008 b96d 	b.w	800a7a0 <HAL_I2C_EV_IRQHandler>
 80024c6:	bf00      	nop
 80024c8:	20001988 	.word	0x20001988

080024cc <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 80024cc:	4801      	ldr	r0, [pc, #4]	; (80024d4 <LTDC_IRQHandler+0x8>)
 80024ce:	f008 bee1 	b.w	800b294 <HAL_LTDC_IRQHandler>
 80024d2:	bf00      	nop
 80024d4:	200019dc 	.word	0x200019dc

080024d8 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 80024d8:	2001      	movs	r0, #1
 80024da:	4770      	bx	lr

080024dc <_kill>:

int _kill(int pid, int sig)
{
 80024dc:	b508      	push	{r3, lr}
	errno = EINVAL;
 80024de:	f028 f8f7 	bl	802a6d0 <__errno>
 80024e2:	2316      	movs	r3, #22
 80024e4:	6003      	str	r3, [r0, #0]
	return -1;
}
 80024e6:	f04f 30ff 	mov.w	r0, #4294967295
 80024ea:	bd08      	pop	{r3, pc}

080024ec <_exit>:

void _exit (int status)
{
 80024ec:	b508      	push	{r3, lr}
	errno = EINVAL;
 80024ee:	f028 f8ef 	bl	802a6d0 <__errno>
 80024f2:	2316      	movs	r3, #22
 80024f4:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 80024f6:	e7fe      	b.n	80024f6 <_exit+0xa>

080024f8 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80024f8:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80024fa:	1e16      	subs	r6, r2, #0
 80024fc:	dd07      	ble.n	800250e <_read+0x16>
 80024fe:	460c      	mov	r4, r1
 8002500:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 8002502:	f3af 8000 	nop.w
 8002506:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800250a:	42a5      	cmp	r5, r4
 800250c:	d1f9      	bne.n	8002502 <_read+0xa>
	}

return len;
}
 800250e:	4630      	mov	r0, r6
 8002510:	bd70      	pop	{r4, r5, r6, pc}
 8002512:	bf00      	nop

08002514 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002514:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002516:	1e16      	subs	r6, r2, #0
 8002518:	dd07      	ble.n	800252a <_write+0x16>
 800251a:	460c      	mov	r4, r1
 800251c:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 800251e:	f814 0b01 	ldrb.w	r0, [r4], #1
 8002522:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002526:	42ac      	cmp	r4, r5
 8002528:	d1f9      	bne.n	800251e <_write+0xa>
	}
	return len;
}
 800252a:	4630      	mov	r0, r6
 800252c:	bd70      	pop	{r4, r5, r6, pc}
 800252e:	bf00      	nop

08002530 <_close>:

int _close(int file)
{
	return -1;
}
 8002530:	f04f 30ff 	mov.w	r0, #4294967295
 8002534:	4770      	bx	lr
 8002536:	bf00      	nop

08002538 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8002538:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800253c:	604b      	str	r3, [r1, #4]
	return 0;
}
 800253e:	2000      	movs	r0, #0
 8002540:	4770      	bx	lr
 8002542:	bf00      	nop

08002544 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8002544:	2001      	movs	r0, #1
 8002546:	4770      	bx	lr

08002548 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002548:	2000      	movs	r0, #0
 800254a:	4770      	bx	lr

0800254c <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 800254c:	4a0b      	ldr	r2, [pc, #44]	; (800257c <_sbrk+0x30>)
{
 800254e:	b508      	push	{r3, lr}
 8002550:	4603      	mov	r3, r0
	if (heap_end == 0)
 8002552:	6810      	ldr	r0, [r2, #0]
 8002554:	b128      	cbz	r0, 8002562 <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 8002556:	4403      	add	r3, r0
 8002558:	4669      	mov	r1, sp
 800255a:	428b      	cmp	r3, r1
 800255c:	d807      	bhi.n	800256e <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 800255e:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 8002560:	bd08      	pop	{r3, pc}
		heap_end = &end;
 8002562:	4807      	ldr	r0, [pc, #28]	; (8002580 <_sbrk+0x34>)
 8002564:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8002566:	4403      	add	r3, r0
 8002568:	4669      	mov	r1, sp
 800256a:	428b      	cmp	r3, r1
 800256c:	d9f7      	bls.n	800255e <_sbrk+0x12>
		errno = ENOMEM;
 800256e:	f028 f8af 	bl	802a6d0 <__errno>
 8002572:	230c      	movs	r3, #12
 8002574:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8002576:	f04f 30ff 	mov.w	r0, #4294967295
}
 800257a:	bd08      	pop	{r3, pc}
 800257c:	20002040 	.word	0x20002040
 8002580:	20013b60 	.word	0x20013b60

08002584 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002584:	4770      	bx	lr

08002586 <_ZN23ApplicationFontProviderD0Ev>:
 8002586:	b510      	push	{r4, lr}
 8002588:	2104      	movs	r1, #4
 800258a:	4604      	mov	r4, r0
 800258c:	f026 ff8f 	bl	80294ae <_ZdlPvj>
 8002590:	4620      	mov	r0, r4
 8002592:	bd10      	pop	{r4, pc}

08002594 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8002594:	b508      	push	{r3, lr}
    switch (typography)
 8002596:	2903      	cmp	r1, #3
 8002598:	d813      	bhi.n	80025c2 <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 800259a:	e8df f001 	tbb	[pc, r1]
 800259e:	0602      	.short	0x0602
 80025a0:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 80025a2:	f005 fe3b 	bl	800821c <_ZN17TypedTextDatabase8getFontsEv>
 80025a6:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 80025a8:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 80025aa:	f005 fe37 	bl	800821c <_ZN17TypedTextDatabase8getFontsEv>
 80025ae:	6840      	ldr	r0, [r0, #4]
 80025b0:	e7fa      	b.n	80025a8 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 80025b2:	f005 fe33 	bl	800821c <_ZN17TypedTextDatabase8getFontsEv>
 80025b6:	6880      	ldr	r0, [r0, #8]
 80025b8:	e7f6      	b.n	80025a8 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 80025ba:	f005 fe2f 	bl	800821c <_ZN17TypedTextDatabase8getFontsEv>
 80025be:	68c0      	ldr	r0, [r0, #12]
 80025c0:	e7f2      	b.n	80025a8 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 80025c2:	2000      	movs	r0, #0
 80025c4:	e7f0      	b.n	80025a8 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

080025c8 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 80025c8:	4800      	ldr	r0, [pc, #0]	; (80025cc <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 80025ca:	4770      	bx	lr
 80025cc:	0802b9c4 	.word	0x0802b9c4

080025d0 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 80025d0:	200d      	movs	r0, #13
 80025d2:	4770      	bx	lr

080025d4 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80025d4:	b513      	push	{r0, r1, r4, lr}
 80025d6:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 80025d8:	b151      	cbz	r1, 80025f0 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80025da:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 80025dc:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 80025de:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80025e2:	aa01      	add	r2, sp, #4
 80025e4:	689c      	ldr	r4, [r3, #8]
 80025e6:	f10d 0303 	add.w	r3, sp, #3
 80025ea:	47a0      	blx	r4
        return glyph;
    }
 80025ec:	b002      	add	sp, #8
 80025ee:	bd10      	pop	{r4, pc}
            return 0;
 80025f0:	4608      	mov	r0, r1
 80025f2:	e7fb      	b.n	80025ec <_ZNK8touchgfx4Font8getGlyphEt+0x18>

080025f4 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 80025f4:	89c0      	ldrh	r0, [r0, #14]
 80025f6:	4770      	bx	lr

080025f8 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 80025f8:	8a00      	ldrh	r0, [r0, #16]
 80025fa:	4770      	bx	lr

080025fc <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 80025fc:	88c0      	ldrh	r0, [r0, #6]
 80025fe:	4770      	bx	lr

08002600 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002600:	8880      	ldrh	r0, [r0, #4]
 8002602:	4770      	bx	lr

08002604 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002604:	7a80      	ldrb	r0, [r0, #10]
    }
 8002606:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 800260a:	4770      	bx	lr

0800260c <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 800260c:	7a80      	ldrb	r0, [r0, #10]
    }
 800260e:	09c0      	lsrs	r0, r0, #7
 8002610:	4770      	bx	lr

08002612 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002612:	4770      	bx	lr

08002614 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002614:	4770      	bx	lr

08002616 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002616:	4770      	bx	lr

08002618 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002618:	4770      	bx	lr

0800261a <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 800261a:	4770      	bx	lr

0800261c <_ZN8touchgfx9TypedTextD1Ev>:
    }
 800261c:	4770      	bx	lr

0800261e <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 800261e:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002620:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 8002622:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8002624:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002626:	466d      	mov	r5, sp
 8002628:	4601      	mov	r1, r0
 800262a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 800262e:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002630:	4628      	mov	r0, r5
 8002632:	4798      	blx	r3
 8002634:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002638:	343c      	adds	r4, #60	; 0x3c
 800263a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 800263e:	b005      	add	sp, #20
 8002640:	bd30      	pop	{r4, r5, pc}

08002642 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8002642:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8002644:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 8002646:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 8002648:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 800264a:	466d      	mov	r5, sp
 800264c:	4601      	mov	r1, r0
 800264e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 8002652:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002654:	4628      	mov	r0, r5
 8002656:	4798      	blx	r3
 8002658:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800265c:	343c      	adds	r4, #60	; 0x3c
 800265e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002662:	b005      	add	sp, #20
 8002664:	bd30      	pop	{r4, r5, pc}

08002666 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 8002666:	2200      	movs	r2, #0
 8002668:	8002      	strh	r2, [r0, #0]
 800266a:	8042      	strh	r2, [r0, #2]
 800266c:	8082      	strh	r2, [r0, #4]
 800266e:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002670:	4770      	bx	lr

08002672 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002672:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 8002676:	4770      	bx	lr

08002678 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002678:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 800267a:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800267c:	4604      	mov	r4, r0
        setX(x);
 800267e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002680:	4615      	mov	r5, r2
        setX(x);
 8002682:	4798      	blx	r3
        setBaselineY(baselineY);
 8002684:	6823      	ldr	r3, [r4, #0]
 8002686:	4629      	mov	r1, r5
 8002688:	4620      	mov	r0, r4
 800268a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 800268c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002690:	4718      	bx	r3

08002692 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 8002692:	2000      	movs	r0, #0
 8002694:	4770      	bx	lr

08002696 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 8002696:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8002698:	4770      	bx	lr

0800269a <_ZN19CalibrationViewBase11setupScreenEv>:
}

void CalibrationViewBase::setupScreen()
{

}
 800269a:	4770      	bx	lr

0800269c <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800269c:	4770      	bx	lr

0800269e <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 800269e:	4770      	bx	lr

080026a0 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 80026a0:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 80026a2:	68c2      	ldr	r2, [r0, #12]
 80026a4:	6844      	ldr	r4, [r0, #4]
 80026a6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80026a8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80026aa:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80026ae:	07d2      	lsls	r2, r2, #31
 80026b0:	bf48      	it	mi
 80026b2:	5962      	ldrmi	r2, [r4, r5]
 80026b4:	689b      	ldr	r3, [r3, #8]
    }
 80026b6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80026b8:	bf48      	it	mi
 80026ba:	58d3      	ldrmi	r3, [r2, r3]
 80026bc:	4718      	bx	r3

080026be <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 80026be:	6843      	ldr	r3, [r0, #4]
 80026c0:	b12b      	cbz	r3, 80026ce <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80026c2:	6883      	ldr	r3, [r0, #8]
 80026c4:	b92b      	cbnz	r3, 80026d2 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80026c6:	68c0      	ldr	r0, [r0, #12]
 80026c8:	f000 0001 	and.w	r0, r0, #1
 80026cc:	4770      	bx	lr
 80026ce:	4618      	mov	r0, r3
 80026d0:	4770      	bx	lr
 80026d2:	2001      	movs	r0, #1
    }
 80026d4:	4770      	bx	lr

080026d6 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 80026d6:	b510      	push	{r4, lr}
    }
 80026d8:	2108      	movs	r1, #8
    virtual ~TypedText()
 80026da:	4604      	mov	r4, r0
    }
 80026dc:	f026 fee7 	bl	80294ae <_ZdlPvj>
 80026e0:	4620      	mov	r0, r4
 80026e2:	bd10      	pop	{r4, pc}

080026e4 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 80026e4:	b510      	push	{r4, lr}
 80026e6:	214c      	movs	r1, #76	; 0x4c
 80026e8:	4604      	mov	r4, r0
 80026ea:	f026 fee0 	bl	80294ae <_ZdlPvj>
 80026ee:	4620      	mov	r0, r4
 80026f0:	bd10      	pop	{r4, pc}

080026f2 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80026f2:	b510      	push	{r4, lr}
 80026f4:	2110      	movs	r1, #16
 80026f6:	4604      	mov	r4, r0
 80026f8:	f026 fed9 	bl	80294ae <_ZdlPvj>
 80026fc:	4620      	mov	r0, r4
 80026fe:	bd10      	pop	{r4, pc}

08002700 <_ZN19CalibrationViewBaseD1Ev>:
CalibrationViewBase::~CalibrationViewBase()
 8002700:	b510      	push	{r4, lr}
 8002702:	4b03      	ldr	r3, [pc, #12]	; (8002710 <_ZN19CalibrationViewBaseD1Ev+0x10>)
 8002704:	6003      	str	r3, [r0, #0]
 8002706:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002708:	f011 f958 	bl	80139bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800270c:	4620      	mov	r0, r4
 800270e:	bd10      	pop	{r4, pc}
 8002710:	0802bd30 	.word	0x0802bd30

08002714 <_ZN19CalibrationViewBaseD0Ev>:
CalibrationViewBase::~CalibrationViewBase()
 8002714:	b507      	push	{r0, r1, r2, lr}
 8002716:	4b07      	ldr	r3, [pc, #28]	; (8002734 <_ZN19CalibrationViewBaseD0Ev+0x20>)
 8002718:	6003      	str	r3, [r0, #0]
 800271a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800271c:	f011 f94e 	bl	80139bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002720:	9801      	ldr	r0, [sp, #4]
 8002722:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8002726:	f026 fec2 	bl	80294ae <_ZdlPvj>
 800272a:	9801      	ldr	r0, [sp, #4]
 800272c:	b003      	add	sp, #12
 800272e:	f85d fb04 	ldr.w	pc, [sp], #4
 8002732:	bf00      	nop
 8002734:	0802bd30 	.word	0x0802bd30

08002738 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 8002738:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 800273a:	f7fe fc71 	bl	8001020 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 800273e:	bd08      	pop	{r3, pc}

08002740 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002740:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002742:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002744:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002746:	4b12      	ldr	r3, [pc, #72]	; (8002790 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8002748:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 800274a:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800274c:	b28d      	uxth	r5, r1
 800274e:	b92b      	cbnz	r3, 800275c <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8002750:	4b10      	ldr	r3, [pc, #64]	; (8002794 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8002752:	4a11      	ldr	r2, [pc, #68]	; (8002798 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002754:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002756:	4811      	ldr	r0, [pc, #68]	; (800279c <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8002758:	f027 fcbc 	bl	802a0d4 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800275c:	4910      	ldr	r1, [pc, #64]	; (80027a0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800275e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002760:	8809      	ldrh	r1, [r1, #0]
 8002762:	4291      	cmp	r1, r2
 8002764:	d803      	bhi.n	800276e <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8002766:	4b0f      	ldr	r3, [pc, #60]	; (80027a4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8002768:	4a0b      	ldr	r2, [pc, #44]	; (8002798 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800276a:	216d      	movs	r1, #109	; 0x6d
 800276c:	e7f3      	b.n	8002756 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 800276e:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8002772:	4b0d      	ldr	r3, [pc, #52]	; (80027a8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8002774:	681b      	ldr	r3, [r3, #0]
 8002776:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800277a:	6803      	ldr	r3, [r0, #0]
 800277c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800277e:	4798      	blx	r3
 8002780:	1a28      	subs	r0, r5, r0
 8002782:	b201      	sxth	r1, r0
 8002784:	4633      	mov	r3, r6
 8002786:	4620      	mov	r0, r4
    }
 8002788:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800278c:	4718      	bx	r3
 800278e:	bf00      	nop
 8002790:	20012f7c 	.word	0x20012f7c
 8002794:	0802bac8 	.word	0x0802bac8
 8002798:	0802bb0a 	.word	0x0802bb0a
 800279c:	0802bb45 	.word	0x0802bb45
 80027a0:	20012f80 	.word	0x20012f80
 80027a4:	0802bb8c 	.word	0x0802bb8c
 80027a8:	20012f84 	.word	0x20012f84

080027ac <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void CalibrationViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80027ac:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 80027ae:	f500 7310 	add.w	r3, r0, #576	; 0x240
 80027b2:	4299      	cmp	r1, r3
{
 80027b4:	4604      	mov	r4, r0
 80027b6:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 80027b8:	d103      	bne.n	80027c2 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~CalibrationViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80027ba:	f012 fe01 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 80027be:	f001 f921 	bl	8003a04 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 80027c2:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80027c6:	429d      	cmp	r5, r3
 80027c8:	d103      	bne.n	80027d2 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80027ca:	f012 fdf9 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Calibration_Pad
        //Go to Calibration_Pad with screen transition towards East
        application().gotoCalibration_PadScreenWipeTransitionEast();
 80027ce:	f001 f9d9 	bl	8003b84 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 80027d2:	f504 7422 	add.w	r4, r4, #648	; 0x288
 80027d6:	42a5      	cmp	r5, r4
 80027d8:	d105      	bne.n	80027e6 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 80027da:	f012 fdf1 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Calibration_Hall
        //Go to Calibration_Hall with screen transition towards East
        application().gotoCalibration_HallScreenWipeTransitionEast();
    }
}
 80027de:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoCalibration_HallScreenWipeTransitionEast();
 80027e2:	f001 b9df 	b.w	8003ba4 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>
}
 80027e6:	bd38      	pop	{r3, r4, r5, pc}

080027e8 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 80027e8:	2200      	movs	r2, #0
 80027ea:	f04f 31ff 	mov.w	r1, #4294967295
 80027ee:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 80027f2:	6082      	str	r2, [r0, #8]
    }
 80027f4:	4770      	bx	lr

080027f6 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 80027f6:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 80027f8:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 80027fa:	4604      	mov	r4, r0
        setX(x);
 80027fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 80027fe:	4615      	mov	r5, r2
        setX(x);
 8002800:	4798      	blx	r3
        setY(y);
 8002802:	6823      	ldr	r3, [r4, #0]
 8002804:	4629      	mov	r1, r5
 8002806:	4620      	mov	r0, r4
 8002808:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 800280a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 800280e:	4718      	bx	r3

08002810 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002810:	b570      	push	{r4, r5, r6, lr}
 8002812:	4604      	mov	r4, r0
 8002814:	461d      	mov	r5, r3
 8002816:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 800281a:	f7ff ffec 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800281e:	6823      	ldr	r3, [r4, #0]
 8002820:	4629      	mov	r1, r5
 8002822:	4620      	mov	r0, r4
 8002824:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002826:	4798      	blx	r3
        setHeight(height);
 8002828:	6823      	ldr	r3, [r4, #0]
 800282a:	4631      	mov	r1, r6
 800282c:	4620      	mov	r0, r4
 800282e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002830:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002834:	4718      	bx	r3
	...

08002838 <_ZN8touchgfx6WidgetC1Ev>:
 8002838:	2200      	movs	r2, #0
 800283a:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800283e:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8002842:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8002846:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 800284a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800284e:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8002850:	4a01      	ldr	r2, [pc, #4]	; (8002858 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8002852:	6002      	str	r2, [r0, #0]
 8002854:	4770      	bx	lr
 8002856:	bf00      	nop
 8002858:	0802bc10 	.word	0x0802bc10

0800285c <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 800285c:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800285e:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8002860:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002862:	2100      	movs	r1, #0
 8002864:	f027 fe3b 	bl	802a4de <memset>
 8002868:	4620      	mov	r0, r4
 800286a:	f7ff ffe5 	bl	8002838 <_ZN8touchgfx6WidgetC1Ev>
 800286e:	4b0a      	ldr	r3, [pc, #40]	; (8002898 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8002870:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8002872:	4b0a      	ldr	r3, [pc, #40]	; (800289c <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 8002874:	62a3      	str	r3, [r4, #40]	; 0x28
 8002876:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800287a:	85a3      	strh	r3, [r4, #44]	; 0x2c
 800287c:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002880:	2300      	movs	r3, #0
 8002882:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002886:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 800288a:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800288e:	8723      	strh	r3, [r4, #56]	; 0x38
 8002890:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8002892:	4620      	mov	r0, r4
 8002894:	bd10      	pop	{r4, pc}
 8002896:	bf00      	nop
 8002898:	0802e540 	.word	0x0802e540
 800289c:	0802bc78 	.word	0x0802bc78

080028a0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 80028a0:	4b1a      	ldr	r3, [pc, #104]	; (800290c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 80028a2:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 80028a4:	881b      	ldrh	r3, [r3, #0]
 80028a6:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 80028a8:	428b      	cmp	r3, r1
    void updateTextPosition()
 80028aa:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 80028ac:	d92b      	bls.n	8002906 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80028ae:	4b18      	ldr	r3, [pc, #96]	; (8002910 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 80028b0:	681b      	ldr	r3, [r3, #0]
 80028b2:	b92b      	cbnz	r3, 80028c0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 80028b4:	4b17      	ldr	r3, [pc, #92]	; (8002914 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 80028b6:	4a18      	ldr	r2, [pc, #96]	; (8002918 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 80028b8:	4818      	ldr	r0, [pc, #96]	; (800291c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 80028ba:	216c      	movs	r1, #108	; 0x6c
 80028bc:	f027 fc0a 	bl	802a0d4 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 80028c0:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 80028c4:	4b16      	ldr	r3, [pc, #88]	; (8002920 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 80028c6:	681b      	ldr	r3, [r3, #0]
 80028c8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 80028cc:	4b15      	ldr	r3, [pc, #84]	; (8002924 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 80028ce:	6818      	ldr	r0, [r3, #0]
 80028d0:	f005 fc94 	bl	80081fc <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 80028d4:	682b      	ldr	r3, [r5, #0]
 80028d6:	9001      	str	r0, [sp, #4]
 80028d8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80028da:	4628      	mov	r0, r5
 80028dc:	4798      	blx	r3
 80028de:	682b      	ldr	r3, [r5, #0]
 80028e0:	9901      	ldr	r1, [sp, #4]
 80028e2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80028e4:	4604      	mov	r4, r0
 80028e6:	4628      	mov	r0, r5
 80028e8:	4798      	blx	r3
 80028ea:	682b      	ldr	r3, [r5, #0]
 80028ec:	9901      	ldr	r1, [sp, #4]
 80028ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80028f0:	fb14 f400 	smulbb	r4, r4, r0
 80028f4:	4628      	mov	r0, r5
 80028f6:	4798      	blx	r3
 80028f8:	b2a4      	uxth	r4, r4
 80028fa:	1823      	adds	r3, r4, r0
 80028fc:	b21b      	sxth	r3, r3
 80028fe:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002902:	b002      	add	sp, #8
 8002904:	bd70      	pop	{r4, r5, r6, pc}
 8002906:	2300      	movs	r3, #0
 8002908:	e7f9      	b.n	80028fe <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 800290a:	bf00      	nop
 800290c:	20012f80 	.word	0x20012f80
 8002910:	20012f7c 	.word	0x20012f7c
 8002914:	0802bac8 	.word	0x0802bac8
 8002918:	0802bb0a 	.word	0x0802bb0a
 800291c:	0802bb45 	.word	0x0802bb45
 8002920:	20012f84 	.word	0x20012f84
 8002924:	20012f88 	.word	0x20012f88

08002928 <_ZN19CalibrationViewBaseC1Ev>:
CalibrationViewBase::CalibrationViewBase() :
 8002928:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800292c:	ed2d 8b06 	vpush	{d8-d10}
 8002930:	4604      	mov	r4, r0
 8002932:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &CalibrationViewBase::buttonCallbackHandler)
 8002934:	46a3      	mov	fp, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 8002936:	2500      	movs	r5, #0
 8002938:	f014 f9c2 	bl	8016cc0 <_ZN8touchgfx6ScreenC1Ev>
 800293c:	4b66      	ldr	r3, [pc, #408]	; (8002ad8 <_ZN19CalibrationViewBaseC1Ev+0x1b0>)
 800293e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002940:	f84b 3b40 	str.w	r3, [fp], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8002944:	2226      	movs	r2, #38	; 0x26
 8002946:	4629      	mov	r1, r5
 8002948:	4658      	mov	r0, fp
 800294a:	f027 fdc8 	bl	802a4de <memset>
 800294e:	4658      	mov	r0, fp
 8002950:	f7ff ff72 	bl	8002838 <_ZN8touchgfx6WidgetC1Ev>
 8002954:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8002958:	26ff      	movs	r6, #255	; 0xff
 800295a:	4b60      	ldr	r3, [pc, #384]	; (8002adc <_ZN19CalibrationViewBaseC1Ev+0x1b4>)
 800295c:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 800295e:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002960:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002964:	4629      	mov	r1, r5
 8002966:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800296a:	4650      	mov	r0, sl
        : color(col)
 800296c:	66a5      	str	r5, [r4, #104]	; 0x68
 800296e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002972:	f027 fdb4 	bl	802a4de <memset>
 8002976:	4650      	mov	r0, sl
 8002978:	f7ff ff5e 	bl	8002838 <_ZN8touchgfx6WidgetC1Ev>
 800297c:	4b58      	ldr	r3, [pc, #352]	; (8002ae0 <_ZN19CalibrationViewBaseC1Ev+0x1b8>)
 800297e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8002980:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8002984:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
    {
        Image::setBitmap(bmp);
 8002988:	a90a      	add	r1, sp, #40	; 0x28
 800298a:	4650      	mov	r0, sl
 800298c:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8002990:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8002994:	f010 f80b 	bl	80129ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8002998:	4648      	mov	r0, r9
 800299a:	f7ff ff5f 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 800299e:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 80029a2:	4b50      	ldr	r3, [pc, #320]	; (8002ae4 <_ZN19CalibrationViewBaseC1Ev+0x1bc>)
 80029a4:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80029a8:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80029ac:	4638      	mov	r0, r7
 80029ae:	f00e fec7 	bl	8011740 <_ZN8touchgfx4LineC1Ev>
 80029b2:	f504 73aa 	add.w	r3, r4, #340	; 0x154
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80029b6:	4618      	mov	r0, r3
 80029b8:	9303      	str	r3, [sp, #12]
 80029ba:	f7fe fb45 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80029be:	4b4a      	ldr	r3, [pc, #296]	; (8002ae8 <_ZN19CalibrationViewBaseC1Ev+0x1c0>)
 80029c0:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80029c4:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 80029c8:	3324      	adds	r3, #36	; 0x24
 80029ca:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 80029ce:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 80029d2:	4640      	mov	r0, r8
 80029d4:	f7ff ff42 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 80029d8:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 80029dc:	4618      	mov	r0, r3
 80029de:	ee08 3a10 	vmov	s16, r3
 80029e2:	f7ff ff3b 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 80029e6:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80029ea:	4618      	mov	r0, r3
 80029ec:	ee08 3a90 	vmov	s17, r3
 80029f0:	f7ff ff34 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 80029f4:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80029f8:	4618      	mov	r0, r3
 80029fa:	ee09 3a10 	vmov	s18, r3
 80029fe:	f010 f917 	bl	8012c30 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002a02:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8002a06:	4618      	mov	r0, r3
 8002a08:	ee09 3a90 	vmov	s19, r3
 8002a0c:	f010 f910 	bl	8012c30 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002a10:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8002a14:	4618      	mov	r0, r3
 8002a16:	ee0a 3a10 	vmov	s20, r3
 8002a1a:	f010 f909 	bl	8012c30 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002a1e:	4a33      	ldr	r2, [pc, #204]	; (8002aec <_ZN19CalibrationViewBaseC1Ev+0x1c4>)
 8002a20:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8002a24:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8002a28:	4a31      	ldr	r2, [pc, #196]	; (8002af0 <_ZN19CalibrationViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8002a2a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8002a2e:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8002a32:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8002a36:	f010 ffb7 	bl	80139a8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8002a3a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8002a3e:	462a      	mov	r2, r5
 8002a40:	4658      	mov	r0, fp
 8002a42:	9300      	str	r3, [sp, #0]
 8002a44:	4629      	mov	r1, r5
 8002a46:	23f0      	movs	r3, #240	; 0xf0
 8002a48:	f7ff fee2 	bl	8002810 <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002a4c:	1d26      	adds	r6, r4, #4
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8002a4e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002a52:	66a3      	str	r3, [r4, #104]	; 0x68
 8002a54:	4659      	mov	r1, fp
 8002a56:	4630      	mov	r0, r6
 8002a58:	f00d fa1a 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8002a5c:	462a      	mov	r2, r5
 8002a5e:	4650      	mov	r0, sl
 8002a60:	4629      	mov	r1, r5
 8002a62:	f7ff fec8 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 8002a66:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8002a68:	4650      	mov	r0, sl
 8002a6a:	a90a      	add	r1, sp, #40	; 0x28
 8002a6c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002a70:	f00f ff9d 	bl	80129ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002a74:	4651      	mov	r1, sl
 8002a76:	4630      	mov	r0, r6
 8002a78:	f00d fa0a 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(89, 308);
 8002a7c:	f44f 729a 	mov.w	r2, #308	; 0x134
 8002a80:	2159      	movs	r1, #89	; 0x59
 8002a82:	4648      	mov	r0, r9
 8002a84:	f7ff feb7 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8002a88:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8002a8c:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8002a90:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8002a94:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8002a98:	4650      	mov	r0, sl
 8002a9a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8002a9e:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8002aa2:	4649      	mov	r1, r9
 8002aa4:	4798      	blx	r3
 8002aa6:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8002aaa:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8002aae:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002ab2:	4b10      	ldr	r3, [pc, #64]	; (8002af4 <_ZN19CalibrationViewBaseC1Ev+0x1cc>)
 8002ab4:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I8KB).getText());
 8002ab6:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8002aba:	b92b      	cbnz	r3, 8002ac8 <_ZN19CalibrationViewBaseC1Ev+0x1a0>
 8002abc:	4b0e      	ldr	r3, [pc, #56]	; (8002af8 <_ZN19CalibrationViewBaseC1Ev+0x1d0>)
 8002abe:	4a0f      	ldr	r2, [pc, #60]	; (8002afc <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 8002ac0:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002ac2:	480f      	ldr	r0, [pc, #60]	; (8002b00 <_ZN19CalibrationViewBaseC1Ev+0x1d8>)
 8002ac4:	f027 fb06 	bl	802a0d4 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002ac8:	4b0e      	ldr	r3, [pc, #56]	; (8002b04 <_ZN19CalibrationViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002aca:	881b      	ldrh	r3, [r3, #0]
 8002acc:	2b14      	cmp	r3, #20
 8002ace:	d81d      	bhi.n	8002b0c <_ZN19CalibrationViewBaseC1Ev+0x1e4>
 8002ad0:	4b0d      	ldr	r3, [pc, #52]	; (8002b08 <_ZN19CalibrationViewBaseC1Ev+0x1e0>)
 8002ad2:	4a0a      	ldr	r2, [pc, #40]	; (8002afc <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 8002ad4:	2161      	movs	r1, #97	; 0x61
 8002ad6:	e7f4      	b.n	8002ac2 <_ZN19CalibrationViewBaseC1Ev+0x19a>
 8002ad8:	0802bd30 	.word	0x0802bd30
 8002adc:	0802e5d0 	.word	0x0802e5d0
 8002ae0:	0802e798 	.word	0x0802e798
 8002ae4:	0802bc88 	.word	0x0802bc88
 8002ae8:	0802e304 	.word	0x0802e304
 8002aec:	0802bd18 	.word	0x0802bd18
 8002af0:	080027ad 	.word	0x080027ad
 8002af4:	20012f7c 	.word	0x20012f7c
 8002af8:	0802bac8 	.word	0x0802bac8
 8002afc:	0802bbca 	.word	0x0802bbca
 8002b00:	0802bb45 	.word	0x0802bb45
 8002b04:	20012f80 	.word	0x20012f80
 8002b08:	0802bb8c 	.word	0x0802bb8c
        return texts->getText(typedTextId);
 8002b0c:	4b93      	ldr	r3, [pc, #588]	; (8002d5c <_ZN19CalibrationViewBaseC1Ev+0x434>)
 8002b0e:	2114      	movs	r1, #20
 8002b10:	6818      	ldr	r0, [r3, #0]
 8002b12:	f005 fb73 	bl	80081fc <_ZNK8touchgfx5Texts7getTextEt>
 8002b16:	4a92      	ldr	r2, [pc, #584]	; (8002d60 <_ZN19CalibrationViewBaseC1Ev+0x438>)
 8002b18:	4603      	mov	r3, r0
 8002b1a:	2104      	movs	r1, #4
 8002b1c:	4650      	mov	r0, sl
 8002b1e:	f015 fdbf 	bl	80186a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8002b22:	4648      	mov	r0, r9
        wc1 = value;
 8002b24:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8002b28:	f00f fb46 	bl	80121b8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8002b2c:	4b8d      	ldr	r3, [pc, #564]	; (8002d64 <_ZN19CalibrationViewBaseC1Ev+0x43c>)
 8002b2e:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RBVT));
 8002b30:	a90a      	add	r1, sp, #40	; 0x28
 8002b32:	2315      	movs	r3, #21
 8002b34:	4648      	mov	r0, r9
 8002b36:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002b3a:	f00f fb5d 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002b3e:	4649      	mov	r1, r9
 8002b40:	4630      	mov	r0, r6
 8002b42:	f00d f9a5 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8002b46:	230a      	movs	r3, #10
 8002b48:	9300      	str	r3, [sp, #0]
 8002b4a:	2232      	movs	r2, #50	; 0x32
 8002b4c:	23f0      	movs	r3, #240	; 0xf0
 8002b4e:	4629      	mov	r1, r5
 8002b50:	4638      	mov	r0, r7
 8002b52:	f7ff fe5d 	bl	8002810 <_ZN8touchgfx8Drawable11setPositionEssss>
        canvasPainter = &painter;
 8002b56:	9b03      	ldr	r3, [sp, #12]
 8002b58:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002b5c:	22a0      	movs	r2, #160	; 0xa0
 8002b5e:	4611      	mov	r1, r2
 8002b60:	4638      	mov	r0, r7
 8002b62:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 8002b66:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8002b6a:	f00e feff 	bl	801196c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002b6e:	22a0      	movs	r2, #160	; 0xa0
 8002b70:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8002b74:	4638      	mov	r0, r7
 8002b76:	f00e ff04 	bl	8011982 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 8002b7a:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8002b7e:	2b20      	cmp	r3, #32
 8002b80:	d005      	beq.n	8002b8e <_ZN19CalibrationViewBaseC1Ev+0x266>
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 8002b82:	2320      	movs	r3, #32
 8002b84:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120

        updateCachedShape();
 8002b88:	4638      	mov	r0, r7
 8002b8a:	f00e fdf9 	bl	8011780 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8002b8e:	4638      	mov	r0, r7
 8002b90:	2101      	movs	r1, #1
 8002b92:	f00e ff01 	bl	8011998 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8002b96:	4639      	mov	r1, r7
 8002b98:	4630      	mov	r0, r6
 8002b9a:	ad04      	add	r5, sp, #16
        color = newColor;
 8002b9c:	f04f 37ff 	mov.w	r7, #4294967295
 8002ba0:	f00d f976 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8002ba4:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(70, 60);
 8002ba8:	223c      	movs	r2, #60	; 0x3c
 8002baa:	4640      	mov	r0, r8
 8002bac:	2146      	movs	r1, #70	; 0x46
 8002bae:	f7ff fe22 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8002bb2:	4641      	mov	r1, r8
 8002bb4:	4628      	mov	r0, r5
        color = newColor;
 8002bb6:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8002bba:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8002bbe:	f00f f881 	bl	8011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002bc2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002bc6:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8002bca:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002bce:	f8df 9194 	ldr.w	r9, [pc, #404]	; 8002d64 <_ZN19CalibrationViewBaseC1Ev+0x43c>
 8002bd2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8002bd6:	230d      	movs	r3, #13
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_05WF));
 8002bd8:	a90a      	add	r1, sp, #40	; 0x28
 8002bda:	4640      	mov	r0, r8
 8002bdc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002be0:	f00f fb0a 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002be4:	4641      	mov	r1, r8
 8002be6:	4630      	mov	r0, r6
 8002be8:	f00d f952 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8002bec:	ee18 0a10 	vmov	r0, s16
 8002bf0:	2223      	movs	r2, #35	; 0x23
 8002bf2:	2145      	movs	r1, #69	; 0x45
 8002bf4:	f7ff fdff 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 8002bf8:	ee18 1a10 	vmov	r1, s16
 8002bfc:	4628      	mov	r0, r5
        color = newColor;
 8002bfe:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8002c02:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8002c06:	f00f f85d 	bl	8011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002c0a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002c0e:	ee18 3a10 	vmov	r3, s16
 8002c12:	333c      	adds	r3, #60	; 0x3c
 8002c14:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002c18:	234a      	movs	r3, #74	; 0x4a
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y01G));
 8002c1a:	ee18 0a10 	vmov	r0, s16
 8002c1e:	a90a      	add	r1, sp, #40	; 0x28
 8002c20:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002c24:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8002c28:	f00f fae6 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002c2c:	ee18 1a10 	vmov	r1, s16
 8002c30:	4630      	mov	r0, r6
 8002c32:	f00d f92d 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8002c36:	ee18 0a90 	vmov	r0, s17
 8002c3a:	220c      	movs	r2, #12
 8002c3c:	2136      	movs	r1, #54	; 0x36
 8002c3e:	f7ff fdda 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 8002c42:	ee18 1a90 	vmov	r1, s17
 8002c46:	4628      	mov	r0, r5
        color = newColor;
 8002c48:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8002c4c:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8002c50:	f00f f838 	bl	8011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002c54:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002c58:	ee18 3a90 	vmov	r3, s17
 8002c5c:	333c      	adds	r3, #60	; 0x3c
 8002c5e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002c62:	2349      	movs	r3, #73	; 0x49
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2ABZ));
 8002c64:	ee18 0a90 	vmov	r0, s17
 8002c68:	a90a      	add	r1, sp, #40	; 0x28
 8002c6a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002c6e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8002c72:	f00f fac1 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002c76:	ee18 1a90 	vmov	r1, s17
 8002c7a:	4630      	mov	r0, r6
 8002c7c:	f00d f908 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8002c80:	ee19 0a10 	vmov	r0, s18
 8002c84:	22f0      	movs	r2, #240	; 0xf0
 8002c86:	2121      	movs	r1, #33	; 0x21
 8002c88:	f7ff fdb5 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 8002c8c:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002c90:	aa0a      	add	r2, sp, #40	; 0x28
 8002c92:	f04f 0802 	mov.w	r8, #2
 8002c96:	a909      	add	r1, sp, #36	; 0x24
 8002c98:	ee19 0a10 	vmov	r0, s18
 8002c9c:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002ca0:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8002ca4:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002ca8:	f00f fc8b 	bl	80125c2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8002cac:	2348      	movs	r3, #72	; 0x48
 8002cae:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8002cb2:	3510      	adds	r5, #16
        updateTextPosition();
 8002cb4:	ee19 0a10 	vmov	r0, s18
 8002cb8:	f7ff fdf2 	bl	80028a0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002cbc:	ee19 1a10 	vmov	r1, s18
 8002cc0:	4630      	mov	r0, r6
        colorPressed = col;
 8002cc2:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8002cc6:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8002cca:	f00d f8e1 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8002cce:	ee19 0a90 	vmov	r0, s19
 8002cd2:	22aa      	movs	r2, #170	; 0xaa
 8002cd4:	2121      	movs	r1, #33	; 0x21
 8002cd6:	f7ff fd8e 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002cda:	aa0a      	add	r2, sp, #40	; 0x28
 8002cdc:	a909      	add	r1, sp, #36	; 0x24
 8002cde:	ee19 0a90 	vmov	r0, s19
 8002ce2:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002ce6:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8002cea:	f00f fc6a 	bl	80125c2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002cee:	2347      	movs	r3, #71	; 0x47
 8002cf0:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8002cf4:	ee19 0a90 	vmov	r0, s19
 8002cf8:	f7ff fdd2 	bl	80028a0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002cfc:	ee19 1a90 	vmov	r1, s19
 8002d00:	4630      	mov	r0, r6
        colorPressed = col;
 8002d02:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8002d06:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8002d0a:	f00d f8c1 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8002d0e:	ee1a 0a10 	vmov	r0, s20
 8002d12:	2264      	movs	r2, #100	; 0x64
 8002d14:	2121      	movs	r1, #33	; 0x21
 8002d16:	f7ff fd6e 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002d1a:	aa0a      	add	r2, sp, #40	; 0x28
 8002d1c:	a909      	add	r1, sp, #36	; 0x24
 8002d1e:	ee1a 0a10 	vmov	r0, s20
 8002d22:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002d26:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8002d2a:	f00f fc4a 	bl	80125c2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002d2e:	2346      	movs	r3, #70	; 0x46
        updateTextPosition();
 8002d30:	ee1a 0a10 	vmov	r0, s20
 8002d34:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8002d38:	f7ff fdb2 	bl	80028a0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002d3c:	4630      	mov	r0, r6
        colorPressed = col;
 8002d3e:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8002d42:	ee1a 1a10 	vmov	r1, s20
 8002d46:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8002d4a:	f00d f8a1 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002d4e:	4620      	mov	r0, r4
 8002d50:	b00d      	add	sp, #52	; 0x34
 8002d52:	ecbd 8b06 	vpop	{d8-d10}
 8002d56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002d5a:	bf00      	nop
 8002d5c:	20012f88 	.word	0x20012f88
 8002d60:	0802bc02 	.word	0x0802bc02
 8002d64:	0802bc78 	.word	0x0802bc78

08002d68 <_ZN24Calibration_HallViewBase11setupScreenEv>:
}

void Calibration_HallViewBase::setupScreen()
{

}
 8002d68:	4770      	bx	lr

08002d6a <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002d6a:	4770      	bx	lr

08002d6c <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002d6c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002d6e:	68c2      	ldr	r2, [r0, #12]
 8002d70:	6844      	ldr	r4, [r0, #4]
 8002d72:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002d74:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002d76:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002d7a:	07d2      	lsls	r2, r2, #31
 8002d7c:	bf48      	it	mi
 8002d7e:	5962      	ldrmi	r2, [r4, r5]
 8002d80:	689b      	ldr	r3, [r3, #8]
    }
 8002d82:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002d84:	bf48      	it	mi
 8002d86:	58d3      	ldrmi	r3, [r2, r3]
 8002d88:	4718      	bx	r3

08002d8a <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002d8a:	6843      	ldr	r3, [r0, #4]
 8002d8c:	b12b      	cbz	r3, 8002d9a <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002d8e:	6883      	ldr	r3, [r0, #8]
 8002d90:	b92b      	cbnz	r3, 8002d9e <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002d92:	68c0      	ldr	r0, [r0, #12]
 8002d94:	f000 0001 	and.w	r0, r0, #1
 8002d98:	4770      	bx	lr
 8002d9a:	4618      	mov	r0, r3
 8002d9c:	4770      	bx	lr
 8002d9e:	2001      	movs	r0, #1
    }
 8002da0:	4770      	bx	lr

08002da2 <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002da2:	b510      	push	{r4, lr}
 8002da4:	2110      	movs	r1, #16
 8002da6:	4604      	mov	r4, r0
 8002da8:	f026 fb81 	bl	80294ae <_ZdlPvj>
 8002dac:	4620      	mov	r0, r4
 8002dae:	bd10      	pop	{r4, pc}

08002db0 <_ZN24Calibration_HallViewBaseD1Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 8002db0:	b510      	push	{r4, lr}
 8002db2:	4b03      	ldr	r3, [pc, #12]	; (8002dc0 <_ZN24Calibration_HallViewBaseD1Ev+0x10>)
 8002db4:	6003      	str	r3, [r0, #0]
 8002db6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002db8:	f010 fe00 	bl	80139bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002dbc:	4620      	mov	r0, r4
 8002dbe:	bd10      	pop	{r4, pc}
 8002dc0:	0802bd7c 	.word	0x0802bd7c

08002dc4 <_ZN24Calibration_HallViewBaseD0Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 8002dc4:	b507      	push	{r0, r1, r2, lr}
 8002dc6:	4b07      	ldr	r3, [pc, #28]	; (8002de4 <_ZN24Calibration_HallViewBaseD0Ev+0x20>)
 8002dc8:	6003      	str	r3, [r0, #0]
 8002dca:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002dcc:	f010 fdf6 	bl	80139bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002dd0:	9801      	ldr	r0, [sp, #4]
 8002dd2:	f241 015c 	movw	r1, #4188	; 0x105c
 8002dd6:	f026 fb6a 	bl	80294ae <_ZdlPvj>
 8002dda:	9801      	ldr	r0, [sp, #4]
 8002ddc:	b003      	add	sp, #12
 8002dde:	f85d fb04 	ldr.w	pc, [sp], #4
 8002de2:	bf00      	nop
 8002de4:	0802bd7c 	.word	0x0802bd7c

08002de8 <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Calibration_HallViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8002de8:	3098      	adds	r0, #152	; 0x98
 8002dea:	4288      	cmp	r0, r1
{
 8002dec:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8002dee:	d105      	bne.n	8002dfc <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Calibration_HallViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002df0:	f012 fae6 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Calibration
        //Go to Calibration with screen transition towards West
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}
 8002df4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 8002df8:	f000 beb4 	b.w	8003b64 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 8002dfc:	bd08      	pop	{r3, pc}
	...

08002e00 <_ZN24Calibration_HallViewBaseC1Ev>:
Calibration_HallViewBase::Calibration_HallViewBase() :
 8002e00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002e04:	ed2d 8b02 	vpush	{d8}
 8002e08:	4604      	mov	r4, r0
 8002e0a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Calibration_HallViewBase::buttonCallbackHandler)
 8002e0c:	46a1      	mov	r9, r4
 8002e0e:	2500      	movs	r5, #0
 8002e10:	f013 ff56 	bl	8016cc0 <_ZN8touchgfx6ScreenC1Ev>
 8002e14:	4ba5      	ldr	r3, [pc, #660]	; (80030ac <_ZN24Calibration_HallViewBaseC1Ev+0x2ac>)
 8002e16:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002e18:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8002e1c:	2226      	movs	r2, #38	; 0x26
 8002e1e:	4629      	mov	r1, r5
 8002e20:	4648      	mov	r0, r9
 8002e22:	f027 fb5c 	bl	802a4de <memset>
 8002e26:	4648      	mov	r0, r9
 8002e28:	f7ff fd06 	bl	8002838 <_ZN8touchgfx6WidgetC1Ev>
 8002e2c:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8002e30:	26ff      	movs	r6, #255	; 0xff
 8002e32:	4b9f      	ldr	r3, [pc, #636]	; (80030b0 <_ZN24Calibration_HallViewBaseC1Ev+0x2b0>)
 8002e34:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8002e36:	2226      	movs	r2, #38	; 0x26
 8002e38:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002e3c:	4629      	mov	r1, r5
 8002e3e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8002e42:	4640      	mov	r0, r8
 8002e44:	66a5      	str	r5, [r4, #104]	; 0x68
 8002e46:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002e4a:	f027 fb48 	bl	802a4de <memset>
 8002e4e:	4640      	mov	r0, r8
 8002e50:	f7ff fcf2 	bl	8002838 <_ZN8touchgfx6WidgetC1Ev>
 8002e54:	4b97      	ldr	r3, [pc, #604]	; (80030b4 <_ZN24Calibration_HallViewBaseC1Ev+0x2b4>)
 8002e56:	66e3      	str	r3, [r4, #108]	; 0x6c
 8002e58:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8002e5c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8002e60:	a90a      	add	r1, sp, #40	; 0x28
 8002e62:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8002e66:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8002e68:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8002e6c:	f00f fd9f 	bl	80129ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002e70:	4658      	mov	r0, fp
 8002e72:	f00f fedd 	bl	8012c30 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002e76:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8002e7a:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8002e7e:	4618      	mov	r0, r3
 8002e80:	ee08 3a90 	vmov	s17, r3
 8002e84:	f7ff fcea 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 8002e88:	4638      	mov	r0, r7
 8002e8a:	f00e fc59 	bl	8011740 <_ZN8touchgfx4LineC1Ev>
 8002e8e:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8002e92:	4618      	mov	r0, r3
 8002e94:	9303      	str	r3, [sp, #12]
 8002e96:	f7fe f8d7 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002e9a:	4b87      	ldr	r3, [pc, #540]	; (80030b8 <_ZN24Calibration_HallViewBaseC1Ev+0x2b8>)
 8002e9c:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8002ea0:	3324      	adds	r3, #36	; 0x24
 8002ea2:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8002ea6:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8002eaa:	4618      	mov	r0, r3
 8002eac:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8002eb0:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8002eb4:	ee08 3a10 	vmov	s16, r3
 8002eb8:	f7ff fcd0 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 8002ebc:	4650      	mov	r0, sl
 8002ebe:	f7ff fccd 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002ec2:	4a7e      	ldr	r2, [pc, #504]	; (80030bc <_ZN24Calibration_HallViewBaseC1Ev+0x2bc>)
 8002ec4:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8002ec8:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8002ecc:	4a7c      	ldr	r2, [pc, #496]	; (80030c0 <_ZN24Calibration_HallViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8002ece:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8002ed2:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8002ed6:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8002eda:	f010 fd65 	bl	80139a8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8002ede:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8002ee2:	462a      	mov	r2, r5
 8002ee4:	4648      	mov	r0, r9
 8002ee6:	9300      	str	r3, [sp, #0]
 8002ee8:	4629      	mov	r1, r5
 8002eea:	23f0      	movs	r3, #240	; 0xf0
 8002eec:	f7ff fc90 	bl	8002810 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002ef0:	1d26      	adds	r6, r4, #4
        color = newColor;
 8002ef2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002ef6:	66a3      	str	r3, [r4, #104]	; 0x68
 8002ef8:	4649      	mov	r1, r9
 8002efa:	4630      	mov	r0, r6
 8002efc:	f00c ffc8 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8002f00:	462a      	mov	r2, r5
 8002f02:	4640      	mov	r0, r8
 8002f04:	4629      	mov	r1, r5
 8002f06:	f7ff fc76 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 8002f0a:	f04f 0909 	mov.w	r9, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8002f0e:	4640      	mov	r0, r8
 8002f10:	a90a      	add	r1, sp, #40	; 0x28
 8002f12:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8002f16:	f00f fd4a 	bl	80129ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002f1a:	4641      	mov	r1, r8
 8002f1c:	4630      	mov	r0, r6
 8002f1e:	f00c ffb7 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8002f22:	4658      	mov	r0, fp
 8002f24:	f240 1201 	movw	r2, #257	; 0x101
 8002f28:	2121      	movs	r1, #33	; 0x21
 8002f2a:	f7ff fc64 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 8002f2e:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002f30:	aa0a      	add	r2, sp, #40	; 0x28
 8002f32:	a909      	add	r1, sp, #36	; 0x24
 8002f34:	4658      	mov	r0, fp
 8002f36:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8002f3a:	2302      	movs	r3, #2
 8002f3c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002f40:	f00f fb3f 	bl	80125c2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        updateTextPosition();
 8002f44:	4658      	mov	r0, fp
 8002f46:	f8a4 90d0 	strh.w	r9, [r4, #208]	; 0xd0
 8002f4a:	f7ff fca9 	bl	80028a0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8002f4e:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8002f52:	330c      	adds	r3, #12
        color = col;
 8002f54:	f04f 39ff 	mov.w	r9, #4294967295
 8002f58:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8002f5c:	4659      	mov	r1, fp
 8002f5e:	4630      	mov	r0, r6
        colorPressed = col;
 8002f60:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8002f64:	f00c ff94 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002f68:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(32, 60);
 8002f6c:	223c      	movs	r2, #60	; 0x3c
 8002f6e:	ee18 0a90 	vmov	r0, s17
 8002f72:	2120      	movs	r1, #32
 8002f74:	f7ff fc3f 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 8002f78:	ee18 1a90 	vmov	r1, s17
 8002f7c:	4640      	mov	r0, r8
        color = newColor;
 8002f7e:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8002f82:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8002f86:	f00e fe9d 	bl	8011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002f8a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002f8e:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8002f92:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8002f96:	f8df b12c 	ldr.w	fp, [pc, #300]	; 80030c4 <_ZN24Calibration_HallViewBaseC1Ev+0x2c4>
 8002f9a:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8002f9e:	230a      	movs	r3, #10
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AQKY));
 8002fa0:	ee18 0a90 	vmov	r0, s17
 8002fa4:	a90a      	add	r1, sp, #40	; 0x28
 8002fa6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002faa:	f00f f925 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002fae:	ee18 1a90 	vmov	r1, s17
 8002fb2:	4630      	mov	r0, r6
 8002fb4:	f00c ff6c 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8002fb8:	230a      	movs	r3, #10
 8002fba:	9300      	str	r3, [sp, #0]
 8002fbc:	2232      	movs	r2, #50	; 0x32
 8002fbe:	23f0      	movs	r3, #240	; 0xf0
 8002fc0:	4629      	mov	r1, r5
 8002fc2:	4638      	mov	r0, r7
 8002fc4:	f7ff fc24 	bl	8002810 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002fc8:	9b03      	ldr	r3, [sp, #12]
 8002fca:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002fce:	22a0      	movs	r2, #160	; 0xa0
 8002fd0:	4611      	mov	r1, r2
 8002fd2:	4638      	mov	r0, r7
 8002fd4:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8002fd8:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8002fdc:	f00e fcc6 	bl	801196c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002fe0:	22a0      	movs	r2, #160	; 0xa0
 8002fe2:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8002fe6:	4638      	mov	r0, r7
 8002fe8:	f00e fccb 	bl	8011982 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8002fec:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8002ff0:	2b20      	cmp	r3, #32
 8002ff2:	d005      	beq.n	8003000 <_ZN24Calibration_HallViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 8002ff4:	2320      	movs	r3, #32
 8002ff6:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8002ffa:	4638      	mov	r0, r7
 8002ffc:	f00e fbc0 	bl	8011780 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003000:	4638      	mov	r0, r7
 8003002:	2101      	movs	r1, #1
 8003004:	f00e fcc8 	bl	8011998 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8003008:	4639      	mov	r1, r7
 800300a:	4630      	mov	r0, r6
 800300c:	f00c ff40 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8003010:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8003014:	ee18 0a10 	vmov	r0, s16
 8003018:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 800301a:	2500      	movs	r5, #0
 800301c:	2145      	movs	r1, #69	; 0x45
 800301e:	f7ff fbea 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8003022:	ee18 1a10 	vmov	r1, s16
 8003026:	4640      	mov	r0, r8
        color = newColor;
 8003028:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 800302c:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8003030:	f00e fe48 	bl	8011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003034:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003038:	ee18 3a10 	vmov	r3, s16
 800303c:	333c      	adds	r3, #60	; 0x3c
 800303e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003042:	230b      	movs	r3, #11
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4V7Y));
 8003044:	ee18 0a10 	vmov	r0, s16
 8003048:	a90a      	add	r1, sp, #40	; 0x28
 800304a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800304e:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8003052:	f00f f8d1 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003056:	ee18 1a10 	vmov	r1, s16
 800305a:	4630      	mov	r0, r6
 800305c:	f00c ff18 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8003060:	220c      	movs	r2, #12
 8003062:	4650      	mov	r0, sl
 8003064:	2136      	movs	r1, #54	; 0x36
 8003066:	f7ff fbc6 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 800306a:	4651      	mov	r1, sl
 800306c:	4640      	mov	r0, r8
        color = newColor;
 800306e:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 8003072:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8003076:	f00e fe25 	bl	8011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800307a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800307e:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8003082:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003086:	230c      	movs	r3, #12
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TVZ0));
 8003088:	a90a      	add	r1, sp, #40	; 0x28
 800308a:	4650      	mov	r0, sl
 800308c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003090:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8003094:	f00f f8b0 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003098:	4630      	mov	r0, r6
 800309a:	4651      	mov	r1, sl
 800309c:	f00c fef8 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80030a0:	4620      	mov	r0, r4
 80030a2:	b00d      	add	sp, #52	; 0x34
 80030a4:	ecbd 8b02 	vpop	{d8}
 80030a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80030ac:	0802bd7c 	.word	0x0802bd7c
 80030b0:	0802e5d0 	.word	0x0802e5d0
 80030b4:	0802e798 	.word	0x0802e798
 80030b8:	0802e304 	.word	0x0802e304
 80030bc:	0802bd64 	.word	0x0802bd64
 80030c0:	08002de9 	.word	0x08002de9
 80030c4:	0802bc78 	.word	0x0802bc78

080030c8 <_ZN23Calibration_PadViewBase11setupScreenEv>:
}

void Calibration_PadViewBase::setupScreen()
{

}
 80030c8:	4770      	bx	lr

080030ca <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80030ca:	4770      	bx	lr

080030cc <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80030cc:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80030ce:	68c2      	ldr	r2, [r0, #12]
 80030d0:	6844      	ldr	r4, [r0, #4]
 80030d2:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80030d4:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80030d6:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80030da:	07d2      	lsls	r2, r2, #31
 80030dc:	bf48      	it	mi
 80030de:	5962      	ldrmi	r2, [r4, r5]
 80030e0:	689b      	ldr	r3, [r3, #8]
    }
 80030e2:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80030e4:	bf48      	it	mi
 80030e6:	58d3      	ldrmi	r3, [r2, r3]
 80030e8:	4718      	bx	r3

080030ea <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80030ea:	6843      	ldr	r3, [r0, #4]
 80030ec:	b12b      	cbz	r3, 80030fa <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80030ee:	6883      	ldr	r3, [r0, #8]
 80030f0:	b92b      	cbnz	r3, 80030fe <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80030f2:	68c0      	ldr	r0, [r0, #12]
 80030f4:	f000 0001 	and.w	r0, r0, #1
 80030f8:	4770      	bx	lr
 80030fa:	4618      	mov	r0, r3
 80030fc:	4770      	bx	lr
 80030fe:	2001      	movs	r0, #1
    }
 8003100:	4770      	bx	lr

08003102 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003102:	b510      	push	{r4, lr}
 8003104:	2110      	movs	r1, #16
 8003106:	4604      	mov	r4, r0
 8003108:	f026 f9d1 	bl	80294ae <_ZdlPvj>
 800310c:	4620      	mov	r0, r4
 800310e:	bd10      	pop	{r4, pc}

08003110 <_ZN23Calibration_PadViewBaseD1Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8003110:	b510      	push	{r4, lr}
 8003112:	4b03      	ldr	r3, [pc, #12]	; (8003120 <_ZN23Calibration_PadViewBaseD1Ev+0x10>)
 8003114:	6003      	str	r3, [r0, #0]
 8003116:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8003118:	f010 fc50 	bl	80139bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800311c:	4620      	mov	r0, r4
 800311e:	bd10      	pop	{r4, pc}
 8003120:	0802bdc8 	.word	0x0802bdc8

08003124 <_ZN23Calibration_PadViewBaseD0Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8003124:	b507      	push	{r0, r1, r2, lr}
 8003126:	4b07      	ldr	r3, [pc, #28]	; (8003144 <_ZN23Calibration_PadViewBaseD0Ev+0x20>)
 8003128:	6003      	str	r3, [r0, #0]
 800312a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800312c:	f010 fc46 	bl	80139bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8003130:	9801      	ldr	r0, [sp, #4]
 8003132:	f241 015c 	movw	r1, #4188	; 0x105c
 8003136:	f026 f9ba 	bl	80294ae <_ZdlPvj>
 800313a:	9801      	ldr	r0, [sp, #4]
 800313c:	b003      	add	sp, #12
 800313e:	f85d fb04 	ldr.w	pc, [sp], #4
 8003142:	bf00      	nop
 8003144:	0802bdc8 	.word	0x0802bdc8

08003148 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Calibration_PadViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8003148:	3098      	adds	r0, #152	; 0x98
 800314a:	4288      	cmp	r0, r1
{
 800314c:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800314e:	d105      	bne.n	800315c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Calibration_PadViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003150:	f012 f936 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Calibration
        //Go to Calibration with screen transition towards West
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}
 8003154:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 8003158:	f000 bd04 	b.w	8003b64 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 800315c:	bd08      	pop	{r3, pc}
	...

08003160 <_ZN23Calibration_PadViewBaseC1Ev>:
Calibration_PadViewBase::Calibration_PadViewBase() :
 8003160:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003164:	ed2d 8b02 	vpush	{d8}
 8003168:	4604      	mov	r4, r0
 800316a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Calibration_PadViewBase::buttonCallbackHandler)
 800316c:	46a1      	mov	r9, r4
 800316e:	2500      	movs	r5, #0
 8003170:	f013 fda6 	bl	8016cc0 <_ZN8touchgfx6ScreenC1Ev>
 8003174:	4ba5      	ldr	r3, [pc, #660]	; (800340c <_ZN23Calibration_PadViewBaseC1Ev+0x2ac>)
 8003176:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003178:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 800317c:	2226      	movs	r2, #38	; 0x26
 800317e:	4629      	mov	r1, r5
 8003180:	4648      	mov	r0, r9
 8003182:	f027 f9ac 	bl	802a4de <memset>
 8003186:	4648      	mov	r0, r9
 8003188:	f7ff fb56 	bl	8002838 <_ZN8touchgfx6WidgetC1Ev>
 800318c:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8003190:	26ff      	movs	r6, #255	; 0xff
 8003192:	4b9f      	ldr	r3, [pc, #636]	; (8003410 <_ZN23Calibration_PadViewBaseC1Ev+0x2b0>)
 8003194:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8003196:	2226      	movs	r2, #38	; 0x26
 8003198:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800319c:	4629      	mov	r1, r5
 800319e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80031a2:	4640      	mov	r0, r8
 80031a4:	66a5      	str	r5, [r4, #104]	; 0x68
 80031a6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80031aa:	f027 f998 	bl	802a4de <memset>
 80031ae:	4640      	mov	r0, r8
 80031b0:	f7ff fb42 	bl	8002838 <_ZN8touchgfx6WidgetC1Ev>
 80031b4:	4b97      	ldr	r3, [pc, #604]	; (8003414 <_ZN23Calibration_PadViewBaseC1Ev+0x2b4>)
 80031b6:	66e3      	str	r3, [r4, #108]	; 0x6c
 80031b8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80031bc:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80031c0:	a90a      	add	r1, sp, #40	; 0x28
 80031c2:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 80031c6:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 80031c8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80031cc:	f00f fbef 	bl	80129ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80031d0:	4658      	mov	r0, fp
 80031d2:	f00f fd2d 	bl	8012c30 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80031d6:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 80031da:	f504 7794 	add.w	r7, r4, #296	; 0x128
 80031de:	4618      	mov	r0, r3
 80031e0:	ee08 3a90 	vmov	s17, r3
 80031e4:	f7ff fb3a 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 80031e8:	4638      	mov	r0, r7
 80031ea:	f00e faa9 	bl	8011740 <_ZN8touchgfx4LineC1Ev>
 80031ee:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80031f2:	4618      	mov	r0, r3
 80031f4:	9303      	str	r3, [sp, #12]
 80031f6:	f7fd ff27 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80031fa:	4b87      	ldr	r3, [pc, #540]	; (8003418 <_ZN23Calibration_PadViewBaseC1Ev+0x2b8>)
 80031fc:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8003200:	3324      	adds	r3, #36	; 0x24
 8003202:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8003206:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 800320a:	4618      	mov	r0, r3
 800320c:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8003210:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8003214:	ee08 3a10 	vmov	s16, r3
 8003218:	f7ff fb20 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 800321c:	4650      	mov	r0, sl
 800321e:	f7ff fb1d 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003222:	4a7e      	ldr	r2, [pc, #504]	; (800341c <_ZN23Calibration_PadViewBaseC1Ev+0x2bc>)
 8003224:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8003228:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 800322c:	4a7c      	ldr	r2, [pc, #496]	; (8003420 <_ZN23Calibration_PadViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800322e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8003232:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8003236:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 800323a:	f010 fbb5 	bl	80139a8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800323e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8003242:	462a      	mov	r2, r5
 8003244:	4648      	mov	r0, r9
 8003246:	9300      	str	r3, [sp, #0]
 8003248:	4629      	mov	r1, r5
 800324a:	23f0      	movs	r3, #240	; 0xf0
 800324c:	f7ff fae0 	bl	8002810 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003250:	1d26      	adds	r6, r4, #4
        color = newColor;
 8003252:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003256:	66a3      	str	r3, [r4, #104]	; 0x68
 8003258:	4649      	mov	r1, r9
 800325a:	4630      	mov	r0, r6
 800325c:	f00c fe18 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8003260:	462a      	mov	r2, r5
 8003262:	4640      	mov	r0, r8
 8003264:	4629      	mov	r1, r5
 8003266:	f7ff fac6 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 800326a:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800326c:	4640      	mov	r0, r8
 800326e:	a90a      	add	r1, sp, #40	; 0x28
 8003270:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003274:	f00f fb9b 	bl	80129ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003278:	4641      	mov	r1, r8
 800327a:	4630      	mov	r0, r6
 800327c:	f00c fe08 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8003280:	4658      	mov	r0, fp
 8003282:	f240 1201 	movw	r2, #257	; 0x101
 8003286:	2121      	movs	r1, #33	; 0x21
 8003288:	f7ff fab5 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 800328c:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800328e:	aa0a      	add	r2, sp, #40	; 0x28
 8003290:	a909      	add	r1, sp, #36	; 0x24
 8003292:	4658      	mov	r0, fp
 8003294:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8003298:	2302      	movs	r3, #2
 800329a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800329e:	f00f f990 	bl	80125c2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80032a2:	230f      	movs	r3, #15
        updateTextPosition();
 80032a4:	4658      	mov	r0, fp
 80032a6:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 80032aa:	f7ff faf9 	bl	80028a0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80032ae:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 80032b2:	330c      	adds	r3, #12
        color = col;
 80032b4:	f04f 39ff 	mov.w	r9, #4294967295
 80032b8:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80032bc:	4659      	mov	r1, fp
 80032be:	4630      	mov	r0, r6
        colorPressed = col;
 80032c0:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 80032c4:	f00c fde4 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80032c8:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(58, 60);
 80032cc:	223c      	movs	r2, #60	; 0x3c
 80032ce:	ee18 0a90 	vmov	r0, s17
 80032d2:	213a      	movs	r1, #58	; 0x3a
 80032d4:	f7ff fa8f 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 80032d8:	ee18 1a90 	vmov	r1, s17
 80032dc:	4640      	mov	r0, r8
        color = newColor;
 80032de:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 80032e2:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80032e6:	f00e fced 	bl	8011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80032ea:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80032ee:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 80032f2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80032f6:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8003424 <_ZN23Calibration_PadViewBaseC1Ev+0x2c4>
 80032fa:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80032fe:	230e      	movs	r3, #14
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X786));
 8003300:	ee18 0a90 	vmov	r0, s17
 8003304:	a90a      	add	r1, sp, #40	; 0x28
 8003306:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800330a:	f00e ff75 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800330e:	ee18 1a90 	vmov	r1, s17
 8003312:	4630      	mov	r0, r6
 8003314:	f00c fdbc 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8003318:	230a      	movs	r3, #10
 800331a:	9300      	str	r3, [sp, #0]
 800331c:	2232      	movs	r2, #50	; 0x32
 800331e:	23f0      	movs	r3, #240	; 0xf0
 8003320:	4629      	mov	r1, r5
 8003322:	4638      	mov	r0, r7
 8003324:	f7ff fa74 	bl	8002810 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003328:	9b03      	ldr	r3, [sp, #12]
 800332a:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800332e:	22a0      	movs	r2, #160	; 0xa0
 8003330:	4611      	mov	r1, r2
 8003332:	4638      	mov	r0, r7
 8003334:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8003338:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 800333c:	f00e fb16 	bl	801196c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003340:	22a0      	movs	r2, #160	; 0xa0
 8003342:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8003346:	4638      	mov	r0, r7
 8003348:	f00e fb1b 	bl	8011982 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800334c:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8003350:	2b20      	cmp	r3, #32
 8003352:	d005      	beq.n	8003360 <_ZN23Calibration_PadViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 8003354:	2320      	movs	r3, #32
 8003356:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 800335a:	4638      	mov	r0, r7
 800335c:	f00e fa10 	bl	8011780 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003360:	4638      	mov	r0, r7
 8003362:	2101      	movs	r1, #1
 8003364:	f00e fb18 	bl	8011998 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8003368:	4639      	mov	r1, r7
 800336a:	4630      	mov	r0, r6
 800336c:	f00c fd90 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8003370:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8003374:	ee18 0a10 	vmov	r0, s16
 8003378:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 800337a:	2500      	movs	r5, #0
 800337c:	2145      	movs	r1, #69	; 0x45
 800337e:	f7ff fa3a 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8003382:	ee18 1a10 	vmov	r1, s16
 8003386:	4640      	mov	r0, r8
        color = newColor;
 8003388:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 800338c:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8003390:	f00e fc98 	bl	8011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003394:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003398:	ee18 3a10 	vmov	r3, s16
 800339c:	333c      	adds	r3, #60	; 0x3c
 800339e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80033a2:	2310      	movs	r3, #16
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FJID));
 80033a4:	ee18 0a10 	vmov	r0, s16
 80033a8:	a90a      	add	r1, sp, #40	; 0x28
 80033aa:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80033ae:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80033b2:	f00e ff21 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80033b6:	ee18 1a10 	vmov	r1, s16
 80033ba:	4630      	mov	r0, r6
 80033bc:	f00c fd68 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80033c0:	220c      	movs	r2, #12
 80033c2:	4650      	mov	r0, sl
 80033c4:	2136      	movs	r1, #54	; 0x36
 80033c6:	f7ff fa16 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 80033ca:	4651      	mov	r1, sl
 80033cc:	4640      	mov	r0, r8
        color = newColor;
 80033ce:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 80033d2:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 80033d6:	f00e fc75 	bl	8011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80033da:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80033de:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 80033e2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80033e6:	2311      	movs	r3, #17
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EAAK));
 80033e8:	a90a      	add	r1, sp, #40	; 0x28
 80033ea:	4650      	mov	r0, sl
 80033ec:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80033f0:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80033f4:	f00e ff00 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80033f8:	4630      	mov	r0, r6
 80033fa:	4651      	mov	r1, sl
 80033fc:	f00c fd48 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003400:	4620      	mov	r0, r4
 8003402:	b00d      	add	sp, #52	; 0x34
 8003404:	ecbd 8b02 	vpop	{d8}
 8003408:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800340c:	0802bdc8 	.word	0x0802bdc8
 8003410:	0802e5d0 	.word	0x0802e5d0
 8003414:	0802e798 	.word	0x0802e798
 8003418:	0802e304 	.word	0x0802e304
 800341c:	0802bdb0 	.word	0x0802bdb0
 8003420:	08003149 	.word	0x08003149
 8003424:	0802bc78 	.word	0x0802bc78

08003428 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8003428:	4770      	bx	lr

0800342a <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 800342a:	4770      	bx	lr

0800342c <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 800342c:	f500 7398 	add.w	r3, r0, #304	; 0x130
 8003430:	6808      	ldr	r0, [r1, #0]
 8003432:	6849      	ldr	r1, [r1, #4]
 8003434:	c303      	stmia	r3!, {r0, r1}
    }
 8003436:	4770      	bx	lr

08003438 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8003438:	4770      	bx	lr

0800343a <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 800343a:	4770      	bx	lr

0800343c <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 800343c:	6041      	str	r1, [r0, #4]
    }
 800343e:	4770      	bx	lr

08003440 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 8003440:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003442:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 8003444:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8003448:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 800344c:	8002      	strh	r2, [r0, #0]
 800344e:	8042      	strh	r2, [r0, #2]
 8003450:	8084      	strh	r4, [r0, #4]
 8003452:	80c1      	strh	r1, [r0, #6]
        }
 8003454:	bd10      	pop	{r4, pc}

08003456 <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 8003456:	4770      	bx	lr

08003458 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8003458:	4770      	bx	lr
	...

0800345c <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800345c:	4b06      	ldr	r3, [pc, #24]	; (8003478 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 800345e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003462:	2300      	movs	r3, #0
 8003464:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Main_Menu

void FrontendApplicationBase::gotoMain_MenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMain_MenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003468:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800346c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003470:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMain_MenuScreenNoTransition();
    }
 8003474:	4770      	bx	lr
 8003476:	bf00      	nop
 8003478:	08003819 	.word	0x08003819

0800347c <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 800347c:	2301      	movs	r3, #1
 800347e:	7203      	strb	r3, [r0, #8]
    }
 8003480:	4770      	bx	lr

08003482 <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 8003482:	4770      	bx	lr

08003484 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 8003484:	4770      	bx	lr

08003486 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 8003486:	4770      	bx	lr

08003488 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8003488:	4770      	bx	lr

0800348a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 800348a:	4770      	bx	lr

0800348c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 800348c:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 800348e:	6840      	ldr	r0, [r0, #4]
 8003490:	6803      	ldr	r3, [r0, #0]
 8003492:	3110      	adds	r1, #16
 8003494:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8003496:	4718      	bx	r3

08003498 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 8003498:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 800349a:	6840      	ldr	r0, [r0, #4]
 800349c:	6803      	ldr	r3, [r0, #0]
 800349e:	3110      	adds	r1, #16
 80034a0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80034a2:	4718      	bx	r3

080034a4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 80034a4:	4770      	bx	lr

080034a6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 80034a6:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 80034a8:	6840      	ldr	r0, [r0, #4]
 80034aa:	6803      	ldr	r3, [r0, #0]
 80034ac:	3110      	adds	r1, #16
 80034ae:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80034b0:	4718      	bx	r3

080034b2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 80034b2:	4601      	mov	r1, r0
        screenContainer->add(solid);
 80034b4:	6840      	ldr	r0, [r0, #4]
 80034b6:	6803      	ldr	r3, [r0, #0]
 80034b8:	3110      	adds	r1, #16
 80034ba:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80034bc:	4718      	bx	r3

080034be <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 80034be:	4770      	bx	lr

080034c0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80034c0:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 80034c2:	68c2      	ldr	r2, [r0, #12]
 80034c4:	6841      	ldr	r1, [r0, #4]
 80034c6:	1054      	asrs	r4, r2, #1
    virtual void execute()
 80034c8:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 80034ca:	eb01 0062 	add.w	r0, r1, r2, asr #1
 80034ce:	07d2      	lsls	r2, r2, #31
 80034d0:	bf48      	it	mi
 80034d2:	590a      	ldrmi	r2, [r1, r4]
 80034d4:	689b      	ldr	r3, [r3, #8]
    }
 80034d6:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 80034da:	bf48      	it	mi
 80034dc:	58d3      	ldrmi	r3, [r2, r3]
 80034de:	4718      	bx	r3

080034e0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 80034e0:	6843      	ldr	r3, [r0, #4]
 80034e2:	b12b      	cbz	r3, 80034f0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 80034e4:	6883      	ldr	r3, [r0, #8]
 80034e6:	b92b      	cbnz	r3, 80034f4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 80034e8:	68c0      	ldr	r0, [r0, #12]
 80034ea:	f000 0001 	and.w	r0, r0, #1
 80034ee:	4770      	bx	lr
 80034f0:	4618      	mov	r0, r3
 80034f2:	4770      	bx	lr
 80034f4:	2001      	movs	r0, #1
    }
 80034f6:	4770      	bx	lr

080034f8 <_ZN8touchgfx12NoTransitionD0Ev>:
 80034f8:	b510      	push	{r4, lr}
 80034fa:	210c      	movs	r1, #12
 80034fc:	4604      	mov	r4, r0
 80034fe:	f025 ffd6 	bl	80294ae <_ZdlPvj>
 8003502:	4620      	mov	r0, r4
 8003504:	bd10      	pop	{r4, pc}

08003506 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003506:	b510      	push	{r4, lr}
 8003508:	2110      	movs	r1, #16
 800350a:	4604      	mov	r4, r0
 800350c:	f025 ffcf 	bl	80294ae <_ZdlPvj>
 8003510:	4620      	mov	r0, r4
 8003512:	bd10      	pop	{r4, pc}

08003514 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8003514:	b510      	push	{r4, lr}
 8003516:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800351a:	4604      	mov	r4, r0
 800351c:	f025 ffc7 	bl	80294ae <_ZdlPvj>
 8003520:	4620      	mov	r0, r4
 8003522:	bd10      	pop	{r4, pc}

08003524 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 8003524:	b510      	push	{r4, lr}
 8003526:	2138      	movs	r1, #56	; 0x38
 8003528:	4604      	mov	r4, r0
 800352a:	f025 ffc0 	bl	80294ae <_ZdlPvj>
 800352e:	4620      	mov	r0, r4
 8003530:	bd10      	pop	{r4, pc}

08003532 <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 8003532:	b510      	push	{r4, lr}
 8003534:	2128      	movs	r1, #40	; 0x28
 8003536:	4604      	mov	r4, r0
 8003538:	f025 ffb9 	bl	80294ae <_ZdlPvj>
 800353c:	4620      	mov	r0, r4
 800353e:	bd10      	pop	{r4, pc}

08003540 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 8003540:	b510      	push	{r4, lr}
 8003542:	2138      	movs	r1, #56	; 0x38
 8003544:	4604      	mov	r4, r0
 8003546:	f025 ffb2 	bl	80294ae <_ZdlPvj>
 800354a:	4620      	mov	r0, r4
 800354c:	bd10      	pop	{r4, pc}

0800354e <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 800354e:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8003550:	f011 ff36 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
 8003554:	6803      	ldr	r3, [r0, #0]
    }
 8003556:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 800355a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800355c:	4718      	bx	r3
	...

08003560 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8003560:	b513      	push	{r0, r1, r4, lr}
 8003562:	4604      	mov	r4, r0
        animationCounter++;
 8003564:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 8003566:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8003568:	3001      	adds	r0, #1
 800356a:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 800356c:	4298      	cmp	r0, r3
        animationCounter++;
 800356e:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8003570:	d905      	bls.n	800357e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 8003572:	2301      	movs	r3, #1
 8003574:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8003576:	2300      	movs	r3, #0
 8003578:	72a3      	strb	r3, [r4, #10]
    }
 800357a:	b002      	add	sp, #8
 800357c:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800357e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003582:	2100      	movs	r1, #0
 8003584:	f013 fd4e 	bl	8017024 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8003588:	f010 0201 	ands.w	r2, r0, #1
 800358c:	b283      	uxth	r3, r0
 800358e:	d12a      	bne.n	80035e6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003590:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003592:	4a19      	ldr	r2, [pc, #100]	; (80035f8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 8003594:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 8003598:	89e3      	ldrh	r3, [r4, #14]
 800359a:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 800359c:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 80035a0:	82a0      	strh	r0, [r4, #20]
 80035a2:	2000      	movs	r0, #0
 80035a4:	1ad2      	subs	r2, r2, r3
 80035a6:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 80035aa:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 80035ac:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 80035ae:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 80035b0:	4a12      	ldr	r2, [pc, #72]	; (80035fc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 80035b2:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 80035b6:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 80035b8:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 80035bc:	691b      	ldr	r3, [r3, #16]
 80035be:	f8ad 1000 	strh.w	r1, [sp]
 80035c2:	f8ad 2006 	strh.w	r2, [sp, #6]
 80035c6:	4669      	mov	r1, sp
 80035c8:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 80035ca:	7aa3      	ldrb	r3, [r4, #10]
 80035cc:	2b01      	cmp	r3, #1
 80035ce:	d1d4      	bne.n	800357a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 80035d0:	4b0b      	ldr	r3, [pc, #44]	; (8003600 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 80035d2:	781b      	ldrb	r3, [r3, #0]
 80035d4:	2b00      	cmp	r3, #0
 80035d6:	d0d0      	beq.n	800357a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80035d8:	f011 fef2 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
    }
 80035dc:	b002      	add	sp, #8
 80035de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80035e2:	f011 bef3 	b.w	80153cc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 80035e6:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80035ea:	2800      	cmp	r0, #0
 80035ec:	bfd8      	it	le
 80035ee:	460a      	movle	r2, r1
 80035f0:	4413      	add	r3, r2
 80035f2:	81e3      	strh	r3, [r4, #14]
 80035f4:	e7cd      	b.n	8003592 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 80035f6:	bf00      	nop
 80035f8:	20012f18 	.word	0x20012f18
 80035fc:	20012f1a 	.word	0x20012f1a
 8003600:	20012f22 	.word	0x20012f22

08003604 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8003604:	b510      	push	{r4, lr}
 8003606:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8003608:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 800360c:	b158      	cbz	r0, 8003626 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 800360e:	6803      	ldr	r3, [r0, #0]
 8003610:	68db      	ldr	r3, [r3, #12]
 8003612:	4798      	blx	r3
 8003614:	b138      	cbz	r0, 8003626 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8003616:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 800361a:	6803      	ldr	r3, [r0, #0]
 800361c:	689b      	ldr	r3, [r3, #8]
 800361e:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8003620:	2300      	movs	r3, #0
 8003622:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 8003626:	bd10      	pop	{r4, pc}

08003628 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 8003628:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800362c:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8003630:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003632:	68a8      	ldr	r0, [r5, #8]
 8003634:	6803      	ldr	r3, [r0, #0]
 8003636:	6a1b      	ldr	r3, [r3, #32]
 8003638:	4798      	blx	r3
 800363a:	2897      	cmp	r0, #151	; 0x97
 800363c:	d805      	bhi.n	800364a <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 800363e:	4b46      	ldr	r3, [pc, #280]	; (8003758 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 8003640:	4a46      	ldr	r2, [pc, #280]	; (800375c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8003642:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003644:	4846      	ldr	r0, [pc, #280]	; (8003760 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 8003646:	f026 fd45 	bl	802a0d4 <__assert_func>
 800364a:	6868      	ldr	r0, [r5, #4]
 800364c:	6803      	ldr	r3, [r0, #0]
 800364e:	6a1b      	ldr	r3, [r3, #32]
 8003650:	4798      	blx	r3
 8003652:	280f      	cmp	r0, #15
 8003654:	d803      	bhi.n	800365e <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 8003656:	4b43      	ldr	r3, [pc, #268]	; (8003764 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 8003658:	4a40      	ldr	r2, [pc, #256]	; (800375c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 800365a:	21a4      	movs	r1, #164	; 0xa4
 800365c:	e7f2      	b.n	8003644 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800365e:	68e8      	ldr	r0, [r5, #12]
 8003660:	6803      	ldr	r3, [r0, #0]
 8003662:	6a1b      	ldr	r3, [r3, #32]
 8003664:	4798      	blx	r3
 8003666:	280b      	cmp	r0, #11
 8003668:	d803      	bhi.n	8003672 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 800366a:	4b3f      	ldr	r3, [pc, #252]	; (8003768 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 800366c:	4a3b      	ldr	r2, [pc, #236]	; (800375c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 800366e:	21a5      	movs	r1, #165	; 0xa5
 8003670:	e7e8      	b.n	8003644 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 8003672:	f011 fea5 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003676:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8003770 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 800367a:	3004      	adds	r0, #4
 800367c:	f011 ff06 	bl	801548c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003680:	f8d9 0000 	ldr.w	r0, [r9]
 8003684:	b110      	cbz	r0, 800368c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 8003686:	6803      	ldr	r3, [r0, #0]
 8003688:	68db      	ldr	r3, [r3, #12]
 800368a:	4798      	blx	r3
    if (*currentTrans)
 800368c:	f8d9 0000 	ldr.w	r0, [r9]
 8003690:	b110      	cbz	r0, 8003698 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8003692:	6803      	ldr	r3, [r0, #0]
 8003694:	681b      	ldr	r3, [r3, #0]
 8003696:	4798      	blx	r3
    if (*currentScreen)
 8003698:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8003774 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 800369c:	f8d8 0000 	ldr.w	r0, [r8]
 80036a0:	b110      	cbz	r0, 80036a8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 80036a2:	6803      	ldr	r3, [r0, #0]
 80036a4:	695b      	ldr	r3, [r3, #20]
 80036a6:	4798      	blx	r3
    if (*currentPresenter)
 80036a8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80036ac:	b110      	cbz	r0, 80036b4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 80036ae:	6803      	ldr	r3, [r0, #0]
 80036b0:	685b      	ldr	r3, [r3, #4]
 80036b2:	4798      	blx	r3
    if (*currentScreen)
 80036b4:	f8d8 0000 	ldr.w	r0, [r8]
 80036b8:	b110      	cbz	r0, 80036c0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 80036ba:	6803      	ldr	r3, [r0, #0]
 80036bc:	681b      	ldr	r3, [r3, #0]
 80036be:	4798      	blx	r3
    if (*currentPresenter)
 80036c0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80036c4:	b110      	cbz	r0, 80036cc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 80036c6:	6803      	ldr	r3, [r0, #0]
 80036c8:	689b      	ldr	r3, [r3, #8]
 80036ca:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80036cc:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80036ce:	6803      	ldr	r3, [r0, #0]
 80036d0:	2100      	movs	r1, #0
 80036d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80036d4:	4798      	blx	r3
        : screenContainer(0), done(false)
 80036d6:	f04f 0b00 	mov.w	fp, #0
 80036da:	4b24      	ldr	r3, [pc, #144]	; (800376c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 80036dc:	6003      	str	r3, [r0, #0]
 80036de:	4604      	mov	r4, r0
 80036e0:	f8c0 b004 	str.w	fp, [r0, #4]
 80036e4:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80036e8:	68a8      	ldr	r0, [r5, #8]
 80036ea:	6803      	ldr	r3, [r0, #0]
 80036ec:	4659      	mov	r1, fp
 80036ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80036f0:	4798      	blx	r3
 80036f2:	4606      	mov	r6, r0
 80036f4:	f005 fa4c 	bl	8008b90 <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80036f8:	6868      	ldr	r0, [r5, #4]
 80036fa:	6803      	ldr	r3, [r0, #0]
 80036fc:	4659      	mov	r1, fp
 80036fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003700:	4798      	blx	r3
 8003702:	4631      	mov	r1, r6
 8003704:	4605      	mov	r5, r0
 8003706:	f005 fa1f 	bl	8008b48 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 800370a:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 800370e:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003712:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003716:	b1e5      	cbz	r5, 8003752 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 8003718:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 800371a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800371e:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8003720:	f8c5 a008 	str.w	sl, [r5, #8]
 8003724:	4630      	mov	r0, r6
 8003726:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8003728:	63f5      	str	r5, [r6, #60]	; 0x3c
 800372a:	4798      	blx	r3
    newPresenter->activate();
 800372c:	682b      	ldr	r3, [r5, #0]
 800372e:	4628      	mov	r0, r5
 8003730:	681b      	ldr	r3, [r3, #0]
 8003732:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003734:	4621      	mov	r1, r4
 8003736:	4630      	mov	r0, r6
 8003738:	f013 fc6e 	bl	8017018 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800373c:	6823      	ldr	r3, [r4, #0]
 800373e:	4620      	mov	r0, r4
 8003740:	691b      	ldr	r3, [r3, #16]
 8003742:	4798      	blx	r3
    newTransition->invalidate();
 8003744:	6823      	ldr	r3, [r4, #0]
 8003746:	695b      	ldr	r3, [r3, #20]
 8003748:	4620      	mov	r0, r4
}
 800374a:	b001      	add	sp, #4
 800374c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003750:	4718      	bx	r3
    model->bind(newPresenter);
 8003752:	462b      	mov	r3, r5
 8003754:	e7e1      	b.n	800371a <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 8003756:	bf00      	nop
 8003758:	0802bdf4 	.word	0x0802bdf4
 800375c:	0802be82 	.word	0x0802be82
 8003760:	0802bf90 	.word	0x0802bf90
 8003764:	0802bfd7 	.word	0x0802bfd7
 8003768:	0802c07a 	.word	0x0802c07a
 800376c:	0802d498 	.word	0x0802d498
 8003770:	20012f6c 	.word	0x20012f6c
 8003774:	20012f68 	.word	0x20012f68

08003778 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8003778:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800377a:	4604      	mov	r4, r0
        animationCounter++;
 800377c:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 800377e:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8003780:	3001      	adds	r0, #1
 8003782:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8003784:	4298      	cmp	r0, r3
        animationCounter++;
 8003786:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8003788:	d905      	bls.n	8003796 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 800378a:	2301      	movs	r3, #1
 800378c:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 800378e:	2300      	movs	r3, #0
 8003790:	72a3      	strb	r3, [r4, #10]
    }
 8003792:	b003      	add	sp, #12
 8003794:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003796:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800379a:	2100      	movs	r1, #0
 800379c:	f013 fc42 	bl	8017024 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 80037a0:	f010 0201 	ands.w	r2, r0, #1
 80037a4:	b283      	uxth	r3, r0
 80037a6:	d128      	bne.n	80037fa <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80037a8:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80037aa:	4b18      	ldr	r3, [pc, #96]	; (800380c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 80037ac:	4818      	ldr	r0, [pc, #96]	; (8003810 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80037ae:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 80037b0:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80037b2:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 80037b4:	f9b0 0000 	ldrsh.w	r0, [r0]
 80037b8:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80037bc:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 80037be:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 80037c0:	442b      	add	r3, r5
 80037c2:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80037c4:	b212      	sxth	r2, r2
 80037c6:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 80037ca:	6803      	ldr	r3, [r0, #0]
 80037cc:	8322      	strh	r2, [r4, #24]
 80037ce:	f8ad 2000 	strh.w	r2, [sp]
 80037d2:	2200      	movs	r2, #0
 80037d4:	691b      	ldr	r3, [r3, #16]
 80037d6:	f8ad 2002 	strh.w	r2, [sp, #2]
 80037da:	4669      	mov	r1, sp
 80037dc:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 80037de:	7aa3      	ldrb	r3, [r4, #10]
 80037e0:	2b01      	cmp	r3, #1
 80037e2:	d1d6      	bne.n	8003792 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 80037e4:	4b0b      	ldr	r3, [pc, #44]	; (8003814 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 80037e6:	781b      	ldrb	r3, [r3, #0]
 80037e8:	2b00      	cmp	r3, #0
 80037ea:	d0d2      	beq.n	8003792 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80037ec:	f011 fde8 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
    }
 80037f0:	b003      	add	sp, #12
 80037f2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80037f6:	f011 bde9 	b.w	80153cc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 80037fa:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80037fe:	2800      	cmp	r0, #0
 8003800:	bfd8      	it	le
 8003802:	460a      	movle	r2, r1
 8003804:	4413      	add	r3, r2
 8003806:	81e3      	strh	r3, [r4, #14]
 8003808:	e7cf      	b.n	80037aa <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 800380a:	bf00      	nop
 800380c:	20012f18 	.word	0x20012f18
 8003810:	20012f1a 	.word	0x20012f1a
 8003814:	20012f22 	.word	0x20012f22

08003818 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv>:
{
 8003818:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800381c:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8003820:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003822:	68a8      	ldr	r0, [r5, #8]
 8003824:	6803      	ldr	r3, [r0, #0]
 8003826:	6a1b      	ldr	r3, [r3, #32]
 8003828:	4798      	blx	r3
 800382a:	f241 137b 	movw	r3, #4475	; 0x117b
 800382e:	4298      	cmp	r0, r3
 8003830:	d805      	bhi.n	800383e <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x26>
 8003832:	4b46      	ldr	r3, [pc, #280]	; (800394c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 8003834:	4a46      	ldr	r2, [pc, #280]	; (8003950 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8003836:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003838:	4846      	ldr	r0, [pc, #280]	; (8003954 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x13c>)
 800383a:	f026 fc4b 	bl	802a0d4 <__assert_func>
 800383e:	6868      	ldr	r0, [r5, #4]
 8003840:	6803      	ldr	r3, [r0, #0]
 8003842:	6a1b      	ldr	r3, [r3, #32]
 8003844:	4798      	blx	r3
 8003846:	280f      	cmp	r0, #15
 8003848:	d803      	bhi.n	8003852 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x3a>
 800384a:	4b43      	ldr	r3, [pc, #268]	; (8003958 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x140>)
 800384c:	4a40      	ldr	r2, [pc, #256]	; (8003950 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 800384e:	21a4      	movs	r1, #164	; 0xa4
 8003850:	e7f2      	b.n	8003838 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003852:	68e8      	ldr	r0, [r5, #12]
 8003854:	6803      	ldr	r3, [r0, #0]
 8003856:	6a1b      	ldr	r3, [r3, #32]
 8003858:	4798      	blx	r3
 800385a:	280b      	cmp	r0, #11
 800385c:	d803      	bhi.n	8003866 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x4e>
 800385e:	4b3f      	ldr	r3, [pc, #252]	; (800395c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x144>)
 8003860:	4a3b      	ldr	r2, [pc, #236]	; (8003950 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8003862:	21a5      	movs	r1, #165	; 0xa5
 8003864:	e7e8      	b.n	8003838 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003866:	f011 fdab 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800386a:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8003964 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x14c>
 800386e:	3004      	adds	r0, #4
 8003870:	f011 fe0c 	bl	801548c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003874:	f8d9 0000 	ldr.w	r0, [r9]
 8003878:	b110      	cbz	r0, 8003880 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 800387a:	6803      	ldr	r3, [r0, #0]
 800387c:	68db      	ldr	r3, [r3, #12]
 800387e:	4798      	blx	r3
    if (*currentTrans)
 8003880:	f8d9 0000 	ldr.w	r0, [r9]
 8003884:	b110      	cbz	r0, 800388c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 8003886:	6803      	ldr	r3, [r0, #0]
 8003888:	681b      	ldr	r3, [r3, #0]
 800388a:	4798      	blx	r3
    if (*currentScreen)
 800388c:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8003968 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x150>
 8003890:	f8d8 0000 	ldr.w	r0, [r8]
 8003894:	b110      	cbz	r0, 800389c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003896:	6803      	ldr	r3, [r0, #0]
 8003898:	695b      	ldr	r3, [r3, #20]
 800389a:	4798      	blx	r3
    if (*currentPresenter)
 800389c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80038a0:	b110      	cbz	r0, 80038a8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 80038a2:	6803      	ldr	r3, [r0, #0]
 80038a4:	685b      	ldr	r3, [r3, #4]
 80038a6:	4798      	blx	r3
    if (*currentScreen)
 80038a8:	f8d8 0000 	ldr.w	r0, [r8]
 80038ac:	b110      	cbz	r0, 80038b4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 80038ae:	6803      	ldr	r3, [r0, #0]
 80038b0:	681b      	ldr	r3, [r3, #0]
 80038b2:	4798      	blx	r3
    if (*currentPresenter)
 80038b4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80038b8:	b110      	cbz	r0, 80038c0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80038ba:	6803      	ldr	r3, [r0, #0]
 80038bc:	689b      	ldr	r3, [r3, #8]
 80038be:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80038c0:	68e8      	ldr	r0, [r5, #12]
 80038c2:	6803      	ldr	r3, [r0, #0]
 80038c4:	2100      	movs	r1, #0
 80038c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80038c8:	4798      	blx	r3
 80038ca:	f04f 0b00 	mov.w	fp, #0
 80038ce:	4b24      	ldr	r3, [pc, #144]	; (8003960 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x148>)
 80038d0:	6003      	str	r3, [r0, #0]
 80038d2:	4604      	mov	r4, r0
 80038d4:	f8c0 b004 	str.w	fp, [r0, #4]
 80038d8:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80038dc:	68a8      	ldr	r0, [r5, #8]
 80038de:	6803      	ldr	r3, [r0, #0]
 80038e0:	4659      	mov	r1, fp
 80038e2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80038e4:	4798      	blx	r3
 80038e6:	4606      	mov	r6, r0
 80038e8:	f004 fe0e 	bl	8008508 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80038ec:	6868      	ldr	r0, [r5, #4]
 80038ee:	6803      	ldr	r3, [r0, #0]
 80038f0:	4659      	mov	r1, fp
 80038f2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80038f4:	4798      	blx	r3
 80038f6:	4631      	mov	r1, r6
 80038f8:	4605      	mov	r5, r0
 80038fa:	f004 fddf 	bl	80084bc <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 80038fe:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8003902:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003906:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800390a:	b1e5      	cbz	r5, 8003946 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x12e>
 800390c:	1d2b      	adds	r3, r5, #4
 800390e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003912:	6833      	ldr	r3, [r6, #0]
 8003914:	f8c5 a008 	str.w	sl, [r5, #8]
 8003918:	4630      	mov	r0, r6
 800391a:	68db      	ldr	r3, [r3, #12]
 800391c:	63f5      	str	r5, [r6, #60]	; 0x3c
 800391e:	4798      	blx	r3
    newPresenter->activate();
 8003920:	682b      	ldr	r3, [r5, #0]
 8003922:	4628      	mov	r0, r5
 8003924:	681b      	ldr	r3, [r3, #0]
 8003926:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003928:	4621      	mov	r1, r4
 800392a:	4630      	mov	r0, r6
 800392c:	f013 fb74 	bl	8017018 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003930:	6823      	ldr	r3, [r4, #0]
 8003932:	4620      	mov	r0, r4
 8003934:	691b      	ldr	r3, [r3, #16]
 8003936:	4798      	blx	r3
    newTransition->invalidate();
 8003938:	6823      	ldr	r3, [r4, #0]
 800393a:	695b      	ldr	r3, [r3, #20]
 800393c:	4620      	mov	r0, r4
}
 800393e:	b001      	add	sp, #4
 8003940:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003944:	4718      	bx	r3
    model->bind(newPresenter);
 8003946:	462b      	mov	r3, r5
 8003948:	e7e1      	b.n	800390e <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xf6>
 800394a:	bf00      	nop
 800394c:	0802bdf4 	.word	0x0802bdf4
 8003950:	0802c11d 	.word	0x0802c11d
 8003954:	0802bf90 	.word	0x0802bf90
 8003958:	0802bfd7 	.word	0x0802bfd7
 800395c:	0802c07a 	.word	0x0802c07a
 8003960:	0802d498 	.word	0x0802d498
 8003964:	20012f6c 	.word	0x20012f6c
 8003968:	20012f68 	.word	0x20012f68

0800396c <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800396c:	4b04      	ldr	r3, [pc, #16]	; (8003980 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 800396e:	681b      	ldr	r3, [r3, #0]
 8003970:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8003974:	b10a      	cbz	r2, 800397a <_ZN8touchgfx3HAL3lcdEv+0xe>
 8003976:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003978:	b900      	cbnz	r0, 800397c <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 800397a:	6898      	ldr	r0, [r3, #8]
    }
 800397c:	4770      	bx	lr
 800397e:	bf00      	nop
 8003980:	20012f24 	.word	0x20012f24

08003984 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8003984:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003986:	4604      	mov	r4, r0
 8003988:	4617      	mov	r7, r2
 800398a:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 800398c:	f011 fe4c 	bl	8015628 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8003990:	4b10      	ldr	r3, [pc, #64]	; (80039d4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 8003992:	601c      	str	r4, [r3, #0]
      model(m)
 8003994:	4b10      	ldr	r3, [pc, #64]	; (80039d8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 8003996:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8003998:	4b10      	ldr	r3, [pc, #64]	; (80039dc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 800399a:	2500      	movs	r5, #0
 800399c:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 80039a0:	4b0f      	ldr	r3, [pc, #60]	; (80039e0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 80039a2:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 80039a6:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 80039a8:	6803      	ldr	r3, [r0, #0]
 80039aa:	2101      	movs	r1, #1
 80039ac:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 80039ae:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 80039b2:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 80039b6:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 80039b8:	4628      	mov	r0, r5
 80039ba:	f004 fbe3 	bl	8008184 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 80039be:	f7ff ffd5 	bl	800396c <_ZN8touchgfx3HAL3lcdEv>
 80039c2:	f01b f9f6 	bl	801edb2 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 80039c6:	f7ff ffd1 	bl	800396c <_ZN8touchgfx3HAL3lcdEv>
 80039ca:	f01b fa6d 	bl	801eea8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 80039ce:	4620      	mov	r0, r4
 80039d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80039d2:	bf00      	nop
 80039d4:	20012f78 	.word	0x20012f78
 80039d8:	0802d444 	.word	0x0802d444
 80039dc:	0802d42c 	.word	0x0802d42c
 80039e0:	20012f24 	.word	0x20012f24

080039e4 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80039e4:	4b06      	ldr	r3, [pc, #24]	; (8003a00 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv+0x1c>)
 80039e6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80039ea:	2300      	movs	r3, #0
 80039ec:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80039f0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80039f4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80039f8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80039fc:	4770      	bx	lr
 80039fe:	bf00      	nop
 8003a00:	08003819 	.word	0x08003819

08003a04 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
 8003a04:	4b06      	ldr	r3, [pc, #24]	; (8003a20 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 8003a06:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003a0a:	2300      	movs	r3, #0
 8003a0c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003a10:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003a14:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003a18:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003a1c:	4770      	bx	lr
 8003a1e:	bf00      	nop
 8003a20:	08004029 	.word	0x08004029

08003a24 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 8003a24:	4b06      	ldr	r3, [pc, #24]	; (8003a40 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 8003a26:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003a2a:	2300      	movs	r3, #0
 8003a2c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003a30:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003a34:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003a38:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003a3c:	4770      	bx	lr
 8003a3e:	bf00      	nop
 8003a40:	08004e4d 	.word	0x08004e4d

08003a44 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 8003a44:	4b06      	ldr	r3, [pc, #24]	; (8003a60 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 8003a46:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003a4a:	2300      	movs	r3, #0
 8003a4c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003a50:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003a54:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003a58:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003a5c:	4770      	bx	lr
 8003a5e:	bf00      	nop
 8003a60:	08003ee9 	.word	0x08003ee9

08003a64 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 8003a64:	4b06      	ldr	r3, [pc, #24]	; (8003a80 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 8003a66:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003a6a:	2300      	movs	r3, #0
 8003a6c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003a70:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003a74:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003a78:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003a7c:	4770      	bx	lr
 8003a7e:	bf00      	nop
 8003a80:	08004d0d 	.word	0x08004d0d

08003a84 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 8003a84:	4b06      	ldr	r3, [pc, #24]	; (8003aa0 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 8003a86:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003a8a:	2300      	movs	r3, #0
 8003a8c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003a90:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003a94:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003a98:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003a9c:	4770      	bx	lr
 8003a9e:	bf00      	nop
 8003aa0:	08004bcd 	.word	0x08004bcd

08003aa4 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 8003aa4:	4b06      	ldr	r3, [pc, #24]	; (8003ac0 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 8003aa6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003aaa:	2300      	movs	r3, #0
 8003aac:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003ab0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003ab4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003ab8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003abc:	4770      	bx	lr
 8003abe:	bf00      	nop
 8003ac0:	08004a8d 	.word	0x08004a8d

08003ac4 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 8003ac4:	4b06      	ldr	r3, [pc, #24]	; (8003ae0 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 8003ac6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003aca:	2300      	movs	r3, #0
 8003acc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003ad0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003ad4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003ad8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003adc:	4770      	bx	lr
 8003ade:	bf00      	nop
 8003ae0:	0800494d 	.word	0x0800494d

08003ae4 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 8003ae4:	4b06      	ldr	r3, [pc, #24]	; (8003b00 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 8003ae6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003aea:	2300      	movs	r3, #0
 8003aec:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003af0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003af4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003af8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003afc:	4770      	bx	lr
 8003afe:	bf00      	nop
 8003b00:	08003da9 	.word	0x08003da9

08003b04 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 8003b04:	4b06      	ldr	r3, [pc, #24]	; (8003b20 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 8003b06:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003b0a:	2300      	movs	r3, #0
 8003b0c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003b10:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003b14:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003b18:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003b1c:	4770      	bx	lr
 8003b1e:	bf00      	nop
 8003b20:	0800480d 	.word	0x0800480d

08003b24 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 8003b24:	4b06      	ldr	r3, [pc, #24]	; (8003b40 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 8003b26:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003b2a:	2300      	movs	r3, #0
 8003b2c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003b30:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003b34:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003b38:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003b3c:	4770      	bx	lr
 8003b3e:	bf00      	nop
 8003b40:	080046cd 	.word	0x080046cd

08003b44 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>:
 8003b44:	4b06      	ldr	r3, [pc, #24]	; (8003b60 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv+0x1c>)
 8003b46:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003b4a:	2300      	movs	r3, #0
 8003b4c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003b50:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003b54:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003b58:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003b5c:	4770      	bx	lr
 8003b5e:	bf00      	nop
 8003b60:	0800458d 	.word	0x0800458d

08003b64 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>:
 8003b64:	4b06      	ldr	r3, [pc, #24]	; (8003b80 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv+0x1c>)
 8003b66:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003b6a:	2300      	movs	r3, #0
 8003b6c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003b70:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003b74:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003b78:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003b7c:	4770      	bx	lr
 8003b7e:	bf00      	nop
 8003b80:	08003c69 	.word	0x08003c69

08003b84 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>:
 8003b84:	4b06      	ldr	r3, [pc, #24]	; (8003ba0 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv+0x1c>)
 8003b86:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003b8a:	2300      	movs	r3, #0
 8003b8c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003b90:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003b94:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003b98:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003b9c:	4770      	bx	lr
 8003b9e:	bf00      	nop
 8003ba0:	0800444d 	.word	0x0800444d

08003ba4 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>:
 8003ba4:	4b06      	ldr	r3, [pc, #24]	; (8003bc0 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv+0x1c>)
 8003ba6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003baa:	2300      	movs	r3, #0
 8003bac:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003bb0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003bb4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003bb8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003bbc:	4770      	bx	lr
 8003bbe:	bf00      	nop
 8003bc0:	0800430d 	.word	0x0800430d

08003bc4 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 8003bc4:	4b06      	ldr	r3, [pc, #24]	; (8003be0 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 8003bc6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003bca:	2300      	movs	r3, #0
 8003bcc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003bd0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003bd4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003bd8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003bdc:	4770      	bx	lr
 8003bde:	bf00      	nop
 8003be0:	080041cd 	.word	0x080041cd

08003be4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 8003be4:	4b06      	ldr	r3, [pc, #24]	; (8003c00 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 8003be6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003bea:	2300      	movs	r3, #0
 8003bec:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003bf0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003bf4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003bf8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003bfc:	4770      	bx	lr
 8003bfe:	bf00      	nop
 8003c00:	08003629 	.word	0x08003629

08003c04 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 8003c04:	6803      	ldr	r3, [r0, #0]
 8003c06:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003c08:	4718      	bx	r3
	...

08003c0c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 8003c0c:	4b12      	ldr	r3, [pc, #72]	; (8003c58 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8003c0e:	b513      	push	{r0, r1, r4, lr}
          solid()
 8003c10:	6003      	str	r3, [r0, #0]
 8003c12:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003c16:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8003c18:	4b10      	ldr	r3, [pc, #64]	; (8003c5c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8003c1a:	7241      	strb	r1, [r0, #9]
 8003c1c:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003c1e:	4910      	ldr	r1, [pc, #64]	; (8003c60 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8003c20:	4b10      	ldr	r3, [pc, #64]	; (8003c64 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003c22:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8003c26:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003c2a:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8003c2c:	2200      	movs	r2, #0
 8003c2e:	6042      	str	r2, [r0, #4]
 8003c30:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8003c32:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8003c34:	81c2      	strh	r2, [r0, #14]
          solid()
 8003c36:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8003c3a:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8003c3e:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8003c42:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8003c46:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003c48:	9100      	str	r1, [sp, #0]
 8003c4a:	3010      	adds	r0, #16
 8003c4c:	4611      	mov	r1, r2
 8003c4e:	f7fe fddf 	bl	8002810 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8003c52:	4620      	mov	r0, r4
 8003c54:	b002      	add	sp, #8
 8003c56:	bd10      	pop	{r4, pc}
 8003c58:	0802d4e0 	.word	0x0802d4e0
 8003c5c:	0802d3c4 	.word	0x0802d3c4
 8003c60:	20012f1a 	.word	0x20012f1a
 8003c64:	20012f18 	.word	0x20012f18

08003c68 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv>:
{
 8003c68:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003c6c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003c70:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003c72:	68a0      	ldr	r0, [r4, #8]
 8003c74:	6803      	ldr	r3, [r0, #0]
 8003c76:	6a1b      	ldr	r3, [r3, #32]
 8003c78:	4798      	blx	r3
 8003c7a:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003c7e:	d205      	bcs.n	8003c8c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x24>
 8003c80:	4b42      	ldr	r3, [pc, #264]	; (8003d8c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x124>)
 8003c82:	4a43      	ldr	r2, [pc, #268]	; (8003d90 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8003c84:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003c86:	4843      	ldr	r0, [pc, #268]	; (8003d94 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x12c>)
 8003c88:	f026 fa24 	bl	802a0d4 <__assert_func>
 8003c8c:	6860      	ldr	r0, [r4, #4]
 8003c8e:	6803      	ldr	r3, [r0, #0]
 8003c90:	6a1b      	ldr	r3, [r3, #32]
 8003c92:	4798      	blx	r3
 8003c94:	280f      	cmp	r0, #15
 8003c96:	d803      	bhi.n	8003ca0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x38>
 8003c98:	4b3f      	ldr	r3, [pc, #252]	; (8003d98 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x130>)
 8003c9a:	4a3d      	ldr	r2, [pc, #244]	; (8003d90 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8003c9c:	21a4      	movs	r1, #164	; 0xa4
 8003c9e:	e7f2      	b.n	8003c86 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003ca0:	68e0      	ldr	r0, [r4, #12]
 8003ca2:	6803      	ldr	r3, [r0, #0]
 8003ca4:	6a1b      	ldr	r3, [r3, #32]
 8003ca6:	4798      	blx	r3
 8003ca8:	2837      	cmp	r0, #55	; 0x37
 8003caa:	d803      	bhi.n	8003cb4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x4c>
 8003cac:	4b3b      	ldr	r3, [pc, #236]	; (8003d9c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x134>)
 8003cae:	4a38      	ldr	r2, [pc, #224]	; (8003d90 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8003cb0:	21a5      	movs	r1, #165	; 0xa5
 8003cb2:	e7e8      	b.n	8003c86 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003cb4:	f011 fb84 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003cb8:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003da0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x138>
 8003cbc:	3004      	adds	r0, #4
 8003cbe:	f011 fbe5 	bl	801548c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003cc2:	f8d9 0000 	ldr.w	r0, [r9]
 8003cc6:	b110      	cbz	r0, 8003cce <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003cc8:	6803      	ldr	r3, [r0, #0]
 8003cca:	68db      	ldr	r3, [r3, #12]
 8003ccc:	4798      	blx	r3
    if (*currentTrans)
 8003cce:	f8d9 0000 	ldr.w	r0, [r9]
 8003cd2:	b110      	cbz	r0, 8003cda <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8003cd4:	6803      	ldr	r3, [r0, #0]
 8003cd6:	681b      	ldr	r3, [r3, #0]
 8003cd8:	4798      	blx	r3
    if (*currentScreen)
 8003cda:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003da4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x13c>
 8003cde:	f8d8 0000 	ldr.w	r0, [r8]
 8003ce2:	b110      	cbz	r0, 8003cea <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003ce4:	6803      	ldr	r3, [r0, #0]
 8003ce6:	695b      	ldr	r3, [r3, #20]
 8003ce8:	4798      	blx	r3
    if (*currentPresenter)
 8003cea:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003cee:	b110      	cbz	r0, 8003cf6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003cf0:	6803      	ldr	r3, [r0, #0]
 8003cf2:	685b      	ldr	r3, [r3, #4]
 8003cf4:	4798      	blx	r3
    if (*currentScreen)
 8003cf6:	f8d8 0000 	ldr.w	r0, [r8]
 8003cfa:	b110      	cbz	r0, 8003d02 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003cfc:	6803      	ldr	r3, [r0, #0]
 8003cfe:	681b      	ldr	r3, [r3, #0]
 8003d00:	4798      	blx	r3
    if (*currentPresenter)
 8003d02:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003d06:	b110      	cbz	r0, 8003d0e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003d08:	6803      	ldr	r3, [r0, #0]
 8003d0a:	689b      	ldr	r3, [r3, #8]
 8003d0c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003d0e:	68e0      	ldr	r0, [r4, #12]
 8003d10:	2100      	movs	r1, #0
 8003d12:	f7ff ff77 	bl	8003c04 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003d16:	2114      	movs	r1, #20
 8003d18:	4605      	mov	r5, r0
 8003d1a:	f7ff ff77 	bl	8003c0c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003d1e:	68a0      	ldr	r0, [r4, #8]
 8003d20:	6803      	ldr	r3, [r0, #0]
 8003d22:	2100      	movs	r1, #0
 8003d24:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003d26:	4798      	blx	r3
 8003d28:	4606      	mov	r6, r0
 8003d2a:	f004 fac9 	bl	80082c0 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003d2e:	6860      	ldr	r0, [r4, #4]
 8003d30:	6803      	ldr	r3, [r0, #0]
 8003d32:	2100      	movs	r1, #0
 8003d34:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003d36:	4798      	blx	r3
 8003d38:	4631      	mov	r1, r6
 8003d3a:	4604      	mov	r4, r0
 8003d3c:	f004 fa9a 	bl	8008274 <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 8003d40:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003d44:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003d48:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003d4c:	b1dc      	cbz	r4, 8003d86 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x11e>
 8003d4e:	1d23      	adds	r3, r4, #4
 8003d50:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003d54:	6833      	ldr	r3, [r6, #0]
 8003d56:	f8c4 a008 	str.w	sl, [r4, #8]
 8003d5a:	4630      	mov	r0, r6
 8003d5c:	68db      	ldr	r3, [r3, #12]
 8003d5e:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003d60:	4798      	blx	r3
    newPresenter->activate();
 8003d62:	6823      	ldr	r3, [r4, #0]
 8003d64:	4620      	mov	r0, r4
 8003d66:	681b      	ldr	r3, [r3, #0]
 8003d68:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003d6a:	4629      	mov	r1, r5
 8003d6c:	4630      	mov	r0, r6
 8003d6e:	f013 f953 	bl	8017018 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003d72:	682b      	ldr	r3, [r5, #0]
 8003d74:	4628      	mov	r0, r5
 8003d76:	691b      	ldr	r3, [r3, #16]
 8003d78:	4798      	blx	r3
    newTransition->invalidate();
 8003d7a:	682b      	ldr	r3, [r5, #0]
 8003d7c:	4628      	mov	r0, r5
 8003d7e:	695b      	ldr	r3, [r3, #20]
}
 8003d80:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003d84:	4718      	bx	r3
    model->bind(newPresenter);
 8003d86:	4623      	mov	r3, r4
 8003d88:	e7e2      	b.n	8003d50 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xe8>
 8003d8a:	bf00      	nop
 8003d8c:	0802bdf4 	.word	0x0802bdf4
 8003d90:	0802c225 	.word	0x0802c225
 8003d94:	0802bf90 	.word	0x0802bf90
 8003d98:	0802bfd7 	.word	0x0802bfd7
 8003d9c:	0802c07a 	.word	0x0802c07a
 8003da0:	20012f6c 	.word	0x20012f6c
 8003da4:	20012f68 	.word	0x20012f68

08003da8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 8003da8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003dac:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003db0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003db2:	68a0      	ldr	r0, [r4, #8]
 8003db4:	6803      	ldr	r3, [r0, #0]
 8003db6:	6a1b      	ldr	r3, [r3, #32]
 8003db8:	4798      	blx	r3
 8003dba:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003dbe:	d205      	bcs.n	8003dcc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x24>
 8003dc0:	4b42      	ldr	r3, [pc, #264]	; (8003ecc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 8003dc2:	4a43      	ldr	r2, [pc, #268]	; (8003ed0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8003dc4:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003dc6:	4843      	ldr	r0, [pc, #268]	; (8003ed4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 8003dc8:	f026 f984 	bl	802a0d4 <__assert_func>
 8003dcc:	6860      	ldr	r0, [r4, #4]
 8003dce:	6803      	ldr	r3, [r0, #0]
 8003dd0:	6a1b      	ldr	r3, [r3, #32]
 8003dd2:	4798      	blx	r3
 8003dd4:	280f      	cmp	r0, #15
 8003dd6:	d803      	bhi.n	8003de0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x38>
 8003dd8:	4b3f      	ldr	r3, [pc, #252]	; (8003ed8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 8003dda:	4a3d      	ldr	r2, [pc, #244]	; (8003ed0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8003ddc:	21a4      	movs	r1, #164	; 0xa4
 8003dde:	e7f2      	b.n	8003dc6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003de0:	68e0      	ldr	r0, [r4, #12]
 8003de2:	6803      	ldr	r3, [r0, #0]
 8003de4:	6a1b      	ldr	r3, [r3, #32]
 8003de6:	4798      	blx	r3
 8003de8:	2837      	cmp	r0, #55	; 0x37
 8003dea:	d803      	bhi.n	8003df4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4c>
 8003dec:	4b3b      	ldr	r3, [pc, #236]	; (8003edc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 8003dee:	4a38      	ldr	r2, [pc, #224]	; (8003ed0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8003df0:	21a5      	movs	r1, #165	; 0xa5
 8003df2:	e7e8      	b.n	8003dc6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003df4:	f011 fae4 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003df8:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003ee0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 8003dfc:	3004      	adds	r0, #4
 8003dfe:	f011 fb45 	bl	801548c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003e02:	f8d9 0000 	ldr.w	r0, [r9]
 8003e06:	b110      	cbz	r0, 8003e0e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003e08:	6803      	ldr	r3, [r0, #0]
 8003e0a:	68db      	ldr	r3, [r3, #12]
 8003e0c:	4798      	blx	r3
    if (*currentTrans)
 8003e0e:	f8d9 0000 	ldr.w	r0, [r9]
 8003e12:	b110      	cbz	r0, 8003e1a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8003e14:	6803      	ldr	r3, [r0, #0]
 8003e16:	681b      	ldr	r3, [r3, #0]
 8003e18:	4798      	blx	r3
    if (*currentScreen)
 8003e1a:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003ee4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 8003e1e:	f8d8 0000 	ldr.w	r0, [r8]
 8003e22:	b110      	cbz	r0, 8003e2a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003e24:	6803      	ldr	r3, [r0, #0]
 8003e26:	695b      	ldr	r3, [r3, #20]
 8003e28:	4798      	blx	r3
    if (*currentPresenter)
 8003e2a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003e2e:	b110      	cbz	r0, 8003e36 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003e30:	6803      	ldr	r3, [r0, #0]
 8003e32:	685b      	ldr	r3, [r3, #4]
 8003e34:	4798      	blx	r3
    if (*currentScreen)
 8003e36:	f8d8 0000 	ldr.w	r0, [r8]
 8003e3a:	b110      	cbz	r0, 8003e42 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003e3c:	6803      	ldr	r3, [r0, #0]
 8003e3e:	681b      	ldr	r3, [r3, #0]
 8003e40:	4798      	blx	r3
    if (*currentPresenter)
 8003e42:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003e46:	b110      	cbz	r0, 8003e4e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003e48:	6803      	ldr	r3, [r0, #0]
 8003e4a:	689b      	ldr	r3, [r3, #8]
 8003e4c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003e4e:	68e0      	ldr	r0, [r4, #12]
 8003e50:	2100      	movs	r1, #0
 8003e52:	f7ff fed7 	bl	8003c04 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003e56:	2114      	movs	r1, #20
 8003e58:	4605      	mov	r5, r0
 8003e5a:	f7ff fed7 	bl	8003c0c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003e5e:	68a0      	ldr	r0, [r4, #8]
 8003e60:	6803      	ldr	r3, [r0, #0]
 8003e62:	2100      	movs	r1, #0
 8003e64:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003e66:	4798      	blx	r3
 8003e68:	4606      	mov	r6, r0
 8003e6a:	f004 fc0d 	bl	8008688 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003e6e:	6860      	ldr	r0, [r4, #4]
 8003e70:	6803      	ldr	r3, [r0, #0]
 8003e72:	2100      	movs	r1, #0
 8003e74:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003e76:	4798      	blx	r3
 8003e78:	4631      	mov	r1, r6
 8003e7a:	4604      	mov	r4, r0
 8003e7c:	f004 fbde 	bl	800863c <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8003e80:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003e84:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003e88:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003e8c:	b1dc      	cbz	r4, 8003ec6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x11e>
 8003e8e:	1d23      	adds	r3, r4, #4
 8003e90:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003e94:	6833      	ldr	r3, [r6, #0]
 8003e96:	f8c4 a008 	str.w	sl, [r4, #8]
 8003e9a:	4630      	mov	r0, r6
 8003e9c:	68db      	ldr	r3, [r3, #12]
 8003e9e:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003ea0:	4798      	blx	r3
    newPresenter->activate();
 8003ea2:	6823      	ldr	r3, [r4, #0]
 8003ea4:	4620      	mov	r0, r4
 8003ea6:	681b      	ldr	r3, [r3, #0]
 8003ea8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003eaa:	4629      	mov	r1, r5
 8003eac:	4630      	mov	r0, r6
 8003eae:	f013 f8b3 	bl	8017018 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003eb2:	682b      	ldr	r3, [r5, #0]
 8003eb4:	4628      	mov	r0, r5
 8003eb6:	691b      	ldr	r3, [r3, #16]
 8003eb8:	4798      	blx	r3
    newTransition->invalidate();
 8003eba:	682b      	ldr	r3, [r5, #0]
 8003ebc:	4628      	mov	r0, r5
 8003ebe:	695b      	ldr	r3, [r3, #20]
}
 8003ec0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003ec4:	4718      	bx	r3
    model->bind(newPresenter);
 8003ec6:	4623      	mov	r3, r4
 8003ec8:	e7e2      	b.n	8003e90 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xe8>
 8003eca:	bf00      	nop
 8003ecc:	0802bdf4 	.word	0x0802bdf4
 8003ed0:	0802c343 	.word	0x0802c343
 8003ed4:	0802bf90 	.word	0x0802bf90
 8003ed8:	0802bfd7 	.word	0x0802bfd7
 8003edc:	0802c07a 	.word	0x0802c07a
 8003ee0:	20012f6c 	.word	0x20012f6c
 8003ee4:	20012f68 	.word	0x20012f68

08003ee8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 8003ee8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003eec:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003ef0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003ef2:	68a0      	ldr	r0, [r4, #8]
 8003ef4:	6803      	ldr	r3, [r0, #0]
 8003ef6:	6a1b      	ldr	r3, [r3, #32]
 8003ef8:	4798      	blx	r3
 8003efa:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003efe:	d205      	bcs.n	8003f0c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x24>
 8003f00:	4b42      	ldr	r3, [pc, #264]	; (800400c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 8003f02:	4a43      	ldr	r2, [pc, #268]	; (8004010 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8003f04:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003f06:	4843      	ldr	r0, [pc, #268]	; (8004014 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 8003f08:	f026 f8e4 	bl	802a0d4 <__assert_func>
 8003f0c:	6860      	ldr	r0, [r4, #4]
 8003f0e:	6803      	ldr	r3, [r0, #0]
 8003f10:	6a1b      	ldr	r3, [r3, #32]
 8003f12:	4798      	blx	r3
 8003f14:	280f      	cmp	r0, #15
 8003f16:	d803      	bhi.n	8003f20 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x38>
 8003f18:	4b3f      	ldr	r3, [pc, #252]	; (8004018 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 8003f1a:	4a3d      	ldr	r2, [pc, #244]	; (8004010 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8003f1c:	21a4      	movs	r1, #164	; 0xa4
 8003f1e:	e7f2      	b.n	8003f06 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003f20:	68e0      	ldr	r0, [r4, #12]
 8003f22:	6803      	ldr	r3, [r0, #0]
 8003f24:	6a1b      	ldr	r3, [r3, #32]
 8003f26:	4798      	blx	r3
 8003f28:	2837      	cmp	r0, #55	; 0x37
 8003f2a:	d803      	bhi.n	8003f34 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4c>
 8003f2c:	4b3b      	ldr	r3, [pc, #236]	; (800401c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 8003f2e:	4a38      	ldr	r2, [pc, #224]	; (8004010 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8003f30:	21a5      	movs	r1, #165	; 0xa5
 8003f32:	e7e8      	b.n	8003f06 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003f34:	f011 fa44 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003f38:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004020 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 8003f3c:	3004      	adds	r0, #4
 8003f3e:	f011 faa5 	bl	801548c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003f42:	f8d9 0000 	ldr.w	r0, [r9]
 8003f46:	b110      	cbz	r0, 8003f4e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003f48:	6803      	ldr	r3, [r0, #0]
 8003f4a:	68db      	ldr	r3, [r3, #12]
 8003f4c:	4798      	blx	r3
    if (*currentTrans)
 8003f4e:	f8d9 0000 	ldr.w	r0, [r9]
 8003f52:	b110      	cbz	r0, 8003f5a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8003f54:	6803      	ldr	r3, [r0, #0]
 8003f56:	681b      	ldr	r3, [r3, #0]
 8003f58:	4798      	blx	r3
    if (*currentScreen)
 8003f5a:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004024 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 8003f5e:	f8d8 0000 	ldr.w	r0, [r8]
 8003f62:	b110      	cbz	r0, 8003f6a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003f64:	6803      	ldr	r3, [r0, #0]
 8003f66:	695b      	ldr	r3, [r3, #20]
 8003f68:	4798      	blx	r3
    if (*currentPresenter)
 8003f6a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003f6e:	b110      	cbz	r0, 8003f76 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003f70:	6803      	ldr	r3, [r0, #0]
 8003f72:	685b      	ldr	r3, [r3, #4]
 8003f74:	4798      	blx	r3
    if (*currentScreen)
 8003f76:	f8d8 0000 	ldr.w	r0, [r8]
 8003f7a:	b110      	cbz	r0, 8003f82 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003f7c:	6803      	ldr	r3, [r0, #0]
 8003f7e:	681b      	ldr	r3, [r3, #0]
 8003f80:	4798      	blx	r3
    if (*currentPresenter)
 8003f82:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003f86:	b110      	cbz	r0, 8003f8e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003f88:	6803      	ldr	r3, [r0, #0]
 8003f8a:	689b      	ldr	r3, [r3, #8]
 8003f8c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003f8e:	68e0      	ldr	r0, [r4, #12]
 8003f90:	2100      	movs	r1, #0
 8003f92:	f7ff fe37 	bl	8003c04 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003f96:	2114      	movs	r1, #20
 8003f98:	4605      	mov	r5, r0
 8003f9a:	f7ff fe37 	bl	8003c0c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003f9e:	68a0      	ldr	r0, [r4, #8]
 8003fa0:	6803      	ldr	r3, [r0, #0]
 8003fa2:	2100      	movs	r1, #0
 8003fa4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003fa6:	4798      	blx	r3
 8003fa8:	4606      	mov	r6, r0
 8003faa:	f004 fb0d 	bl	80085c8 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003fae:	6860      	ldr	r0, [r4, #4]
 8003fb0:	6803      	ldr	r3, [r0, #0]
 8003fb2:	2100      	movs	r1, #0
 8003fb4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003fb6:	4798      	blx	r3
 8003fb8:	4631      	mov	r1, r6
 8003fba:	4604      	mov	r4, r0
 8003fbc:	f004 fade 	bl	800857c <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8003fc0:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003fc4:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003fc8:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003fcc:	b1dc      	cbz	r4, 8004006 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x11e>
 8003fce:	1d23      	adds	r3, r4, #4
 8003fd0:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003fd4:	6833      	ldr	r3, [r6, #0]
 8003fd6:	f8c4 a008 	str.w	sl, [r4, #8]
 8003fda:	4630      	mov	r0, r6
 8003fdc:	68db      	ldr	r3, [r3, #12]
 8003fde:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003fe0:	4798      	blx	r3
    newPresenter->activate();
 8003fe2:	6823      	ldr	r3, [r4, #0]
 8003fe4:	4620      	mov	r0, r4
 8003fe6:	681b      	ldr	r3, [r3, #0]
 8003fe8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003fea:	4629      	mov	r1, r5
 8003fec:	4630      	mov	r0, r6
 8003fee:	f013 f813 	bl	8017018 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003ff2:	682b      	ldr	r3, [r5, #0]
 8003ff4:	4628      	mov	r0, r5
 8003ff6:	691b      	ldr	r3, [r3, #16]
 8003ff8:	4798      	blx	r3
    newTransition->invalidate();
 8003ffa:	682b      	ldr	r3, [r5, #0]
 8003ffc:	4628      	mov	r0, r5
 8003ffe:	695b      	ldr	r3, [r3, #20]
}
 8004000:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004004:	4718      	bx	r3
    model->bind(newPresenter);
 8004006:	4623      	mov	r3, r4
 8004008:	e7e2      	b.n	8003fd0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xe8>
 800400a:	bf00      	nop
 800400c:	0802bdf4 	.word	0x0802bdf4
 8004010:	0802c473 	.word	0x0802c473
 8004014:	0802bf90 	.word	0x0802bf90
 8004018:	0802bfd7 	.word	0x0802bfd7
 800401c:	0802c07a 	.word	0x0802c07a
 8004020:	20012f6c 	.word	0x20012f6c
 8004024:	20012f68 	.word	0x20012f68

08004028 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 8004028:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800402c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004030:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004032:	68a0      	ldr	r0, [r4, #8]
 8004034:	6803      	ldr	r3, [r0, #0]
 8004036:	6a1b      	ldr	r3, [r3, #32]
 8004038:	4798      	blx	r3
 800403a:	f241 137b 	movw	r3, #4475	; 0x117b
 800403e:	4298      	cmp	r0, r3
 8004040:	d805      	bhi.n	800404e <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x26>
 8004042:	4b42      	ldr	r3, [pc, #264]	; (800414c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 8004044:	4a42      	ldr	r2, [pc, #264]	; (8004150 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004046:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004048:	4842      	ldr	r0, [pc, #264]	; (8004154 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 800404a:	f026 f843 	bl	802a0d4 <__assert_func>
 800404e:	6860      	ldr	r0, [r4, #4]
 8004050:	6803      	ldr	r3, [r0, #0]
 8004052:	6a1b      	ldr	r3, [r3, #32]
 8004054:	4798      	blx	r3
 8004056:	280f      	cmp	r0, #15
 8004058:	d803      	bhi.n	8004062 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x3a>
 800405a:	4b3f      	ldr	r3, [pc, #252]	; (8004158 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 800405c:	4a3c      	ldr	r2, [pc, #240]	; (8004150 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 800405e:	21a4      	movs	r1, #164	; 0xa4
 8004060:	e7f2      	b.n	8004048 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004062:	68e0      	ldr	r0, [r4, #12]
 8004064:	6803      	ldr	r3, [r0, #0]
 8004066:	6a1b      	ldr	r3, [r3, #32]
 8004068:	4798      	blx	r3
 800406a:	2837      	cmp	r0, #55	; 0x37
 800406c:	d803      	bhi.n	8004076 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4e>
 800406e:	4b3b      	ldr	r3, [pc, #236]	; (800415c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 8004070:	4a37      	ldr	r2, [pc, #220]	; (8004150 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004072:	21a5      	movs	r1, #165	; 0xa5
 8004074:	e7e8      	b.n	8004048 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004076:	f011 f9a3 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800407a:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004160 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 800407e:	3004      	adds	r0, #4
 8004080:	f011 fa04 	bl	801548c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004084:	f8d9 0000 	ldr.w	r0, [r9]
 8004088:	b110      	cbz	r0, 8004090 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 800408a:	6803      	ldr	r3, [r0, #0]
 800408c:	68db      	ldr	r3, [r3, #12]
 800408e:	4798      	blx	r3
    if (*currentTrans)
 8004090:	f8d9 0000 	ldr.w	r0, [r9]
 8004094:	b110      	cbz	r0, 800409c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 8004096:	6803      	ldr	r3, [r0, #0]
 8004098:	681b      	ldr	r3, [r3, #0]
 800409a:	4798      	blx	r3
    if (*currentScreen)
 800409c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004164 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 80040a0:	f8d8 0000 	ldr.w	r0, [r8]
 80040a4:	b110      	cbz	r0, 80040ac <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80040a6:	6803      	ldr	r3, [r0, #0]
 80040a8:	695b      	ldr	r3, [r3, #20]
 80040aa:	4798      	blx	r3
    if (*currentPresenter)
 80040ac:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80040b0:	b110      	cbz	r0, 80040b8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 80040b2:	6803      	ldr	r3, [r0, #0]
 80040b4:	685b      	ldr	r3, [r3, #4]
 80040b6:	4798      	blx	r3
    if (*currentScreen)
 80040b8:	f8d8 0000 	ldr.w	r0, [r8]
 80040bc:	b110      	cbz	r0, 80040c4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 80040be:	6803      	ldr	r3, [r0, #0]
 80040c0:	681b      	ldr	r3, [r3, #0]
 80040c2:	4798      	blx	r3
    if (*currentPresenter)
 80040c4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80040c8:	b110      	cbz	r0, 80040d0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80040ca:	6803      	ldr	r3, [r0, #0]
 80040cc:	689b      	ldr	r3, [r3, #8]
 80040ce:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80040d0:	68e0      	ldr	r0, [r4, #12]
 80040d2:	2100      	movs	r1, #0
 80040d4:	f7ff fd96 	bl	8003c04 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 80040d8:	2114      	movs	r1, #20
 80040da:	4605      	mov	r5, r0
 80040dc:	f7ff fd96 	bl	8003c0c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80040e0:	68a0      	ldr	r0, [r4, #8]
 80040e2:	6803      	ldr	r3, [r0, #0]
 80040e4:	2100      	movs	r1, #0
 80040e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80040e8:	4798      	blx	r3
 80040ea:	4606      	mov	r6, r0
 80040ec:	f004 fa0c 	bl	8008508 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80040f0:	6860      	ldr	r0, [r4, #4]
 80040f2:	6803      	ldr	r3, [r0, #0]
 80040f4:	2100      	movs	r1, #0
 80040f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80040f8:	4798      	blx	r3
 80040fa:	4631      	mov	r1, r6
 80040fc:	4604      	mov	r4, r0
 80040fe:	f004 f9dd 	bl	80084bc <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8004102:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004106:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800410a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800410e:	b1dc      	cbz	r4, 8004148 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x120>
 8004110:	1d23      	adds	r3, r4, #4
 8004112:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004116:	6833      	ldr	r3, [r6, #0]
 8004118:	f8c4 a008 	str.w	sl, [r4, #8]
 800411c:	4630      	mov	r0, r6
 800411e:	68db      	ldr	r3, [r3, #12]
 8004120:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004122:	4798      	blx	r3
    newPresenter->activate();
 8004124:	6823      	ldr	r3, [r4, #0]
 8004126:	4620      	mov	r0, r4
 8004128:	681b      	ldr	r3, [r3, #0]
 800412a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800412c:	4629      	mov	r1, r5
 800412e:	4630      	mov	r0, r6
 8004130:	f012 ff72 	bl	8017018 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004134:	682b      	ldr	r3, [r5, #0]
 8004136:	4628      	mov	r0, r5
 8004138:	691b      	ldr	r3, [r3, #16]
 800413a:	4798      	blx	r3
    newTransition->invalidate();
 800413c:	682b      	ldr	r3, [r5, #0]
 800413e:	4628      	mov	r0, r5
 8004140:	695b      	ldr	r3, [r3, #20]
}
 8004142:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004146:	4718      	bx	r3
    model->bind(newPresenter);
 8004148:	4623      	mov	r3, r4
 800414a:	e7e2      	b.n	8004112 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xea>
 800414c:	0802bdf4 	.word	0x0802bdf4
 8004150:	0802c591 	.word	0x0802c591
 8004154:	0802bf90 	.word	0x0802bf90
 8004158:	0802bfd7 	.word	0x0802bfd7
 800415c:	0802c07a 	.word	0x0802c07a
 8004160:	20012f6c 	.word	0x20012f6c
 8004164:	20012f68 	.word	0x20012f68

08004168 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 8004168:	6803      	ldr	r3, [r0, #0]
 800416a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800416c:	4718      	bx	r3
	...

08004170 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 8004170:	4b12      	ldr	r3, [pc, #72]	; (80041bc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8004172:	b513      	push	{r0, r1, r4, lr}
          solid()
 8004174:	6003      	str	r3, [r0, #0]
 8004176:	f44f 7380 	mov.w	r3, #256	; 0x100
 800417a:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 800417c:	4b10      	ldr	r3, [pc, #64]	; (80041c0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 800417e:	7241      	strb	r1, [r0, #9]
 8004180:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004182:	4910      	ldr	r1, [pc, #64]	; (80041c4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8004184:	4b10      	ldr	r3, [pc, #64]	; (80041c8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004186:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 800418a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800418e:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8004190:	2200      	movs	r2, #0
 8004192:	6042      	str	r2, [r0, #4]
 8004194:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8004196:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8004198:	81c2      	strh	r2, [r0, #14]
          solid()
 800419a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800419e:	e9c0 2207 	strd	r2, r2, [r0, #28]
 80041a2:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 80041a6:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 80041aa:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80041ac:	9100      	str	r1, [sp, #0]
 80041ae:	3010      	adds	r0, #16
 80041b0:	4611      	mov	r1, r2
 80041b2:	f7fe fb2d 	bl	8002810 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 80041b6:	4620      	mov	r0, r4
 80041b8:	b002      	add	sp, #8
 80041ba:	bd10      	pop	{r4, pc}
 80041bc:	0802d4bc 	.word	0x0802d4bc
 80041c0:	0802d3c4 	.word	0x0802d3c4
 80041c4:	20012f1a 	.word	0x20012f1a
 80041c8:	20012f18 	.word	0x20012f18

080041cc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 80041cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80041d0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80041d4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80041d6:	68a0      	ldr	r0, [r4, #8]
 80041d8:	6803      	ldr	r3, [r0, #0]
 80041da:	6a1b      	ldr	r3, [r3, #32]
 80041dc:	4798      	blx	r3
 80041de:	f241 03af 	movw	r3, #4271	; 0x10af
 80041e2:	4298      	cmp	r0, r3
 80041e4:	d805      	bhi.n	80041f2 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 80041e6:	4b42      	ldr	r3, [pc, #264]	; (80042f0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 80041e8:	4a42      	ldr	r2, [pc, #264]	; (80042f4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 80041ea:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80041ec:	4842      	ldr	r0, [pc, #264]	; (80042f8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 80041ee:	f025 ff71 	bl	802a0d4 <__assert_func>
 80041f2:	6860      	ldr	r0, [r4, #4]
 80041f4:	6803      	ldr	r3, [r0, #0]
 80041f6:	6a1b      	ldr	r3, [r3, #32]
 80041f8:	4798      	blx	r3
 80041fa:	280f      	cmp	r0, #15
 80041fc:	d803      	bhi.n	8004206 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 80041fe:	4b3f      	ldr	r3, [pc, #252]	; (80042fc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 8004200:	4a3c      	ldr	r2, [pc, #240]	; (80042f4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8004202:	21a4      	movs	r1, #164	; 0xa4
 8004204:	e7f2      	b.n	80041ec <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004206:	68e0      	ldr	r0, [r4, #12]
 8004208:	6803      	ldr	r3, [r0, #0]
 800420a:	6a1b      	ldr	r3, [r3, #32]
 800420c:	4798      	blx	r3
 800420e:	2837      	cmp	r0, #55	; 0x37
 8004210:	d803      	bhi.n	800421a <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 8004212:	4b3b      	ldr	r3, [pc, #236]	; (8004300 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 8004214:	4a37      	ldr	r2, [pc, #220]	; (80042f4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8004216:	21a5      	movs	r1, #165	; 0xa5
 8004218:	e7e8      	b.n	80041ec <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800421a:	f011 f8d1 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800421e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004304 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 8004222:	3004      	adds	r0, #4
 8004224:	f011 f932 	bl	801548c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004228:	f8d9 0000 	ldr.w	r0, [r9]
 800422c:	b110      	cbz	r0, 8004234 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800422e:	6803      	ldr	r3, [r0, #0]
 8004230:	68db      	ldr	r3, [r3, #12]
 8004232:	4798      	blx	r3
    if (*currentTrans)
 8004234:	f8d9 0000 	ldr.w	r0, [r9]
 8004238:	b110      	cbz	r0, 8004240 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800423a:	6803      	ldr	r3, [r0, #0]
 800423c:	681b      	ldr	r3, [r3, #0]
 800423e:	4798      	blx	r3
    if (*currentScreen)
 8004240:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004308 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 8004244:	f8d8 0000 	ldr.w	r0, [r8]
 8004248:	b110      	cbz	r0, 8004250 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800424a:	6803      	ldr	r3, [r0, #0]
 800424c:	695b      	ldr	r3, [r3, #20]
 800424e:	4798      	blx	r3
    if (*currentPresenter)
 8004250:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004254:	b110      	cbz	r0, 800425c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004256:	6803      	ldr	r3, [r0, #0]
 8004258:	685b      	ldr	r3, [r3, #4]
 800425a:	4798      	blx	r3
    if (*currentScreen)
 800425c:	f8d8 0000 	ldr.w	r0, [r8]
 8004260:	b110      	cbz	r0, 8004268 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004262:	6803      	ldr	r3, [r0, #0]
 8004264:	681b      	ldr	r3, [r3, #0]
 8004266:	4798      	blx	r3
    if (*currentPresenter)
 8004268:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800426c:	b110      	cbz	r0, 8004274 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800426e:	6803      	ldr	r3, [r0, #0]
 8004270:	689b      	ldr	r3, [r3, #8]
 8004272:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004274:	68e0      	ldr	r0, [r4, #12]
 8004276:	2100      	movs	r1, #0
 8004278:	f7ff ff76 	bl	8004168 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800427c:	2114      	movs	r1, #20
 800427e:	4605      	mov	r5, r0
 8004280:	f7ff ff76 	bl	8004170 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004284:	68a0      	ldr	r0, [r4, #8]
 8004286:	6803      	ldr	r3, [r0, #0]
 8004288:	2100      	movs	r1, #0
 800428a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800428c:	4798      	blx	r3
 800428e:	4606      	mov	r6, r0
 8004290:	f004 fc26 	bl	8008ae0 <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004294:	6860      	ldr	r0, [r4, #4]
 8004296:	6803      	ldr	r3, [r0, #0]
 8004298:	2100      	movs	r1, #0
 800429a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800429c:	4798      	blx	r3
 800429e:	4631      	mov	r1, r6
 80042a0:	4604      	mov	r4, r0
 80042a2:	f004 fbf7 	bl	8008a94 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 80042a6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80042aa:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80042ae:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80042b2:	b1dc      	cbz	r4, 80042ec <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 80042b4:	1d23      	adds	r3, r4, #4
 80042b6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80042ba:	6833      	ldr	r3, [r6, #0]
 80042bc:	f8c4 a008 	str.w	sl, [r4, #8]
 80042c0:	4630      	mov	r0, r6
 80042c2:	68db      	ldr	r3, [r3, #12]
 80042c4:	63f4      	str	r4, [r6, #60]	; 0x3c
 80042c6:	4798      	blx	r3
    newPresenter->activate();
 80042c8:	6823      	ldr	r3, [r4, #0]
 80042ca:	4620      	mov	r0, r4
 80042cc:	681b      	ldr	r3, [r3, #0]
 80042ce:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80042d0:	4629      	mov	r1, r5
 80042d2:	4630      	mov	r0, r6
 80042d4:	f012 fea0 	bl	8017018 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80042d8:	682b      	ldr	r3, [r5, #0]
 80042da:	4628      	mov	r0, r5
 80042dc:	691b      	ldr	r3, [r3, #16]
 80042de:	4798      	blx	r3
    newTransition->invalidate();
 80042e0:	682b      	ldr	r3, [r5, #0]
 80042e2:	4628      	mov	r0, r5
 80042e4:	695b      	ldr	r3, [r3, #20]
}
 80042e6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80042ea:	4718      	bx	r3
    model->bind(newPresenter);
 80042ec:	4623      	mov	r3, r4
 80042ee:	e7e2      	b.n	80042b6 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 80042f0:	0802bdf4 	.word	0x0802bdf4
 80042f4:	0802c6ab 	.word	0x0802c6ab
 80042f8:	0802bf90 	.word	0x0802bf90
 80042fc:	0802bfd7 	.word	0x0802bfd7
 8004300:	0802c07a 	.word	0x0802c07a
 8004304:	20012f6c 	.word	0x20012f6c
 8004308:	20012f68 	.word	0x20012f68

0800430c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv>:
{
 800430c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_HallView, Calibration_HallPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004310:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004314:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004316:	68a0      	ldr	r0, [r4, #8]
 8004318:	6803      	ldr	r3, [r0, #0]
 800431a:	6a1b      	ldr	r3, [r3, #32]
 800431c:	4798      	blx	r3
 800431e:	f241 035b 	movw	r3, #4187	; 0x105b
 8004322:	4298      	cmp	r0, r3
 8004324:	d805      	bhi.n	8004332 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x26>
 8004326:	4b42      	ldr	r3, [pc, #264]	; (8004430 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x124>)
 8004328:	4a42      	ldr	r2, [pc, #264]	; (8004434 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 800432a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800432c:	4842      	ldr	r0, [pc, #264]	; (8004438 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x12c>)
 800432e:	f025 fed1 	bl	802a0d4 <__assert_func>
 8004332:	6860      	ldr	r0, [r4, #4]
 8004334:	6803      	ldr	r3, [r0, #0]
 8004336:	6a1b      	ldr	r3, [r3, #32]
 8004338:	4798      	blx	r3
 800433a:	280f      	cmp	r0, #15
 800433c:	d803      	bhi.n	8004346 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x3a>
 800433e:	4b3f      	ldr	r3, [pc, #252]	; (800443c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x130>)
 8004340:	4a3c      	ldr	r2, [pc, #240]	; (8004434 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 8004342:	21a4      	movs	r1, #164	; 0xa4
 8004344:	e7f2      	b.n	800432c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004346:	68e0      	ldr	r0, [r4, #12]
 8004348:	6803      	ldr	r3, [r0, #0]
 800434a:	6a1b      	ldr	r3, [r3, #32]
 800434c:	4798      	blx	r3
 800434e:	2837      	cmp	r0, #55	; 0x37
 8004350:	d803      	bhi.n	800435a <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x4e>
 8004352:	4b3b      	ldr	r3, [pc, #236]	; (8004440 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x134>)
 8004354:	4a37      	ldr	r2, [pc, #220]	; (8004434 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 8004356:	21a5      	movs	r1, #165	; 0xa5
 8004358:	e7e8      	b.n	800432c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800435a:	f011 f831 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800435e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004444 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x138>
 8004362:	3004      	adds	r0, #4
 8004364:	f011 f892 	bl	801548c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004368:	f8d9 0000 	ldr.w	r0, [r9]
 800436c:	b110      	cbz	r0, 8004374 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800436e:	6803      	ldr	r3, [r0, #0]
 8004370:	68db      	ldr	r3, [r3, #12]
 8004372:	4798      	blx	r3
    if (*currentTrans)
 8004374:	f8d9 0000 	ldr.w	r0, [r9]
 8004378:	b110      	cbz	r0, 8004380 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800437a:	6803      	ldr	r3, [r0, #0]
 800437c:	681b      	ldr	r3, [r3, #0]
 800437e:	4798      	blx	r3
    if (*currentScreen)
 8004380:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004448 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x13c>
 8004384:	f8d8 0000 	ldr.w	r0, [r8]
 8004388:	b110      	cbz	r0, 8004390 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800438a:	6803      	ldr	r3, [r0, #0]
 800438c:	695b      	ldr	r3, [r3, #20]
 800438e:	4798      	blx	r3
    if (*currentPresenter)
 8004390:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004394:	b110      	cbz	r0, 800439c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004396:	6803      	ldr	r3, [r0, #0]
 8004398:	685b      	ldr	r3, [r3, #4]
 800439a:	4798      	blx	r3
    if (*currentScreen)
 800439c:	f8d8 0000 	ldr.w	r0, [r8]
 80043a0:	b110      	cbz	r0, 80043a8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80043a2:	6803      	ldr	r3, [r0, #0]
 80043a4:	681b      	ldr	r3, [r3, #0]
 80043a6:	4798      	blx	r3
    if (*currentPresenter)
 80043a8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80043ac:	b110      	cbz	r0, 80043b4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80043ae:	6803      	ldr	r3, [r0, #0]
 80043b0:	689b      	ldr	r3, [r3, #8]
 80043b2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80043b4:	68e0      	ldr	r0, [r4, #12]
 80043b6:	2100      	movs	r1, #0
 80043b8:	f7ff fed6 	bl	8004168 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80043bc:	2114      	movs	r1, #20
 80043be:	4605      	mov	r5, r0
 80043c0:	f7ff fed6 	bl	8004170 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80043c4:	68a0      	ldr	r0, [r4, #8]
 80043c6:	6803      	ldr	r3, [r0, #0]
 80043c8:	2100      	movs	r1, #0
 80043ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80043cc:	4798      	blx	r3
 80043ce:	4606      	mov	r6, r0
 80043d0:	f003 ffd0 	bl	8008374 <_ZN20Calibration_HallViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80043d4:	6860      	ldr	r0, [r4, #4]
 80043d6:	6803      	ldr	r3, [r0, #0]
 80043d8:	2100      	movs	r1, #0
 80043da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80043dc:	4798      	blx	r3
 80043de:	4631      	mov	r1, r6
 80043e0:	4604      	mov	r4, r0
 80043e2:	f003 ffa1 	bl	8008328 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>
    *currentTrans = newTransition;
 80043e6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80043ea:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80043ee:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80043f2:	b1dc      	cbz	r4, 800442c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x120>
 80043f4:	1d23      	adds	r3, r4, #4
 80043f6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80043fa:	6833      	ldr	r3, [r6, #0]
 80043fc:	f8c4 a008 	str.w	sl, [r4, #8]
 8004400:	4630      	mov	r0, r6
 8004402:	68db      	ldr	r3, [r3, #12]
 8004404:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004406:	4798      	blx	r3
    newPresenter->activate();
 8004408:	6823      	ldr	r3, [r4, #0]
 800440a:	4620      	mov	r0, r4
 800440c:	681b      	ldr	r3, [r3, #0]
 800440e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004410:	4629      	mov	r1, r5
 8004412:	4630      	mov	r0, r6
 8004414:	f012 fe00 	bl	8017018 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004418:	682b      	ldr	r3, [r5, #0]
 800441a:	4628      	mov	r0, r5
 800441c:	691b      	ldr	r3, [r3, #16]
 800441e:	4798      	blx	r3
    newTransition->invalidate();
 8004420:	682b      	ldr	r3, [r5, #0]
 8004422:	4628      	mov	r0, r5
 8004424:	695b      	ldr	r3, [r3, #20]
}
 8004426:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800442a:	4718      	bx	r3
    model->bind(newPresenter);
 800442c:	4623      	mov	r3, r4
 800442e:	e7e2      	b.n	80043f6 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xea>
 8004430:	0802bdf4 	.word	0x0802bdf4
 8004434:	0802c7cb 	.word	0x0802c7cb
 8004438:	0802bf90 	.word	0x0802bf90
 800443c:	0802bfd7 	.word	0x0802bfd7
 8004440:	0802c07a 	.word	0x0802c07a
 8004444:	20012f6c 	.word	0x20012f6c
 8004448:	20012f68 	.word	0x20012f68

0800444c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv>:
{
 800444c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_PadView, Calibration_PadPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004450:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004454:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004456:	68a0      	ldr	r0, [r4, #8]
 8004458:	6803      	ldr	r3, [r0, #0]
 800445a:	6a1b      	ldr	r3, [r3, #32]
 800445c:	4798      	blx	r3
 800445e:	f241 035b 	movw	r3, #4187	; 0x105b
 8004462:	4298      	cmp	r0, r3
 8004464:	d805      	bhi.n	8004472 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x26>
 8004466:	4b42      	ldr	r3, [pc, #264]	; (8004570 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x124>)
 8004468:	4a42      	ldr	r2, [pc, #264]	; (8004574 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 800446a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800446c:	4842      	ldr	r0, [pc, #264]	; (8004578 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x12c>)
 800446e:	f025 fe31 	bl	802a0d4 <__assert_func>
 8004472:	6860      	ldr	r0, [r4, #4]
 8004474:	6803      	ldr	r3, [r0, #0]
 8004476:	6a1b      	ldr	r3, [r3, #32]
 8004478:	4798      	blx	r3
 800447a:	280f      	cmp	r0, #15
 800447c:	d803      	bhi.n	8004486 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x3a>
 800447e:	4b3f      	ldr	r3, [pc, #252]	; (800457c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x130>)
 8004480:	4a3c      	ldr	r2, [pc, #240]	; (8004574 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8004482:	21a4      	movs	r1, #164	; 0xa4
 8004484:	e7f2      	b.n	800446c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004486:	68e0      	ldr	r0, [r4, #12]
 8004488:	6803      	ldr	r3, [r0, #0]
 800448a:	6a1b      	ldr	r3, [r3, #32]
 800448c:	4798      	blx	r3
 800448e:	2837      	cmp	r0, #55	; 0x37
 8004490:	d803      	bhi.n	800449a <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x4e>
 8004492:	4b3b      	ldr	r3, [pc, #236]	; (8004580 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x134>)
 8004494:	4a37      	ldr	r2, [pc, #220]	; (8004574 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8004496:	21a5      	movs	r1, #165	; 0xa5
 8004498:	e7e8      	b.n	800446c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800449a:	f010 ff91 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800449e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004584 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x138>
 80044a2:	3004      	adds	r0, #4
 80044a4:	f010 fff2 	bl	801548c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80044a8:	f8d9 0000 	ldr.w	r0, [r9]
 80044ac:	b110      	cbz	r0, 80044b4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80044ae:	6803      	ldr	r3, [r0, #0]
 80044b0:	68db      	ldr	r3, [r3, #12]
 80044b2:	4798      	blx	r3
    if (*currentTrans)
 80044b4:	f8d9 0000 	ldr.w	r0, [r9]
 80044b8:	b110      	cbz	r0, 80044c0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80044ba:	6803      	ldr	r3, [r0, #0]
 80044bc:	681b      	ldr	r3, [r3, #0]
 80044be:	4798      	blx	r3
    if (*currentScreen)
 80044c0:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004588 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x13c>
 80044c4:	f8d8 0000 	ldr.w	r0, [r8]
 80044c8:	b110      	cbz	r0, 80044d0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80044ca:	6803      	ldr	r3, [r0, #0]
 80044cc:	695b      	ldr	r3, [r3, #20]
 80044ce:	4798      	blx	r3
    if (*currentPresenter)
 80044d0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80044d4:	b110      	cbz	r0, 80044dc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80044d6:	6803      	ldr	r3, [r0, #0]
 80044d8:	685b      	ldr	r3, [r3, #4]
 80044da:	4798      	blx	r3
    if (*currentScreen)
 80044dc:	f8d8 0000 	ldr.w	r0, [r8]
 80044e0:	b110      	cbz	r0, 80044e8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80044e2:	6803      	ldr	r3, [r0, #0]
 80044e4:	681b      	ldr	r3, [r3, #0]
 80044e6:	4798      	blx	r3
    if (*currentPresenter)
 80044e8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80044ec:	b110      	cbz	r0, 80044f4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80044ee:	6803      	ldr	r3, [r0, #0]
 80044f0:	689b      	ldr	r3, [r3, #8]
 80044f2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80044f4:	68e0      	ldr	r0, [r4, #12]
 80044f6:	2100      	movs	r1, #0
 80044f8:	f7ff fe36 	bl	8004168 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80044fc:	2114      	movs	r1, #20
 80044fe:	4605      	mov	r5, r0
 8004500:	f7ff fe36 	bl	8004170 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004504:	68a0      	ldr	r0, [r4, #8]
 8004506:	6803      	ldr	r3, [r0, #0]
 8004508:	2100      	movs	r1, #0
 800450a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800450c:	4798      	blx	r3
 800450e:	4606      	mov	r6, r0
 8004510:	f003 ff72 	bl	80083f8 <_ZN19Calibration_PadViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004514:	6860      	ldr	r0, [r4, #4]
 8004516:	6803      	ldr	r3, [r0, #0]
 8004518:	2100      	movs	r1, #0
 800451a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800451c:	4798      	blx	r3
 800451e:	4631      	mov	r1, r6
 8004520:	4604      	mov	r4, r0
 8004522:	f003 ff43 	bl	80083ac <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>
    *currentTrans = newTransition;
 8004526:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800452a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800452e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004532:	b1dc      	cbz	r4, 800456c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x120>
 8004534:	1d23      	adds	r3, r4, #4
 8004536:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800453a:	6833      	ldr	r3, [r6, #0]
 800453c:	f8c4 a008 	str.w	sl, [r4, #8]
 8004540:	4630      	mov	r0, r6
 8004542:	68db      	ldr	r3, [r3, #12]
 8004544:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004546:	4798      	blx	r3
    newPresenter->activate();
 8004548:	6823      	ldr	r3, [r4, #0]
 800454a:	4620      	mov	r0, r4
 800454c:	681b      	ldr	r3, [r3, #0]
 800454e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004550:	4629      	mov	r1, r5
 8004552:	4630      	mov	r0, r6
 8004554:	f012 fd60 	bl	8017018 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004558:	682b      	ldr	r3, [r5, #0]
 800455a:	4628      	mov	r0, r5
 800455c:	691b      	ldr	r3, [r3, #16]
 800455e:	4798      	blx	r3
    newTransition->invalidate();
 8004560:	682b      	ldr	r3, [r5, #0]
 8004562:	4628      	mov	r0, r5
 8004564:	695b      	ldr	r3, [r3, #20]
}
 8004566:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800456a:	4718      	bx	r3
    model->bind(newPresenter);
 800456c:	4623      	mov	r3, r4
 800456e:	e7e2      	b.n	8004536 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xea>
 8004570:	0802bdf4 	.word	0x0802bdf4
 8004574:	0802c8f3 	.word	0x0802c8f3
 8004578:	0802bf90 	.word	0x0802bf90
 800457c:	0802bfd7 	.word	0x0802bfd7
 8004580:	0802c07a 	.word	0x0802c07a
 8004584:	20012f6c 	.word	0x20012f6c
 8004588:	20012f68 	.word	0x20012f68

0800458c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv>:
{
 800458c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004590:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004594:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004596:	68a0      	ldr	r0, [r4, #8]
 8004598:	6803      	ldr	r3, [r0, #0]
 800459a:	6a1b      	ldr	r3, [r3, #32]
 800459c:	4798      	blx	r3
 800459e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80045a2:	d205      	bcs.n	80045b0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x24>
 80045a4:	4b42      	ldr	r3, [pc, #264]	; (80046b0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x124>)
 80045a6:	4a43      	ldr	r2, [pc, #268]	; (80046b4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 80045a8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80045aa:	4843      	ldr	r0, [pc, #268]	; (80046b8 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x12c>)
 80045ac:	f025 fd92 	bl	802a0d4 <__assert_func>
 80045b0:	6860      	ldr	r0, [r4, #4]
 80045b2:	6803      	ldr	r3, [r0, #0]
 80045b4:	6a1b      	ldr	r3, [r3, #32]
 80045b6:	4798      	blx	r3
 80045b8:	280f      	cmp	r0, #15
 80045ba:	d803      	bhi.n	80045c4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x38>
 80045bc:	4b3f      	ldr	r3, [pc, #252]	; (80046bc <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x130>)
 80045be:	4a3d      	ldr	r2, [pc, #244]	; (80046b4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 80045c0:	21a4      	movs	r1, #164	; 0xa4
 80045c2:	e7f2      	b.n	80045aa <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80045c4:	68e0      	ldr	r0, [r4, #12]
 80045c6:	6803      	ldr	r3, [r0, #0]
 80045c8:	6a1b      	ldr	r3, [r3, #32]
 80045ca:	4798      	blx	r3
 80045cc:	2837      	cmp	r0, #55	; 0x37
 80045ce:	d803      	bhi.n	80045d8 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x4c>
 80045d0:	4b3b      	ldr	r3, [pc, #236]	; (80046c0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x134>)
 80045d2:	4a38      	ldr	r2, [pc, #224]	; (80046b4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 80045d4:	21a5      	movs	r1, #165	; 0xa5
 80045d6:	e7e8      	b.n	80045aa <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80045d8:	f010 fef2 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80045dc:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80046c4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x138>
 80045e0:	3004      	adds	r0, #4
 80045e2:	f010 ff53 	bl	801548c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80045e6:	f8d9 0000 	ldr.w	r0, [r9]
 80045ea:	b110      	cbz	r0, 80045f2 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 80045ec:	6803      	ldr	r3, [r0, #0]
 80045ee:	68db      	ldr	r3, [r3, #12]
 80045f0:	4798      	blx	r3
    if (*currentTrans)
 80045f2:	f8d9 0000 	ldr.w	r0, [r9]
 80045f6:	b110      	cbz	r0, 80045fe <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 80045f8:	6803      	ldr	r3, [r0, #0]
 80045fa:	681b      	ldr	r3, [r3, #0]
 80045fc:	4798      	blx	r3
    if (*currentScreen)
 80045fe:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80046c8 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x13c>
 8004602:	f8d8 0000 	ldr.w	r0, [r8]
 8004606:	b110      	cbz	r0, 800460e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004608:	6803      	ldr	r3, [r0, #0]
 800460a:	695b      	ldr	r3, [r3, #20]
 800460c:	4798      	blx	r3
    if (*currentPresenter)
 800460e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004612:	b110      	cbz	r0, 800461a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004614:	6803      	ldr	r3, [r0, #0]
 8004616:	685b      	ldr	r3, [r3, #4]
 8004618:	4798      	blx	r3
    if (*currentScreen)
 800461a:	f8d8 0000 	ldr.w	r0, [r8]
 800461e:	b110      	cbz	r0, 8004626 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004620:	6803      	ldr	r3, [r0, #0]
 8004622:	681b      	ldr	r3, [r3, #0]
 8004624:	4798      	blx	r3
    if (*currentPresenter)
 8004626:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800462a:	b110      	cbz	r0, 8004632 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 800462c:	6803      	ldr	r3, [r0, #0]
 800462e:	689b      	ldr	r3, [r3, #8]
 8004630:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004632:	68e0      	ldr	r0, [r4, #12]
 8004634:	2100      	movs	r1, #0
 8004636:	f7ff fd97 	bl	8004168 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800463a:	2114      	movs	r1, #20
 800463c:	4605      	mov	r5, r0
 800463e:	f7ff fd97 	bl	8004170 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004642:	68a0      	ldr	r0, [r4, #8]
 8004644:	6803      	ldr	r3, [r0, #0]
 8004646:	2100      	movs	r1, #0
 8004648:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800464a:	4798      	blx	r3
 800464c:	4606      	mov	r6, r0
 800464e:	f003 fe37 	bl	80082c0 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004652:	6860      	ldr	r0, [r4, #4]
 8004654:	6803      	ldr	r3, [r0, #0]
 8004656:	2100      	movs	r1, #0
 8004658:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800465a:	4798      	blx	r3
 800465c:	4631      	mov	r1, r6
 800465e:	4604      	mov	r4, r0
 8004660:	f003 fe08 	bl	8008274 <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 8004664:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004668:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800466c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004670:	b1dc      	cbz	r4, 80046aa <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x11e>
 8004672:	1d23      	adds	r3, r4, #4
 8004674:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004678:	6833      	ldr	r3, [r6, #0]
 800467a:	f8c4 a008 	str.w	sl, [r4, #8]
 800467e:	4630      	mov	r0, r6
 8004680:	68db      	ldr	r3, [r3, #12]
 8004682:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004684:	4798      	blx	r3
    newPresenter->activate();
 8004686:	6823      	ldr	r3, [r4, #0]
 8004688:	4620      	mov	r0, r4
 800468a:	681b      	ldr	r3, [r3, #0]
 800468c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800468e:	4629      	mov	r1, r5
 8004690:	4630      	mov	r0, r6
 8004692:	f012 fcc1 	bl	8017018 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004696:	682b      	ldr	r3, [r5, #0]
 8004698:	4628      	mov	r0, r5
 800469a:	691b      	ldr	r3, [r3, #16]
 800469c:	4798      	blx	r3
    newTransition->invalidate();
 800469e:	682b      	ldr	r3, [r5, #0]
 80046a0:	4628      	mov	r0, r5
 80046a2:	695b      	ldr	r3, [r3, #20]
}
 80046a4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80046a8:	4718      	bx	r3
    model->bind(newPresenter);
 80046aa:	4623      	mov	r3, r4
 80046ac:	e7e2      	b.n	8004674 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xe8>
 80046ae:	bf00      	nop
 80046b0:	0802bdf4 	.word	0x0802bdf4
 80046b4:	0802ca19 	.word	0x0802ca19
 80046b8:	0802bf90 	.word	0x0802bf90
 80046bc:	0802bfd7 	.word	0x0802bfd7
 80046c0:	0802c07a 	.word	0x0802c07a
 80046c4:	20012f6c 	.word	0x20012f6c
 80046c8:	20012f68 	.word	0x20012f68

080046cc <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 80046cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80046d0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80046d4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80046d6:	68a0      	ldr	r0, [r4, #8]
 80046d8:	6803      	ldr	r3, [r0, #0]
 80046da:	6a1b      	ldr	r3, [r3, #32]
 80046dc:	4798      	blx	r3
 80046de:	f241 33e3 	movw	r3, #5091	; 0x13e3
 80046e2:	4298      	cmp	r0, r3
 80046e4:	d805      	bhi.n	80046f2 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 80046e6:	4b42      	ldr	r3, [pc, #264]	; (80047f0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 80046e8:	4a42      	ldr	r2, [pc, #264]	; (80047f4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 80046ea:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80046ec:	4842      	ldr	r0, [pc, #264]	; (80047f8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 80046ee:	f025 fcf1 	bl	802a0d4 <__assert_func>
 80046f2:	6860      	ldr	r0, [r4, #4]
 80046f4:	6803      	ldr	r3, [r0, #0]
 80046f6:	6a1b      	ldr	r3, [r3, #32]
 80046f8:	4798      	blx	r3
 80046fa:	280f      	cmp	r0, #15
 80046fc:	d803      	bhi.n	8004706 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 80046fe:	4b3f      	ldr	r3, [pc, #252]	; (80047fc <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 8004700:	4a3c      	ldr	r2, [pc, #240]	; (80047f4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8004702:	21a4      	movs	r1, #164	; 0xa4
 8004704:	e7f2      	b.n	80046ec <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004706:	68e0      	ldr	r0, [r4, #12]
 8004708:	6803      	ldr	r3, [r0, #0]
 800470a:	6a1b      	ldr	r3, [r3, #32]
 800470c:	4798      	blx	r3
 800470e:	2837      	cmp	r0, #55	; 0x37
 8004710:	d803      	bhi.n	800471a <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 8004712:	4b3b      	ldr	r3, [pc, #236]	; (8004800 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 8004714:	4a37      	ldr	r2, [pc, #220]	; (80047f4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8004716:	21a5      	movs	r1, #165	; 0xa5
 8004718:	e7e8      	b.n	80046ec <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800471a:	f010 fe51 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800471e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004804 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 8004722:	3004      	adds	r0, #4
 8004724:	f010 feb2 	bl	801548c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004728:	f8d9 0000 	ldr.w	r0, [r9]
 800472c:	b110      	cbz	r0, 8004734 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800472e:	6803      	ldr	r3, [r0, #0]
 8004730:	68db      	ldr	r3, [r3, #12]
 8004732:	4798      	blx	r3
    if (*currentTrans)
 8004734:	f8d9 0000 	ldr.w	r0, [r9]
 8004738:	b110      	cbz	r0, 8004740 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800473a:	6803      	ldr	r3, [r0, #0]
 800473c:	681b      	ldr	r3, [r3, #0]
 800473e:	4798      	blx	r3
    if (*currentScreen)
 8004740:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004808 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 8004744:	f8d8 0000 	ldr.w	r0, [r8]
 8004748:	b110      	cbz	r0, 8004750 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800474a:	6803      	ldr	r3, [r0, #0]
 800474c:	695b      	ldr	r3, [r3, #20]
 800474e:	4798      	blx	r3
    if (*currentPresenter)
 8004750:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004754:	b110      	cbz	r0, 800475c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004756:	6803      	ldr	r3, [r0, #0]
 8004758:	685b      	ldr	r3, [r3, #4]
 800475a:	4798      	blx	r3
    if (*currentScreen)
 800475c:	f8d8 0000 	ldr.w	r0, [r8]
 8004760:	b110      	cbz	r0, 8004768 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004762:	6803      	ldr	r3, [r0, #0]
 8004764:	681b      	ldr	r3, [r3, #0]
 8004766:	4798      	blx	r3
    if (*currentPresenter)
 8004768:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800476c:	b110      	cbz	r0, 8004774 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800476e:	6803      	ldr	r3, [r0, #0]
 8004770:	689b      	ldr	r3, [r3, #8]
 8004772:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004774:	68e0      	ldr	r0, [r4, #12]
 8004776:	2100      	movs	r1, #0
 8004778:	f7ff fcf6 	bl	8004168 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800477c:	2114      	movs	r1, #20
 800477e:	4605      	mov	r5, r0
 8004780:	f7ff fcf6 	bl	8004170 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004784:	68a0      	ldr	r0, [r4, #8]
 8004786:	6803      	ldr	r3, [r0, #0]
 8004788:	2100      	movs	r1, #0
 800478a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800478c:	4798      	blx	r3
 800478e:	4606      	mov	r6, r0
 8004790:	f004 f816 	bl	80087c0 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004794:	6860      	ldr	r0, [r4, #4]
 8004796:	6803      	ldr	r3, [r0, #0]
 8004798:	2100      	movs	r1, #0
 800479a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800479c:	4798      	blx	r3
 800479e:	4631      	mov	r1, r6
 80047a0:	4604      	mov	r4, r0
 80047a2:	f003 ffe7 	bl	8008774 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 80047a6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80047aa:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80047ae:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80047b2:	b1dc      	cbz	r4, 80047ec <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 80047b4:	1d23      	adds	r3, r4, #4
 80047b6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80047ba:	6833      	ldr	r3, [r6, #0]
 80047bc:	f8c4 a008 	str.w	sl, [r4, #8]
 80047c0:	4630      	mov	r0, r6
 80047c2:	68db      	ldr	r3, [r3, #12]
 80047c4:	63f4      	str	r4, [r6, #60]	; 0x3c
 80047c6:	4798      	blx	r3
    newPresenter->activate();
 80047c8:	6823      	ldr	r3, [r4, #0]
 80047ca:	4620      	mov	r0, r4
 80047cc:	681b      	ldr	r3, [r3, #0]
 80047ce:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80047d0:	4629      	mov	r1, r5
 80047d2:	4630      	mov	r0, r6
 80047d4:	f012 fc20 	bl	8017018 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80047d8:	682b      	ldr	r3, [r5, #0]
 80047da:	4628      	mov	r0, r5
 80047dc:	691b      	ldr	r3, [r3, #16]
 80047de:	4798      	blx	r3
    newTransition->invalidate();
 80047e0:	682b      	ldr	r3, [r5, #0]
 80047e2:	4628      	mov	r0, r5
 80047e4:	695b      	ldr	r3, [r3, #20]
}
 80047e6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80047ea:	4718      	bx	r3
    model->bind(newPresenter);
 80047ec:	4623      	mov	r3, r4
 80047ee:	e7e2      	b.n	80047b6 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 80047f0:	0802bdf4 	.word	0x0802bdf4
 80047f4:	0802cb37 	.word	0x0802cb37
 80047f8:	0802bf90 	.word	0x0802bf90
 80047fc:	0802bfd7 	.word	0x0802bfd7
 8004800:	0802c07a 	.word	0x0802c07a
 8004804:	20012f6c 	.word	0x20012f6c
 8004808:	20012f68 	.word	0x20012f68

0800480c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 800480c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004810:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004814:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004816:	68a0      	ldr	r0, [r4, #8]
 8004818:	6803      	ldr	r3, [r0, #0]
 800481a:	6a1b      	ldr	r3, [r3, #32]
 800481c:	4798      	blx	r3
 800481e:	f241 33e3 	movw	r3, #5091	; 0x13e3
 8004822:	4298      	cmp	r0, r3
 8004824:	d805      	bhi.n	8004832 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 8004826:	4b42      	ldr	r3, [pc, #264]	; (8004930 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 8004828:	4a42      	ldr	r2, [pc, #264]	; (8004934 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 800482a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800482c:	4842      	ldr	r0, [pc, #264]	; (8004938 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 800482e:	f025 fc51 	bl	802a0d4 <__assert_func>
 8004832:	6860      	ldr	r0, [r4, #4]
 8004834:	6803      	ldr	r3, [r0, #0]
 8004836:	6a1b      	ldr	r3, [r3, #32]
 8004838:	4798      	blx	r3
 800483a:	280f      	cmp	r0, #15
 800483c:	d803      	bhi.n	8004846 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 800483e:	4b3f      	ldr	r3, [pc, #252]	; (800493c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 8004840:	4a3c      	ldr	r2, [pc, #240]	; (8004934 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8004842:	21a4      	movs	r1, #164	; 0xa4
 8004844:	e7f2      	b.n	800482c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004846:	68e0      	ldr	r0, [r4, #12]
 8004848:	6803      	ldr	r3, [r0, #0]
 800484a:	6a1b      	ldr	r3, [r3, #32]
 800484c:	4798      	blx	r3
 800484e:	2837      	cmp	r0, #55	; 0x37
 8004850:	d803      	bhi.n	800485a <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 8004852:	4b3b      	ldr	r3, [pc, #236]	; (8004940 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 8004854:	4a37      	ldr	r2, [pc, #220]	; (8004934 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8004856:	21a5      	movs	r1, #165	; 0xa5
 8004858:	e7e8      	b.n	800482c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800485a:	f010 fdb1 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800485e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004944 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 8004862:	3004      	adds	r0, #4
 8004864:	f010 fe12 	bl	801548c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004868:	f8d9 0000 	ldr.w	r0, [r9]
 800486c:	b110      	cbz	r0, 8004874 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800486e:	6803      	ldr	r3, [r0, #0]
 8004870:	68db      	ldr	r3, [r3, #12]
 8004872:	4798      	blx	r3
    if (*currentTrans)
 8004874:	f8d9 0000 	ldr.w	r0, [r9]
 8004878:	b110      	cbz	r0, 8004880 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800487a:	6803      	ldr	r3, [r0, #0]
 800487c:	681b      	ldr	r3, [r3, #0]
 800487e:	4798      	blx	r3
    if (*currentScreen)
 8004880:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004948 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 8004884:	f8d8 0000 	ldr.w	r0, [r8]
 8004888:	b110      	cbz	r0, 8004890 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800488a:	6803      	ldr	r3, [r0, #0]
 800488c:	695b      	ldr	r3, [r3, #20]
 800488e:	4798      	blx	r3
    if (*currentPresenter)
 8004890:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004894:	b110      	cbz	r0, 800489c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004896:	6803      	ldr	r3, [r0, #0]
 8004898:	685b      	ldr	r3, [r3, #4]
 800489a:	4798      	blx	r3
    if (*currentScreen)
 800489c:	f8d8 0000 	ldr.w	r0, [r8]
 80048a0:	b110      	cbz	r0, 80048a8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80048a2:	6803      	ldr	r3, [r0, #0]
 80048a4:	681b      	ldr	r3, [r3, #0]
 80048a6:	4798      	blx	r3
    if (*currentPresenter)
 80048a8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80048ac:	b110      	cbz	r0, 80048b4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80048ae:	6803      	ldr	r3, [r0, #0]
 80048b0:	689b      	ldr	r3, [r3, #8]
 80048b2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80048b4:	68e0      	ldr	r0, [r4, #12]
 80048b6:	2100      	movs	r1, #0
 80048b8:	f7ff fc56 	bl	8004168 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80048bc:	2114      	movs	r1, #20
 80048be:	4605      	mov	r5, r0
 80048c0:	f7ff fc56 	bl	8004170 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80048c4:	68a0      	ldr	r0, [r4, #8]
 80048c6:	6803      	ldr	r3, [r0, #0]
 80048c8:	2100      	movs	r1, #0
 80048ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80048cc:	4798      	blx	r3
 80048ce:	4606      	mov	r6, r0
 80048d0:	f003 ff34 	bl	800873c <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80048d4:	6860      	ldr	r0, [r4, #4]
 80048d6:	6803      	ldr	r3, [r0, #0]
 80048d8:	2100      	movs	r1, #0
 80048da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80048dc:	4798      	blx	r3
 80048de:	4631      	mov	r1, r6
 80048e0:	4604      	mov	r4, r0
 80048e2:	f003 ff05 	bl	80086f0 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 80048e6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80048ea:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80048ee:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80048f2:	b1dc      	cbz	r4, 800492c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 80048f4:	1d23      	adds	r3, r4, #4
 80048f6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80048fa:	6833      	ldr	r3, [r6, #0]
 80048fc:	f8c4 a008 	str.w	sl, [r4, #8]
 8004900:	4630      	mov	r0, r6
 8004902:	68db      	ldr	r3, [r3, #12]
 8004904:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004906:	4798      	blx	r3
    newPresenter->activate();
 8004908:	6823      	ldr	r3, [r4, #0]
 800490a:	4620      	mov	r0, r4
 800490c:	681b      	ldr	r3, [r3, #0]
 800490e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004910:	4629      	mov	r1, r5
 8004912:	4630      	mov	r0, r6
 8004914:	f012 fb80 	bl	8017018 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004918:	682b      	ldr	r3, [r5, #0]
 800491a:	4628      	mov	r0, r5
 800491c:	691b      	ldr	r3, [r3, #16]
 800491e:	4798      	blx	r3
    newTransition->invalidate();
 8004920:	682b      	ldr	r3, [r5, #0]
 8004922:	4628      	mov	r0, r5
 8004924:	695b      	ldr	r3, [r3, #20]
}
 8004926:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800492a:	4718      	bx	r3
    model->bind(newPresenter);
 800492c:	4623      	mov	r3, r4
 800492e:	e7e2      	b.n	80048f6 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 8004930:	0802bdf4 	.word	0x0802bdf4
 8004934:	0802cc7b 	.word	0x0802cc7b
 8004938:	0802bf90 	.word	0x0802bf90
 800493c:	0802bfd7 	.word	0x0802bfd7
 8004940:	0802c07a 	.word	0x0802c07a
 8004944:	20012f6c 	.word	0x20012f6c
 8004948:	20012f68 	.word	0x20012f68

0800494c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 800494c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004950:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004954:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004956:	68a0      	ldr	r0, [r4, #8]
 8004958:	6803      	ldr	r3, [r0, #0]
 800495a:	6a1b      	ldr	r3, [r3, #32]
 800495c:	4798      	blx	r3
 800495e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004962:	d205      	bcs.n	8004970 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x24>
 8004964:	4b42      	ldr	r3, [pc, #264]	; (8004a70 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 8004966:	4a43      	ldr	r2, [pc, #268]	; (8004a74 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8004968:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800496a:	4843      	ldr	r0, [pc, #268]	; (8004a78 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 800496c:	f025 fbb2 	bl	802a0d4 <__assert_func>
 8004970:	6860      	ldr	r0, [r4, #4]
 8004972:	6803      	ldr	r3, [r0, #0]
 8004974:	6a1b      	ldr	r3, [r3, #32]
 8004976:	4798      	blx	r3
 8004978:	280f      	cmp	r0, #15
 800497a:	d803      	bhi.n	8004984 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x38>
 800497c:	4b3f      	ldr	r3, [pc, #252]	; (8004a7c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 800497e:	4a3d      	ldr	r2, [pc, #244]	; (8004a74 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8004980:	21a4      	movs	r1, #164	; 0xa4
 8004982:	e7f2      	b.n	800496a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004984:	68e0      	ldr	r0, [r4, #12]
 8004986:	6803      	ldr	r3, [r0, #0]
 8004988:	6a1b      	ldr	r3, [r3, #32]
 800498a:	4798      	blx	r3
 800498c:	2837      	cmp	r0, #55	; 0x37
 800498e:	d803      	bhi.n	8004998 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4c>
 8004990:	4b3b      	ldr	r3, [pc, #236]	; (8004a80 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 8004992:	4a38      	ldr	r2, [pc, #224]	; (8004a74 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8004994:	21a5      	movs	r1, #165	; 0xa5
 8004996:	e7e8      	b.n	800496a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004998:	f010 fd12 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800499c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004a84 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 80049a0:	3004      	adds	r0, #4
 80049a2:	f010 fd73 	bl	801548c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80049a6:	f8d9 0000 	ldr.w	r0, [r9]
 80049aa:	b110      	cbz	r0, 80049b2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 80049ac:	6803      	ldr	r3, [r0, #0]
 80049ae:	68db      	ldr	r3, [r3, #12]
 80049b0:	4798      	blx	r3
    if (*currentTrans)
 80049b2:	f8d9 0000 	ldr.w	r0, [r9]
 80049b6:	b110      	cbz	r0, 80049be <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 80049b8:	6803      	ldr	r3, [r0, #0]
 80049ba:	681b      	ldr	r3, [r3, #0]
 80049bc:	4798      	blx	r3
    if (*currentScreen)
 80049be:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004a88 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 80049c2:	f8d8 0000 	ldr.w	r0, [r8]
 80049c6:	b110      	cbz	r0, 80049ce <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80049c8:	6803      	ldr	r3, [r0, #0]
 80049ca:	695b      	ldr	r3, [r3, #20]
 80049cc:	4798      	blx	r3
    if (*currentPresenter)
 80049ce:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80049d2:	b110      	cbz	r0, 80049da <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80049d4:	6803      	ldr	r3, [r0, #0]
 80049d6:	685b      	ldr	r3, [r3, #4]
 80049d8:	4798      	blx	r3
    if (*currentScreen)
 80049da:	f8d8 0000 	ldr.w	r0, [r8]
 80049de:	b110      	cbz	r0, 80049e6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 80049e0:	6803      	ldr	r3, [r0, #0]
 80049e2:	681b      	ldr	r3, [r3, #0]
 80049e4:	4798      	blx	r3
    if (*currentPresenter)
 80049e6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80049ea:	b110      	cbz	r0, 80049f2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80049ec:	6803      	ldr	r3, [r0, #0]
 80049ee:	689b      	ldr	r3, [r3, #8]
 80049f0:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80049f2:	68e0      	ldr	r0, [r4, #12]
 80049f4:	2100      	movs	r1, #0
 80049f6:	f7ff fbb7 	bl	8004168 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80049fa:	2114      	movs	r1, #20
 80049fc:	4605      	mov	r5, r0
 80049fe:	f7ff fbb7 	bl	8004170 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004a02:	68a0      	ldr	r0, [r4, #8]
 8004a04:	6803      	ldr	r3, [r0, #0]
 8004a06:	2100      	movs	r1, #0
 8004a08:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a0a:	4798      	blx	r3
 8004a0c:	4606      	mov	r6, r0
 8004a0e:	f003 fe3b 	bl	8008688 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004a12:	6860      	ldr	r0, [r4, #4]
 8004a14:	6803      	ldr	r3, [r0, #0]
 8004a16:	2100      	movs	r1, #0
 8004a18:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a1a:	4798      	blx	r3
 8004a1c:	4631      	mov	r1, r6
 8004a1e:	4604      	mov	r4, r0
 8004a20:	f003 fe0c 	bl	800863c <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8004a24:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004a28:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004a2c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004a30:	b1dc      	cbz	r4, 8004a6a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x11e>
 8004a32:	1d23      	adds	r3, r4, #4
 8004a34:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004a38:	6833      	ldr	r3, [r6, #0]
 8004a3a:	f8c4 a008 	str.w	sl, [r4, #8]
 8004a3e:	4630      	mov	r0, r6
 8004a40:	68db      	ldr	r3, [r3, #12]
 8004a42:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004a44:	4798      	blx	r3
    newPresenter->activate();
 8004a46:	6823      	ldr	r3, [r4, #0]
 8004a48:	4620      	mov	r0, r4
 8004a4a:	681b      	ldr	r3, [r3, #0]
 8004a4c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004a4e:	4629      	mov	r1, r5
 8004a50:	4630      	mov	r0, r6
 8004a52:	f012 fae1 	bl	8017018 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004a56:	682b      	ldr	r3, [r5, #0]
 8004a58:	4628      	mov	r0, r5
 8004a5a:	691b      	ldr	r3, [r3, #16]
 8004a5c:	4798      	blx	r3
    newTransition->invalidate();
 8004a5e:	682b      	ldr	r3, [r5, #0]
 8004a60:	4628      	mov	r0, r5
 8004a62:	695b      	ldr	r3, [r3, #20]
}
 8004a64:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004a68:	4718      	bx	r3
    model->bind(newPresenter);
 8004a6a:	4623      	mov	r3, r4
 8004a6c:	e7e2      	b.n	8004a34 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xe8>
 8004a6e:	bf00      	nop
 8004a70:	0802bdf4 	.word	0x0802bdf4
 8004a74:	0802cdbb 	.word	0x0802cdbb
 8004a78:	0802bf90 	.word	0x0802bf90
 8004a7c:	0802bfd7 	.word	0x0802bfd7
 8004a80:	0802c07a 	.word	0x0802c07a
 8004a84:	20012f6c 	.word	0x20012f6c
 8004a88:	20012f68 	.word	0x20012f68

08004a8c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 8004a8c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004a90:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004a94:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004a96:	68a0      	ldr	r0, [r4, #8]
 8004a98:	6803      	ldr	r3, [r0, #0]
 8004a9a:	6a1b      	ldr	r3, [r3, #32]
 8004a9c:	4798      	blx	r3
 8004a9e:	f241 33e3 	movw	r3, #5091	; 0x13e3
 8004aa2:	4298      	cmp	r0, r3
 8004aa4:	d805      	bhi.n	8004ab2 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 8004aa6:	4b42      	ldr	r3, [pc, #264]	; (8004bb0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 8004aa8:	4a42      	ldr	r2, [pc, #264]	; (8004bb4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8004aaa:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004aac:	4842      	ldr	r0, [pc, #264]	; (8004bb8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 8004aae:	f025 fb11 	bl	802a0d4 <__assert_func>
 8004ab2:	6860      	ldr	r0, [r4, #4]
 8004ab4:	6803      	ldr	r3, [r0, #0]
 8004ab6:	6a1b      	ldr	r3, [r3, #32]
 8004ab8:	4798      	blx	r3
 8004aba:	280f      	cmp	r0, #15
 8004abc:	d803      	bhi.n	8004ac6 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 8004abe:	4b3f      	ldr	r3, [pc, #252]	; (8004bbc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 8004ac0:	4a3c      	ldr	r2, [pc, #240]	; (8004bb4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8004ac2:	21a4      	movs	r1, #164	; 0xa4
 8004ac4:	e7f2      	b.n	8004aac <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004ac6:	68e0      	ldr	r0, [r4, #12]
 8004ac8:	6803      	ldr	r3, [r0, #0]
 8004aca:	6a1b      	ldr	r3, [r3, #32]
 8004acc:	4798      	blx	r3
 8004ace:	2837      	cmp	r0, #55	; 0x37
 8004ad0:	d803      	bhi.n	8004ada <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 8004ad2:	4b3b      	ldr	r3, [pc, #236]	; (8004bc0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 8004ad4:	4a37      	ldr	r2, [pc, #220]	; (8004bb4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8004ad6:	21a5      	movs	r1, #165	; 0xa5
 8004ad8:	e7e8      	b.n	8004aac <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004ada:	f010 fc71 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004ade:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004bc4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 8004ae2:	3004      	adds	r0, #4
 8004ae4:	f010 fcd2 	bl	801548c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004ae8:	f8d9 0000 	ldr.w	r0, [r9]
 8004aec:	b110      	cbz	r0, 8004af4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004aee:	6803      	ldr	r3, [r0, #0]
 8004af0:	68db      	ldr	r3, [r3, #12]
 8004af2:	4798      	blx	r3
    if (*currentTrans)
 8004af4:	f8d9 0000 	ldr.w	r0, [r9]
 8004af8:	b110      	cbz	r0, 8004b00 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004afa:	6803      	ldr	r3, [r0, #0]
 8004afc:	681b      	ldr	r3, [r3, #0]
 8004afe:	4798      	blx	r3
    if (*currentScreen)
 8004b00:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004bc8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 8004b04:	f8d8 0000 	ldr.w	r0, [r8]
 8004b08:	b110      	cbz	r0, 8004b10 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004b0a:	6803      	ldr	r3, [r0, #0]
 8004b0c:	695b      	ldr	r3, [r3, #20]
 8004b0e:	4798      	blx	r3
    if (*currentPresenter)
 8004b10:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004b14:	b110      	cbz	r0, 8004b1c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004b16:	6803      	ldr	r3, [r0, #0]
 8004b18:	685b      	ldr	r3, [r3, #4]
 8004b1a:	4798      	blx	r3
    if (*currentScreen)
 8004b1c:	f8d8 0000 	ldr.w	r0, [r8]
 8004b20:	b110      	cbz	r0, 8004b28 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004b22:	6803      	ldr	r3, [r0, #0]
 8004b24:	681b      	ldr	r3, [r3, #0]
 8004b26:	4798      	blx	r3
    if (*currentPresenter)
 8004b28:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004b2c:	b110      	cbz	r0, 8004b34 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004b2e:	6803      	ldr	r3, [r0, #0]
 8004b30:	689b      	ldr	r3, [r3, #8]
 8004b32:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004b34:	68e0      	ldr	r0, [r4, #12]
 8004b36:	2100      	movs	r1, #0
 8004b38:	f7ff fb16 	bl	8004168 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004b3c:	2114      	movs	r1, #20
 8004b3e:	4605      	mov	r5, r0
 8004b40:	f7ff fb16 	bl	8004170 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004b44:	68a0      	ldr	r0, [r4, #8]
 8004b46:	6803      	ldr	r3, [r0, #0]
 8004b48:	2100      	movs	r1, #0
 8004b4a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004b4c:	4798      	blx	r3
 8004b4e:	4606      	mov	r6, r0
 8004b50:	f003 ff60 	bl	8008a14 <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004b54:	6860      	ldr	r0, [r4, #4]
 8004b56:	6803      	ldr	r3, [r0, #0]
 8004b58:	2100      	movs	r1, #0
 8004b5a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004b5c:	4798      	blx	r3
 8004b5e:	4631      	mov	r1, r6
 8004b60:	4604      	mov	r4, r0
 8004b62:	f003 ff31 	bl	80089c8 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 8004b66:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004b6a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004b6e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004b72:	b1dc      	cbz	r4, 8004bac <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 8004b74:	1d23      	adds	r3, r4, #4
 8004b76:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004b7a:	6833      	ldr	r3, [r6, #0]
 8004b7c:	f8c4 a008 	str.w	sl, [r4, #8]
 8004b80:	4630      	mov	r0, r6
 8004b82:	68db      	ldr	r3, [r3, #12]
 8004b84:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004b86:	4798      	blx	r3
    newPresenter->activate();
 8004b88:	6823      	ldr	r3, [r4, #0]
 8004b8a:	4620      	mov	r0, r4
 8004b8c:	681b      	ldr	r3, [r3, #0]
 8004b8e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004b90:	4629      	mov	r1, r5
 8004b92:	4630      	mov	r0, r6
 8004b94:	f012 fa40 	bl	8017018 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004b98:	682b      	ldr	r3, [r5, #0]
 8004b9a:	4628      	mov	r0, r5
 8004b9c:	691b      	ldr	r3, [r3, #16]
 8004b9e:	4798      	blx	r3
    newTransition->invalidate();
 8004ba0:	682b      	ldr	r3, [r5, #0]
 8004ba2:	4628      	mov	r0, r5
 8004ba4:	695b      	ldr	r3, [r3, #20]
}
 8004ba6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004baa:	4718      	bx	r3
    model->bind(newPresenter);
 8004bac:	4623      	mov	r3, r4
 8004bae:	e7e2      	b.n	8004b76 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 8004bb0:	0802bdf4 	.word	0x0802bdf4
 8004bb4:	0802ceeb 	.word	0x0802ceeb
 8004bb8:	0802bf90 	.word	0x0802bf90
 8004bbc:	0802bfd7 	.word	0x0802bfd7
 8004bc0:	0802c07a 	.word	0x0802c07a
 8004bc4:	20012f6c 	.word	0x20012f6c
 8004bc8:	20012f68 	.word	0x20012f68

08004bcc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 8004bcc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004bd0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004bd4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004bd6:	68a0      	ldr	r0, [r4, #8]
 8004bd8:	6803      	ldr	r3, [r0, #0]
 8004bda:	6a1b      	ldr	r3, [r3, #32]
 8004bdc:	4798      	blx	r3
 8004bde:	f241 33f3 	movw	r3, #5107	; 0x13f3
 8004be2:	4298      	cmp	r0, r3
 8004be4:	d805      	bhi.n	8004bf2 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 8004be6:	4b42      	ldr	r3, [pc, #264]	; (8004cf0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 8004be8:	4a42      	ldr	r2, [pc, #264]	; (8004cf4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8004bea:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004bec:	4842      	ldr	r0, [pc, #264]	; (8004cf8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 8004bee:	f025 fa71 	bl	802a0d4 <__assert_func>
 8004bf2:	6860      	ldr	r0, [r4, #4]
 8004bf4:	6803      	ldr	r3, [r0, #0]
 8004bf6:	6a1b      	ldr	r3, [r3, #32]
 8004bf8:	4798      	blx	r3
 8004bfa:	280f      	cmp	r0, #15
 8004bfc:	d803      	bhi.n	8004c06 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 8004bfe:	4b3f      	ldr	r3, [pc, #252]	; (8004cfc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 8004c00:	4a3c      	ldr	r2, [pc, #240]	; (8004cf4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8004c02:	21a4      	movs	r1, #164	; 0xa4
 8004c04:	e7f2      	b.n	8004bec <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004c06:	68e0      	ldr	r0, [r4, #12]
 8004c08:	6803      	ldr	r3, [r0, #0]
 8004c0a:	6a1b      	ldr	r3, [r3, #32]
 8004c0c:	4798      	blx	r3
 8004c0e:	2837      	cmp	r0, #55	; 0x37
 8004c10:	d803      	bhi.n	8004c1a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 8004c12:	4b3b      	ldr	r3, [pc, #236]	; (8004d00 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 8004c14:	4a37      	ldr	r2, [pc, #220]	; (8004cf4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8004c16:	21a5      	movs	r1, #165	; 0xa5
 8004c18:	e7e8      	b.n	8004bec <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004c1a:	f010 fbd1 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004c1e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004d04 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 8004c22:	3004      	adds	r0, #4
 8004c24:	f010 fc32 	bl	801548c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004c28:	f8d9 0000 	ldr.w	r0, [r9]
 8004c2c:	b110      	cbz	r0, 8004c34 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004c2e:	6803      	ldr	r3, [r0, #0]
 8004c30:	68db      	ldr	r3, [r3, #12]
 8004c32:	4798      	blx	r3
    if (*currentTrans)
 8004c34:	f8d9 0000 	ldr.w	r0, [r9]
 8004c38:	b110      	cbz	r0, 8004c40 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004c3a:	6803      	ldr	r3, [r0, #0]
 8004c3c:	681b      	ldr	r3, [r3, #0]
 8004c3e:	4798      	blx	r3
    if (*currentScreen)
 8004c40:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004d08 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 8004c44:	f8d8 0000 	ldr.w	r0, [r8]
 8004c48:	b110      	cbz	r0, 8004c50 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004c4a:	6803      	ldr	r3, [r0, #0]
 8004c4c:	695b      	ldr	r3, [r3, #20]
 8004c4e:	4798      	blx	r3
    if (*currentPresenter)
 8004c50:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004c54:	b110      	cbz	r0, 8004c5c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004c56:	6803      	ldr	r3, [r0, #0]
 8004c58:	685b      	ldr	r3, [r3, #4]
 8004c5a:	4798      	blx	r3
    if (*currentScreen)
 8004c5c:	f8d8 0000 	ldr.w	r0, [r8]
 8004c60:	b110      	cbz	r0, 8004c68 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004c62:	6803      	ldr	r3, [r0, #0]
 8004c64:	681b      	ldr	r3, [r3, #0]
 8004c66:	4798      	blx	r3
    if (*currentPresenter)
 8004c68:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004c6c:	b110      	cbz	r0, 8004c74 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004c6e:	6803      	ldr	r3, [r0, #0]
 8004c70:	689b      	ldr	r3, [r3, #8]
 8004c72:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004c74:	68e0      	ldr	r0, [r4, #12]
 8004c76:	2100      	movs	r1, #0
 8004c78:	f7ff fa76 	bl	8004168 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004c7c:	2114      	movs	r1, #20
 8004c7e:	4605      	mov	r5, r0
 8004c80:	f7ff fa76 	bl	8004170 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004c84:	68a0      	ldr	r0, [r4, #8]
 8004c86:	6803      	ldr	r3, [r0, #0]
 8004c88:	2100      	movs	r1, #0
 8004c8a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c8c:	4798      	blx	r3
 8004c8e:	4606      	mov	r6, r0
 8004c90:	f003 fe38 	bl	8008904 <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004c94:	6860      	ldr	r0, [r4, #4]
 8004c96:	6803      	ldr	r3, [r0, #0]
 8004c98:	2100      	movs	r1, #0
 8004c9a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c9c:	4798      	blx	r3
 8004c9e:	4631      	mov	r1, r6
 8004ca0:	4604      	mov	r4, r0
 8004ca2:	f003 fe09 	bl	80088b8 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 8004ca6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004caa:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004cae:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004cb2:	b1dc      	cbz	r4, 8004cec <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 8004cb4:	1d23      	adds	r3, r4, #4
 8004cb6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004cba:	6833      	ldr	r3, [r6, #0]
 8004cbc:	f8c4 a008 	str.w	sl, [r4, #8]
 8004cc0:	4630      	mov	r0, r6
 8004cc2:	68db      	ldr	r3, [r3, #12]
 8004cc4:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004cc6:	4798      	blx	r3
    newPresenter->activate();
 8004cc8:	6823      	ldr	r3, [r4, #0]
 8004cca:	4620      	mov	r0, r4
 8004ccc:	681b      	ldr	r3, [r3, #0]
 8004cce:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004cd0:	4629      	mov	r1, r5
 8004cd2:	4630      	mov	r0, r6
 8004cd4:	f012 f9a0 	bl	8017018 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004cd8:	682b      	ldr	r3, [r5, #0]
 8004cda:	4628      	mov	r0, r5
 8004cdc:	691b      	ldr	r3, [r3, #16]
 8004cde:	4798      	blx	r3
    newTransition->invalidate();
 8004ce0:	682b      	ldr	r3, [r5, #0]
 8004ce2:	4628      	mov	r0, r5
 8004ce4:	695b      	ldr	r3, [r3, #20]
}
 8004ce6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004cea:	4718      	bx	r3
    model->bind(newPresenter);
 8004cec:	4623      	mov	r3, r4
 8004cee:	e7e2      	b.n	8004cb6 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 8004cf0:	0802bdf4 	.word	0x0802bdf4
 8004cf4:	0802d02d 	.word	0x0802d02d
 8004cf8:	0802bf90 	.word	0x0802bf90
 8004cfc:	0802bfd7 	.word	0x0802bfd7
 8004d00:	0802c07a 	.word	0x0802c07a
 8004d04:	20012f6c 	.word	0x20012f6c
 8004d08:	20012f68 	.word	0x20012f68

08004d0c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 8004d0c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004d10:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004d14:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004d16:	68a0      	ldr	r0, [r4, #8]
 8004d18:	6803      	ldr	r3, [r0, #0]
 8004d1a:	6a1b      	ldr	r3, [r3, #32]
 8004d1c:	4798      	blx	r3
 8004d1e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004d22:	d205      	bcs.n	8004d30 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x24>
 8004d24:	4b42      	ldr	r3, [pc, #264]	; (8004e30 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 8004d26:	4a43      	ldr	r2, [pc, #268]	; (8004e34 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8004d28:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004d2a:	4843      	ldr	r0, [pc, #268]	; (8004e38 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 8004d2c:	f025 f9d2 	bl	802a0d4 <__assert_func>
 8004d30:	6860      	ldr	r0, [r4, #4]
 8004d32:	6803      	ldr	r3, [r0, #0]
 8004d34:	6a1b      	ldr	r3, [r3, #32]
 8004d36:	4798      	blx	r3
 8004d38:	280f      	cmp	r0, #15
 8004d3a:	d803      	bhi.n	8004d44 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x38>
 8004d3c:	4b3f      	ldr	r3, [pc, #252]	; (8004e3c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 8004d3e:	4a3d      	ldr	r2, [pc, #244]	; (8004e34 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8004d40:	21a4      	movs	r1, #164	; 0xa4
 8004d42:	e7f2      	b.n	8004d2a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004d44:	68e0      	ldr	r0, [r4, #12]
 8004d46:	6803      	ldr	r3, [r0, #0]
 8004d48:	6a1b      	ldr	r3, [r3, #32]
 8004d4a:	4798      	blx	r3
 8004d4c:	2837      	cmp	r0, #55	; 0x37
 8004d4e:	d803      	bhi.n	8004d58 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4c>
 8004d50:	4b3b      	ldr	r3, [pc, #236]	; (8004e40 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 8004d52:	4a38      	ldr	r2, [pc, #224]	; (8004e34 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8004d54:	21a5      	movs	r1, #165	; 0xa5
 8004d56:	e7e8      	b.n	8004d2a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004d58:	f010 fb32 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004d5c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004e44 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 8004d60:	3004      	adds	r0, #4
 8004d62:	f010 fb93 	bl	801548c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004d66:	f8d9 0000 	ldr.w	r0, [r9]
 8004d6a:	b110      	cbz	r0, 8004d72 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004d6c:	6803      	ldr	r3, [r0, #0]
 8004d6e:	68db      	ldr	r3, [r3, #12]
 8004d70:	4798      	blx	r3
    if (*currentTrans)
 8004d72:	f8d9 0000 	ldr.w	r0, [r9]
 8004d76:	b110      	cbz	r0, 8004d7e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004d78:	6803      	ldr	r3, [r0, #0]
 8004d7a:	681b      	ldr	r3, [r3, #0]
 8004d7c:	4798      	blx	r3
    if (*currentScreen)
 8004d7e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004e48 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 8004d82:	f8d8 0000 	ldr.w	r0, [r8]
 8004d86:	b110      	cbz	r0, 8004d8e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004d88:	6803      	ldr	r3, [r0, #0]
 8004d8a:	695b      	ldr	r3, [r3, #20]
 8004d8c:	4798      	blx	r3
    if (*currentPresenter)
 8004d8e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004d92:	b110      	cbz	r0, 8004d9a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004d94:	6803      	ldr	r3, [r0, #0]
 8004d96:	685b      	ldr	r3, [r3, #4]
 8004d98:	4798      	blx	r3
    if (*currentScreen)
 8004d9a:	f8d8 0000 	ldr.w	r0, [r8]
 8004d9e:	b110      	cbz	r0, 8004da6 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004da0:	6803      	ldr	r3, [r0, #0]
 8004da2:	681b      	ldr	r3, [r3, #0]
 8004da4:	4798      	blx	r3
    if (*currentPresenter)
 8004da6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004daa:	b110      	cbz	r0, 8004db2 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004dac:	6803      	ldr	r3, [r0, #0]
 8004dae:	689b      	ldr	r3, [r3, #8]
 8004db0:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004db2:	68e0      	ldr	r0, [r4, #12]
 8004db4:	2100      	movs	r1, #0
 8004db6:	f7ff f9d7 	bl	8004168 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004dba:	2114      	movs	r1, #20
 8004dbc:	4605      	mov	r5, r0
 8004dbe:	f7ff f9d7 	bl	8004170 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004dc2:	68a0      	ldr	r0, [r4, #8]
 8004dc4:	6803      	ldr	r3, [r0, #0]
 8004dc6:	2100      	movs	r1, #0
 8004dc8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004dca:	4798      	blx	r3
 8004dcc:	4606      	mov	r6, r0
 8004dce:	f003 fd3f 	bl	8008850 <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004dd2:	6860      	ldr	r0, [r4, #4]
 8004dd4:	6803      	ldr	r3, [r0, #0]
 8004dd6:	2100      	movs	r1, #0
 8004dd8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004dda:	4798      	blx	r3
 8004ddc:	4631      	mov	r1, r6
 8004dde:	4604      	mov	r4, r0
 8004de0:	f003 fd10 	bl	8008804 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 8004de4:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004de8:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004dec:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004df0:	b1dc      	cbz	r4, 8004e2a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x11e>
 8004df2:	1d23      	adds	r3, r4, #4
 8004df4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004df8:	6833      	ldr	r3, [r6, #0]
 8004dfa:	f8c4 a008 	str.w	sl, [r4, #8]
 8004dfe:	4630      	mov	r0, r6
 8004e00:	68db      	ldr	r3, [r3, #12]
 8004e02:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004e04:	4798      	blx	r3
    newPresenter->activate();
 8004e06:	6823      	ldr	r3, [r4, #0]
 8004e08:	4620      	mov	r0, r4
 8004e0a:	681b      	ldr	r3, [r3, #0]
 8004e0c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004e0e:	4629      	mov	r1, r5
 8004e10:	4630      	mov	r0, r6
 8004e12:	f012 f901 	bl	8017018 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004e16:	682b      	ldr	r3, [r5, #0]
 8004e18:	4628      	mov	r0, r5
 8004e1a:	691b      	ldr	r3, [r3, #16]
 8004e1c:	4798      	blx	r3
    newTransition->invalidate();
 8004e1e:	682b      	ldr	r3, [r5, #0]
 8004e20:	4628      	mov	r0, r5
 8004e22:	695b      	ldr	r3, [r3, #20]
}
 8004e24:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004e28:	4718      	bx	r3
    model->bind(newPresenter);
 8004e2a:	4623      	mov	r3, r4
 8004e2c:	e7e2      	b.n	8004df4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xe8>
 8004e2e:	bf00      	nop
 8004e30:	0802bdf4 	.word	0x0802bdf4
 8004e34:	0802d16f 	.word	0x0802d16f
 8004e38:	0802bf90 	.word	0x0802bf90
 8004e3c:	0802bfd7 	.word	0x0802bfd7
 8004e40:	0802c07a 	.word	0x0802c07a
 8004e44:	20012f6c 	.word	0x20012f6c
 8004e48:	20012f68 	.word	0x20012f68

08004e4c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 8004e4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004e50:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004e54:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004e56:	68a0      	ldr	r0, [r4, #8]
 8004e58:	6803      	ldr	r3, [r0, #0]
 8004e5a:	6a1b      	ldr	r3, [r3, #32]
 8004e5c:	4798      	blx	r3
 8004e5e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004e62:	d205      	bcs.n	8004e70 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x24>
 8004e64:	4b42      	ldr	r3, [pc, #264]	; (8004f70 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 8004e66:	4a43      	ldr	r2, [pc, #268]	; (8004f74 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8004e68:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004e6a:	4843      	ldr	r0, [pc, #268]	; (8004f78 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 8004e6c:	f025 f932 	bl	802a0d4 <__assert_func>
 8004e70:	6860      	ldr	r0, [r4, #4]
 8004e72:	6803      	ldr	r3, [r0, #0]
 8004e74:	6a1b      	ldr	r3, [r3, #32]
 8004e76:	4798      	blx	r3
 8004e78:	280f      	cmp	r0, #15
 8004e7a:	d803      	bhi.n	8004e84 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x38>
 8004e7c:	4b3f      	ldr	r3, [pc, #252]	; (8004f7c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 8004e7e:	4a3d      	ldr	r2, [pc, #244]	; (8004f74 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8004e80:	21a4      	movs	r1, #164	; 0xa4
 8004e82:	e7f2      	b.n	8004e6a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004e84:	68e0      	ldr	r0, [r4, #12]
 8004e86:	6803      	ldr	r3, [r0, #0]
 8004e88:	6a1b      	ldr	r3, [r3, #32]
 8004e8a:	4798      	blx	r3
 8004e8c:	2837      	cmp	r0, #55	; 0x37
 8004e8e:	d803      	bhi.n	8004e98 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4c>
 8004e90:	4b3b      	ldr	r3, [pc, #236]	; (8004f80 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 8004e92:	4a38      	ldr	r2, [pc, #224]	; (8004f74 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8004e94:	21a5      	movs	r1, #165	; 0xa5
 8004e96:	e7e8      	b.n	8004e6a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004e98:	f010 fa92 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004e9c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004f84 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 8004ea0:	3004      	adds	r0, #4
 8004ea2:	f010 faf3 	bl	801548c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004ea6:	f8d9 0000 	ldr.w	r0, [r9]
 8004eaa:	b110      	cbz	r0, 8004eb2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004eac:	6803      	ldr	r3, [r0, #0]
 8004eae:	68db      	ldr	r3, [r3, #12]
 8004eb0:	4798      	blx	r3
    if (*currentTrans)
 8004eb2:	f8d9 0000 	ldr.w	r0, [r9]
 8004eb6:	b110      	cbz	r0, 8004ebe <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004eb8:	6803      	ldr	r3, [r0, #0]
 8004eba:	681b      	ldr	r3, [r3, #0]
 8004ebc:	4798      	blx	r3
    if (*currentScreen)
 8004ebe:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004f88 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 8004ec2:	f8d8 0000 	ldr.w	r0, [r8]
 8004ec6:	b110      	cbz	r0, 8004ece <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004ec8:	6803      	ldr	r3, [r0, #0]
 8004eca:	695b      	ldr	r3, [r3, #20]
 8004ecc:	4798      	blx	r3
    if (*currentPresenter)
 8004ece:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004ed2:	b110      	cbz	r0, 8004eda <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004ed4:	6803      	ldr	r3, [r0, #0]
 8004ed6:	685b      	ldr	r3, [r3, #4]
 8004ed8:	4798      	blx	r3
    if (*currentScreen)
 8004eda:	f8d8 0000 	ldr.w	r0, [r8]
 8004ede:	b110      	cbz	r0, 8004ee6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004ee0:	6803      	ldr	r3, [r0, #0]
 8004ee2:	681b      	ldr	r3, [r3, #0]
 8004ee4:	4798      	blx	r3
    if (*currentPresenter)
 8004ee6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004eea:	b110      	cbz	r0, 8004ef2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004eec:	6803      	ldr	r3, [r0, #0]
 8004eee:	689b      	ldr	r3, [r3, #8]
 8004ef0:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004ef2:	68e0      	ldr	r0, [r4, #12]
 8004ef4:	2100      	movs	r1, #0
 8004ef6:	f7ff f937 	bl	8004168 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004efa:	2114      	movs	r1, #20
 8004efc:	4605      	mov	r5, r0
 8004efe:	f7ff f937 	bl	8004170 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004f02:	68a0      	ldr	r0, [r4, #8]
 8004f04:	6803      	ldr	r3, [r0, #0]
 8004f06:	2100      	movs	r1, #0
 8004f08:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f0a:	4798      	blx	r3
 8004f0c:	4606      	mov	r6, r0
 8004f0e:	f003 fb5b 	bl	80085c8 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004f12:	6860      	ldr	r0, [r4, #4]
 8004f14:	6803      	ldr	r3, [r0, #0]
 8004f16:	2100      	movs	r1, #0
 8004f18:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f1a:	4798      	blx	r3
 8004f1c:	4631      	mov	r1, r6
 8004f1e:	4604      	mov	r4, r0
 8004f20:	f003 fb2c 	bl	800857c <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8004f24:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004f28:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004f2c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004f30:	b1dc      	cbz	r4, 8004f6a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x11e>
 8004f32:	1d23      	adds	r3, r4, #4
 8004f34:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004f38:	6833      	ldr	r3, [r6, #0]
 8004f3a:	f8c4 a008 	str.w	sl, [r4, #8]
 8004f3e:	4630      	mov	r0, r6
 8004f40:	68db      	ldr	r3, [r3, #12]
 8004f42:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004f44:	4798      	blx	r3
    newPresenter->activate();
 8004f46:	6823      	ldr	r3, [r4, #0]
 8004f48:	4620      	mov	r0, r4
 8004f4a:	681b      	ldr	r3, [r3, #0]
 8004f4c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004f4e:	4629      	mov	r1, r5
 8004f50:	4630      	mov	r0, r6
 8004f52:	f012 f861 	bl	8017018 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004f56:	682b      	ldr	r3, [r5, #0]
 8004f58:	4628      	mov	r0, r5
 8004f5a:	691b      	ldr	r3, [r3, #16]
 8004f5c:	4798      	blx	r3
    newTransition->invalidate();
 8004f5e:	682b      	ldr	r3, [r5, #0]
 8004f60:	4628      	mov	r0, r5
 8004f62:	695b      	ldr	r3, [r3, #20]
}
 8004f64:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004f68:	4718      	bx	r3
    model->bind(newPresenter);
 8004f6a:	4623      	mov	r3, r4
 8004f6c:	e7e2      	b.n	8004f34 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xe8>
 8004f6e:	bf00      	nop
 8004f70:	0802bdf4 	.word	0x0802bdf4
 8004f74:	0802d29b 	.word	0x0802d29b
 8004f78:	0802bf90 	.word	0x0802bf90
 8004f7c:	0802bfd7 	.word	0x0802bfd7
 8004f80:	0802c07a 	.word	0x0802c07a
 8004f84:	20012f6c 	.word	0x20012f6c
 8004f88:	20012f68 	.word	0x20012f68

08004f8c <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8004f8c:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8004f8e:	4770      	bx	lr

08004f90 <_ZN21Gauge_with_ValuesBaseD1Ev>:
}

Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
{

}
 8004f90:	4770      	bx	lr

08004f92 <_ZN21Gauge_with_ValuesBase10initializeEv>:

void Gauge_with_ValuesBase::initialize()
{

}
 8004f92:	4770      	bx	lr

08004f94 <_ZN21Gauge_with_ValuesBaseD0Ev>:
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 8004f94:	b510      	push	{r4, lr}
}
 8004f96:	f44f 7162 	mov.w	r1, #904	; 0x388
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 8004f9a:	4604      	mov	r4, r0
}
 8004f9c:	f024 fa87 	bl	80294ae <_ZdlPvj>
 8004fa0:	4620      	mov	r0, r4
 8004fa2:	bd10      	pop	{r4, pc}

08004fa4 <_ZN21Gauge_with_ValuesBaseC1Ev>:
Gauge_with_ValuesBase::Gauge_with_ValuesBase()
 8004fa4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
          touchable(false),
 8004fa8:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004fac:	4680      	mov	r8, r0
        : x(0), y(0), width(0), height(0)
 8004fae:	2600      	movs	r6, #0
 8004fb0:	ed2d 8b02 	vpush	{d8}
 8004fb4:	8483      	strh	r3, [r0, #36]	; 0x24
 8004fb6:	4bb2      	ldr	r3, [pc, #712]	; (8005280 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2dc>)
          firstChild(0)
 8004fb8:	6286      	str	r6, [r0, #40]	; 0x28
 8004fba:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8004fbe:	e9c0 6603 	strd	r6, r6, [r0, #12]
          nextSibling(0),
 8004fc2:	e9c0 6605 	strd	r6, r6, [r0, #20]
          cachedAbsX(0),
 8004fc6:	e9c0 6607 	strd	r6, r6, [r0, #28]
 8004fca:	f848 3b2c 	str.w	r3, [r8], #44
 8004fce:	b08b      	sub	sp, #44	; 0x2c
 8004fd0:	4604      	mov	r4, r0
 8004fd2:	4640      	mov	r0, r8
 8004fd4:	f7fd fc42 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 8004fd8:	f104 0374 	add.w	r3, r4, #116	; 0x74
 8004fdc:	f104 0bbc 	add.w	fp, r4, #188	; 0xbc
 8004fe0:	4618      	mov	r0, r3
 8004fe2:	9303      	str	r3, [sp, #12]
 8004fe4:	f504 7a82 	add.w	sl, r4, #260	; 0x104
 8004fe8:	f7fd fc38 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 8004fec:	4658      	mov	r0, fp
 8004fee:	f7fd fc35 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 8004ff2:	f504 79a8 	add.w	r9, r4, #336	; 0x150
        : TextAreaWithWildcardBase(), wc1(0)
 8004ff6:	4da3      	ldr	r5, [pc, #652]	; (8005284 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e0>)
        : TextArea()
 8004ff8:	4650      	mov	r0, sl
 8004ffa:	f7fd fc2f 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8004ffe:	f8c4 5104 	str.w	r5, [r4, #260]	; 0x104
 8005002:	f8c4 614c 	str.w	r6, [r4, #332]	; 0x14c
        : TextArea()
 8005006:	4648      	mov	r0, r9
 8005008:	f7fd fc28 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 800500c:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
 8005010:	f504 77f4 	add.w	r7, r4, #488	; 0x1e8
 8005014:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8005016:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 800501a:	f8c4 6198 	str.w	r6, [r4, #408]	; 0x198
 800501e:	ee08 3a10 	vmov	s16, r3
        : TextArea()
 8005022:	f7fd fc1b 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8005026:	f8c4 519c 	str.w	r5, [r4, #412]	; 0x19c
 800502a:	f8c4 61e4 	str.w	r6, [r4, #484]	; 0x1e4
 800502e:	4638      	mov	r0, r7
 8005030:	f00d f980 	bl	8012334 <_ZN8touchgfx5GaugeC1Ev>
        rect.width = width;
 8005034:	4a94      	ldr	r2, [pc, #592]	; (8005288 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e4>)
 8005036:	60a2      	str	r2, [r4, #8]
    textArea4_2.setXY(217, 109);
 8005038:	4640      	mov	r0, r8
 800503a:	226d      	movs	r2, #109	; 0x6d
 800503c:	21d9      	movs	r1, #217	; 0xd9
 800503e:	ad04      	add	r5, sp, #16
 8005040:	f7fd fbd9 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005044:	f04f 33ff 	mov.w	r3, #4294967295
 8005048:	65e3      	str	r3, [r4, #92]	; 0x5c
        boundingArea = calculateBoundingArea();
 800504a:	4641      	mov	r1, r8
 800504c:	4628      	mov	r0, r5
        linespace = space;
 800504e:	f8a4 6060 	strh.w	r6, [r4, #96]	; 0x60
        boundingArea = calculateBoundingArea();
 8005052:	f00c fe37 	bl	8011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005056:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800505a:	f104 0c68 	add.w	ip, r4, #104	; 0x68
 800505e:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8005062:	4b8a      	ldr	r3, [pc, #552]	; (800528c <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8005064:	9308      	str	r3, [sp, #32]
 8005066:	222f      	movs	r2, #47	; 0x2f
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D6CM));
 8005068:	a908      	add	r1, sp, #32
 800506a:	4640      	mov	r0, r8
 800506c:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8005070:	f00d f8c2 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_2);
 8005074:	4641      	mov	r1, r8
 8005076:	4620      	mov	r0, r4
 8005078:	f00a ff0a 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 109);
 800507c:	9b03      	ldr	r3, [sp, #12]
 800507e:	4631      	mov	r1, r6
 8005080:	4618      	mov	r0, r3
 8005082:	226d      	movs	r2, #109	; 0x6d
 8005084:	f7fd fbb7 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 8005088:	9b03      	ldr	r3, [sp, #12]
        linespace = space;
 800508a:	f8a4 60a8 	strh.w	r6, [r4, #168]	; 0xa8
        color = newColor;
 800508e:	f04f 32ff 	mov.w	r2, #4294967295
 8005092:	f8c4 20a4 	str.w	r2, [r4, #164]	; 0xa4
        boundingArea = calculateBoundingArea();
 8005096:	4619      	mov	r1, r3
 8005098:	4628      	mov	r0, r5
 800509a:	f00c fe13 	bl	8011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800509e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80050a2:	4b7a      	ldr	r3, [pc, #488]	; (800528c <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 80050a4:	9308      	str	r3, [sp, #32]
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YENI));
 80050a6:	9b03      	ldr	r3, [sp, #12]
 80050a8:	f104 0cb0 	add.w	ip, r4, #176	; 0xb0
 80050ac:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 80050b0:	2230      	movs	r2, #48	; 0x30
 80050b2:	a908      	add	r1, sp, #32
 80050b4:	4618      	mov	r0, r3
 80050b6:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 80050ba:	f00d f89d 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_1);
 80050be:	9b03      	ldr	r3, [sp, #12]
 80050c0:	4620      	mov	r0, r4
 80050c2:	4619      	mov	r1, r3
 80050c4:	f00a fee4 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 0);
 80050c8:	4632      	mov	r2, r6
 80050ca:	4658      	mov	r0, fp
 80050cc:	2171      	movs	r1, #113	; 0x71
 80050ce:	f7fd fb92 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80050d2:	f04f 32ff 	mov.w	r2, #4294967295
 80050d6:	f8c4 20ec 	str.w	r2, [r4, #236]	; 0xec
        boundingArea = calculateBoundingArea();
 80050da:	4659      	mov	r1, fp
 80050dc:	4628      	mov	r0, r5
        linespace = space;
 80050de:	f8a4 60f0 	strh.w	r6, [r4, #240]	; 0xf0
        boundingArea = calculateBoundingArea();
 80050e2:	f00c fdef 	bl	8011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80050e6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80050ea:	f104 03f8 	add.w	r3, r4, #248	; 0xf8
 80050ee:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80050f2:	4b66      	ldr	r3, [pc, #408]	; (800528c <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 80050f4:	9308      	str	r3, [sp, #32]
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z8XU));
 80050f6:	a908      	add	r1, sp, #32
 80050f8:	2331      	movs	r3, #49	; 0x31
 80050fa:	4658      	mov	r0, fp
 80050fc:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8005100:	f00d f87a 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4);
 8005104:	4659      	mov	r1, fp
 8005106:	4620      	mov	r0, r4
 8005108:	f00a fec2 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5.setXY(76, 124);
 800510c:	4650      	mov	r0, sl
 800510e:	227c      	movs	r2, #124	; 0x7c
 8005110:	214c      	movs	r1, #76	; 0x4c
 8005112:	f7fd fb70 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 8005116:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
        linespace = space;
 800511a:	f8a4 6138 	strh.w	r6, [r4, #312]	; 0x138
        color = newColor;
 800511e:	f04f 32ff 	mov.w	r2, #4294967295
 8005122:	f8c4 2134 	str.w	r2, [r4, #308]	; 0x134
        boundingArea = calculateBoundingArea();
 8005126:	4651      	mov	r1, sl
 8005128:	4628      	mov	r0, r5
 800512a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800512e:	4798      	blx	r3
 8005130:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005134:	f504 73a0 	add.w	r3, r4, #320	; 0x140
 8005138:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800513c:	4b53      	ldr	r3, [pc, #332]	; (800528c <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 800513e:	9308      	str	r3, [sp, #32]
    textArea5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RQ3J));
 8005140:	a908      	add	r1, sp, #32
 8005142:	232e      	movs	r3, #46	; 0x2e
 8005144:	4650      	mov	r0, sl
 8005146:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800514a:	f00d f855 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5);
 800514e:	4651      	mov	r1, sl
 8005150:	4620      	mov	r0, r4
 8005152:	f00a fe9d 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_1.setXY(86, 139);
 8005156:	4648      	mov	r0, r9
 8005158:	228b      	movs	r2, #139	; 0x8b
 800515a:	2156      	movs	r1, #86	; 0x56
 800515c:	f7fd fb4b 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 8005160:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
        linespace = space;
 8005164:	f8a4 6184 	strh.w	r6, [r4, #388]	; 0x184
        color = newColor;
 8005168:	f04f 32ff 	mov.w	r2, #4294967295
 800516c:	f8c4 2180 	str.w	r2, [r4, #384]	; 0x180
        boundingArea = calculateBoundingArea();
 8005170:	4649      	mov	r1, r9
 8005172:	4628      	mov	r0, r5
 8005174:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005178:	4798      	blx	r3
 800517a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800517e:	f504 73c6 	add.w	r3, r4, #396	; 0x18c
 8005182:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005186:	4b41      	ldr	r3, [pc, #260]	; (800528c <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8005188:	9308      	str	r3, [sp, #32]
    textArea5_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_54VS));
 800518a:	a908      	add	r1, sp, #32
 800518c:	232d      	movs	r3, #45	; 0x2d
 800518e:	4648      	mov	r0, r9
 8005190:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8005194:	f00d f830 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_1);
 8005198:	4649      	mov	r1, r9
 800519a:	4620      	mov	r0, r4
 800519c:	f00a fe78 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_2.setXY(86, 154);
 80051a0:	ee18 0a10 	vmov	r0, s16
 80051a4:	229a      	movs	r2, #154	; 0x9a
 80051a6:	2156      	movs	r1, #86	; 0x56
 80051a8:	f7fd fb25 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 80051ac:	f8d4 319c 	ldr.w	r3, [r4, #412]	; 0x19c
        linespace = space;
 80051b0:	f8a4 61d0 	strh.w	r6, [r4, #464]	; 0x1d0
        color = newColor;
 80051b4:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 80051b8:	ee18 1a10 	vmov	r1, s16
        color = newColor;
 80051bc:	f8c4 21cc 	str.w	r2, [r4, #460]	; 0x1cc
        boundingArea = calculateBoundingArea();
 80051c0:	4628      	mov	r0, r5
 80051c2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80051c6:	4798      	blx	r3
 80051c8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80051cc:	f504 73ec 	add.w	r3, r4, #472	; 0x1d8
 80051d0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80051d4:	4b2d      	ldr	r3, [pc, #180]	; (800528c <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 80051d6:	9308      	str	r3, [sp, #32]
    textArea5_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UKDF));
 80051d8:	ee18 0a10 	vmov	r0, s16
 80051dc:	232c      	movs	r3, #44	; 0x2c
 80051de:	a908      	add	r1, sp, #32
 80051e0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80051e4:	f00d f808 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_2);
 80051e8:	ee18 1a10 	vmov	r1, s16
 80051ec:	4620      	mov	r0, r4
 80051ee:	f00a fe4f 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80051f2:	2304      	movs	r3, #4
    gauge1.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 80051f4:	a908      	add	r1, sp, #32
 80051f6:	4638      	mov	r0, r7
 80051f8:	f8ad 3020 	strh.w	r3, [sp, #32]
 80051fc:	f00a fdda 	bl	800fdb4 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
        setXY(x, y);
 8005200:	2212      	movs	r2, #18
 8005202:	4638      	mov	r0, r7
 8005204:	211c      	movs	r1, #28
 8005206:	f7fd faf6 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800520a:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 800520e:	4638      	mov	r0, r7
 8005210:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005212:	21b8      	movs	r1, #184	; 0xb8
 8005214:	4798      	blx	r3
        setHeight(height);
 8005216:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 800521a:	4638      	mov	r0, r7
 800521c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800521e:	216a      	movs	r1, #106	; 0x6a
 8005220:	4798      	blx	r3
    gauge1.setCenter(92, 92);
 8005222:	225c      	movs	r2, #92	; 0x5c
 8005224:	4611      	mov	r1, r2
 8005226:	4638      	mov	r0, r7
 8005228:	f00d f92f 	bl	801248a <_ZN8touchgfx5Gauge9setCenterEii>
    gauge1.setStartEndAngle(-90, 90);
 800522c:	4638      	mov	r0, r7
 800522e:	225a      	movs	r2, #90	; 0x5a
 8005230:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8005234:	f00d f9ae 	bl	8012594 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    gauge1.setRange(-90, 90);
 8005238:	4633      	mov	r3, r6
 800523a:	225a      	movs	r2, #90	; 0x5a
 800523c:	4638      	mov	r0, r7
 800523e:	9600      	str	r6, [sp, #0]
 8005240:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8005244:	f00a fc63 	bl	800fb0e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    gauge1.setValue(0);
 8005248:	4631      	mov	r1, r6
 800524a:	4638      	mov	r0, r7
 800524c:	f00d f94c 	bl	80124e8 <_ZN8touchgfx5Gauge8setValueEi>
    gauge1.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8005250:	2335      	movs	r3, #53	; 0x35
 8005252:	2208      	movs	r2, #8
 8005254:	4638      	mov	r0, r7
 8005256:	2105      	movs	r1, #5
 8005258:	f00d f902 	bl	8012460 <_ZN8touchgfx5Gauge9setNeedleEtss>
    gauge1.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 800525c:	4638      	mov	r0, r7
 800525e:	2101      	movs	r1, #1
 8005260:	f00d f8a0 	bl	80123a4 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    gauge1.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8005264:	4638      	mov	r0, r7
 8005266:	2101      	movs	r1, #1
 8005268:	f00d f89f 	bl	80123aa <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    add(gauge1);
 800526c:	4620      	mov	r0, r4
 800526e:	4639      	mov	r1, r7
 8005270:	f00a fe0e 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005274:	4620      	mov	r0, r4
 8005276:	b00b      	add	sp, #44	; 0x2c
 8005278:	ecbd 8b02 	vpop	{d8}
 800527c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005280:	0802d504 	.word	0x0802d504
 8005284:	0802bc88 	.word	0x0802bc88
 8005288:	00a900f0 	.word	0x00a900f0
 800528c:	0802bc78 	.word	0x0802bc78

08005290 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8005290:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8005292:	4770      	bx	lr

08005294 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8005294:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8005296:	4770      	bx	lr

08005298 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8005298:	4770      	bx	lr

0800529a <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800529a:	888b      	ldrh	r3, [r1, #4]
 800529c:	69c0      	ldr	r0, [r0, #28]
 800529e:	680a      	ldr	r2, [r1, #0]
 80052a0:	0adb      	lsrs	r3, r3, #11
 80052a2:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 80052a6:	4410      	add	r0, r2
 80052a8:	4770      	bx	lr

080052aa <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80052aa:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 80052ac:	b1c2      	cbz	r2, 80052e0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 80052ae:	7b13      	ldrb	r3, [r2, #12]
 80052b0:	b1b3      	cbz	r3, 80052e0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80052b2:	7b54      	ldrb	r4, [r2, #13]
 80052b4:	7ad2      	ldrb	r2, [r2, #11]
 80052b6:	0224      	lsls	r4, r4, #8
 80052b8:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80052bc:	4314      	orrs	r4, r2
 80052be:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80052c0:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80052c2:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 80052c6:	8813      	ldrh	r3, [r2, #0]
 80052c8:	428b      	cmp	r3, r1
 80052ca:	d102      	bne.n	80052d2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 80052cc:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 80052d0:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 80052d2:	d805      	bhi.n	80052e0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80052d4:	3801      	subs	r0, #1
 80052d6:	b280      	uxth	r0, r0
 80052d8:	3204      	adds	r2, #4
 80052da:	2800      	cmp	r0, #0
 80052dc:	d1f3      	bne.n	80052c6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80052de:	e7f7      	b.n	80052d0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 80052e0:	2000      	movs	r0, #0
 80052e2:	e7f5      	b.n	80052d0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

080052e4 <_ZN8touchgfx13GeneratedFontD0Ev>:
 80052e4:	b510      	push	{r4, lr}
 80052e6:	212c      	movs	r1, #44	; 0x2c
 80052e8:	4604      	mov	r4, r0
 80052ea:	f024 f8e0 	bl	80294ae <_ZdlPvj>
 80052ee:	4620      	mov	r0, r4
 80052f0:	bd10      	pop	{r4, pc}
	...

080052f4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 80052f4:	b530      	push	{r4, r5, lr}
 80052f6:	b08b      	sub	sp, #44	; 0x2c
 80052f8:	4604      	mov	r4, r0
      arabicTable(formsTable)
 80052fa:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 80052fe:	9508      	str	r5, [sp, #32]
 8005300:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 8005304:	9507      	str	r5, [sp, #28]
 8005306:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800530a:	9506      	str	r5, [sp, #24]
 800530c:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8005310:	9505      	str	r5, [sp, #20]
 8005312:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8005316:	9504      	str	r5, [sp, #16]
 8005318:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800531c:	9503      	str	r5, [sp, #12]
 800531e:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8005322:	9502      	str	r5, [sp, #8]
 8005324:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8005328:	9501      	str	r5, [sp, #4]
 800532a:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800532e:	9500      	str	r5, [sp, #0]
 8005330:	f011 f9dc 	bl	80166ec <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8005334:	4b06      	ldr	r3, [pc, #24]	; (8005350 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 8005336:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8005338:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800533a:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 800533c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800533e:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8005340:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005342:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 8005344:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8005346:	62a3      	str	r3, [r4, #40]	; 0x28
}
 8005348:	4620      	mov	r0, r4
 800534a:	b00b      	add	sp, #44	; 0x2c
 800534c:	bd30      	pop	{r4, r5, pc}
 800534e:	bf00      	nop
 8005350:	0802d598 	.word	0x0802d598

08005354 <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 8005354:	4770      	bx	lr

08005356 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005356:	4770      	bx	lr

08005358 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005358:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800535a:	68c2      	ldr	r2, [r0, #12]
 800535c:	6844      	ldr	r4, [r0, #4]
 800535e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005360:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005362:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005366:	07d2      	lsls	r2, r2, #31
 8005368:	bf48      	it	mi
 800536a:	5962      	ldrmi	r2, [r4, r5]
 800536c:	689b      	ldr	r3, [r3, #8]
    }
 800536e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005370:	bf48      	it	mi
 8005372:	58d3      	ldrmi	r3, [r2, r3]
 8005374:	4718      	bx	r3

08005376 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005376:	6843      	ldr	r3, [r0, #4]
 8005378:	b12b      	cbz	r3, 8005386 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800537a:	6883      	ldr	r3, [r0, #8]
 800537c:	b92b      	cbnz	r3, 800538a <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800537e:	68c0      	ldr	r0, [r0, #12]
 8005380:	f000 0001 	and.w	r0, r0, #1
 8005384:	4770      	bx	lr
 8005386:	4618      	mov	r0, r3
 8005388:	4770      	bx	lr
 800538a:	2001      	movs	r0, #1
    }
 800538c:	4770      	bx	lr

0800538e <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800538e:	b510      	push	{r4, lr}
 8005390:	2110      	movs	r1, #16
 8005392:	4604      	mov	r4, r0
 8005394:	f024 f88b 	bl	80294ae <_ZdlPvj>
 8005398:	4620      	mov	r0, r4
 800539a:	bd10      	pop	{r4, pc}

0800539c <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 800539c:	b510      	push	{r4, lr}
 800539e:	4b03      	ldr	r3, [pc, #12]	; (80053ac <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 80053a0:	6003      	str	r3, [r0, #0]
 80053a2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80053a4:	f00e fb0a 	bl	80139bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80053a8:	4620      	mov	r0, r4
 80053aa:	bd10      	pop	{r4, pc}
 80053ac:	0802d610 	.word	0x0802d610

080053b0 <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 80053b0:	b507      	push	{r0, r1, r2, lr}
 80053b2:	4b07      	ldr	r3, [pc, #28]	; (80053d0 <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 80053b4:	6003      	str	r3, [r0, #0]
 80053b6:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80053b8:	f00e fb00 	bl	80139bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80053bc:	9801      	ldr	r0, [sp, #4]
 80053be:	f241 117c 	movw	r1, #4476	; 0x117c
 80053c2:	f024 f874 	bl	80294ae <_ZdlPvj>
 80053c6:	9801      	ldr	r0, [sp, #4]
 80053c8:	b003      	add	sp, #12
 80053ca:	f85d fb04 	ldr.w	pc, [sp], #4
 80053ce:	bf00      	nop
 80053d0:	0802d610 	.word	0x0802d610

080053d4 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80053d4:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel1)
 80053d6:	f500 7334 	add.w	r3, r0, #720	; 0x2d0
 80053da:	4299      	cmp	r1, r3
{
 80053dc:	4604      	mov	r4, r0
 80053de:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel1)
 80053e0:	d103      	bne.n	80053ea <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80053e2:	f00f ffed 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 80053e6:	f7fe fb1d 	bl	8003a24 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 80053ea:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80053ee:	429d      	cmp	r5, r3
 80053f0:	d103      	bne.n	80053fa <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80053f2:	f00f ffe5 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Calibration
        //Go to Calibration with screen transition towards East
        application().gotoCalibrationScreenWipeTransitionEast();
 80053f6:	f7fe fba5 	bl	8003b44 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel3)
 80053fa:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80053fe:	429d      	cmp	r5, r3
 8005400:	d103      	bne.n	800540a <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 8005402:	f00f ffdd 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel3 clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 8005406:	f7fe fbdd 	bl	8003bc4 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon1)
 800540a:	f504 7446 	add.w	r4, r4, #792	; 0x318
 800540e:	42a5      	cmp	r5, r4
 8005410:	d10a      	bne.n	8005428 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon1 clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8005412:	4806      	ldr	r0, [pc, #24]	; (800542c <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 8005414:	2200      	movs	r2, #0
 8005416:	2120      	movs	r1, #32
 8005418:	f004 fa52 	bl	80098c0 <HAL_GPIO_WritePin>
 800541c:	f00f ffd0 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon1 clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 8005420:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 8005424:	f7fe bbde 	b.w	8003be4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8005428:	bd38      	pop	{r3, r4, r5, pc}
 800542a:	bf00      	nop
 800542c:	40021000 	.word	0x40021000

08005430 <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 8005430:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005434:	ed2d 8b06 	vpush	{d8-d10}
 8005438:	4604      	mov	r4, r0
 800543a:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 800543c:	46a3      	mov	fp, r4
        : presenter(0)
 800543e:	2500      	movs	r5, #0
 8005440:	f011 fc3e 	bl	8016cc0 <_ZN8touchgfx6ScreenC1Ev>
 8005444:	4b6a      	ldr	r3, [pc, #424]	; (80055f0 <_ZN17Main_MenuViewBaseC1Ev+0x1c0>)
 8005446:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005448:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 800544c:	2226      	movs	r2, #38	; 0x26
 800544e:	4629      	mov	r1, r5
 8005450:	4658      	mov	r0, fp
 8005452:	f025 f844 	bl	802a4de <memset>
 8005456:	4658      	mov	r0, fp
 8005458:	f7fd f9ee 	bl	8002838 <_ZN8touchgfx6WidgetC1Ev>
 800545c:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005460:	26ff      	movs	r6, #255	; 0xff
 8005462:	4b64      	ldr	r3, [pc, #400]	; (80055f4 <_ZN17Main_MenuViewBaseC1Ev+0x1c4>)
 8005464:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005466:	2226      	movs	r2, #38	; 0x26
 8005468:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800546c:	4629      	mov	r1, r5
 800546e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005472:	4650      	mov	r0, sl
        : color(col)
 8005474:	66a5      	str	r5, [r4, #104]	; 0x68
 8005476:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800547a:	f025 f830 	bl	802a4de <memset>
 800547e:	4650      	mov	r0, sl
 8005480:	f7fd f9da 	bl	8002838 <_ZN8touchgfx6WidgetC1Ev>
 8005484:	4b5c      	ldr	r3, [pc, #368]	; (80055f8 <_ZN17Main_MenuViewBaseC1Ev+0x1c8>)
 8005486:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005488:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800548c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005490:	a90c      	add	r1, sp, #48	; 0x30
 8005492:	4650      	mov	r0, sl
 8005494:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005498:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800549c:	f00d fa87 	bl	80129ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80054a0:	4648      	mov	r0, r9
 80054a2:	f7fd f9db 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 80054a6:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 80054aa:	4b54      	ldr	r3, [pc, #336]	; (80055fc <_ZN17Main_MenuViewBaseC1Ev+0x1cc>)
 80054ac:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80054b0:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80054b4:	4638      	mov	r0, r7
 80054b6:	f00c f943 	bl	8011740 <_ZN8touchgfx4LineC1Ev>
 80054ba:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80054be:	4618      	mov	r0, r3
 80054c0:	9303      	str	r3, [sp, #12]
 80054c2:	f7fb fdc1 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80054c6:	4b4e      	ldr	r3, [pc, #312]	; (8005600 <_ZN17Main_MenuViewBaseC1Ev+0x1d0>)
 80054c8:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80054cc:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 80054d0:	3324      	adds	r3, #36	; 0x24
 80054d2:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 80054d6:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 80054da:	4640      	mov	r0, r8
 80054dc:	f7fd f9be 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 80054e0:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 80054e4:	4618      	mov	r0, r3
 80054e6:	ee08 3a10 	vmov	s16, r3
 80054ea:	f7fd f9b7 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 80054ee:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80054f2:	4618      	mov	r0, r3
 80054f4:	ee08 3a90 	vmov	s17, r3
 80054f8:	f7fd f9b0 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 80054fc:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005500:	4618      	mov	r0, r3
 8005502:	ee09 3a10 	vmov	s18, r3
 8005506:	f00d fb93 	bl	8012c30 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800550a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800550e:	4618      	mov	r0, r3
 8005510:	ee09 3a90 	vmov	s19, r3
 8005514:	f00d fb8c 	bl	8012c30 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005518:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800551c:	4618      	mov	r0, r3
 800551e:	ee0a 3a10 	vmov	s20, r3
 8005522:	f00d fb85 	bl	8012c30 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005526:	f504 7346 	add.w	r3, r4, #792	; 0x318
 800552a:	4618      	mov	r0, r3
 800552c:	ee0a 3a90 	vmov	s21, r3
 8005530:	f00d fa16 	bl	8012960 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005534:	4a33      	ldr	r2, [pc, #204]	; (8005604 <_ZN17Main_MenuViewBaseC1Ev+0x1d4>)
 8005536:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800553a:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 800553e:	4a32      	ldr	r2, [pc, #200]	; (8005608 <_ZN17Main_MenuViewBaseC1Ev+0x1d8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005540:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005544:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 8005548:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 800554c:	f00e fa2c 	bl	80139a8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005550:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005554:	462a      	mov	r2, r5
 8005556:	4658      	mov	r0, fp
 8005558:	9300      	str	r3, [sp, #0]
 800555a:	4629      	mov	r1, r5
 800555c:	23f0      	movs	r3, #240	; 0xf0
 800555e:	f7fd f957 	bl	8002810 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005562:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005564:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005568:	66a3      	str	r3, [r4, #104]	; 0x68
 800556a:	4659      	mov	r1, fp
 800556c:	4630      	mov	r0, r6
 800556e:	f00a fc8f 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005572:	462a      	mov	r2, r5
 8005574:	4650      	mov	r0, sl
 8005576:	4629      	mov	r1, r5
 8005578:	f7fd f93d 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 800557c:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800557e:	4650      	mov	r0, sl
 8005580:	a90c      	add	r1, sp, #48	; 0x30
 8005582:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8005586:	f00d fa12 	bl	80129ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800558a:	4651      	mov	r1, sl
 800558c:	4630      	mov	r0, r6
 800558e:	f00a fc7f 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(86, 308);
 8005592:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005596:	2156      	movs	r1, #86	; 0x56
 8005598:	4648      	mov	r0, r9
 800559a:	f7fd f92c 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 800559e:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80055a2:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80055a6:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 80055aa:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 80055ae:	4650      	mov	r0, sl
 80055b0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80055b4:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80055b8:	4649      	mov	r1, r9
 80055ba:	4798      	blx	r3
 80055bc:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 80055c0:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80055c4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80055c8:	4b10      	ldr	r3, [pc, #64]	; (800560c <_ZN17Main_MenuViewBaseC1Ev+0x1dc>)
 80055ca:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 80055cc:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 80055d0:	b92b      	cbnz	r3, 80055de <_ZN17Main_MenuViewBaseC1Ev+0x1ae>
 80055d2:	4b0f      	ldr	r3, [pc, #60]	; (8005610 <_ZN17Main_MenuViewBaseC1Ev+0x1e0>)
 80055d4:	4a0f      	ldr	r2, [pc, #60]	; (8005614 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 80055d6:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80055d8:	480f      	ldr	r0, [pc, #60]	; (8005618 <_ZN17Main_MenuViewBaseC1Ev+0x1e8>)
 80055da:	f024 fd7b 	bl	802a0d4 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80055de:	4b0f      	ldr	r3, [pc, #60]	; (800561c <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80055e0:	881b      	ldrh	r3, [r3, #0]
 80055e2:	2b2a      	cmp	r3, #42	; 0x2a
 80055e4:	d81e      	bhi.n	8005624 <_ZN17Main_MenuViewBaseC1Ev+0x1f4>
 80055e6:	4b0e      	ldr	r3, [pc, #56]	; (8005620 <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 80055e8:	4a0a      	ldr	r2, [pc, #40]	; (8005614 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 80055ea:	2161      	movs	r1, #97	; 0x61
 80055ec:	e7f4      	b.n	80055d8 <_ZN17Main_MenuViewBaseC1Ev+0x1a8>
 80055ee:	bf00      	nop
 80055f0:	0802d610 	.word	0x0802d610
 80055f4:	0802e5d0 	.word	0x0802e5d0
 80055f8:	0802e798 	.word	0x0802e798
 80055fc:	0802bc88 	.word	0x0802bc88
 8005600:	0802e304 	.word	0x0802e304
 8005604:	0802d5f8 	.word	0x0802d5f8
 8005608:	080053d5 	.word	0x080053d5
 800560c:	20012f7c 	.word	0x20012f7c
 8005610:	0802bac8 	.word	0x0802bac8
 8005614:	0802bbca 	.word	0x0802bbca
 8005618:	0802bb45 	.word	0x0802bb45
 800561c:	20012f80 	.word	0x20012f80
 8005620:	0802bb8c 	.word	0x0802bb8c
        return texts->getText(typedTextId);
 8005624:	4ba5      	ldr	r3, [pc, #660]	; (80058bc <_ZN17Main_MenuViewBaseC1Ev+0x48c>)
 8005626:	212a      	movs	r1, #42	; 0x2a
 8005628:	6818      	ldr	r0, [r3, #0]
 800562a:	f002 fde7 	bl	80081fc <_ZNK8touchgfx5Texts7getTextEt>
 800562e:	4aa4      	ldr	r2, [pc, #656]	; (80058c0 <_ZN17Main_MenuViewBaseC1Ev+0x490>)
 8005630:	4603      	mov	r3, r0
 8005632:	2104      	movs	r1, #4
 8005634:	4650      	mov	r0, sl
 8005636:	f013 f833 	bl	80186a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3.resizeToCurrentText();
 800563a:	4648      	mov	r0, r9
        wc1 = value;
 800563c:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8005640:	f00c fdba 	bl	80121b8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005644:	4b9f      	ldr	r3, [pc, #636]	; (80058c4 <_ZN17Main_MenuViewBaseC1Ev+0x494>)
 8005646:	930c      	str	r3, [sp, #48]	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 8005648:	a90c      	add	r1, sp, #48	; 0x30
 800564a:	232b      	movs	r3, #43	; 0x2b
 800564c:	4648      	mov	r0, r9
 800564e:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005652:	f00c fdd1 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005656:	4649      	mov	r1, r9
 8005658:	4630      	mov	r0, r6
 800565a:	f00a fc19 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800565e:	230a      	movs	r3, #10
 8005660:	9300      	str	r3, [sp, #0]
 8005662:	2232      	movs	r2, #50	; 0x32
 8005664:	23f0      	movs	r3, #240	; 0xf0
 8005666:	4629      	mov	r1, r5
 8005668:	4638      	mov	r0, r7
 800566a:	f7fd f8d1 	bl	8002810 <_ZN8touchgfx8Drawable11setPositionEssss>
 800566e:	9b03      	ldr	r3, [sp, #12]
 8005670:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005674:	22a0      	movs	r2, #160	; 0xa0
 8005676:	4611      	mov	r1, r2
 8005678:	4638      	mov	r0, r7
 800567a:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 800567e:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8005682:	f00c f973 	bl	801196c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005686:	22a0      	movs	r2, #160	; 0xa0
 8005688:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800568c:	4638      	mov	r0, r7
 800568e:	f00c f978 	bl	8011982 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005692:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8005696:	2b20      	cmp	r3, #32
 8005698:	d005      	beq.n	80056a6 <_ZN17Main_MenuViewBaseC1Ev+0x276>
        lineWidthQ5 = widthQ5;
 800569a:	2320      	movs	r3, #32
 800569c:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 80056a0:	4638      	mov	r0, r7
 80056a2:	f00c f86d 	bl	8011780 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80056a6:	4638      	mov	r0, r7
 80056a8:	2101      	movs	r1, #1
 80056aa:	f00c f975 	bl	8011998 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80056ae:	4639      	mov	r1, r7
 80056b0:	4630      	mov	r0, r6
 80056b2:	ad04      	add	r5, sp, #16
        color = newColor;
 80056b4:	f04f 37ff 	mov.w	r7, #4294967295
 80056b8:	f00a fbea 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80056bc:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 80056c0:	2223      	movs	r2, #35	; 0x23
 80056c2:	4640      	mov	r0, r8
 80056c4:	2145      	movs	r1, #69	; 0x45
 80056c6:	f7fd f896 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80056ca:	4641      	mov	r1, r8
 80056cc:	4628      	mov	r0, r5
        color = newColor;
 80056ce:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 80056d2:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 80056d6:	f00c faf5 	bl	8011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80056da:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 80056de:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 80056e2:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80056e6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80056ea:	f8df b1d8 	ldr.w	fp, [pc, #472]	; 80058c4 <_ZN17Main_MenuViewBaseC1Ev+0x494>
 80056ee:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 80056f2:	2350      	movs	r3, #80	; 0x50
 80056f4:	4649      	mov	r1, r9
 80056f6:	4640      	mov	r0, r8
 80056f8:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80056fc:	f00c fd7c 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005700:	4641      	mov	r1, r8
 8005702:	4630      	mov	r0, r6
 8005704:	f00a fbc4 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8005708:	ee18 0a10 	vmov	r0, s16
 800570c:	220c      	movs	r2, #12
 800570e:	2136      	movs	r1, #54	; 0x36
 8005710:	f7fd f871 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 8005714:	ee18 1a10 	vmov	r1, s16
 8005718:	4628      	mov	r0, r5
        color = newColor;
 800571a:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 800571e:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8005722:	f00c facf 	bl	8011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005726:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800572a:	ee18 3a10 	vmov	r3, s16
 800572e:	333c      	adds	r3, #60	; 0x3c
 8005730:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005734:	2351      	movs	r3, #81	; 0x51
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 8005736:	ee18 0a10 	vmov	r0, s16
 800573a:	4649      	mov	r1, r9
 800573c:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005740:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005744:	f00c fd58 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005748:	ee18 1a10 	vmov	r1, s16
 800574c:	4630      	mov	r0, r6
 800574e:	f00a fb9f 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(88, 60);
 8005752:	ee18 0a90 	vmov	r0, s17
 8005756:	223c      	movs	r2, #60	; 0x3c
 8005758:	2158      	movs	r1, #88	; 0x58
 800575a:	f7fd f84c 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 800575e:	ee18 1a90 	vmov	r1, s17
 8005762:	4628      	mov	r0, r5
        color = newColor;
 8005764:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8005768:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 800576c:	f00c faaa 	bl	8011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005770:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005774:	ee18 3a90 	vmov	r3, s17
 8005778:	333c      	adds	r3, #60	; 0x3c
 800577a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800577e:	231a      	movs	r3, #26
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 8005780:	ee18 0a90 	vmov	r0, s17
 8005784:	4649      	mov	r1, r9
 8005786:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800578a:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 800578e:	f00c fd33 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005792:	ee18 1a90 	vmov	r1, s17
 8005796:	4630      	mov	r0, r6
 8005798:	f00a fb7a 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 800579c:	ee19 0a10 	vmov	r0, s18
 80057a0:	22f0      	movs	r2, #240	; 0xf0
 80057a2:	2121      	movs	r1, #33	; 0x21
 80057a4:	f7fd f827 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 80057a8:	f04f 0b03 	mov.w	fp, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80057ac:	464a      	mov	r2, r9
 80057ae:	f04f 0802 	mov.w	r8, #2
 80057b2:	a90b      	add	r1, sp, #44	; 0x2c
 80057b4:	ee19 0a10 	vmov	r0, s18
 80057b8:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80057bc:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
    buttonWithLabel3.setAction(buttonCallback);
 80057c0:	f504 558b 	add.w	r5, r4, #4448	; 0x1160
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80057c4:	f00c fefd 	bl	80125c2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80057c8:	2352      	movs	r3, #82	; 0x52
 80057ca:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 80057ce:	350c      	adds	r5, #12
        updateTextPosition();
 80057d0:	ee19 0a10 	vmov	r0, s18
 80057d4:	f7fd f864 	bl	80028a0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80057d8:	ee19 1a10 	vmov	r1, s18
 80057dc:	4630      	mov	r0, r6
        colorPressed = col;
 80057de:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 80057e2:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 80057e6:	f00a fb53 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 80057ea:	ee19 0a90 	vmov	r0, s19
 80057ee:	22aa      	movs	r2, #170	; 0xaa
 80057f0:	2121      	movs	r1, #33	; 0x21
 80057f2:	f7fd f800 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80057f6:	464a      	mov	r2, r9
 80057f8:	a90b      	add	r1, sp, #44	; 0x2c
 80057fa:	ee19 0a90 	vmov	r0, s19
 80057fe:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8005802:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 8005806:	f00c fedc 	bl	80125c2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800580a:	2353      	movs	r3, #83	; 0x53
 800580c:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8005810:	ee19 0a90 	vmov	r0, s19
 8005814:	f7fd f844 	bl	80028a0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005818:	ee19 1a90 	vmov	r1, s19
 800581c:	4630      	mov	r0, r6
        colorPressed = col;
 800581e:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8005822:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8005826:	f00a fb33 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 800582a:	ee1a 0a10 	vmov	r0, s20
 800582e:	2264      	movs	r2, #100	; 0x64
 8005830:	2121      	movs	r1, #33	; 0x21
 8005832:	f7fc ffe0 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005836:	464a      	mov	r2, r9
 8005838:	a90b      	add	r1, sp, #44	; 0x2c
 800583a:	ee1a 0a10 	vmov	r0, s20
 800583e:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8005842:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 8005846:	f00c febc 	bl	80125c2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800584a:	2354      	movs	r3, #84	; 0x54
 800584c:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
        updateTextPosition();
 8005850:	ee1a 0a10 	vmov	r0, s20
 8005854:	f7fd f824 	bl	80028a0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005858:	ee1a 1a10 	vmov	r1, s20
 800585c:	4630      	mov	r0, r6
        colorPressed = col;
 800585e:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8005862:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8005866:	f00a fb13 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1.setXY(198, 5);
 800586a:	ee1a 0a90 	vmov	r0, s21
 800586e:	2205      	movs	r2, #5
 8005870:	21c6      	movs	r1, #198	; 0xc6
 8005872:	f7fc ffc0 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 8005876:	2301      	movs	r3, #1
 8005878:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800587c:	230a      	movs	r3, #10
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 800587e:	ee1a 0a90 	vmov	r0, s21
 8005882:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005886:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800588a:	aa0a      	add	r2, sp, #40	; 0x28
 800588c:	ab0b      	add	r3, sp, #44	; 0x2c
 800588e:	a909      	add	r1, sp, #36	; 0x24
 8005890:	f8cd 9000 	str.w	r9, [sp]
 8005894:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 8005898:	f00c ffcd 	bl	8012836 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800589c:	4630      	mov	r0, r6
 800589e:	ee1a 1a90 	vmov	r1, s21
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 80058a2:	f8c4 a350 	str.w	sl, [r4, #848]	; 0x350
 80058a6:	f8c4 5340 	str.w	r5, [r4, #832]	; 0x340
 80058aa:	f00a faf1 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80058ae:	4620      	mov	r0, r4
 80058b0:	b00f      	add	sp, #60	; 0x3c
 80058b2:	ecbd 8b06 	vpop	{d8-d10}
 80058b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80058ba:	bf00      	nop
 80058bc:	20012f88 	.word	0x20012f88
 80058c0:	0802bc02 	.word	0x0802bc02
 80058c4:	0802bc78 	.word	0x0802bc78

080058c8 <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 80058c8:	4770      	bx	lr

080058ca <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80058ca:	4770      	bx	lr

080058cc <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80058cc:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80058ce:	68c2      	ldr	r2, [r0, #12]
 80058d0:	6844      	ldr	r4, [r0, #4]
 80058d2:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80058d4:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80058d6:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80058da:	07d2      	lsls	r2, r2, #31
 80058dc:	bf48      	it	mi
 80058de:	5962      	ldrmi	r2, [r4, r5]
 80058e0:	689b      	ldr	r3, [r3, #8]
    }
 80058e2:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80058e4:	bf48      	it	mi
 80058e6:	58d3      	ldrmi	r3, [r2, r3]
 80058e8:	4718      	bx	r3

080058ea <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80058ea:	6843      	ldr	r3, [r0, #4]
 80058ec:	b12b      	cbz	r3, 80058fa <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80058ee:	6883      	ldr	r3, [r0, #8]
 80058f0:	b92b      	cbnz	r3, 80058fe <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80058f2:	68c0      	ldr	r0, [r0, #12]
 80058f4:	f000 0001 	and.w	r0, r0, #1
 80058f8:	4770      	bx	lr
 80058fa:	4618      	mov	r0, r3
 80058fc:	4770      	bx	lr
 80058fe:	2001      	movs	r0, #1
    }
 8005900:	4770      	bx	lr

08005902 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005902:	b510      	push	{r4, lr}
 8005904:	2110      	movs	r1, #16
 8005906:	4604      	mov	r4, r0
 8005908:	f023 fdd1 	bl	80294ae <_ZdlPvj>
 800590c:	4620      	mov	r0, r4
 800590e:	bd10      	pop	{r4, pc}

08005910 <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8005910:	b510      	push	{r4, lr}
 8005912:	4b03      	ldr	r3, [pc, #12]	; (8005920 <_ZN19MeasurementViewBaseD1Ev+0x10>)
 8005914:	6003      	str	r3, [r0, #0]
 8005916:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005918:	f00e f850 	bl	80139bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800591c:	4620      	mov	r0, r4
 800591e:	bd10      	pop	{r4, pc}
 8005920:	0802d65c 	.word	0x0802d65c

08005924 <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8005924:	b507      	push	{r0, r1, r2, lr}
 8005926:	4b07      	ldr	r3, [pc, #28]	; (8005944 <_ZN19MeasurementViewBaseD0Ev+0x20>)
 8005928:	6003      	str	r3, [r0, #0]
 800592a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800592c:	f00e f846 	bl	80139bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005930:	9801      	ldr	r0, [sp, #4]
 8005932:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8005936:	f023 fdba 	bl	80294ae <_ZdlPvj>
 800593a:	9801      	ldr	r0, [sp, #4]
 800593c:	b003      	add	sp, #12
 800593e:	f85d fb04 	ldr.w	pc, [sp], #4
 8005942:	bf00      	nop
 8005944:	0802d65c 	.word	0x0802d65c

08005948 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005948:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 800594a:	f500 7310 	add.w	r3, r0, #576	; 0x240
 800594e:	4299      	cmp	r1, r3
{
 8005950:	4604      	mov	r4, r0
 8005952:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8005954:	d103      	bne.n	800595e <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005956:	f00f fd33 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 800595a:	f7fe f853 	bl	8003a04 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 800595e:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005962:	429d      	cmp	r5, r3
 8005964:	d103      	bne.n	800596e <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8005966:	f00f fd2b 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 800596a:	f7fe f87b 	bl	8003a64 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 800596e:	f504 7422 	add.w	r4, r4, #648	; 0x288
 8005972:	42a5      	cmp	r5, r4
 8005974:	d105      	bne.n	8005982 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8005976:	f00f fd23 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 800597a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 800597e:	f7fe b8a1 	b.w	8003ac4 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 8005982:	bd38      	pop	{r3, r4, r5, pc}

08005984 <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 8005984:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005988:	ed2d 8b06 	vpush	{d8-d10}
 800598c:	4604      	mov	r4, r0
 800598e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 8005990:	46a3      	mov	fp, r4
 8005992:	2500      	movs	r5, #0
 8005994:	f011 f994 	bl	8016cc0 <_ZN8touchgfx6ScreenC1Ev>
 8005998:	4b66      	ldr	r3, [pc, #408]	; (8005b34 <_ZN19MeasurementViewBaseC1Ev+0x1b0>)
 800599a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800599c:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80059a0:	2226      	movs	r2, #38	; 0x26
 80059a2:	4629      	mov	r1, r5
 80059a4:	4658      	mov	r0, fp
 80059a6:	f024 fd9a 	bl	802a4de <memset>
 80059aa:	4658      	mov	r0, fp
 80059ac:	f7fc ff44 	bl	8002838 <_ZN8touchgfx6WidgetC1Ev>
 80059b0:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80059b4:	26ff      	movs	r6, #255	; 0xff
 80059b6:	4b60      	ldr	r3, [pc, #384]	; (8005b38 <_ZN19MeasurementViewBaseC1Ev+0x1b4>)
 80059b8:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80059ba:	2226      	movs	r2, #38	; 0x26
 80059bc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80059c0:	4629      	mov	r1, r5
 80059c2:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80059c6:	4650      	mov	r0, sl
 80059c8:	66a5      	str	r5, [r4, #104]	; 0x68
 80059ca:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80059ce:	f024 fd86 	bl	802a4de <memset>
 80059d2:	4650      	mov	r0, sl
 80059d4:	f7fc ff30 	bl	8002838 <_ZN8touchgfx6WidgetC1Ev>
 80059d8:	4b58      	ldr	r3, [pc, #352]	; (8005b3c <_ZN19MeasurementViewBaseC1Ev+0x1b8>)
 80059da:	66e3      	str	r3, [r4, #108]	; 0x6c
 80059dc:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80059e0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80059e4:	a90a      	add	r1, sp, #40	; 0x28
 80059e6:	4650      	mov	r0, sl
 80059e8:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80059ec:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80059f0:	f00c ffdd 	bl	80129ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80059f4:	4648      	mov	r0, r9
 80059f6:	f7fc ff31 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80059fa:	4b51      	ldr	r3, [pc, #324]	; (8005b40 <_ZN19MeasurementViewBaseC1Ev+0x1bc>)
 80059fc:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005a00:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8005a04:	4618      	mov	r0, r3
 8005a06:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005a0a:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 8005a0e:	ee08 3a90 	vmov	s17, r3
 8005a12:	f7fc ff23 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 8005a16:	4638      	mov	r0, r7
 8005a18:	f00b fe92 	bl	8011740 <_ZN8touchgfx4LineC1Ev>
 8005a1c:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005a20:	4618      	mov	r0, r3
 8005a22:	9303      	str	r3, [sp, #12]
 8005a24:	f7fb fb10 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005a28:	4b46      	ldr	r3, [pc, #280]	; (8005b44 <_ZN19MeasurementViewBaseC1Ev+0x1c0>)
 8005a2a:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8005a2e:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8005a32:	3324      	adds	r3, #36	; 0x24
 8005a34:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8005a38:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 8005a3c:	4640      	mov	r0, r8
 8005a3e:	f7fc ff0d 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 8005a42:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8005a46:	4618      	mov	r0, r3
 8005a48:	ee08 3a10 	vmov	s16, r3
 8005a4c:	f7fc ff06 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 8005a50:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005a54:	4618      	mov	r0, r3
 8005a56:	ee09 3a10 	vmov	s18, r3
 8005a5a:	f00d f8e9 	bl	8012c30 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005a5e:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005a62:	4618      	mov	r0, r3
 8005a64:	ee09 3a90 	vmov	s19, r3
 8005a68:	f00d f8e2 	bl	8012c30 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005a6c:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005a70:	4618      	mov	r0, r3
 8005a72:	ee0a 3a10 	vmov	s20, r3
 8005a76:	f00d f8db 	bl	8012c30 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005a7a:	4a33      	ldr	r2, [pc, #204]	; (8005b48 <_ZN19MeasurementViewBaseC1Ev+0x1c4>)
 8005a7c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005a80:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8005a84:	4a31      	ldr	r2, [pc, #196]	; (8005b4c <_ZN19MeasurementViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005a86:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005a8a:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8005a8e:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8005a92:	f00d ff89 	bl	80139a8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005a96:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005a9a:	462a      	mov	r2, r5
 8005a9c:	4658      	mov	r0, fp
 8005a9e:	9300      	str	r3, [sp, #0]
 8005aa0:	4629      	mov	r1, r5
 8005aa2:	23f0      	movs	r3, #240	; 0xf0
 8005aa4:	f7fc feb4 	bl	8002810 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005aa8:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005aaa:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005aae:	66a3      	str	r3, [r4, #104]	; 0x68
 8005ab0:	4659      	mov	r1, fp
 8005ab2:	4630      	mov	r0, r6
 8005ab4:	f00a f9ec 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005ab8:	462a      	mov	r2, r5
 8005aba:	4650      	mov	r0, sl
 8005abc:	4629      	mov	r1, r5
 8005abe:	f7fc fe9a 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 8005ac2:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005ac4:	4650      	mov	r0, sl
 8005ac6:	a90a      	add	r1, sp, #40	; 0x28
 8005ac8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005acc:	f00c ff6f 	bl	80129ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005ad0:	4651      	mov	r1, sl
 8005ad2:	4630      	mov	r0, r6
 8005ad4:	f00a f9dc 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8005ad8:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005adc:	2156      	movs	r1, #86	; 0x56
 8005ade:	4648      	mov	r0, r9
 8005ae0:	f7fc fe89 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005ae4:	f04f 33ff 	mov.w	r3, #4294967295
 8005ae8:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005aec:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005af0:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8005af4:	f10d 0b10 	add.w	fp, sp, #16
 8005af8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005afc:	4649      	mov	r1, r9
 8005afe:	4658      	mov	r0, fp
 8005b00:	4798      	blx	r3
 8005b02:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8005b06:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005b0a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005b0e:	4b10      	ldr	r3, [pc, #64]	; (8005b50 <_ZN19MeasurementViewBaseC1Ev+0x1cc>)
 8005b10:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 8005b12:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8005b16:	b92b      	cbnz	r3, 8005b24 <_ZN19MeasurementViewBaseC1Ev+0x1a0>
 8005b18:	4b0e      	ldr	r3, [pc, #56]	; (8005b54 <_ZN19MeasurementViewBaseC1Ev+0x1d0>)
 8005b1a:	4a0f      	ldr	r2, [pc, #60]	; (8005b58 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8005b1c:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005b1e:	480f      	ldr	r0, [pc, #60]	; (8005b5c <_ZN19MeasurementViewBaseC1Ev+0x1d8>)
 8005b20:	f024 fad8 	bl	802a0d4 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005b24:	4b0e      	ldr	r3, [pc, #56]	; (8005b60 <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005b26:	881b      	ldrh	r3, [r3, #0]
 8005b28:	2b1b      	cmp	r3, #27
 8005b2a:	d81d      	bhi.n	8005b68 <_ZN19MeasurementViewBaseC1Ev+0x1e4>
 8005b2c:	4b0d      	ldr	r3, [pc, #52]	; (8005b64 <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
 8005b2e:	4a0a      	ldr	r2, [pc, #40]	; (8005b58 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8005b30:	2161      	movs	r1, #97	; 0x61
 8005b32:	e7f4      	b.n	8005b1e <_ZN19MeasurementViewBaseC1Ev+0x19a>
 8005b34:	0802d65c 	.word	0x0802d65c
 8005b38:	0802e5d0 	.word	0x0802e5d0
 8005b3c:	0802e798 	.word	0x0802e798
 8005b40:	0802bc88 	.word	0x0802bc88
 8005b44:	0802e304 	.word	0x0802e304
 8005b48:	0802d644 	.word	0x0802d644
 8005b4c:	08005949 	.word	0x08005949
 8005b50:	20012f7c 	.word	0x20012f7c
 8005b54:	0802bac8 	.word	0x0802bac8
 8005b58:	0802bbca 	.word	0x0802bbca
 8005b5c:	0802bb45 	.word	0x0802bb45
 8005b60:	20012f80 	.word	0x20012f80
 8005b64:	0802bb8c 	.word	0x0802bb8c
        return texts->getText(typedTextId);
 8005b68:	4b95      	ldr	r3, [pc, #596]	; (8005dc0 <_ZN19MeasurementViewBaseC1Ev+0x43c>)
 8005b6a:	211b      	movs	r1, #27
 8005b6c:	6818      	ldr	r0, [r3, #0]
 8005b6e:	f002 fb45 	bl	80081fc <_ZNK8touchgfx5Texts7getTextEt>
 8005b72:	4a94      	ldr	r2, [pc, #592]	; (8005dc4 <_ZN19MeasurementViewBaseC1Ev+0x440>)
 8005b74:	4603      	mov	r3, r0
 8005b76:	2104      	movs	r1, #4
 8005b78:	4650      	mov	r0, sl
 8005b7a:	f012 fd91 	bl	80186a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8005b7e:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 8005b82:	4648      	mov	r0, r9
 8005b84:	f00c fb18 	bl	80121b8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005b88:	f8df a23c 	ldr.w	sl, [pc, #572]	; 8005dc8 <_ZN19MeasurementViewBaseC1Ev+0x444>
 8005b8c:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8005b90:	231c      	movs	r3, #28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 8005b92:	a90a      	add	r1, sp, #40	; 0x28
 8005b94:	4648      	mov	r0, r9
 8005b96:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005b9a:	f00c fb2d 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005b9e:	4649      	mov	r1, r9
 8005ba0:	4630      	mov	r0, r6
 8005ba2:	f00a f975 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(61, 60);
 8005ba6:	223c      	movs	r2, #60	; 0x3c
 8005ba8:	ee18 0a90 	vmov	r0, s17
 8005bac:	213d      	movs	r1, #61	; 0x3d
 8005bae:	f7fc fe22 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005bb2:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8005bb6:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8005bba:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8005bbe:	4658      	mov	r0, fp
        linespace = space;
 8005bc0:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8005bc4:	f00c f87e 	bl	8011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005bc8:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8005bcc:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8005bd0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005bd4:	2329      	movs	r3, #41	; 0x29
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 8005bd6:	ee18 0a90 	vmov	r0, s17
 8005bda:	a90a      	add	r1, sp, #40	; 0x28
 8005bdc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005be0:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8005be4:	f00c fb08 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005be8:	ee18 1a90 	vmov	r1, s17
 8005bec:	4630      	mov	r0, r6
 8005bee:	f00a f94f 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8005bf2:	230a      	movs	r3, #10
 8005bf4:	9300      	str	r3, [sp, #0]
 8005bf6:	2232      	movs	r2, #50	; 0x32
 8005bf8:	23f0      	movs	r3, #240	; 0xf0
 8005bfa:	4629      	mov	r1, r5
 8005bfc:	4638      	mov	r0, r7
 8005bfe:	f7fc fe07 	bl	8002810 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005c02:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005c06:	22a0      	movs	r2, #160	; 0xa0
 8005c08:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005c0c:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8005c10:	9b03      	ldr	r3, [sp, #12]
 8005c12:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005c16:	4611      	mov	r1, r2
 8005c18:	4638      	mov	r0, r7
 8005c1a:	f00b fea7 	bl	801196c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005c1e:	22a0      	movs	r2, #160	; 0xa0
 8005c20:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005c24:	4638      	mov	r0, r7
 8005c26:	f00b feac 	bl	8011982 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005c2a:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8005c2e:	2b20      	cmp	r3, #32
 8005c30:	d005      	beq.n	8005c3e <_ZN19MeasurementViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 8005c32:	2320      	movs	r3, #32
 8005c34:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8005c38:	4638      	mov	r0, r7
 8005c3a:	f00b fda1 	bl	8011780 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005c3e:	4638      	mov	r0, r7
 8005c40:	2101      	movs	r1, #1
 8005c42:	f00b fea9 	bl	8011998 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005c46:	4639      	mov	r1, r7
 8005c48:	4630      	mov	r0, r6
 8005c4a:	f00a f921 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8005c4e:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8005c52:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8005c54:	2223      	movs	r2, #35	; 0x23
 8005c56:	4640      	mov	r0, r8
        linespace = space;
 8005c58:	f04f 0a00 	mov.w	sl, #0
 8005c5c:	2145      	movs	r1, #69	; 0x45
 8005c5e:	f7fc fdca 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005c62:	4641      	mov	r1, r8
 8005c64:	4638      	mov	r0, r7
        color = newColor;
 8005c66:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8005c6a:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8005c6e:	f00c f829 	bl	8011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005c72:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8005c76:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8005c7a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005c7e:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8005dc8 <_ZN19MeasurementViewBaseC1Ev+0x444>
 8005c82:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005c86:	234e      	movs	r3, #78	; 0x4e
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 8005c88:	a90a      	add	r1, sp, #40	; 0x28
 8005c8a:	4640      	mov	r0, r8
 8005c8c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005c90:	f00c fab2 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005c94:	4641      	mov	r1, r8
 8005c96:	4630      	mov	r0, r6
 8005c98:	f00a f8fa 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8005c9c:	ee18 0a10 	vmov	r0, s16
 8005ca0:	220c      	movs	r2, #12
 8005ca2:	2136      	movs	r1, #54	; 0x36
 8005ca4:	f7fc fda7 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 8005ca8:	ee18 1a10 	vmov	r1, s16
 8005cac:	4638      	mov	r0, r7
        color = newColor;
 8005cae:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8005cb2:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8005cb6:	f00c f805 	bl	8011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005cba:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8005cbe:	ee18 3a10 	vmov	r3, s16
 8005cc2:	333c      	adds	r3, #60	; 0x3c
 8005cc4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005cc8:	234f      	movs	r3, #79	; 0x4f
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 8005cca:	ee18 0a10 	vmov	r0, s16
 8005cce:	a90a      	add	r1, sp, #40	; 0x28
 8005cd0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005cd4:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005cd8:	f00c fa8e 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005cdc:	ee18 1a10 	vmov	r1, s16
 8005ce0:	4630      	mov	r0, r6
 8005ce2:	f00a f8d5 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8005ce6:	ee19 0a10 	vmov	r0, s18
 8005cea:	22f0      	movs	r2, #240	; 0xf0
 8005cec:	2121      	movs	r1, #33	; 0x21
 8005cee:	f7fc fd82 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 8005cf2:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005cf6:	aa0a      	add	r2, sp, #40	; 0x28
 8005cf8:	f04f 0802 	mov.w	r8, #2
 8005cfc:	a909      	add	r1, sp, #36	; 0x24
 8005cfe:	ee19 0a10 	vmov	r0, s18
 8005d02:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005d06:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8005d0a:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005d0e:	f00c fc58 	bl	80125c2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8005d12:	234d      	movs	r3, #77	; 0x4d
 8005d14:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8005d18:	3710      	adds	r7, #16
        updateTextPosition();
 8005d1a:	ee19 0a10 	vmov	r0, s18
 8005d1e:	f7fc fdbf 	bl	80028a0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005d22:	ee19 1a10 	vmov	r1, s18
 8005d26:	4630      	mov	r0, r6
        colorPressed = col;
 8005d28:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8005d2c:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8005d30:	f00a f8ae 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8005d34:	ee19 0a90 	vmov	r0, s19
 8005d38:	22aa      	movs	r2, #170	; 0xaa
 8005d3a:	2121      	movs	r1, #33	; 0x21
 8005d3c:	f7fc fd5b 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005d40:	aa0a      	add	r2, sp, #40	; 0x28
 8005d42:	a909      	add	r1, sp, #36	; 0x24
 8005d44:	ee19 0a90 	vmov	r0, s19
 8005d48:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005d4c:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005d50:	f00c fc37 	bl	80125c2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005d54:	234c      	movs	r3, #76	; 0x4c
 8005d56:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8005d5a:	ee19 0a90 	vmov	r0, s19
 8005d5e:	f7fc fd9f 	bl	80028a0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005d62:	ee19 1a90 	vmov	r1, s19
 8005d66:	4630      	mov	r0, r6
        colorPressed = col;
 8005d68:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8005d6c:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8005d70:	f00a f88e 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8005d74:	ee1a 0a10 	vmov	r0, s20
 8005d78:	2264      	movs	r2, #100	; 0x64
 8005d7a:	2121      	movs	r1, #33	; 0x21
 8005d7c:	f7fc fd3b 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005d80:	aa0a      	add	r2, sp, #40	; 0x28
 8005d82:	a909      	add	r1, sp, #36	; 0x24
 8005d84:	ee1a 0a10 	vmov	r0, s20
 8005d88:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005d8c:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005d90:	f00c fc17 	bl	80125c2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005d94:	234b      	movs	r3, #75	; 0x4b
        updateTextPosition();
 8005d96:	ee1a 0a10 	vmov	r0, s20
 8005d9a:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8005d9e:	f7fc fd7f 	bl	80028a0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005da2:	4630      	mov	r0, r6
        colorPressed = col;
 8005da4:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8005da8:	ee1a 1a10 	vmov	r1, s20
 8005dac:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8005db0:	f00a f86e 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005db4:	4620      	mov	r0, r4
 8005db6:	b00d      	add	sp, #52	; 0x34
 8005db8:	ecbd 8b06 	vpop	{d8-d10}
 8005dbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005dc0:	20012f88 	.word	0x20012f88
 8005dc4:	0802bc02 	.word	0x0802bc02
 8005dc8:	0802bc78 	.word	0x0802bc78

08005dcc <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 8005dcc:	4770      	bx	lr

08005dce <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005dce:	4770      	bx	lr

08005dd0 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005dd0:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005dd2:	68c2      	ldr	r2, [r0, #12]
 8005dd4:	6844      	ldr	r4, [r0, #4]
 8005dd6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005dd8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005dda:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005dde:	07d2      	lsls	r2, r2, #31
 8005de0:	bf48      	it	mi
 8005de2:	5962      	ldrmi	r2, [r4, r5]
 8005de4:	689b      	ldr	r3, [r3, #8]
    }
 8005de6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005de8:	bf48      	it	mi
 8005dea:	58d3      	ldrmi	r3, [r2, r3]
 8005dec:	4718      	bx	r3

08005dee <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005dee:	6843      	ldr	r3, [r0, #4]
 8005df0:	b12b      	cbz	r3, 8005dfe <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005df2:	6883      	ldr	r3, [r0, #8]
 8005df4:	b92b      	cbnz	r3, 8005e02 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005df6:	68c0      	ldr	r0, [r0, #12]
 8005df8:	f000 0001 	and.w	r0, r0, #1
 8005dfc:	4770      	bx	lr
 8005dfe:	4618      	mov	r0, r3
 8005e00:	4770      	bx	lr
 8005e02:	2001      	movs	r0, #1
    }
 8005e04:	4770      	bx	lr

08005e06 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005e06:	b510      	push	{r4, lr}
 8005e08:	2110      	movs	r1, #16
 8005e0a:	4604      	mov	r4, r0
 8005e0c:	f023 fb4f 	bl	80294ae <_ZdlPvj>
 8005e10:	4620      	mov	r0, r4
 8005e12:	bd10      	pop	{r4, pc}

08005e14 <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8005e14:	b510      	push	{r4, lr}
 8005e16:	4b03      	ldr	r3, [pc, #12]	; (8005e24 <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 8005e18:	6003      	str	r3, [r0, #0]
 8005e1a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005e1c:	f00d fdce 	bl	80139bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005e20:	4620      	mov	r0, r4
 8005e22:	bd10      	pop	{r4, pc}
 8005e24:	0802d6a8 	.word	0x0802d6a8

08005e28 <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8005e28:	b507      	push	{r0, r1, r2, lr}
 8005e2a:	4b07      	ldr	r3, [pc, #28]	; (8005e48 <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 8005e2c:	6003      	str	r3, [r0, #0]
 8005e2e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005e30:	f00d fdc4 	bl	80139bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005e34:	9801      	ldr	r0, [sp, #4]
 8005e36:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8005e3a:	f023 fb38 	bl	80294ae <_ZdlPvj>
 8005e3e:	9801      	ldr	r0, [sp, #4]
 8005e40:	b003      	add	sp, #12
 8005e42:	f85d fb04 	ldr.w	pc, [sp], #4
 8005e46:	bf00      	nop
 8005e48:	0802d6a8 	.word	0x0802d6a8

08005e4c <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005e4c:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8005e4e:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8005e52:	4299      	cmp	r1, r3
{
 8005e54:	4604      	mov	r4, r0
 8005e56:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8005e58:	d103      	bne.n	8005e62 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005e5a:	f00f fab1 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8005e5e:	f7fd fdf1 	bl	8003a44 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel2)
 8005e62:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005e66:	429d      	cmp	r5, r3
 8005e68:	d103      	bne.n	8005e72 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8005e6a:	f00f faa9 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 8005e6e:	f7fd fe59 	bl	8003b24 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel1)
 8005e72:	f504 7434 	add.w	r4, r4, #720	; 0x2d0
 8005e76:	42a5      	cmp	r5, r4
 8005e78:	d105      	bne.n	8005e86 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8005e7a:	f00f faa1 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel1 clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 8005e7e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 8005e82:	f7fd be3f 	b.w	8003b04 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 8005e86:	bd38      	pop	{r3, r4, r5, pc}

08005e88 <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 8005e88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005e8c:	ed2d 8b06 	vpush	{d8-d10}
 8005e90:	4604      	mov	r4, r0
 8005e92:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 8005e94:	46a3      	mov	fp, r4
 8005e96:	2500      	movs	r5, #0
 8005e98:	f010 ff12 	bl	8016cc0 <_ZN8touchgfx6ScreenC1Ev>
 8005e9c:	4b66      	ldr	r3, [pc, #408]	; (8006038 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b0>)
 8005e9e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005ea0:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005ea4:	2226      	movs	r2, #38	; 0x26
 8005ea6:	4629      	mov	r1, r5
 8005ea8:	4658      	mov	r0, fp
 8005eaa:	f024 fb18 	bl	802a4de <memset>
 8005eae:	4658      	mov	r0, fp
 8005eb0:	f7fc fcc2 	bl	8002838 <_ZN8touchgfx6WidgetC1Ev>
 8005eb4:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005eb8:	26ff      	movs	r6, #255	; 0xff
 8005eba:	4b60      	ldr	r3, [pc, #384]	; (800603c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b4>)
 8005ebc:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005ebe:	2226      	movs	r2, #38	; 0x26
 8005ec0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005ec4:	4629      	mov	r1, r5
 8005ec6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005eca:	4650      	mov	r0, sl
 8005ecc:	66a5      	str	r5, [r4, #104]	; 0x68
 8005ece:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005ed2:	f024 fb04 	bl	802a4de <memset>
 8005ed6:	4650      	mov	r0, sl
 8005ed8:	f7fc fcae 	bl	8002838 <_ZN8touchgfx6WidgetC1Ev>
 8005edc:	4b58      	ldr	r3, [pc, #352]	; (8006040 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b8>)
 8005ede:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005ee0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8005ee4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005ee8:	a90a      	add	r1, sp, #40	; 0x28
 8005eea:	4650      	mov	r0, sl
 8005eec:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005ef0:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005ef4:	f00c fd5b 	bl	80129ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005ef8:	4648      	mov	r0, r9
 8005efa:	f7fc fcaf 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 8005efe:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8005f02:	4b50      	ldr	r3, [pc, #320]	; (8006044 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1bc>)
 8005f04:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005f08:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005f0c:	4638      	mov	r0, r7
 8005f0e:	f00b fc17 	bl	8011740 <_ZN8touchgfx4LineC1Ev>
 8005f12:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005f16:	4618      	mov	r0, r3
 8005f18:	9303      	str	r3, [sp, #12]
 8005f1a:	f7fb f895 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005f1e:	4b4a      	ldr	r3, [pc, #296]	; (8006048 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c0>)
 8005f20:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005f24:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8005f28:	3324      	adds	r3, #36	; 0x24
 8005f2a:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8005f2e:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8005f32:	4640      	mov	r0, r8
 8005f34:	f7fc fc92 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 8005f38:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8005f3c:	4618      	mov	r0, r3
 8005f3e:	ee08 3a10 	vmov	s16, r3
 8005f42:	f7fc fc8b 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 8005f46:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8005f4a:	4618      	mov	r0, r3
 8005f4c:	ee08 3a90 	vmov	s17, r3
 8005f50:	f7fc fc84 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 8005f54:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005f58:	4618      	mov	r0, r3
 8005f5a:	ee09 3a10 	vmov	s18, r3
 8005f5e:	f00c fe67 	bl	8012c30 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005f62:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005f66:	4618      	mov	r0, r3
 8005f68:	ee09 3a90 	vmov	s19, r3
 8005f6c:	f00c fe60 	bl	8012c30 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005f70:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005f74:	4618      	mov	r0, r3
 8005f76:	ee0a 3a10 	vmov	s20, r3
 8005f7a:	f00c fe59 	bl	8012c30 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005f7e:	4a33      	ldr	r2, [pc, #204]	; (800604c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c4>)
 8005f80:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005f84:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8005f88:	4a31      	ldr	r2, [pc, #196]	; (8006050 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005f8a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005f8e:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8005f92:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8005f96:	f00d fd07 	bl	80139a8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005f9a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005f9e:	462a      	mov	r2, r5
 8005fa0:	4658      	mov	r0, fp
 8005fa2:	9300      	str	r3, [sp, #0]
 8005fa4:	4629      	mov	r1, r5
 8005fa6:	23f0      	movs	r3, #240	; 0xf0
 8005fa8:	f7fc fc32 	bl	8002810 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005fac:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005fae:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005fb2:	66a3      	str	r3, [r4, #104]	; 0x68
 8005fb4:	4659      	mov	r1, fp
 8005fb6:	4630      	mov	r0, r6
 8005fb8:	f009 ff6a 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005fbc:	462a      	mov	r2, r5
 8005fbe:	4650      	mov	r0, sl
 8005fc0:	4629      	mov	r1, r5
 8005fc2:	f7fc fc18 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 8005fc6:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005fc8:	4650      	mov	r0, sl
 8005fca:	a90a      	add	r1, sp, #40	; 0x28
 8005fcc:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005fd0:	f00c fced 	bl	80129ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005fd4:	4651      	mov	r1, sl
 8005fd6:	4630      	mov	r0, r6
 8005fd8:	f009 ff5a 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8005fdc:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005fe0:	2156      	movs	r1, #86	; 0x56
 8005fe2:	4648      	mov	r0, r9
 8005fe4:	f7fc fc07 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 8005fe8:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005fec:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8005ff0:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8005ff4:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8005ff8:	4650      	mov	r0, sl
 8005ffa:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8005ffe:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006002:	4649      	mov	r1, r9
 8006004:	4798      	blx	r3
 8006006:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 800600a:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800600e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006012:	4b10      	ldr	r3, [pc, #64]	; (8006054 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1cc>)
 8006014:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUW4).getText());
 8006016:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 800601a:	b92b      	cbnz	r3, 8006028 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1a0>
 800601c:	4b0e      	ldr	r3, [pc, #56]	; (8006058 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d0>)
 800601e:	4a0f      	ldr	r2, [pc, #60]	; (800605c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8006020:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006022:	480f      	ldr	r0, [pc, #60]	; (8006060 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d8>)
 8006024:	f024 f856 	bl	802a0d4 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8006028:	4b0e      	ldr	r3, [pc, #56]	; (8006064 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800602a:	881b      	ldrh	r3, [r3, #0]
 800602c:	2b16      	cmp	r3, #22
 800602e:	d81d      	bhi.n	800606c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e4>
 8006030:	4b0d      	ldr	r3, [pc, #52]	; (8006068 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e0>)
 8006032:	4a0a      	ldr	r2, [pc, #40]	; (800605c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8006034:	2161      	movs	r1, #97	; 0x61
 8006036:	e7f4      	b.n	8006022 <_ZN28Measurement_AccurateViewBaseC1Ev+0x19a>
 8006038:	0802d6a8 	.word	0x0802d6a8
 800603c:	0802e5d0 	.word	0x0802e5d0
 8006040:	0802e798 	.word	0x0802e798
 8006044:	0802bc88 	.word	0x0802bc88
 8006048:	0802e304 	.word	0x0802e304
 800604c:	0802d690 	.word	0x0802d690
 8006050:	08005e4d 	.word	0x08005e4d
 8006054:	20012f7c 	.word	0x20012f7c
 8006058:	0802bac8 	.word	0x0802bac8
 800605c:	0802bbca 	.word	0x0802bbca
 8006060:	0802bb45 	.word	0x0802bb45
 8006064:	20012f80 	.word	0x20012f80
 8006068:	0802bb8c 	.word	0x0802bb8c
        return texts->getText(typedTextId);
 800606c:	4b93      	ldr	r3, [pc, #588]	; (80062bc <_ZN28Measurement_AccurateViewBaseC1Ev+0x434>)
 800606e:	2116      	movs	r1, #22
 8006070:	6818      	ldr	r0, [r3, #0]
 8006072:	f002 f8c3 	bl	80081fc <_ZNK8touchgfx5Texts7getTextEt>
 8006076:	4a92      	ldr	r2, [pc, #584]	; (80062c0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x438>)
 8006078:	4603      	mov	r3, r0
 800607a:	2104      	movs	r1, #4
 800607c:	4650      	mov	r0, sl
 800607e:	f012 fb0f 	bl	80186a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8006082:	4648      	mov	r0, r9
        wc1 = value;
 8006084:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8006088:	f00c f896 	bl	80121b8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800608c:	4b8d      	ldr	r3, [pc, #564]	; (80062c4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>)
 800608e:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SQC7));
 8006090:	a90a      	add	r1, sp, #40	; 0x28
 8006092:	2317      	movs	r3, #23
 8006094:	4648      	mov	r0, r9
 8006096:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800609a:	f00c f8ad 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800609e:	4649      	mov	r1, r9
 80060a0:	4630      	mov	r0, r6
 80060a2:	f009 fef5 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80060a6:	230a      	movs	r3, #10
 80060a8:	9300      	str	r3, [sp, #0]
 80060aa:	2232      	movs	r2, #50	; 0x32
 80060ac:	23f0      	movs	r3, #240	; 0xf0
 80060ae:	4629      	mov	r1, r5
 80060b0:	4638      	mov	r0, r7
 80060b2:	f7fc fbad 	bl	8002810 <_ZN8touchgfx8Drawable11setPositionEssss>
 80060b6:	9b03      	ldr	r3, [sp, #12]
 80060b8:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80060bc:	22a0      	movs	r2, #160	; 0xa0
 80060be:	4611      	mov	r1, r2
 80060c0:	4638      	mov	r0, r7
 80060c2:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 80060c6:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 80060ca:	f00b fc4f 	bl	801196c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80060ce:	22a0      	movs	r2, #160	; 0xa0
 80060d0:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80060d4:	4638      	mov	r0, r7
 80060d6:	f00b fc54 	bl	8011982 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80060da:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80060de:	2b20      	cmp	r3, #32
 80060e0:	d005      	beq.n	80060ee <_ZN28Measurement_AccurateViewBaseC1Ev+0x266>
        lineWidthQ5 = widthQ5;
 80060e2:	2320      	movs	r3, #32
 80060e4:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 80060e8:	4638      	mov	r0, r7
 80060ea:	f00b fb49 	bl	8011780 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80060ee:	4638      	mov	r0, r7
 80060f0:	2101      	movs	r1, #1
 80060f2:	f00b fc51 	bl	8011998 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80060f6:	4639      	mov	r1, r7
 80060f8:	4630      	mov	r0, r6
 80060fa:	ad04      	add	r5, sp, #16
        color = newColor;
 80060fc:	f04f 37ff 	mov.w	r7, #4294967295
 8006100:	f009 fec6 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8006104:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8006108:	2223      	movs	r2, #35	; 0x23
 800610a:	4640      	mov	r0, r8
 800610c:	2145      	movs	r1, #69	; 0x45
 800610e:	f7fc fb72 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006112:	4641      	mov	r1, r8
 8006114:	4628      	mov	r0, r5
        color = newColor;
 8006116:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 800611a:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 800611e:	f00b fdd1 	bl	8011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006122:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006126:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 800612a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800612e:	f04f 0b3c 	mov.w	fp, #60	; 0x3c
 8006132:	f8df 9190 	ldr.w	r9, [pc, #400]	; 80062c4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>
 8006136:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 800613a:	a90a      	add	r1, sp, #40	; 0x28
 800613c:	4640      	mov	r0, r8
 800613e:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8006142:	f00c f859 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006146:	4641      	mov	r1, r8
 8006148:	4630      	mov	r0, r6
 800614a:	f009 fea1 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800614e:	ee18 0a10 	vmov	r0, s16
 8006152:	220c      	movs	r2, #12
 8006154:	2136      	movs	r1, #54	; 0x36
 8006156:	f7fc fb4e 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 800615a:	ee18 1a10 	vmov	r1, s16
 800615e:	4628      	mov	r0, r5
        color = newColor;
 8006160:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8006164:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8006168:	f00b fdac 	bl	8011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800616c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006170:	ee18 3a10 	vmov	r3, s16
 8006174:	445b      	add	r3, fp
 8006176:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800617a:	233b      	movs	r3, #59	; 0x3b
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 800617c:	ee18 0a10 	vmov	r0, s16
 8006180:	a90a      	add	r1, sp, #40	; 0x28
 8006182:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006186:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800618a:	f00c f835 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800618e:	ee18 1a10 	vmov	r1, s16
 8006192:	4630      	mov	r0, r6
 8006194:	f009 fe7c 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(33, 60);
 8006198:	465a      	mov	r2, fp
 800619a:	ee18 0a90 	vmov	r0, s17
 800619e:	2121      	movs	r1, #33	; 0x21
 80061a0:	f7fc fb29 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 80061a4:	ee18 1a90 	vmov	r1, s17
 80061a8:	4628      	mov	r0, r5
        color = newColor;
 80061aa:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 80061ae:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 80061b2:	f00b fd87 	bl	8011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80061b6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80061ba:	ee18 3a90 	vmov	r3, s17
 80061be:	445b      	add	r3, fp
 80061c0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80061c4:	2325      	movs	r3, #37	; 0x25
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 80061c6:	ee18 0a90 	vmov	r0, s17
 80061ca:	a90a      	add	r1, sp, #40	; 0x28
 80061cc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80061d0:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80061d4:	f00c f810 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80061d8:	ee18 1a90 	vmov	r1, s17
 80061dc:	4630      	mov	r0, r6
 80061de:	f009 fe57 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 80061e2:	ee19 0a10 	vmov	r0, s18
 80061e6:	22f0      	movs	r2, #240	; 0xf0
 80061e8:	2121      	movs	r1, #33	; 0x21
 80061ea:	f7fc fb04 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 80061ee:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80061f2:	aa0a      	add	r2, sp, #40	; 0x28
 80061f4:	f04f 0802 	mov.w	r8, #2
 80061f8:	a909      	add	r1, sp, #36	; 0x24
 80061fa:	ee19 0a10 	vmov	r0, s18
 80061fe:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006202:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8006206:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800620a:	f00c f9da 	bl	80125c2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800620e:	233a      	movs	r3, #58	; 0x3a
 8006210:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006214:	3510      	adds	r5, #16
        updateTextPosition();
 8006216:	ee19 0a10 	vmov	r0, s18
 800621a:	f7fc fb41 	bl	80028a0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800621e:	ee19 1a10 	vmov	r1, s18
 8006222:	4630      	mov	r0, r6
        colorPressed = col;
 8006224:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 8006228:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 800622c:	f009 fe30 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8006230:	ee19 0a90 	vmov	r0, s19
 8006234:	22aa      	movs	r2, #170	; 0xaa
 8006236:	2121      	movs	r1, #33	; 0x21
 8006238:	f7fc fadd 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800623c:	aa0a      	add	r2, sp, #40	; 0x28
 800623e:	a909      	add	r1, sp, #36	; 0x24
 8006240:	ee19 0a90 	vmov	r0, s19
 8006244:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006248:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 800624c:	f00c f9b9 	bl	80125c2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006250:	2339      	movs	r3, #57	; 0x39
 8006252:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006256:	ee19 0a90 	vmov	r0, s19
 800625a:	f7fc fb21 	bl	80028a0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800625e:	ee19 1a90 	vmov	r1, s19
 8006262:	4630      	mov	r0, r6
        colorPressed = col;
 8006264:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8006268:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 800626c:	f009 fe10 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8006270:	ee1a 0a10 	vmov	r0, s20
 8006274:	2264      	movs	r2, #100	; 0x64
 8006276:	2121      	movs	r1, #33	; 0x21
 8006278:	f7fc fabd 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800627c:	aa0a      	add	r2, sp, #40	; 0x28
 800627e:	a909      	add	r1, sp, #36	; 0x24
 8006280:	ee1a 0a10 	vmov	r0, s20
 8006284:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006288:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 800628c:	f00c f999 	bl	80125c2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006290:	2338      	movs	r3, #56	; 0x38
        updateTextPosition();
 8006292:	ee1a 0a10 	vmov	r0, s20
 8006296:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 800629a:	f7fc fb01 	bl	80028a0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800629e:	4630      	mov	r0, r6
        colorPressed = col;
 80062a0:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 80062a4:	ee1a 1a10 	vmov	r1, s20
 80062a8:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 80062ac:	f009 fdf0 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80062b0:	4620      	mov	r0, r4
 80062b2:	b00d      	add	sp, #52	; 0x34
 80062b4:	ecbd 8b06 	vpop	{d8-d10}
 80062b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80062bc:	20012f88 	.word	0x20012f88
 80062c0:	0802bc02 	.word	0x0802bc02
 80062c4:	0802bc78 	.word	0x0802bc78

080062c8 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80062c8:	4770      	bx	lr

080062ca <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80062ca:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80062cc:	68c2      	ldr	r2, [r0, #12]
 80062ce:	6844      	ldr	r4, [r0, #4]
 80062d0:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80062d2:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80062d4:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80062d8:	07d2      	lsls	r2, r2, #31
 80062da:	bf48      	it	mi
 80062dc:	5962      	ldrmi	r2, [r4, r5]
 80062de:	689b      	ldr	r3, [r3, #8]
    }
 80062e0:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80062e2:	bf48      	it	mi
 80062e4:	58d3      	ldrmi	r3, [r2, r3]
 80062e6:	4718      	bx	r3

080062e8 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80062e8:	6843      	ldr	r3, [r0, #4]
 80062ea:	b12b      	cbz	r3, 80062f8 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80062ec:	6883      	ldr	r3, [r0, #8]
 80062ee:	b92b      	cbnz	r3, 80062fc <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80062f0:	68c0      	ldr	r0, [r0, #12]
 80062f2:	f000 0001 	and.w	r0, r0, #1
 80062f6:	4770      	bx	lr
 80062f8:	4618      	mov	r0, r3
 80062fa:	4770      	bx	lr
 80062fc:	2001      	movs	r0, #1
    }
 80062fe:	4770      	bx	lr

08006300 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006300:	b510      	push	{r4, lr}
 8006302:	2110      	movs	r1, #16
 8006304:	4604      	mov	r4, r0
 8006306:	f023 f8d2 	bl	80294ae <_ZdlPvj>
 800630a:	4620      	mov	r0, r4
 800630c:	bd10      	pop	{r4, pc}

0800630e <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 800630e:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 8006312:	f002 b8bb 	b.w	800848c <_ZN17Gauge_with_Values10initializeEv>

08006316 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8006316:	3098      	adds	r0, #152	; 0x98
 8006318:	4288      	cmp	r0, r1
{
 800631a:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800631c:	d105      	bne.n	800632a <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800631e:	f00f f84f 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8006322:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8006326:	f7fd bbdd 	b.w	8003ae4 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 800632a:	bd08      	pop	{r3, pc}

0800632c <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 800632c:	b510      	push	{r4, lr}
 800632e:	4b07      	ldr	r3, [pc, #28]	; (800634c <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x20>)
 8006330:	6003      	str	r3, [r0, #0]
 8006332:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006334:	f00d fb42 	bl	80139bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>

class Gauge_with_Values : public Gauge_with_ValuesBase
{
public:
    Gauge_with_Values();
    virtual ~Gauge_with_Values() {}
 8006338:	4b05      	ldr	r3, [pc, #20]	; (8006350 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x24>)
 800633a:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 800633e:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8006342:	f7fe fe25 	bl	8004f90 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 8006346:	4620      	mov	r0, r4
 8006348:	bd10      	pop	{r4, pc}
 800634a:	bf00      	nop
 800634c:	0802d6f4 	.word	0x0802d6f4
 8006350:	0802dc4c 	.word	0x0802dc4c

08006354 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8006354:	b510      	push	{r4, lr}
 8006356:	4604      	mov	r4, r0
}
 8006358:	f7ff ffe8 	bl	800632c <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 800635c:	4620      	mov	r0, r4
 800635e:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8006362:	f023 f8a4 	bl	80294ae <_ZdlPvj>
 8006366:	4620      	mov	r0, r4
 8006368:	bd10      	pop	{r4, pc}
	...

0800636c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 800636c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006370:	ed2d 8b04 	vpush	{d8-d9}
 8006374:	4604      	mov	r4, r0
 8006376:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 8006378:	46a1      	mov	r9, r4
 800637a:	2500      	movs	r5, #0
 800637c:	f010 fca0 	bl	8016cc0 <_ZN8touchgfx6ScreenC1Ev>
 8006380:	4bac      	ldr	r3, [pc, #688]	; (8006634 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c8>)
 8006382:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006384:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8006388:	2226      	movs	r2, #38	; 0x26
 800638a:	4629      	mov	r1, r5
 800638c:	4648      	mov	r0, r9
 800638e:	f024 f8a6 	bl	802a4de <memset>
 8006392:	4648      	mov	r0, r9
 8006394:	f7fc fa50 	bl	8002838 <_ZN8touchgfx6WidgetC1Ev>
 8006398:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 800639c:	26ff      	movs	r6, #255	; 0xff
 800639e:	4ba6      	ldr	r3, [pc, #664]	; (8006638 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2cc>)
 80063a0:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80063a2:	2226      	movs	r2, #38	; 0x26
 80063a4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80063a8:	4629      	mov	r1, r5
 80063aa:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80063ae:	4640      	mov	r0, r8
 80063b0:	66a5      	str	r5, [r4, #104]	; 0x68
 80063b2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80063b6:	f024 f892 	bl	802a4de <memset>
 80063ba:	4640      	mov	r0, r8
 80063bc:	f7fc fa3c 	bl	8002838 <_ZN8touchgfx6WidgetC1Ev>
 80063c0:	4b9e      	ldr	r3, [pc, #632]	; (800663c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d0>)
 80063c2:	66e3      	str	r3, [r4, #108]	; 0x6c
 80063c4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80063c8:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80063cc:	a90a      	add	r1, sp, #40	; 0x28
 80063ce:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 80063d0:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80063d4:	f00c faeb 	bl	80129ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80063d8:	f104 0398 	add.w	r3, r4, #152	; 0x98
 80063dc:	4618      	mov	r0, r3
 80063de:	ee08 3a10 	vmov	s16, r3
 80063e2:	f00c fc25 	bl	8012c30 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80063e6:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 80063ea:	f504 7794 	add.w	r7, r4, #296	; 0x128
 80063ee:	4618      	mov	r0, r3
 80063f0:	ee08 3a90 	vmov	s17, r3
 80063f4:	f7fc fa32 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 80063f8:	4638      	mov	r0, r7
 80063fa:	f00b f9a1 	bl	8011740 <_ZN8touchgfx4LineC1Ev>
 80063fe:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006402:	4618      	mov	r0, r3
 8006404:	9303      	str	r3, [sp, #12]
 8006406:	f7fa fe1f 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800640a:	4b8d      	ldr	r3, [pc, #564]	; (8006640 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d4>)
 800640c:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8006410:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 8006414:	3324      	adds	r3, #36	; 0x24
 8006416:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 800641a:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 800641e:	4658      	mov	r0, fp
 8006420:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8006424:	f7fc fa1a 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 8006428:	4650      	mov	r0, sl
 800642a:	f7fc fa17 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 800642e:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8006432:	4618      	mov	r0, r3
 8006434:	ee09 3a10 	vmov	s18, r3
 8006438:	f002 f81e 	bl	8008478 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800643c:	4a81      	ldr	r2, [pc, #516]	; (8006644 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d8>)
 800643e:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006442:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 8006446:	4a80      	ldr	r2, [pc, #512]	; (8006648 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2dc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006448:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800644c:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 8006450:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 8006454:	f00d faa8 	bl	80139a8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006458:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800645c:	462a      	mov	r2, r5
 800645e:	4648      	mov	r0, r9
 8006460:	9300      	str	r3, [sp, #0]
 8006462:	4629      	mov	r1, r5
 8006464:	23f0      	movs	r3, #240	; 0xf0
 8006466:	f7fc f9d3 	bl	8002810 <_ZN8touchgfx8Drawable11setPositionEssss>
 800646a:	1d26      	adds	r6, r4, #4
        color = newColor;
 800646c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006470:	66a3      	str	r3, [r4, #104]	; 0x68
 8006472:	4649      	mov	r1, r9
 8006474:	4630      	mov	r0, r6
 8006476:	f009 fd0b 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800647a:	462a      	mov	r2, r5
 800647c:	4640      	mov	r0, r8
 800647e:	4629      	mov	r1, r5
 8006480:	f7fc f9b9 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 8006484:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006486:	4640      	mov	r0, r8
 8006488:	a90a      	add	r1, sp, #40	; 0x28
 800648a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800648e:	f00c fa8e 	bl	80129ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006492:	4641      	mov	r1, r8
 8006494:	4630      	mov	r0, r6
 8006496:	f009 fcfb 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 800649a:	ee18 0a10 	vmov	r0, s16
 800649e:	f240 1201 	movw	r2, #257	; 0x101
 80064a2:	2121      	movs	r1, #33	; 0x21
 80064a4:	f7fc f9a7 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 80064a8:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80064aa:	aa0a      	add	r2, sp, #40	; 0x28
 80064ac:	a909      	add	r1, sp, #36	; 0x24
 80064ae:	ee18 0a10 	vmov	r0, s16
 80064b2:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80064b6:	2302      	movs	r3, #2
 80064b8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80064bc:	f00c f881 	bl	80125c2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80064c0:	2321      	movs	r3, #33	; 0x21
        updateTextPosition();
 80064c2:	ee18 0a10 	vmov	r0, s16
 80064c6:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 80064ca:	f7fc f9e9 	bl	80028a0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80064ce:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 80064d2:	3314      	adds	r3, #20
        color = col;
 80064d4:	f04f 39ff 	mov.w	r9, #4294967295
 80064d8:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80064dc:	ee18 1a10 	vmov	r1, s16
 80064e0:	4630      	mov	r0, r6
        colorPressed = col;
 80064e2:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 80064e6:	f009 fcd3 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80064ea:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 80064ee:	223c      	movs	r2, #60	; 0x3c
 80064f0:	ee18 0a90 	vmov	r0, s17
 80064f4:	2117      	movs	r1, #23
 80064f6:	f7fc f97e 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 80064fa:	ee18 1a90 	vmov	r1, s17
 80064fe:	4640      	mov	r0, r8
        color = newColor;
 8006500:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8006504:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006508:	f00b fbdc 	bl	8011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800650c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006510:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8006514:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006518:	4b4c      	ldr	r3, [pc, #304]	; (800664c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e0>)
 800651a:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 800651c:	ee18 0a90 	vmov	r0, s17
 8006520:	2322      	movs	r3, #34	; 0x22
 8006522:	a90a      	add	r1, sp, #40	; 0x28
 8006524:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006528:	f00b fe66 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800652c:	ee18 1a90 	vmov	r1, s17
 8006530:	4630      	mov	r0, r6
 8006532:	f009 fcad 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006536:	230a      	movs	r3, #10
 8006538:	9300      	str	r3, [sp, #0]
 800653a:	2232      	movs	r2, #50	; 0x32
 800653c:	23f0      	movs	r3, #240	; 0xf0
 800653e:	4629      	mov	r1, r5
 8006540:	4638      	mov	r0, r7
 8006542:	f7fc f965 	bl	8002810 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006546:	9b03      	ldr	r3, [sp, #12]
 8006548:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800654c:	22a0      	movs	r2, #160	; 0xa0
 800654e:	4611      	mov	r1, r2
 8006550:	4638      	mov	r0, r7
 8006552:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006556:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 800655a:	f00b fa07 	bl	801196c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800655e:	22a0      	movs	r2, #160	; 0xa0
 8006560:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006564:	4638      	mov	r0, r7
 8006566:	f00b fa0c 	bl	8011982 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800656a:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 800656e:	2b20      	cmp	r3, #32
 8006570:	d005      	beq.n	800657e <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x212>
        lineWidthQ5 = widthQ5;
 8006572:	2320      	movs	r3, #32
 8006574:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8006578:	4638      	mov	r0, r7
 800657a:	f00b f901 	bl	8011780 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800657e:	4638      	mov	r0, r7
 8006580:	2101      	movs	r1, #1
 8006582:	f00b fa09 	bl	8011998 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006586:	4639      	mov	r1, r7
 8006588:	4630      	mov	r0, r6
 800658a:	f009 fc81 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 800658e:	2500      	movs	r5, #0
    textArea2.setXY(69, 35);
 8006590:	2223      	movs	r2, #35	; 0x23
 8006592:	4658      	mov	r0, fp
        color = newColor;
 8006594:	f04f 39ff 	mov.w	r9, #4294967295
 8006598:	2145      	movs	r1, #69	; 0x45
 800659a:	f7fc f92c 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800659e:	4659      	mov	r1, fp
 80065a0:	4640      	mov	r0, r8
        color = newColor;
 80065a2:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 80065a6:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 80065aa:	f00b fb8b 	bl	8011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80065ae:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80065b2:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 80065b6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80065ba:	4f24      	ldr	r7, [pc, #144]	; (800664c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e0>)
 80065bc:	970a      	str	r7, [sp, #40]	; 0x28
 80065be:	2323      	movs	r3, #35	; 0x23
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 80065c0:	a90a      	add	r1, sp, #40	; 0x28
 80065c2:	4658      	mov	r0, fp
 80065c4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80065c8:	f00b fe16 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80065cc:	4659      	mov	r1, fp
 80065ce:	4630      	mov	r0, r6
 80065d0:	f009 fc5e 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80065d4:	220c      	movs	r2, #12
 80065d6:	4650      	mov	r0, sl
 80065d8:	2136      	movs	r1, #54	; 0x36
 80065da:	f7fc f90c 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 80065de:	4651      	mov	r1, sl
 80065e0:	4640      	mov	r0, r8
        color = newColor;
 80065e2:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 80065e6:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 80065ea:	f00b fb6b 	bl	8011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80065ee:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80065f2:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 80065f6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80065fa:	2324      	movs	r3, #36	; 0x24
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 80065fc:	a90a      	add	r1, sp, #40	; 0x28
 80065fe:	4650      	mov	r0, sl
 8006600:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006604:	970a      	str	r7, [sp, #40]	; 0x28
 8006606:	f00b fdf7 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800660a:	4651      	mov	r1, sl
 800660c:	4630      	mov	r0, r6
 800660e:	f009 fc3f 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 8006612:	ee19 0a10 	vmov	r0, s18
 8006616:	224e      	movs	r2, #78	; 0x4e
 8006618:	4629      	mov	r1, r5
 800661a:	f7fc f8ec 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 800661e:	4630      	mov	r0, r6
 8006620:	ee19 1a10 	vmov	r1, s18
 8006624:	f009 fc34 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006628:	4620      	mov	r0, r4
 800662a:	b00d      	add	sp, #52	; 0x34
 800662c:	ecbd 8b04 	vpop	{d8-d9}
 8006630:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006634:	0802d6f4 	.word	0x0802d6f4
 8006638:	0802e5d0 	.word	0x0802e5d0
 800663c:	0802e798 	.word	0x0802e798
 8006640:	0802e304 	.word	0x0802e304
 8006644:	0802d6dc 	.word	0x0802d6dc
 8006648:	08006317 	.word	0x08006317
 800664c:	0802bc78 	.word	0x0802bc78

08006650 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006650:	4770      	bx	lr

08006652 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006652:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006654:	68c2      	ldr	r2, [r0, #12]
 8006656:	6844      	ldr	r4, [r0, #4]
 8006658:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800665a:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800665c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006660:	07d2      	lsls	r2, r2, #31
 8006662:	bf48      	it	mi
 8006664:	5962      	ldrmi	r2, [r4, r5]
 8006666:	689b      	ldr	r3, [r3, #8]
    }
 8006668:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800666a:	bf48      	it	mi
 800666c:	58d3      	ldrmi	r3, [r2, r3]
 800666e:	4718      	bx	r3

08006670 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006670:	6843      	ldr	r3, [r0, #4]
 8006672:	b12b      	cbz	r3, 8006680 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006674:	6883      	ldr	r3, [r0, #8]
 8006676:	b92b      	cbnz	r3, 8006684 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006678:	68c0      	ldr	r0, [r0, #12]
 800667a:	f000 0001 	and.w	r0, r0, #1
 800667e:	4770      	bx	lr
 8006680:	4618      	mov	r0, r3
 8006682:	4770      	bx	lr
 8006684:	2001      	movs	r0, #1
    }
 8006686:	4770      	bx	lr

08006688 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006688:	b510      	push	{r4, lr}
 800668a:	2110      	movs	r1, #16
 800668c:	4604      	mov	r4, r0
 800668e:	f022 ff0e 	bl	80294ae <_ZdlPvj>
 8006692:	4620      	mov	r0, r4
 8006694:	bd10      	pop	{r4, pc}

08006696 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 8006696:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 800669a:	f001 bef7 	b.w	800848c <_ZN17Gauge_with_Values10initializeEv>

0800669e <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 800669e:	3098      	adds	r0, #152	; 0x98
 80066a0:	4288      	cmp	r0, r1
{
 80066a2:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 80066a4:	d105      	bne.n	80066b2 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80066a6:	f00e fe8b 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 80066aa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 80066ae:	f7fd ba19 	b.w	8003ae4 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 80066b2:	bd08      	pop	{r3, pc}

080066b4 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 80066b4:	b510      	push	{r4, lr}
 80066b6:	4b07      	ldr	r3, [pc, #28]	; (80066d4 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x20>)
 80066b8:	6003      	str	r3, [r0, #0]
 80066ba:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80066bc:	f00d f97e 	bl	80139bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 80066c0:	4b05      	ldr	r3, [pc, #20]	; (80066d8 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x24>)
 80066c2:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 80066c6:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 80066ca:	f7fe fc61 	bl	8004f90 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 80066ce:	4620      	mov	r0, r4
 80066d0:	bd10      	pop	{r4, pc}
 80066d2:	bf00      	nop
 80066d4:	0802d740 	.word	0x0802d740
 80066d8:	0802dc4c 	.word	0x0802dc4c

080066dc <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 80066dc:	b510      	push	{r4, lr}
 80066de:	4604      	mov	r4, r0
}
 80066e0:	f7ff ffe8 	bl	80066b4 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 80066e4:	4620      	mov	r0, r4
 80066e6:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80066ea:	f022 fee0 	bl	80294ae <_ZdlPvj>
 80066ee:	4620      	mov	r0, r4
 80066f0:	bd10      	pop	{r4, pc}
	...

080066f4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 80066f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80066f8:	ed2d 8b04 	vpush	{d8-d9}
 80066fc:	4604      	mov	r4, r0
 80066fe:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 8006700:	46a1      	mov	r9, r4
 8006702:	2500      	movs	r5, #0
 8006704:	f010 fadc 	bl	8016cc0 <_ZN8touchgfx6ScreenC1Ev>
 8006708:	4bac      	ldr	r3, [pc, #688]	; (80069bc <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c8>)
 800670a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800670c:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8006710:	2226      	movs	r2, #38	; 0x26
 8006712:	4629      	mov	r1, r5
 8006714:	4648      	mov	r0, r9
 8006716:	f023 fee2 	bl	802a4de <memset>
 800671a:	4648      	mov	r0, r9
 800671c:	f7fc f88c 	bl	8002838 <_ZN8touchgfx6WidgetC1Ev>
 8006720:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8006724:	26ff      	movs	r6, #255	; 0xff
 8006726:	4ba6      	ldr	r3, [pc, #664]	; (80069c0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2cc>)
 8006728:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800672a:	2226      	movs	r2, #38	; 0x26
 800672c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006730:	4629      	mov	r1, r5
 8006732:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006736:	4640      	mov	r0, r8
 8006738:	66a5      	str	r5, [r4, #104]	; 0x68
 800673a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800673e:	f023 fece 	bl	802a4de <memset>
 8006742:	4640      	mov	r0, r8
 8006744:	f7fc f878 	bl	8002838 <_ZN8touchgfx6WidgetC1Ev>
 8006748:	4b9e      	ldr	r3, [pc, #632]	; (80069c4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d0>)
 800674a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800674c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006750:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006754:	a90a      	add	r1, sp, #40	; 0x28
 8006756:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006758:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800675c:	f00c f927 	bl	80129ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006760:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8006764:	4618      	mov	r0, r3
 8006766:	ee08 3a10 	vmov	s16, r3
 800676a:	f00c fa61 	bl	8012c30 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800676e:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8006772:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8006776:	4618      	mov	r0, r3
 8006778:	ee08 3a90 	vmov	s17, r3
 800677c:	f7fc f86e 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 8006780:	4638      	mov	r0, r7
 8006782:	f00a ffdd 	bl	8011740 <_ZN8touchgfx4LineC1Ev>
 8006786:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800678a:	4618      	mov	r0, r3
 800678c:	9303      	str	r3, [sp, #12]
 800678e:	f7fa fc5b 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006792:	4b8d      	ldr	r3, [pc, #564]	; (80069c8 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d4>)
 8006794:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8006798:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 800679c:	3324      	adds	r3, #36	; 0x24
 800679e:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 80067a2:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 80067a6:	4658      	mov	r0, fp
 80067a8:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 80067ac:	f7fc f856 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 80067b0:	4650      	mov	r0, sl
 80067b2:	f7fc f853 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 80067b6:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 80067ba:	4618      	mov	r0, r3
 80067bc:	ee09 3a10 	vmov	s18, r3
 80067c0:	f001 fe5a 	bl	8008478 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80067c4:	4a81      	ldr	r2, [pc, #516]	; (80069cc <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d8>)
 80067c6:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80067ca:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 80067ce:	4a80      	ldr	r2, [pc, #512]	; (80069d0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2dc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80067d0:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80067d4:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 80067d8:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 80067dc:	f00d f8e4 	bl	80139a8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80067e0:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80067e4:	462a      	mov	r2, r5
 80067e6:	4648      	mov	r0, r9
 80067e8:	9300      	str	r3, [sp, #0]
 80067ea:	4629      	mov	r1, r5
 80067ec:	23f0      	movs	r3, #240	; 0xf0
 80067ee:	f7fc f80f 	bl	8002810 <_ZN8touchgfx8Drawable11setPositionEssss>
 80067f2:	1d26      	adds	r6, r4, #4
        color = newColor;
 80067f4:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80067f8:	66a3      	str	r3, [r4, #104]	; 0x68
 80067fa:	4649      	mov	r1, r9
 80067fc:	4630      	mov	r0, r6
 80067fe:	f009 fb47 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006802:	462a      	mov	r2, r5
 8006804:	4640      	mov	r0, r8
 8006806:	4629      	mov	r1, r5
 8006808:	f7fb fff5 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 800680c:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800680e:	4640      	mov	r0, r8
 8006810:	a90a      	add	r1, sp, #40	; 0x28
 8006812:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006816:	f00c f8ca 	bl	80129ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800681a:	4641      	mov	r1, r8
 800681c:	4630      	mov	r0, r6
 800681e:	f009 fb37 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8006822:	ee18 0a10 	vmov	r0, s16
 8006826:	f240 1201 	movw	r2, #257	; 0x101
 800682a:	2121      	movs	r1, #33	; 0x21
 800682c:	f7fb ffe3 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 8006830:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006832:	aa0a      	add	r2, sp, #40	; 0x28
 8006834:	a909      	add	r1, sp, #36	; 0x24
 8006836:	ee18 0a10 	vmov	r0, s16
 800683a:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800683e:	2302      	movs	r3, #2
 8006840:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006844:	f00b febd 	bl	80125c2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006848:	231d      	movs	r3, #29
        updateTextPosition();
 800684a:	ee18 0a10 	vmov	r0, s16
 800684e:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8006852:	f7fc f825 	bl	80028a0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8006856:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 800685a:	3314      	adds	r3, #20
        color = col;
 800685c:	f04f 39ff 	mov.w	r9, #4294967295
 8006860:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8006864:	ee18 1a10 	vmov	r1, s16
 8006868:	4630      	mov	r0, r6
        colorPressed = col;
 800686a:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 800686e:	f009 fb0f 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006872:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 8006876:	223c      	movs	r2, #60	; 0x3c
 8006878:	ee18 0a90 	vmov	r0, s17
 800687c:	2117      	movs	r1, #23
 800687e:	f7fb ffba 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 8006882:	ee18 1a90 	vmov	r1, s17
 8006886:	4640      	mov	r0, r8
        color = newColor;
 8006888:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 800688c:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006890:	f00b fa18 	bl	8011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006894:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006898:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 800689c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80068a0:	4b4c      	ldr	r3, [pc, #304]	; (80069d4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 80068a2:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 80068a4:	ee18 0a90 	vmov	r0, s17
 80068a8:	231e      	movs	r3, #30
 80068aa:	a90a      	add	r1, sp, #40	; 0x28
 80068ac:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80068b0:	f00b fca2 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80068b4:	ee18 1a90 	vmov	r1, s17
 80068b8:	4630      	mov	r0, r6
 80068ba:	f009 fae9 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80068be:	230a      	movs	r3, #10
 80068c0:	9300      	str	r3, [sp, #0]
 80068c2:	2232      	movs	r2, #50	; 0x32
 80068c4:	23f0      	movs	r3, #240	; 0xf0
 80068c6:	4629      	mov	r1, r5
 80068c8:	4638      	mov	r0, r7
 80068ca:	f7fb ffa1 	bl	8002810 <_ZN8touchgfx8Drawable11setPositionEssss>
 80068ce:	9b03      	ldr	r3, [sp, #12]
 80068d0:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80068d4:	22a0      	movs	r2, #160	; 0xa0
 80068d6:	4611      	mov	r1, r2
 80068d8:	4638      	mov	r0, r7
 80068da:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 80068de:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 80068e2:	f00b f843 	bl	801196c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80068e6:	22a0      	movs	r2, #160	; 0xa0
 80068e8:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80068ec:	4638      	mov	r0, r7
 80068ee:	f00b f848 	bl	8011982 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80068f2:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 80068f6:	2b20      	cmp	r3, #32
 80068f8:	d005      	beq.n	8006906 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x212>
        lineWidthQ5 = widthQ5;
 80068fa:	2320      	movs	r3, #32
 80068fc:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8006900:	4638      	mov	r0, r7
 8006902:	f00a ff3d 	bl	8011780 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006906:	4638      	mov	r0, r7
 8006908:	2101      	movs	r1, #1
 800690a:	f00b f845 	bl	8011998 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800690e:	4639      	mov	r1, r7
 8006910:	4630      	mov	r0, r6
 8006912:	f009 fabd 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8006916:	2500      	movs	r5, #0
    textArea2.setXY(69, 35);
 8006918:	2223      	movs	r2, #35	; 0x23
 800691a:	4658      	mov	r0, fp
        color = newColor;
 800691c:	f04f 39ff 	mov.w	r9, #4294967295
 8006920:	2145      	movs	r1, #69	; 0x45
 8006922:	f7fb ff68 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006926:	4659      	mov	r1, fp
 8006928:	4640      	mov	r0, r8
        color = newColor;
 800692a:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 800692e:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8006932:	f00b f9c7 	bl	8011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006936:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800693a:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 800693e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006942:	4f24      	ldr	r7, [pc, #144]	; (80069d4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 8006944:	970a      	str	r7, [sp, #40]	; 0x28
 8006946:	231f      	movs	r3, #31
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 8006948:	a90a      	add	r1, sp, #40	; 0x28
 800694a:	4658      	mov	r0, fp
 800694c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006950:	f00b fc52 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006954:	4659      	mov	r1, fp
 8006956:	4630      	mov	r0, r6
 8006958:	f009 fa9a 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800695c:	220c      	movs	r2, #12
 800695e:	4650      	mov	r0, sl
 8006960:	2136      	movs	r1, #54	; 0x36
 8006962:	f7fb ff48 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 8006966:	4651      	mov	r1, sl
 8006968:	4640      	mov	r0, r8
        color = newColor;
 800696a:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 800696e:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8006972:	f00b f9a7 	bl	8011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006976:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800697a:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 800697e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006982:	2320      	movs	r3, #32
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 8006984:	a90a      	add	r1, sp, #40	; 0x28
 8006986:	4650      	mov	r0, sl
 8006988:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800698c:	970a      	str	r7, [sp, #40]	; 0x28
 800698e:	f00b fc33 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006992:	4651      	mov	r1, sl
 8006994:	4630      	mov	r0, r6
 8006996:	f009 fa7b 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 800699a:	ee19 0a10 	vmov	r0, s18
 800699e:	224e      	movs	r2, #78	; 0x4e
 80069a0:	4629      	mov	r1, r5
 80069a2:	f7fb ff28 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 80069a6:	4630      	mov	r0, r6
 80069a8:	ee19 1a10 	vmov	r1, s18
 80069ac:	f009 fa70 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80069b0:	4620      	mov	r0, r4
 80069b2:	b00d      	add	sp, #52	; 0x34
 80069b4:	ecbd 8b04 	vpop	{d8-d9}
 80069b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80069bc:	0802d740 	.word	0x0802d740
 80069c0:	0802e5d0 	.word	0x0802e5d0
 80069c4:	0802e798 	.word	0x0802e798
 80069c8:	0802e304 	.word	0x0802e304
 80069cc:	0802d728 	.word	0x0802d728
 80069d0:	0800669f 	.word	0x0800669f
 80069d4:	0802bc78 	.word	0x0802bc78

080069d8 <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 80069d8:	4770      	bx	lr

080069da <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80069da:	4770      	bx	lr

080069dc <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80069dc:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80069de:	68c2      	ldr	r2, [r0, #12]
 80069e0:	6844      	ldr	r4, [r0, #4]
 80069e2:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80069e4:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80069e6:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80069ea:	07d2      	lsls	r2, r2, #31
 80069ec:	bf48      	it	mi
 80069ee:	5962      	ldrmi	r2, [r4, r5]
 80069f0:	689b      	ldr	r3, [r3, #8]
    }
 80069f2:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80069f4:	bf48      	it	mi
 80069f6:	58d3      	ldrmi	r3, [r2, r3]
 80069f8:	4718      	bx	r3

080069fa <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80069fa:	6843      	ldr	r3, [r0, #4]
 80069fc:	b12b      	cbz	r3, 8006a0a <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80069fe:	6883      	ldr	r3, [r0, #8]
 8006a00:	b92b      	cbnz	r3, 8006a0e <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006a02:	68c0      	ldr	r0, [r0, #12]
 8006a04:	f000 0001 	and.w	r0, r0, #1
 8006a08:	4770      	bx	lr
 8006a0a:	4618      	mov	r0, r3
 8006a0c:	4770      	bx	lr
 8006a0e:	2001      	movs	r0, #1
    }
 8006a10:	4770      	bx	lr

08006a12 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006a12:	b510      	push	{r4, lr}
 8006a14:	2110      	movs	r1, #16
 8006a16:	4604      	mov	r4, r0
 8006a18:	f022 fd49 	bl	80294ae <_ZdlPvj>
 8006a1c:	4620      	mov	r0, r4
 8006a1e:	bd10      	pop	{r4, pc}

08006a20 <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8006a20:	b510      	push	{r4, lr}
 8006a22:	4b03      	ldr	r3, [pc, #12]	; (8006a30 <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 8006a24:	6003      	str	r3, [r0, #0]
 8006a26:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006a28:	f00c ffc8 	bl	80139bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006a2c:	4620      	mov	r0, r4
 8006a2e:	bd10      	pop	{r4, pc}
 8006a30:	0802d78c 	.word	0x0802d78c

08006a34 <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8006a34:	b507      	push	{r0, r1, r2, lr}
 8006a36:	4b07      	ldr	r3, [pc, #28]	; (8006a54 <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 8006a38:	6003      	str	r3, [r0, #0]
 8006a3a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006a3c:	f00c ffbe 	bl	80139bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006a40:	9801      	ldr	r0, [sp, #4]
 8006a42:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8006a46:	f022 fd32 	bl	80294ae <_ZdlPvj>
 8006a4a:	9801      	ldr	r0, [sp, #4]
 8006a4c:	b003      	add	sp, #12
 8006a4e:	f85d fb04 	ldr.w	pc, [sp], #4
 8006a52:	bf00      	nop
 8006a54:	0802d78c 	.word	0x0802d78c

08006a58 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006a58:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8006a5a:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8006a5e:	4299      	cmp	r1, r3
{
 8006a60:	4604      	mov	r4, r0
 8006a62:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8006a64:	d103      	bne.n	8006a6e <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006a66:	f00e fcab 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8006a6a:	f7fc ffeb 	bl	8003a44 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 8006a6e:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006a72:	429d      	cmp	r5, r3
 8006a74:	d103      	bne.n	8006a7e <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8006a76:	f00e fca3 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 8006a7a:	f7fd f803 	bl	8003a84 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8006a7e:	f504 7422 	add.w	r4, r4, #648	; 0x288
 8006a82:	42a5      	cmp	r5, r4
 8006a84:	d105      	bne.n	8006a92 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8006a86:	f00e fc9b 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 8006a8a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 8006a8e:	f7fd b809 	b.w	8003aa4 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 8006a92:	bd38      	pop	{r3, r4, r5, pc}

08006a94 <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 8006a94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006a98:	ed2d 8b06 	vpush	{d8-d10}
 8006a9c:	4604      	mov	r4, r0
 8006a9e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 8006aa0:	46a3      	mov	fp, r4
 8006aa2:	2500      	movs	r5, #0
 8006aa4:	f010 f90c 	bl	8016cc0 <_ZN8touchgfx6ScreenC1Ev>
 8006aa8:	4b66      	ldr	r3, [pc, #408]	; (8006c44 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b0>)
 8006aaa:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006aac:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006ab0:	2226      	movs	r2, #38	; 0x26
 8006ab2:	4629      	mov	r1, r5
 8006ab4:	4658      	mov	r0, fp
 8006ab6:	f023 fd12 	bl	802a4de <memset>
 8006aba:	4658      	mov	r0, fp
 8006abc:	f7fb febc 	bl	8002838 <_ZN8touchgfx6WidgetC1Ev>
 8006ac0:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006ac4:	26ff      	movs	r6, #255	; 0xff
 8006ac6:	4b60      	ldr	r3, [pc, #384]	; (8006c48 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b4>)
 8006ac8:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006aca:	2226      	movs	r2, #38	; 0x26
 8006acc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006ad0:	4629      	mov	r1, r5
 8006ad2:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006ad6:	4650      	mov	r0, sl
 8006ad8:	66a5      	str	r5, [r4, #104]	; 0x68
 8006ada:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006ade:	f023 fcfe 	bl	802a4de <memset>
 8006ae2:	4650      	mov	r0, sl
 8006ae4:	f7fb fea8 	bl	8002838 <_ZN8touchgfx6WidgetC1Ev>
 8006ae8:	4b58      	ldr	r3, [pc, #352]	; (8006c4c <_ZN26Measurement_SingleViewBaseC1Ev+0x1b8>)
 8006aea:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006aec:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006af0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006af4:	a90a      	add	r1, sp, #40	; 0x28
 8006af6:	4650      	mov	r0, sl
 8006af8:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006afc:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006b00:	f00b ff55 	bl	80129ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006b04:	4648      	mov	r0, r9
 8006b06:	f7fb fea9 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8006b0a:	4b51      	ldr	r3, [pc, #324]	; (8006c50 <_ZN26Measurement_SingleViewBaseC1Ev+0x1bc>)
 8006b0c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006b10:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8006b14:	4618      	mov	r0, r3
 8006b16:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8006b1a:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 8006b1e:	ee08 3a90 	vmov	s17, r3
 8006b22:	f7fb fe9b 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 8006b26:	4638      	mov	r0, r7
 8006b28:	f00a fe0a 	bl	8011740 <_ZN8touchgfx4LineC1Ev>
 8006b2c:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006b30:	4618      	mov	r0, r3
 8006b32:	9303      	str	r3, [sp, #12]
 8006b34:	f7fa fa88 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006b38:	4b46      	ldr	r3, [pc, #280]	; (8006c54 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c0>)
 8006b3a:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8006b3e:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8006b42:	3324      	adds	r3, #36	; 0x24
 8006b44:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8006b48:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 8006b4c:	4640      	mov	r0, r8
 8006b4e:	f7fb fe85 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 8006b52:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8006b56:	4618      	mov	r0, r3
 8006b58:	ee08 3a10 	vmov	s16, r3
 8006b5c:	f7fb fe7e 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 8006b60:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8006b64:	4618      	mov	r0, r3
 8006b66:	ee09 3a10 	vmov	s18, r3
 8006b6a:	f00c f861 	bl	8012c30 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006b6e:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8006b72:	4618      	mov	r0, r3
 8006b74:	ee09 3a90 	vmov	s19, r3
 8006b78:	f00c f85a 	bl	8012c30 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006b7c:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006b80:	4618      	mov	r0, r3
 8006b82:	ee0a 3a10 	vmov	s20, r3
 8006b86:	f00c f853 	bl	8012c30 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006b8a:	4a33      	ldr	r2, [pc, #204]	; (8006c58 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c4>)
 8006b8c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006b90:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8006b94:	4a31      	ldr	r2, [pc, #196]	; (8006c5c <_ZN26Measurement_SingleViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006b96:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006b9a:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8006b9e:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8006ba2:	f00c ff01 	bl	80139a8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006ba6:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006baa:	462a      	mov	r2, r5
 8006bac:	4658      	mov	r0, fp
 8006bae:	9300      	str	r3, [sp, #0]
 8006bb0:	4629      	mov	r1, r5
 8006bb2:	23f0      	movs	r3, #240	; 0xf0
 8006bb4:	f7fb fe2c 	bl	8002810 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006bb8:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006bba:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006bbe:	66a3      	str	r3, [r4, #104]	; 0x68
 8006bc0:	4659      	mov	r1, fp
 8006bc2:	4630      	mov	r0, r6
 8006bc4:	f009 f964 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006bc8:	462a      	mov	r2, r5
 8006bca:	4650      	mov	r0, sl
 8006bcc:	4629      	mov	r1, r5
 8006bce:	f7fb fe12 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 8006bd2:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006bd4:	4650      	mov	r0, sl
 8006bd6:	a90a      	add	r1, sp, #40	; 0x28
 8006bd8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006bdc:	f00b fee7 	bl	80129ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006be0:	4651      	mov	r1, sl
 8006be2:	4630      	mov	r0, r6
 8006be4:	f009 f954 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8006be8:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006bec:	2156      	movs	r1, #86	; 0x56
 8006bee:	4648      	mov	r0, r9
 8006bf0:	f7fb fe01 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006bf4:	f04f 33ff 	mov.w	r3, #4294967295
 8006bf8:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006bfc:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006c00:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006c04:	f10d 0b10 	add.w	fp, sp, #16
 8006c08:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8006c0c:	4649      	mov	r1, r9
 8006c0e:	4658      	mov	r0, fp
 8006c10:	4798      	blx	r3
 8006c12:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8006c16:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006c1a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006c1e:	4b10      	ldr	r3, [pc, #64]	; (8006c60 <_ZN26Measurement_SingleViewBaseC1Ev+0x1cc>)
 8006c20:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTDC).getText());
 8006c22:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8006c26:	b92b      	cbnz	r3, 8006c34 <_ZN26Measurement_SingleViewBaseC1Ev+0x1a0>
 8006c28:	4b0e      	ldr	r3, [pc, #56]	; (8006c64 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d0>)
 8006c2a:	4a0f      	ldr	r2, [pc, #60]	; (8006c68 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8006c2c:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006c2e:	480f      	ldr	r0, [pc, #60]	; (8006c6c <_ZN26Measurement_SingleViewBaseC1Ev+0x1d8>)
 8006c30:	f023 fa50 	bl	802a0d4 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8006c34:	4b0e      	ldr	r3, [pc, #56]	; (8006c70 <_ZN26Measurement_SingleViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006c36:	881b      	ldrh	r3, [r3, #0]
 8006c38:	2b18      	cmp	r3, #24
 8006c3a:	d81d      	bhi.n	8006c78 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e4>
 8006c3c:	4b0d      	ldr	r3, [pc, #52]	; (8006c74 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e0>)
 8006c3e:	4a0a      	ldr	r2, [pc, #40]	; (8006c68 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8006c40:	2161      	movs	r1, #97	; 0x61
 8006c42:	e7f4      	b.n	8006c2e <_ZN26Measurement_SingleViewBaseC1Ev+0x19a>
 8006c44:	0802d78c 	.word	0x0802d78c
 8006c48:	0802e5d0 	.word	0x0802e5d0
 8006c4c:	0802e798 	.word	0x0802e798
 8006c50:	0802bc88 	.word	0x0802bc88
 8006c54:	0802e304 	.word	0x0802e304
 8006c58:	0802d774 	.word	0x0802d774
 8006c5c:	08006a59 	.word	0x08006a59
 8006c60:	20012f7c 	.word	0x20012f7c
 8006c64:	0802bac8 	.word	0x0802bac8
 8006c68:	0802bbca 	.word	0x0802bbca
 8006c6c:	0802bb45 	.word	0x0802bb45
 8006c70:	20012f80 	.word	0x20012f80
 8006c74:	0802bb8c 	.word	0x0802bb8c
        return texts->getText(typedTextId);
 8006c78:	4b96      	ldr	r3, [pc, #600]	; (8006ed4 <_ZN26Measurement_SingleViewBaseC1Ev+0x440>)
 8006c7a:	2118      	movs	r1, #24
 8006c7c:	6818      	ldr	r0, [r3, #0]
 8006c7e:	f001 fabd 	bl	80081fc <_ZNK8touchgfx5Texts7getTextEt>
 8006c82:	4a95      	ldr	r2, [pc, #596]	; (8006ed8 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>)
 8006c84:	4603      	mov	r3, r0
 8006c86:	2104      	movs	r1, #4
 8006c88:	4650      	mov	r0, sl
 8006c8a:	f011 fd09 	bl	80186a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8006c8e:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 8006c92:	4648      	mov	r0, r9
 8006c94:	f00b fa90 	bl	80121b8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006c98:	f8df a240 	ldr.w	sl, [pc, #576]	; 8006edc <_ZN26Measurement_SingleViewBaseC1Ev+0x448>
 8006c9c:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006ca0:	2319      	movs	r3, #25
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDD5));
 8006ca2:	a90a      	add	r1, sp, #40	; 0x28
 8006ca4:	4648      	mov	r0, r9
 8006ca6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006caa:	f00b faa5 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006cae:	4649      	mov	r1, r9
 8006cb0:	4630      	mov	r0, r6
 8006cb2:	f009 f8ed 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(41, 60);
 8006cb6:	223c      	movs	r2, #60	; 0x3c
 8006cb8:	ee18 0a90 	vmov	r0, s17
 8006cbc:	2129      	movs	r1, #41	; 0x29
 8006cbe:	f7fb fd9a 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006cc2:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8006cc6:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8006cca:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006cce:	4658      	mov	r0, fp
        linespace = space;
 8006cd0:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8006cd4:	f00a fff6 	bl	8011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006cd8:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8006cdc:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8006ce0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006ce4:	2328      	movs	r3, #40	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 8006ce6:	eb0d 0103 	add.w	r1, sp, r3
 8006cea:	ee18 0a90 	vmov	r0, s17
 8006cee:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006cf2:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006cf6:	f00b fa7f 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006cfa:	ee18 1a90 	vmov	r1, s17
 8006cfe:	4630      	mov	r0, r6
 8006d00:	f009 f8c6 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006d04:	230a      	movs	r3, #10
 8006d06:	9300      	str	r3, [sp, #0]
 8006d08:	2232      	movs	r2, #50	; 0x32
 8006d0a:	23f0      	movs	r3, #240	; 0xf0
 8006d0c:	4629      	mov	r1, r5
 8006d0e:	4638      	mov	r0, r7
 8006d10:	f7fb fd7e 	bl	8002810 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006d14:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006d18:	22a0      	movs	r2, #160	; 0xa0
 8006d1a:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006d1e:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8006d22:	9b03      	ldr	r3, [sp, #12]
 8006d24:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8006d28:	4611      	mov	r1, r2
 8006d2a:	4638      	mov	r0, r7
 8006d2c:	f00a fe1e 	bl	801196c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006d30:	22a0      	movs	r2, #160	; 0xa0
 8006d32:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006d36:	4638      	mov	r0, r7
 8006d38:	f00a fe23 	bl	8011982 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006d3c:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8006d40:	2b20      	cmp	r3, #32
 8006d42:	d005      	beq.n	8006d50 <_ZN26Measurement_SingleViewBaseC1Ev+0x2bc>
        lineWidthQ5 = widthQ5;
 8006d44:	2320      	movs	r3, #32
 8006d46:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8006d4a:	4638      	mov	r0, r7
 8006d4c:	f00a fd18 	bl	8011780 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006d50:	4638      	mov	r0, r7
 8006d52:	2101      	movs	r1, #1
 8006d54:	f00a fe20 	bl	8011998 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006d58:	4639      	mov	r1, r7
 8006d5a:	4630      	mov	r0, r6
 8006d5c:	f009 f898 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006d60:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8006d64:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8006d66:	2223      	movs	r2, #35	; 0x23
 8006d68:	4640      	mov	r0, r8
        linespace = space;
 8006d6a:	f04f 0a00 	mov.w	sl, #0
 8006d6e:	2145      	movs	r1, #69	; 0x45
 8006d70:	f7fb fd41 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006d74:	4641      	mov	r1, r8
 8006d76:	4638      	mov	r0, r7
        color = newColor;
 8006d78:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8006d7c:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8006d80:	f00a ffa0 	bl	8011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006d84:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006d88:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8006d8c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006d90:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8006edc <_ZN26Measurement_SingleViewBaseC1Ev+0x448>
 8006d94:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006d98:	2341      	movs	r3, #65	; 0x41
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 8006d9a:	a90a      	add	r1, sp, #40	; 0x28
 8006d9c:	4640      	mov	r0, r8
 8006d9e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006da2:	f00b fa29 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006da6:	4641      	mov	r1, r8
 8006da8:	4630      	mov	r0, r6
 8006daa:	f009 f871 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006dae:	ee18 0a10 	vmov	r0, s16
 8006db2:	220c      	movs	r2, #12
 8006db4:	2136      	movs	r1, #54	; 0x36
 8006db6:	f7fb fd1e 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 8006dba:	ee18 1a10 	vmov	r1, s16
 8006dbe:	4638      	mov	r0, r7
        color = newColor;
 8006dc0:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8006dc4:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006dc8:	f00a ff7c 	bl	8011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006dcc:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006dd0:	ee18 3a10 	vmov	r3, s16
 8006dd4:	333c      	adds	r3, #60	; 0x3c
 8006dd6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006dda:	2340      	movs	r3, #64	; 0x40
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 8006ddc:	ee18 0a10 	vmov	r0, s16
 8006de0:	a90a      	add	r1, sp, #40	; 0x28
 8006de2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006de6:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006dea:	f00b fa05 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006dee:	ee18 1a10 	vmov	r1, s16
 8006df2:	4630      	mov	r0, r6
 8006df4:	f009 f84c 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006df8:	ee19 0a10 	vmov	r0, s18
 8006dfc:	22f0      	movs	r2, #240	; 0xf0
 8006dfe:	2121      	movs	r1, #33	; 0x21
 8006e00:	f7fb fcf9 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 8006e04:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006e08:	aa0a      	add	r2, sp, #40	; 0x28
 8006e0a:	f04f 0802 	mov.w	r8, #2
 8006e0e:	a909      	add	r1, sp, #36	; 0x24
 8006e10:	ee19 0a10 	vmov	r0, s18
 8006e14:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006e18:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8006e1c:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006e20:	f00b fbcf 	bl	80125c2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006e24:	233f      	movs	r3, #63	; 0x3f
 8006e26:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006e2a:	3710      	adds	r7, #16
        updateTextPosition();
 8006e2c:	ee19 0a10 	vmov	r0, s18
 8006e30:	f7fb fd36 	bl	80028a0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006e34:	ee19 1a10 	vmov	r1, s18
 8006e38:	4630      	mov	r0, r6
        colorPressed = col;
 8006e3a:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8006e3e:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8006e42:	f009 f825 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8006e46:	ee19 0a90 	vmov	r0, s19
 8006e4a:	22aa      	movs	r2, #170	; 0xaa
 8006e4c:	2121      	movs	r1, #33	; 0x21
 8006e4e:	f7fb fcd2 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006e52:	aa0a      	add	r2, sp, #40	; 0x28
 8006e54:	a909      	add	r1, sp, #36	; 0x24
 8006e56:	ee19 0a90 	vmov	r0, s19
 8006e5a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006e5e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006e62:	f00b fbae 	bl	80125c2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006e66:	233e      	movs	r3, #62	; 0x3e
 8006e68:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006e6c:	ee19 0a90 	vmov	r0, s19
 8006e70:	f7fb fd16 	bl	80028a0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006e74:	ee19 1a90 	vmov	r1, s19
 8006e78:	4630      	mov	r0, r6
        colorPressed = col;
 8006e7a:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8006e7e:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8006e82:	f009 f805 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8006e86:	ee1a 0a10 	vmov	r0, s20
 8006e8a:	2264      	movs	r2, #100	; 0x64
 8006e8c:	2121      	movs	r1, #33	; 0x21
 8006e8e:	f7fb fcb2 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006e92:	aa0a      	add	r2, sp, #40	; 0x28
 8006e94:	a909      	add	r1, sp, #36	; 0x24
 8006e96:	ee1a 0a10 	vmov	r0, s20
 8006e9a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006e9e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006ea2:	f00b fb8e 	bl	80125c2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006ea6:	233d      	movs	r3, #61	; 0x3d
        updateTextPosition();
 8006ea8:	ee1a 0a10 	vmov	r0, s20
 8006eac:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8006eb0:	f7fb fcf6 	bl	80028a0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006eb4:	4630      	mov	r0, r6
        colorPressed = col;
 8006eb6:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8006eba:	ee1a 1a10 	vmov	r1, s20
 8006ebe:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8006ec2:	f008 ffe5 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006ec6:	4620      	mov	r0, r4
 8006ec8:	b00d      	add	sp, #52	; 0x34
 8006eca:	ecbd 8b06 	vpop	{d8-d10}
 8006ece:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006ed2:	bf00      	nop
 8006ed4:	20012f88 	.word	0x20012f88
 8006ed8:	0802bc02 	.word	0x0802bc02
 8006edc:	0802bc78 	.word	0x0802bc78

08006ee0 <_ZN37Measurement_Single_Display_1PViewBase7testGuiEv>:
     * Virtual Action Handlers
     */
    virtual void testGui()
    {
        // Override and implement this function in Measurement_Single_Display_1P
    }
 8006ee0:	4770      	bx	lr

08006ee2 <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_1PViewBase::setupScreen()
{

}
 8006ee2:	4770      	bx	lr

08006ee4 <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv>:
void Measurement_Single_Display_1PViewBase::handleTickEvent()
{
    //Interaction2
    //When every N tick call virtual function
    //Call testGui
    testGui();
 8006ee4:	6803      	ldr	r3, [r0, #0]
 8006ee6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006ee8:	4718      	bx	r3

08006eea <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006eea:	4770      	bx	lr

08006eec <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006eec:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006eee:	68c2      	ldr	r2, [r0, #12]
 8006ef0:	6844      	ldr	r4, [r0, #4]
 8006ef2:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006ef4:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006ef6:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006efa:	07d2      	lsls	r2, r2, #31
 8006efc:	bf48      	it	mi
 8006efe:	5962      	ldrmi	r2, [r4, r5]
 8006f00:	689b      	ldr	r3, [r3, #8]
    }
 8006f02:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006f04:	bf48      	it	mi
 8006f06:	58d3      	ldrmi	r3, [r2, r3]
 8006f08:	4718      	bx	r3

08006f0a <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006f0a:	6843      	ldr	r3, [r0, #4]
 8006f0c:	b12b      	cbz	r3, 8006f1a <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006f0e:	6883      	ldr	r3, [r0, #8]
 8006f10:	b92b      	cbnz	r3, 8006f1e <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006f12:	68c0      	ldr	r0, [r0, #12]
 8006f14:	f000 0001 	and.w	r0, r0, #1
 8006f18:	4770      	bx	lr
 8006f1a:	4618      	mov	r0, r3
 8006f1c:	4770      	bx	lr
 8006f1e:	2001      	movs	r0, #1
    }
 8006f20:	4770      	bx	lr

08006f22 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006f22:	b510      	push	{r4, lr}
 8006f24:	2110      	movs	r1, #16
 8006f26:	4604      	mov	r4, r0
 8006f28:	f022 fac1 	bl	80294ae <_ZdlPvj>
 8006f2c:	4620      	mov	r0, r4
 8006f2e:	bd10      	pop	{r4, pc}

08006f30 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8006f30:	b510      	push	{r4, lr}
 8006f32:	4b03      	ldr	r3, [pc, #12]	; (8006f40 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x10>)
 8006f34:	6003      	str	r3, [r0, #0]
 8006f36:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006f38:	f00c fd40 	bl	80139bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006f3c:	4620      	mov	r0, r4
 8006f3e:	bd10      	pop	{r4, pc}
 8006f40:	0802d7d8 	.word	0x0802d7d8

08006f44 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8006f44:	b507      	push	{r0, r1, r2, lr}
 8006f46:	4b07      	ldr	r3, [pc, #28]	; (8006f64 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev+0x20>)
 8006f48:	6003      	str	r3, [r0, #0]
 8006f4a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006f4c:	f00c fd36 	bl	80139bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006f50:	9801      	ldr	r0, [sp, #4]
 8006f52:	f241 31f4 	movw	r1, #5108	; 0x13f4
 8006f56:	f022 faaa 	bl	80294ae <_ZdlPvj>
 8006f5a:	9801      	ldr	r0, [sp, #4]
 8006f5c:	b003      	add	sp, #12
 8006f5e:	f85d fb04 	ldr.w	pc, [sp], #4
 8006f62:	bf00      	nop
 8006f64:	0802d7d8 	.word	0x0802d7d8

08006f68 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 8006f68:	f500 60aa 	add.w	r0, r0, #1360	; 0x550
 8006f6c:	4288      	cmp	r0, r1
{
 8006f6e:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006f70:	d105      	bne.n	8006f7e <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006f72:	f00e fa25 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
}
 8006f76:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8006f7a:	f7fc bd73 	b.w	8003a64 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8006f7e:	bd08      	pop	{r3, pc}

08006f80 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 8006f80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006f84:	ed2d 8b0a 	vpush	{d8-d12}
 8006f88:	4604      	mov	r4, r0
 8006f8a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Single_Display_1PViewBase::buttonCallbackHandler)
 8006f8c:	46a1      	mov	r9, r4
 8006f8e:	2500      	movs	r5, #0
 8006f90:	f00f fe96 	bl	8016cc0 <_ZN8touchgfx6ScreenC1Ev>
 8006f94:	4ba8      	ldr	r3, [pc, #672]	; (8007238 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b8>)
 8006f96:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006f98:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8006f9c:	2226      	movs	r2, #38	; 0x26
 8006f9e:	4629      	mov	r1, r5
 8006fa0:	4648      	mov	r0, r9
 8006fa2:	f023 fa9c 	bl	802a4de <memset>
 8006fa6:	4648      	mov	r0, r9
 8006fa8:	f7fb fc46 	bl	8002838 <_ZN8touchgfx6WidgetC1Ev>
 8006fac:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8006fb0:	26ff      	movs	r6, #255	; 0xff
 8006fb2:	4ba2      	ldr	r3, [pc, #648]	; (800723c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2bc>)
 8006fb4:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006fb6:	2226      	movs	r2, #38	; 0x26
 8006fb8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006fbc:	4629      	mov	r1, r5
 8006fbe:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006fc2:	4640      	mov	r0, r8
 8006fc4:	66a5      	str	r5, [r4, #104]	; 0x68
 8006fc6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006fca:	f023 fa88 	bl	802a4de <memset>
 8006fce:	4640      	mov	r0, r8
 8006fd0:	f7fb fc32 	bl	8002838 <_ZN8touchgfx6WidgetC1Ev>
 8006fd4:	4b9a      	ldr	r3, [pc, #616]	; (8007240 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c0>)
 8006fd6:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006fd8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006fdc:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006fe0:	a90a      	add	r1, sp, #40	; 0x28
 8006fe2:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8006fe6:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006fe8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006fec:	f00b fcdf 	bl	80129ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006ff0:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8006ff4:	4658      	mov	r0, fp
 8006ff6:	f7fb fc31 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 8006ffa:	4638      	mov	r0, r7
 8006ffc:	f00b f99a 	bl	8012334 <_ZN8touchgfx5GaugeC1Ev>
 8007000:	f504 7320 	add.w	r3, r4, #640	; 0x280
        : TextArea()
 8007004:	4618      	mov	r0, r3
 8007006:	ee09 3a10 	vmov	s18, r3
        : TextAreaWithWildcardBase(), wc1(0)
 800700a:	4e8e      	ldr	r6, [pc, #568]	; (8007244 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c4>)
        : TextArea()
 800700c:	f7fb fc26 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 8007010:	f504 7333 	add.w	r3, r4, #716	; 0x2cc
        : TextAreaWithWildcardBase(), wc1(0)
 8007014:	f8c4 6280 	str.w	r6, [r4, #640]	; 0x280
        : TextArea()
 8007018:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 800701a:	f8c4 52c8 	str.w	r5, [r4, #712]	; 0x2c8
 800701e:	ee09 3a90 	vmov	s19, r3
        : TextArea()
 8007022:	f7fb fc1b 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 8007026:	f504 7346 	add.w	r3, r4, #792	; 0x318
        : TextAreaWithWildcardBase(), wc1(0)
 800702a:	f8c4 62cc 	str.w	r6, [r4, #716]	; 0x2cc
        : TextArea()
 800702e:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007030:	f8c4 5314 	str.w	r5, [r4, #788]	; 0x314
 8007034:	ee0a 3a10 	vmov	s20, r3
        : TextArea()
 8007038:	f7fb fc10 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 800703c:	f504 7359 	add.w	r3, r4, #868	; 0x364
        : TextAreaWithWildcardBase(), wc1(0)
 8007040:	f8c4 6318 	str.w	r6, [r4, #792]	; 0x318
 8007044:	4618      	mov	r0, r3
 8007046:	f8c4 5360 	str.w	r5, [r4, #864]	; 0x360
 800704a:	ee0a 3a90 	vmov	s21, r3
 800704e:	f7fb fc05 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 8007052:	f504 736b 	add.w	r3, r4, #940	; 0x3ac
 8007056:	4618      	mov	r0, r3
 8007058:	ee0b 3a10 	vmov	s22, r3
 800705c:	f7fb fbfe 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 8007060:	f504 737d 	add.w	r3, r4, #1012	; 0x3f4
 8007064:	4618      	mov	r0, r3
 8007066:	f204 4a3c 	addw	sl, r4, #1084	; 0x43c
 800706a:	ee0b 3a90 	vmov	s23, r3
 800706e:	f7fb fbf5 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 8007072:	4650      	mov	r0, sl
 8007074:	f00a fb64 	bl	8011740 <_ZN8touchgfx4LineC1Ev>
 8007078:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800707c:	4618      	mov	r0, r3
 800707e:	9303      	str	r3, [sp, #12]
 8007080:	f7f9 ffe2 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007084:	4b70      	ldr	r3, [pc, #448]	; (8007248 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c8>)
 8007086:	f8c4 34ac 	str.w	r3, [r4, #1196]	; 0x4ac
 800708a:	3324      	adds	r3, #36	; 0x24
 800708c:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 8007090:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 8007094:	4618      	mov	r0, r3
 8007096:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 800709a:	ee08 3a10 	vmov	s16, r3
 800709e:	f7fb fbdd 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 80070a2:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 80070a6:	4618      	mov	r0, r3
 80070a8:	ee08 3a90 	vmov	s17, r3
 80070ac:	f7fb fbd6 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 80070b0:	f504 63aa 	add.w	r3, r4, #1360	; 0x550
 80070b4:	4618      	mov	r0, r3
 80070b6:	ee0c 3a10 	vmov	s24, r3
 80070ba:	f00b fdb9 	bl	8012c30 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80070be:	4a63      	ldr	r2, [pc, #396]	; (800724c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2cc>)
 80070c0:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80070c4:	e9c3 24f9 	strd	r2, r4, [r3, #996]	; 0x3e4
 80070c8:	4a61      	ldr	r2, [pc, #388]	; (8007250 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80070ca:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80070ce:	e9c3 25fb 	strd	r2, r5, [r3, #1004]	; 0x3ec
 80070d2:	f204 50d4 	addw	r0, r4, #1492	; 0x5d4
 80070d6:	f00c fc67 	bl	80139a8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80070da:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80070de:	462a      	mov	r2, r5
 80070e0:	4648      	mov	r0, r9
 80070e2:	9300      	str	r3, [sp, #0]
 80070e4:	4629      	mov	r1, r5
 80070e6:	23f0      	movs	r3, #240	; 0xf0
 80070e8:	f7fb fb92 	bl	8002810 <_ZN8touchgfx8Drawable11setPositionEssss>
 80070ec:	1d26      	adds	r6, r4, #4
        color = newColor;
 80070ee:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80070f2:	66a3      	str	r3, [r4, #104]	; 0x68
 80070f4:	4649      	mov	r1, r9
 80070f6:	4630      	mov	r0, r6
 80070f8:	f008 feca 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80070fc:	462a      	mov	r2, r5
 80070fe:	4640      	mov	r0, r8
 8007100:	4629      	mov	r1, r5
 8007102:	f7fb fb78 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 8007106:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007108:	4640      	mov	r0, r8
 800710a:	a90a      	add	r1, sp, #40	; 0x28
 800710c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007110:	f00b fc4d 	bl	80129ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007114:	4641      	mov	r1, r8
 8007116:	4630      	mov	r0, r6
 8007118:	f008 feba 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 800711c:	223c      	movs	r2, #60	; 0x3c
 800711e:	211f      	movs	r1, #31
 8007120:	4658      	mov	r0, fp
 8007122:	f7fb fb68 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 8007126:	f10d 0810 	add.w	r8, sp, #16
        color = newColor;
 800712a:	f04f 33ff 	mov.w	r3, #4294967295
 800712e:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8007132:	4659      	mov	r1, fp
 8007134:	4640      	mov	r0, r8
        linespace = space;
 8007136:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800713a:	f00a fdc3 	bl	8011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800713e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007142:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8007146:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800714a:	4b42      	ldr	r3, [pc, #264]	; (8007254 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d4>)
 800714c:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 800714e:	a90a      	add	r1, sp, #40	; 0x28
 8007150:	2327      	movs	r3, #39	; 0x27
 8007152:	4658      	mov	r0, fp
 8007154:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007158:	f00b f84e 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800715c:	4659      	mov	r1, fp
 800715e:	4630      	mov	r0, r6
 8007160:	f008 fe96 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007164:	f04f 0304 	mov.w	r3, #4
    SMD1_gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8007168:	4638      	mov	r0, r7
 800716a:	a90a      	add	r1, sp, #40	; 0x28
 800716c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007170:	f008 fe20 	bl	800fdb4 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD1_gauge.setPosition(28, 94, 184, 106);
 8007174:	236a      	movs	r3, #106	; 0x6a
 8007176:	4638      	mov	r0, r7
 8007178:	9300      	str	r3, [sp, #0]
 800717a:	225e      	movs	r2, #94	; 0x5e
 800717c:	23b8      	movs	r3, #184	; 0xb8
 800717e:	211c      	movs	r1, #28
 8007180:	f7fb fb46 	bl	8002810 <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD1_gauge.setCenter(92, 92);
 8007184:	225c      	movs	r2, #92	; 0x5c
 8007186:	4611      	mov	r1, r2
 8007188:	4638      	mov	r0, r7
 800718a:	f00b f97e 	bl	801248a <_ZN8touchgfx5Gauge9setCenterEii>
    SMD1_gauge.setStartEndAngle(-90, 90);
 800718e:	4638      	mov	r0, r7
 8007190:	225a      	movs	r2, #90	; 0x5a
 8007192:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8007196:	f00b f9fd 	bl	8012594 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD1_gauge.setRange(-90, 90);
 800719a:	462b      	mov	r3, r5
 800719c:	225a      	movs	r2, #90	; 0x5a
 800719e:	4638      	mov	r0, r7
 80071a0:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80071a4:	9500      	str	r5, [sp, #0]
 80071a6:	f008 fcb2 	bl	800fb0e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD1_gauge.setValue(0);
 80071aa:	4638      	mov	r0, r7
 80071ac:	4629      	mov	r1, r5
 80071ae:	f00b f99b 	bl	80124e8 <_ZN8touchgfx5Gauge8setValueEi>
    SMD1_gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 80071b2:	2335      	movs	r3, #53	; 0x35
 80071b4:	2208      	movs	r2, #8
 80071b6:	4638      	mov	r0, r7
 80071b8:	2105      	movs	r1, #5
 80071ba:	f00b f951 	bl	8012460 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD1_gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80071be:	4638      	mov	r0, r7
 80071c0:	2101      	movs	r1, #1
 80071c2:	f00b f8ef 	bl	80123a4 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD1_gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80071c6:	4638      	mov	r0, r7
 80071c8:	2101      	movs	r1, #1
 80071ca:	f00b f8ee 	bl	80123aa <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 80071ce:	4639      	mov	r1, r7
 80071d0:	4630      	mov	r0, r6
 80071d2:	f008 fe5d 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Current.setPosition(0, 230, 240, 15);
 80071d6:	230f      	movs	r3, #15
 80071d8:	22e6      	movs	r2, #230	; 0xe6
 80071da:	ee19 0a10 	vmov	r0, s18
 80071de:	9300      	str	r3, [sp, #0]
 80071e0:	4629      	mov	r1, r5
 80071e2:	23f0      	movs	r3, #240	; 0xf0
 80071e4:	f7fb fb14 	bl	8002810 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 80071e8:	f04f 33ff 	mov.w	r3, #4294967295
 80071ec:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        boundingArea = calculateBoundingArea();
 80071f0:	f8d4 3280 	ldr.w	r3, [r4, #640]	; 0x280
        linespace = space;
 80071f4:	f8a4 52b4 	strh.w	r5, [r4, #692]	; 0x2b4
        boundingArea = calculateBoundingArea();
 80071f8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80071fc:	4f16      	ldr	r7, [pc, #88]	; (8007258 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d8>)
 80071fe:	ee19 1a10 	vmov	r1, s18
 8007202:	4640      	mov	r0, r8
 8007204:	4798      	blx	r3
 8007206:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800720a:	f504 732f 	add.w	r3, r4, #700	; 0x2bc
 800720e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007212:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1WKT).getText());
 8007214:	f504 69b3 	add.w	r9, r4, #1432	; 0x598
 8007218:	b92b      	cbnz	r3, 8007226 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a6>
 800721a:	4b10      	ldr	r3, [pc, #64]	; (800725c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2dc>)
 800721c:	4a10      	ldr	r2, [pc, #64]	; (8007260 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e0>)
 800721e:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007220:	4810      	ldr	r0, [pc, #64]	; (8007264 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 8007222:	f022 ff57 	bl	802a0d4 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8007226:	f8df b044 	ldr.w	fp, [pc, #68]	; 800726c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ec>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800722a:	f8bb 3000 	ldrh.w	r3, [fp]
 800722e:	b9fb      	cbnz	r3, 8007270 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f0>
 8007230:	4b0d      	ldr	r3, [pc, #52]	; (8007268 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e8>)
 8007232:	4a0b      	ldr	r2, [pc, #44]	; (8007260 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e0>)
 8007234:	2161      	movs	r1, #97	; 0x61
 8007236:	e7f3      	b.n	8007220 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a0>
 8007238:	0802d7d8 	.word	0x0802d7d8
 800723c:	0802e5d0 	.word	0x0802e5d0
 8007240:	0802e798 	.word	0x0802e798
 8007244:	0802bc88 	.word	0x0802bc88
 8007248:	0802e304 	.word	0x0802e304
 800724c:	0802d7c0 	.word	0x0802d7c0
 8007250:	08006f69 	.word	0x08006f69
 8007254:	0802bc78 	.word	0x0802bc78
 8007258:	20012f7c 	.word	0x20012f7c
 800725c:	0802bac8 	.word	0x0802bac8
 8007260:	0802bbca 	.word	0x0802bbca
 8007264:	0802bb45 	.word	0x0802bb45
 8007268:	0802bb8c 	.word	0x0802bb8c
 800726c:	20012f80 	.word	0x20012f80
        return texts->getText(typedTextId);
 8007270:	4bdf      	ldr	r3, [pc, #892]	; (80075f0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 8007272:	4629      	mov	r1, r5
 8007274:	6818      	ldr	r0, [r3, #0]
 8007276:	f000 ffc1 	bl	80081fc <_ZNK8touchgfx5Texts7getTextEt>
 800727a:	4ade      	ldr	r2, [pc, #888]	; (80075f4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 800727c:	4603      	mov	r3, r0
 800727e:	210a      	movs	r1, #10
 8007280:	4648      	mov	r0, r9
 8007282:	f011 fa0d 	bl	80186a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8007286:	4bdc      	ldr	r3, [pc, #880]	; (80075f8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
        wc1 = value;
 8007288:	f8c4 92c8 	str.w	r9, [r4, #712]	; 0x2c8
    SMD1_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y5P8));
 800728c:	ee19 0a10 	vmov	r0, s18
 8007290:	930a      	str	r3, [sp, #40]	; 0x28
 8007292:	a90a      	add	r1, sp, #40	; 0x28
 8007294:	2303      	movs	r3, #3
 8007296:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800729a:	f00a ffad 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800729e:	ee19 1a10 	vmov	r1, s18
 80072a2:	4630      	mov	r0, r6
 80072a4:	f008 fdf4 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Frequency.setPosition(0, 215, 240, 15);
 80072a8:	210f      	movs	r1, #15
 80072aa:	22d7      	movs	r2, #215	; 0xd7
 80072ac:	ee19 0a90 	vmov	r0, s19
 80072b0:	9100      	str	r1, [sp, #0]
 80072b2:	23f0      	movs	r3, #240	; 0xf0
 80072b4:	4629      	mov	r1, r5
 80072b6:	f7fb faab 	bl	8002810 <_ZN8touchgfx8Drawable11setPositionEssss>
 80072ba:	f8d4 32cc 	ldr.w	r3, [r4, #716]	; 0x2cc
        linespace = space;
 80072be:	f8a4 5300 	strh.w	r5, [r4, #768]	; 0x300
        color = newColor;
 80072c2:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 80072c6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80072ca:	f8c4 12fc 	str.w	r1, [r4, #764]	; 0x2fc
        boundingArea = calculateBoundingArea();
 80072ce:	4640      	mov	r0, r8
 80072d0:	ee19 1a90 	vmov	r1, s19
 80072d4:	4798      	blx	r3
 80072d6:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80072da:	f504 7342 	add.w	r3, r4, #776	; 0x308
 80072de:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80072e2:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9OHS).getText());
 80072e4:	f204 59ac 	addw	r9, r4, #1452	; 0x5ac
 80072e8:	2b00      	cmp	r3, #0
 80072ea:	d096      	beq.n	800721a <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x29a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80072ec:	f8bb 3000 	ldrh.w	r3, [fp]
 80072f0:	2b01      	cmp	r3, #1
 80072f2:	d99d      	bls.n	8007230 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b0>
        return texts->getText(typedTextId);
 80072f4:	4abe      	ldr	r2, [pc, #760]	; (80075f0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 80072f6:	2101      	movs	r1, #1
 80072f8:	6810      	ldr	r0, [r2, #0]
 80072fa:	f000 ff7f 	bl	80081fc <_ZNK8touchgfx5Texts7getTextEt>
 80072fe:	4abd      	ldr	r2, [pc, #756]	; (80075f4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 8007300:	4603      	mov	r3, r0
 8007302:	210a      	movs	r1, #10
 8007304:	4648      	mov	r0, r9
 8007306:	f011 f9cb 	bl	80186a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800730a:	f04f 0104 	mov.w	r1, #4
 800730e:	4bba      	ldr	r3, [pc, #744]	; (80075f8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
 8007310:	f8c4 9314 	str.w	r9, [r4, #788]	; 0x314
    SMD1_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PCCW));
 8007314:	ee19 0a90 	vmov	r0, s19
 8007318:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 800731c:	a90a      	add	r1, sp, #40	; 0x28
 800731e:	930a      	str	r3, [sp, #40]	; 0x28
 8007320:	f00a ff6a 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007324:	ee19 1a90 	vmov	r1, s19
 8007328:	4630      	mov	r0, r6
 800732a:	f008 fdb1 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Distance.setPosition(0, 200, 240, 15);
 800732e:	210f      	movs	r1, #15
 8007330:	22c8      	movs	r2, #200	; 0xc8
 8007332:	ee1a 0a10 	vmov	r0, s20
 8007336:	9100      	str	r1, [sp, #0]
 8007338:	23f0      	movs	r3, #240	; 0xf0
 800733a:	4629      	mov	r1, r5
 800733c:	f7fb fa68 	bl	8002810 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007340:	f8d4 3318 	ldr.w	r3, [r4, #792]	; 0x318
        linespace = space;
 8007344:	f8a4 534c 	strh.w	r5, [r4, #844]	; 0x34c
        color = newColor;
 8007348:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 800734c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8007350:	f8c4 1348 	str.w	r1, [r4, #840]	; 0x348
        boundingArea = calculateBoundingArea();
 8007354:	4640      	mov	r0, r8
 8007356:	ee1a 1a10 	vmov	r1, s20
 800735a:	4798      	blx	r3
 800735c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007360:	f504 7355 	add.w	r3, r4, #852	; 0x354
 8007364:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007368:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LVUK).getText());
 800736a:	f504 69b8 	add.w	r9, r4, #1472	; 0x5c0
 800736e:	2b00      	cmp	r3, #0
 8007370:	f43f af53 	beq.w	800721a <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x29a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007374:	f8bb 3000 	ldrh.w	r3, [fp]
 8007378:	2b02      	cmp	r3, #2
 800737a:	f67f af59 	bls.w	8007230 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b0>
        return texts->getText(typedTextId);
 800737e:	4a9c      	ldr	r2, [pc, #624]	; (80075f0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
        : typedTextId(id)
 8007380:	4f9d      	ldr	r7, [pc, #628]	; (80075f8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
        return texts->getText(typedTextId);
 8007382:	6810      	ldr	r0, [r2, #0]
 8007384:	2102      	movs	r1, #2
 8007386:	f000 ff39 	bl	80081fc <_ZNK8touchgfx5Texts7getTextEt>
 800738a:	4a9a      	ldr	r2, [pc, #616]	; (80075f4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 800738c:	4603      	mov	r3, r0
 800738e:	210a      	movs	r1, #10
 8007390:	4648      	mov	r0, r9
 8007392:	f011 f985 	bl	80186a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8007396:	2305      	movs	r3, #5
    SMD1_Distance.setTypedText(touchgfx::TypedText(T_SMD1_DISTANCE));
 8007398:	ee1a 0a10 	vmov	r0, s20
 800739c:	a90a      	add	r1, sp, #40	; 0x28
 800739e:	f8c4 9360 	str.w	r9, [r4, #864]	; 0x360
 80073a2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80073a6:	970a      	str	r7, [sp, #40]	; 0x28
 80073a8:	f00a ff26 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80073ac:	ee1a 1a10 	vmov	r1, s20
 80073b0:	4630      	mov	r0, r6
 80073b2:	f008 fd6d 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 76);
 80073b6:	224c      	movs	r2, #76	; 0x4c
 80073b8:	ee1a 0a90 	vmov	r0, s21
 80073bc:	2171      	movs	r1, #113	; 0x71
 80073be:	f7fb fa1a 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80073c2:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 80073c6:	ee1a 1a90 	vmov	r1, s21
        color = newColor;
 80073ca:	f8c4 3394 	str.w	r3, [r4, #916]	; 0x394
        boundingArea = calculateBoundingArea();
 80073ce:	4640      	mov	r0, r8
        linespace = space;
 80073d0:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        boundingArea = calculateBoundingArea();
 80073d4:	f00a fc76 	bl	8011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80073d8:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80073dc:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 80073e0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80073e4:	2306      	movs	r3, #6
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q5GP));
 80073e6:	ee1a 0a90 	vmov	r0, s21
 80073ea:	a90a      	add	r1, sp, #40	; 0x28
 80073ec:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80073f0:	970a      	str	r7, [sp, #40]	; 0x28
 80073f2:	f00a ff01 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80073f6:	ee1a 1a90 	vmov	r1, s21
 80073fa:	4630      	mov	r0, r6
 80073fc:	f008 fd48 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 185);
 8007400:	22b9      	movs	r2, #185	; 0xb9
 8007402:	ee1b 0a10 	vmov	r0, s22
 8007406:	4629      	mov	r1, r5
 8007408:	f7fb f9f5 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800740c:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8007410:	ee1b 1a10 	vmov	r1, s22
        color = newColor;
 8007414:	f8c4 33dc 	str.w	r3, [r4, #988]	; 0x3dc
        boundingArea = calculateBoundingArea();
 8007418:	4640      	mov	r0, r8
        linespace = space;
 800741a:	f8a4 53e0 	strh.w	r5, [r4, #992]	; 0x3e0
        boundingArea = calculateBoundingArea();
 800741e:	f00a fc51 	bl	8011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007422:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007426:	f504 737a 	add.w	r3, r4, #1000	; 0x3e8
 800742a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800742e:	2307      	movs	r3, #7
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VCZH));
 8007430:	ee1b 0a10 	vmov	r0, s22
 8007434:	a90a      	add	r1, sp, #40	; 0x28
 8007436:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800743a:	970a      	str	r7, [sp, #40]	; 0x28
 800743c:	f00a fedc 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007440:	ee1b 1a10 	vmov	r1, s22
 8007444:	4630      	mov	r0, r6
 8007446:	f008 fd23 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_2.setXY(217, 185);
 800744a:	22b9      	movs	r2, #185	; 0xb9
 800744c:	ee1b 0a90 	vmov	r0, s23
 8007450:	21d9      	movs	r1, #217	; 0xd9
 8007452:	f7fb f9d0 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007456:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 800745a:	ee1b 1a90 	vmov	r1, s23
        color = newColor;
 800745e:	f8c4 3424 	str.w	r3, [r4, #1060]	; 0x424
        boundingArea = calculateBoundingArea();
 8007462:	4640      	mov	r0, r8
        linespace = space;
 8007464:	f8a4 5428 	strh.w	r5, [r4, #1064]	; 0x428
        boundingArea = calculateBoundingArea();
 8007468:	f00a fc2c 	bl	8011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800746c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007470:	f504 6386 	add.w	r3, r4, #1072	; 0x430
 8007474:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007478:	2308      	movs	r3, #8
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B5GD));
 800747a:	ee1b 0a90 	vmov	r0, s23
 800747e:	a90a      	add	r1, sp, #40	; 0x28
 8007480:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007484:	970a      	str	r7, [sp, #40]	; 0x28
 8007486:	f00a feb7 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800748a:	ee1b 1a90 	vmov	r1, s23
 800748e:	4630      	mov	r0, r6
 8007490:	f008 fcfe 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007494:	230a      	movs	r3, #10
 8007496:	9300      	str	r3, [sp, #0]
 8007498:	2232      	movs	r2, #50	; 0x32
 800749a:	23f0      	movs	r3, #240	; 0xf0
 800749c:	4629      	mov	r1, r5
 800749e:	4650      	mov	r0, sl
 80074a0:	f7fb f9b6 	bl	8002810 <_ZN8touchgfx8Drawable11setPositionEssss>
 80074a4:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80074a8:	22a0      	movs	r2, #160	; 0xa0
 80074aa:	f8c4 34b8 	str.w	r3, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 80074ae:	f8a4 34bc 	strh.w	r3, [r4, #1212]	; 0x4bc
 80074b2:	9b03      	ldr	r3, [sp, #12]
 80074b4:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
 80074b8:	4611      	mov	r1, r2
 80074ba:	4650      	mov	r0, sl
 80074bc:	f00a fa56 	bl	801196c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80074c0:	22a0      	movs	r2, #160	; 0xa0
 80074c2:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80074c6:	4650      	mov	r0, sl
 80074c8:	f00a fa5b 	bl	8011982 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80074cc:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 80074d0:	2b20      	cmp	r3, #32
 80074d2:	d005      	beq.n	80074e0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x560>
        lineWidthQ5 = widthQ5;
 80074d4:	2320      	movs	r3, #32
 80074d6:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 80074da:	4650      	mov	r0, sl
 80074dc:	f00a f950 	bl	8011780 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80074e0:	4650      	mov	r0, sl
 80074e2:	2101      	movs	r1, #1
 80074e4:	f00a fa58 	bl	8011998 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80074e8:	4651      	mov	r1, sl
 80074ea:	4630      	mov	r0, r6
 80074ec:	f008 fcd0 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80074f0:	f04f 37ff 	mov.w	r7, #4294967295
        boundingArea = calculateBoundingArea();
 80074f4:	ad04      	add	r5, sp, #16
    textArea2.setXY(69, 35);
 80074f6:	ee18 0a10 	vmov	r0, s16
 80074fa:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 80074fc:	f04f 0900 	mov.w	r9, #0
 8007500:	2145      	movs	r1, #69	; 0x45
 8007502:	f7fb f978 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007506:	ee18 1a10 	vmov	r1, s16
 800750a:	4628      	mov	r0, r5
        color = newColor;
 800750c:	f8c4 74f0 	str.w	r7, [r4, #1264]	; 0x4f0
        linespace = space;
 8007510:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 8007514:	f00a fbd6 	bl	8011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007518:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800751c:	ee18 3a10 	vmov	r3, s16
 8007520:	333c      	adds	r3, #60	; 0x3c
 8007522:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007526:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 80075f8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>
 800752a:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 800752e:	2334      	movs	r3, #52	; 0x34
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 8007530:	ee18 0a10 	vmov	r0, s16
 8007534:	a90a      	add	r1, sp, #40	; 0x28
 8007536:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800753a:	f00a fe5d 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800753e:	ee18 1a10 	vmov	r1, s16
 8007542:	4630      	mov	r0, r6
 8007544:	f008 fca4 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007548:	ee18 0a90 	vmov	r0, s17
 800754c:	220c      	movs	r2, #12
 800754e:	2136      	movs	r1, #54	; 0x36
 8007550:	f7fb f951 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 8007554:	ee18 1a90 	vmov	r1, s17
 8007558:	4628      	mov	r0, r5
        color = newColor;
 800755a:	f8c4 7538 	str.w	r7, [r4, #1336]	; 0x538
        linespace = space;
 800755e:	f8a4 953c 	strh.w	r9, [r4, #1340]	; 0x53c
        boundingArea = calculateBoundingArea();
 8007562:	f00a fbaf 	bl	8011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007566:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800756a:	ee18 3a90 	vmov	r3, s17
 800756e:	333c      	adds	r3, #60	; 0x3c
 8007570:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007574:	2333      	movs	r3, #51	; 0x33
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 8007576:	ee18 0a90 	vmov	r0, s17
 800757a:	a90a      	add	r1, sp, #40	; 0x28
 800757c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007580:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 8007584:	f00a fe38 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007588:	ee18 1a90 	vmov	r1, s17
 800758c:	4630      	mov	r0, r6
 800758e:	f008 fc7f 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 256);
 8007592:	ee1c 0a10 	vmov	r0, s24
 8007596:	f44f 7280 	mov.w	r2, #256	; 0x100
 800759a:	2121      	movs	r1, #33	; 0x21
 800759c:	f7fb f92b 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 80075a0:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80075a2:	aa0a      	add	r2, sp, #40	; 0x28
 80075a4:	a909      	add	r1, sp, #36	; 0x24
 80075a6:	ee1c 0a10 	vmov	r0, s24
 80075aa:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80075ae:	2302      	movs	r3, #2
 80075b0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80075b4:	f00b f805 	bl	80125c2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80075b8:	2332      	movs	r3, #50	; 0x32
        updateTextPosition();
 80075ba:	ee1c 0a10 	vmov	r0, s24
 80075be:	f8a4 3588 	strh.w	r3, [r4, #1416]	; 0x588
 80075c2:	f7fb f96d 	bl	80028a0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80075c6:	f504 539f 	add.w	r3, r4, #5088	; 0x13e0
 80075ca:	3304      	adds	r3, #4
 80075cc:	4630      	mov	r0, r6
 80075ce:	ee1c 1a10 	vmov	r1, s24
        color = col;
 80075d2:	f8c4 758c 	str.w	r7, [r4, #1420]	; 0x58c
        colorPressed = col;
 80075d6:	f8c4 7590 	str.w	r7, [r4, #1424]	; 0x590
 80075da:	f8c4 3578 	str.w	r3, [r4, #1400]	; 0x578
 80075de:	f008 fc57 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80075e2:	4620      	mov	r0, r4
 80075e4:	b00d      	add	sp, #52	; 0x34
 80075e6:	ecbd 8b0a 	vpop	{d8-d12}
 80075ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80075ee:	bf00      	nop
 80075f0:	20012f88 	.word	0x20012f88
 80075f4:	0802bc02 	.word	0x0802bc02
 80075f8:	0802bc78 	.word	0x0802bc78

080075fc <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80075fc:	4770      	bx	lr

080075fe <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80075fe:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007600:	68c2      	ldr	r2, [r0, #12]
 8007602:	6844      	ldr	r4, [r0, #4]
 8007604:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007606:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007608:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800760c:	07d2      	lsls	r2, r2, #31
 800760e:	bf48      	it	mi
 8007610:	5962      	ldrmi	r2, [r4, r5]
 8007612:	689b      	ldr	r3, [r3, #8]
    }
 8007614:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007616:	bf48      	it	mi
 8007618:	58d3      	ldrmi	r3, [r2, r3]
 800761a:	4718      	bx	r3

0800761c <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800761c:	6843      	ldr	r3, [r0, #4]
 800761e:	b12b      	cbz	r3, 800762c <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007620:	6883      	ldr	r3, [r0, #8]
 8007622:	b92b      	cbnz	r3, 8007630 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007624:	68c0      	ldr	r0, [r0, #12]
 8007626:	f000 0001 	and.w	r0, r0, #1
 800762a:	4770      	bx	lr
 800762c:	4618      	mov	r0, r3
 800762e:	4770      	bx	lr
 8007630:	2001      	movs	r0, #1
    }
 8007632:	4770      	bx	lr

08007634 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007634:	b510      	push	{r4, lr}
 8007636:	2110      	movs	r1, #16
 8007638:	4604      	mov	r4, r0
 800763a:	f021 ff38 	bl	80294ae <_ZdlPvj>
 800763e:	4620      	mov	r0, r4
 8007640:	bd10      	pop	{r4, pc}

08007642 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 8007642:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 8007646:	f000 bf21 	b.w	800848c <_ZN17Gauge_with_Values10initializeEv>

0800764a <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 800764a:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
 800764e:	4288      	cmp	r0, r1
{
 8007650:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8007652:	d105      	bne.n	8007660 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007654:	f00d feb4 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 8007658:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 800765c:	f7fc ba02 	b.w	8003a64 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8007660:	bd08      	pop	{r3, pc}
	...

08007664 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8007664:	b510      	push	{r4, lr}
 8007666:	4b07      	ldr	r3, [pc, #28]	; (8007684 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x20>)
 8007668:	6003      	str	r3, [r0, #0]
 800766a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800766c:	f00c f9a6 	bl	80139bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 8007670:	4b05      	ldr	r3, [pc, #20]	; (8007688 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x24>)
 8007672:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 8007676:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 800767a:	f7fd fc89 	bl	8004f90 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 800767e:	4620      	mov	r0, r4
 8007680:	bd10      	pop	{r4, pc}
 8007682:	bf00      	nop
 8007684:	0802d828 	.word	0x0802d828
 8007688:	0802dc4c 	.word	0x0802dc4c

0800768c <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 800768c:	b510      	push	{r4, lr}
 800768e:	4604      	mov	r4, r0
}
 8007690:	f7ff ffe8 	bl	8007664 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 8007694:	4620      	mov	r0, r4
 8007696:	f241 31e4 	movw	r1, #5092	; 0x13e4
 800769a:	f021 ff08 	bl	80294ae <_ZdlPvj>
 800769e:	4620      	mov	r0, r4
 80076a0:	bd10      	pop	{r4, pc}
	...

080076a4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 80076a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80076a8:	ed2d 8b04 	vpush	{d8-d9}
 80076ac:	4604      	mov	r4, r0
 80076ae:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 80076b0:	46a3      	mov	fp, r4
 80076b2:	2500      	movs	r5, #0
 80076b4:	f00f fb04 	bl	8016cc0 <_ZN8touchgfx6ScreenC1Ev>
 80076b8:	4bae      	ldr	r3, [pc, #696]	; (8007974 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d0>)
 80076ba:	63e5      	str	r5, [r4, #60]	; 0x3c
 80076bc:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80076c0:	2226      	movs	r2, #38	; 0x26
 80076c2:	4629      	mov	r1, r5
 80076c4:	4658      	mov	r0, fp
 80076c6:	f022 ff0a 	bl	802a4de <memset>
 80076ca:	4658      	mov	r0, fp
 80076cc:	f7fb f8b4 	bl	8002838 <_ZN8touchgfx6WidgetC1Ev>
 80076d0:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80076d4:	26ff      	movs	r6, #255	; 0xff
 80076d6:	4ba8      	ldr	r3, [pc, #672]	; (8007978 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d4>)
 80076d8:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80076da:	2226      	movs	r2, #38	; 0x26
 80076dc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80076e0:	4629      	mov	r1, r5
 80076e2:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80076e6:	66a5      	str	r5, [r4, #104]	; 0x68
 80076e8:	4650      	mov	r0, sl
 80076ea:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80076ee:	f022 fef6 	bl	802a4de <memset>
 80076f2:	4650      	mov	r0, sl
 80076f4:	f7fb f8a0 	bl	8002838 <_ZN8touchgfx6WidgetC1Ev>
 80076f8:	4ba0      	ldr	r3, [pc, #640]	; (800797c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d8>)
 80076fa:	66e3      	str	r3, [r4, #108]	; 0x6c
 80076fc:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007700:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007704:	a90a      	add	r1, sp, #40	; 0x28
 8007706:	f104 0798 	add.w	r7, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 800770a:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800770e:	4650      	mov	r0, sl
 8007710:	f00b f94d 	bl	80129ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007714:	4638      	mov	r0, r7
 8007716:	f00a f813 	bl	8011740 <_ZN8touchgfx4LineC1Ev>
 800771a:	f504 7384 	add.w	r3, r4, #264	; 0x108
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800771e:	4618      	mov	r0, r3
 8007720:	9303      	str	r3, [sp, #12]
 8007722:	f7f9 fc91 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007726:	4b96      	ldr	r3, [pc, #600]	; (8007980 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2dc>)
 8007728:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 800772c:	f504 798e 	add.w	r9, r4, #284	; 0x11c
 8007730:	3324      	adds	r3, #36	; 0x24
 8007732:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8007736:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 800773a:	4648      	mov	r0, r9
 800773c:	f504 78b2 	add.w	r8, r4, #356	; 0x164
 8007740:	f7fb f88c 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 8007744:	4640      	mov	r0, r8
 8007746:	f7fb f889 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 800774a:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 800774e:	4618      	mov	r0, r3
 8007750:	ee08 3a10 	vmov	s16, r3
 8007754:	f7fb f882 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 8007758:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 800775c:	4618      	mov	r0, r3
 800775e:	ee08 3a90 	vmov	s17, r3
 8007762:	f00b fa65 	bl	8012c30 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007766:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 800776a:	4618      	mov	r0, r3
 800776c:	ee09 3a10 	vmov	s18, r3
 8007770:	f000 fe82 	bl	8008478 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007774:	4a83      	ldr	r2, [pc, #524]	; (8007984 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e0>)
 8007776:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800777a:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 800777e:	4a82      	ldr	r2, [pc, #520]	; (8007988 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007780:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007784:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 8007788:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 800778c:	f00c f90c 	bl	80139a8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007790:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007794:	462a      	mov	r2, r5
 8007796:	9300      	str	r3, [sp, #0]
 8007798:	4629      	mov	r1, r5
 800779a:	23f0      	movs	r3, #240	; 0xf0
 800779c:	4658      	mov	r0, fp
 800779e:	f7fb f837 	bl	8002810 <_ZN8touchgfx8Drawable11setPositionEssss>
 80077a2:	1d26      	adds	r6, r4, #4
        color = newColor;
 80077a4:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80077a8:	66a3      	str	r3, [r4, #104]	; 0x68
 80077aa:	4659      	mov	r1, fp
 80077ac:	4630      	mov	r0, r6
 80077ae:	f008 fb6f 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80077b2:	462a      	mov	r2, r5
 80077b4:	4629      	mov	r1, r5
 80077b6:	4650      	mov	r0, sl
 80077b8:	f7fb f81d 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 80077bc:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80077be:	a90a      	add	r1, sp, #40	; 0x28
 80077c0:	4650      	mov	r0, sl
 80077c2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80077c6:	f00b f8f2 	bl	80129ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80077ca:	4651      	mov	r1, sl
 80077cc:	4630      	mov	r0, r6
 80077ce:	f008 fb5f 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80077d2:	230a      	movs	r3, #10
 80077d4:	9300      	str	r3, [sp, #0]
 80077d6:	2232      	movs	r2, #50	; 0x32
 80077d8:	23f0      	movs	r3, #240	; 0xf0
 80077da:	4629      	mov	r1, r5
 80077dc:	4638      	mov	r0, r7
 80077de:	f7fb f817 	bl	8002810 <_ZN8touchgfx8Drawable11setPositionEssss>
 80077e2:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80077e6:	22a0      	movs	r2, #160	; 0xa0
 80077e8:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        color565 = LCD16bpp::getNativeColor(painterColor);
 80077ec:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
 80077f0:	9b03      	ldr	r3, [sp, #12]
 80077f2:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80077f6:	4611      	mov	r1, r2
 80077f8:	4638      	mov	r0, r7
 80077fa:	f00a f8b7 	bl	801196c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80077fe:	22a0      	movs	r2, #160	; 0xa0
 8007800:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007804:	4638      	mov	r0, r7
 8007806:	f00a f8bc 	bl	8011982 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800780a:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 800780e:	2b20      	cmp	r3, #32
 8007810:	d005      	beq.n	800781e <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x17a>
        lineWidthQ5 = widthQ5;
 8007812:	2320      	movs	r3, #32
 8007814:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
 8007818:	4638      	mov	r0, r7
 800781a:	f009 ffb1 	bl	8011780 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800781e:	4638      	mov	r0, r7
 8007820:	2101      	movs	r1, #1
 8007822:	f00a f8b9 	bl	8011998 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007826:	4639      	mov	r1, r7
 8007828:	4630      	mov	r0, r6
 800782a:	ad04      	add	r5, sp, #16
 800782c:	f008 fb30 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007830:	f04f 37ff 	mov.w	r7, #4294967295
        linespace = space;
 8007834:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8007838:	2223      	movs	r2, #35	; 0x23
 800783a:	4648      	mov	r0, r9
 800783c:	2145      	movs	r1, #69	; 0x45
 800783e:	f7fa ffda 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007842:	4649      	mov	r1, r9
 8007844:	4628      	mov	r0, r5
        color = newColor;
 8007846:	f8c4 714c 	str.w	r7, [r4, #332]	; 0x14c
        linespace = space;
 800784a:	f8a4 a150 	strh.w	sl, [r4, #336]	; 0x150
        boundingArea = calculateBoundingArea();
 800784e:	f00a fa39 	bl	8011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007852:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007856:	f109 033c 	add.w	r3, r9, #60	; 0x3c
 800785a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800785e:	f8df b12c 	ldr.w	fp, [pc, #300]	; 800798c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e8>
 8007862:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8007866:	2337      	movs	r3, #55	; 0x37
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 8007868:	a90a      	add	r1, sp, #40	; 0x28
 800786a:	4648      	mov	r0, r9
 800786c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007870:	f00a fcc2 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007874:	4649      	mov	r1, r9
 8007876:	4630      	mov	r0, r6
 8007878:	f008 fb0a 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 800787c:	223c      	movs	r2, #60	; 0x3c
 800787e:	4640      	mov	r0, r8
 8007880:	211f      	movs	r1, #31
 8007882:	f7fa ffb8 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 8007886:	4641      	mov	r1, r8
 8007888:	4628      	mov	r0, r5
        color = newColor;
 800788a:	f8c4 7194 	str.w	r7, [r4, #404]	; 0x194
        linespace = space;
 800788e:	f8a4 a198 	strh.w	sl, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 8007892:	f00a fa17 	bl	8011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007896:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800789a:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 800789e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80078a2:	2326      	movs	r3, #38	; 0x26
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 80078a4:	a90a      	add	r1, sp, #40	; 0x28
 80078a6:	4640      	mov	r0, r8
 80078a8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80078ac:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80078b0:	f00a fca2 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80078b4:	4641      	mov	r1, r8
 80078b6:	4630      	mov	r0, r6
 80078b8:	f008 faea 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80078bc:	ee18 0a10 	vmov	r0, s16
 80078c0:	220c      	movs	r2, #12
 80078c2:	2136      	movs	r1, #54	; 0x36
 80078c4:	f7fa ff97 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 80078c8:	ee18 1a10 	vmov	r1, s16
 80078cc:	4628      	mov	r0, r5
        color = newColor;
 80078ce:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 80078d2:	f8a4 a1e0 	strh.w	sl, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 80078d6:	f00a f9f5 	bl	8011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80078da:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80078de:	ee18 3a10 	vmov	r3, s16
 80078e2:	333c      	adds	r3, #60	; 0x3c
 80078e4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80078e8:	2336      	movs	r3, #54	; 0x36
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 80078ea:	ee18 0a10 	vmov	r0, s16
 80078ee:	a90a      	add	r1, sp, #40	; 0x28
 80078f0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80078f4:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80078f8:	f00a fc7e 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80078fc:	ee18 1a10 	vmov	r1, s16
 8007900:	4630      	mov	r0, r6
 8007902:	f008 fac5 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8007906:	ee18 0a90 	vmov	r0, s17
 800790a:	f240 1201 	movw	r2, #257	; 0x101
 800790e:	2121      	movs	r1, #33	; 0x21
 8007910:	f7fa ff71 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 8007914:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007916:	aa0a      	add	r2, sp, #40	; 0x28
 8007918:	a909      	add	r1, sp, #36	; 0x24
 800791a:	ee18 0a90 	vmov	r0, s17
 800791e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007922:	2302      	movs	r3, #2
 8007924:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007928:	f00a fe4b 	bl	80125c2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800792c:	2335      	movs	r3, #53	; 0x35
        updateTextPosition();
 800792e:	ee18 0a90 	vmov	r0, s17
 8007932:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 8007936:	f7fa ffb3 	bl	80028a0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 800793a:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 800793e:	3314      	adds	r3, #20
 8007940:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 8007944:	ee18 1a90 	vmov	r1, s17
 8007948:	4630      	mov	r0, r6
        colorPressed = col;
 800794a:	e9c4 778c 	strd	r7, r7, [r4, #560]	; 0x230
 800794e:	f008 fa9f 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 8007952:	ee19 0a10 	vmov	r0, s18
 8007956:	224e      	movs	r2, #78	; 0x4e
 8007958:	4651      	mov	r1, sl
 800795a:	f7fa ff4c 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 800795e:	4630      	mov	r0, r6
 8007960:	ee19 1a10 	vmov	r1, s18
 8007964:	f008 fa94 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007968:	4620      	mov	r0, r4
 800796a:	b00d      	add	sp, #52	; 0x34
 800796c:	ecbd 8b04 	vpop	{d8-d9}
 8007970:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007974:	0802d828 	.word	0x0802d828
 8007978:	0802e5d0 	.word	0x0802e5d0
 800797c:	0802e798 	.word	0x0802e798
 8007980:	0802e304 	.word	0x0802e304
 8007984:	0802d810 	.word	0x0802d810
 8007988:	0800764b 	.word	0x0800764b
 800798c:	0802bc78 	.word	0x0802bc78

08007990 <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 8007990:	4770      	bx	lr

08007992 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007992:	4770      	bx	lr

08007994 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007994:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007996:	68c2      	ldr	r2, [r0, #12]
 8007998:	6844      	ldr	r4, [r0, #4]
 800799a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800799c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800799e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80079a2:	07d2      	lsls	r2, r2, #31
 80079a4:	bf48      	it	mi
 80079a6:	5962      	ldrmi	r2, [r4, r5]
 80079a8:	689b      	ldr	r3, [r3, #8]
    }
 80079aa:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80079ac:	bf48      	it	mi
 80079ae:	58d3      	ldrmi	r3, [r2, r3]
 80079b0:	4718      	bx	r3

080079b2 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80079b2:	6843      	ldr	r3, [r0, #4]
 80079b4:	b12b      	cbz	r3, 80079c2 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80079b6:	6883      	ldr	r3, [r0, #8]
 80079b8:	b92b      	cbnz	r3, 80079c6 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80079ba:	68c0      	ldr	r0, [r0, #12]
 80079bc:	f000 0001 	and.w	r0, r0, #1
 80079c0:	4770      	bx	lr
 80079c2:	4618      	mov	r0, r3
 80079c4:	4770      	bx	lr
 80079c6:	2001      	movs	r0, #1
    }
 80079c8:	4770      	bx	lr

080079ca <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80079ca:	b510      	push	{r4, lr}
 80079cc:	2110      	movs	r1, #16
 80079ce:	4604      	mov	r4, r0
 80079d0:	f021 fd6d 	bl	80294ae <_ZdlPvj>
 80079d4:	4620      	mov	r0, r4
 80079d6:	bd10      	pop	{r4, pc}

080079d8 <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 80079d8:	b510      	push	{r4, lr}
 80079da:	4b03      	ldr	r3, [pc, #12]	; (80079e8 <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 80079dc:	6003      	str	r3, [r0, #0]
 80079de:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80079e0:	f00b ffec 	bl	80139bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80079e4:	4620      	mov	r0, r4
 80079e6:	bd10      	pop	{r4, pc}
 80079e8:	0802d874 	.word	0x0802d874

080079ec <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 80079ec:	b507      	push	{r0, r1, r2, lr}
 80079ee:	4b07      	ldr	r3, [pc, #28]	; (8007a0c <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 80079f0:	6003      	str	r3, [r0, #0]
 80079f2:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80079f4:	f00b ffe2 	bl	80139bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80079f8:	9801      	ldr	r0, [sp, #4]
 80079fa:	f241 01b0 	movw	r1, #4272	; 0x10b0
 80079fe:	f021 fd56 	bl	80294ae <_ZdlPvj>
 8007a02:	9801      	ldr	r0, [sp, #4]
 8007a04:	b003      	add	sp, #12
 8007a06:	f85d fb04 	ldr.w	pc, [sp], #4
 8007a0a:	bf00      	nop
 8007a0c:	0802d874 	.word	0x0802d874

08007a10 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8007a10:	f500 70b4 	add.w	r0, r0, #360	; 0x168
 8007a14:	4288      	cmp	r0, r1
{
 8007a16:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8007a18:	d105      	bne.n	8007a26 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007a1a:	f00d fcd1 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 8007a1e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 8007a22:	f7fb bfef 	b.w	8003a04 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 8007a26:	bd08      	pop	{r3, pc}

08007a28 <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 8007a28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007a2c:	ed2d 8b04 	vpush	{d8-d9}
 8007a30:	4604      	mov	r4, r0
 8007a32:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 8007a34:	46a3      	mov	fp, r4
 8007a36:	2500      	movs	r5, #0
 8007a38:	f00f f942 	bl	8016cc0 <_ZN8touchgfx6ScreenC1Ev>
 8007a3c:	4bd1      	ldr	r3, [pc, #836]	; (8007d84 <_ZN20Project_InfoViewBaseC1Ev+0x35c>)
 8007a3e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007a40:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8007a44:	2226      	movs	r2, #38	; 0x26
 8007a46:	4629      	mov	r1, r5
 8007a48:	4658      	mov	r0, fp
 8007a4a:	f022 fd48 	bl	802a4de <memset>
 8007a4e:	4658      	mov	r0, fp
 8007a50:	f7fa fef2 	bl	8002838 <_ZN8touchgfx6WidgetC1Ev>
 8007a54:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8007a58:	26ff      	movs	r6, #255	; 0xff
 8007a5a:	4bcb      	ldr	r3, [pc, #812]	; (8007d88 <_ZN20Project_InfoViewBaseC1Ev+0x360>)
 8007a5c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007a5e:	2226      	movs	r2, #38	; 0x26
 8007a60:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007a64:	4629      	mov	r1, r5
 8007a66:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007a6a:	4650      	mov	r0, sl
 8007a6c:	66a5      	str	r5, [r4, #104]	; 0x68
 8007a6e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007a72:	f022 fd34 	bl	802a4de <memset>
 8007a76:	4650      	mov	r0, sl
 8007a78:	f7fa fede 	bl	8002838 <_ZN8touchgfx6WidgetC1Ev>
 8007a7c:	4bc3      	ldr	r3, [pc, #780]	; (8007d8c <_ZN20Project_InfoViewBaseC1Ev+0x364>)
 8007a7e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007a80:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007a84:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007a88:	a90a      	add	r1, sp, #40	; 0x28
 8007a8a:	4650      	mov	r0, sl
 8007a8c:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8007a90:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007a94:	f00a ff8b 	bl	80129ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8007a98:	4648      	mov	r0, r9
 8007a9a:	f7fa fedf 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 8007a9e:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8007aa2:	4bbb      	ldr	r3, [pc, #748]	; (8007d90 <_ZN20Project_InfoViewBaseC1Ev+0x368>)
 8007aa4:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8007aa8:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8007aac:	4638      	mov	r0, r7
 8007aae:	f009 fe47 	bl	8011740 <_ZN8touchgfx4LineC1Ev>
 8007ab2:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007ab6:	4618      	mov	r0, r3
 8007ab8:	9303      	str	r3, [sp, #12]
 8007aba:	f7f9 fac5 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007abe:	4bb5      	ldr	r3, [pc, #724]	; (8007d94 <_ZN20Project_InfoViewBaseC1Ev+0x36c>)
 8007ac0:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8007ac4:	3324      	adds	r3, #36	; 0x24
 8007ac6:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8007aca:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 8007ace:	4618      	mov	r0, r3
 8007ad0:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8007ad4:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8007ad8:	ee09 3a10 	vmov	s18, r3
 8007adc:	f00b f8a8 	bl	8012c30 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007ae0:	4640      	mov	r0, r8
 8007ae2:	f7fa febb 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 8007ae6:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8007aea:	4618      	mov	r0, r3
 8007aec:	ee08 3a10 	vmov	s16, r3
 8007af0:	f7fa feb4 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
 8007af4:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8007af8:	4618      	mov	r0, r3
 8007afa:	ee08 3a90 	vmov	s17, r3
 8007afe:	f7fa fead 	bl	800285c <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007b02:	4aa5      	ldr	r2, [pc, #660]	; (8007d98 <_ZN20Project_InfoViewBaseC1Ev+0x370>)
 8007b04:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007b08:	e9c3 2428 	strd	r2, r4, [r3, #160]	; 0xa0
 8007b0c:	4aa3      	ldr	r2, [pc, #652]	; (8007d9c <_ZN20Project_InfoViewBaseC1Ev+0x374>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007b0e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007b12:	e9c3 252a 	strd	r2, r5, [r3, #168]	; 0xa8
 8007b16:	f504 7024 	add.w	r0, r4, #656	; 0x290
 8007b1a:	f00b ff45 	bl	80139a8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007b1e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007b22:	462a      	mov	r2, r5
 8007b24:	4658      	mov	r0, fp
 8007b26:	9300      	str	r3, [sp, #0]
 8007b28:	4629      	mov	r1, r5
 8007b2a:	23f0      	movs	r3, #240	; 0xf0
 8007b2c:	f7fa fe70 	bl	8002810 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007b30:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007b32:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007b36:	66a3      	str	r3, [r4, #104]	; 0x68
 8007b38:	4659      	mov	r1, fp
 8007b3a:	4630      	mov	r0, r6
 8007b3c:	f008 f9a8 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007b40:	462a      	mov	r2, r5
 8007b42:	4650      	mov	r0, sl
 8007b44:	4629      	mov	r1, r5
 8007b46:	f7fa fe56 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 8007b4a:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007b4c:	4650      	mov	r0, sl
 8007b4e:	a90a      	add	r1, sp, #40	; 0x28
 8007b50:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007b54:	f00a ff2b 	bl	80129ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007b58:	4651      	mov	r1, sl
 8007b5a:	4630      	mov	r0, r6
 8007b5c:	f008 f998 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8007b60:	f44f 729a 	mov.w	r2, #308	; 0x134
 8007b64:	2156      	movs	r1, #86	; 0x56
 8007b66:	4648      	mov	r0, r9
 8007b68:	f7fa fe45 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 8007b6c:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8007b70:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8007b74:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8007b78:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8007b7c:	4650      	mov	r0, sl
 8007b7e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8007b82:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8007b86:	4649      	mov	r1, r9
 8007b88:	4798      	blx	r3
 8007b8a:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8007b8e:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8007b92:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007b96:	4b82      	ldr	r3, [pc, #520]	; (8007da0 <_ZN20Project_InfoViewBaseC1Ev+0x378>)
 8007b98:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5C9S).getText());
 8007b9a:	f504 7a22 	add.w	sl, r4, #648	; 0x288
 8007b9e:	b92b      	cbnz	r3, 8007bac <_ZN20Project_InfoViewBaseC1Ev+0x184>
 8007ba0:	4b80      	ldr	r3, [pc, #512]	; (8007da4 <_ZN20Project_InfoViewBaseC1Ev+0x37c>)
 8007ba2:	4a81      	ldr	r2, [pc, #516]	; (8007da8 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 8007ba4:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007ba6:	4881      	ldr	r0, [pc, #516]	; (8007dac <_ZN20Project_InfoViewBaseC1Ev+0x384>)
 8007ba8:	f022 fa94 	bl	802a0d4 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8007bac:	4b80      	ldr	r3, [pc, #512]	; (8007db0 <_ZN20Project_InfoViewBaseC1Ev+0x388>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007bae:	881b      	ldrh	r3, [r3, #0]
 8007bb0:	2b12      	cmp	r3, #18
 8007bb2:	d803      	bhi.n	8007bbc <_ZN20Project_InfoViewBaseC1Ev+0x194>
 8007bb4:	4b7f      	ldr	r3, [pc, #508]	; (8007db4 <_ZN20Project_InfoViewBaseC1Ev+0x38c>)
 8007bb6:	4a7c      	ldr	r2, [pc, #496]	; (8007da8 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 8007bb8:	2161      	movs	r1, #97	; 0x61
 8007bba:	e7f4      	b.n	8007ba6 <_ZN20Project_InfoViewBaseC1Ev+0x17e>
        return texts->getText(typedTextId);
 8007bbc:	4b7e      	ldr	r3, [pc, #504]	; (8007db8 <_ZN20Project_InfoViewBaseC1Ev+0x390>)
 8007bbe:	2112      	movs	r1, #18
 8007bc0:	6818      	ldr	r0, [r3, #0]
 8007bc2:	f000 fb1b 	bl	80081fc <_ZNK8touchgfx5Texts7getTextEt>
 8007bc6:	4a7d      	ldr	r2, [pc, #500]	; (8007dbc <_ZN20Project_InfoViewBaseC1Ev+0x394>)
 8007bc8:	4603      	mov	r3, r0
 8007bca:	2104      	movs	r1, #4
 8007bcc:	4650      	mov	r0, sl
 8007bce:	f010 fd67 	bl	80186a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8007bd2:	4648      	mov	r0, r9
        wc1 = value;
 8007bd4:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8007bd8:	f00a faee 	bl	80121b8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8007bdc:	4b78      	ldr	r3, [pc, #480]	; (8007dc0 <_ZN20Project_InfoViewBaseC1Ev+0x398>)
 8007bde:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KYIO));
 8007be0:	a90a      	add	r1, sp, #40	; 0x28
 8007be2:	2313      	movs	r3, #19
 8007be4:	4648      	mov	r0, r9
 8007be6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007bea:	f00a fb05 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007bee:	4649      	mov	r1, r9
 8007bf0:	4630      	mov	r0, r6
 8007bf2:	f008 f94d 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007bf6:	230a      	movs	r3, #10
 8007bf8:	9300      	str	r3, [sp, #0]
 8007bfa:	2232      	movs	r2, #50	; 0x32
 8007bfc:	23f0      	movs	r3, #240	; 0xf0
 8007bfe:	4629      	mov	r1, r5
 8007c00:	4638      	mov	r0, r7
 8007c02:	f7fa fe05 	bl	8002810 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007c06:	9b03      	ldr	r3, [sp, #12]
 8007c08:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007c0c:	22a0      	movs	r2, #160	; 0xa0
 8007c0e:	4611      	mov	r1, r2
 8007c10:	4638      	mov	r0, r7
 8007c12:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007c16:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8007c1a:	f009 fea7 	bl	801196c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007c1e:	22a0      	movs	r2, #160	; 0xa0
 8007c20:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007c24:	4638      	mov	r0, r7
 8007c26:	f009 feac 	bl	8011982 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007c2a:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8007c2e:	2b20      	cmp	r3, #32
 8007c30:	d005      	beq.n	8007c3e <_ZN20Project_InfoViewBaseC1Ev+0x216>
        lineWidthQ5 = widthQ5;
 8007c32:	2320      	movs	r3, #32
 8007c34:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8007c38:	4638      	mov	r0, r7
 8007c3a:	f009 fda1 	bl	8011780 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007c3e:	4638      	mov	r0, r7
 8007c40:	2101      	movs	r1, #1
 8007c42:	f009 fea9 	bl	8011998 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007c46:	4639      	mov	r1, r7
 8007c48:	4630      	mov	r0, r6
 8007c4a:	f008 f921 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8007c4e:	ee19 0a10 	vmov	r0, s18
 8007c52:	22f0      	movs	r2, #240	; 0xf0
 8007c54:	2121      	movs	r1, #33	; 0x21
 8007c56:	f7fa fdce 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 8007c5a:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007c5c:	aa0a      	add	r2, sp, #40	; 0x28
 8007c5e:	a909      	add	r1, sp, #36	; 0x24
 8007c60:	ee19 0a10 	vmov	r0, s18
 8007c64:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007c68:	2302      	movs	r3, #2
 8007c6a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007c6e:	f00a fca8 	bl	80125c2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007c72:	2342      	movs	r3, #66	; 0x42
        updateTextPosition();
 8007c74:	ee19 0a10 	vmov	r0, s18
 8007c78:	f8a4 31a0 	strh.w	r3, [r4, #416]	; 0x1a0
 8007c7c:	f7fa fe10 	bl	80028a0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8007c80:	f04f 37ff 	mov.w	r7, #4294967295
    buttonWithLabel3.setAction(buttonCallback);
 8007c84:	f504 5385 	add.w	r3, r4, #4256	; 0x10a0
 8007c88:	f8c4 3190 	str.w	r3, [r4, #400]	; 0x190
 8007c8c:	ee19 1a10 	vmov	r1, s18
 8007c90:	4630      	mov	r0, r6
        colorPressed = col;
 8007c92:	e9c4 7769 	strd	r7, r7, [r4, #420]	; 0x1a4
 8007c96:	ad04      	add	r5, sp, #16
 8007c98:	f008 f8fa 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8007c9c:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(5, 91);
 8007ca0:	225b      	movs	r2, #91	; 0x5b
 8007ca2:	4640      	mov	r0, r8
 8007ca4:	2105      	movs	r1, #5
 8007ca6:	f7fa fda6 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007caa:	4641      	mov	r1, r8
 8007cac:	4628      	mov	r0, r5
        color = newColor;
 8007cae:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8007cb2:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8007cb6:	f00a f805 	bl	8011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007cba:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007cbe:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8007cc2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007cc6:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8007dc0 <_ZN20Project_InfoViewBaseC1Ev+0x398>
 8007cca:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007cce:	2343      	movs	r3, #67	; 0x43
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 8007cd0:	a90a      	add	r1, sp, #40	; 0x28
 8007cd2:	4640      	mov	r0, r8
 8007cd4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007cd8:	f00a fa8e 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007cdc:	4641      	mov	r1, r8
 8007cde:	4630      	mov	r0, r6
 8007ce0:	f008 f8d6 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8007ce4:	ee18 0a10 	vmov	r0, s16
 8007ce8:	2223      	movs	r2, #35	; 0x23
 8007cea:	2145      	movs	r1, #69	; 0x45
 8007cec:	f7fa fd83 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 8007cf0:	ee18 1a10 	vmov	r1, s16
 8007cf4:	4628      	mov	r0, r5
        color = newColor;
 8007cf6:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8007cfa:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8007cfe:	f009 ffe1 	bl	8011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007d02:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007d06:	ee18 3a10 	vmov	r3, s16
 8007d0a:	333c      	adds	r3, #60	; 0x3c
 8007d0c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007d10:	2345      	movs	r3, #69	; 0x45
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 8007d12:	ee18 0a10 	vmov	r0, s16
 8007d16:	a90a      	add	r1, sp, #40	; 0x28
 8007d18:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007d1c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007d20:	f00a fa6a 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007d24:	ee18 1a10 	vmov	r1, s16
 8007d28:	4630      	mov	r0, r6
 8007d2a:	f008 f8b1 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007d2e:	ee18 0a90 	vmov	r0, s17
 8007d32:	220c      	movs	r2, #12
 8007d34:	2136      	movs	r1, #54	; 0x36
 8007d36:	f7fa fd5e 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 8007d3a:	ee18 1a90 	vmov	r1, s17
 8007d3e:	4628      	mov	r0, r5
        color = newColor;
 8007d40:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 8007d44:	f8a4 a274 	strh.w	sl, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8007d48:	f009 ffbc 	bl	8011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007d4c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007d50:	ee18 3a90 	vmov	r3, s17
 8007d54:	333c      	adds	r3, #60	; 0x3c
 8007d56:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007d5a:	2344      	movs	r3, #68	; 0x44
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 8007d5c:	ee18 0a90 	vmov	r0, s17
 8007d60:	a90a      	add	r1, sp, #40	; 0x28
 8007d62:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007d66:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007d6a:	f00a fa45 	bl	80121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007d6e:	4630      	mov	r0, r6
 8007d70:	ee18 1a90 	vmov	r1, s17
 8007d74:	f008 f88c 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007d78:	4620      	mov	r0, r4
 8007d7a:	b00d      	add	sp, #52	; 0x34
 8007d7c:	ecbd 8b04 	vpop	{d8-d9}
 8007d80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007d84:	0802d874 	.word	0x0802d874
 8007d88:	0802e5d0 	.word	0x0802e5d0
 8007d8c:	0802e798 	.word	0x0802e798
 8007d90:	0802bc88 	.word	0x0802bc88
 8007d94:	0802e304 	.word	0x0802e304
 8007d98:	0802d85c 	.word	0x0802d85c
 8007d9c:	08007a11 	.word	0x08007a11
 8007da0:	20012f7c 	.word	0x20012f7c
 8007da4:	0802bac8 	.word	0x0802bac8
 8007da8:	0802bbca 	.word	0x0802bbca
 8007dac:	0802bb45 	.word	0x0802bb45
 8007db0:	20012f80 	.word	0x20012f80
 8007db4:	0802bb8c 	.word	0x0802bb8c
 8007db8:	20012f88 	.word	0x20012f88
 8007dbc:	0802bc02 	.word	0x0802bc02
 8007dc0:	0802bc78 	.word	0x0802bc78

08007dc4 <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 8007dc4:	4770      	bx	lr

08007dc6 <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 8007dc6:	4770      	bx	lr

08007dc8 <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 8007dc8:	b510      	push	{r4, lr}
}
 8007dca:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 8007dcc:	4604      	mov	r4, r0
}
 8007dce:	f021 fb6e 	bl	80294ae <_ZdlPvj>
 8007dd2:	4620      	mov	r0, r4
 8007dd4:	bd10      	pop	{r4, pc}
	...

08007dd8 <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 8007dd8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007ddc:	4604      	mov	r4, r0
 8007dde:	4626      	mov	r6, r4
 8007de0:	f00e ff6e 	bl	8016cc0 <_ZN8touchgfx6ScreenC1Ev>
 8007de4:	2500      	movs	r5, #0
 8007de6:	4b2e      	ldr	r3, [pc, #184]	; (8007ea0 <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 8007de8:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007dea:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 8007dee:	4b2d      	ldr	r3, [pc, #180]	; (8007ea4 <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 8007df0:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 8007df2:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 8007df6:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007dfa:	23ff      	movs	r3, #255	; 0xff
 8007dfc:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8007e00:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 8007e04:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8007e08:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 8007e0c:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8007e10:	4a25      	ldr	r2, [pc, #148]	; (8007ea8 <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 8007e12:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8007e16:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 8007e1a:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 8007e1c:	a901      	add	r1, sp, #4
 8007e1e:	4638      	mov	r0, r7
 8007e20:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 8007e24:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 8007e28:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 8007e2c:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 8007e30:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 8007e34:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 8007e38:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 8007e3c:	66a5      	str	r5, [r4, #104]	; 0x68
 8007e3e:	f8ad 3004 	strh.w	r3, [sp, #4]
 8007e42:	f00a fdb4 	bl	80129ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 8007e46:	462a      	mov	r2, r5
 8007e48:	4629      	mov	r1, r5
 8007e4a:	4630      	mov	r0, r6
 8007e4c:	f7fa fcd3 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8007e50:	4630      	mov	r0, r6
 8007e52:	21f0      	movs	r1, #240	; 0xf0
 8007e54:	f7f9 f844 	bl	8000ee0 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8007e58:	4630      	mov	r0, r6
 8007e5a:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8007e5e:	f7f9 f841 	bl	8000ee4 <_ZN8touchgfx8Drawable9setHeightEs>
 8007e62:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 8007e66:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007e6a:	66a3      	str	r3, [r4, #104]	; 0x68
 8007e6c:	4631      	mov	r1, r6
 8007e6e:	4640      	mov	r0, r8
 8007e70:	f008 f80e 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(-3, 0);
 8007e74:	462a      	mov	r2, r5
 8007e76:	4638      	mov	r0, r7
 8007e78:	f06f 0102 	mvn.w	r1, #2
 8007e7c:	f7fa fcbb 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 8007e80:	230b      	movs	r3, #11
    image1.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 8007e82:	a901      	add	r1, sp, #4
 8007e84:	4638      	mov	r0, r7
 8007e86:	f8ad 3004 	strh.w	r3, [sp, #4]
 8007e8a:	f00a fd90 	bl	80129ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007e8e:	4640      	mov	r0, r8
 8007e90:	4639      	mov	r1, r7
 8007e92:	f007 fffd 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007e96:	4620      	mov	r0, r4
 8007e98:	b002      	add	sp, #8
 8007e9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007e9e:	bf00      	nop
 8007ea0:	0802d8a8 	.word	0x0802d8a8
 8007ea4:	0802e5d0 	.word	0x0802e5d0
 8007ea8:	0802e798 	.word	0x0802e798

08007eac <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007eac:	4770      	bx	lr
	...

08007eb0 <_Z23getFont_verdana_10_4bppv>:
{
 8007eb0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007eb2:	4d17      	ldr	r5, [pc, #92]	; (8007f10 <_Z23getFont_verdana_10_4bppv+0x60>)
 8007eb4:	682c      	ldr	r4, [r5, #0]
 8007eb6:	f3bf 8f5b 	dmb	ish
 8007eba:	f014 0401 	ands.w	r4, r4, #1
{
 8007ebe:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007ec0:	d122      	bne.n	8007f08 <_Z23getFont_verdana_10_4bppv+0x58>
 8007ec2:	4628      	mov	r0, r5
 8007ec4:	f021 faf5 	bl	80294b2 <__cxa_guard_acquire>
 8007ec8:	b1f0      	cbz	r0, 8007f08 <_Z23getFont_verdana_10_4bppv+0x58>
 8007eca:	233f      	movs	r3, #63	; 0x3f
 8007ecc:	9309      	str	r3, [sp, #36]	; 0x24
 8007ece:	4b11      	ldr	r3, [pc, #68]	; (8007f14 <_Z23getFont_verdana_10_4bppv+0x64>)
 8007ed0:	9308      	str	r3, [sp, #32]
 8007ed2:	4b11      	ldr	r3, [pc, #68]	; (8007f18 <_Z23getFont_verdana_10_4bppv+0x68>)
 8007ed4:	9307      	str	r3, [sp, #28]
 8007ed6:	2301      	movs	r3, #1
 8007ed8:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007edc:	9304      	str	r3, [sp, #16]
 8007ede:	2304      	movs	r3, #4
 8007ee0:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007ee4:	230a      	movs	r3, #10
 8007ee6:	490d      	ldr	r1, [pc, #52]	; (8007f1c <_Z23getFont_verdana_10_4bppv+0x6c>)
 8007ee8:	9300      	str	r3, [sp, #0]
 8007eea:	225f      	movs	r2, #95	; 0x5f
 8007eec:	230c      	movs	r3, #12
 8007eee:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007ef2:	480b      	ldr	r0, [pc, #44]	; (8007f20 <_Z23getFont_verdana_10_4bppv+0x70>)
 8007ef4:	940a      	str	r4, [sp, #40]	; 0x28
 8007ef6:	9401      	str	r4, [sp, #4]
 8007ef8:	f7fd f9fc 	bl	80052f4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007efc:	4809      	ldr	r0, [pc, #36]	; (8007f24 <_Z23getFont_verdana_10_4bppv+0x74>)
 8007efe:	f022 f907 	bl	802a110 <atexit>
 8007f02:	4628      	mov	r0, r5
 8007f04:	f021 fae1 	bl	80294ca <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8007f08:	4805      	ldr	r0, [pc, #20]	; (8007f20 <_Z23getFont_verdana_10_4bppv+0x70>)
 8007f0a:	b00f      	add	sp, #60	; 0x3c
 8007f0c:	bd30      	pop	{r4, r5, pc}
 8007f0e:	bf00      	nop
 8007f10:	20002044 	.word	0x20002044
 8007f14:	08045464 	.word	0x08045464
 8007f18:	080455c4 	.word	0x080455c4
 8007f1c:	0804474c 	.word	0x0804474c
 8007f20:	20002048 	.word	0x20002048
 8007f24:	08007ead 	.word	0x08007ead

08007f28 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8007f28:	4770      	bx	lr
	...

08007f2c <_Z23getFont_verdana_12_4bppv>:
{
 8007f2c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8007f2e:	4d17      	ldr	r5, [pc, #92]	; (8007f8c <_Z23getFont_verdana_12_4bppv+0x60>)
 8007f30:	682c      	ldr	r4, [r5, #0]
 8007f32:	f3bf 8f5b 	dmb	ish
 8007f36:	f014 0401 	ands.w	r4, r4, #1
{
 8007f3a:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8007f3c:	d122      	bne.n	8007f84 <_Z23getFont_verdana_12_4bppv+0x58>
 8007f3e:	4628      	mov	r0, r5
 8007f40:	f021 fab7 	bl	80294b2 <__cxa_guard_acquire>
 8007f44:	b1f0      	cbz	r0, 8007f84 <_Z23getFont_verdana_12_4bppv+0x58>
 8007f46:	233f      	movs	r3, #63	; 0x3f
 8007f48:	9309      	str	r3, [sp, #36]	; 0x24
 8007f4a:	4b11      	ldr	r3, [pc, #68]	; (8007f90 <_Z23getFont_verdana_12_4bppv+0x64>)
 8007f4c:	9308      	str	r3, [sp, #32]
 8007f4e:	4b11      	ldr	r3, [pc, #68]	; (8007f94 <_Z23getFont_verdana_12_4bppv+0x68>)
 8007f50:	9307      	str	r3, [sp, #28]
 8007f52:	2301      	movs	r3, #1
 8007f54:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007f58:	9304      	str	r3, [sp, #16]
 8007f5a:	2304      	movs	r3, #4
 8007f5c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007f60:	230c      	movs	r3, #12
 8007f62:	490d      	ldr	r1, [pc, #52]	; (8007f98 <_Z23getFont_verdana_12_4bppv+0x6c>)
 8007f64:	9300      	str	r3, [sp, #0]
 8007f66:	2260      	movs	r2, #96	; 0x60
 8007f68:	230f      	movs	r3, #15
 8007f6a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007f6e:	480b      	ldr	r0, [pc, #44]	; (8007f9c <_Z23getFont_verdana_12_4bppv+0x70>)
 8007f70:	940a      	str	r4, [sp, #40]	; 0x28
 8007f72:	9401      	str	r4, [sp, #4]
 8007f74:	f7fd f9be 	bl	80052f4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007f78:	4809      	ldr	r0, [pc, #36]	; (8007fa0 <_Z23getFont_verdana_12_4bppv+0x74>)
 8007f7a:	f022 f8c9 	bl	802a110 <atexit>
 8007f7e:	4628      	mov	r0, r5
 8007f80:	f021 faa3 	bl	80294ca <__cxa_guard_release>
    return verdana_12_4bpp;
}
 8007f84:	4805      	ldr	r0, [pc, #20]	; (8007f9c <_Z23getFont_verdana_12_4bppv+0x70>)
 8007f86:	b00f      	add	sp, #60	; 0x3c
 8007f88:	bd30      	pop	{r4, r5, pc}
 8007f8a:	bf00      	nop
 8007f8c:	20002074 	.word	0x20002074
 8007f90:	08045498 	.word	0x08045498
 8007f94:	080455c8 	.word	0x080455c8
 8007f98:	08044c80 	.word	0x08044c80
 8007f9c:	20002078 	.word	0x20002078
 8007fa0:	08007f29 	.word	0x08007f29

08007fa4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8007fa4:	4770      	bx	lr
	...

08007fa8 <_Z23getFont_verdana_19_4bppv>:
{
 8007fa8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8007faa:	4d17      	ldr	r5, [pc, #92]	; (8008008 <_Z23getFont_verdana_19_4bppv+0x60>)
 8007fac:	682c      	ldr	r4, [r5, #0]
 8007fae:	f3bf 8f5b 	dmb	ish
 8007fb2:	f014 0401 	ands.w	r4, r4, #1
{
 8007fb6:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8007fb8:	d122      	bne.n	8008000 <_Z23getFont_verdana_19_4bppv+0x58>
 8007fba:	4628      	mov	r0, r5
 8007fbc:	f021 fa79 	bl	80294b2 <__cxa_guard_acquire>
 8007fc0:	b1f0      	cbz	r0, 8008000 <_Z23getFont_verdana_19_4bppv+0x58>
 8007fc2:	233f      	movs	r3, #63	; 0x3f
 8007fc4:	9309      	str	r3, [sp, #36]	; 0x24
 8007fc6:	4b11      	ldr	r3, [pc, #68]	; (800800c <_Z23getFont_verdana_19_4bppv+0x64>)
 8007fc8:	9308      	str	r3, [sp, #32]
 8007fca:	4b11      	ldr	r3, [pc, #68]	; (8008010 <_Z23getFont_verdana_19_4bppv+0x68>)
 8007fcc:	9307      	str	r3, [sp, #28]
 8007fce:	2301      	movs	r3, #1
 8007fd0:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007fd4:	9304      	str	r3, [sp, #16]
 8007fd6:	2304      	movs	r3, #4
 8007fd8:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007fdc:	2313      	movs	r3, #19
 8007fde:	490d      	ldr	r1, [pc, #52]	; (8008014 <_Z23getFont_verdana_19_4bppv+0x6c>)
 8007fe0:	9300      	str	r3, [sp, #0]
 8007fe2:	222f      	movs	r2, #47	; 0x2f
 8007fe4:	2317      	movs	r3, #23
 8007fe6:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007fea:	480b      	ldr	r0, [pc, #44]	; (8008018 <_Z23getFont_verdana_19_4bppv+0x70>)
 8007fec:	940a      	str	r4, [sp, #40]	; 0x28
 8007fee:	9401      	str	r4, [sp, #4]
 8007ff0:	f7fd f980 	bl	80052f4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007ff4:	4809      	ldr	r0, [pc, #36]	; (800801c <_Z23getFont_verdana_19_4bppv+0x74>)
 8007ff6:	f022 f88b 	bl	802a110 <atexit>
 8007ffa:	4628      	mov	r0, r5
 8007ffc:	f021 fa65 	bl	80294ca <__cxa_guard_release>
    return verdana_19_4bpp;
}
 8008000:	4805      	ldr	r0, [pc, #20]	; (8008018 <_Z23getFont_verdana_19_4bppv+0x70>)
 8008002:	b00f      	add	sp, #60	; 0x3c
 8008004:	bd30      	pop	{r4, r5, pc}
 8008006:	bf00      	nop
 8008008:	200020a4 	.word	0x200020a4
 800800c:	0804551c 	.word	0x0804551c
 8008010:	080455cc 	.word	0x080455cc
 8008014:	080451c0 	.word	0x080451c0
 8008018:	200020a8 	.word	0x200020a8
 800801c:	08007fa5 	.word	0x08007fa5

08008020 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008020:	4770      	bx	lr
	...

08008024 <_Z23getFont_verdana_40_4bppv>:
{
 8008024:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008026:	4d16      	ldr	r5, [pc, #88]	; (8008080 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8008028:	682c      	ldr	r4, [r5, #0]
 800802a:	f3bf 8f5b 	dmb	ish
 800802e:	f014 0401 	ands.w	r4, r4, #1
{
 8008032:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008034:	d120      	bne.n	8008078 <_Z23getFont_verdana_40_4bppv+0x54>
 8008036:	4628      	mov	r0, r5
 8008038:	f021 fa3b 	bl	80294b2 <__cxa_guard_acquire>
 800803c:	b1e0      	cbz	r0, 8008078 <_Z23getFont_verdana_40_4bppv+0x54>
 800803e:	233f      	movs	r3, #63	; 0x3f
 8008040:	9309      	str	r3, [sp, #36]	; 0x24
 8008042:	4b10      	ldr	r3, [pc, #64]	; (8008084 <_Z23getFont_verdana_40_4bppv+0x60>)
 8008044:	9308      	str	r3, [sp, #32]
 8008046:	4b10      	ldr	r3, [pc, #64]	; (8008088 <_Z23getFont_verdana_40_4bppv+0x64>)
 8008048:	4910      	ldr	r1, [pc, #64]	; (800808c <_Z23getFont_verdana_40_4bppv+0x68>)
 800804a:	4811      	ldr	r0, [pc, #68]	; (8008090 <_Z23getFont_verdana_40_4bppv+0x6c>)
 800804c:	940a      	str	r4, [sp, #40]	; 0x28
 800804e:	2201      	movs	r2, #1
 8008050:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8008054:	2304      	movs	r3, #4
 8008056:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800805a:	2328      	movs	r3, #40	; 0x28
 800805c:	9300      	str	r3, [sp, #0]
 800805e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008062:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8008066:	9405      	str	r4, [sp, #20]
 8008068:	f7fd f944 	bl	80052f4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800806c:	4809      	ldr	r0, [pc, #36]	; (8008094 <_Z23getFont_verdana_40_4bppv+0x70>)
 800806e:	f022 f84f 	bl	802a110 <atexit>
 8008072:	4628      	mov	r0, r5
 8008074:	f021 fa29 	bl	80294ca <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8008078:	4805      	ldr	r0, [pc, #20]	; (8008090 <_Z23getFont_verdana_40_4bppv+0x6c>)
 800807a:	b00f      	add	sp, #60	; 0x3c
 800807c:	bd30      	pop	{r4, r5, pc}
 800807e:	bf00      	nop
 8008080:	200020d4 	.word	0x200020d4
 8008084:	080455c0 	.word	0x080455c0
 8008088:	080455d0 	.word	0x080455d0
 800808c:	08045454 	.word	0x08045454
 8008090:	200020d8 	.word	0x200020d8
 8008094:	08008021 	.word	0x08008021

08008098 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8008098:	2000      	movs	r0, #0
 800809a:	4770      	bx	lr

0800809c <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 800809c:	2000      	movs	r0, #0
 800809e:	4770      	bx	lr

080080a0 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80080a0:	b40e      	push	{r1, r2, r3}
 80080a2:	b503      	push	{r0, r1, lr}
 80080a4:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80080a6:	2100      	movs	r1, #0
{
 80080a8:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 80080ac:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80080ae:	f00e f945 	bl	801633c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80080b2:	b002      	add	sp, #8
 80080b4:	f85d eb04 	ldr.w	lr, [sp], #4
 80080b8:	b003      	add	sp, #12
 80080ba:	4770      	bx	lr

080080bc <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80080bc:	b40c      	push	{r2, r3}
 80080be:	b507      	push	{r0, r1, r2, lr}
 80080c0:	ab04      	add	r3, sp, #16
 80080c2:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 80080c6:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 80080c8:	f00e f938 	bl	801633c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80080cc:	b003      	add	sp, #12
 80080ce:	f85d eb04 	ldr.w	lr, [sp], #4
 80080d2:	b002      	add	sp, #8
 80080d4:	4770      	bx	lr
	...

080080d8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 80080d8:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 80080da:	b510      	push	{r4, lr}
 80080dc:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 80080de:	b373      	cbz	r3, 800813e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 80080e0:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 80080e2:	b92b      	cbnz	r3, 80080f0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 80080e4:	4b18      	ldr	r3, [pc, #96]	; (8008148 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 80080e6:	4a19      	ldr	r2, [pc, #100]	; (800814c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 80080e8:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 80080ea:	4819      	ldr	r0, [pc, #100]	; (8008150 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 80080ec:	f021 fff2 	bl	802a0d4 <__assert_func>
            return buffer[pos];
 80080f0:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80080f2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80080f6:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 80080f8:	b30b      	cbz	r3, 800813e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 80080fa:	f00f fd1c 	bl	8017b36 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 80080fe:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8008100:	2b01      	cmp	r3, #1
 8008102:	d803      	bhi.n	800810c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8008104:	4b13      	ldr	r3, [pc, #76]	; (8008154 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8008106:	4a14      	ldr	r2, [pc, #80]	; (8008158 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8008108:	21cb      	movs	r1, #203	; 0xcb
 800810a:	e7ee      	b.n	80080ea <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 800810c:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800810e:	1c53      	adds	r3, r2, #1
 8008110:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8008112:	2b09      	cmp	r3, #9
 8008114:	4619      	mov	r1, r3
 8008116:	bf88      	it	hi
 8008118:	f1a3 010a 	subhi.w	r1, r3, #10
 800811c:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8008120:	f640 103f 	movw	r0, #2367	; 0x93f
 8008124:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8008126:	4281      	cmp	r1, r0
 8008128:	d109      	bne.n	800813e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 800812a:	2b0a      	cmp	r3, #10
 800812c:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8008130:	bf28      	it	cs
 8008132:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8008134:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8008138:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 800813a:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 800813c:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 800813e:	4620      	mov	r0, r4
}
 8008140:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8008144:	f00f bbfa 	b.w	801793c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8008148:	0802d8d4 	.word	0x0802d8d4
 800814c:	0802d8dd 	.word	0x0802d8dd
 8008150:	0802d988 	.word	0x0802d988
 8008154:	0802d9d2 	.word	0x0802d9d2
 8008158:	0802d9e0 	.word	0x0802d9e0

0800815c <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 800815c:	f00f bbb5 	b.w	80178ca <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08008160 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8008160:	b510      	push	{r4, lr}
 8008162:	b086      	sub	sp, #24
 8008164:	ac02      	add	r4, sp, #8
 8008166:	e884 0006 	stmia.w	r4, {r1, r2}
 800816a:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 800816c:	ab0a      	add	r3, sp, #40	; 0x28
 800816e:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8008170:	9301      	str	r3, [sp, #4]
 8008172:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008174:	9300      	str	r3, [sp, #0]
 8008176:	4621      	mov	r1, r4
 8008178:	9b08      	ldr	r3, [sp, #32]
 800817a:	f00c fca3 	bl	8014ac4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800817e:	b006      	add	sp, #24
 8008180:	bd10      	pop	{r4, pc}
	...

08008184 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8008184:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8008186:	bb18      	cbnz	r0, 80081d0 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8008188:	4b12      	ldr	r3, [pc, #72]	; (80081d4 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 800818a:	4813      	ldr	r0, [pc, #76]	; (80081d8 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 800818c:	681c      	ldr	r4, [r3, #0]
 800818e:	4913      	ldr	r1, [pc, #76]	; (80081dc <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8008190:	b1b4      	cbz	r4, 80081c0 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8008192:	6822      	ldr	r2, [r4, #0]
 8008194:	4422      	add	r2, r4
 8008196:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8008198:	6862      	ldr	r2, [r4, #4]
 800819a:	4422      	add	r2, r4
 800819c:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800819e:	68a2      	ldr	r2, [r4, #8]
 80081a0:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 80081a2:	4b0f      	ldr	r3, [pc, #60]	; (80081e0 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 80081a4:	2200      	movs	r2, #0
 80081a6:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 80081a8:	f000 f838 	bl	800821c <_ZN17TypedTextDatabase8getFontsEv>
 80081ac:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 80081ae:	f000 f833 	bl	8008218 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 80081b2:	4b0c      	ldr	r3, [pc, #48]	; (80081e4 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 80081b4:	601c      	str	r4, [r3, #0]
        fonts = f;
 80081b6:	4b0c      	ldr	r3, [pc, #48]	; (80081e8 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 80081b8:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 80081ba:	4b0c      	ldr	r3, [pc, #48]	; (80081ec <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 80081bc:	8018      	strh	r0, [r3, #0]
    }
}
 80081be:	e007      	b.n	80081d0 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 80081c0:	4b0b      	ldr	r3, [pc, #44]	; (80081f0 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 80081c2:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 80081c4:	4b0b      	ldr	r3, [pc, #44]	; (80081f4 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 80081c6:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 80081c8:	4b0b      	ldr	r3, [pc, #44]	; (80081f8 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 80081ca:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 80081cc:	2c00      	cmp	r4, #0
 80081ce:	d1e8      	bne.n	80081a2 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 80081d0:	bd38      	pop	{r3, r4, r5, pc}
 80081d2:	bf00      	nop
 80081d4:	20002104 	.word	0x20002104
 80081d8:	20002108 	.word	0x20002108
 80081dc:	2000210c 	.word	0x2000210c
 80081e0:	20002110 	.word	0x20002110
 80081e4:	20012f7c 	.word	0x20012f7c
 80081e8:	20012f84 	.word	0x20012f84
 80081ec:	20012f80 	.word	0x20012f80
 80081f0:	08045728 	.word	0x08045728
 80081f4:	080455d4 	.word	0x080455d4
 80081f8:	08045c44 	.word	0x08045c44

080081fc <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 80081fc:	4b04      	ldr	r3, [pc, #16]	; (8008210 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 80081fe:	681b      	ldr	r3, [r3, #0]
 8008200:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8008204:	4b03      	ldr	r3, [pc, #12]	; (8008214 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8008206:	681b      	ldr	r3, [r3, #0]
}
 8008208:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 800820c:	4770      	bx	lr
 800820e:	bf00      	nop
 8008210:	2000210c 	.word	0x2000210c
 8008214:	20002108 	.word	0x20002108

08008218 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8008218:	2055      	movs	r0, #85	; 0x55
 800821a:	4770      	bx	lr

0800821c <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 800821c:	4800      	ldr	r0, [pc, #0]	; (8008220 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 800821e:	4770      	bx	lr
 8008220:	20002114 	.word	0x20002114

08008224 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8008224:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 8008226:	f7ff febf 	bl	8007fa8 <_Z23getFont_verdana_19_4bppv>
};
 800822a:	4c06      	ldr	r4, [pc, #24]	; (8008244 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 800822c:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 800822e:	f7ff fef9 	bl	8008024 <_Z23getFont_verdana_40_4bppv>
};
 8008232:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 8008234:	f7ff fe3c 	bl	8007eb0 <_Z23getFont_verdana_10_4bppv>
};
 8008238:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 800823a:	f7ff fe77 	bl	8007f2c <_Z23getFont_verdana_12_4bppv>
};
 800823e:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 8008240:	bd10      	pop	{r4, pc}
 8008242:	bf00      	nop
 8008244:	20002114 	.word	0x20002114

08008248 <_ZN20CalibrationPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~CalibrationPresenter() {}
 8008248:	4770      	bx	lr

0800824a <_ZThn4_N20CalibrationPresenterD1Ev>:
 800824a:	3804      	subs	r0, #4
 800824c:	4770      	bx	lr

0800824e <_ZN20CalibrationPresenter10deactivateEv>:
}

void CalibrationPresenter::activate()
{

}
 800824e:	4770      	bx	lr

08008250 <_ZN20CalibrationPresenter15setTimeoutValueEi>:

}

void CalibrationPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008250:	68c0      	ldr	r0, [r0, #12]
 8008252:	6803      	ldr	r3, [r0, #0]
 8008254:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008256:	4718      	bx	r3

08008258 <_ZThn4_N20CalibrationPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008258:	f1a0 0004 	sub.w	r0, r0, #4
 800825c:	f7ff bff8 	b.w	8008250 <_ZN20CalibrationPresenter15setTimeoutValueEi>

08008260 <_ZN20CalibrationPresenterD0Ev>:
    virtual ~CalibrationPresenter() {}
 8008260:	b510      	push	{r4, lr}
 8008262:	2110      	movs	r1, #16
 8008264:	4604      	mov	r4, r0
 8008266:	f021 f922 	bl	80294ae <_ZdlPvj>
 800826a:	4620      	mov	r0, r4
 800826c:	bd10      	pop	{r4, pc}

0800826e <_ZThn4_N20CalibrationPresenterD0Ev>:
 800826e:	f1a0 0004 	sub.w	r0, r0, #4
 8008272:	e7f5      	b.n	8008260 <_ZN20CalibrationPresenterD0Ev>

08008274 <_ZN20CalibrationPresenterC1ER15CalibrationView>:
CalibrationPresenter::CalibrationPresenter(CalibrationView& v)
 8008274:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8008276:	2200      	movs	r2, #0
 8008278:	6082      	str	r2, [r0, #8]
    : view(v)
 800827a:	4a04      	ldr	r2, [pc, #16]	; (800828c <_ZN20CalibrationPresenterC1ER15CalibrationView+0x18>)
 800827c:	60c1      	str	r1, [r0, #12]
 800827e:	f102 0408 	add.w	r4, r2, #8
 8008282:	3224      	adds	r2, #36	; 0x24
 8008284:	6004      	str	r4, [r0, #0]
 8008286:	6042      	str	r2, [r0, #4]
}
 8008288:	bd10      	pop	{r4, pc}
 800828a:	bf00      	nop
 800828c:	0802dab4 	.word	0x0802dab4

08008290 <_ZN15CalibrationView14tearDownScreenEv>:
}

void CalibrationView::tearDownScreen()
{
    CalibrationViewBase::tearDownScreen();
}
 8008290:	4770      	bx	lr
	...

08008294 <_ZN15CalibrationViewD1Ev>:

class CalibrationView : public CalibrationViewBase
{
public:
    CalibrationView();
    virtual ~CalibrationView() {}
 8008294:	b510      	push	{r4, lr}
 8008296:	4b03      	ldr	r3, [pc, #12]	; (80082a4 <_ZN15CalibrationViewD1Ev+0x10>)
 8008298:	6003      	str	r3, [r0, #0]
 800829a:	4604      	mov	r4, r0
 800829c:	f7fa fa30 	bl	8002700 <_ZN19CalibrationViewBaseD1Ev>
 80082a0:	4620      	mov	r0, r4
 80082a2:	bd10      	pop	{r4, pc}
 80082a4:	0802daf0 	.word	0x0802daf0

080082a8 <_ZN15CalibrationViewD0Ev>:
 80082a8:	b510      	push	{r4, lr}
 80082aa:	4604      	mov	r4, r0
 80082ac:	f7ff fff2 	bl	8008294 <_ZN15CalibrationViewD1Ev>
 80082b0:	4620      	mov	r0, r4
 80082b2:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80082b6:	f021 f8fa 	bl	80294ae <_ZdlPvj>
 80082ba:	4620      	mov	r0, r4
 80082bc:	bd10      	pop	{r4, pc}
	...

080082c0 <_ZN15CalibrationViewC1Ev>:
CalibrationView::CalibrationView()
 80082c0:	b510      	push	{r4, lr}
 80082c2:	4604      	mov	r4, r0
 80082c4:	f7fa fb30 	bl	8002928 <_ZN19CalibrationViewBaseC1Ev>
 80082c8:	4b01      	ldr	r3, [pc, #4]	; (80082d0 <_ZN15CalibrationViewC1Ev+0x10>)
 80082ca:	6023      	str	r3, [r4, #0]
}
 80082cc:	4620      	mov	r0, r4
 80082ce:	bd10      	pop	{r4, pc}
 80082d0:	0802daf0 	.word	0x0802daf0

080082d4 <_ZN15CalibrationView11setupScreenEv>:
    CalibrationViewBase::setupScreen();
 80082d4:	f7fa b9e1 	b.w	800269a <_ZN19CalibrationViewBase11setupScreenEv>

080082d8 <_ZN15CalibrationView15setTimeoutValueEi>:

void CalibrationView::setTimeoutValue(int value)
{
 80082d8:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80082da:	4a0a      	ldr	r2, [pc, #40]	; (8008304 <_ZN15CalibrationView15setTimeoutValueEi+0x2c>)
{
 80082dc:	4605      	mov	r5, r0
 80082de:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80082e0:	460b      	mov	r3, r1
 80082e2:	f500 7046 	add.w	r0, r0, #792	; 0x318
 80082e6:	2104      	movs	r1, #4
 80082e8:	f010 f9da 	bl	80186a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 80082ec:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80082f0:	f00e f94e 	bl	8016590 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80082f4:	b92c      	cbnz	r4, 8008302 <_ZN15CalibrationView15setTimeoutValueEi+0x2a>
 80082f6:	f00d f863 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80082fa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80082fe:	f7fb bc71 	b.w	8003be4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008302:	bd38      	pop	{r3, r4, r5, pc}
 8008304:	0802dae4 	.word	0x0802dae4

08008308 <_ZN25Calibration_HallPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_HallPresenter() {}
 8008308:	4770      	bx	lr

0800830a <_ZThn4_N25Calibration_HallPresenterD1Ev>:
 800830a:	3804      	subs	r0, #4
 800830c:	4770      	bx	lr

0800830e <_ZN25Calibration_HallPresenter10deactivateEv>:
}

void Calibration_HallPresenter::activate()
{

}
 800830e:	4770      	bx	lr

08008310 <_ZN25Calibration_HallPresenter15setTimeoutValueEi>:
}

void Calibration_HallPresenter::setTimeoutValue(int value)
{

}
 8008310:	4770      	bx	lr

08008312 <_ZN25Calibration_HallPresenterD0Ev>:
 8008312:	b510      	push	{r4, lr}
 8008314:	2110      	movs	r1, #16
 8008316:	4604      	mov	r4, r0
 8008318:	f021 f8c9 	bl	80294ae <_ZdlPvj>
 800831c:	4620      	mov	r0, r4
 800831e:	bd10      	pop	{r4, pc}

08008320 <_ZThn4_N25Calibration_HallPresenterD0Ev>:
 8008320:	f1a0 0004 	sub.w	r0, r0, #4
 8008324:	e7f5      	b.n	8008312 <_ZN25Calibration_HallPresenterD0Ev>

08008326 <_ZThn4_N25Calibration_HallPresenter15setTimeoutValueEi>:
 8008326:	4770      	bx	lr

08008328 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>:
Calibration_HallPresenter::Calibration_HallPresenter(Calibration_HallView& v)
 8008328:	b510      	push	{r4, lr}
 800832a:	2200      	movs	r2, #0
 800832c:	6082      	str	r2, [r0, #8]
    : view(v)
 800832e:	4a04      	ldr	r2, [pc, #16]	; (8008340 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView+0x18>)
 8008330:	60c1      	str	r1, [r0, #12]
 8008332:	f102 0408 	add.w	r4, r2, #8
 8008336:	3224      	adds	r2, #36	; 0x24
 8008338:	6004      	str	r4, [r0, #0]
 800833a:	6042      	str	r2, [r0, #4]
}
 800833c:	bd10      	pop	{r4, pc}
 800833e:	bf00      	nop
 8008340:	0802db20 	.word	0x0802db20

08008344 <_ZN20Calibration_HallView14tearDownScreenEv>:
}

void Calibration_HallView::tearDownScreen()
{
    Calibration_HallViewBase::tearDownScreen();
}
 8008344:	4770      	bx	lr

08008346 <_ZN20Calibration_HallView15setTimeoutValueEi>:

void Calibration_HallView::setTimeoutValue(int value)
{

}
 8008346:	4770      	bx	lr

08008348 <_ZN20Calibration_HallViewD1Ev>:

class Calibration_HallView : public Calibration_HallViewBase
{
public:
    Calibration_HallView();
    virtual ~Calibration_HallView() {}
 8008348:	b510      	push	{r4, lr}
 800834a:	4b03      	ldr	r3, [pc, #12]	; (8008358 <_ZN20Calibration_HallViewD1Ev+0x10>)
 800834c:	6003      	str	r3, [r0, #0]
 800834e:	4604      	mov	r4, r0
 8008350:	f7fa fd2e 	bl	8002db0 <_ZN24Calibration_HallViewBaseD1Ev>
 8008354:	4620      	mov	r0, r4
 8008356:	bd10      	pop	{r4, pc}
 8008358:	0802db58 	.word	0x0802db58

0800835c <_ZN20Calibration_HallViewD0Ev>:
 800835c:	b510      	push	{r4, lr}
 800835e:	4604      	mov	r4, r0
 8008360:	f7ff fff2 	bl	8008348 <_ZN20Calibration_HallViewD1Ev>
 8008364:	4620      	mov	r0, r4
 8008366:	f241 015c 	movw	r1, #4188	; 0x105c
 800836a:	f021 f8a0 	bl	80294ae <_ZdlPvj>
 800836e:	4620      	mov	r0, r4
 8008370:	bd10      	pop	{r4, pc}
	...

08008374 <_ZN20Calibration_HallViewC1Ev>:
Calibration_HallView::Calibration_HallView()
 8008374:	b510      	push	{r4, lr}
 8008376:	4604      	mov	r4, r0
 8008378:	f7fa fd42 	bl	8002e00 <_ZN24Calibration_HallViewBaseC1Ev>
 800837c:	4b01      	ldr	r3, [pc, #4]	; (8008384 <_ZN20Calibration_HallViewC1Ev+0x10>)
 800837e:	6023      	str	r3, [r4, #0]
}
 8008380:	4620      	mov	r0, r4
 8008382:	bd10      	pop	{r4, pc}
 8008384:	0802db58 	.word	0x0802db58

08008388 <_ZN20Calibration_HallView11setupScreenEv>:
    Calibration_HallViewBase::setupScreen();
 8008388:	f7fa bcee 	b.w	8002d68 <_ZN24Calibration_HallViewBase11setupScreenEv>

0800838c <_ZN24Calibration_PadPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_PadPresenter() {}
 800838c:	4770      	bx	lr

0800838e <_ZThn4_N24Calibration_PadPresenterD1Ev>:
 800838e:	3804      	subs	r0, #4
 8008390:	4770      	bx	lr

08008392 <_ZN24Calibration_PadPresenter10deactivateEv>:
}

void Calibration_PadPresenter::activate()
{

}
 8008392:	4770      	bx	lr

08008394 <_ZN24Calibration_PadPresenter15setTimeoutValueEi>:
}

void Calibration_PadPresenter::setTimeoutValue(int value)
{

}
 8008394:	4770      	bx	lr

08008396 <_ZN24Calibration_PadPresenterD0Ev>:
 8008396:	b510      	push	{r4, lr}
 8008398:	2110      	movs	r1, #16
 800839a:	4604      	mov	r4, r0
 800839c:	f021 f887 	bl	80294ae <_ZdlPvj>
 80083a0:	4620      	mov	r0, r4
 80083a2:	bd10      	pop	{r4, pc}

080083a4 <_ZThn4_N24Calibration_PadPresenterD0Ev>:
 80083a4:	f1a0 0004 	sub.w	r0, r0, #4
 80083a8:	e7f5      	b.n	8008396 <_ZN24Calibration_PadPresenterD0Ev>

080083aa <_ZThn4_N24Calibration_PadPresenter15setTimeoutValueEi>:
 80083aa:	4770      	bx	lr

080083ac <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>:
Calibration_PadPresenter::Calibration_PadPresenter(Calibration_PadView& v)
 80083ac:	b510      	push	{r4, lr}
 80083ae:	2200      	movs	r2, #0
 80083b0:	6082      	str	r2, [r0, #8]
    : view(v)
 80083b2:	4a04      	ldr	r2, [pc, #16]	; (80083c4 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView+0x18>)
 80083b4:	60c1      	str	r1, [r0, #12]
 80083b6:	f102 0408 	add.w	r4, r2, #8
 80083ba:	3224      	adds	r2, #36	; 0x24
 80083bc:	6004      	str	r4, [r0, #0]
 80083be:	6042      	str	r2, [r0, #4]
}
 80083c0:	bd10      	pop	{r4, pc}
 80083c2:	bf00      	nop
 80083c4:	0802db88 	.word	0x0802db88

080083c8 <_ZN19Calibration_PadView14tearDownScreenEv>:
}

void Calibration_PadView::tearDownScreen()
{
    Calibration_PadViewBase::tearDownScreen();
}
 80083c8:	4770      	bx	lr

080083ca <_ZN19Calibration_PadView15setTimeoutValueEi>:

void Calibration_PadView::setTimeoutValue(int value)
{

}
 80083ca:	4770      	bx	lr

080083cc <_ZN19Calibration_PadViewD1Ev>:

class Calibration_PadView : public Calibration_PadViewBase
{
public:
    Calibration_PadView();
    virtual ~Calibration_PadView() {}
 80083cc:	b510      	push	{r4, lr}
 80083ce:	4b03      	ldr	r3, [pc, #12]	; (80083dc <_ZN19Calibration_PadViewD1Ev+0x10>)
 80083d0:	6003      	str	r3, [r0, #0]
 80083d2:	4604      	mov	r4, r0
 80083d4:	f7fa fe9c 	bl	8003110 <_ZN23Calibration_PadViewBaseD1Ev>
 80083d8:	4620      	mov	r0, r4
 80083da:	bd10      	pop	{r4, pc}
 80083dc:	0802dbc0 	.word	0x0802dbc0

080083e0 <_ZN19Calibration_PadViewD0Ev>:
 80083e0:	b510      	push	{r4, lr}
 80083e2:	4604      	mov	r4, r0
 80083e4:	f7ff fff2 	bl	80083cc <_ZN19Calibration_PadViewD1Ev>
 80083e8:	4620      	mov	r0, r4
 80083ea:	f241 015c 	movw	r1, #4188	; 0x105c
 80083ee:	f021 f85e 	bl	80294ae <_ZdlPvj>
 80083f2:	4620      	mov	r0, r4
 80083f4:	bd10      	pop	{r4, pc}
	...

080083f8 <_ZN19Calibration_PadViewC1Ev>:
Calibration_PadView::Calibration_PadView()
 80083f8:	b510      	push	{r4, lr}
 80083fa:	4604      	mov	r4, r0
 80083fc:	f7fa feb0 	bl	8003160 <_ZN23Calibration_PadViewBaseC1Ev>
 8008400:	4b01      	ldr	r3, [pc, #4]	; (8008408 <_ZN19Calibration_PadViewC1Ev+0x10>)
 8008402:	6023      	str	r3, [r4, #0]
}
 8008404:	4620      	mov	r0, r4
 8008406:	bd10      	pop	{r4, pc}
 8008408:	0802dbc0 	.word	0x0802dbc0

0800840c <_ZN19Calibration_PadView11setupScreenEv>:
    Calibration_PadViewBase::setupScreen();
 800840c:	f7fa be5c 	b.w	80030c8 <_ZN23Calibration_PadViewBase11setupScreenEv>

08008410 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8008410:	4770      	bx	lr

08008412 <_ZN19FrontendApplicationD0Ev>:
 8008412:	b510      	push	{r4, lr}
 8008414:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8008418:	4604      	mov	r4, r0
 800841a:	f021 f848 	bl	80294ae <_ZdlPvj>
 800841e:	4620      	mov	r0, r4
 8008420:	bd10      	pop	{r4, pc}

08008422 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8008422:	b510      	push	{r4, lr}
 8008424:	4604      	mov	r4, r0
    {
        model.tick();
 8008426:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 800842a:	f000 fb05 	bl	8008a38 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800842e:	4620      	mov	r0, r4
    }
 8008430:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8008434:	f00d b888 	b.w	8015548 <_ZN8touchgfx11Application15handleTickEventEv>

08008438 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8008438:	b510      	push	{r4, lr}
 800843a:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 800843c:	f7fb faa2 	bl	8003984 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8008440:	4b01      	ldr	r3, [pc, #4]	; (8008448 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8008442:	6023      	str	r3, [r4, #0]
{

}
 8008444:	4620      	mov	r0, r4
 8008446:	bd10      	pop	{r4, pc}
 8008448:	0802dbf8 	.word	0x0802dbf8

0800844c <_ZN17Gauge_with_ValuesD1Ev>:
 800844c:	b510      	push	{r4, lr}
 800844e:	4b03      	ldr	r3, [pc, #12]	; (800845c <_ZN17Gauge_with_ValuesD1Ev+0x10>)
 8008450:	6003      	str	r3, [r0, #0]
 8008452:	4604      	mov	r4, r0
 8008454:	f7fc fd9c 	bl	8004f90 <_ZN21Gauge_with_ValuesBaseD1Ev>
 8008458:	4620      	mov	r0, r4
 800845a:	bd10      	pop	{r4, pc}
 800845c:	0802dc4c 	.word	0x0802dc4c

08008460 <_ZN17Gauge_with_ValuesD0Ev>:
 8008460:	b510      	push	{r4, lr}
 8008462:	4604      	mov	r4, r0
 8008464:	f7ff fff2 	bl	800844c <_ZN17Gauge_with_ValuesD1Ev>
 8008468:	4620      	mov	r0, r4
 800846a:	f44f 7162 	mov.w	r1, #904	; 0x388
 800846e:	f021 f81e 	bl	80294ae <_ZdlPvj>
 8008472:	4620      	mov	r0, r4
 8008474:	bd10      	pop	{r4, pc}
	...

08008478 <_ZN17Gauge_with_ValuesC1Ev>:
#include <gui/containers/Gauge_with_Values.hpp>

Gauge_with_Values::Gauge_with_Values()
 8008478:	b510      	push	{r4, lr}
 800847a:	4604      	mov	r4, r0
 800847c:	f7fc fd92 	bl	8004fa4 <_ZN21Gauge_with_ValuesBaseC1Ev>
 8008480:	4b01      	ldr	r3, [pc, #4]	; (8008488 <_ZN17Gauge_with_ValuesC1Ev+0x10>)
 8008482:	6023      	str	r3, [r4, #0]
{

}
 8008484:	4620      	mov	r0, r4
 8008486:	bd10      	pop	{r4, pc}
 8008488:	0802dc4c 	.word	0x0802dc4c

0800848c <_ZN17Gauge_with_Values10initializeEv>:

void Gauge_with_Values::initialize()
{
    Gauge_with_ValuesBase::initialize();
 800848c:	f7fc bd81 	b.w	8004f92 <_ZN21Gauge_with_ValuesBase10initializeEv>

08008490 <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 8008490:	4770      	bx	lr

08008492 <_ZThn4_N18Main_MenuPresenterD1Ev>:
 8008492:	3804      	subs	r0, #4
 8008494:	4770      	bx	lr

08008496 <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 8008496:	4770      	bx	lr

08008498 <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008498:	68c0      	ldr	r0, [r0, #12]
 800849a:	6803      	ldr	r3, [r0, #0]
 800849c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800849e:	4718      	bx	r3

080084a0 <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80084a0:	f1a0 0004 	sub.w	r0, r0, #4
 80084a4:	f7ff bff8 	b.w	8008498 <_ZN18Main_MenuPresenter15setTimeoutValueEi>

080084a8 <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 80084a8:	b510      	push	{r4, lr}
 80084aa:	2110      	movs	r1, #16
 80084ac:	4604      	mov	r4, r0
 80084ae:	f020 fffe 	bl	80294ae <_ZdlPvj>
 80084b2:	4620      	mov	r0, r4
 80084b4:	bd10      	pop	{r4, pc}

080084b6 <_ZThn4_N18Main_MenuPresenterD0Ev>:
 80084b6:	f1a0 0004 	sub.w	r0, r0, #4
 80084ba:	e7f5      	b.n	80084a8 <_ZN18Main_MenuPresenterD0Ev>

080084bc <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 80084bc:	b510      	push	{r4, lr}
 80084be:	2200      	movs	r2, #0
 80084c0:	6082      	str	r2, [r0, #8]
    : view(v)
 80084c2:	4a04      	ldr	r2, [pc, #16]	; (80084d4 <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 80084c4:	60c1      	str	r1, [r0, #12]
 80084c6:	f102 0408 	add.w	r4, r2, #8
 80084ca:	3224      	adds	r2, #36	; 0x24
 80084cc:	6004      	str	r4, [r0, #0]
 80084ce:	6042      	str	r2, [r0, #4]
}
 80084d0:	bd10      	pop	{r4, pc}
 80084d2:	bf00      	nop
 80084d4:	0802dcd8 	.word	0x0802dcd8

080084d8 <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 80084d8:	4770      	bx	lr
	...

080084dc <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 80084dc:	b510      	push	{r4, lr}
 80084de:	4b03      	ldr	r3, [pc, #12]	; (80084ec <_ZN13Main_MenuViewD1Ev+0x10>)
 80084e0:	6003      	str	r3, [r0, #0]
 80084e2:	4604      	mov	r4, r0
 80084e4:	f7fc ff5a 	bl	800539c <_ZN17Main_MenuViewBaseD1Ev>
 80084e8:	4620      	mov	r0, r4
 80084ea:	bd10      	pop	{r4, pc}
 80084ec:	0802dd10 	.word	0x0802dd10

080084f0 <_ZN13Main_MenuViewD0Ev>:
 80084f0:	b510      	push	{r4, lr}
 80084f2:	4604      	mov	r4, r0
 80084f4:	f7ff fff2 	bl	80084dc <_ZN13Main_MenuViewD1Ev>
 80084f8:	4620      	mov	r0, r4
 80084fa:	f241 117c 	movw	r1, #4476	; 0x117c
 80084fe:	f020 ffd6 	bl	80294ae <_ZdlPvj>
 8008502:	4620      	mov	r0, r4
 8008504:	bd10      	pop	{r4, pc}
	...

08008508 <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 8008508:	b510      	push	{r4, lr}
 800850a:	4604      	mov	r4, r0
 800850c:	f7fc ff90 	bl	8005430 <_ZN17Main_MenuViewBaseC1Ev>
 8008510:	4b01      	ldr	r3, [pc, #4]	; (8008518 <_ZN13Main_MenuViewC1Ev+0x10>)
 8008512:	6023      	str	r3, [r4, #0]
}
 8008514:	4620      	mov	r0, r4
 8008516:	bd10      	pop	{r4, pc}
 8008518:	0802dd10 	.word	0x0802dd10

0800851c <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 800851c:	f7fc bf1a 	b.w	8005354 <_ZN17Main_MenuViewBase11setupScreenEv>

08008520 <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 8008520:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 8008522:	4a0a      	ldr	r2, [pc, #40]	; (800854c <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 8008524:	4605      	mov	r5, r0
 8008526:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 8008528:	460b      	mov	r3, r1
 800852a:	f500 7055 	add.w	r0, r0, #852	; 0x354
 800852e:	2104      	movs	r1, #4
 8008530:	f010 f8b6 	bl	80186a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3.invalidate();
 8008534:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008538:	f00e f82a 	bl	8016590 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 800853c:	b92c      	cbnz	r4, 800854a <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 800853e:	f00c ff3f 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008542:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008546:	f7fb bb4d 	b.w	8003be4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800854a:	bd38      	pop	{r3, r4, r5, pc}
 800854c:	0802dae4 	.word	0x0802dae4

08008550 <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 8008550:	4770      	bx	lr

08008552 <_ZThn4_N20MeasurementPresenterD1Ev>:
 8008552:	3804      	subs	r0, #4
 8008554:	4770      	bx	lr

08008556 <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 8008556:	4770      	bx	lr

08008558 <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008558:	68c0      	ldr	r0, [r0, #12]
 800855a:	6803      	ldr	r3, [r0, #0]
 800855c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800855e:	4718      	bx	r3

08008560 <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008560:	f1a0 0004 	sub.w	r0, r0, #4
 8008564:	f7ff bff8 	b.w	8008558 <_ZN20MeasurementPresenter15setTimeoutValueEi>

08008568 <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 8008568:	b510      	push	{r4, lr}
 800856a:	2110      	movs	r1, #16
 800856c:	4604      	mov	r4, r0
 800856e:	f020 ff9e 	bl	80294ae <_ZdlPvj>
 8008572:	4620      	mov	r0, r4
 8008574:	bd10      	pop	{r4, pc}

08008576 <_ZThn4_N20MeasurementPresenterD0Ev>:
 8008576:	f1a0 0004 	sub.w	r0, r0, #4
 800857a:	e7f5      	b.n	8008568 <_ZN20MeasurementPresenterD0Ev>

0800857c <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 800857c:	b510      	push	{r4, lr}
 800857e:	2200      	movs	r2, #0
 8008580:	6082      	str	r2, [r0, #8]
    : view(v)
 8008582:	4a04      	ldr	r2, [pc, #16]	; (8008594 <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 8008584:	60c1      	str	r1, [r0, #12]
 8008586:	f102 0408 	add.w	r4, r2, #8
 800858a:	3224      	adds	r2, #36	; 0x24
 800858c:	6004      	str	r4, [r0, #0]
 800858e:	6042      	str	r2, [r0, #4]
}
 8008590:	bd10      	pop	{r4, pc}
 8008592:	bf00      	nop
 8008594:	0802dd40 	.word	0x0802dd40

08008598 <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 8008598:	4770      	bx	lr
	...

0800859c <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 800859c:	b510      	push	{r4, lr}
 800859e:	4b03      	ldr	r3, [pc, #12]	; (80085ac <_ZN15MeasurementViewD1Ev+0x10>)
 80085a0:	6003      	str	r3, [r0, #0]
 80085a2:	4604      	mov	r4, r0
 80085a4:	f7fd f9b4 	bl	8005910 <_ZN19MeasurementViewBaseD1Ev>
 80085a8:	4620      	mov	r0, r4
 80085aa:	bd10      	pop	{r4, pc}
 80085ac:	0802dd78 	.word	0x0802dd78

080085b0 <_ZN15MeasurementViewD0Ev>:
 80085b0:	b510      	push	{r4, lr}
 80085b2:	4604      	mov	r4, r0
 80085b4:	f7ff fff2 	bl	800859c <_ZN15MeasurementViewD1Ev>
 80085b8:	4620      	mov	r0, r4
 80085ba:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80085be:	f020 ff76 	bl	80294ae <_ZdlPvj>
 80085c2:	4620      	mov	r0, r4
 80085c4:	bd10      	pop	{r4, pc}
	...

080085c8 <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 80085c8:	b510      	push	{r4, lr}
 80085ca:	4604      	mov	r4, r0
 80085cc:	f7fd f9da 	bl	8005984 <_ZN19MeasurementViewBaseC1Ev>
 80085d0:	4b01      	ldr	r3, [pc, #4]	; (80085d8 <_ZN15MeasurementViewC1Ev+0x10>)
 80085d2:	6023      	str	r3, [r4, #0]
}
 80085d4:	4620      	mov	r0, r4
 80085d6:	bd10      	pop	{r4, pc}
 80085d8:	0802dd78 	.word	0x0802dd78

080085dc <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 80085dc:	f7fd b974 	b.w	80058c8 <_ZN19MeasurementViewBase11setupScreenEv>

080085e0 <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 80085e0:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80085e2:	4a0a      	ldr	r2, [pc, #40]	; (800860c <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 80085e4:	4605      	mov	r5, r0
 80085e6:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80085e8:	460b      	mov	r3, r1
 80085ea:	f500 7046 	add.w	r0, r0, #792	; 0x318
 80085ee:	2104      	movs	r1, #4
 80085f0:	f010 f856 	bl	80186a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 80085f4:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80085f8:	f00d ffca 	bl	8016590 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80085fc:	b92c      	cbnz	r4, 800860a <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 80085fe:	f00c fedf 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008602:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008606:	f7fb baed 	b.w	8003be4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800860a:	bd38      	pop	{r3, r4, r5, pc}
 800860c:	0802dae4 	.word	0x0802dae4

08008610 <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 8008610:	4770      	bx	lr

08008612 <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 8008612:	3804      	subs	r0, #4
 8008614:	4770      	bx	lr

08008616 <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 8008616:	4770      	bx	lr

08008618 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:

}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008618:	68c0      	ldr	r0, [r0, #12]
 800861a:	6803      	ldr	r3, [r0, #0]
 800861c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800861e:	4718      	bx	r3

08008620 <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008620:	f1a0 0004 	sub.w	r0, r0, #4
 8008624:	f7ff bff8 	b.w	8008618 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>

08008628 <_ZN29Measurement_AccuratePresenterD0Ev>:
    virtual ~Measurement_AccuratePresenter() {}
 8008628:	b510      	push	{r4, lr}
 800862a:	2110      	movs	r1, #16
 800862c:	4604      	mov	r4, r0
 800862e:	f020 ff3e 	bl	80294ae <_ZdlPvj>
 8008632:	4620      	mov	r0, r4
 8008634:	bd10      	pop	{r4, pc}

08008636 <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 8008636:	f1a0 0004 	sub.w	r0, r0, #4
 800863a:	e7f5      	b.n	8008628 <_ZN29Measurement_AccuratePresenterD0Ev>

0800863c <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 800863c:	b510      	push	{r4, lr}
 800863e:	2200      	movs	r2, #0
 8008640:	6082      	str	r2, [r0, #8]
    : view(v)
 8008642:	4a04      	ldr	r2, [pc, #16]	; (8008654 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 8008644:	60c1      	str	r1, [r0, #12]
 8008646:	f102 0408 	add.w	r4, r2, #8
 800864a:	3224      	adds	r2, #36	; 0x24
 800864c:	6004      	str	r4, [r0, #0]
 800864e:	6042      	str	r2, [r0, #4]
}
 8008650:	bd10      	pop	{r4, pc}
 8008652:	bf00      	nop
 8008654:	0802dda8 	.word	0x0802dda8

08008658 <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 8008658:	4770      	bx	lr
	...

0800865c <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 800865c:	b510      	push	{r4, lr}
 800865e:	4b03      	ldr	r3, [pc, #12]	; (800866c <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 8008660:	6003      	str	r3, [r0, #0]
 8008662:	4604      	mov	r4, r0
 8008664:	f7fd fbd6 	bl	8005e14 <_ZN28Measurement_AccurateViewBaseD1Ev>
 8008668:	4620      	mov	r0, r4
 800866a:	bd10      	pop	{r4, pc}
 800866c:	0802dde0 	.word	0x0802dde0

08008670 <_ZN24Measurement_AccurateViewD0Ev>:
 8008670:	b510      	push	{r4, lr}
 8008672:	4604      	mov	r4, r0
 8008674:	f7ff fff2 	bl	800865c <_ZN24Measurement_AccurateViewD1Ev>
 8008678:	4620      	mov	r0, r4
 800867a:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800867e:	f020 ff16 	bl	80294ae <_ZdlPvj>
 8008682:	4620      	mov	r0, r4
 8008684:	bd10      	pop	{r4, pc}
	...

08008688 <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 8008688:	b510      	push	{r4, lr}
 800868a:	4604      	mov	r4, r0
 800868c:	f7fd fbfc 	bl	8005e88 <_ZN28Measurement_AccurateViewBaseC1Ev>
 8008690:	4b01      	ldr	r3, [pc, #4]	; (8008698 <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 8008692:	6023      	str	r3, [r4, #0]
}
 8008694:	4620      	mov	r0, r4
 8008696:	bd10      	pop	{r4, pc}
 8008698:	0802dde0 	.word	0x0802dde0

0800869c <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 800869c:	f7fd bb96 	b.w	8005dcc <_ZN28Measurement_AccurateViewBase11setupScreenEv>

080086a0 <_ZN24Measurement_AccurateView15setTimeoutValueEi>:

void Measurement_AccurateView::setTimeoutValue(int value)
{
 80086a0:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80086a2:	4a0a      	ldr	r2, [pc, #40]	; (80086cc <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2c>)
{
 80086a4:	4605      	mov	r5, r0
 80086a6:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80086a8:	460b      	mov	r3, r1
 80086aa:	f500 7046 	add.w	r0, r0, #792	; 0x318
 80086ae:	2104      	movs	r1, #4
 80086b0:	f00f fff6 	bl	80186a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 80086b4:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80086b8:	f00d ff6a 	bl	8016590 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80086bc:	b92c      	cbnz	r4, 80086ca <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2a>
 80086be:	f00c fe7f 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80086c2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80086c6:	f7fb ba8d 	b.w	8003be4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80086ca:	bd38      	pop	{r3, r4, r5, pc}
 80086cc:	0802dae4 	.word	0x0802dae4

080086d0 <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 80086d0:	4770      	bx	lr

080086d2 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 80086d2:	3804      	subs	r0, #4
 80086d4:	4770      	bx	lr

080086d6 <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 80086d6:	4770      	bx	lr

080086d8 <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 80086d8:	4770      	bx	lr

080086da <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 80086da:	b510      	push	{r4, lr}
 80086dc:	2110      	movs	r1, #16
 80086de:	4604      	mov	r4, r0
 80086e0:	f020 fee5 	bl	80294ae <_ZdlPvj>
 80086e4:	4620      	mov	r0, r4
 80086e6:	bd10      	pop	{r4, pc}

080086e8 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 80086e8:	f1a0 0004 	sub.w	r0, r0, #4
 80086ec:	e7f5      	b.n	80086da <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

080086ee <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 80086ee:	4770      	bx	lr

080086f0 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 80086f0:	b510      	push	{r4, lr}
 80086f2:	2200      	movs	r2, #0
 80086f4:	6082      	str	r2, [r0, #8]
    : view(v)
 80086f6:	4a04      	ldr	r2, [pc, #16]	; (8008708 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 80086f8:	60c1      	str	r1, [r0, #12]
 80086fa:	f102 0408 	add.w	r4, r2, #8
 80086fe:	3224      	adds	r2, #36	; 0x24
 8008700:	6004      	str	r4, [r0, #0]
 8008702:	6042      	str	r2, [r0, #4]
}
 8008704:	bd10      	pop	{r4, pc}
 8008706:	bf00      	nop
 8008708:	0802de10 	.word	0x0802de10

0800870c <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 800870c:	4770      	bx	lr
	...

08008710 <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 8008710:	b510      	push	{r4, lr}
 8008712:	4b03      	ldr	r3, [pc, #12]	; (8008720 <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 8008714:	6003      	str	r3, [r0, #0]
 8008716:	4604      	mov	r4, r0
 8008718:	f7fd fe08 	bl	800632c <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 800871c:	4620      	mov	r0, r4
 800871e:	bd10      	pop	{r4, pc}
 8008720:	0802de48 	.word	0x0802de48

08008724 <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 8008724:	b510      	push	{r4, lr}
 8008726:	4604      	mov	r4, r0
 8008728:	f7ff fff2 	bl	8008710 <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 800872c:	4620      	mov	r0, r4
 800872e:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8008732:	f020 febc 	bl	80294ae <_ZdlPvj>
 8008736:	4620      	mov	r0, r4
 8008738:	bd10      	pop	{r4, pc}
	...

0800873c <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 800873c:	b510      	push	{r4, lr}
 800873e:	4604      	mov	r4, r0
 8008740:	f7fd fe14 	bl	800636c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 8008744:	4b01      	ldr	r3, [pc, #4]	; (800874c <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 8008746:	6023      	str	r3, [r4, #0]
}
 8008748:	4620      	mov	r0, r4
 800874a:	bd10      	pop	{r4, pc}
 800874c:	0802de48 	.word	0x0802de48

08008750 <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 8008750:	f7fd bddd 	b.w	800630e <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

08008754 <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 8008754:	4770      	bx	lr

08008756 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 8008756:	3804      	subs	r0, #4
 8008758:	4770      	bx	lr

0800875a <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 800875a:	4770      	bx	lr

0800875c <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 800875c:	4770      	bx	lr

0800875e <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 800875e:	b510      	push	{r4, lr}
 8008760:	2110      	movs	r1, #16
 8008762:	4604      	mov	r4, r0
 8008764:	f020 fea3 	bl	80294ae <_ZdlPvj>
 8008768:	4620      	mov	r0, r4
 800876a:	bd10      	pop	{r4, pc}

0800876c <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 800876c:	f1a0 0004 	sub.w	r0, r0, #4
 8008770:	e7f5      	b.n	800875e <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

08008772 <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 8008772:	4770      	bx	lr

08008774 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 8008774:	b510      	push	{r4, lr}
 8008776:	2200      	movs	r2, #0
 8008778:	6082      	str	r2, [r0, #8]
    : view(v)
 800877a:	4a04      	ldr	r2, [pc, #16]	; (800878c <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 800877c:	60c1      	str	r1, [r0, #12]
 800877e:	f102 0408 	add.w	r4, r2, #8
 8008782:	3224      	adds	r2, #36	; 0x24
 8008784:	6004      	str	r4, [r0, #0]
 8008786:	6042      	str	r2, [r0, #4]
}
 8008788:	bd10      	pop	{r4, pc}
 800878a:	bf00      	nop
 800878c:	0802de74 	.word	0x0802de74

08008790 <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 8008790:	4770      	bx	lr
	...

08008794 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 8008794:	b510      	push	{r4, lr}
 8008796:	4b03      	ldr	r3, [pc, #12]	; (80087a4 <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 8008798:	6003      	str	r3, [r0, #0]
 800879a:	4604      	mov	r4, r0
 800879c:	f7fd ff8a 	bl	80066b4 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 80087a0:	4620      	mov	r0, r4
 80087a2:	bd10      	pop	{r4, pc}
 80087a4:	0802deac 	.word	0x0802deac

080087a8 <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 80087a8:	b510      	push	{r4, lr}
 80087aa:	4604      	mov	r4, r0
 80087ac:	f7ff fff2 	bl	8008794 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 80087b0:	4620      	mov	r0, r4
 80087b2:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80087b6:	f020 fe7a 	bl	80294ae <_ZdlPvj>
 80087ba:	4620      	mov	r0, r4
 80087bc:	bd10      	pop	{r4, pc}
	...

080087c0 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 80087c0:	b510      	push	{r4, lr}
 80087c2:	4604      	mov	r4, r0
 80087c4:	f7fd ff96 	bl	80066f4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 80087c8:	4b01      	ldr	r3, [pc, #4]	; (80087d0 <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 80087ca:	6023      	str	r3, [r4, #0]
}
 80087cc:	4620      	mov	r0, r4
 80087ce:	bd10      	pop	{r4, pc}
 80087d0:	0802deac 	.word	0x0802deac

080087d4 <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 80087d4:	f7fd bf5f 	b.w	8006696 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

080087d8 <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 80087d8:	4770      	bx	lr

080087da <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 80087da:	3804      	subs	r0, #4
 80087dc:	4770      	bx	lr

080087de <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 80087de:	4770      	bx	lr

080087e0 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:

}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80087e0:	68c0      	ldr	r0, [r0, #12]
 80087e2:	6803      	ldr	r3, [r0, #0]
 80087e4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80087e6:	4718      	bx	r3

080087e8 <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80087e8:	f1a0 0004 	sub.w	r0, r0, #4
 80087ec:	f7ff bff8 	b.w	80087e0 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>

080087f0 <_ZN27Measurement_SinglePresenterD0Ev>:
    virtual ~Measurement_SinglePresenter() {}
 80087f0:	b510      	push	{r4, lr}
 80087f2:	2110      	movs	r1, #16
 80087f4:	4604      	mov	r4, r0
 80087f6:	f020 fe5a 	bl	80294ae <_ZdlPvj>
 80087fa:	4620      	mov	r0, r4
 80087fc:	bd10      	pop	{r4, pc}

080087fe <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 80087fe:	f1a0 0004 	sub.w	r0, r0, #4
 8008802:	e7f5      	b.n	80087f0 <_ZN27Measurement_SinglePresenterD0Ev>

08008804 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 8008804:	b510      	push	{r4, lr}
 8008806:	2200      	movs	r2, #0
 8008808:	6082      	str	r2, [r0, #8]
    : view(v)
 800880a:	4a04      	ldr	r2, [pc, #16]	; (800881c <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 800880c:	60c1      	str	r1, [r0, #12]
 800880e:	f102 0408 	add.w	r4, r2, #8
 8008812:	3224      	adds	r2, #36	; 0x24
 8008814:	6004      	str	r4, [r0, #0]
 8008816:	6042      	str	r2, [r0, #4]
}
 8008818:	bd10      	pop	{r4, pc}
 800881a:	bf00      	nop
 800881c:	0802ded8 	.word	0x0802ded8

08008820 <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 8008820:	4770      	bx	lr
	...

08008824 <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 8008824:	b510      	push	{r4, lr}
 8008826:	4b03      	ldr	r3, [pc, #12]	; (8008834 <_ZN22Measurement_SingleViewD1Ev+0x10>)
 8008828:	6003      	str	r3, [r0, #0]
 800882a:	4604      	mov	r4, r0
 800882c:	f7fe f8f8 	bl	8006a20 <_ZN26Measurement_SingleViewBaseD1Ev>
 8008830:	4620      	mov	r0, r4
 8008832:	bd10      	pop	{r4, pc}
 8008834:	0802df10 	.word	0x0802df10

08008838 <_ZN22Measurement_SingleViewD0Ev>:
 8008838:	b510      	push	{r4, lr}
 800883a:	4604      	mov	r4, r0
 800883c:	f7ff fff2 	bl	8008824 <_ZN22Measurement_SingleViewD1Ev>
 8008840:	4620      	mov	r0, r4
 8008842:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8008846:	f020 fe32 	bl	80294ae <_ZdlPvj>
 800884a:	4620      	mov	r0, r4
 800884c:	bd10      	pop	{r4, pc}
	...

08008850 <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 8008850:	b510      	push	{r4, lr}
 8008852:	4604      	mov	r4, r0
 8008854:	f7fe f91e 	bl	8006a94 <_ZN26Measurement_SingleViewBaseC1Ev>
 8008858:	4b01      	ldr	r3, [pc, #4]	; (8008860 <_ZN22Measurement_SingleViewC1Ev+0x10>)
 800885a:	6023      	str	r3, [r4, #0]
}
 800885c:	4620      	mov	r0, r4
 800885e:	bd10      	pop	{r4, pc}
 8008860:	0802df10 	.word	0x0802df10

08008864 <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 8008864:	f7fe b8b8 	b.w	80069d8 <_ZN26Measurement_SingleViewBase11setupScreenEv>

08008868 <_ZN22Measurement_SingleView15setTimeoutValueEi>:

void Measurement_SingleView::setTimeoutValue(int value)
{
 8008868:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800886a:	4a0a      	ldr	r2, [pc, #40]	; (8008894 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2c>)
{
 800886c:	4605      	mov	r5, r0
 800886e:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008870:	460b      	mov	r3, r1
 8008872:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008876:	2104      	movs	r1, #4
 8008878:	f00f ff12 	bl	80186a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 800887c:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008880:	f00d fe86 	bl	8016590 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008884:	b92c      	cbnz	r4, 8008892 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2a>
 8008886:	f00c fd9b 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800888a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800888e:	f7fb b9a9 	b.w	8003be4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008892:	bd38      	pop	{r3, r4, r5, pc}
 8008894:	0802dae4 	.word	0x0802dae4

08008898 <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 8008898:	4770      	bx	lr

0800889a <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 800889a:	3804      	subs	r0, #4
 800889c:	4770      	bx	lr

0800889e <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 800889e:	4770      	bx	lr

080088a0 <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 80088a0:	4770      	bx	lr

080088a2 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 80088a2:	b510      	push	{r4, lr}
 80088a4:	2110      	movs	r1, #16
 80088a6:	4604      	mov	r4, r0
 80088a8:	f020 fe01 	bl	80294ae <_ZdlPvj>
 80088ac:	4620      	mov	r0, r4
 80088ae:	bd10      	pop	{r4, pc}

080088b0 <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 80088b0:	f1a0 0004 	sub.w	r0, r0, #4
 80088b4:	e7f5      	b.n	80088a2 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

080088b6 <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 80088b6:	4770      	bx	lr

080088b8 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 80088b8:	b510      	push	{r4, lr}
 80088ba:	2200      	movs	r2, #0
 80088bc:	6082      	str	r2, [r0, #8]
    : view(v)
 80088be:	4a04      	ldr	r2, [pc, #16]	; (80088d0 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 80088c0:	60c1      	str	r1, [r0, #12]
 80088c2:	f102 0408 	add.w	r4, r2, #8
 80088c6:	3224      	adds	r2, #36	; 0x24
 80088c8:	6004      	str	r4, [r0, #0]
 80088ca:	6042      	str	r2, [r0, #4]
}
 80088cc:	bd10      	pop	{r4, pc}
 80088ce:	bf00      	nop
 80088d0:	0802df40 	.word	0x0802df40

080088d4 <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 80088d4:	4770      	bx	lr
	...

080088d8 <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 80088d8:	b510      	push	{r4, lr}
 80088da:	4b03      	ldr	r3, [pc, #12]	; (80088e8 <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 80088dc:	6003      	str	r3, [r0, #0]
 80088de:	4604      	mov	r4, r0
 80088e0:	f7fe fb26 	bl	8006f30 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 80088e4:	4620      	mov	r0, r4
 80088e6:	bd10      	pop	{r4, pc}
 80088e8:	0802df80 	.word	0x0802df80

080088ec <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 80088ec:	b510      	push	{r4, lr}
 80088ee:	4604      	mov	r4, r0
 80088f0:	f7ff fff2 	bl	80088d8 <_ZN33Measurement_Single_Display_1PViewD1Ev>
 80088f4:	4620      	mov	r0, r4
 80088f6:	f241 31f4 	movw	r1, #5108	; 0x13f4
 80088fa:	f020 fdd8 	bl	80294ae <_ZdlPvj>
 80088fe:	4620      	mov	r0, r4
 8008900:	bd10      	pop	{r4, pc}
	...

08008904 <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 8008904:	b510      	push	{r4, lr}
 8008906:	4604      	mov	r4, r0
 8008908:	f7fe fb3a 	bl	8006f80 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 800890c:	4b01      	ldr	r3, [pc, #4]	; (8008914 <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 800890e:	6023      	str	r3, [r4, #0]
}
 8008910:	4620      	mov	r0, r4
 8008912:	bd10      	pop	{r4, pc}
 8008914:	0802df80 	.word	0x0802df80

08008918 <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 8008918:	f7fe bae3 	b.w	8006ee2 <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

0800891c <_ZN33Measurement_Single_Display_1PView7testGuiEv>:

void Measurement_Single_Display_1PView::testGui()
{
 800891c:	b530      	push	{r4, r5, lr}
 800891e:	b087      	sub	sp, #28
 8008920:	4604      	mov	r4, r0
#ifndef SIMULATOR
	int test = 	0;

	test = updateGUI_test();
 8008922:	f7f8 fce1 	bl	80012e8 <updateGUI_test>
 8008926:	4605      	mov	r5, r0

	uint32_t* Samples = MEAS_start_measure();
 8008928:	f7f9 fa48 	bl	8001dbc <MEAS_start_measure>

	//callback to fft
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 800892c:	2232      	movs	r2, #50	; 0x32
	uint32_t* Samples = MEAS_start_measure();
 800892e:	4601      	mov	r1, r0
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8008930:	2001      	movs	r0, #1
 8008932:	f7f8 fc2f 	bl	8001194 <calculate_freq_and_signalstrength>

	//update GUI values
	//set gauge angle
	SMD1_gauge.setValue(test);
 8008936:	f104 00e0 	add.w	r0, r4, #224	; 0xe0
 800893a:	4629      	mov	r1, r5
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 800893c:	ed8d 0a04 	vstr	s0, [sp, #16]
 8008940:	edcd 0a05 	vstr	s1, [sp, #20]
	SMD1_gauge.setValue(test);
 8008944:	9001      	str	r0, [sp, #4]
 8008946:	f009 fdcf 	bl	80124e8 <_ZN8touchgfx5Gauge8setValueEi>
	SMD1_gauge.invalidate();
 800894a:	9801      	ldr	r0, [sp, #4]
 800894c:	f00d fe20 	bl	8016590 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set current value
	Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%d", test);
 8008950:	462b      	mov	r3, r5
 8008952:	4a13      	ldr	r2, [pc, #76]	; (80089a0 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x84>)
 8008954:	210a      	movs	r1, #10
 8008956:	f504 60b3 	add.w	r0, r4, #1432	; 0x598
 800895a:	f00f fea1 	bl	80186a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	SMD1_Current.invalidate();
 800895e:	f504 7020 	add.w	r0, r4, #640	; 0x280
 8008962:	f00d fe15 	bl	8016590 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set frequency value
	Unicode::snprintfFloat(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%.2f", fft.main_freq);
 8008966:	9b04      	ldr	r3, [sp, #16]
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 8008968:	4a0e      	ldr	r2, [pc, #56]	; (80089a4 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x88>)
 800896a:	9303      	str	r3, [sp, #12]
 800896c:	210a      	movs	r1, #10
 800896e:	ab03      	add	r3, sp, #12
 8008970:	f204 50ac 	addw	r0, r4, #1452	; 0x5ac
 8008974:	f010 f880 	bl	8018a78 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Frequency.invalidate();
 8008978:	f504 7033 	add.w	r0, r4, #716	; 0x2cc
 800897c:	f00d fe08 	bl	8016590 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set distance value
	Unicode::snprintfFloat(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%.2f", fft.signal_strength);
 8008980:	9b05      	ldr	r3, [sp, #20]
 8008982:	9303      	str	r3, [sp, #12]
 8008984:	4a07      	ldr	r2, [pc, #28]	; (80089a4 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x88>)
 8008986:	ab03      	add	r3, sp, #12
 8008988:	210a      	movs	r1, #10
 800898a:	f504 60b8 	add.w	r0, r4, #1472	; 0x5c0
 800898e:	f010 f873 	bl	8018a78 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Distance.invalidate();
 8008992:	f504 7046 	add.w	r0, r4, #792	; 0x318
#endif
}
 8008996:	b007      	add	sp, #28
 8008998:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	SMD1_Distance.invalidate();
 800899c:	f00d bdf8 	b.w	8016590 <_ZNK8touchgfx8Drawable10invalidateEv>
 80089a0:	0802dae4 	.word	0x0802dae4
 80089a4:	0802df70 	.word	0x0802df70

080089a8 <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 80089a8:	4770      	bx	lr

080089aa <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 80089aa:	3804      	subs	r0, #4
 80089ac:	4770      	bx	lr

080089ae <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 80089ae:	4770      	bx	lr

080089b0 <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 80089b0:	4770      	bx	lr

080089b2 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 80089b2:	b510      	push	{r4, lr}
 80089b4:	2110      	movs	r1, #16
 80089b6:	4604      	mov	r4, r0
 80089b8:	f020 fd79 	bl	80294ae <_ZdlPvj>
 80089bc:	4620      	mov	r0, r4
 80089be:	bd10      	pop	{r4, pc}

080089c0 <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 80089c0:	f1a0 0004 	sub.w	r0, r0, #4
 80089c4:	e7f5      	b.n	80089b2 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

080089c6 <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 80089c6:	4770      	bx	lr

080089c8 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 80089c8:	b510      	push	{r4, lr}
 80089ca:	2200      	movs	r2, #0
 80089cc:	6082      	str	r2, [r0, #8]
    : view(v)
 80089ce:	4a04      	ldr	r2, [pc, #16]	; (80089e0 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 80089d0:	60c1      	str	r1, [r0, #12]
 80089d2:	f102 0408 	add.w	r4, r2, #8
 80089d6:	3224      	adds	r2, #36	; 0x24
 80089d8:	6004      	str	r4, [r0, #0]
 80089da:	6042      	str	r2, [r0, #4]
}
 80089dc:	bd10      	pop	{r4, pc}
 80089de:	bf00      	nop
 80089e0:	0802dfb0 	.word	0x0802dfb0

080089e4 <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 80089e4:	4770      	bx	lr
	...

080089e8 <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 80089e8:	b510      	push	{r4, lr}
 80089ea:	4b03      	ldr	r3, [pc, #12]	; (80089f8 <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 80089ec:	6003      	str	r3, [r0, #0]
 80089ee:	4604      	mov	r4, r0
 80089f0:	f7fe fe38 	bl	8007664 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 80089f4:	4620      	mov	r0, r4
 80089f6:	bd10      	pop	{r4, pc}
 80089f8:	0802dfe8 	.word	0x0802dfe8

080089fc <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 80089fc:	b510      	push	{r4, lr}
 80089fe:	4604      	mov	r4, r0
 8008a00:	f7ff fff2 	bl	80089e8 <_ZN33Measurement_Single_Display_3PViewD1Ev>
 8008a04:	4620      	mov	r0, r4
 8008a06:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8008a0a:	f020 fd50 	bl	80294ae <_ZdlPvj>
 8008a0e:	4620      	mov	r0, r4
 8008a10:	bd10      	pop	{r4, pc}
	...

08008a14 <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 8008a14:	b510      	push	{r4, lr}
 8008a16:	4604      	mov	r4, r0
 8008a18:	f7fe fe44 	bl	80076a4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 8008a1c:	4b01      	ldr	r3, [pc, #4]	; (8008a24 <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 8008a1e:	6023      	str	r3, [r4, #0]
}
 8008a20:	4620      	mov	r0, r4
 8008a22:	bd10      	pop	{r4, pc}
 8008a24:	0802dfe8 	.word	0x0802dfe8

08008a28 <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 8008a28:	f7fe be0b 	b.w	8007642 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

08008a2c <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 8008a2c:	2100      	movs	r1, #0
 8008a2e:	223c      	movs	r2, #60	; 0x3c
 8008a30:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 8008a34:	4770      	bx	lr
	...

08008a38 <_ZN5Model4tickEv>:

void Model::tick()
{
 8008a38:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 8008a3a:	4d0a      	ldr	r5, [pc, #40]	; (8008a64 <_ZN5Model4tickEv+0x2c>)
{
 8008a3c:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 8008a3e:	6828      	ldr	r0, [r5, #0]
 8008a40:	f004 fc1a 	bl	800d278 <osMessageQueueGetCount>
 8008a44:	b168      	cbz	r0, 8008a62 <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 8008a46:	2300      	movs	r3, #0
 8008a48:	6828      	ldr	r0, [r5, #0]
 8008a4a:	461a      	mov	r2, r3
 8008a4c:	1d21      	adds	r1, r4, #4
 8008a4e:	f004 fbdf 	bl	800d210 <osMessageQueueGet>
 8008a52:	b930      	cbnz	r0, 8008a62 <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 8008a54:	6820      	ldr	r0, [r4, #0]
 8008a56:	6861      	ldr	r1, [r4, #4]
 8008a58:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 8008a5a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 8008a5e:	689b      	ldr	r3, [r3, #8]
 8008a60:	4718      	bx	r3
}
 8008a62:	bd70      	pop	{r4, r5, r6, pc}
 8008a64:	200018d4 	.word	0x200018d4

08008a68 <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 8008a68:	4770      	bx	lr

08008a6a <_ZThn4_N21Project_InfoPresenterD1Ev>:
 8008a6a:	3804      	subs	r0, #4
 8008a6c:	4770      	bx	lr

08008a6e <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 8008a6e:	4770      	bx	lr

08008a70 <_ZN21Project_InfoPresenter15setTimeoutValueEi>:

}

void Project_InfoPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008a70:	68c0      	ldr	r0, [r0, #12]
 8008a72:	6803      	ldr	r3, [r0, #0]
 8008a74:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008a76:	4718      	bx	r3

08008a78 <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008a78:	f1a0 0004 	sub.w	r0, r0, #4
 8008a7c:	f7ff bff8 	b.w	8008a70 <_ZN21Project_InfoPresenter15setTimeoutValueEi>

08008a80 <_ZN21Project_InfoPresenterD0Ev>:
    virtual ~Project_InfoPresenter() {}
 8008a80:	b510      	push	{r4, lr}
 8008a82:	2110      	movs	r1, #16
 8008a84:	4604      	mov	r4, r0
 8008a86:	f020 fd12 	bl	80294ae <_ZdlPvj>
 8008a8a:	4620      	mov	r0, r4
 8008a8c:	bd10      	pop	{r4, pc}

08008a8e <_ZThn4_N21Project_InfoPresenterD0Ev>:
 8008a8e:	f1a0 0004 	sub.w	r0, r0, #4
 8008a92:	e7f5      	b.n	8008a80 <_ZN21Project_InfoPresenterD0Ev>

08008a94 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 8008a94:	b510      	push	{r4, lr}
 8008a96:	2200      	movs	r2, #0
 8008a98:	6082      	str	r2, [r0, #8]
    : view(v)
 8008a9a:	4a04      	ldr	r2, [pc, #16]	; (8008aac <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 8008a9c:	60c1      	str	r1, [r0, #12]
 8008a9e:	f102 0408 	add.w	r4, r2, #8
 8008aa2:	3224      	adds	r2, #36	; 0x24
 8008aa4:	6004      	str	r4, [r0, #0]
 8008aa6:	6042      	str	r2, [r0, #4]
}
 8008aa8:	bd10      	pop	{r4, pc}
 8008aaa:	bf00      	nop
 8008aac:	0802e014 	.word	0x0802e014

08008ab0 <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 8008ab0:	4770      	bx	lr
	...

08008ab4 <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 8008ab4:	b510      	push	{r4, lr}
 8008ab6:	4b03      	ldr	r3, [pc, #12]	; (8008ac4 <_ZN16Project_InfoViewD1Ev+0x10>)
 8008ab8:	6003      	str	r3, [r0, #0]
 8008aba:	4604      	mov	r4, r0
 8008abc:	f7fe ff8c 	bl	80079d8 <_ZN20Project_InfoViewBaseD1Ev>
 8008ac0:	4620      	mov	r0, r4
 8008ac2:	bd10      	pop	{r4, pc}
 8008ac4:	0802e04c 	.word	0x0802e04c

08008ac8 <_ZN16Project_InfoViewD0Ev>:
 8008ac8:	b510      	push	{r4, lr}
 8008aca:	4604      	mov	r4, r0
 8008acc:	f7ff fff2 	bl	8008ab4 <_ZN16Project_InfoViewD1Ev>
 8008ad0:	4620      	mov	r0, r4
 8008ad2:	f241 01b0 	movw	r1, #4272	; 0x10b0
 8008ad6:	f020 fcea 	bl	80294ae <_ZdlPvj>
 8008ada:	4620      	mov	r0, r4
 8008adc:	bd10      	pop	{r4, pc}
	...

08008ae0 <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 8008ae0:	b510      	push	{r4, lr}
 8008ae2:	4604      	mov	r4, r0
 8008ae4:	f7fe ffa0 	bl	8007a28 <_ZN20Project_InfoViewBaseC1Ev>
 8008ae8:	4b01      	ldr	r3, [pc, #4]	; (8008af0 <_ZN16Project_InfoViewC1Ev+0x10>)
 8008aea:	6023      	str	r3, [r4, #0]
}
 8008aec:	4620      	mov	r0, r4
 8008aee:	bd10      	pop	{r4, pc}
 8008af0:	0802e04c 	.word	0x0802e04c

08008af4 <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 8008af4:	f7fe bf4c 	b.w	8007990 <_ZN20Project_InfoViewBase11setupScreenEv>

08008af8 <_ZN16Project_InfoView15setTimeoutValueEi>:

void Project_InfoView::setTimeoutValue(int value)
{
 8008af8:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008afa:	4a0a      	ldr	r2, [pc, #40]	; (8008b24 <_ZN16Project_InfoView15setTimeoutValueEi+0x2c>)
{
 8008afc:	4605      	mov	r5, r0
 8008afe:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008b00:	460b      	mov	r3, r1
 8008b02:	f500 7022 	add.w	r0, r0, #648	; 0x288
 8008b06:	2104      	movs	r1, #4
 8008b08:	f00f fdca 	bl	80186a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008b0c:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008b10:	f00d fd3e 	bl	8016590 <_ZNK8touchgfx8Drawable10invalidateEv>

	if (value == 0) {
 8008b14:	b92c      	cbnz	r4, 8008b22 <_ZN16Project_InfoView15setTimeoutValueEi+0x2a>
 8008b16:	f00c fc53 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008b1a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008b1e:	f7fb b861 	b.w	8003be4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008b22:	bd38      	pop	{r3, r4, r5, pc}
 8008b24:	0802dae4 	.word	0x0802dae4

08008b28 <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 8008b28:	4770      	bx	lr

08008b2a <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 8008b2a:	3804      	subs	r0, #4
 8008b2c:	4770      	bx	lr

08008b2e <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 8008b2e:	4770      	bx	lr

08008b30 <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 8008b30:	4770      	bx	lr

08008b32 <_ZN21Shutting_OffPresenterD0Ev>:
 8008b32:	b510      	push	{r4, lr}
 8008b34:	2110      	movs	r1, #16
 8008b36:	4604      	mov	r4, r0
 8008b38:	f020 fcb9 	bl	80294ae <_ZdlPvj>
 8008b3c:	4620      	mov	r0, r4
 8008b3e:	bd10      	pop	{r4, pc}

08008b40 <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 8008b40:	f1a0 0004 	sub.w	r0, r0, #4
 8008b44:	e7f5      	b.n	8008b32 <_ZN21Shutting_OffPresenterD0Ev>

08008b46 <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 8008b46:	4770      	bx	lr

08008b48 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 8008b48:	b510      	push	{r4, lr}
 8008b4a:	2200      	movs	r2, #0
 8008b4c:	6082      	str	r2, [r0, #8]
    : view(v)
 8008b4e:	4a04      	ldr	r2, [pc, #16]	; (8008b60 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 8008b50:	60c1      	str	r1, [r0, #12]
 8008b52:	f102 0408 	add.w	r4, r2, #8
 8008b56:	3224      	adds	r2, #36	; 0x24
 8008b58:	6004      	str	r4, [r0, #0]
 8008b5a:	6042      	str	r2, [r0, #4]
}
 8008b5c:	bd10      	pop	{r4, pc}
 8008b5e:	bf00      	nop
 8008b60:	0802e07c 	.word	0x0802e07c

08008b64 <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 8008b64:	4770      	bx	lr
	...

08008b68 <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 8008b68:	b510      	push	{r4, lr}
 8008b6a:	4b03      	ldr	r3, [pc, #12]	; (8008b78 <_ZN16Shutting_OffViewD1Ev+0x10>)
 8008b6c:	6003      	str	r3, [r0, #0]
 8008b6e:	4604      	mov	r4, r0
 8008b70:	f7ff f928 	bl	8007dc4 <_ZN20Shutting_OffViewBaseD1Ev>
 8008b74:	4620      	mov	r0, r4
 8008b76:	bd10      	pop	{r4, pc}
 8008b78:	0802e0b4 	.word	0x0802e0b4

08008b7c <_ZN16Shutting_OffViewD0Ev>:
 8008b7c:	b510      	push	{r4, lr}
 8008b7e:	4604      	mov	r4, r0
 8008b80:	f7ff fff2 	bl	8008b68 <_ZN16Shutting_OffViewD1Ev>
 8008b84:	4620      	mov	r0, r4
 8008b86:	2198      	movs	r1, #152	; 0x98
 8008b88:	f020 fc91 	bl	80294ae <_ZdlPvj>
 8008b8c:	4620      	mov	r0, r4
 8008b8e:	bd10      	pop	{r4, pc}

08008b90 <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 8008b90:	b510      	push	{r4, lr}
 8008b92:	4604      	mov	r4, r0
 8008b94:	f7ff f920 	bl	8007dd8 <_ZN20Shutting_OffViewBaseC1Ev>
 8008b98:	4b01      	ldr	r3, [pc, #4]	; (8008ba0 <_ZN16Shutting_OffViewC1Ev+0x10>)
 8008b9a:	6023      	str	r3, [r4, #0]
}
 8008b9c:	4620      	mov	r0, r4
 8008b9e:	bd10      	pop	{r4, pc}
 8008ba0:	0802e0b4 	.word	0x0802e0b4

08008ba4 <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 8008ba4:	f7ff b90f 	b.w	8007dc6 <_ZN20Shutting_OffViewBase11setupScreenEv>

08008ba8 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8008ba8:	20f0      	movs	r0, #240	; 0xf0
 8008baa:	4770      	bx	lr

08008bac <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8008bac:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8008bb0:	4770      	bx	lr
 8008bb2:	bf00      	nop

08008bb4 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8008bb4:	2029      	movs	r0, #41	; 0x29
 8008bb6:	f7f8 bf77 	b.w	8001aa8 <LCD_IO_WriteReg>
 8008bba:	bf00      	nop

08008bbc <ili9341_DisplayOff>:
 8008bbc:	2028      	movs	r0, #40	; 0x28
 8008bbe:	f7f8 bf73 	b.w	8001aa8 <LCD_IO_WriteReg>
 8008bc2:	bf00      	nop

08008bc4 <ili9341_Init>:
{
 8008bc4:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8008bc6:	f7f8 ff35 	bl	8001a34 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8008bca:	20ca      	movs	r0, #202	; 0xca
 8008bcc:	f7f8 ff6c 	bl	8001aa8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008bd0:	20c3      	movs	r0, #195	; 0xc3
 8008bd2:	f7f8 ff3f 	bl	8001a54 <LCD_IO_WriteData>
 8008bd6:	2008      	movs	r0, #8
 8008bd8:	f7f8 ff3c 	bl	8001a54 <LCD_IO_WriteData>
 8008bdc:	2050      	movs	r0, #80	; 0x50
 8008bde:	f7f8 ff39 	bl	8001a54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008be2:	20cf      	movs	r0, #207	; 0xcf
 8008be4:	f7f8 ff60 	bl	8001aa8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008be8:	2000      	movs	r0, #0
 8008bea:	f7f8 ff33 	bl	8001a54 <LCD_IO_WriteData>
 8008bee:	20c1      	movs	r0, #193	; 0xc1
 8008bf0:	f7f8 ff30 	bl	8001a54 <LCD_IO_WriteData>
 8008bf4:	2030      	movs	r0, #48	; 0x30
 8008bf6:	f7f8 ff2d 	bl	8001a54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008bfa:	20ed      	movs	r0, #237	; 0xed
 8008bfc:	f7f8 ff54 	bl	8001aa8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c00:	2064      	movs	r0, #100	; 0x64
 8008c02:	f7f8 ff27 	bl	8001a54 <LCD_IO_WriteData>
 8008c06:	2003      	movs	r0, #3
 8008c08:	f7f8 ff24 	bl	8001a54 <LCD_IO_WriteData>
 8008c0c:	2012      	movs	r0, #18
 8008c0e:	f7f8 ff21 	bl	8001a54 <LCD_IO_WriteData>
 8008c12:	2081      	movs	r0, #129	; 0x81
 8008c14:	f7f8 ff1e 	bl	8001a54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c18:	20e8      	movs	r0, #232	; 0xe8
 8008c1a:	f7f8 ff45 	bl	8001aa8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c1e:	2085      	movs	r0, #133	; 0x85
 8008c20:	f7f8 ff18 	bl	8001a54 <LCD_IO_WriteData>
 8008c24:	2000      	movs	r0, #0
 8008c26:	f7f8 ff15 	bl	8001a54 <LCD_IO_WriteData>
 8008c2a:	2078      	movs	r0, #120	; 0x78
 8008c2c:	f7f8 ff12 	bl	8001a54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c30:	20cb      	movs	r0, #203	; 0xcb
 8008c32:	f7f8 ff39 	bl	8001aa8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c36:	2039      	movs	r0, #57	; 0x39
 8008c38:	f7f8 ff0c 	bl	8001a54 <LCD_IO_WriteData>
 8008c3c:	202c      	movs	r0, #44	; 0x2c
 8008c3e:	f7f8 ff09 	bl	8001a54 <LCD_IO_WriteData>
 8008c42:	2000      	movs	r0, #0
 8008c44:	f7f8 ff06 	bl	8001a54 <LCD_IO_WriteData>
 8008c48:	2034      	movs	r0, #52	; 0x34
 8008c4a:	f7f8 ff03 	bl	8001a54 <LCD_IO_WriteData>
 8008c4e:	2002      	movs	r0, #2
 8008c50:	f7f8 ff00 	bl	8001a54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c54:	20f7      	movs	r0, #247	; 0xf7
 8008c56:	f7f8 ff27 	bl	8001aa8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c5a:	2020      	movs	r0, #32
 8008c5c:	f7f8 fefa 	bl	8001a54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c60:	20ea      	movs	r0, #234	; 0xea
 8008c62:	f7f8 ff21 	bl	8001aa8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c66:	2000      	movs	r0, #0
 8008c68:	f7f8 fef4 	bl	8001a54 <LCD_IO_WriteData>
 8008c6c:	2000      	movs	r0, #0
 8008c6e:	f7f8 fef1 	bl	8001a54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c72:	20b1      	movs	r0, #177	; 0xb1
 8008c74:	f7f8 ff18 	bl	8001aa8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c78:	2000      	movs	r0, #0
 8008c7a:	f7f8 feeb 	bl	8001a54 <LCD_IO_WriteData>
 8008c7e:	201b      	movs	r0, #27
 8008c80:	f7f8 fee8 	bl	8001a54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c84:	20b6      	movs	r0, #182	; 0xb6
 8008c86:	f7f8 ff0f 	bl	8001aa8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c8a:	200a      	movs	r0, #10
 8008c8c:	f7f8 fee2 	bl	8001a54 <LCD_IO_WriteData>
 8008c90:	20a2      	movs	r0, #162	; 0xa2
 8008c92:	f7f8 fedf 	bl	8001a54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c96:	20c0      	movs	r0, #192	; 0xc0
 8008c98:	f7f8 ff06 	bl	8001aa8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c9c:	2010      	movs	r0, #16
 8008c9e:	f7f8 fed9 	bl	8001a54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008ca2:	20c1      	movs	r0, #193	; 0xc1
 8008ca4:	f7f8 ff00 	bl	8001aa8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008ca8:	2010      	movs	r0, #16
 8008caa:	f7f8 fed3 	bl	8001a54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008cae:	20c5      	movs	r0, #197	; 0xc5
 8008cb0:	f7f8 fefa 	bl	8001aa8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008cb4:	2045      	movs	r0, #69	; 0x45
 8008cb6:	f7f8 fecd 	bl	8001a54 <LCD_IO_WriteData>
 8008cba:	2015      	movs	r0, #21
 8008cbc:	f7f8 feca 	bl	8001a54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008cc0:	20c7      	movs	r0, #199	; 0xc7
 8008cc2:	f7f8 fef1 	bl	8001aa8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008cc6:	2090      	movs	r0, #144	; 0x90
 8008cc8:	f7f8 fec4 	bl	8001a54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008ccc:	2036      	movs	r0, #54	; 0x36
 8008cce:	f7f8 feeb 	bl	8001aa8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008cd2:	20c8      	movs	r0, #200	; 0xc8
 8008cd4:	f7f8 febe 	bl	8001a54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008cd8:	20f2      	movs	r0, #242	; 0xf2
 8008cda:	f7f8 fee5 	bl	8001aa8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008cde:	2000      	movs	r0, #0
 8008ce0:	f7f8 feb8 	bl	8001a54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008ce4:	20b0      	movs	r0, #176	; 0xb0
 8008ce6:	f7f8 fedf 	bl	8001aa8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008cea:	20c2      	movs	r0, #194	; 0xc2
 8008cec:	f7f8 feb2 	bl	8001a54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008cf0:	20b6      	movs	r0, #182	; 0xb6
 8008cf2:	f7f8 fed9 	bl	8001aa8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008cf6:	200a      	movs	r0, #10
 8008cf8:	f7f8 feac 	bl	8001a54 <LCD_IO_WriteData>
 8008cfc:	20a7      	movs	r0, #167	; 0xa7
 8008cfe:	f7f8 fea9 	bl	8001a54 <LCD_IO_WriteData>
 8008d02:	2027      	movs	r0, #39	; 0x27
 8008d04:	f7f8 fea6 	bl	8001a54 <LCD_IO_WriteData>
 8008d08:	2004      	movs	r0, #4
 8008d0a:	f7f8 fea3 	bl	8001a54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008d0e:	202a      	movs	r0, #42	; 0x2a
 8008d10:	f7f8 feca 	bl	8001aa8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008d14:	2000      	movs	r0, #0
 8008d16:	f7f8 fe9d 	bl	8001a54 <LCD_IO_WriteData>
 8008d1a:	2000      	movs	r0, #0
 8008d1c:	f7f8 fe9a 	bl	8001a54 <LCD_IO_WriteData>
 8008d20:	2000      	movs	r0, #0
 8008d22:	f7f8 fe97 	bl	8001a54 <LCD_IO_WriteData>
 8008d26:	20ef      	movs	r0, #239	; 0xef
 8008d28:	f7f8 fe94 	bl	8001a54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008d2c:	202b      	movs	r0, #43	; 0x2b
 8008d2e:	f7f8 febb 	bl	8001aa8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008d32:	2000      	movs	r0, #0
 8008d34:	f7f8 fe8e 	bl	8001a54 <LCD_IO_WriteData>
 8008d38:	2000      	movs	r0, #0
 8008d3a:	f7f8 fe8b 	bl	8001a54 <LCD_IO_WriteData>
 8008d3e:	2001      	movs	r0, #1
 8008d40:	f7f8 fe88 	bl	8001a54 <LCD_IO_WriteData>
 8008d44:	203f      	movs	r0, #63	; 0x3f
 8008d46:	f7f8 fe85 	bl	8001a54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008d4a:	20f6      	movs	r0, #246	; 0xf6
 8008d4c:	f7f8 feac 	bl	8001aa8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008d50:	2001      	movs	r0, #1
 8008d52:	f7f8 fe7f 	bl	8001a54 <LCD_IO_WriteData>
 8008d56:	2000      	movs	r0, #0
 8008d58:	f7f8 fe7c 	bl	8001a54 <LCD_IO_WriteData>
 8008d5c:	2006      	movs	r0, #6
 8008d5e:	f7f8 fe79 	bl	8001a54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008d62:	202c      	movs	r0, #44	; 0x2c
 8008d64:	f7f8 fea0 	bl	8001aa8 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8008d68:	20c8      	movs	r0, #200	; 0xc8
 8008d6a:	f7f8 ff05 	bl	8001b78 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8008d6e:	2026      	movs	r0, #38	; 0x26
 8008d70:	f7f8 fe9a 	bl	8001aa8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008d74:	2001      	movs	r0, #1
 8008d76:	f7f8 fe6d 	bl	8001a54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008d7a:	20e0      	movs	r0, #224	; 0xe0
 8008d7c:	f7f8 fe94 	bl	8001aa8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008d80:	200f      	movs	r0, #15
 8008d82:	f7f8 fe67 	bl	8001a54 <LCD_IO_WriteData>
 8008d86:	2029      	movs	r0, #41	; 0x29
 8008d88:	f7f8 fe64 	bl	8001a54 <LCD_IO_WriteData>
 8008d8c:	2024      	movs	r0, #36	; 0x24
 8008d8e:	f7f8 fe61 	bl	8001a54 <LCD_IO_WriteData>
 8008d92:	200c      	movs	r0, #12
 8008d94:	f7f8 fe5e 	bl	8001a54 <LCD_IO_WriteData>
 8008d98:	200e      	movs	r0, #14
 8008d9a:	f7f8 fe5b 	bl	8001a54 <LCD_IO_WriteData>
 8008d9e:	2009      	movs	r0, #9
 8008da0:	f7f8 fe58 	bl	8001a54 <LCD_IO_WriteData>
 8008da4:	204e      	movs	r0, #78	; 0x4e
 8008da6:	f7f8 fe55 	bl	8001a54 <LCD_IO_WriteData>
 8008daa:	2078      	movs	r0, #120	; 0x78
 8008dac:	f7f8 fe52 	bl	8001a54 <LCD_IO_WriteData>
 8008db0:	203c      	movs	r0, #60	; 0x3c
 8008db2:	f7f8 fe4f 	bl	8001a54 <LCD_IO_WriteData>
 8008db6:	2009      	movs	r0, #9
 8008db8:	f7f8 fe4c 	bl	8001a54 <LCD_IO_WriteData>
 8008dbc:	2013      	movs	r0, #19
 8008dbe:	f7f8 fe49 	bl	8001a54 <LCD_IO_WriteData>
 8008dc2:	2005      	movs	r0, #5
 8008dc4:	f7f8 fe46 	bl	8001a54 <LCD_IO_WriteData>
 8008dc8:	2017      	movs	r0, #23
 8008dca:	f7f8 fe43 	bl	8001a54 <LCD_IO_WriteData>
 8008dce:	2011      	movs	r0, #17
 8008dd0:	f7f8 fe40 	bl	8001a54 <LCD_IO_WriteData>
 8008dd4:	2000      	movs	r0, #0
 8008dd6:	f7f8 fe3d 	bl	8001a54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008dda:	20e1      	movs	r0, #225	; 0xe1
 8008ddc:	f7f8 fe64 	bl	8001aa8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008de0:	2000      	movs	r0, #0
 8008de2:	f7f8 fe37 	bl	8001a54 <LCD_IO_WriteData>
 8008de6:	2016      	movs	r0, #22
 8008de8:	f7f8 fe34 	bl	8001a54 <LCD_IO_WriteData>
 8008dec:	201b      	movs	r0, #27
 8008dee:	f7f8 fe31 	bl	8001a54 <LCD_IO_WriteData>
 8008df2:	2004      	movs	r0, #4
 8008df4:	f7f8 fe2e 	bl	8001a54 <LCD_IO_WriteData>
 8008df8:	2011      	movs	r0, #17
 8008dfa:	f7f8 fe2b 	bl	8001a54 <LCD_IO_WriteData>
 8008dfe:	2007      	movs	r0, #7
 8008e00:	f7f8 fe28 	bl	8001a54 <LCD_IO_WriteData>
 8008e04:	2031      	movs	r0, #49	; 0x31
 8008e06:	f7f8 fe25 	bl	8001a54 <LCD_IO_WriteData>
 8008e0a:	2033      	movs	r0, #51	; 0x33
 8008e0c:	f7f8 fe22 	bl	8001a54 <LCD_IO_WriteData>
 8008e10:	2042      	movs	r0, #66	; 0x42
 8008e12:	f7f8 fe1f 	bl	8001a54 <LCD_IO_WriteData>
 8008e16:	2005      	movs	r0, #5
 8008e18:	f7f8 fe1c 	bl	8001a54 <LCD_IO_WriteData>
 8008e1c:	200c      	movs	r0, #12
 8008e1e:	f7f8 fe19 	bl	8001a54 <LCD_IO_WriteData>
 8008e22:	200a      	movs	r0, #10
 8008e24:	f7f8 fe16 	bl	8001a54 <LCD_IO_WriteData>
 8008e28:	2028      	movs	r0, #40	; 0x28
 8008e2a:	f7f8 fe13 	bl	8001a54 <LCD_IO_WriteData>
 8008e2e:	202f      	movs	r0, #47	; 0x2f
 8008e30:	f7f8 fe10 	bl	8001a54 <LCD_IO_WriteData>
 8008e34:	200f      	movs	r0, #15
 8008e36:	f7f8 fe0d 	bl	8001a54 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008e3a:	2011      	movs	r0, #17
 8008e3c:	f7f8 fe34 	bl	8001aa8 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8008e40:	20c8      	movs	r0, #200	; 0xc8
 8008e42:	f7f8 fe99 	bl	8001b78 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8008e46:	2029      	movs	r0, #41	; 0x29
 8008e48:	f7f8 fe2e 	bl	8001aa8 <LCD_IO_WriteReg>
}
 8008e4c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8008e50:	202c      	movs	r0, #44	; 0x2c
 8008e52:	f7f8 be29 	b.w	8001aa8 <LCD_IO_WriteReg>
 8008e56:	bf00      	nop

08008e58 <ili9341_ReadID>:
{
 8008e58:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8008e5a:	f7f8 fdeb 	bl	8001a34 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8008e5e:	2103      	movs	r1, #3
 8008e60:	20d3      	movs	r0, #211	; 0xd3
 8008e62:	f7f8 fe4b 	bl	8001afc <LCD_IO_ReadData>
}
 8008e66:	b280      	uxth	r0, r0
 8008e68:	bd08      	pop	{r3, pc}
 8008e6a:	bf00      	nop

08008e6c <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8008e6c:	221f      	movs	r2, #31
 8008e6e:	210b      	movs	r1, #11
 8008e70:	b2c0      	uxtb	r0, r0
 8008e72:	f7f8 bd91 	b.w	8001998 <IOE_Write>
 8008e76:	bf00      	nop

08008e78 <stmpe811_Reset>:
{
 8008e78:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8008e7a:	b2c4      	uxtb	r4, r0
 8008e7c:	2202      	movs	r2, #2
 8008e7e:	2103      	movs	r1, #3
 8008e80:	4620      	mov	r0, r4
 8008e82:	f7f8 fd89 	bl	8001998 <IOE_Write>
  IOE_Delay(10); 
 8008e86:	200a      	movs	r0, #10
 8008e88:	f7f8 fdd2 	bl	8001a30 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8008e8c:	4620      	mov	r0, r4
 8008e8e:	2200      	movs	r2, #0
 8008e90:	2103      	movs	r1, #3
 8008e92:	f7f8 fd81 	bl	8001998 <IOE_Write>
}
 8008e96:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8008e9a:	2002      	movs	r0, #2
 8008e9c:	f7f8 bdc8 	b.w	8001a30 <IOE_Delay>

08008ea0 <stmpe811_ReadID>:
{
 8008ea0:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008ea2:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 8008ea4:	f7f8 fd74 	bl	8001990 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008ea8:	2100      	movs	r1, #0
 8008eaa:	4620      	mov	r0, r4
 8008eac:	f7f8 fd8c 	bl	80019c8 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8008eb0:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008eb2:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8008eb4:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008eb6:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8008eb8:	f7f8 fd86 	bl	80019c8 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008ebc:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 8008ec0:	b280      	uxth	r0, r0
 8008ec2:	bd10      	pop	{r4, pc}

08008ec4 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8008ec4:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8008ec6:	b2c4      	uxtb	r4, r0
 8008ec8:	2140      	movs	r1, #64	; 0x40
 8008eca:	4620      	mov	r0, r4
 8008ecc:	f7f8 fd7c 	bl	80019c8 <IOE_Read>
  
  if(state > 0)
 8008ed0:	0603      	lsls	r3, r0, #24
 8008ed2:	d40b      	bmi.n	8008eec <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008ed4:	4620      	mov	r0, r4
 8008ed6:	2201      	movs	r2, #1
 8008ed8:	214b      	movs	r1, #75	; 0x4b
 8008eda:	f7f8 fd5d 	bl	8001998 <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008ede:	4620      	mov	r0, r4
 8008ee0:	2200      	movs	r2, #0
 8008ee2:	214b      	movs	r1, #75	; 0x4b
 8008ee4:	f7f8 fd58 	bl	8001998 <IOE_Write>
  uint8_t ret = 0;
 8008ee8:	2000      	movs	r0, #0
  }
  
  return ret;
}
 8008eea:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8008eec:	214c      	movs	r1, #76	; 0x4c
 8008eee:	4620      	mov	r0, r4
 8008ef0:	f7f8 fd6a 	bl	80019c8 <IOE_Read>
      ret = 1;
 8008ef4:	3800      	subs	r0, #0
 8008ef6:	bf18      	it	ne
 8008ef8:	2001      	movne	r0, #1
}
 8008efa:	bd10      	pop	{r4, pc}

08008efc <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 8008efc:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8008efe:	210b      	movs	r1, #11
 8008f00:	b2c0      	uxtb	r0, r0
 8008f02:	f7f8 fd61 	bl	80019c8 <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 8008f06:	f000 001f 	and.w	r0, r0, #31
 8008f0a:	bd08      	pop	{r3, pc}

08008f0c <stmpe811_TS_GetXY>:
{
 8008f0c:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8008f0e:	2304      	movs	r3, #4
{
 8008f10:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8008f12:	b2c4      	uxtb	r4, r0
{
 8008f14:	4615      	mov	r5, r2
 8008f16:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8008f18:	eb0d 0203 	add.w	r2, sp, r3
 8008f1c:	21d7      	movs	r1, #215	; 0xd7
 8008f1e:	4620      	mov	r0, r4
 8008f20:	f7f8 fd6e 	bl	8001a00 <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8008f24:	9b01      	ldr	r3, [sp, #4]
 8008f26:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8008f28:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8008f2a:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8008f2e:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008f30:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8008f32:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008f34:	2201      	movs	r2, #1
 8008f36:	214b      	movs	r1, #75	; 0x4b
 8008f38:	f7f8 fd2e 	bl	8001998 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008f3c:	2200      	movs	r2, #0
 8008f3e:	214b      	movs	r1, #75	; 0x4b
 8008f40:	4620      	mov	r0, r4
 8008f42:	f7f8 fd29 	bl	8001998 <IOE_Write>
}
 8008f46:	b002      	add	sp, #8
 8008f48:	bd70      	pop	{r4, r5, r6, pc}
 8008f4a:	bf00      	nop

08008f4c <stmpe811_TS_Start>:
{
 8008f4c:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8008f4e:	b2c4      	uxtb	r4, r0
 8008f50:	2104      	movs	r1, #4
 8008f52:	4620      	mov	r0, r4
 8008f54:	f7f8 fd38 	bl	80019c8 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8008f58:	2104      	movs	r1, #4
 8008f5a:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8008f5e:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8008f60:	4620      	mov	r0, r4
 8008f62:	f7f8 fd19 	bl	8001998 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8008f66:	2117      	movs	r1, #23
 8008f68:	4620      	mov	r0, r4
 8008f6a:	f7f8 fd2d 	bl	80019c8 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8008f6e:	2117      	movs	r1, #23
 8008f70:	f000 020f 	and.w	r2, r0, #15
 8008f74:	4620      	mov	r0, r4
 8008f76:	f7f8 fd0f 	bl	8001998 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8008f7a:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8008f7e:	4620      	mov	r0, r4
 8008f80:	2104      	movs	r1, #4
 8008f82:	f7f8 fd09 	bl	8001998 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8008f86:	2249      	movs	r2, #73	; 0x49
 8008f88:	2120      	movs	r1, #32
 8008f8a:	4620      	mov	r0, r4
 8008f8c:	f7f8 fd04 	bl	8001998 <IOE_Write>
  IOE_Delay(2); 
 8008f90:	2002      	movs	r0, #2
 8008f92:	f7f8 fd4d 	bl	8001a30 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8008f96:	4620      	mov	r0, r4
 8008f98:	2201      	movs	r2, #1
 8008f9a:	2121      	movs	r1, #33	; 0x21
 8008f9c:	f7f8 fcfc 	bl	8001998 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8008fa0:	4620      	mov	r0, r4
 8008fa2:	229a      	movs	r2, #154	; 0x9a
 8008fa4:	2141      	movs	r1, #65	; 0x41
 8008fa6:	f7f8 fcf7 	bl	8001998 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8008faa:	4620      	mov	r0, r4
 8008fac:	2201      	movs	r2, #1
 8008fae:	214a      	movs	r1, #74	; 0x4a
 8008fb0:	f7f8 fcf2 	bl	8001998 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008fb4:	4620      	mov	r0, r4
 8008fb6:	2201      	movs	r2, #1
 8008fb8:	214b      	movs	r1, #75	; 0x4b
 8008fba:	f7f8 fced 	bl	8001998 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008fbe:	4620      	mov	r0, r4
 8008fc0:	2200      	movs	r2, #0
 8008fc2:	214b      	movs	r1, #75	; 0x4b
 8008fc4:	f7f8 fce8 	bl	8001998 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8008fc8:	4620      	mov	r0, r4
 8008fca:	2201      	movs	r2, #1
 8008fcc:	2156      	movs	r1, #86	; 0x56
 8008fce:	f7f8 fce3 	bl	8001998 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8008fd2:	4620      	mov	r0, r4
 8008fd4:	2201      	movs	r2, #1
 8008fd6:	2158      	movs	r1, #88	; 0x58
 8008fd8:	f7f8 fcde 	bl	8001998 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8008fdc:	4620      	mov	r0, r4
 8008fde:	2201      	movs	r2, #1
 8008fe0:	2140      	movs	r1, #64	; 0x40
 8008fe2:	f7f8 fcd9 	bl	8001998 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8008fe6:	4620      	mov	r0, r4
 8008fe8:	22ff      	movs	r2, #255	; 0xff
 8008fea:	210b      	movs	r1, #11
 8008fec:	f7f8 fcd4 	bl	8001998 <IOE_Write>
}
 8008ff0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 8008ff4:	2002      	movs	r0, #2
 8008ff6:	f7f8 bd1b 	b.w	8001a30 <IOE_Delay>
 8008ffa:	bf00      	nop

08008ffc <stmpe811_TS_DisableIT>:
{
 8008ffc:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8008ffe:	b2c4      	uxtb	r4, r0
 8009000:	2109      	movs	r1, #9
 8009002:	4620      	mov	r0, r4
 8009004:	f7f8 fce0 	bl	80019c8 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8009008:	2109      	movs	r1, #9
 800900a:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 800900e:	4620      	mov	r0, r4
 8009010:	f7f8 fcc2 	bl	8001998 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8009014:	210a      	movs	r1, #10
 8009016:	4620      	mov	r0, r4
 8009018:	f7f8 fcd6 	bl	80019c8 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800901c:	210a      	movs	r1, #10
 800901e:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 8009022:	4620      	mov	r0, r4
}
 8009024:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8009028:	f7f8 bcb6 	b.w	8001998 <IOE_Write>

0800902c <stmpe811_TS_EnableIT>:
{
 800902c:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800902e:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 8009030:	f7f8 fcb0 	bl	8001994 <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8009034:	210a      	movs	r1, #10
 8009036:	4620      	mov	r0, r4
 8009038:	f7f8 fcc6 	bl	80019c8 <IOE_Read>
  tmp |= Source; 
 800903c:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8009040:	b2c2      	uxtb	r2, r0
 8009042:	210a      	movs	r1, #10
 8009044:	4620      	mov	r0, r4
 8009046:	f7f8 fca7 	bl	8001998 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800904a:	2109      	movs	r1, #9
 800904c:	4620      	mov	r0, r4
 800904e:	f7f8 fcbb 	bl	80019c8 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8009052:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8009056:	b2c2      	uxtb	r2, r0
 8009058:	2109      	movs	r1, #9
 800905a:	4620      	mov	r0, r4
}
 800905c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8009060:	f7f8 bc9a 	b.w	8001998 <IOE_Write>

08009064 <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8009064:	4a10      	ldr	r2, [pc, #64]	; (80090a8 <stmpe811_Init+0x44>)
 8009066:	7813      	ldrb	r3, [r2, #0]
 8009068:	4298      	cmp	r0, r3
 800906a:	d004      	beq.n	8009076 <stmpe811_Init+0x12>
 800906c:	7851      	ldrb	r1, [r2, #1]
 800906e:	4288      	cmp	r0, r1
 8009070:	d001      	beq.n	8009076 <stmpe811_Init+0x12>
 8009072:	b113      	cbz	r3, 800907a <stmpe811_Init+0x16>
 8009074:	b101      	cbz	r1, 8009078 <stmpe811_Init+0x14>
 8009076:	4770      	bx	lr
 8009078:	2301      	movs	r3, #1
{
 800907a:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 800907c:	b2c4      	uxtb	r4, r0
 800907e:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 8009080:	f7f8 fc86 	bl	8001990 <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8009084:	2202      	movs	r2, #2
 8009086:	2103      	movs	r1, #3
 8009088:	4620      	mov	r0, r4
 800908a:	f7f8 fc85 	bl	8001998 <IOE_Write>
  IOE_Delay(10); 
 800908e:	200a      	movs	r0, #10
 8009090:	f7f8 fcce 	bl	8001a30 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8009094:	4620      	mov	r0, r4
 8009096:	2200      	movs	r2, #0
 8009098:	2103      	movs	r1, #3
 800909a:	f7f8 fc7d 	bl	8001998 <IOE_Write>
}
 800909e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 80090a2:	2002      	movs	r0, #2
 80090a4:	f7f8 bcc4 	b.w	8001a30 <IOE_Delay>
 80090a8:	20002124 	.word	0x20002124

080090ac <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80090ac:	4b05      	ldr	r3, [pc, #20]	; (80090c4 <SystemInit+0x18>)
 80090ae:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80090b2:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80090b6:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 80090ba:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80090be:	6099      	str	r1, [r3, #8]
#endif
}
 80090c0:	4770      	bx	lr
 80090c2:	bf00      	nop
 80090c4:	e000ed00 	.word	0xe000ed00

080090c8 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 80090c8:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 80090ca:	4b0b      	ldr	r3, [pc, #44]	; (80090f8 <HAL_Init+0x30>)
 80090cc:	681a      	ldr	r2, [r3, #0]
 80090ce:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80090d2:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 80090d4:	681a      	ldr	r2, [r3, #0]
 80090d6:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80090da:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80090dc:	681a      	ldr	r2, [r3, #0]
 80090de:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80090e2:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80090e4:	2003      	movs	r0, #3
 80090e6:	f000 f82d 	bl	8009144 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 80090ea:	2000      	movs	r0, #0
 80090ec:	f7f9 f966 	bl	80023bc <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 80090f0:	f7f8 fea8 	bl	8001e44 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 80090f4:	2000      	movs	r0, #0
 80090f6:	bd08      	pop	{r3, pc}
 80090f8:	40023c00 	.word	0x40023c00

080090fc <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 80090fc:	4a03      	ldr	r2, [pc, #12]	; (800910c <HAL_IncTick+0x10>)
 80090fe:	4b04      	ldr	r3, [pc, #16]	; (8009110 <HAL_IncTick+0x14>)
 8009100:	6811      	ldr	r1, [r2, #0]
 8009102:	781b      	ldrb	r3, [r3, #0]
 8009104:	440b      	add	r3, r1
 8009106:	6013      	str	r3, [r2, #0]
}
 8009108:	4770      	bx	lr
 800910a:	bf00      	nop
 800910c:	20002128 	.word	0x20002128
 8009110:	2000007c 	.word	0x2000007c

08009114 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8009114:	4b01      	ldr	r3, [pc, #4]	; (800911c <HAL_GetTick+0x8>)
 8009116:	6818      	ldr	r0, [r3, #0]
}
 8009118:	4770      	bx	lr
 800911a:	bf00      	nop
 800911c:	20002128 	.word	0x20002128

08009120 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8009120:	b538      	push	{r3, r4, r5, lr}
 8009122:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8009124:	f7ff fff6 	bl	8009114 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8009128:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 800912a:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 800912c:	d002      	beq.n	8009134 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 800912e:	4b04      	ldr	r3, [pc, #16]	; (8009140 <HAL_Delay+0x20>)
 8009130:	781b      	ldrb	r3, [r3, #0]
 8009132:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8009134:	f7ff ffee 	bl	8009114 <HAL_GetTick>
 8009138:	1b43      	subs	r3, r0, r5
 800913a:	42a3      	cmp	r3, r4
 800913c:	d3fa      	bcc.n	8009134 <HAL_Delay+0x14>
  {
  }
}
 800913e:	bd38      	pop	{r3, r4, r5, pc}
 8009140:	2000007c 	.word	0x2000007c

08009144 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8009144:	4907      	ldr	r1, [pc, #28]	; (8009164 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8009146:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8009148:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800914a:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800914e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8009152:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8009154:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8009156:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800915a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 800915e:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8009160:	4770      	bx	lr
 8009162:	bf00      	nop
 8009164:	e000ed00 	.word	0xe000ed00

08009168 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8009168:	4b1c      	ldr	r3, [pc, #112]	; (80091dc <HAL_NVIC_SetPriority+0x74>)
 800916a:	68db      	ldr	r3, [r3, #12]
 800916c:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8009170:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8009172:	f1c3 0e07 	rsb	lr, r3, #7
 8009176:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800917a:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800917e:	bf28      	it	cs
 8009180:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009184:	f1bc 0f06 	cmp.w	ip, #6
 8009188:	d91b      	bls.n	80091c2 <HAL_NVIC_SetPriority+0x5a>
 800918a:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800918c:	f04f 3cff 	mov.w	ip, #4294967295
 8009190:	fa0c fc03 	lsl.w	ip, ip, r3
 8009194:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009198:	f04f 3cff 	mov.w	ip, #4294967295
 800919c:	fa0c fc0e 	lsl.w	ip, ip, lr
 80091a0:	ea21 010c 	bic.w	r1, r1, ip
 80091a4:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 80091a6:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80091a8:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 80091ac:	db0c      	blt.n	80091c8 <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80091ae:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 80091b2:	0109      	lsls	r1, r1, #4
 80091b4:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 80091b8:	b2c9      	uxtb	r1, r1
 80091ba:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 80091be:	f85d fb04 	ldr.w	pc, [sp], #4
 80091c2:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80091c4:	4613      	mov	r3, r2
 80091c6:	e7e7      	b.n	8009198 <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80091c8:	4b05      	ldr	r3, [pc, #20]	; (80091e0 <HAL_NVIC_SetPriority+0x78>)
 80091ca:	f000 000f 	and.w	r0, r0, #15
 80091ce:	0109      	lsls	r1, r1, #4
 80091d0:	4403      	add	r3, r0
 80091d2:	b2c9      	uxtb	r1, r1
 80091d4:	7619      	strb	r1, [r3, #24]
 80091d6:	f85d fb04 	ldr.w	pc, [sp], #4
 80091da:	bf00      	nop
 80091dc:	e000ed00 	.word	0xe000ed00
 80091e0:	e000ecfc 	.word	0xe000ecfc

080091e4 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 80091e4:	2800      	cmp	r0, #0
 80091e6:	db07      	blt.n	80091f8 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80091e8:	0941      	lsrs	r1, r0, #5
 80091ea:	4a04      	ldr	r2, [pc, #16]	; (80091fc <HAL_NVIC_EnableIRQ+0x18>)
 80091ec:	f000 001f 	and.w	r0, r0, #31
 80091f0:	2301      	movs	r3, #1
 80091f2:	4083      	lsls	r3, r0
 80091f4:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 80091f8:	4770      	bx	lr
 80091fa:	bf00      	nop
 80091fc:	e000e100 	.word	0xe000e100

08009200 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8009200:	b180      	cbz	r0, 8009224 <HAL_CRC_Init+0x24>
{
 8009202:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8009204:	7943      	ldrb	r3, [r0, #5]
 8009206:	4604      	mov	r4, r0
 8009208:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800920c:	b11b      	cbz	r3, 8009216 <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800920e:	2301      	movs	r3, #1
 8009210:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8009212:	2000      	movs	r0, #0
}
 8009214:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 8009216:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 8009218:	f7f8 fe34 	bl	8001e84 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 800921c:	2301      	movs	r3, #1
 800921e:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 8009220:	2000      	movs	r0, #0
}
 8009222:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8009224:	2001      	movs	r0, #1
}
 8009226:	4770      	bx	lr

08009228 <HAL_DMA_Init>:
  * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
{
 8009228:	b538      	push	{r3, r4, r5, lr}
 800922a:	4604      	mov	r4, r0
  uint32_t tmp = 0U;
  uint32_t tickstart = HAL_GetTick();
 800922c:	f7ff ff72 	bl	8009114 <HAL_GetTick>
  DMA_Base_Registers *regs;

  /* Check the DMA peripheral state */
  if(hdma == NULL)
 8009230:	2c00      	cmp	r4, #0
 8009232:	d052      	beq.n	80092da <HAL_DMA_Init+0xb2>

  /* Allocate lock resource */
  __HAL_UNLOCK(hdma);
  
  /* Disable the peripheral */
  __HAL_DMA_DISABLE(hdma);
 8009234:	6823      	ldr	r3, [r4, #0]
  __HAL_UNLOCK(hdma);
 8009236:	2200      	movs	r2, #0
  hdma->State = HAL_DMA_STATE_BUSY;
 8009238:	2102      	movs	r1, #2
 800923a:	f884 1035 	strb.w	r1, [r4, #53]	; 0x35
  __HAL_UNLOCK(hdma);
 800923e:	f884 2034 	strb.w	r2, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 8009242:	681a      	ldr	r2, [r3, #0]
 8009244:	f022 0201 	bic.w	r2, r2, #1
 8009248:	4605      	mov	r5, r0
 800924a:	601a      	str	r2, [r3, #0]
  
  /* Check if the DMA Stream is effectively disabled */
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 800924c:	e005      	b.n	800925a <HAL_DMA_Init+0x32>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 800924e:	f7ff ff61 	bl	8009114 <HAL_GetTick>
 8009252:	1b43      	subs	r3, r0, r5
 8009254:	2b05      	cmp	r3, #5
 8009256:	d839      	bhi.n	80092cc <HAL_DMA_Init+0xa4>
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8009258:	6823      	ldr	r3, [r4, #0]
 800925a:	681a      	ldr	r2, [r3, #0]
 800925c:	07d1      	lsls	r1, r2, #31
 800925e:	d4f6      	bmi.n	800924e <HAL_DMA_Init+0x26>
                      DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
                      DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
                      DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));

  /* Prepare the DMA Stream configuration */
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8009260:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8009264:	68e1      	ldr	r1, [r4, #12]
 8009266:	4302      	orrs	r2, r0
 8009268:	430a      	orrs	r2, r1
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 800926a:	e9d4 5104 	ldrd	r5, r1, [r4, #16]
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800926e:	69a0      	ldr	r0, [r4, #24]
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8009270:	432a      	orrs	r2, r5
 8009272:	430a      	orrs	r2, r1
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8009274:	69e1      	ldr	r1, [r4, #28]
  tmp = hdma->Instance->CR;
 8009276:	681d      	ldr	r5, [r3, #0]
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8009278:	4302      	orrs	r2, r0
 800927a:	430a      	orrs	r2, r1
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 800927c:	4933      	ldr	r1, [pc, #204]	; (800934c <HAL_DMA_Init+0x124>)
 800927e:	4029      	ands	r1, r5
          hdma->Init.Mode                | hdma->Init.Priority;
 8009280:	6a25      	ldr	r5, [r4, #32]
 8009282:	432a      	orrs	r2, r5
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8009284:	430a      	orrs	r2, r1

  /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8009286:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8009288:	2904      	cmp	r1, #4
 800928a:	d028      	beq.n	80092de <HAL_DMA_Init+0xb6>
    /* Get memory burst and peripheral burst */
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
  }
  
  /* Write to DMA Stream CR register */
  hdma->Instance->CR = tmp;  
 800928c:	601a      	str	r2, [r3, #0]

  /* Get the FCR register value */
  tmp = hdma->Instance->FCR;
 800928e:	695a      	ldr	r2, [r3, #20]

  /* Clear Direct mode and FIFO threshold bits */
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8009290:	f022 0207 	bic.w	r2, r2, #7

  /* Prepare the DMA Stream FIFO configuration */
  tmp |= hdma->Init.FIFOMode;
 8009294:	4311      	orrs	r1, r2
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8009296:	b2d8      	uxtb	r0, r3
 8009298:	4a2d      	ldr	r2, [pc, #180]	; (8009350 <HAL_DMA_Init+0x128>)
  hdma->Instance->FCR = tmp;
 800929a:	6159      	str	r1, [r3, #20]
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 800929c:	3810      	subs	r0, #16
 800929e:	fba2 5200 	umull	r5, r2, r2, r0
 80092a2:	0912      	lsrs	r2, r2, #4
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 80092a4:	492b      	ldr	r1, [pc, #172]	; (8009354 <HAL_DMA_Init+0x12c>)
  
  if (stream_number > 3U)
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 80092a6:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 80092aa:	5c89      	ldrb	r1, [r1, r2]
 80092ac:	65e1      	str	r1, [r4, #92]	; 0x5c
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 80092ae:	f023 0303 	bic.w	r3, r3, #3
  if (stream_number > 3U)
 80092b2:	285f      	cmp	r0, #95	; 0x5f
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 80092b4:	bf88      	it	hi
 80092b6:	3304      	addhi	r3, #4
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 80092b8:	223f      	movs	r2, #63	; 0x3f
 80092ba:	408a      	lsls	r2, r1
 80092bc:	65a3      	str	r3, [r4, #88]	; 0x58
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80092be:	2000      	movs	r0, #0
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 80092c0:	609a      	str	r2, [r3, #8]
  hdma->State = HAL_DMA_STATE_READY;
 80092c2:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80092c4:	6560      	str	r0, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 80092c6:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
}
 80092ca:	bd38      	pop	{r3, r4, r5, pc}
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 80092cc:	2303      	movs	r3, #3
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 80092ce:	2220      	movs	r2, #32
 80092d0:	6562      	str	r2, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 80092d2:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
      return HAL_TIMEOUT;
 80092d6:	4618      	mov	r0, r3
}
 80092d8:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80092da:	2001      	movs	r0, #1
}
 80092dc:	bd38      	pop	{r3, r4, r5, pc}
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 80092de:	e9d4 510b 	ldrd	r5, r1, [r4, #44]	; 0x2c
 80092e2:	4329      	orrs	r1, r5
 80092e4:	4311      	orrs	r1, r2
  hdma->Instance->CR = tmp;  
 80092e6:	6019      	str	r1, [r3, #0]
  tmp = hdma->Instance->FCR;
 80092e8:	6959      	ldr	r1, [r3, #20]
    tmp |= hdma->Init.FIFOThreshold;
 80092ea:	6aa2      	ldr	r2, [r4, #40]	; 0x28
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 80092ec:	f021 0107 	bic.w	r1, r1, #7
 80092f0:	4311      	orrs	r1, r2
    tmp |= hdma->Init.FIFOThreshold;
 80092f2:	f041 0104 	orr.w	r1, r1, #4
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 80092f6:	2d00      	cmp	r5, #0
 80092f8:	d0cd      	beq.n	8009296 <HAL_DMA_Init+0x6e>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 80092fa:	b178      	cbz	r0, 800931c <HAL_DMA_Init+0xf4>
      break;
    }
  }
  
  /* Memory Data size equal to Half-Word */
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 80092fc:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 8009300:	d016      	beq.n	8009330 <HAL_DMA_Init+0x108>
  }
  
  /* Memory Data size equal to Word */
  else
  {
    switch (tmp)
 8009302:	2a02      	cmp	r2, #2
 8009304:	d903      	bls.n	800930e <HAL_DMA_Init+0xe6>
 8009306:	2a03      	cmp	r2, #3
 8009308:	d1c5      	bne.n	8009296 <HAL_DMA_Init+0x6e>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 800930a:	01ea      	lsls	r2, r5, #7
 800930c:	d5c3      	bpl.n	8009296 <HAL_DMA_Init+0x6e>
        hdma->State = HAL_DMA_STATE_READY;
 800930e:	2301      	movs	r3, #1
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 8009310:	2240      	movs	r2, #64	; 0x40
 8009312:	6562      	str	r2, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 8009314:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
        return HAL_ERROR; 
 8009318:	4618      	mov	r0, r3
}
 800931a:	bd38      	pop	{r3, r4, r5, pc}
    switch (tmp)
 800931c:	2a01      	cmp	r2, #1
 800931e:	d003      	beq.n	8009328 <HAL_DMA_Init+0x100>
 8009320:	f032 0202 	bics.w	r2, r2, #2
 8009324:	d1b7      	bne.n	8009296 <HAL_DMA_Init+0x6e>
 8009326:	e7f0      	b.n	800930a <HAL_DMA_Init+0xe2>
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8009328:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 800932c:	d1b3      	bne.n	8009296 <HAL_DMA_Init+0x6e>
 800932e:	e7ee      	b.n	800930e <HAL_DMA_Init+0xe6>
    switch (tmp)
 8009330:	2a03      	cmp	r2, #3
 8009332:	d8b0      	bhi.n	8009296 <HAL_DMA_Init+0x6e>
 8009334:	a001      	add	r0, pc, #4	; (adr r0, 800933c <HAL_DMA_Init+0x114>)
 8009336:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 800933a:	bf00      	nop
 800933c:	0800930f 	.word	0x0800930f
 8009340:	0800930b 	.word	0x0800930b
 8009344:	0800930f 	.word	0x0800930f
 8009348:	08009329 	.word	0x08009329
 800934c:	f010803f 	.word	0xf010803f
 8009350:	aaaaaaab 	.word	0xaaaaaaab
 8009354:	0802e0f8 	.word	0x0802e0f8

08009358 <HAL_DMA_Abort_IT>:
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8009358:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800935c:	2b02      	cmp	r3, #2
 800935e:	d003      	beq.n	8009368 <HAL_DMA_Abort_IT+0x10>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8009360:	2380      	movs	r3, #128	; 0x80
 8009362:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 8009364:	2001      	movs	r0, #1
 8009366:	4770      	bx	lr
    __HAL_DMA_DISABLE(hdma);
 8009368:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 800936a:	2305      	movs	r3, #5
 800936c:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 8009370:	6813      	ldr	r3, [r2, #0]
 8009372:	f023 0301 	bic.w	r3, r3, #1
  return HAL_OK;
 8009376:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 8009378:	6013      	str	r3, [r2, #0]
}
 800937a:	4770      	bx	lr

0800937c <HAL_DMA_IRQHandler>:
{
 800937c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800937e:	b083      	sub	sp, #12
  uint32_t timeout = SystemCoreClock / 9600U;
 8009380:	4a67      	ldr	r2, [pc, #412]	; (8009520 <HAL_DMA_IRQHandler+0x1a4>)
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8009382:	6d87      	ldr	r7, [r0, #88]	; 0x58
  uint32_t timeout = SystemCoreClock / 9600U;
 8009384:	6816      	ldr	r6, [r2, #0]
  __IO uint32_t count = 0U;
 8009386:	2300      	movs	r3, #0
 8009388:	9301      	str	r3, [sp, #4]
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 800938a:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
  tmpisr = regs->ISR;
 800938c:	683d      	ldr	r5, [r7, #0]
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 800938e:	2208      	movs	r2, #8
 8009390:	409a      	lsls	r2, r3
 8009392:	422a      	tst	r2, r5
{
 8009394:	4604      	mov	r4, r0
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 8009396:	d003      	beq.n	80093a0 <HAL_DMA_IRQHandler+0x24>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
 8009398:	6801      	ldr	r1, [r0, #0]
 800939a:	6808      	ldr	r0, [r1, #0]
 800939c:	0740      	lsls	r0, r0, #29
 800939e:	d478      	bmi.n	8009492 <HAL_DMA_IRQHandler+0x116>
  if ((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 80093a0:	2201      	movs	r2, #1
 80093a2:	409a      	lsls	r2, r3
 80093a4:	422a      	tst	r2, r5
 80093a6:	d003      	beq.n	80093b0 <HAL_DMA_IRQHandler+0x34>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 80093a8:	6821      	ldr	r1, [r4, #0]
 80093aa:	6949      	ldr	r1, [r1, #20]
 80093ac:	0608      	lsls	r0, r1, #24
 80093ae:	d46a      	bmi.n	8009486 <HAL_DMA_IRQHandler+0x10a>
  if ((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 80093b0:	2204      	movs	r2, #4
 80093b2:	409a      	lsls	r2, r3
 80093b4:	422a      	tst	r2, r5
 80093b6:	d003      	beq.n	80093c0 <HAL_DMA_IRQHandler+0x44>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 80093b8:	6821      	ldr	r1, [r4, #0]
 80093ba:	6809      	ldr	r1, [r1, #0]
 80093bc:	0789      	lsls	r1, r1, #30
 80093be:	d45c      	bmi.n	800947a <HAL_DMA_IRQHandler+0xfe>
  if ((tmpisr & (DMA_FLAG_HTIF0_4 << hdma->StreamIndex)) != RESET)
 80093c0:	2210      	movs	r2, #16
 80093c2:	409a      	lsls	r2, r3
 80093c4:	422a      	tst	r2, r5
 80093c6:	d003      	beq.n	80093d0 <HAL_DMA_IRQHandler+0x54>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
 80093c8:	6821      	ldr	r1, [r4, #0]
 80093ca:	6808      	ldr	r0, [r1, #0]
 80093cc:	0700      	lsls	r0, r0, #28
 80093ce:	d441      	bmi.n	8009454 <HAL_DMA_IRQHandler+0xd8>
  if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 80093d0:	2220      	movs	r2, #32
 80093d2:	409a      	lsls	r2, r3
 80093d4:	422a      	tst	r2, r5
 80093d6:	d014      	beq.n	8009402 <HAL_DMA_IRQHandler+0x86>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 80093d8:	6821      	ldr	r1, [r4, #0]
 80093da:	6808      	ldr	r0, [r1, #0]
 80093dc:	06c0      	lsls	r0, r0, #27
 80093de:	d510      	bpl.n	8009402 <HAL_DMA_IRQHandler+0x86>
      regs->IFCR = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 80093e0:	60ba      	str	r2, [r7, #8]
      if(HAL_DMA_STATE_ABORT == hdma->State)
 80093e2:	f894 2035 	ldrb.w	r2, [r4, #53]	; 0x35
 80093e6:	2a05      	cmp	r2, #5
 80093e8:	d063      	beq.n	80094b2 <HAL_DMA_IRQHandler+0x136>
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 80093ea:	680b      	ldr	r3, [r1, #0]
 80093ec:	f413 2f80 	tst.w	r3, #262144	; 0x40000
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 80093f0:	680b      	ldr	r3, [r1, #0]
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 80093f2:	d07e      	beq.n	80094f2 <HAL_DMA_IRQHandler+0x176>
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 80093f4:	0319      	lsls	r1, r3, #12
 80093f6:	f140 8089 	bpl.w	800950c <HAL_DMA_IRQHandler+0x190>
        if(hdma->XferCpltCallback != NULL)
 80093fa:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80093fc:	b10b      	cbz	r3, 8009402 <HAL_DMA_IRQHandler+0x86>
          hdma->XferCpltCallback(hdma);
 80093fe:	4620      	mov	r0, r4
 8009400:	4798      	blx	r3
  if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 8009402:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8009404:	b323      	cbz	r3, 8009450 <HAL_DMA_IRQHandler+0xd4>
    if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 8009406:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8009408:	07da      	lsls	r2, r3, #31
 800940a:	d51a      	bpl.n	8009442 <HAL_DMA_IRQHandler+0xc6>
      __HAL_DMA_DISABLE(hdma);
 800940c:	6822      	ldr	r2, [r4, #0]
  uint32_t timeout = SystemCoreClock / 9600U;
 800940e:	4945      	ldr	r1, [pc, #276]	; (8009524 <HAL_DMA_IRQHandler+0x1a8>)
      hdma->State = HAL_DMA_STATE_ABORT;
 8009410:	2305      	movs	r3, #5
 8009412:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
      __HAL_DMA_DISABLE(hdma);
 8009416:	6813      	ldr	r3, [r2, #0]
  uint32_t timeout = SystemCoreClock / 9600U;
 8009418:	fba1 1606 	umull	r1, r6, r1, r6
      __HAL_DMA_DISABLE(hdma);
 800941c:	f023 0301 	bic.w	r3, r3, #1
  uint32_t timeout = SystemCoreClock / 9600U;
 8009420:	0ab6      	lsrs	r6, r6, #10
      __HAL_DMA_DISABLE(hdma);
 8009422:	6013      	str	r3, [r2, #0]
 8009424:	e002      	b.n	800942c <HAL_DMA_IRQHandler+0xb0>
      while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 8009426:	6813      	ldr	r3, [r2, #0]
 8009428:	07db      	lsls	r3, r3, #31
 800942a:	d504      	bpl.n	8009436 <HAL_DMA_IRQHandler+0xba>
        if (++count > timeout)
 800942c:	9b01      	ldr	r3, [sp, #4]
 800942e:	3301      	adds	r3, #1
 8009430:	42b3      	cmp	r3, r6
 8009432:	9301      	str	r3, [sp, #4]
 8009434:	d9f7      	bls.n	8009426 <HAL_DMA_IRQHandler+0xaa>
      hdma->State = HAL_DMA_STATE_READY;
 8009436:	2201      	movs	r2, #1
      __HAL_UNLOCK(hdma);
 8009438:	2300      	movs	r3, #0
      hdma->State = HAL_DMA_STATE_READY;
 800943a:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
      __HAL_UNLOCK(hdma);
 800943e:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    if(hdma->XferErrorCallback != NULL)
 8009442:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8009444:	b123      	cbz	r3, 8009450 <HAL_DMA_IRQHandler+0xd4>
      hdma->XferErrorCallback(hdma);
 8009446:	4620      	mov	r0, r4
}
 8009448:	b003      	add	sp, #12
 800944a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
      hdma->XferErrorCallback(hdma);
 800944e:	4718      	bx	r3
}
 8009450:	b003      	add	sp, #12
 8009452:	bdf0      	pop	{r4, r5, r6, r7, pc}
      regs->IFCR = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 8009454:	60ba      	str	r2, [r7, #8]
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 8009456:	680a      	ldr	r2, [r1, #0]
 8009458:	f412 2f80 	tst.w	r2, #262144	; 0x40000
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 800945c:	680a      	ldr	r2, [r1, #0]
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 800945e:	d122      	bne.n	80094a6 <HAL_DMA_IRQHandler+0x12a>
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 8009460:	05d2      	lsls	r2, r2, #23
 8009462:	d403      	bmi.n	800946c <HAL_DMA_IRQHandler+0xf0>
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 8009464:	680a      	ldr	r2, [r1, #0]
 8009466:	f022 0208 	bic.w	r2, r2, #8
 800946a:	600a      	str	r2, [r1, #0]
        if(hdma->XferHalfCpltCallback != NULL)
 800946c:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800946e:	2a00      	cmp	r2, #0
 8009470:	d0ae      	beq.n	80093d0 <HAL_DMA_IRQHandler+0x54>
          hdma->XferHalfCpltCallback(hdma);
 8009472:	4620      	mov	r0, r4
 8009474:	4790      	blx	r2
  if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 8009476:	6de3      	ldr	r3, [r4, #92]	; 0x5c
 8009478:	e7aa      	b.n	80093d0 <HAL_DMA_IRQHandler+0x54>
      regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 800947a:	60ba      	str	r2, [r7, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 800947c:	6d62      	ldr	r2, [r4, #84]	; 0x54
 800947e:	f042 0204 	orr.w	r2, r2, #4
 8009482:	6562      	str	r2, [r4, #84]	; 0x54
 8009484:	e79c      	b.n	80093c0 <HAL_DMA_IRQHandler+0x44>
      regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 8009486:	60ba      	str	r2, [r7, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 8009488:	6d62      	ldr	r2, [r4, #84]	; 0x54
 800948a:	f042 0202 	orr.w	r2, r2, #2
 800948e:	6562      	str	r2, [r4, #84]	; 0x54
 8009490:	e78e      	b.n	80093b0 <HAL_DMA_IRQHandler+0x34>
      hdma->Instance->CR  &= ~(DMA_IT_TE);
 8009492:	6808      	ldr	r0, [r1, #0]
 8009494:	f020 0004 	bic.w	r0, r0, #4
 8009498:	6008      	str	r0, [r1, #0]
      regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 800949a:	60ba      	str	r2, [r7, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 800949c:	6d62      	ldr	r2, [r4, #84]	; 0x54
 800949e:	f042 0201 	orr.w	r2, r2, #1
 80094a2:	6562      	str	r2, [r4, #84]	; 0x54
 80094a4:	e77c      	b.n	80093a0 <HAL_DMA_IRQHandler+0x24>
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 80094a6:	0311      	lsls	r1, r2, #12
 80094a8:	d5e0      	bpl.n	800946c <HAL_DMA_IRQHandler+0xf0>
          if(hdma->XferM1HalfCpltCallback != NULL)
 80094aa:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 80094ac:	2a00      	cmp	r2, #0
 80094ae:	d1e0      	bne.n	8009472 <HAL_DMA_IRQHandler+0xf6>
 80094b0:	e78e      	b.n	80093d0 <HAL_DMA_IRQHandler+0x54>
        hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 80094b2:	680a      	ldr	r2, [r1, #0]
 80094b4:	f022 0216 	bic.w	r2, r2, #22
 80094b8:	600a      	str	r2, [r1, #0]
        hdma->Instance->FCR &= ~(DMA_IT_FE);
 80094ba:	694a      	ldr	r2, [r1, #20]
 80094bc:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80094c0:	614a      	str	r2, [r1, #20]
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 80094c2:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80094c4:	b33a      	cbz	r2, 8009516 <HAL_DMA_IRQHandler+0x19a>
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 80094c6:	680a      	ldr	r2, [r1, #0]
 80094c8:	f022 0208 	bic.w	r2, r2, #8
 80094cc:	600a      	str	r2, [r1, #0]
        regs->IFCR = 0x3FU << hdma->StreamIndex;
 80094ce:	223f      	movs	r2, #63	; 0x3f
 80094d0:	fa02 f303 	lsl.w	r3, r2, r3
        if(hdma->XferAbortCallback != NULL)
 80094d4:	6d21      	ldr	r1, [r4, #80]	; 0x50
        regs->IFCR = 0x3FU << hdma->StreamIndex;
 80094d6:	60bb      	str	r3, [r7, #8]
        hdma->State = HAL_DMA_STATE_READY;
 80094d8:	2201      	movs	r2, #1
        __HAL_UNLOCK(hdma);
 80094da:	2300      	movs	r3, #0
        hdma->State = HAL_DMA_STATE_READY;
 80094dc:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
        __HAL_UNLOCK(hdma);
 80094e0:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        if(hdma->XferAbortCallback != NULL)
 80094e4:	2900      	cmp	r1, #0
 80094e6:	d0b3      	beq.n	8009450 <HAL_DMA_IRQHandler+0xd4>
          hdma->XferAbortCallback(hdma);
 80094e8:	4620      	mov	r0, r4
}
 80094ea:	b003      	add	sp, #12
 80094ec:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
          hdma->XferAbortCallback(hdma);
 80094f0:	4708      	bx	r1
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 80094f2:	f413 7380 	ands.w	r3, r3, #256	; 0x100
 80094f6:	d180      	bne.n	80093fa <HAL_DMA_IRQHandler+0x7e>
          hdma->Instance->CR  &= ~(DMA_IT_TC);
 80094f8:	680a      	ldr	r2, [r1, #0]
 80094fa:	f022 0210 	bic.w	r2, r2, #16
 80094fe:	600a      	str	r2, [r1, #0]
          hdma->State = HAL_DMA_STATE_READY;
 8009500:	2201      	movs	r2, #1
 8009502:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
          __HAL_UNLOCK(hdma);
 8009506:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
 800950a:	e776      	b.n	80093fa <HAL_DMA_IRQHandler+0x7e>
          if(hdma->XferM1CpltCallback != NULL)
 800950c:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800950e:	2b00      	cmp	r3, #0
 8009510:	f47f af75 	bne.w	80093fe <HAL_DMA_IRQHandler+0x82>
 8009514:	e775      	b.n	8009402 <HAL_DMA_IRQHandler+0x86>
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8009516:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8009518:	2a00      	cmp	r2, #0
 800951a:	d1d4      	bne.n	80094c6 <HAL_DMA_IRQHandler+0x14a>
 800951c:	e7d7      	b.n	80094ce <HAL_DMA_IRQHandler+0x152>
 800951e:	bf00      	nop
 8009520:	20000078 	.word	0x20000078
 8009524:	1b4e81b5 	.word	0x1b4e81b5

08009528 <HAL_DMA_GetState>:
  return hdma->State;
 8009528:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 800952c:	4770      	bx	lr
 800952e:	bf00      	nop

08009530 <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8009530:	b348      	cbz	r0, 8009586 <HAL_DMA2D_Init+0x56>
{
 8009532:	b510      	push	{r4, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8009534:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8009538:	4604      	mov	r4, r0
 800953a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800953e:	b1eb      	cbz	r3, 800957c <HAL_DMA2D_Init+0x4c>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8009540:	6822      	ldr	r2, [r4, #0]
 8009542:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8009544:	2302      	movs	r3, #2
 8009546:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800954a:	6813      	ldr	r3, [r2, #0]
 800954c:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8009550:	430b      	orrs	r3, r1
 8009552:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8009554:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8009556:	68a1      	ldr	r1, [r4, #8]
 8009558:	f023 0307 	bic.w	r3, r3, #7
 800955c:	430b      	orrs	r3, r1
 800955e:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8009560:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8009562:	68e1      	ldr	r1, [r4, #12]
 8009564:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8009568:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800956c:	430b      	orrs	r3, r1
 800956e:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8009570:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8009572:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8009574:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8009576:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 800957a:	bd10      	pop	{r4, pc}
    hdma2d->Lock = HAL_UNLOCKED;
 800957c:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    HAL_DMA2D_MspInit(hdma2d);
 8009580:	f7f8 fc9a 	bl	8001eb8 <HAL_DMA2D_MspInit>
 8009584:	e7dc      	b.n	8009540 <HAL_DMA2D_Init+0x10>
    return HAL_ERROR;
 8009586:	2001      	movs	r0, #1
}
 8009588:	4770      	bx	lr
 800958a:	bf00      	nop

0800958c <HAL_DMA2D_ConfigLayer>:
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 800958c:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8009590:	2b01      	cmp	r3, #1
 8009592:	d04d      	beq.n	8009630 <HAL_DMA2D_ConfigLayer+0xa4>
 8009594:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8009596:	2302      	movs	r3, #2
{
 8009598:	b470      	push	{r4, r5, r6}

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800959a:	eb00 1c01 	add.w	ip, r0, r1, lsl #4
  __HAL_LOCK(hdma2d);
 800959e:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80095a2:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80095a6:	e9dc 2307 	ldrd	r2, r3, [ip, #28]
 80095aa:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80095ae:	3a09      	subs	r2, #9
 80095b0:	2a01      	cmp	r2, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 80095b2:	f8dc 2024 	ldr.w	r2, [ip, #36]	; 0x24
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80095b6:	d91d      	bls.n	80095f4 <HAL_DMA2D_ConfigLayer+0x68>
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 80095b8:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 80095bc:	b189      	cbz	r1, 80095e2 <HAL_DMA2D_ConfigLayer+0x56>
  else
  {


    /* Write DMA2D FGPFCCR register */
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 80095be:	6801      	ldr	r1, [r0, #0]
 80095c0:	4a1c      	ldr	r2, [pc, #112]	; (8009634 <HAL_DMA2D_ConfigLayer+0xa8>)
 80095c2:	69cd      	ldr	r5, [r1, #28]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 80095c4:	f8dc 4018 	ldr.w	r4, [ip, #24]
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 80095c8:	402a      	ands	r2, r5
 80095ca:	431a      	orrs	r2, r3
 80095cc:	61ca      	str	r2, [r1, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 80095ce:	610c      	str	r4, [r1, #16]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 80095d0:	2300      	movs	r3, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 80095d2:	2201      	movs	r2, #1
 80095d4:	f880 2039 	strb.w	r2, [r0, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 80095d8:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

  return HAL_OK;
}
 80095dc:	bc70      	pop	{r4, r5, r6}
  return HAL_OK;
 80095de:	4618      	mov	r0, r3
}
 80095e0:	4770      	bx	lr
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80095e2:	6801      	ldr	r1, [r0, #0]
 80095e4:	4a13      	ldr	r2, [pc, #76]	; (8009634 <HAL_DMA2D_ConfigLayer+0xa8>)
 80095e6:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 80095e8:	4022      	ands	r2, r4
 80095ea:	431a      	orrs	r2, r3
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 80095ec:	6984      	ldr	r4, [r0, #24]
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80095ee:	624a      	str	r2, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 80095f0:	618c      	str	r4, [r1, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80095f2:	e7ed      	b.n	80095d0 <HAL_DMA2D_ConfigLayer+0x44>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 80095f4:	f002 447f 	and.w	r4, r2, #4278190080	; 0xff000000
 80095f8:	4323      	orrs	r3, r4
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 80095fa:	b961      	cbnz	r1, 8009616 <HAL_DMA2D_ConfigLayer+0x8a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80095fc:	6801      	ldr	r1, [r0, #0]
 80095fe:	4a0d      	ldr	r2, [pc, #52]	; (8009634 <HAL_DMA2D_ConfigLayer+0xa8>)
 8009600:	6a4c      	ldr	r4, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8009602:	6985      	ldr	r5, [r0, #24]
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8009604:	4022      	ands	r2, r4
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8009606:	6a44      	ldr	r4, [r0, #36]	; 0x24
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8009608:	431a      	orrs	r2, r3
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 800960a:	f024 447f 	bic.w	r4, r4, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800960e:	624a      	str	r2, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8009610:	618d      	str	r5, [r1, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8009612:	628c      	str	r4, [r1, #40]	; 0x28
 8009614:	e7dc      	b.n	80095d0 <HAL_DMA2D_ConfigLayer+0x44>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8009616:	6804      	ldr	r4, [r0, #0]
 8009618:	4906      	ldr	r1, [pc, #24]	; (8009634 <HAL_DMA2D_ConfigLayer+0xa8>)
 800961a:	69e6      	ldr	r6, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800961c:	f8dc 5018 	ldr.w	r5, [ip, #24]
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8009620:	4031      	ands	r1, r6
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8009622:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8009626:	4319      	orrs	r1, r3
 8009628:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800962a:	6125      	str	r5, [r4, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 800962c:	6222      	str	r2, [r4, #32]
 800962e:	e7cf      	b.n	80095d0 <HAL_DMA2D_ConfigLayer+0x44>
  __HAL_LOCK(hdma2d);
 8009630:	2002      	movs	r0, #2
}
 8009632:	4770      	bx	lr
 8009634:	00fcfff0 	.word	0x00fcfff0

08009638 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8009638:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800963c:	2200      	movs	r2, #0
 800963e:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8009640:	f8df a260 	ldr.w	sl, [pc, #608]	; 80098a4 <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8009644:	4e90      	ldr	r6, [pc, #576]	; (8009888 <HAL_GPIO_Init+0x250>)
{
 8009646:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009648:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800964a:	4689      	mov	r9, r1
 800964c:	e005      	b.n	800965a <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 800964e:	3301      	adds	r3, #1
 8009650:	2b10      	cmp	r3, #16
 8009652:	f102 0202 	add.w	r2, r2, #2
 8009656:	f000 8095 	beq.w	8009784 <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 800965a:	2101      	movs	r1, #1
 800965c:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800965e:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 8009662:	43a1      	bics	r1, r4
 8009664:	d1f3      	bne.n	800964e <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8009666:	f8d9 c004 	ldr.w	ip, [r9, #4]
 800966a:	f00c 0103 	and.w	r1, ip, #3
 800966e:	1e4d      	subs	r5, r1, #1
 8009670:	2d01      	cmp	r5, #1
 8009672:	f240 808a 	bls.w	800978a <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8009676:	2903      	cmp	r1, #3
 8009678:	f040 80ca 	bne.w	8009810 <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800967c:	4091      	lsls	r1, r2
 800967e:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 8009680:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8009682:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8009684:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8009686:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 800968a:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800968c:	d0df      	beq.n	800964e <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800968e:	2100      	movs	r1, #0
 8009690:	9103      	str	r1, [sp, #12]
 8009692:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 8009696:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 800969a:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 800969e:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 80096a2:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 80096a6:	9103      	str	r1, [sp, #12]
 80096a8:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 80096aa:	f023 0103 	bic.w	r1, r3, #3
 80096ae:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 80096b2:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 80096b6:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 80096ba:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 80096bc:	00bf      	lsls	r7, r7, #2
 80096be:	f04f 0e0f 	mov.w	lr, #15
 80096c2:	fa0e fe07 	lsl.w	lr, lr, r7
 80096c6:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80096ca:	4d70      	ldr	r5, [pc, #448]	; (800988c <HAL_GPIO_Init+0x254>)
 80096cc:	42a8      	cmp	r0, r5
 80096ce:	d02e      	beq.n	800972e <HAL_GPIO_Init+0xf6>
 80096d0:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80096d4:	42a8      	cmp	r0, r5
 80096d6:	f000 809f 	beq.w	8009818 <HAL_GPIO_Init+0x1e0>
 80096da:	4d6d      	ldr	r5, [pc, #436]	; (8009890 <HAL_GPIO_Init+0x258>)
 80096dc:	42a8      	cmp	r0, r5
 80096de:	f000 80a2 	beq.w	8009826 <HAL_GPIO_Init+0x1ee>
 80096e2:	4d6c      	ldr	r5, [pc, #432]	; (8009894 <HAL_GPIO_Init+0x25c>)
 80096e4:	42a8      	cmp	r0, r5
 80096e6:	f000 80a5 	beq.w	8009834 <HAL_GPIO_Init+0x1fc>
 80096ea:	4d6b      	ldr	r5, [pc, #428]	; (8009898 <HAL_GPIO_Init+0x260>)
 80096ec:	42a8      	cmp	r0, r5
 80096ee:	f000 80a8 	beq.w	8009842 <HAL_GPIO_Init+0x20a>
 80096f2:	4d6a      	ldr	r5, [pc, #424]	; (800989c <HAL_GPIO_Init+0x264>)
 80096f4:	42a8      	cmp	r0, r5
 80096f6:	f000 80b2 	beq.w	800985e <HAL_GPIO_Init+0x226>
 80096fa:	4d69      	ldr	r5, [pc, #420]	; (80098a0 <HAL_GPIO_Init+0x268>)
 80096fc:	42a8      	cmp	r0, r5
 80096fe:	f000 80b5 	beq.w	800986c <HAL_GPIO_Init+0x234>
 8009702:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 80098a8 <HAL_GPIO_Init+0x270>
 8009706:	4570      	cmp	r0, lr
 8009708:	f000 80a2 	beq.w	8009850 <HAL_GPIO_Init+0x218>
 800970c:	f8df e19c 	ldr.w	lr, [pc, #412]	; 80098ac <HAL_GPIO_Init+0x274>
 8009710:	4570      	cmp	r0, lr
 8009712:	f000 80b2 	beq.w	800987a <HAL_GPIO_Init+0x242>
 8009716:	f8df e198 	ldr.w	lr, [pc, #408]	; 80098b0 <HAL_GPIO_Init+0x278>
 800971a:	4570      	cmp	r0, lr
 800971c:	bf0c      	ite	eq
 800971e:	f04f 0e09 	moveq.w	lr, #9
 8009722:	f04f 0e0a 	movne.w	lr, #10
 8009726:	fa0e f707 	lsl.w	r7, lr, r7
 800972a:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 800972e:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 8009732:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 8009734:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8009738:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 800973c:	bf0c      	ite	eq
 800973e:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009740:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 8009744:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 8009746:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8009748:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 800974c:	bf0c      	ite	eq
 800974e:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009750:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 8009754:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 8009756:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8009758:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 800975c:	bf0c      	ite	eq
 800975e:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009760:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 8009764:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8009766:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8009768:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 800976c:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 8009770:	bf0c      	ite	eq
 8009772:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009774:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009778:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 800977a:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800977c:	f102 0202 	add.w	r2, r2, #2
 8009780:	f47f af6b 	bne.w	800965a <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 8009784:	b005      	add	sp, #20
 8009786:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 800978a:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 800978e:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8009792:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009796:	2503      	movs	r5, #3
 8009798:	fa05 f802 	lsl.w	r8, r5, r2
 800979c:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 80097a0:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 80097a4:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 80097a6:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80097a8:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 80097ac:	f3cc 1700 	ubfx	r7, ip, #4, #1
 80097b0:	409f      	lsls	r7, r3
 80097b2:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80097b6:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 80097ba:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 80097bc:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 80097be:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 80097c2:	f8d9 7008 	ldr.w	r7, [r9, #8]
 80097c6:	4097      	lsls	r7, r2
 80097c8:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80097cc:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 80097ce:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80097d0:	fa01 f102 	lsl.w	r1, r1, r2
 80097d4:	f47f af54 	bne.w	8009680 <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 80097d8:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 80097dc:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80097e0:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 80097e4:	f8de 7020 	ldr.w	r7, [lr, #32]
 80097e8:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80097ea:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80097ee:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80097f2:	fa07 f708 	lsl.w	r7, r7, r8
 80097f6:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80097f8:	270f      	movs	r7, #15
 80097fa:	fa07 f808 	lsl.w	r8, r7, r8
 80097fe:	9f00      	ldr	r7, [sp, #0]
 8009800:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8009804:	9f01      	ldr	r7, [sp, #4]
 8009806:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 800980a:	f8ce 7020 	str.w	r7, [lr, #32]
 800980e:	e737      	b.n	8009680 <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009810:	2503      	movs	r5, #3
 8009812:	4095      	lsls	r5, r2
 8009814:	43ed      	mvns	r5, r5
 8009816:	e7d1      	b.n	80097bc <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8009818:	f04f 0e01 	mov.w	lr, #1
 800981c:	fa0e f707 	lsl.w	r7, lr, r7
 8009820:	ea48 0807 	orr.w	r8, r8, r7
 8009824:	e783      	b.n	800972e <HAL_GPIO_Init+0xf6>
 8009826:	f04f 0e02 	mov.w	lr, #2
 800982a:	fa0e f707 	lsl.w	r7, lr, r7
 800982e:	ea48 0807 	orr.w	r8, r8, r7
 8009832:	e77c      	b.n	800972e <HAL_GPIO_Init+0xf6>
 8009834:	f04f 0e03 	mov.w	lr, #3
 8009838:	fa0e f707 	lsl.w	r7, lr, r7
 800983c:	ea48 0807 	orr.w	r8, r8, r7
 8009840:	e775      	b.n	800972e <HAL_GPIO_Init+0xf6>
 8009842:	f04f 0e04 	mov.w	lr, #4
 8009846:	fa0e f707 	lsl.w	r7, lr, r7
 800984a:	ea48 0807 	orr.w	r8, r8, r7
 800984e:	e76e      	b.n	800972e <HAL_GPIO_Init+0xf6>
 8009850:	f04f 0e07 	mov.w	lr, #7
 8009854:	fa0e f707 	lsl.w	r7, lr, r7
 8009858:	ea48 0807 	orr.w	r8, r8, r7
 800985c:	e767      	b.n	800972e <HAL_GPIO_Init+0xf6>
 800985e:	f04f 0e05 	mov.w	lr, #5
 8009862:	fa0e f707 	lsl.w	r7, lr, r7
 8009866:	ea48 0807 	orr.w	r8, r8, r7
 800986a:	e760      	b.n	800972e <HAL_GPIO_Init+0xf6>
 800986c:	f04f 0e06 	mov.w	lr, #6
 8009870:	fa0e f707 	lsl.w	r7, lr, r7
 8009874:	ea48 0807 	orr.w	r8, r8, r7
 8009878:	e759      	b.n	800972e <HAL_GPIO_Init+0xf6>
 800987a:	f04f 0e08 	mov.w	lr, #8
 800987e:	fa0e f707 	lsl.w	r7, lr, r7
 8009882:	ea48 0807 	orr.w	r8, r8, r7
 8009886:	e752      	b.n	800972e <HAL_GPIO_Init+0xf6>
 8009888:	40013c00 	.word	0x40013c00
 800988c:	40020000 	.word	0x40020000
 8009890:	40020800 	.word	0x40020800
 8009894:	40020c00 	.word	0x40020c00
 8009898:	40021000 	.word	0x40021000
 800989c:	40021400 	.word	0x40021400
 80098a0:	40021800 	.word	0x40021800
 80098a4:	40023800 	.word	0x40023800
 80098a8:	40021c00 	.word	0x40021c00
 80098ac:	40022000 	.word	0x40022000
 80098b0:	40022400 	.word	0x40022400

080098b4 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 80098b4:	6903      	ldr	r3, [r0, #16]
 80098b6:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 80098b8:	bf14      	ite	ne
 80098ba:	2001      	movne	r0, #1
 80098bc:	2000      	moveq	r0, #0
 80098be:	4770      	bx	lr

080098c0 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 80098c0:	b902      	cbnz	r2, 80098c4 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80098c2:	0409      	lsls	r1, r1, #16
 80098c4:	6181      	str	r1, [r0, #24]
  }
}
 80098c6:	4770      	bx	lr

080098c8 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 80098c8:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 80098ca:	ea01 0203 	and.w	r2, r1, r3
 80098ce:	ea21 0103 	bic.w	r1, r1, r3
 80098d2:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80098d6:	6181      	str	r1, [r0, #24]
}
 80098d8:	4770      	bx	lr
 80098da:	bf00      	nop

080098dc <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 80098dc:	4770      	bx	lr
 80098de:	bf00      	nop

080098e0 <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 80098e0:	4a04      	ldr	r2, [pc, #16]	; (80098f4 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 80098e2:	6951      	ldr	r1, [r2, #20]
 80098e4:	4201      	tst	r1, r0
 80098e6:	d100      	bne.n	80098ea <HAL_GPIO_EXTI_IRQHandler+0xa>
 80098e8:	4770      	bx	lr
{
 80098ea:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 80098ec:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 80098ee:	f7ff fff5 	bl	80098dc <HAL_GPIO_EXTI_Callback>
}
 80098f2:	bd08      	pop	{r3, pc}
 80098f4:	40013c00 	.word	0x40013c00

080098f8 <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 80098f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80098fc:	6804      	ldr	r4, [r0, #0]
{
 80098fe:	b083      	sub	sp, #12
 8009900:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009902:	6823      	ldr	r3, [r4, #0]
{
 8009904:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8009908:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800990c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 8009910:	4606      	mov	r6, r0
 8009912:	468a      	mov	sl, r1
 8009914:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009916:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 8009918:	f1b9 3fff 	cmp.w	r9, #4294967295
 800991c:	d136      	bne.n	800998c <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800991e:	6965      	ldr	r5, [r4, #20]
 8009920:	07e8      	lsls	r0, r5, #31
 8009922:	d5fc      	bpl.n	800991e <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8009924:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 8009928:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800992a:	f1b9 3fff 	cmp.w	r9, #4294967295
 800992e:	d003      	beq.n	8009938 <I2C_RequestMemoryWrite+0x40>
 8009930:	e04f      	b.n	80099d2 <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009932:	6961      	ldr	r1, [r4, #20]
 8009934:	054d      	lsls	r5, r1, #21
 8009936:	d45d      	bmi.n	80099f4 <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009938:	6961      	ldr	r1, [r4, #20]
 800993a:	078b      	lsls	r3, r1, #30
 800993c:	d5f9      	bpl.n	8009932 <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800993e:	2300      	movs	r3, #0
 8009940:	9301      	str	r3, [sp, #4]
 8009942:	6963      	ldr	r3, [r4, #20]
 8009944:	9301      	str	r3, [sp, #4]
 8009946:	69a3      	ldr	r3, [r4, #24]
 8009948:	9301      	str	r3, [sp, #4]
 800994a:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800994c:	f1b9 3fff 	cmp.w	r9, #4294967295
 8009950:	f040 8088 	bne.w	8009a64 <I2C_RequestMemoryWrite+0x16c>
 8009954:	6963      	ldr	r3, [r4, #20]
 8009956:	061a      	lsls	r2, r3, #24
 8009958:	d464      	bmi.n	8009a24 <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800995a:	6963      	ldr	r3, [r4, #20]
 800995c:	055b      	lsls	r3, r3, #21
 800995e:	d5f9      	bpl.n	8009954 <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 8009960:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009962:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 8009966:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009968:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800996a:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800996c:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009970:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009974:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009976:	f043 0304 	orr.w	r3, r3, #4
 800997a:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800997c:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800997e:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009980:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 8009982:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009986:	d066      	beq.n	8009a56 <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 8009988:	2001      	movs	r0, #1
 800998a:	e01f      	b.n	80099cc <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800998c:	6963      	ldr	r3, [r4, #20]
 800998e:	07d9      	lsls	r1, r3, #31
 8009990:	d4c8      	bmi.n	8009924 <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009992:	f7ff fbbf 	bl	8009114 <HAL_GetTick>
 8009996:	eba0 000b 	sub.w	r0, r0, fp
 800999a:	4581      	cmp	r9, r0
 800999c:	d304      	bcc.n	80099a8 <I2C_RequestMemoryWrite+0xb0>
 800999e:	f1b9 0f00 	cmp.w	r9, #0
 80099a2:	d001      	beq.n	80099a8 <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80099a4:	6834      	ldr	r4, [r6, #0]
 80099a6:	e7b7      	b.n	8009918 <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80099a8:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80099aa:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80099ac:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80099ae:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80099b2:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80099b6:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80099b8:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 80099ba:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80099be:	f042 0220 	orr.w	r2, r2, #32
 80099c2:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80099c4:	680b      	ldr	r3, [r1, #0]
 80099c6:	05dc      	lsls	r4, r3, #23
 80099c8:	d435      	bmi.n	8009a36 <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 80099ca:	2003      	movs	r0, #3
}
 80099cc:	b003      	add	sp, #12
 80099ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80099d2:	6963      	ldr	r3, [r4, #20]
 80099d4:	0798      	lsls	r0, r3, #30
 80099d6:	d4b2      	bmi.n	800993e <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80099d8:	6963      	ldr	r3, [r4, #20]
 80099da:	055a      	lsls	r2, r3, #21
 80099dc:	d40a      	bmi.n	80099f4 <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80099de:	f7ff fb99 	bl	8009114 <HAL_GetTick>
 80099e2:	eba0 000b 	sub.w	r0, r0, fp
 80099e6:	4581      	cmp	r9, r0
 80099e8:	d34e      	bcc.n	8009a88 <I2C_RequestMemoryWrite+0x190>
 80099ea:	f1b9 0f00 	cmp.w	r9, #0
 80099ee:	d04b      	beq.n	8009a88 <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80099f0:	6834      	ldr	r4, [r6, #0]
 80099f2:	e79a      	b.n	800992a <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80099f4:	6823      	ldr	r3, [r4, #0]
 80099f6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80099fa:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 80099fc:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80099fe:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 8009a02:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009a04:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009a06:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8009a08:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009a0c:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009a10:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8009a12:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009a16:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 8009a1a:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009a1c:	6433      	str	r3, [r6, #64]	; 0x40
}
 8009a1e:	b003      	add	sp, #12
 8009a20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8009a24:	f1b8 0f01 	cmp.w	r8, #1
 8009a28:	d109      	bne.n	8009a3e <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8009a2a:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 8009a2c:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8009a2e:	6127      	str	r7, [r4, #16]
}
 8009a30:	b003      	add	sp, #12
 8009a32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8009a36:	f44f 7300 	mov.w	r3, #512	; 0x200
 8009a3a:	6433      	str	r3, [r6, #64]	; 0x40
 8009a3c:	e7c5      	b.n	80099ca <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8009a3e:	0a3b      	lsrs	r3, r7, #8
 8009a40:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009a42:	f1b9 3fff 	cmp.w	r9, #4294967295
 8009a46:	d12e      	bne.n	8009aa6 <I2C_RequestMemoryWrite+0x1ae>
 8009a48:	6963      	ldr	r3, [r4, #20]
 8009a4a:	0619      	lsls	r1, r3, #24
 8009a4c:	d4ed      	bmi.n	8009a2a <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009a4e:	6963      	ldr	r3, [r4, #20]
 8009a50:	055a      	lsls	r2, r3, #21
 8009a52:	d5f9      	bpl.n	8009a48 <I2C_RequestMemoryWrite+0x150>
 8009a54:	e784      	b.n	8009960 <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009a56:	6832      	ldr	r2, [r6, #0]
 8009a58:	6813      	ldr	r3, [r2, #0]
 8009a5a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 8009a5e:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009a60:	6013      	str	r3, [r2, #0]
 8009a62:	e7b3      	b.n	80099cc <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009a64:	6963      	ldr	r3, [r4, #20]
 8009a66:	061d      	lsls	r5, r3, #24
 8009a68:	d4dc      	bmi.n	8009a24 <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009a6a:	6963      	ldr	r3, [r4, #20]
 8009a6c:	0559      	lsls	r1, r3, #21
 8009a6e:	f53f af77 	bmi.w	8009960 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009a72:	f7ff fb4f 	bl	8009114 <HAL_GetTick>
 8009a76:	eba0 000b 	sub.w	r0, r0, fp
 8009a7a:	4581      	cmp	r9, r0
 8009a7c:	d325      	bcc.n	8009aca <I2C_RequestMemoryWrite+0x1d2>
 8009a7e:	f1b9 0f00 	cmp.w	r9, #0
 8009a82:	d022      	beq.n	8009aca <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009a84:	6834      	ldr	r4, [r6, #0]
 8009a86:	e761      	b.n	800994c <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009a88:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8009a8a:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009a8c:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8009a8e:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009a92:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009a96:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009a98:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009a9c:	f043 0320 	orr.w	r3, r3, #32
 8009aa0:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 8009aa2:	2001      	movs	r0, #1
 8009aa4:	e792      	b.n	80099cc <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009aa6:	6963      	ldr	r3, [r4, #20]
 8009aa8:	061b      	lsls	r3, r3, #24
 8009aaa:	d4be      	bmi.n	8009a2a <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009aac:	6963      	ldr	r3, [r4, #20]
 8009aae:	0558      	lsls	r0, r3, #21
 8009ab0:	f53f af56 	bmi.w	8009960 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009ab4:	f7ff fb2e 	bl	8009114 <HAL_GetTick>
 8009ab8:	eba0 000b 	sub.w	r0, r0, fp
 8009abc:	4581      	cmp	r9, r0
 8009abe:	d304      	bcc.n	8009aca <I2C_RequestMemoryWrite+0x1d2>
 8009ac0:	f1b9 0f00 	cmp.w	r9, #0
 8009ac4:	d001      	beq.n	8009aca <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009ac6:	6834      	ldr	r4, [r6, #0]
 8009ac8:	e7bb      	b.n	8009a42 <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009aca:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009acc:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009ace:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009ad0:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009ad4:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009ad8:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009ada:	4313      	orrs	r3, r2
 8009adc:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 8009ade:	e74d      	b.n	800997c <I2C_RequestMemoryWrite+0x84>

08009ae0 <I2C_RequestMemoryRead>:
{
 8009ae0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009ae4:	6804      	ldr	r4, [r0, #0]
{
 8009ae6:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009ae8:	6823      	ldr	r3, [r4, #0]
 8009aea:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8009aee:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009af0:	6823      	ldr	r3, [r4, #0]
{
 8009af2:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009af4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 8009af8:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8009afc:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009b00:	6023      	str	r3, [r4, #0]
{
 8009b02:	4606      	mov	r6, r0
 8009b04:	468b      	mov	fp, r1
 8009b06:	4617      	mov	r7, r2
 8009b08:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009b0c:	d13a      	bne.n	8009b84 <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009b0e:	6965      	ldr	r5, [r4, #20]
 8009b10:	07eb      	lsls	r3, r5, #31
 8009b12:	d5fc      	bpl.n	8009b0e <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8009b14:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 8009b18:	6123      	str	r3, [r4, #16]
 8009b1a:	fa5f fb8b 	uxtb.w	fp, fp
 8009b1e:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009b22:	d003      	beq.n	8009b2c <I2C_RequestMemoryRead+0x4c>
 8009b24:	e069      	b.n	8009bfa <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009b26:	6965      	ldr	r5, [r4, #20]
 8009b28:	056a      	lsls	r2, r5, #21
 8009b2a:	d44e      	bmi.n	8009bca <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009b2c:	6965      	ldr	r5, [r4, #20]
 8009b2e:	07a9      	lsls	r1, r5, #30
 8009b30:	d5f9      	bpl.n	8009b26 <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009b32:	2300      	movs	r3, #0
 8009b34:	9301      	str	r3, [sp, #4]
 8009b36:	6963      	ldr	r3, [r4, #20]
 8009b38:	9301      	str	r3, [sp, #4]
 8009b3a:	69a3      	ldr	r3, [r4, #24]
 8009b3c:	9301      	str	r3, [sp, #4]
 8009b3e:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009b40:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009b44:	f040 80bd 	bne.w	8009cc2 <I2C_RequestMemoryRead+0x1e2>
 8009b48:	6963      	ldr	r3, [r4, #20]
 8009b4a:	0618      	lsls	r0, r3, #24
 8009b4c:	d468      	bmi.n	8009c20 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009b4e:	6963      	ldr	r3, [r4, #20]
 8009b50:	0559      	lsls	r1, r3, #21
 8009b52:	d5f9      	bpl.n	8009b48 <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009b54:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009b56:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 8009b5a:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009b5c:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009b5e:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8009b60:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009b64:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009b68:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009b6a:	f043 0304 	orr.w	r3, r3, #4
 8009b6e:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009b70:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 8009b72:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009b74:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 8009b76:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009b7a:	d070      	beq.n	8009c5e <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 8009b7c:	2001      	movs	r0, #1
}
 8009b7e:	b003      	add	sp, #12
 8009b80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009b84:	6963      	ldr	r3, [r4, #20]
 8009b86:	07dd      	lsls	r5, r3, #31
 8009b88:	d4c4      	bmi.n	8009b14 <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009b8a:	f7ff fac3 	bl	8009114 <HAL_GetTick>
 8009b8e:	eba0 0009 	sub.w	r0, r0, r9
 8009b92:	4582      	cmp	sl, r0
 8009b94:	d304      	bcc.n	8009ba0 <I2C_RequestMemoryRead+0xc0>
 8009b96:	f1ba 0f00 	cmp.w	sl, #0
 8009b9a:	d001      	beq.n	8009ba0 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009b9c:	6834      	ldr	r4, [r6, #0]
 8009b9e:	e7b3      	b.n	8009b08 <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009ba0:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009ba2:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009ba4:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009ba6:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009baa:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009bae:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009bb0:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 8009bb2:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009bb6:	f042 0220 	orr.w	r2, r2, #32
 8009bba:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009bbc:	680b      	ldr	r3, [r1, #0]
 8009bbe:	05dc      	lsls	r4, r3, #23
 8009bc0:	d43d      	bmi.n	8009c3e <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 8009bc2:	2003      	movs	r0, #3
}
 8009bc4:	b003      	add	sp, #12
 8009bc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009bca:	6823      	ldr	r3, [r4, #0]
 8009bcc:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8009bd0:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009bd2:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009bd4:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 8009bd8:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009bda:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009bdc:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8009bde:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009be2:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009be6:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8009be8:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009bec:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 8009bf0:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009bf2:	6433      	str	r3, [r6, #64]	; 0x40
}
 8009bf4:	b003      	add	sp, #12
 8009bf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009bfa:	6963      	ldr	r3, [r4, #20]
 8009bfc:	079b      	lsls	r3, r3, #30
 8009bfe:	d498      	bmi.n	8009b32 <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009c00:	6963      	ldr	r3, [r4, #20]
 8009c02:	0558      	lsls	r0, r3, #21
 8009c04:	d4e1      	bmi.n	8009bca <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009c06:	f7ff fa85 	bl	8009114 <HAL_GetTick>
 8009c0a:	eba0 0009 	sub.w	r0, r0, r9
 8009c0e:	4582      	cmp	sl, r0
 8009c10:	f0c0 808f 	bcc.w	8009d32 <I2C_RequestMemoryRead+0x252>
 8009c14:	f1ba 0f00 	cmp.w	sl, #0
 8009c18:	f000 808b 	beq.w	8009d32 <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009c1c:	6834      	ldr	r4, [r6, #0]
 8009c1e:	e77e      	b.n	8009b1e <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8009c20:	f1b8 0f01 	cmp.w	r8, #1
 8009c24:	d10f      	bne.n	8009c46 <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8009c26:	b2ff      	uxtb	r7, r7
 8009c28:	6127      	str	r7, [r4, #16]
 8009c2a:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009c2e:	d16e      	bne.n	8009d0e <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009c30:	6963      	ldr	r3, [r4, #20]
 8009c32:	061b      	lsls	r3, r3, #24
 8009c34:	d41a      	bmi.n	8009c6c <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009c36:	6963      	ldr	r3, [r4, #20]
 8009c38:	055f      	lsls	r7, r3, #21
 8009c3a:	d5f9      	bpl.n	8009c30 <I2C_RequestMemoryRead+0x150>
 8009c3c:	e78a      	b.n	8009b54 <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8009c3e:	f44f 7300 	mov.w	r3, #512	; 0x200
 8009c42:	6433      	str	r3, [r6, #64]	; 0x40
 8009c44:	e7bd      	b.n	8009bc2 <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8009c46:	0a3b      	lsrs	r3, r7, #8
 8009c48:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009c4a:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009c4e:	d17e      	bne.n	8009d4e <I2C_RequestMemoryRead+0x26e>
 8009c50:	6963      	ldr	r3, [r4, #20]
 8009c52:	061d      	lsls	r5, r3, #24
 8009c54:	d4e7      	bmi.n	8009c26 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009c56:	6963      	ldr	r3, [r4, #20]
 8009c58:	0558      	lsls	r0, r3, #21
 8009c5a:	d5f9      	bpl.n	8009c50 <I2C_RequestMemoryRead+0x170>
 8009c5c:	e77a      	b.n	8009b54 <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009c5e:	6832      	ldr	r2, [r6, #0]
 8009c60:	6813      	ldr	r3, [r2, #0]
 8009c62:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 8009c66:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009c68:	6013      	str	r3, [r2, #0]
 8009c6a:	e7ab      	b.n	8009bc4 <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009c6c:	6823      	ldr	r3, [r4, #0]
 8009c6e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8009c72:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 8009c74:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009c78:	d113      	bne.n	8009ca2 <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009c7a:	6963      	ldr	r3, [r4, #20]
 8009c7c:	07d8      	lsls	r0, r3, #31
 8009c7e:	d5fc      	bpl.n	8009c7a <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8009c80:	f04b 0301 	orr.w	r3, fp, #1
 8009c84:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 8009c86:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009c8a:	d003      	beq.n	8009c94 <I2C_RequestMemoryRead+0x1b4>
 8009c8c:	e02b      	b.n	8009ce6 <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009c8e:	6963      	ldr	r3, [r4, #20]
 8009c90:	055b      	lsls	r3, r3, #21
 8009c92:	d49a      	bmi.n	8009bca <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009c94:	6963      	ldr	r3, [r4, #20]
 8009c96:	43db      	mvns	r3, r3
 8009c98:	f013 0302 	ands.w	r3, r3, #2
 8009c9c:	d1f7      	bne.n	8009c8e <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 8009c9e:	4618      	mov	r0, r3
 8009ca0:	e790      	b.n	8009bc4 <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009ca2:	6963      	ldr	r3, [r4, #20]
 8009ca4:	07d9      	lsls	r1, r3, #31
 8009ca6:	d4eb      	bmi.n	8009c80 <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009ca8:	f7ff fa34 	bl	8009114 <HAL_GetTick>
 8009cac:	eba0 0009 	sub.w	r0, r0, r9
 8009cb0:	4582      	cmp	sl, r0
 8009cb2:	f4ff af75 	bcc.w	8009ba0 <I2C_RequestMemoryRead+0xc0>
 8009cb6:	f1ba 0f00 	cmp.w	sl, #0
 8009cba:	f43f af71 	beq.w	8009ba0 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009cbe:	6834      	ldr	r4, [r6, #0]
 8009cc0:	e7d8      	b.n	8009c74 <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009cc2:	6963      	ldr	r3, [r4, #20]
 8009cc4:	061a      	lsls	r2, r3, #24
 8009cc6:	d4ab      	bmi.n	8009c20 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009cc8:	6963      	ldr	r3, [r4, #20]
 8009cca:	055d      	lsls	r5, r3, #21
 8009ccc:	f53f af42 	bmi.w	8009b54 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009cd0:	f7ff fa20 	bl	8009114 <HAL_GetTick>
 8009cd4:	eba0 0009 	sub.w	r0, r0, r9
 8009cd8:	4582      	cmp	sl, r0
 8009cda:	d34b      	bcc.n	8009d74 <I2C_RequestMemoryRead+0x294>
 8009cdc:	f1ba 0f00 	cmp.w	sl, #0
 8009ce0:	d048      	beq.n	8009d74 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009ce2:	6834      	ldr	r4, [r6, #0]
 8009ce4:	e72c      	b.n	8009b40 <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009ce6:	6963      	ldr	r3, [r4, #20]
 8009ce8:	43db      	mvns	r3, r3
 8009cea:	f013 0302 	ands.w	r3, r3, #2
 8009cee:	d0d6      	beq.n	8009c9e <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009cf0:	6963      	ldr	r3, [r4, #20]
 8009cf2:	055a      	lsls	r2, r3, #21
 8009cf4:	f53f af69 	bmi.w	8009bca <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009cf8:	f7ff fa0c 	bl	8009114 <HAL_GetTick>
 8009cfc:	eba0 0009 	sub.w	r0, r0, r9
 8009d00:	4582      	cmp	sl, r0
 8009d02:	d316      	bcc.n	8009d32 <I2C_RequestMemoryRead+0x252>
 8009d04:	f1ba 0f00 	cmp.w	sl, #0
 8009d08:	d013      	beq.n	8009d32 <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009d0a:	6834      	ldr	r4, [r6, #0]
 8009d0c:	e7bb      	b.n	8009c86 <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009d0e:	6963      	ldr	r3, [r4, #20]
 8009d10:	061d      	lsls	r5, r3, #24
 8009d12:	d4ab      	bmi.n	8009c6c <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009d14:	6963      	ldr	r3, [r4, #20]
 8009d16:	055a      	lsls	r2, r3, #21
 8009d18:	f53f af1c 	bmi.w	8009b54 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009d1c:	f7ff f9fa 	bl	8009114 <HAL_GetTick>
 8009d20:	eba0 0009 	sub.w	r0, r0, r9
 8009d24:	4582      	cmp	sl, r0
 8009d26:	d325      	bcc.n	8009d74 <I2C_RequestMemoryRead+0x294>
 8009d28:	f1ba 0f00 	cmp.w	sl, #0
 8009d2c:	d022      	beq.n	8009d74 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009d2e:	6834      	ldr	r4, [r6, #0]
 8009d30:	e77b      	b.n	8009c2a <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009d32:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8009d34:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009d36:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8009d38:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009d3c:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009d40:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009d42:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009d46:	f043 0320 	orr.w	r3, r3, #32
 8009d4a:	6433      	str	r3, [r6, #64]	; 0x40
 8009d4c:	e716      	b.n	8009b7c <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009d4e:	6963      	ldr	r3, [r4, #20]
 8009d50:	0619      	lsls	r1, r3, #24
 8009d52:	f53f af68 	bmi.w	8009c26 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009d56:	6963      	ldr	r3, [r4, #20]
 8009d58:	055b      	lsls	r3, r3, #21
 8009d5a:	f53f aefb 	bmi.w	8009b54 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009d5e:	f7ff f9d9 	bl	8009114 <HAL_GetTick>
 8009d62:	eba0 0009 	sub.w	r0, r0, r9
 8009d66:	4582      	cmp	sl, r0
 8009d68:	d304      	bcc.n	8009d74 <I2C_RequestMemoryRead+0x294>
 8009d6a:	f1ba 0f00 	cmp.w	sl, #0
 8009d6e:	d001      	beq.n	8009d74 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009d70:	6834      	ldr	r4, [r6, #0]
 8009d72:	e76a      	b.n	8009c4a <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009d74:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009d76:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009d78:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009d7a:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009d7e:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009d82:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009d84:	4313      	orrs	r3, r2
 8009d86:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 8009d88:	e6f2      	b.n	8009b70 <I2C_RequestMemoryRead+0x90>
 8009d8a:	bf00      	nop

08009d8c <HAL_I2C_Init>:
  if (hi2c == NULL)
 8009d8c:	2800      	cmp	r0, #0
 8009d8e:	f000 80b9 	beq.w	8009f04 <HAL_I2C_Init+0x178>
{
 8009d92:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8009d94:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8009d98:	4604      	mov	r4, r0
 8009d9a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8009d9e:	2b00      	cmp	r3, #0
 8009da0:	f000 8098 	beq.w	8009ed4 <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 8009da4:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 8009da6:	2224      	movs	r2, #36	; 0x24
 8009da8:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8009dac:	681a      	ldr	r2, [r3, #0]
 8009dae:	f022 0201 	bic.w	r2, r2, #1
 8009db2:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8009db4:	681a      	ldr	r2, [r3, #0]
 8009db6:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8009dba:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8009dbc:	681a      	ldr	r2, [r3, #0]
 8009dbe:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8009dc2:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8009dc4:	f001 fe70 	bl	800baa8 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8009dc8:	6865      	ldr	r5, [r4, #4]
 8009dca:	4b4f      	ldr	r3, [pc, #316]	; (8009f08 <HAL_I2C_Init+0x17c>)
 8009dcc:	429d      	cmp	r5, r3
 8009dce:	d84f      	bhi.n	8009e70 <HAL_I2C_Init+0xe4>
 8009dd0:	4b4e      	ldr	r3, [pc, #312]	; (8009f0c <HAL_I2C_Init+0x180>)
 8009dd2:	4298      	cmp	r0, r3
 8009dd4:	d97c      	bls.n	8009ed0 <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 8009dd6:	4b4e      	ldr	r3, [pc, #312]	; (8009f10 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009dd8:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 8009dda:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009dde:	1e43      	subs	r3, r0, #1
 8009de0:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009de4:	6822      	ldr	r2, [r4, #0]
 8009de6:	6851      	ldr	r1, [r2, #4]
 8009de8:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009dec:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 8009df0:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009df2:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 8009df4:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009df8:	f10c 0c01 	add.w	ip, ip, #1
 8009dfc:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009e00:	ea41 010c 	orr.w	r1, r1, ip
 8009e04:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009e06:	69d1      	ldr	r1, [r2, #28]
 8009e08:	f640 70fc 	movw	r0, #4092	; 0xffc
 8009e0c:	3301      	adds	r3, #1
 8009e0e:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8009e12:	4203      	tst	r3, r0
 8009e14:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009e18:	d161      	bne.n	8009ede <HAL_I2C_Init+0x152>
 8009e1a:	2304      	movs	r3, #4
 8009e1c:	430b      	orrs	r3, r1
 8009e1e:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8009e20:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8009e24:	6811      	ldr	r1, [r2, #0]
 8009e26:	4303      	orrs	r3, r0
 8009e28:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8009e2c:	430b      	orrs	r3, r1
 8009e2e:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8009e30:	6891      	ldr	r1, [r2, #8]
 8009e32:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8009e36:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8009e3a:	4303      	orrs	r3, r0
 8009e3c:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009e40:	430b      	orrs	r3, r1
 8009e42:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8009e44:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8009e48:	68d1      	ldr	r1, [r2, #12]
 8009e4a:	4303      	orrs	r3, r0
 8009e4c:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009e50:	430b      	orrs	r3, r1
 8009e52:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8009e54:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009e56:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 8009e58:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 8009e5c:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 8009e5e:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009e60:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8009e62:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8009e66:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8009e68:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 8009e6c:	4618      	mov	r0, r3
}
 8009e6e:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8009e70:	4b28      	ldr	r3, [pc, #160]	; (8009f14 <HAL_I2C_Init+0x188>)
 8009e72:	4298      	cmp	r0, r3
 8009e74:	d92c      	bls.n	8009ed0 <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009e76:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 8009e78:	4b25      	ldr	r3, [pc, #148]	; (8009f10 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009e7a:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009e7c:	4e26      	ldr	r6, [pc, #152]	; (8009f18 <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 8009e7e:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009e82:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009e86:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 8009e8a:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8009e8c:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009e90:	f44f 7196 	mov.w	r1, #300	; 0x12c
 8009e94:	fb01 f303 	mul.w	r3, r1, r3
 8009e98:	fba6 6303 	umull	r6, r3, r6, r3
 8009e9c:	6a11      	ldr	r1, [r2, #32]
 8009e9e:	099b      	lsrs	r3, r3, #6
 8009ea0:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009ea4:	3301      	adds	r3, #1
 8009ea6:	430b      	orrs	r3, r1
 8009ea8:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009eaa:	69d1      	ldr	r1, [r2, #28]
 8009eac:	68a3      	ldr	r3, [r4, #8]
 8009eae:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8009eb2:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009eb6:	b9ab      	cbnz	r3, 8009ee4 <HAL_I2C_Init+0x158>
 8009eb8:	1e43      	subs	r3, r0, #1
 8009eba:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8009ebe:	fbb3 f3f5 	udiv	r3, r3, r5
 8009ec2:	3301      	adds	r3, #1
 8009ec4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009ec8:	b1d3      	cbz	r3, 8009f00 <HAL_I2C_Init+0x174>
 8009eca:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8009ece:	e7a5      	b.n	8009e1c <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 8009ed0:	2001      	movs	r0, #1
}
 8009ed2:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 8009ed4:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8009ed8:	f7f8 f806 	bl	8001ee8 <HAL_I2C_MspInit>
 8009edc:	e762      	b.n	8009da4 <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009ede:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009ee2:	e79b      	b.n	8009e1c <HAL_I2C_Init+0x90>
 8009ee4:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 8009ee8:	1e43      	subs	r3, r0, #1
 8009eea:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 8009eee:	fbb3 f3f5 	udiv	r3, r3, r5
 8009ef2:	3301      	adds	r3, #1
 8009ef4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009ef8:	b113      	cbz	r3, 8009f00 <HAL_I2C_Init+0x174>
 8009efa:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8009efe:	e78d      	b.n	8009e1c <HAL_I2C_Init+0x90>
 8009f00:	2301      	movs	r3, #1
 8009f02:	e78b      	b.n	8009e1c <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 8009f04:	2001      	movs	r0, #1
}
 8009f06:	4770      	bx	lr
 8009f08:	000186a0 	.word	0x000186a0
 8009f0c:	001e847f 	.word	0x001e847f
 8009f10:	431bde83 	.word	0x431bde83
 8009f14:	003d08ff 	.word	0x003d08ff
 8009f18:	10624dd3 	.word	0x10624dd3

08009f1c <HAL_I2C_Mem_Write>:
{
 8009f1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009f20:	4604      	mov	r4, r0
 8009f22:	b083      	sub	sp, #12
 8009f24:	4699      	mov	r9, r3
 8009f26:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 8009f2a:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8009f2c:	460f      	mov	r7, r1
 8009f2e:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8009f30:	f7ff f8f0 	bl	8009114 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8009f34:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8009f38:	2b20      	cmp	r3, #32
 8009f3a:	d004      	beq.n	8009f46 <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 8009f3c:	2702      	movs	r7, #2
}
 8009f3e:	4638      	mov	r0, r7
 8009f40:	b003      	add	sp, #12
 8009f42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009f46:	4605      	mov	r5, r0
 8009f48:	e005      	b.n	8009f56 <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009f4a:	f7ff f8e3 	bl	8009114 <HAL_GetTick>
 8009f4e:	1b40      	subs	r0, r0, r5
 8009f50:	2819      	cmp	r0, #25
 8009f52:	f200 80a8 	bhi.w	800a0a6 <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009f56:	6820      	ldr	r0, [r4, #0]
 8009f58:	6983      	ldr	r3, [r0, #24]
 8009f5a:	ea6f 0c03 	mvn.w	ip, r3
 8009f5e:	f01c 0b02 	ands.w	fp, ip, #2
 8009f62:	d0f2      	beq.n	8009f4a <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 8009f64:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8009f68:	2b01      	cmp	r3, #1
 8009f6a:	d0e7      	beq.n	8009f3c <HAL_I2C_Mem_Write+0x20>
 8009f6c:	2301      	movs	r3, #1
 8009f6e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8009f72:	6803      	ldr	r3, [r0, #0]
 8009f74:	07db      	lsls	r3, r3, #31
 8009f76:	d572      	bpl.n	800a05e <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009f78:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8009f7a:	6807      	ldr	r7, [r0, #0]
 8009f7c:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 8009f80:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 8009f82:	980c      	ldr	r0, [sp, #48]	; 0x30
 8009f84:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8009f86:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009f88:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8009f8c:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8009f90:	2040      	movs	r0, #64	; 0x40
 8009f92:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009f96:	2000      	movs	r0, #0
 8009f98:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 8009f9a:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8009f9e:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 8009fa0:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8009fa2:	4856      	ldr	r0, [pc, #344]	; (800a0fc <HAL_I2C_Mem_Write+0x1e0>)
 8009fa4:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009fa6:	464b      	mov	r3, r9
 8009fa8:	4642      	mov	r2, r8
 8009faa:	4620      	mov	r0, r4
 8009fac:	f7ff fca4 	bl	80098f8 <I2C_RequestMemoryWrite>
 8009fb0:	4607      	mov	r7, r0
 8009fb2:	bb00      	cbnz	r0, 8009ff6 <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 8009fb4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8009fb6:	2b00      	cmp	r3, #0
 8009fb8:	f000 809e 	beq.w	800a0f8 <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009fbc:	6823      	ldr	r3, [r4, #0]
 8009fbe:	1c72      	adds	r2, r6, #1
 8009fc0:	d159      	bne.n	800a076 <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009fc2:	695a      	ldr	r2, [r3, #20]
 8009fc4:	0610      	lsls	r0, r2, #24
 8009fc6:	d41b      	bmi.n	800a000 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009fc8:	695a      	ldr	r2, [r3, #20]
 8009fca:	0551      	lsls	r1, r2, #21
 8009fcc:	d5f9      	bpl.n	8009fc2 <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009fce:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009fd0:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 8009fd4:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009fd6:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009fd8:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8009fda:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009fde:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009fe2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009fe4:	f043 0304 	orr.w	r3, r3, #4
 8009fe8:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009fea:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 8009fec:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009fee:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 8009ff0:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009ff4:	d038      	beq.n	800a068 <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 8009ff6:	2701      	movs	r7, #1
}
 8009ff8:	4638      	mov	r0, r7
 8009ffa:	b003      	add	sp, #12
 8009ffc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a000:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 800a004:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a008:	4661      	mov	r1, ip
      hi2c->XferSize--;
 800a00a:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a00e:	f811 2b01 	ldrb.w	r2, [r1], #1
 800a012:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 800a014:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a016:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a018:	3a01      	subs	r2, #1
 800a01a:	b292      	uxth	r2, r2
 800a01c:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800a01e:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800a020:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 800a022:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800a024:	0740      	lsls	r0, r0, #29
 800a026:	d517      	bpl.n	800a058 <HAL_I2C_Mem_Write+0x13c>
 800a028:	b942      	cbnz	r2, 800a03c <HAL_I2C_Mem_Write+0x120>
 800a02a:	1c72      	adds	r2, r6, #1
 800a02c:	d156      	bne.n	800a0dc <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a02e:	695a      	ldr	r2, [r3, #20]
 800a030:	0750      	lsls	r0, r2, #29
 800a032:	d446      	bmi.n	800a0c2 <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a034:	695a      	ldr	r2, [r3, #20]
 800a036:	0551      	lsls	r1, r2, #21
 800a038:	d5f9      	bpl.n	800a02e <HAL_I2C_Mem_Write+0x112>
 800a03a:	e7c8      	b.n	8009fce <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a03c:	f89c 1001 	ldrb.w	r1, [ip, #1]
 800a040:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 800a042:	f10c 0102 	add.w	r1, ip, #2
 800a046:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800a048:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 800a04a:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 800a04e:	3901      	subs	r1, #1
        hi2c->XferSize--;
 800a050:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 800a052:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 800a054:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800a056:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800a058:	2a00      	cmp	r2, #0
 800a05a:	d1b0      	bne.n	8009fbe <HAL_I2C_Mem_Write+0xa2>
 800a05c:	e7e5      	b.n	800a02a <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 800a05e:	6803      	ldr	r3, [r0, #0]
 800a060:	f043 0301 	orr.w	r3, r3, #1
 800a064:	6003      	str	r3, [r0, #0]
 800a066:	e787      	b.n	8009f78 <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a068:	6822      	ldr	r2, [r4, #0]
 800a06a:	6813      	ldr	r3, [r2, #0]
 800a06c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800a070:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a072:	6013      	str	r3, [r2, #0]
 800a074:	e763      	b.n	8009f3e <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a076:	695a      	ldr	r2, [r3, #20]
 800a078:	0612      	lsls	r2, r2, #24
 800a07a:	d4c1      	bmi.n	800a000 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a07c:	695a      	ldr	r2, [r3, #20]
 800a07e:	0551      	lsls	r1, r2, #21
 800a080:	d4a5      	bmi.n	8009fce <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a082:	f7ff f847 	bl	8009114 <HAL_GetTick>
 800a086:	1b40      	subs	r0, r0, r5
 800a088:	4286      	cmp	r6, r0
 800a08a:	d301      	bcc.n	800a090 <HAL_I2C_Mem_Write+0x174>
 800a08c:	2e00      	cmp	r6, #0
 800a08e:	d195      	bne.n	8009fbc <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a090:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a092:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a094:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a096:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a09a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a09e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a0a0:	4313      	orrs	r3, r2
 800a0a2:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 800a0a4:	e7a1      	b.n	8009fea <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 800a0a6:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a0a8:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a0ac:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a0b0:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a0b4:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a0b6:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a0ba:	f043 0320 	orr.w	r3, r3, #32
 800a0be:	6423      	str	r3, [r4, #64]	; 0x40
 800a0c0:	e73c      	b.n	8009f3c <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a0c2:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800a0c4:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a0c6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 800a0ca:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a0cc:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800a0ce:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800a0d2:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800a0d6:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 800a0da:	e730      	b.n	8009f3e <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a0dc:	695a      	ldr	r2, [r3, #20]
 800a0de:	0752      	lsls	r2, r2, #29
 800a0e0:	d4ef      	bmi.n	800a0c2 <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a0e2:	695a      	ldr	r2, [r3, #20]
 800a0e4:	0551      	lsls	r1, r2, #21
 800a0e6:	f53f af72 	bmi.w	8009fce <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a0ea:	f7ff f813 	bl	8009114 <HAL_GetTick>
 800a0ee:	1b40      	subs	r0, r0, r5
 800a0f0:	4286      	cmp	r6, r0
 800a0f2:	d3cd      	bcc.n	800a090 <HAL_I2C_Mem_Write+0x174>
 800a0f4:	2e00      	cmp	r6, #0
 800a0f6:	d0cb      	beq.n	800a090 <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a0f8:	6823      	ldr	r3, [r4, #0]
 800a0fa:	e796      	b.n	800a02a <HAL_I2C_Mem_Write+0x10e>
 800a0fc:	ffff0000 	.word	0xffff0000

0800a100 <HAL_I2C_Mem_Read>:
{
 800a100:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a104:	4604      	mov	r4, r0
 800a106:	b087      	sub	sp, #28
 800a108:	4699      	mov	r9, r3
 800a10a:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 800a10e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800a110:	460f      	mov	r7, r1
 800a112:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800a114:	f7fe fffe 	bl	8009114 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800a118:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800a11c:	2b20      	cmp	r3, #32
 800a11e:	d004      	beq.n	800a12a <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 800a120:	2702      	movs	r7, #2
}
 800a122:	4638      	mov	r0, r7
 800a124:	b007      	add	sp, #28
 800a126:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a12a:	4606      	mov	r6, r0
 800a12c:	e005      	b.n	800a13a <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a12e:	f7fe fff1 	bl	8009114 <HAL_GetTick>
 800a132:	1b80      	subs	r0, r0, r6
 800a134:	2819      	cmp	r0, #25
 800a136:	f200 80d2 	bhi.w	800a2de <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a13a:	f8d4 c000 	ldr.w	ip, [r4]
 800a13e:	f8dc 0018 	ldr.w	r0, [ip, #24]
 800a142:	43c0      	mvns	r0, r0
 800a144:	f010 0b02 	ands.w	fp, r0, #2
 800a148:	d0f1      	beq.n	800a12e <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 800a14a:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800a14e:	2b01      	cmp	r3, #1
 800a150:	d0e6      	beq.n	800a120 <HAL_I2C_Mem_Read+0x20>
 800a152:	2301      	movs	r3, #1
 800a154:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800a158:	f8dc 3000 	ldr.w	r3, [ip]
 800a15c:	07d9      	lsls	r1, r3, #31
 800a15e:	d537      	bpl.n	800a1d0 <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800a160:	f8dc 0000 	ldr.w	r0, [ip]
 800a164:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 800a168:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 800a16c:	9810      	ldr	r0, [sp, #64]	; 0x40
 800a16e:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800a170:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a172:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800a176:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800a17a:	2040      	movs	r0, #64	; 0x40
 800a17c:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a180:	2000      	movs	r0, #0
 800a182:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800a184:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800a188:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800a18a:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800a18c:	4893      	ldr	r0, [pc, #588]	; (800a3dc <HAL_I2C_Mem_Read+0x2dc>)
 800a18e:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a190:	4639      	mov	r1, r7
 800a192:	464b      	mov	r3, r9
 800a194:	4642      	mov	r2, r8
 800a196:	4620      	mov	r0, r4
 800a198:	f7ff fca2 	bl	8009ae0 <I2C_RequestMemoryRead>
 800a19c:	4607      	mov	r7, r0
 800a19e:	2800      	cmp	r0, #0
 800a1a0:	f040 80ab 	bne.w	800a2fa <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 800a1a4:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 800a1a6:	b9d2      	cbnz	r2, 800a1de <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a1a8:	6823      	ldr	r3, [r4, #0]
 800a1aa:	9002      	str	r0, [sp, #8]
 800a1ac:	695a      	ldr	r2, [r3, #20]
 800a1ae:	9202      	str	r2, [sp, #8]
 800a1b0:	699a      	ldr	r2, [r3, #24]
 800a1b2:	9202      	str	r2, [sp, #8]
 800a1b4:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a1b6:	681a      	ldr	r2, [r3, #0]
 800a1b8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a1bc:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800a1be:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800a1c0:	2220      	movs	r2, #32
 800a1c2:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800a1c6:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800a1ca:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800a1ce:	e7a8      	b.n	800a122 <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 800a1d0:	f8dc 3000 	ldr.w	r3, [ip]
 800a1d4:	f043 0301 	orr.w	r3, r3, #1
 800a1d8:	f8cc 3000 	str.w	r3, [ip]
 800a1dc:	e7c0      	b.n	800a160 <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 800a1de:	2a01      	cmp	r2, #1
 800a1e0:	f000 812c 	beq.w	800a43c <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 800a1e4:	2a02      	cmp	r2, #2
 800a1e6:	f000 80bd 	beq.w	800a364 <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a1ea:	6823      	ldr	r3, [r4, #0]
 800a1ec:	9005      	str	r0, [sp, #20]
 800a1ee:	6959      	ldr	r1, [r3, #20]
 800a1f0:	9105      	str	r1, [sp, #20]
 800a1f2:	6999      	ldr	r1, [r3, #24]
 800a1f4:	9105      	str	r1, [sp, #20]
 800a1f6:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 800a1f8:	2a03      	cmp	r2, #3
 800a1fa:	d849      	bhi.n	800a290 <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 800a1fc:	2a01      	cmp	r2, #1
 800a1fe:	f000 80eb 	beq.w	800a3d8 <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 800a202:	2a02      	cmp	r2, #2
 800a204:	f000 8089 	beq.w	800a31a <HAL_I2C_Mem_Read+0x21a>
 800a208:	1c69      	adds	r1, r5, #1
 800a20a:	f040 80bb 	bne.w	800a384 <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a20e:	695a      	ldr	r2, [r3, #20]
 800a210:	0752      	lsls	r2, r2, #29
 800a212:	d5fc      	bpl.n	800a20e <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a214:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a216:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a218:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a21c:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a21e:	691b      	ldr	r3, [r3, #16]
 800a220:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800a222:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800a224:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a226:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a228:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800a22a:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800a22c:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800a22e:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800a230:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a232:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a234:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800a236:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a238:	6822      	ldr	r2, [r4, #0]
 800a23a:	f040 80af 	bne.w	800a39c <HAL_I2C_Mem_Read+0x29c>
 800a23e:	6953      	ldr	r3, [r2, #20]
 800a240:	075b      	lsls	r3, r3, #29
 800a242:	d5fc      	bpl.n	800a23e <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a244:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a246:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a248:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800a24c:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a24e:	6913      	ldr	r3, [r2, #16]
 800a250:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800a252:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800a254:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800a256:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a258:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 800a25a:	3b01      	subs	r3, #1
 800a25c:	b29b      	uxth	r3, r3
 800a25e:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a260:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 800a262:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 800a264:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 800a268:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800a26a:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a26e:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 800a270:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a272:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800a274:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a276:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800a278:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800a27a:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800a27c:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800a27e:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800a280:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a282:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a284:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800a286:	2a00      	cmp	r2, #0
 800a288:	d099      	beq.n	800a1be <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 800a28a:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a28c:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 800a28e:	d9b5      	bls.n	800a1fc <HAL_I2C_Mem_Read+0xfc>
 800a290:	b95d      	cbnz	r5, 800a2aa <HAL_I2C_Mem_Read+0x1aa>
 800a292:	e0c5      	b.n	800a420 <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800a294:	695a      	ldr	r2, [r3, #20]
 800a296:	06d0      	lsls	r0, r2, #27
 800a298:	f100 80b2 	bmi.w	800a400 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a29c:	f7fe ff3a 	bl	8009114 <HAL_GetTick>
 800a2a0:	1b80      	subs	r0, r0, r6
 800a2a2:	4285      	cmp	r5, r0
 800a2a4:	f0c0 8086 	bcc.w	800a3b4 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a2a8:	6823      	ldr	r3, [r4, #0]
 800a2aa:	695a      	ldr	r2, [r3, #20]
 800a2ac:	0652      	lsls	r2, r2, #25
 800a2ae:	d5f1      	bpl.n	800a294 <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a2b0:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a2b2:	691b      	ldr	r3, [r3, #16]
 800a2b4:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 800a2b6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a2b8:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 800a2ba:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800a2bc:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800a2be:	3b01      	subs	r3, #1
 800a2c0:	b29b      	uxth	r3, r3
 800a2c2:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a2c4:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 800a2c6:	3a01      	subs	r2, #1
 800a2c8:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 800a2ca:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a2ce:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 800a2d0:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800a2d2:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a2d6:	d5d6      	bpl.n	800a286 <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a2d8:	6903      	ldr	r3, [r0, #16]
 800a2da:	704b      	strb	r3, [r1, #1]
 800a2dc:	e036      	b.n	800a34c <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 800a2de:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a2e0:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a2e4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a2e8:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a2ec:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a2ee:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a2f2:	f043 0320 	orr.w	r3, r3, #32
 800a2f6:	6423      	str	r3, [r4, #64]	; 0x40
 800a2f8:	e712      	b.n	800a120 <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 800a2fa:	2701      	movs	r7, #1
}
 800a2fc:	4638      	mov	r0, r7
 800a2fe:	b007      	add	sp, #28
 800a300:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a304:	695a      	ldr	r2, [r3, #20]
 800a306:	0750      	lsls	r0, r2, #29
 800a308:	d40c      	bmi.n	800a324 <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a30a:	f7fe ff03 	bl	8009114 <HAL_GetTick>
 800a30e:	1b80      	subs	r0, r0, r6
 800a310:	4285      	cmp	r5, r0
 800a312:	d34f      	bcc.n	800a3b4 <HAL_I2C_Mem_Read+0x2b4>
 800a314:	2d00      	cmp	r5, #0
 800a316:	d04d      	beq.n	800a3b4 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a318:	6823      	ldr	r3, [r4, #0]
 800a31a:	1c69      	adds	r1, r5, #1
 800a31c:	d1f2      	bne.n	800a304 <HAL_I2C_Mem_Read+0x204>
 800a31e:	695a      	ldr	r2, [r3, #20]
 800a320:	0752      	lsls	r2, r2, #29
 800a322:	d5fc      	bpl.n	800a31e <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a324:	681a      	ldr	r2, [r3, #0]
 800a326:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a32a:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a32c:	691a      	ldr	r2, [r3, #16]
 800a32e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a330:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 800a332:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800a334:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800a336:	3b01      	subs	r3, #1
 800a338:	b29b      	uxth	r3, r3
 800a33a:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800a33c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800a33e:	3b01      	subs	r3, #1
 800a340:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a342:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800a344:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a346:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 800a348:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a34a:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 800a34c:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a34e:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800a350:	3301      	adds	r3, #1
 800a352:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800a354:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800a356:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800a358:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 800a35a:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800a35c:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 800a35e:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a360:	8563      	strh	r3, [r4, #42]	; 0x2a
 800a362:	e790      	b.n	800a286 <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a364:	6823      	ldr	r3, [r4, #0]
 800a366:	6819      	ldr	r1, [r3, #0]
 800a368:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800a36c:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800a36e:	6819      	ldr	r1, [r3, #0]
 800a370:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 800a374:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a376:	9004      	str	r0, [sp, #16]
 800a378:	6959      	ldr	r1, [r3, #20]
 800a37a:	9104      	str	r1, [sp, #16]
 800a37c:	6999      	ldr	r1, [r3, #24]
 800a37e:	9104      	str	r1, [sp, #16]
 800a380:	9904      	ldr	r1, [sp, #16]
 800a382:	e739      	b.n	800a1f8 <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a384:	695a      	ldr	r2, [r3, #20]
 800a386:	0750      	lsls	r0, r2, #29
 800a388:	f53f af44 	bmi.w	800a214 <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a38c:	f7fe fec2 	bl	8009114 <HAL_GetTick>
 800a390:	1b80      	subs	r0, r0, r6
 800a392:	4285      	cmp	r5, r0
 800a394:	d30e      	bcc.n	800a3b4 <HAL_I2C_Mem_Read+0x2b4>
 800a396:	b16d      	cbz	r5, 800a3b4 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a398:	6823      	ldr	r3, [r4, #0]
 800a39a:	e735      	b.n	800a208 <HAL_I2C_Mem_Read+0x108>
 800a39c:	6953      	ldr	r3, [r2, #20]
 800a39e:	0758      	lsls	r0, r3, #29
 800a3a0:	f53f af50 	bmi.w	800a244 <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a3a4:	f7fe feb6 	bl	8009114 <HAL_GetTick>
 800a3a8:	1b80      	subs	r0, r0, r6
 800a3aa:	4285      	cmp	r5, r0
 800a3ac:	d302      	bcc.n	800a3b4 <HAL_I2C_Mem_Read+0x2b4>
 800a3ae:	2d00      	cmp	r5, #0
 800a3b0:	f47f af41 	bne.w	800a236 <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a3b4:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a3b6:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a3b8:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a3ba:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a3be:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a3c2:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a3c4:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800a3c8:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a3ca:	f043 0320 	orr.w	r3, r3, #32
}
 800a3ce:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a3d0:	6423      	str	r3, [r4, #64]	; 0x40
}
 800a3d2:	b007      	add	sp, #28
 800a3d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a3d8:	b95d      	cbnz	r5, 800a3f2 <HAL_I2C_Mem_Read+0x2f2>
 800a3da:	e02b      	b.n	800a434 <HAL_I2C_Mem_Read+0x334>
 800a3dc:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800a3e0:	695a      	ldr	r2, [r3, #20]
 800a3e2:	06d2      	lsls	r2, r2, #27
 800a3e4:	d40c      	bmi.n	800a400 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a3e6:	f7fe fe95 	bl	8009114 <HAL_GetTick>
 800a3ea:	1b80      	subs	r0, r0, r6
 800a3ec:	4285      	cmp	r5, r0
 800a3ee:	d3e1      	bcc.n	800a3b4 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a3f0:	6823      	ldr	r3, [r4, #0]
 800a3f2:	695a      	ldr	r2, [r3, #20]
 800a3f4:	0651      	lsls	r1, r2, #25
 800a3f6:	d5f3      	bpl.n	800a3e0 <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a3f8:	691a      	ldr	r2, [r3, #16]
 800a3fa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a3fc:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800a3fe:	e7a5      	b.n	800a34c <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a400:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800a402:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 800a406:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800a408:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a40a:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800a40c:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a410:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800a414:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a416:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800a418:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800a41c:	2701      	movs	r7, #1
 800a41e:	e680      	b.n	800a122 <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a420:	695a      	ldr	r2, [r3, #20]
 800a422:	0652      	lsls	r2, r2, #25
 800a424:	f53f af44 	bmi.w	800a2b0 <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800a428:	695a      	ldr	r2, [r3, #20]
 800a42a:	06d1      	lsls	r1, r2, #27
 800a42c:	d4e8      	bmi.n	800a400 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a42e:	f7fe fe71 	bl	8009114 <HAL_GetTick>
 800a432:	e7bf      	b.n	800a3b4 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a434:	695a      	ldr	r2, [r3, #20]
 800a436:	0650      	lsls	r0, r2, #25
 800a438:	d5f6      	bpl.n	800a428 <HAL_I2C_Mem_Read+0x328>
 800a43a:	e7dd      	b.n	800a3f8 <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a43c:	6823      	ldr	r3, [r4, #0]
 800a43e:	6819      	ldr	r1, [r3, #0]
 800a440:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800a444:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a446:	9003      	str	r0, [sp, #12]
 800a448:	6959      	ldr	r1, [r3, #20]
 800a44a:	9103      	str	r1, [sp, #12]
 800a44c:	6999      	ldr	r1, [r3, #24]
 800a44e:	9103      	str	r1, [sp, #12]
 800a450:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a452:	6819      	ldr	r1, [r3, #0]
 800a454:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800a458:	6019      	str	r1, [r3, #0]
 800a45a:	e6cd      	b.n	800a1f8 <HAL_I2C_Mem_Read+0xf8>

0800a45c <HAL_I2C_MasterTxCpltCallback>:
 800a45c:	4770      	bx	lr
 800a45e:	bf00      	nop

0800a460 <HAL_I2C_MasterRxCpltCallback>:
 800a460:	4770      	bx	lr
 800a462:	bf00      	nop

0800a464 <HAL_I2C_SlaveTxCpltCallback>:
 800a464:	4770      	bx	lr
 800a466:	bf00      	nop

0800a468 <HAL_I2C_SlaveRxCpltCallback>:
 800a468:	4770      	bx	lr
 800a46a:	bf00      	nop

0800a46c <HAL_I2C_AddrCallback>:
}
 800a46c:	4770      	bx	lr
 800a46e:	bf00      	nop

0800a470 <HAL_I2C_ListenCpltCallback>:
 800a470:	4770      	bx	lr
 800a472:	bf00      	nop

0800a474 <HAL_I2C_MemTxCpltCallback>:
 800a474:	4770      	bx	lr
 800a476:	bf00      	nop

0800a478 <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a478:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 800a47c:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 800a47e:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 800a480:	b959      	cbnz	r1, 800a49a <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800a482:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a484:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800a486:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a488:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800a48a:	d00d      	beq.n	800a4a8 <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 800a48c:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800a490:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 800a492:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a494:	3201      	adds	r2, #1
 800a496:	6502      	str	r2, [r0, #80]	; 0x50
 800a498:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 800a49a:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800a49c:	2901      	cmp	r1, #1
 800a49e:	d009      	beq.n	800a4b4 <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 800a4a0:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800a4a2:	2902      	cmp	r1, #2
 800a4a4:	d00e      	beq.n	800a4c4 <I2C_MemoryTransmit_TXE_BTF+0x4c>
 800a4a6:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a4a8:	b2d2      	uxtb	r2, r2
 800a4aa:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 800a4ac:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a4ae:	3202      	adds	r2, #2
 800a4b0:	6502      	str	r2, [r0, #80]	; 0x50
 800a4b2:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a4b4:	6c82      	ldr	r2, [r0, #72]	; 0x48
 800a4b6:	6801      	ldr	r1, [r0, #0]
 800a4b8:	b2d2      	uxtb	r2, r2
 800a4ba:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 800a4bc:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a4be:	3201      	adds	r2, #1
 800a4c0:	6502      	str	r2, [r0, #80]	; 0x50
 800a4c2:	4770      	bx	lr
 800a4c4:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 800a4c6:	2a22      	cmp	r2, #34	; 0x22
 800a4c8:	d01f      	beq.n	800a50a <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a4ca:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800a4cc:	b289      	uxth	r1, r1
 800a4ce:	b9c1      	cbnz	r1, 800a502 <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a4d0:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800a4d2:	b289      	uxth	r1, r1
 800a4d4:	2900      	cmp	r1, #0
 800a4d6:	d1e6      	bne.n	800a4a6 <I2C_MemoryTransmit_TXE_BTF+0x2e>
 800a4d8:	2a21      	cmp	r2, #33	; 0x21
 800a4da:	d1e4      	bne.n	800a4a6 <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a4dc:	6802      	ldr	r2, [r0, #0]
{
 800a4de:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a4e0:	6854      	ldr	r4, [r2, #4]
 800a4e2:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 800a4e6:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a4e8:	6814      	ldr	r4, [r2, #0]
 800a4ea:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 800a4ee:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 800a4f0:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800a4f2:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 800a4f4:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a4f8:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 800a4fc:	f7ff ffba 	bl	800a474 <HAL_I2C_MemTxCpltCallback>
}
 800a500:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a502:	2a21      	cmp	r2, #33	; 0x21
 800a504:	d00a      	beq.n	800a51c <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a506:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800a508:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 800a50a:	6801      	ldr	r1, [r0, #0]
 800a50c:	680a      	ldr	r2, [r1, #0]
 800a50e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a512:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 800a514:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a516:	3201      	adds	r2, #1
 800a518:	6502      	str	r2, [r0, #80]	; 0x50
 800a51a:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a51c:	6a41      	ldr	r1, [r0, #36]	; 0x24
 800a51e:	6802      	ldr	r2, [r0, #0]
 800a520:	f811 0b01 	ldrb.w	r0, [r1], #1
 800a524:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 800a526:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a528:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 800a52a:	3a01      	subs	r2, #1
 800a52c:	b292      	uxth	r2, r2
 800a52e:	855a      	strh	r2, [r3, #42]	; 0x2a
 800a530:	4770      	bx	lr
 800a532:	bf00      	nop

0800a534 <HAL_I2C_MemRxCpltCallback>:
 800a534:	4770      	bx	lr
 800a536:	bf00      	nop

0800a538 <HAL_I2C_ErrorCallback>:
 800a538:	4770      	bx	lr
 800a53a:	bf00      	nop

0800a53c <HAL_I2C_AbortCpltCallback>:
 800a53c:	4770      	bx	lr
 800a53e:	bf00      	nop

0800a540 <I2C_DMAAbort>:
{
 800a540:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a542:	4b3a      	ldr	r3, [pc, #232]	; (800a62c <I2C_DMAAbort+0xec>)
 800a544:	4a3a      	ldr	r2, [pc, #232]	; (800a630 <I2C_DMAAbort+0xf0>)
 800a546:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 800a548:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 800a54a:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a54c:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 800a54e:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a550:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 800a554:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a556:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a558:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800a55c:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a55e:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800a562:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a566:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a568:	9301      	str	r3, [sp, #4]
 800a56a:	e005      	b.n	800a578 <I2C_DMAAbort+0x38>
    count--;
 800a56c:	9b01      	ldr	r3, [sp, #4]
 800a56e:	3b01      	subs	r3, #1
 800a570:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800a572:	6813      	ldr	r3, [r2, #0]
 800a574:	059b      	lsls	r3, r3, #22
 800a576:	d506      	bpl.n	800a586 <I2C_DMAAbort+0x46>
    if (count == 0U)
 800a578:	9b01      	ldr	r3, [sp, #4]
 800a57a:	2b00      	cmp	r3, #0
 800a57c:	d1f6      	bne.n	800a56c <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800a57e:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800a580:	f043 0320 	orr.w	r3, r3, #32
 800a584:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 800a586:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800a588:	b34c      	cbz	r4, 800a5de <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 800a58a:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 800a58c:	2500      	movs	r5, #0
 800a58e:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 800a590:	b1f3      	cbz	r3, 800a5d0 <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a592:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800a594:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a596:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 800a59a:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 800a59c:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800a59e:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 800a5a0:	2400      	movs	r4, #0
 800a5a2:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 800a5a4:	6813      	ldr	r3, [r2, #0]
 800a5a6:	f023 0301 	bic.w	r3, r3, #1
 800a5aa:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 800a5ac:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800a5b0:	2b60      	cmp	r3, #96	; 0x60
 800a5b2:	d02a      	beq.n	800a60a <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a5b4:	f001 0128 	and.w	r1, r1, #40	; 0x28
 800a5b8:	2928      	cmp	r1, #40	; 0x28
 800a5ba:	d019      	beq.n	800a5f0 <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 800a5bc:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a5be:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800a5c0:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a5c4:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 800a5c8:	f7ff ffb6 	bl	800a538 <HAL_I2C_ErrorCallback>
}
 800a5cc:	b002      	add	sp, #8
 800a5ce:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a5d0:	6815      	ldr	r5, [r2, #0]
 800a5d2:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800a5d6:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800a5d8:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800a5da:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 800a5dc:	e7e2      	b.n	800a5a4 <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 800a5de:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800a5e0:	b1f3      	cbz	r3, 800a620 <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a5e2:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800a5e4:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a5e6:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800a5ea:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800a5ec:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800a5ee:	e7d7      	b.n	800a5a0 <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 800a5f0:	6813      	ldr	r3, [r2, #0]
 800a5f2:	f043 0301 	orr.w	r3, r3, #1
 800a5f6:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a5f8:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800a5fa:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a5fc:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800a600:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800a602:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a604:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 800a608:	e7de      	b.n	800a5c8 <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800a60a:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 800a60c:	2220      	movs	r2, #32
 800a60e:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800a612:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800a616:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 800a618:	f7ff ff90 	bl	800a53c <HAL_I2C_AbortCpltCallback>
}
 800a61c:	b002      	add	sp, #8
 800a61e:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a620:	6814      	ldr	r4, [r2, #0]
 800a622:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 800a626:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 800a628:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800a62a:	e7bb      	b.n	800a5a4 <I2C_DMAAbort+0x64>
 800a62c:	20000078 	.word	0x20000078
 800a630:	14f8b589 	.word	0x14f8b589

0800a634 <I2C_ITError>:
{
 800a634:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a636:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 800a63a:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a63e:	2b10      	cmp	r3, #16
{
 800a640:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a642:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a644:	d039      	beq.n	800a6ba <I2C_ITError+0x86>
 800a646:	b2d9      	uxtb	r1, r3
 800a648:	2940      	cmp	r1, #64	; 0x40
 800a64a:	d036      	beq.n	800a6ba <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a64c:	f002 0128 	and.w	r1, r2, #40	; 0x28
 800a650:	2928      	cmp	r1, #40	; 0x28
 800a652:	d03d      	beq.n	800a6d0 <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800a654:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800a656:	6859      	ldr	r1, [r3, #4]
 800a658:	0508      	lsls	r0, r1, #20
 800a65a:	d407      	bmi.n	800a66c <I2C_ITError+0x38>
 800a65c:	2a60      	cmp	r2, #96	; 0x60
 800a65e:	d005      	beq.n	800a66c <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 800a660:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a662:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800a664:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a668:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 800a66c:	2200      	movs	r2, #0
 800a66e:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a670:	685a      	ldr	r2, [r3, #4]
 800a672:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800a676:	d134      	bne.n	800a6e2 <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 800a678:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800a67c:	2960      	cmp	r1, #96	; 0x60
 800a67e:	d075      	beq.n	800a76c <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a680:	695a      	ldr	r2, [r3, #20]
 800a682:	0650      	lsls	r0, r2, #25
 800a684:	d505      	bpl.n	800a692 <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a686:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a688:	691b      	ldr	r3, [r3, #16]
 800a68a:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800a68c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a68e:	3301      	adds	r3, #1
 800a690:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 800a692:	4620      	mov	r0, r4
 800a694:	f7ff ff50 	bl	800a538 <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 800a698:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 800a69a:	0719      	lsls	r1, r3, #28
 800a69c:	d004      	beq.n	800a6a8 <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a69e:	6822      	ldr	r2, [r4, #0]
 800a6a0:	6853      	ldr	r3, [r2, #4]
 800a6a2:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800a6a6:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 800a6a8:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800a6ac:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a6ae:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 800a6b0:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800a6b2:	d501      	bpl.n	800a6b8 <I2C_ITError+0x84>
 800a6b4:	2b28      	cmp	r3, #40	; 0x28
 800a6b6:	d02f      	beq.n	800a718 <I2C_ITError+0xe4>
}
 800a6b8:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a6ba:	2a22      	cmp	r2, #34	; 0x22
 800a6bc:	d1c6      	bne.n	800a64c <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800a6be:	6823      	ldr	r3, [r4, #0]
 800a6c0:	681a      	ldr	r2, [r3, #0]
 800a6c2:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a6c6:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800a6c8:	685a      	ldr	r2, [r3, #4]
 800a6ca:	0512      	lsls	r2, r2, #20
 800a6cc:	d5c8      	bpl.n	800a660 <I2C_ITError+0x2c>
 800a6ce:	e7cd      	b.n	800a66c <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 800a6d0:	2300      	movs	r3, #0
 800a6d2:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800a6d4:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 800a6d6:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a6da:	685a      	ldr	r2, [r3, #4]
 800a6dc:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800a6e0:	d0ca      	beq.n	800a678 <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800a6e2:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800a6e4:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800a6e6:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a6ea:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800a6ec:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800a6f0:	2b01      	cmp	r3, #1
 800a6f2:	d01e      	beq.n	800a732 <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800a6f4:	4b28      	ldr	r3, [pc, #160]	; (800a798 <I2C_ITError+0x164>)
 800a6f6:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800a6f8:	f7fe fe2e 	bl	8009358 <HAL_DMA_Abort_IT>
 800a6fc:	2800      	cmp	r0, #0
 800a6fe:	d0cb      	beq.n	800a698 <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 800a700:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800a702:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 800a704:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800a706:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800a708:	f023 0301 	bic.w	r3, r3, #1
 800a70c:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800a70e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800a712:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a714:	4798      	blx	r3
 800a716:	e7bf      	b.n	800a698 <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 800a718:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 800a71a:	4920      	ldr	r1, [pc, #128]	; (800a79c <I2C_ITError+0x168>)
 800a71c:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 800a71e:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 800a720:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 800a722:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 800a724:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800a728:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 800a72c:	f7ff fea0 	bl	800a470 <HAL_I2C_ListenCpltCallback>
}
 800a730:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800a732:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a734:	4b18      	ldr	r3, [pc, #96]	; (800a798 <I2C_ITError+0x164>)
 800a736:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800a738:	f7fe fe0e 	bl	8009358 <HAL_DMA_Abort_IT>
 800a73c:	2800      	cmp	r0, #0
 800a73e:	d0ab      	beq.n	800a698 <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a740:	6823      	ldr	r3, [r4, #0]
 800a742:	695a      	ldr	r2, [r3, #20]
 800a744:	0651      	lsls	r1, r2, #25
 800a746:	d506      	bpl.n	800a756 <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a748:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a74a:	691b      	ldr	r3, [r3, #16]
 800a74c:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 800a74e:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800a750:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800a752:	3201      	adds	r2, #1
 800a754:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800a756:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800a758:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 800a75a:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800a75e:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800a760:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800a762:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800a766:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a768:	4798      	blx	r3
 800a76a:	e795      	b.n	800a698 <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 800a76c:	2120      	movs	r1, #32
 800a76e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a772:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a774:	695a      	ldr	r2, [r3, #20]
 800a776:	0652      	lsls	r2, r2, #25
 800a778:	d506      	bpl.n	800a788 <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a77a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a77c:	691b      	ldr	r3, [r3, #16]
 800a77e:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800a780:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800a782:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800a784:	3201      	adds	r2, #1
 800a786:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800a788:	681a      	ldr	r2, [r3, #0]
 800a78a:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 800a78e:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 800a790:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 800a792:	f7ff fed3 	bl	800a53c <HAL_I2C_AbortCpltCallback>
 800a796:	e77f      	b.n	800a698 <I2C_ITError+0x64>
 800a798:	0800a541 	.word	0x0800a541
 800a79c:	ffff0000 	.word	0xffff0000

0800a7a0 <HAL_I2C_EV_IRQHandler>:
{
 800a7a0:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800a7a2:	6803      	ldr	r3, [r0, #0]
{
 800a7a4:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800a7a6:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800a7a8:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a7aa:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a7ae:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800a7b2:	2910      	cmp	r1, #16
{
 800a7b4:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a7b6:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a7b8:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800a7bc:	d022      	beq.n	800a804 <HAL_I2C_EV_IRQHandler+0x64>
 800a7be:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800a7c2:	d01f      	beq.n	800a804 <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800a7c4:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800a7c6:	2900      	cmp	r1, #0
 800a7c8:	f000 8094 	beq.w	800a8f4 <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800a7cc:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 800a7ce:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a7d0:	f011 0602 	ands.w	r6, r1, #2
 800a7d4:	d059      	beq.n	800a88a <HAL_I2C_EV_IRQHandler+0xea>
 800a7d6:	0586      	lsls	r6, r0, #22
 800a7d8:	d559      	bpl.n	800a88e <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800a7da:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a7dc:	b102      	cbz	r2, 800a7e0 <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800a7de:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a7e0:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a7e4:	f002 0228 	and.w	r2, r2, #40	; 0x28
 800a7e8:	2a28      	cmp	r2, #40	; 0x28
 800a7ea:	f000 821e 	beq.w	800ac2a <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a7ee:	2200      	movs	r2, #0
 800a7f0:	920c      	str	r2, [sp, #48]	; 0x30
 800a7f2:	6959      	ldr	r1, [r3, #20]
 800a7f4:	910c      	str	r1, [sp, #48]	; 0x30
 800a7f6:	699b      	ldr	r3, [r3, #24]
 800a7f8:	930c      	str	r3, [sp, #48]	; 0x30
 800a7fa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 800a7fc:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 800a800:	b00e      	add	sp, #56	; 0x38
 800a802:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800a804:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800a806:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 800a808:	f011 0f01 	tst.w	r1, #1
 800a80c:	d11a      	bne.n	800a844 <HAL_I2C_EV_IRQHandler+0xa4>
 800a80e:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 800a812:	d0f5      	beq.n	800a800 <HAL_I2C_EV_IRQHandler+0x60>
 800a814:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 800a818:	d0f2      	beq.n	800a800 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a81a:	070d      	lsls	r5, r1, #28
 800a81c:	d56d      	bpl.n	800a8fa <HAL_I2C_EV_IRQHandler+0x15a>
 800a81e:	0585      	lsls	r5, r0, #22
 800a820:	f140 8083 	bpl.w	800a92a <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800a824:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800a826:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800a828:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800a82a:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800a82c:	2900      	cmp	r1, #0
 800a82e:	f000 81e3 	beq.w	800abf8 <HAL_I2C_EV_IRQHandler+0x458>
 800a832:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 800a834:	2a00      	cmp	r2, #0
 800a836:	f000 81df 	beq.w	800abf8 <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800a83a:	685a      	ldr	r2, [r3, #4]
 800a83c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800a840:	605a      	str	r2, [r3, #4]
 800a842:	e7dd      	b.n	800a800 <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a844:	0585      	lsls	r5, r0, #22
 800a846:	d56e      	bpl.n	800a926 <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 800a848:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a84a:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 800a84e:	f000 81e9 	beq.w	800ac24 <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 800a852:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a854:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 800a858:	bf04      	itt	eq
 800a85a:	2208      	moveq	r2, #8
 800a85c:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a85e:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800a862:	2a40      	cmp	r2, #64	; 0x40
 800a864:	f000 81d7 	beq.w	800ac16 <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800a868:	6922      	ldr	r2, [r4, #16]
 800a86a:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 800a86e:	f000 81b2 	beq.w	800abd6 <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 800a872:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a874:	2a00      	cmp	r2, #0
 800a876:	f040 81ef 	bne.w	800ac58 <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 800a87a:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a87c:	11d2      	asrs	r2, r2, #7
 800a87e:	f002 0206 	and.w	r2, r2, #6
 800a882:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 800a886:	611a      	str	r2, [r3, #16]
 800a888:	e7ba      	b.n	800a800 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a88a:	06cd      	lsls	r5, r1, #27
 800a88c:	d47c      	bmi.n	800a988 <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800a88e:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 800a892:	2a21      	cmp	r2, #33	; 0x21
 800a894:	f000 80f5 	beq.w	800aa82 <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a898:	064e      	lsls	r6, r1, #25
 800a89a:	f140 8132 	bpl.w	800ab02 <HAL_I2C_EV_IRQHandler+0x362>
 800a89e:	0545      	lsls	r5, r0, #21
 800a8a0:	f140 812f 	bpl.w	800ab02 <HAL_I2C_EV_IRQHandler+0x362>
 800a8a4:	0749      	lsls	r1, r1, #29
 800a8a6:	f100 812f 	bmi.w	800ab08 <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a8aa:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800a8ae:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a8b0:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a8b2:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 800a8b4:	2a00      	cmp	r2, #0
 800a8b6:	d0a3      	beq.n	800a800 <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a8b8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a8ba:	691b      	ldr	r3, [r3, #16]
 800a8bc:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800a8be:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a8c0:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a8c2:	3b01      	subs	r3, #1
 800a8c4:	b29b      	uxth	r3, r3
 800a8c6:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a8c8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a8ca:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a8cc:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800a8ce:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a8d0:	2b00      	cmp	r3, #0
 800a8d2:	d195      	bne.n	800a800 <HAL_I2C_EV_IRQHandler+0x60>
 800a8d4:	292a      	cmp	r1, #42	; 0x2a
 800a8d6:	d193      	bne.n	800a800 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a8d8:	6822      	ldr	r2, [r4, #0]
 800a8da:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800a8dc:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a8de:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a8e0:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800a8e4:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a8e6:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800a8e8:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a8ea:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a8ee:	f7ff fdbb 	bl	800a468 <HAL_I2C_SlaveRxCpltCallback>
 800a8f2:	e785      	b.n	800a800 <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800a8f4:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800a8f6:	6959      	ldr	r1, [r3, #20]
 800a8f8:	e76a      	b.n	800a7d0 <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a8fa:	078d      	lsls	r5, r1, #30
 800a8fc:	d515      	bpl.n	800a92a <HAL_I2C_EV_IRQHandler+0x18a>
 800a8fe:	0585      	lsls	r5, r0, #22
 800a900:	d513      	bpl.n	800a92a <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800a902:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 800a906:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 800a908:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800a90a:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800a90e:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800a910:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800a912:	f000 81b3 	beq.w	800ac7c <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a916:	2200      	movs	r2, #0
 800a918:	920a      	str	r2, [sp, #40]	; 0x28
 800a91a:	695a      	ldr	r2, [r3, #20]
 800a91c:	920a      	str	r2, [sp, #40]	; 0x28
 800a91e:	699b      	ldr	r3, [r3, #24]
 800a920:	930a      	str	r3, [sp, #40]	; 0x28
 800a922:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a924:	e76c      	b.n	800a800 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a926:	070d      	lsls	r5, r1, #28
 800a928:	d5e7      	bpl.n	800a8fa <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 800a92a:	0776      	lsls	r6, r6, #29
 800a92c:	f140 80f5 	bpl.w	800ab1a <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800a930:	685d      	ldr	r5, [r3, #4]
 800a932:	052d      	lsls	r5, r5, #20
 800a934:	f53f af64 	bmi.w	800a800 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a938:	060e      	lsls	r6, r1, #24
 800a93a:	f140 8115 	bpl.w	800ab68 <HAL_I2C_EV_IRQHandler+0x3c8>
 800a93e:	0545      	lsls	r5, r0, #21
 800a940:	f140 8112 	bpl.w	800ab68 <HAL_I2C_EV_IRQHandler+0x3c8>
 800a944:	074e      	lsls	r6, r1, #29
 800a946:	f100 8112 	bmi.w	800ab6e <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a94a:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a94e:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a950:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800a954:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a956:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a958:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a95a:	2800      	cmp	r0, #0
 800a95c:	f040 8235 	bne.w	800adca <HAL_I2C_EV_IRQHandler+0x62a>
 800a960:	2a21      	cmp	r2, #33	; 0x21
 800a962:	f000 8347 	beq.w	800aff4 <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800a966:	2940      	cmp	r1, #64	; 0x40
 800a968:	f47f af4a 	bne.w	800a800 <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 800a96c:	2a22      	cmp	r2, #34	; 0x22
 800a96e:	f47f af47 	bne.w	800a800 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 800a972:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a974:	b292      	uxth	r2, r2
 800a976:	2a00      	cmp	r2, #0
 800a978:	f000 8268 	beq.w	800ae4c <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a97c:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800a980:	2a40      	cmp	r2, #64	; 0x40
 800a982:	f040 80b4 	bne.w	800aaee <HAL_I2C_EV_IRQHandler+0x34e>
 800a986:	e0fc      	b.n	800ab82 <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a988:	0585      	lsls	r5, r0, #22
 800a98a:	d580      	bpl.n	800a88e <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a98c:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a990:	685a      	ldr	r2, [r3, #4]
 800a992:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800a996:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 800a998:	960d      	str	r6, [sp, #52]	; 0x34
 800a99a:	695a      	ldr	r2, [r3, #20]
 800a99c:	920d      	str	r2, [sp, #52]	; 0x34
 800a99e:	681a      	ldr	r2, [r3, #0]
 800a9a0:	f042 0201 	orr.w	r2, r2, #1
 800a9a4:	601a      	str	r2, [r3, #0]
 800a9a6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a9a8:	681a      	ldr	r2, [r3, #0]
 800a9aa:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a9ae:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a9b0:	685a      	ldr	r2, [r3, #4]
 800a9b2:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a9b4:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a9b6:	d521      	bpl.n	800a9fc <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a9b8:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 800a9bc:	2a22      	cmp	r2, #34	; 0x22
 800a9be:	f000 817a 	beq.w	800acb6 <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 800a9c2:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a9c4:	6802      	ldr	r2, [r0, #0]
 800a9c6:	6852      	ldr	r2, [r2, #4]
 800a9c8:	b292      	uxth	r2, r2
 800a9ca:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800a9cc:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a9ce:	b292      	uxth	r2, r2
 800a9d0:	b11a      	cbz	r2, 800a9da <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800a9d2:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a9d4:	f042 0204 	orr.w	r2, r2, #4
 800a9d8:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800a9da:	685a      	ldr	r2, [r3, #4]
 800a9dc:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a9e0:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 800a9e2:	f7fe fda1 	bl	8009528 <HAL_DMA_GetState>
 800a9e6:	2801      	cmp	r0, #1
 800a9e8:	d008      	beq.n	800a9fc <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800a9ea:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a9ec:	4b99      	ldr	r3, [pc, #612]	; (800ac54 <HAL_I2C_EV_IRQHandler+0x4b4>)
 800a9ee:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800a9f0:	f7fe fcb2 	bl	8009358 <HAL_DMA_Abort_IT>
 800a9f4:	b110      	cbz	r0, 800a9fc <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800a9f6:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a9f8:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a9fa:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 800a9fc:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800a9fe:	b29b      	uxth	r3, r3
 800aa00:	b313      	cbz	r3, 800aa48 <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800aa02:	6823      	ldr	r3, [r4, #0]
 800aa04:	695a      	ldr	r2, [r3, #20]
 800aa06:	0752      	lsls	r2, r2, #29
 800aa08:	d50a      	bpl.n	800aa20 <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aa0a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800aa0c:	691b      	ldr	r3, [r3, #16]
 800aa0e:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800aa10:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800aa12:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800aa14:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800aa16:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 800aa18:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800aa1a:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800aa1c:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800aa1e:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800aa20:	695a      	ldr	r2, [r3, #20]
 800aa22:	0656      	lsls	r6, r2, #25
 800aa24:	d509      	bpl.n	800aa3a <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aa26:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800aa28:	691b      	ldr	r3, [r3, #16]
 800aa2a:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800aa2c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800aa2e:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800aa30:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 800aa32:	3201      	adds	r2, #1
      hi2c->XferCount--;
 800aa34:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800aa36:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800aa38:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 800aa3a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800aa3c:	b29b      	uxth	r3, r3
 800aa3e:	b11b      	cbz	r3, 800aa48 <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800aa40:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800aa42:	f043 0304 	orr.w	r3, r3, #4
 800aa46:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800aa48:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800aa4a:	2b00      	cmp	r3, #0
 800aa4c:	f040 80dd 	bne.w	800ac0a <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 800aa50:	2d2a      	cmp	r5, #42	; 0x2a
 800aa52:	f000 8151 	beq.w	800acf8 <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 800aa56:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800aa5a:	2b28      	cmp	r3, #40	; 0x28
 800aa5c:	f000 8154 	beq.w	800ad08 <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800aa60:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800aa62:	2b22      	cmp	r3, #34	; 0x22
 800aa64:	d002      	beq.n	800aa6c <HAL_I2C_EV_IRQHandler+0x2cc>
 800aa66:	2d22      	cmp	r5, #34	; 0x22
 800aa68:	f47f aeca 	bne.w	800a800 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 800aa6c:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800aa6e:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 800aa70:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800aa72:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800aa74:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800aa78:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800aa7c:	f7ff fcf4 	bl	800a468 <HAL_I2C_SlaveRxCpltCallback>
 800aa80:	e6be      	b.n	800a800 <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800aa82:	060d      	lsls	r5, r1, #24
 800aa84:	d528      	bpl.n	800aad8 <HAL_I2C_EV_IRQHandler+0x338>
 800aa86:	0546      	lsls	r6, r0, #21
 800aa88:	d526      	bpl.n	800aad8 <HAL_I2C_EV_IRQHandler+0x338>
 800aa8a:	074d      	lsls	r5, r1, #29
 800aa8c:	d427      	bmi.n	800aade <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800aa8e:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800aa92:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800aa94:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800aa96:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 800aa98:	2900      	cmp	r1, #0
 800aa9a:	f43f aeb1 	beq.w	800a800 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800aa9e:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800aaa0:	f811 5b01 	ldrb.w	r5, [r1], #1
 800aaa4:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 800aaa6:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800aaa8:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800aaaa:	3901      	subs	r1, #1
 800aaac:	b289      	uxth	r1, r1
 800aaae:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800aab0:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800aab2:	b289      	uxth	r1, r1
 800aab4:	2900      	cmp	r1, #0
 800aab6:	f47f aea3 	bne.w	800a800 <HAL_I2C_EV_IRQHandler+0x60>
 800aaba:	2829      	cmp	r0, #41	; 0x29
 800aabc:	f47f aea0 	bne.w	800a800 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800aac0:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800aac2:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800aac4:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800aac8:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800aaca:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 800aacc:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800aace:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800aad2:	f7ff fcc7 	bl	800a464 <HAL_I2C_SlaveTxCpltCallback>
 800aad6:	e693      	b.n	800a800 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800aad8:	0749      	lsls	r1, r1, #29
 800aada:	f57f ae91 	bpl.w	800a800 <HAL_I2C_EV_IRQHandler+0x60>
 800aade:	0582      	lsls	r2, r0, #22
 800aae0:	f57f ae8e 	bpl.w	800a800 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800aae4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800aae6:	b292      	uxth	r2, r2
 800aae8:	2a00      	cmp	r2, #0
 800aaea:	f43f ae89 	beq.w	800a800 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800aaee:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800aaf0:	f812 1b01 	ldrb.w	r1, [r2], #1
 800aaf4:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 800aaf6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800aaf8:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800aafa:	3b01      	subs	r3, #1
 800aafc:	b29b      	uxth	r3, r3
 800aafe:	8563      	strh	r3, [r4, #42]	; 0x2a
 800ab00:	e67e      	b.n	800a800 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800ab02:	074a      	lsls	r2, r1, #29
 800ab04:	f57f ae7c 	bpl.w	800a800 <HAL_I2C_EV_IRQHandler+0x60>
 800ab08:	0586      	lsls	r6, r0, #22
 800ab0a:	f57f ae79 	bpl.w	800a800 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800ab0e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ab10:	b292      	uxth	r2, r2
 800ab12:	2a00      	cmp	r2, #0
 800ab14:	f43f ae74 	beq.w	800a800 <HAL_I2C_EV_IRQHandler+0x60>
 800ab18:	e01b      	b.n	800ab52 <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800ab1a:	685a      	ldr	r2, [r3, #4]
 800ab1c:	0512      	lsls	r2, r2, #20
 800ab1e:	f53f ae6f 	bmi.w	800a800 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800ab22:	064e      	lsls	r6, r1, #25
 800ab24:	d433      	bmi.n	800ab8e <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800ab26:	0749      	lsls	r1, r1, #29
 800ab28:	f57f ae6a 	bpl.w	800a800 <HAL_I2C_EV_IRQHandler+0x60>
 800ab2c:	0582      	lsls	r2, r0, #22
 800ab2e:	f57f ae67 	bpl.w	800a800 <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800ab32:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 800ab34:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ab36:	b292      	uxth	r2, r2
 800ab38:	2a04      	cmp	r2, #4
 800ab3a:	f000 8113 	beq.w	800ad64 <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 800ab3e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ab40:	b292      	uxth	r2, r2
 800ab42:	2a03      	cmp	r2, #3
 800ab44:	f000 8153 	beq.w	800adee <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 800ab48:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ab4a:	b292      	uxth	r2, r2
 800ab4c:	2a02      	cmp	r2, #2
 800ab4e:	f000 8182 	beq.w	800ae56 <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ab52:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ab54:	691b      	ldr	r3, [r3, #16]
 800ab56:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800ab58:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800ab5a:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800ab5c:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 800ab5e:	3201      	adds	r2, #1
    hi2c->XferCount--;
 800ab60:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800ab62:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800ab64:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 800ab66:	e64b      	b.n	800a800 <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800ab68:	074d      	lsls	r5, r1, #29
 800ab6a:	f57f ae49 	bpl.w	800a800 <HAL_I2C_EV_IRQHandler+0x60>
 800ab6e:	0581      	lsls	r1, r0, #22
 800ab70:	f57f ae46 	bpl.w	800a800 <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 800ab74:	2a21      	cmp	r2, #33	; 0x21
 800ab76:	f000 80fd 	beq.w	800ad74 <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 800ab7a:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800ab7e:	f47f ae3f 	bne.w	800a800 <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800ab82:	4620      	mov	r0, r4
}
 800ab84:	b00e      	add	sp, #56	; 0x38
 800ab86:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800ab8a:	f7ff bc75 	b.w	800a478 <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800ab8e:	0545      	lsls	r5, r0, #21
 800ab90:	d5c9      	bpl.n	800ab26 <HAL_I2C_EV_IRQHandler+0x386>
 800ab92:	f011 0104 	ands.w	r1, r1, #4
 800ab96:	d1c9      	bne.n	800ab2c <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800ab98:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800ab9c:	2a22      	cmp	r2, #34	; 0x22
 800ab9e:	f47f ae2f 	bne.w	800a800 <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 800aba2:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800aba4:	b292      	uxth	r2, r2
    if (tmp > 3U)
 800aba6:	2a03      	cmp	r2, #3
 800aba8:	f240 81ec 	bls.w	800af84 <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800abac:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800abae:	691b      	ldr	r3, [r3, #16]
 800abb0:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800abb2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800abb4:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800abb6:	3b01      	subs	r3, #1
 800abb8:	b29b      	uxth	r3, r3
 800abba:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 800abbc:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800abbe:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800abc0:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 800abc2:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 800abc4:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 800abc6:	f47f ae1b 	bne.w	800a800 <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800abca:	6822      	ldr	r2, [r4, #0]
 800abcc:	6853      	ldr	r3, [r2, #4]
 800abce:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800abd2:	6053      	str	r3, [r2, #4]
 800abd4:	e614      	b.n	800a800 <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800abd6:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800abda:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800abdc:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800abde:	bf16      	itet	ne
 800abe0:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800abe4:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800abe8:	b2d2      	uxtbne	r2, r2
 800abea:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800abec:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800abee:	b11a      	cbz	r2, 800abf8 <HAL_I2C_EV_IRQHandler+0x458>
 800abf0:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800abf2:	2a00      	cmp	r2, #0
 800abf4:	f47f ae21 	bne.w	800a83a <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 800abf8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800abfa:	2a00      	cmp	r2, #0
 800abfc:	f43f ae00 	beq.w	800a800 <HAL_I2C_EV_IRQHandler+0x60>
 800ac00:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800ac02:	2a00      	cmp	r2, #0
 800ac04:	f47f ae19 	bne.w	800a83a <HAL_I2C_EV_IRQHandler+0x9a>
 800ac08:	e5fa      	b.n	800a800 <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 800ac0a:	4620      	mov	r0, r4
}
 800ac0c:	b00e      	add	sp, #56	; 0x38
 800ac0e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 800ac12:	f7ff bd0f 	b.w	800a634 <I2C_ITError>
    if (hi2c->EventCount == 0U)
 800ac16:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800ac18:	bb52      	cbnz	r2, 800ac70 <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800ac1a:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800ac1c:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800ac20:	611a      	str	r2, [r3, #16]
 800ac22:	e5ed      	b.n	800a800 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 800ac24:	2201      	movs	r2, #1
 800ac26:	62e2      	str	r2, [r4, #44]	; 0x2c
 800ac28:	e619      	b.n	800a85e <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 800ac2a:	685a      	ldr	r2, [r3, #4]
 800ac2c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ac30:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 800ac32:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 800ac34:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 800ac38:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 800ac3c:	bf54      	ite	pl
 800ac3e:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 800ac40:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 800ac42:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 800ac46:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 800ac4a:	4620      	mov	r0, r4
 800ac4c:	f7ff fc0e 	bl	800a46c <HAL_I2C_AddrCallback>
 800ac50:	e5d6      	b.n	800a800 <HAL_I2C_EV_IRQHandler+0x60>
 800ac52:	bf00      	nop
 800ac54:	0800a541 	.word	0x0800a541
      else if (hi2c->EventCount == 1U)
 800ac58:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800ac5a:	2a01      	cmp	r2, #1
 800ac5c:	f47f add0 	bne.w	800a800 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 800ac60:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800ac62:	11d2      	asrs	r2, r2, #7
 800ac64:	f002 0206 	and.w	r2, r2, #6
 800ac68:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 800ac6c:	611a      	str	r2, [r3, #16]
 800ac6e:	e5c7      	b.n	800a800 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800ac70:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800ac72:	f042 0201 	orr.w	r2, r2, #1
 800ac76:	b2d2      	uxtb	r2, r2
 800ac78:	611a      	str	r2, [r3, #16]
 800ac7a:	e5c1      	b.n	800a800 <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 800ac7c:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800ac7e:	b911      	cbnz	r1, 800ac86 <HAL_I2C_EV_IRQHandler+0x4e6>
 800ac80:	2a40      	cmp	r2, #64	; 0x40
 800ac82:	f000 809b 	beq.w	800adbc <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 800ac86:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800ac88:	b922      	cbnz	r2, 800ac94 <HAL_I2C_EV_IRQHandler+0x4f4>
 800ac8a:	6921      	ldr	r1, [r4, #16]
 800ac8c:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 800ac90:	f000 809f 	beq.w	800add2 <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 800ac94:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ac96:	b292      	uxth	r2, r2
 800ac98:	2a00      	cmp	r2, #0
 800ac9a:	d142      	bne.n	800ad22 <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ac9c:	9203      	str	r2, [sp, #12]
 800ac9e:	695a      	ldr	r2, [r3, #20]
 800aca0:	9203      	str	r2, [sp, #12]
 800aca2:	699a      	ldr	r2, [r3, #24]
 800aca4:	9203      	str	r2, [sp, #12]
 800aca6:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aca8:	681a      	ldr	r2, [r3, #0]
 800acaa:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800acae:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 800acb0:	2300      	movs	r3, #0
 800acb2:	6523      	str	r3, [r4, #80]	; 0x50
 800acb4:	e5a4      	b.n	800a800 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 800acb6:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800acb8:	6802      	ldr	r2, [r0, #0]
 800acba:	6852      	ldr	r2, [r2, #4]
 800acbc:	b292      	uxth	r2, r2
 800acbe:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800acc0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800acc2:	b292      	uxth	r2, r2
 800acc4:	b11a      	cbz	r2, 800acce <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800acc6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800acc8:	f042 0204 	orr.w	r2, r2, #4
 800accc:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800acce:	685a      	ldr	r2, [r3, #4]
 800acd0:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800acd4:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 800acd6:	f7fe fc27 	bl	8009528 <HAL_DMA_GetState>
 800acda:	2801      	cmp	r0, #1
 800acdc:	f43f ae8e 	beq.w	800a9fc <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800ace0:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800ace2:	4b98      	ldr	r3, [pc, #608]	; (800af44 <HAL_I2C_EV_IRQHandler+0x7a4>)
 800ace4:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800ace6:	f7fe fb37 	bl	8009358 <HAL_DMA_Abort_IT>
 800acea:	2800      	cmp	r0, #0
 800acec:	f43f ae86 	beq.w	800a9fc <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800acf0:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800acf2:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800acf4:	4798      	blx	r3
 800acf6:	e681      	b.n	800a9fc <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800acf8:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 800acfa:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800acfc:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800acfe:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800ad02:	f7ff fbb1 	bl	800a468 <HAL_I2C_SlaveRxCpltCallback>
 800ad06:	e6a6      	b.n	800aa56 <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 800ad08:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800ad0a:	498f      	ldr	r1, [pc, #572]	; (800af48 <HAL_I2C_EV_IRQHandler+0x7a8>)
 800ad0c:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 800ad0e:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800ad10:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 800ad12:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800ad14:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ad18:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 800ad1c:	f7ff fba8 	bl	800a470 <HAL_I2C_ListenCpltCallback>
 800ad20:	e56e      	b.n	800a800 <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 800ad22:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ad24:	b292      	uxth	r2, r2
 800ad26:	2a01      	cmp	r2, #1
 800ad28:	d070      	beq.n	800ae0c <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 800ad2a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ad2c:	b292      	uxth	r2, r2
 800ad2e:	2a02      	cmp	r2, #2
 800ad30:	f000 80d6 	beq.w	800aee0 <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ad34:	681a      	ldr	r2, [r3, #0]
 800ad36:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800ad3a:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800ad3c:	685a      	ldr	r2, [r3, #4]
 800ad3e:	0511      	lsls	r1, r2, #20
 800ad40:	d508      	bpl.n	800ad54 <HAL_I2C_EV_IRQHandler+0x5b4>
 800ad42:	2820      	cmp	r0, #32
 800ad44:	f200 80f8 	bhi.w	800af38 <HAL_I2C_EV_IRQHandler+0x798>
 800ad48:	2807      	cmp	r0, #7
 800ad4a:	f200 80ea 	bhi.w	800af22 <HAL_I2C_EV_IRQHandler+0x782>
 800ad4e:	2801      	cmp	r0, #1
 800ad50:	f000 80ed 	beq.w	800af2e <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ad54:	2200      	movs	r2, #0
 800ad56:	9209      	str	r2, [sp, #36]	; 0x24
 800ad58:	695a      	ldr	r2, [r3, #20]
 800ad5a:	9209      	str	r2, [sp, #36]	; 0x24
 800ad5c:	699b      	ldr	r3, [r3, #24]
 800ad5e:	9309      	str	r3, [sp, #36]	; 0x24
 800ad60:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ad62:	e7a5      	b.n	800acb0 <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800ad64:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ad66:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800ad68:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ad6c:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ad6e:	691b      	ldr	r3, [r3, #16]
 800ad70:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 800ad72:	e6f1      	b.n	800ab58 <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800ad74:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800ad76:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800ad7a:	2a21      	cmp	r2, #33	; 0x21
 800ad7c:	f47f ad40 	bne.w	800a800 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 800ad80:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ad82:	b292      	uxth	r2, r2
 800ad84:	2a00      	cmp	r2, #0
 800ad86:	f47f aeb2 	bne.w	800aaee <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800ad8a:	2908      	cmp	r1, #8
 800ad8c:	f000 80e2 	beq.w	800af54 <HAL_I2C_EV_IRQHandler+0x7b4>
 800ad90:	2920      	cmp	r1, #32
 800ad92:	f000 80df 	beq.w	800af54 <HAL_I2C_EV_IRQHandler+0x7b4>
 800ad96:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 800ad9a:	f000 80db 	beq.w	800af54 <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ad9e:	6859      	ldr	r1, [r3, #4]
 800ada0:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800ada4:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800ada6:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 800ada8:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800adaa:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800adac:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800adb0:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800adb2:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800adb6:	f7ff fb51 	bl	800a45c <HAL_I2C_MasterTxCpltCallback>
 800adba:	e521      	b.n	800a800 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800adbc:	9101      	str	r1, [sp, #4]
 800adbe:	695a      	ldr	r2, [r3, #20]
 800adc0:	9201      	str	r2, [sp, #4]
 800adc2:	699b      	ldr	r3, [r3, #24]
 800adc4:	9301      	str	r3, [sp, #4]
 800adc6:	9b01      	ldr	r3, [sp, #4]
 800adc8:	e51a      	b.n	800a800 <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800adca:	2a21      	cmp	r2, #33	; 0x21
 800adcc:	f43f add1 	beq.w	800a972 <HAL_I2C_EV_IRQHandler+0x1d2>
 800add0:	e5c9      	b.n	800a966 <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800add2:	9202      	str	r2, [sp, #8]
 800add4:	695a      	ldr	r2, [r3, #20]
 800add6:	9202      	str	r2, [sp, #8]
 800add8:	699a      	ldr	r2, [r3, #24]
 800adda:	9202      	str	r2, [sp, #8]
 800addc:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800adde:	681a      	ldr	r2, [r3, #0]
 800ade0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800ade4:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 800ade6:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800ade8:	3301      	adds	r3, #1
 800adea:	6523      	str	r3, [r4, #80]	; 0x50
 800adec:	e508      	b.n	800a800 <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800adee:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800adf0:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800adf2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800adf6:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800adf8:	f43f aeab 	beq.w	800ab52 <HAL_I2C_EV_IRQHandler+0x3b2>
 800adfc:	2902      	cmp	r1, #2
 800adfe:	f43f aea8 	beq.w	800ab52 <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae02:	681a      	ldr	r2, [r3, #0]
 800ae04:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ae08:	601a      	str	r2, [r3, #0]
 800ae0a:	e6a2      	b.n	800ab52 <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 800ae0c:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800ae10:	f000 811b 	beq.w	800b04a <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 800ae14:	2808      	cmp	r0, #8
 800ae16:	f000 8108 	beq.w	800b02a <HAL_I2C_EV_IRQHandler+0x88a>
 800ae1a:	2820      	cmp	r0, #32
 800ae1c:	f000 8105 	beq.w	800b02a <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800ae20:	2d12      	cmp	r5, #18
 800ae22:	f000 80ff 	beq.w	800b024 <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800ae26:	2810      	cmp	r0, #16
 800ae28:	d804      	bhi.n	800ae34 <HAL_I2C_EV_IRQHandler+0x694>
 800ae2a:	4a48      	ldr	r2, [pc, #288]	; (800af4c <HAL_I2C_EV_IRQHandler+0x7ac>)
 800ae2c:	40c2      	lsrs	r2, r0
 800ae2e:	07d1      	lsls	r1, r2, #31
 800ae30:	f100 814c 	bmi.w	800b0cc <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae34:	681a      	ldr	r2, [r3, #0]
 800ae36:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ae3a:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ae3c:	2200      	movs	r2, #0
 800ae3e:	9206      	str	r2, [sp, #24]
 800ae40:	695a      	ldr	r2, [r3, #20]
 800ae42:	9206      	str	r2, [sp, #24]
 800ae44:	699b      	ldr	r3, [r3, #24]
 800ae46:	9306      	str	r3, [sp, #24]
 800ae48:	9b06      	ldr	r3, [sp, #24]
 800ae4a:	e731      	b.n	800acb0 <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800ae4c:	685a      	ldr	r2, [r3, #4]
 800ae4e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ae52:	605a      	str	r2, [r3, #4]
 800ae54:	e4d4      	b.n	800a800 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 800ae56:	3901      	subs	r1, #1
 800ae58:	290f      	cmp	r1, #15
 800ae5a:	d809      	bhi.n	800ae70 <HAL_I2C_EV_IRQHandler+0x6d0>
 800ae5c:	e8df f001 	tbb	[pc, r1]
 800ae60:	3608363b 	.word	0x3608363b
 800ae64:	08080808 	.word	0x08080808
 800ae68:	08080808 	.word	0x08080808
 800ae6c:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ae70:	681a      	ldr	r2, [r3, #0]
 800ae72:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ae76:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ae78:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ae7a:	691b      	ldr	r3, [r3, #16]
 800ae7c:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800ae7e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800ae80:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ae82:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 800ae84:	3b01      	subs	r3, #1
 800ae86:	b29b      	uxth	r3, r3
 800ae88:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ae8a:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 800ae8c:	1c51      	adds	r1, r2, #1
 800ae8e:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ae90:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 800ae92:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800ae94:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 800ae96:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800ae98:	3b01      	subs	r3, #1
 800ae9a:	b29b      	uxth	r3, r3
 800ae9c:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800ae9e:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 800aea0:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800aea2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 800aea6:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 800aea8:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800aeaa:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800aeac:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800aeb0:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 800aeb4:	2b40      	cmp	r3, #64	; 0x40
 800aeb6:	f000 80f5 	beq.w	800b0a4 <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800aeba:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800aebc:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800aebe:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800aec2:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800aec4:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800aec6:	f7ff facb 	bl	800a460 <HAL_I2C_MasterRxCpltCallback>
 800aeca:	e499      	b.n	800a800 <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aecc:	681a      	ldr	r2, [r3, #0]
 800aece:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800aed2:	601a      	str	r2, [r3, #0]
 800aed4:	e7d0      	b.n	800ae78 <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aed6:	681a      	ldr	r2, [r3, #0]
 800aed8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800aedc:	601a      	str	r2, [r3, #0]
 800aede:	e7cb      	b.n	800ae78 <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800aee0:	2810      	cmp	r0, #16
 800aee2:	d804      	bhi.n	800aeee <HAL_I2C_EV_IRQHandler+0x74e>
 800aee4:	4a19      	ldr	r2, [pc, #100]	; (800af4c <HAL_I2C_EV_IRQHandler+0x7ac>)
 800aee6:	40c2      	lsrs	r2, r0
 800aee8:	07d2      	lsls	r2, r2, #31
 800aeea:	f100 80c2 	bmi.w	800b072 <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aeee:	681a      	ldr	r2, [r3, #0]
 800aef0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800aef4:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800aef6:	681a      	ldr	r2, [r3, #0]
 800aef8:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800aefc:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800aefe:	685a      	ldr	r2, [r3, #4]
 800af00:	0516      	lsls	r6, r2, #20
 800af02:	d506      	bpl.n	800af12 <HAL_I2C_EV_IRQHandler+0x772>
 800af04:	2820      	cmp	r0, #32
 800af06:	f240 80bc 	bls.w	800b082 <HAL_I2C_EV_IRQHandler+0x8e2>
 800af0a:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800af0e:	f000 80bd 	beq.w	800b08c <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800af12:	2200      	movs	r2, #0
 800af14:	9208      	str	r2, [sp, #32]
 800af16:	695a      	ldr	r2, [r3, #20]
 800af18:	9208      	str	r2, [sp, #32]
 800af1a:	699b      	ldr	r3, [r3, #24]
 800af1c:	9308      	str	r3, [sp, #32]
 800af1e:	9b08      	ldr	r3, [sp, #32]
 800af20:	e6c6      	b.n	800acb0 <HAL_I2C_EV_IRQHandler+0x510>
 800af22:	4a0b      	ldr	r2, [pc, #44]	; (800af50 <HAL_I2C_EV_IRQHandler+0x7b0>)
 800af24:	3808      	subs	r0, #8
 800af26:	40c2      	lsrs	r2, r0
 800af28:	07d2      	lsls	r2, r2, #31
 800af2a:	f57f af13 	bpl.w	800ad54 <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800af2e:	685a      	ldr	r2, [r3, #4]
 800af30:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800af34:	605a      	str	r2, [r3, #4]
 800af36:	e70d      	b.n	800ad54 <HAL_I2C_EV_IRQHandler+0x5b4>
 800af38:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800af3c:	f47f af0a 	bne.w	800ad54 <HAL_I2C_EV_IRQHandler+0x5b4>
 800af40:	e7f5      	b.n	800af2e <HAL_I2C_EV_IRQHandler+0x78e>
 800af42:	bf00      	nop
 800af44:	0800a541 	.word	0x0800a541
 800af48:	ffff0000 	.word	0xffff0000
 800af4c:	00010014 	.word	0x00010014
 800af50:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800af54:	6859      	ldr	r1, [r3, #4]
 800af56:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800af5a:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800af5c:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800af5e:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800af60:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800af62:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800af66:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800af68:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 800af6a:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800af6e:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800af72:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800af76:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 800af78:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800af7a:	f47f af1c 	bne.w	800adb6 <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 800af7e:	f7ff fa79 	bl	800a474 <HAL_I2C_MemTxCpltCallback>
 800af82:	e43d      	b.n	800a800 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 800af84:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800af86:	2802      	cmp	r0, #2
 800af88:	f43f af60 	beq.w	800ae4c <HAL_I2C_EV_IRQHandler+0x6ac>
 800af8c:	2a01      	cmp	r2, #1
 800af8e:	f63f af5d 	bhi.w	800ae4c <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800af92:	4a62      	ldr	r2, [pc, #392]	; (800b11c <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 800af94:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800af96:	6812      	ldr	r2, [r2, #0]
 800af98:	f246 10a8 	movw	r0, #25000	; 0x61a8
 800af9c:	fbb2 f2f0 	udiv	r2, r2, r0
 800afa0:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800afa4:	920b      	str	r2, [sp, #44]	; 0x2c
 800afa6:	e004      	b.n	800afb2 <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800afa8:	681a      	ldr	r2, [r3, #0]
 800afaa:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 800afae:	f000 8092 	beq.w	800b0d6 <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 800afb2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800afb4:	3a01      	subs	r2, #1
 800afb6:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 800afb8:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800afba:	2900      	cmp	r1, #0
 800afbc:	d1f4      	bne.n	800afa8 <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800afbe:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800afc0:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800afc2:	f042 0220 	orr.w	r2, r2, #32
 800afc6:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800afc8:	685a      	ldr	r2, [r3, #4]
 800afca:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800afce:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800afd0:	691b      	ldr	r3, [r3, #16]
 800afd2:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800afd4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800afd6:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800afd8:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 800afda:	3201      	adds	r2, #1
        hi2c->XferCount--;
 800afdc:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 800afde:	2020      	movs	r0, #32
        hi2c->XferCount--;
 800afe0:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800afe2:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 800afe4:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 800afe8:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800afea:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 800afee:	f7ff faa3 	bl	800a538 <HAL_I2C_ErrorCallback>
 800aff2:	e405      	b.n	800a800 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800aff4:	2d08      	cmp	r5, #8
 800aff6:	d0ad      	beq.n	800af54 <HAL_I2C_EV_IRQHandler+0x7b4>
 800aff8:	2d20      	cmp	r5, #32
 800affa:	d0ab      	beq.n	800af54 <HAL_I2C_EV_IRQHandler+0x7b4>
 800affc:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 800b000:	d0a8      	beq.n	800af54 <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b002:	685a      	ldr	r2, [r3, #4]
 800b004:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800b008:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b00a:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b00c:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800b00e:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b010:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b012:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800b016:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800b018:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800b01c:	f7ff fa1e 	bl	800a45c <HAL_I2C_MasterTxCpltCallback>
 800b020:	f7ff bbee 	b.w	800a800 <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800b024:	2801      	cmp	r0, #1
 800b026:	f43f af05 	beq.w	800ae34 <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b02a:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b02c:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b02e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b032:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b034:	9107      	str	r1, [sp, #28]
 800b036:	695a      	ldr	r2, [r3, #20]
 800b038:	9207      	str	r2, [sp, #28]
 800b03a:	699a      	ldr	r2, [r3, #24]
 800b03c:	9207      	str	r2, [sp, #28]
 800b03e:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b040:	681a      	ldr	r2, [r3, #0]
 800b042:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b046:	601a      	str	r2, [r3, #0]
 800b048:	e632      	b.n	800acb0 <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b04a:	681a      	ldr	r2, [r3, #0]
 800b04c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b050:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b052:	685a      	ldr	r2, [r3, #4]
 800b054:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800b058:	d02d      	beq.n	800b0b6 <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b05a:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b05c:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b05e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b062:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b064:	9104      	str	r1, [sp, #16]
 800b066:	695a      	ldr	r2, [r3, #20]
 800b068:	9204      	str	r2, [sp, #16]
 800b06a:	699b      	ldr	r3, [r3, #24]
 800b06c:	9304      	str	r3, [sp, #16]
 800b06e:	9b04      	ldr	r3, [sp, #16]
 800b070:	e61e      	b.n	800acb0 <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b072:	681a      	ldr	r2, [r3, #0]
 800b074:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b078:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800b07a:	685a      	ldr	r2, [r3, #4]
 800b07c:	0515      	lsls	r5, r2, #20
 800b07e:	f57f af48 	bpl.w	800af12 <HAL_I2C_EV_IRQHandler+0x772>
 800b082:	2807      	cmp	r0, #7
 800b084:	d807      	bhi.n	800b096 <HAL_I2C_EV_IRQHandler+0x8f6>
 800b086:	2801      	cmp	r0, #1
 800b088:	f47f af43 	bne.w	800af12 <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800b08c:	685a      	ldr	r2, [r3, #4]
 800b08e:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800b092:	605a      	str	r2, [r3, #4]
 800b094:	e73d      	b.n	800af12 <HAL_I2C_EV_IRQHandler+0x772>
 800b096:	4a22      	ldr	r2, [pc, #136]	; (800b120 <HAL_I2C_EV_IRQHandler+0x980>)
 800b098:	3808      	subs	r0, #8
 800b09a:	40c2      	lsrs	r2, r0
 800b09c:	07d0      	lsls	r0, r2, #31
 800b09e:	f57f af38 	bpl.w	800af12 <HAL_I2C_EV_IRQHandler+0x772>
 800b0a2:	e7f3      	b.n	800b08c <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b0a4:	2300      	movs	r3, #0
 800b0a6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 800b0aa:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 800b0ac:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 800b0ae:	f7ff fa41 	bl	800a534 <HAL_I2C_MemRxCpltCallback>
 800b0b2:	f7ff bba5 	b.w	800a800 <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b0b6:	9205      	str	r2, [sp, #20]
 800b0b8:	695a      	ldr	r2, [r3, #20]
 800b0ba:	9205      	str	r2, [sp, #20]
 800b0bc:	699a      	ldr	r2, [r3, #24]
 800b0be:	9205      	str	r2, [sp, #20]
 800b0c0:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b0c2:	681a      	ldr	r2, [r3, #0]
 800b0c4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b0c8:	601a      	str	r2, [r3, #0]
 800b0ca:	e5f1      	b.n	800acb0 <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b0cc:	681a      	ldr	r2, [r3, #0]
 800b0ce:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b0d2:	601a      	str	r2, [r3, #0]
 800b0d4:	e6b2      	b.n	800ae3c <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b0d6:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b0d8:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b0da:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800b0de:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b0e0:	6859      	ldr	r1, [r3, #4]
 800b0e2:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800b0e6:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b0e8:	691b      	ldr	r3, [r3, #16]
 800b0ea:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800b0ec:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b0ee:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800b0f0:	2120      	movs	r1, #32
        hi2c->XferCount--;
 800b0f2:	b29b      	uxth	r3, r3
 800b0f4:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 800b0f6:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 800b0fa:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b0fc:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 800b100:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b102:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 800b104:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b106:	f47f aed9 	bne.w	800aebc <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800b10a:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 800b10e:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 800b110:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 800b112:	f7ff fa0f 	bl	800a534 <HAL_I2C_MemRxCpltCallback>
 800b116:	f7ff bb73 	b.w	800a800 <HAL_I2C_EV_IRQHandler+0x60>
 800b11a:	bf00      	nop
 800b11c:	20000078 	.word	0x20000078
 800b120:	01000101 	.word	0x01000101

0800b124 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800b124:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800b128:	2a20      	cmp	r2, #32
{
 800b12a:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800b12c:	fa5f fc82 	uxtb.w	ip, r2
 800b130:	d001      	beq.n	800b136 <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800b132:	2002      	movs	r0, #2
  }
}
 800b134:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 800b136:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800b138:	2024      	movs	r0, #36	; 0x24
 800b13a:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800b13e:	6810      	ldr	r0, [r2, #0]
 800b140:	f020 0001 	bic.w	r0, r0, #1
 800b144:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800b146:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800b148:	f020 0010 	bic.w	r0, r0, #16
 800b14c:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 800b14e:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800b150:	4301      	orrs	r1, r0
 800b152:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800b154:	6811      	ldr	r1, [r2, #0]
 800b156:	f041 0101 	orr.w	r1, r1, #1
 800b15a:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 800b15c:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800b15e:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800b162:	4770      	bx	lr

0800b164 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800b164:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800b168:	2a20      	cmp	r2, #32
 800b16a:	d001      	beq.n	800b170 <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800b16c:	2002      	movs	r0, #2
  }
}
 800b16e:	4770      	bx	lr
{
 800b170:	b410      	push	{r4}
 800b172:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 800b176:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800b178:	2224      	movs	r2, #36	; 0x24
 800b17a:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800b17e:	6822      	ldr	r2, [r4, #0]
 800b180:	f022 0201 	bic.w	r2, r2, #1
 800b184:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 800b186:	4603      	mov	r3, r0
 800b188:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 800b18a:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 800b18e:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 800b190:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 800b192:	b289      	uxth	r1, r1
 800b194:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800b196:	6822      	ldr	r2, [r4, #0]
 800b198:	f042 0201 	orr.w	r2, r2, #1
 800b19c:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800b19e:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800b1a2:	2000      	movs	r0, #0
}
 800b1a4:	f85d 4b04 	ldr.w	r4, [sp], #4
 800b1a8:	4770      	bx	lr
 800b1aa:	bf00      	nop

0800b1ac <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 800b1ac:	2800      	cmp	r0, #0
 800b1ae:	d069      	beq.n	800b284 <HAL_LTDC_Init+0xd8>
{
 800b1b0:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800b1b2:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800b1b6:	4604      	mov	r4, r0
 800b1b8:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b1bc:	2b00      	cmp	r3, #0
 800b1be:	d05c      	beq.n	800b27a <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b1c0:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800b1c2:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b1c4:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b1c8:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800b1cc:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b1ce:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800b1d0:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800b1d4:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 800b1d8:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b1da:	6999      	ldr	r1, [r3, #24]
 800b1dc:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800b1de:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b1e0:	430a      	orrs	r2, r1
 800b1e2:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800b1e4:	689a      	ldr	r2, [r3, #8]
 800b1e6:	4928      	ldr	r1, [pc, #160]	; (800b288 <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800b1e8:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800b1ea:	400a      	ands	r2, r1
 800b1ec:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800b1ee:	689a      	ldr	r2, [r3, #8]
 800b1f0:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b1f4:	69a0      	ldr	r0, [r4, #24]
 800b1f6:	4302      	orrs	r2, r0
 800b1f8:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800b1fa:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800b1fc:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800b1fe:	400a      	ands	r2, r1
 800b200:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800b202:	68da      	ldr	r2, [r3, #12]
 800b204:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b208:	6a20      	ldr	r0, [r4, #32]
 800b20a:	4302      	orrs	r2, r0
 800b20c:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800b20e:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800b210:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800b212:	400a      	ands	r2, r1
 800b214:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800b216:	691a      	ldr	r2, [r3, #16]
 800b218:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b21c:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800b21e:	4302      	orrs	r2, r0
 800b220:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800b222:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800b224:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800b226:	400a      	ands	r2, r1
 800b228:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800b22a:	695a      	ldr	r2, [r3, #20]
 800b22c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800b22e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b232:	430a      	orrs	r2, r1
 800b234:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800b236:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800b238:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800b23c:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800b240:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800b244:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800b246:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800b248:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800b24c:	432a      	orrs	r2, r5
 800b24e:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800b252:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800b256:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800b258:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b25a:	f042 0206 	orr.w	r2, r2, #6
 800b25e:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800b260:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800b262:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800b266:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 800b268:	ea42 020c 	orr.w	r2, r2, ip
 800b26c:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800b26e:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800b272:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 800b276:	4608      	mov	r0, r1
}
 800b278:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 800b27a:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800b27e:	f7f6 fe9b 	bl	8001fb8 <HAL_LTDC_MspInit>
 800b282:	e79d      	b.n	800b1c0 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 800b284:	2001      	movs	r0, #1
}
 800b286:	4770      	bx	lr
 800b288:	f000f800 	.word	0xf000f800

0800b28c <HAL_LTDC_ErrorCallback>:
 800b28c:	4770      	bx	lr
 800b28e:	bf00      	nop

0800b290 <HAL_LTDC_ReloadEventCallback>:
 800b290:	4770      	bx	lr
 800b292:	bf00      	nop

0800b294 <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800b294:	6803      	ldr	r3, [r0, #0]
{
 800b296:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800b298:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800b29a:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800b29c:	076a      	lsls	r2, r5, #29
{
 800b29e:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800b2a0:	d501      	bpl.n	800b2a6 <HAL_LTDC_IRQHandler+0x12>
 800b2a2:	0771      	lsls	r1, r6, #29
 800b2a4:	d41d      	bmi.n	800b2e2 <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800b2a6:	07aa      	lsls	r2, r5, #30
 800b2a8:	d501      	bpl.n	800b2ae <HAL_LTDC_IRQHandler+0x1a>
 800b2aa:	07b3      	lsls	r3, r6, #30
 800b2ac:	d42d      	bmi.n	800b30a <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800b2ae:	07e8      	lsls	r0, r5, #31
 800b2b0:	d501      	bpl.n	800b2b6 <HAL_LTDC_IRQHandler+0x22>
 800b2b2:	07f1      	lsls	r1, r6, #31
 800b2b4:	d440      	bmi.n	800b338 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800b2b6:	072a      	lsls	r2, r5, #28
 800b2b8:	d501      	bpl.n	800b2be <HAL_LTDC_IRQHandler+0x2a>
 800b2ba:	0733      	lsls	r3, r6, #28
 800b2bc:	d400      	bmi.n	800b2c0 <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 800b2be:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800b2c0:	6823      	ldr	r3, [r4, #0]
 800b2c2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800b2c4:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800b2c6:	f022 0208 	bic.w	r2, r2, #8
 800b2ca:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 800b2cc:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800b2ce:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800b2d0:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800b2d2:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b2d6:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800b2da:	4620      	mov	r0, r4
 800b2dc:	f7ff ffd8 	bl	800b290 <HAL_LTDC_ReloadEventCallback>
}
 800b2e0:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800b2e2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b2e4:	f022 0204 	bic.w	r2, r2, #4
 800b2e8:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800b2ea:	2204      	movs	r2, #4
 800b2ec:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800b2ee:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800b2f2:	f043 0301 	orr.w	r3, r3, #1
 800b2f6:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800b2fa:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800b2fc:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b300:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800b304:	f7ff ffc2 	bl	800b28c <HAL_LTDC_ErrorCallback>
 800b308:	e7cd      	b.n	800b2a6 <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800b30a:	6823      	ldr	r3, [r4, #0]
 800b30c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b30e:	f022 0202 	bic.w	r2, r2, #2
 800b312:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800b314:	2202      	movs	r2, #2
 800b316:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800b318:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800b31c:	f043 0302 	orr.w	r3, r3, #2
 800b320:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800b324:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 800b326:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800b328:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b32c:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800b330:	4620      	mov	r0, r4
 800b332:	f7ff ffab 	bl	800b28c <HAL_LTDC_ErrorCallback>
 800b336:	e7ba      	b.n	800b2ae <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b338:	6823      	ldr	r3, [r4, #0]
 800b33a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b33c:	f022 0201 	bic.w	r2, r2, #1
 800b340:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800b342:	2201      	movs	r2, #1
 800b344:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800b346:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800b348:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b34c:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800b350:	4620      	mov	r0, r4
 800b352:	f7f5 feed 	bl	8001130 <HAL_LTDC_LineEventCallback>
 800b356:	e7ae      	b.n	800b2b6 <HAL_LTDC_IRQHandler+0x22>

0800b358 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800b358:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800b35c:	2b01      	cmp	r3, #1
 800b35e:	f000 80c2 	beq.w	800b4e6 <HAL_LTDC_ConfigLayer+0x18e>
{
 800b362:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b366:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b36a:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b36e:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b372:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b374:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b376:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b37a:	f102 0684 	add.w	r6, r2, #132	; 0x84
 800b37e:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b382:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800b386:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b38a:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 800b38e:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b390:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b394:	460c      	mov	r4, r1
 800b396:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b398:	9301      	str	r3, [sp, #4]
 800b39a:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b39c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b39e:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 800b3a2:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800b3a6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b3a8:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b3aa:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800b3ae:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b3b0:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800b3b4:	6823      	ldr	r3, [r4, #0]
 800b3b6:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b3ba:	9b01      	ldr	r3, [sp, #4]
 800b3bc:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b3c0:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800b3c4:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b3c6:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800b3c8:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b3cc:	1c51      	adds	r1, r2, #1
 800b3ce:	f3c3 430b 	ubfx	r3, r3, #16, #12
 800b3d2:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b3d4:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b3d6:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800b3da:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b3de:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800b3e2:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800b3e6:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800b3ea:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b3ee:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800b3f2:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b3f4:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800b3f6:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800b3fa:	3301      	adds	r3, #1
 800b3fc:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800b400:	4403      	add	r3, r0
 800b402:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800b406:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800b40a:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800b40e:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800b410:	f023 0307 	bic.w	r3, r3, #7
 800b414:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b418:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800b41c:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b420:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800b424:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800b428:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b42c:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800b430:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 800b434:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 800b438:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800b43c:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800b440:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800b444:	f8dc 3014 	ldr.w	r3, [ip, #20]
 800b448:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800b44c:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800b450:	696b      	ldr	r3, [r5, #20]
 800b452:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800b456:	f8dc 301c 	ldr.w	r3, [ip, #28]
 800b45a:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800b45e:	f023 0307 	bic.w	r3, r3, #7
 800b462:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800b466:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 800b46a:	4303      	orrs	r3, r0
 800b46c:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800b470:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800b474:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800b476:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800b47a:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800b47e:	bb69      	cbnz	r1, 800b4dc <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 800b480:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800b482:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b484:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800b486:	fb03 f707 	mul.w	r7, r3, r7
 800b48a:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b48c:	fb02 f303 	mul.w	r3, r2, r3
 800b490:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800b494:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800b498:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800b49a:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 800b49e:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b4a2:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800b4a6:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 800b4aa:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800b4ae:	f023 0307 	bic.w	r3, r3, #7
 800b4b2:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800b4b6:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800b4ba:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800b4be:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800b4c0:	4313      	orrs	r3, r2
 800b4c2:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 800b4c6:	2300      	movs	r3, #0
  return HAL_OK;
 800b4c8:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800b4ca:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800b4ce:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800b4d2:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 800b4d6:	b003      	add	sp, #12
 800b4d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800b4dc:	3901      	subs	r1, #1
 800b4de:	2906      	cmp	r1, #6
 800b4e0:	d903      	bls.n	800b4ea <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800b4e2:	2301      	movs	r3, #1
 800b4e4:	e7cd      	b.n	800b482 <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 800b4e6:	2002      	movs	r0, #2
}
 800b4e8:	4770      	bx	lr
 800b4ea:	4b02      	ldr	r3, [pc, #8]	; (800b4f4 <HAL_LTDC_ConfigLayer+0x19c>)
 800b4ec:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800b4f0:	e7c7      	b.n	800b482 <HAL_LTDC_ConfigLayer+0x12a>
 800b4f2:	bf00      	nop
 800b4f4:	0802e100 	.word	0x0802e100

0800b4f8 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800b4f8:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800b4fc:	2b01      	cmp	r3, #1
 800b4fe:	d019      	beq.n	800b534 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b500:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b502:	2302      	movs	r3, #2
{
 800b504:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b506:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b50a:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800b50c:	4c0a      	ldr	r4, [pc, #40]	; (800b538 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b50e:	f023 0301 	bic.w	r3, r3, #1
 800b512:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800b514:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800b516:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 800b518:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800b51a:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 800b51e:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800b522:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800b524:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800b528:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800b52c:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 800b530:	4618      	mov	r0, r3
}
 800b532:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 800b534:	2002      	movs	r0, #2
}
 800b536:	4770      	bx	lr
 800b538:	40016800 	.word	0x40016800

0800b53c <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800b53c:	2800      	cmp	r0, #0
 800b53e:	f000 81a2 	beq.w	800b886 <HAL_RCC_OscConfig+0x34a>
{
 800b542:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800b546:	6803      	ldr	r3, [r0, #0]
 800b548:	07dd      	lsls	r5, r3, #31
{
 800b54a:	b082      	sub	sp, #8
 800b54c:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800b54e:	d52f      	bpl.n	800b5b0 <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800b550:	499e      	ldr	r1, [pc, #632]	; (800b7cc <HAL_RCC_OscConfig+0x290>)
 800b552:	688a      	ldr	r2, [r1, #8]
 800b554:	f002 020c 	and.w	r2, r2, #12
 800b558:	2a04      	cmp	r2, #4
 800b55a:	f000 80ed 	beq.w	800b738 <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800b55e:	688a      	ldr	r2, [r1, #8]
 800b560:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800b564:	2a08      	cmp	r2, #8
 800b566:	f000 80e3 	beq.w	800b730 <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b56a:	6863      	ldr	r3, [r4, #4]
 800b56c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800b570:	f000 80ec 	beq.w	800b74c <HAL_RCC_OscConfig+0x210>
 800b574:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800b578:	f000 8175 	beq.w	800b866 <HAL_RCC_OscConfig+0x32a>
 800b57c:	4d93      	ldr	r5, [pc, #588]	; (800b7cc <HAL_RCC_OscConfig+0x290>)
 800b57e:	682a      	ldr	r2, [r5, #0]
 800b580:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800b584:	602a      	str	r2, [r5, #0]
 800b586:	682a      	ldr	r2, [r5, #0]
 800b588:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800b58c:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800b58e:	2b00      	cmp	r3, #0
 800b590:	f040 80e1 	bne.w	800b756 <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800b594:	f7fd fdbe 	bl	8009114 <HAL_GetTick>
 800b598:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800b59a:	e005      	b.n	800b5a8 <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800b59c:	f7fd fdba 	bl	8009114 <HAL_GetTick>
 800b5a0:	1b80      	subs	r0, r0, r6
 800b5a2:	2864      	cmp	r0, #100	; 0x64
 800b5a4:	f200 8101 	bhi.w	800b7aa <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800b5a8:	682b      	ldr	r3, [r5, #0]
 800b5aa:	039b      	lsls	r3, r3, #14
 800b5ac:	d4f6      	bmi.n	800b59c <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800b5ae:	6823      	ldr	r3, [r4, #0]
 800b5b0:	079f      	lsls	r7, r3, #30
 800b5b2:	d528      	bpl.n	800b606 <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800b5b4:	4a85      	ldr	r2, [pc, #532]	; (800b7cc <HAL_RCC_OscConfig+0x290>)
 800b5b6:	6891      	ldr	r1, [r2, #8]
 800b5b8:	f011 0f0c 	tst.w	r1, #12
 800b5bc:	f000 8090 	beq.w	800b6e0 <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800b5c0:	6891      	ldr	r1, [r2, #8]
 800b5c2:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800b5c6:	2908      	cmp	r1, #8
 800b5c8:	f000 8086 	beq.w	800b6d8 <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800b5cc:	68e3      	ldr	r3, [r4, #12]
 800b5ce:	2b00      	cmp	r3, #0
 800b5d0:	f000 810e 	beq.w	800b7f0 <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800b5d4:	4b7e      	ldr	r3, [pc, #504]	; (800b7d0 <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b5d6:	4e7d      	ldr	r6, [pc, #500]	; (800b7cc <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 800b5d8:	2201      	movs	r2, #1
 800b5da:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800b5dc:	f7fd fd9a 	bl	8009114 <HAL_GetTick>
 800b5e0:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b5e2:	e005      	b.n	800b5f0 <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800b5e4:	f7fd fd96 	bl	8009114 <HAL_GetTick>
 800b5e8:	1b40      	subs	r0, r0, r5
 800b5ea:	2802      	cmp	r0, #2
 800b5ec:	f200 80dd 	bhi.w	800b7aa <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b5f0:	6833      	ldr	r3, [r6, #0]
 800b5f2:	0798      	lsls	r0, r3, #30
 800b5f4:	d5f6      	bpl.n	800b5e4 <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800b5f6:	6833      	ldr	r3, [r6, #0]
 800b5f8:	6922      	ldr	r2, [r4, #16]
 800b5fa:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800b5fe:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800b602:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b604:	6823      	ldr	r3, [r4, #0]
 800b606:	071a      	lsls	r2, r3, #28
 800b608:	d451      	bmi.n	800b6ae <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800b60a:	0758      	lsls	r0, r3, #29
 800b60c:	d52f      	bpl.n	800b66e <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800b60e:	4a6f      	ldr	r2, [pc, #444]	; (800b7cc <HAL_RCC_OscConfig+0x290>)
 800b610:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b612:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 800b616:	d07f      	beq.n	800b718 <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 800b618:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800b61a:	4e6e      	ldr	r6, [pc, #440]	; (800b7d4 <HAL_RCC_OscConfig+0x298>)
 800b61c:	6833      	ldr	r3, [r6, #0]
 800b61e:	05d9      	lsls	r1, r3, #23
 800b620:	f140 80b3 	bpl.w	800b78a <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b624:	68a3      	ldr	r3, [r4, #8]
 800b626:	2b01      	cmp	r3, #1
 800b628:	f000 80c3 	beq.w	800b7b2 <HAL_RCC_OscConfig+0x276>
 800b62c:	2b05      	cmp	r3, #5
 800b62e:	f000 812c 	beq.w	800b88a <HAL_RCC_OscConfig+0x34e>
 800b632:	4e66      	ldr	r6, [pc, #408]	; (800b7cc <HAL_RCC_OscConfig+0x290>)
 800b634:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800b636:	f022 0201 	bic.w	r2, r2, #1
 800b63a:	6732      	str	r2, [r6, #112]	; 0x70
 800b63c:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800b63e:	f022 0204 	bic.w	r2, r2, #4
 800b642:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800b644:	2b00      	cmp	r3, #0
 800b646:	f040 80b9 	bne.w	800b7bc <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800b64a:	f7fd fd63 	bl	8009114 <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b64e:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800b652:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800b654:	e005      	b.n	800b662 <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b656:	f7fd fd5d 	bl	8009114 <HAL_GetTick>
 800b65a:	1bc0      	subs	r0, r0, r7
 800b65c:	4540      	cmp	r0, r8
 800b65e:	f200 80a4 	bhi.w	800b7aa <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800b662:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800b664:	0798      	lsls	r0, r3, #30
 800b666:	d4f6      	bmi.n	800b656 <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800b668:	2d00      	cmp	r5, #0
 800b66a:	f040 8106 	bne.w	800b87a <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800b66e:	69a0      	ldr	r0, [r4, #24]
 800b670:	b1c8      	cbz	r0, 800b6a6 <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800b672:	4d56      	ldr	r5, [pc, #344]	; (800b7cc <HAL_RCC_OscConfig+0x290>)
 800b674:	68ab      	ldr	r3, [r5, #8]
 800b676:	f003 030c 	and.w	r3, r3, #12
 800b67a:	2b08      	cmp	r3, #8
 800b67c:	f000 80c9 	beq.w	800b812 <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800b680:	4b53      	ldr	r3, [pc, #332]	; (800b7d0 <HAL_RCC_OscConfig+0x294>)
 800b682:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800b684:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800b686:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800b688:	f000 8109 	beq.w	800b89e <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800b68c:	f7fd fd42 	bl	8009114 <HAL_GetTick>
 800b690:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b692:	e005      	b.n	800b6a0 <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b694:	f7fd fd3e 	bl	8009114 <HAL_GetTick>
 800b698:	1b00      	subs	r0, r0, r4
 800b69a:	2802      	cmp	r0, #2
 800b69c:	f200 8085 	bhi.w	800b7aa <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b6a0:	682b      	ldr	r3, [r5, #0]
 800b6a2:	019b      	lsls	r3, r3, #6
 800b6a4:	d4f6      	bmi.n	800b694 <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800b6a6:	2000      	movs	r0, #0
}
 800b6a8:	b002      	add	sp, #8
 800b6aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800b6ae:	6963      	ldr	r3, [r4, #20]
 800b6b0:	b30b      	cbz	r3, 800b6f6 <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 800b6b2:	4b47      	ldr	r3, [pc, #284]	; (800b7d0 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b6b4:	4e45      	ldr	r6, [pc, #276]	; (800b7cc <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 800b6b6:	2201      	movs	r2, #1
 800b6b8:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800b6bc:	f7fd fd2a 	bl	8009114 <HAL_GetTick>
 800b6c0:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b6c2:	e004      	b.n	800b6ce <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800b6c4:	f7fd fd26 	bl	8009114 <HAL_GetTick>
 800b6c8:	1b40      	subs	r0, r0, r5
 800b6ca:	2802      	cmp	r0, #2
 800b6cc:	d86d      	bhi.n	800b7aa <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b6ce:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800b6d0:	079b      	lsls	r3, r3, #30
 800b6d2:	d5f7      	bpl.n	800b6c4 <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800b6d4:	6823      	ldr	r3, [r4, #0]
 800b6d6:	e798      	b.n	800b60a <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800b6d8:	6852      	ldr	r2, [r2, #4]
 800b6da:	0256      	lsls	r6, r2, #9
 800b6dc:	f53f af76 	bmi.w	800b5cc <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800b6e0:	4a3a      	ldr	r2, [pc, #232]	; (800b7cc <HAL_RCC_OscConfig+0x290>)
 800b6e2:	6812      	ldr	r2, [r2, #0]
 800b6e4:	0795      	lsls	r5, r2, #30
 800b6e6:	d544      	bpl.n	800b772 <HAL_RCC_OscConfig+0x236>
 800b6e8:	68e2      	ldr	r2, [r4, #12]
 800b6ea:	2a01      	cmp	r2, #1
 800b6ec:	d041      	beq.n	800b772 <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 800b6ee:	2001      	movs	r0, #1
}
 800b6f0:	b002      	add	sp, #8
 800b6f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800b6f6:	4a36      	ldr	r2, [pc, #216]	; (800b7d0 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b6f8:	4e34      	ldr	r6, [pc, #208]	; (800b7cc <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 800b6fa:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800b6fe:	f7fd fd09 	bl	8009114 <HAL_GetTick>
 800b702:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b704:	e004      	b.n	800b710 <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800b706:	f7fd fd05 	bl	8009114 <HAL_GetTick>
 800b70a:	1b40      	subs	r0, r0, r5
 800b70c:	2802      	cmp	r0, #2
 800b70e:	d84c      	bhi.n	800b7aa <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b710:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800b712:	079f      	lsls	r7, r3, #30
 800b714:	d4f7      	bmi.n	800b706 <HAL_RCC_OscConfig+0x1ca>
 800b716:	e7dd      	b.n	800b6d4 <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800b718:	9301      	str	r3, [sp, #4]
 800b71a:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b71c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800b720:	6413      	str	r3, [r2, #64]	; 0x40
 800b722:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b724:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800b728:	9301      	str	r3, [sp, #4]
 800b72a:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800b72c:	2501      	movs	r5, #1
 800b72e:	e774      	b.n	800b61a <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800b730:	684a      	ldr	r2, [r1, #4]
 800b732:	0250      	lsls	r0, r2, #9
 800b734:	f57f af19 	bpl.w	800b56a <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800b738:	4a24      	ldr	r2, [pc, #144]	; (800b7cc <HAL_RCC_OscConfig+0x290>)
 800b73a:	6812      	ldr	r2, [r2, #0]
 800b73c:	0391      	lsls	r1, r2, #14
 800b73e:	f57f af37 	bpl.w	800b5b0 <HAL_RCC_OscConfig+0x74>
 800b742:	6862      	ldr	r2, [r4, #4]
 800b744:	2a00      	cmp	r2, #0
 800b746:	f47f af33 	bne.w	800b5b0 <HAL_RCC_OscConfig+0x74>
 800b74a:	e7d0      	b.n	800b6ee <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b74c:	4a1f      	ldr	r2, [pc, #124]	; (800b7cc <HAL_RCC_OscConfig+0x290>)
 800b74e:	6813      	ldr	r3, [r2, #0]
 800b750:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800b754:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800b756:	f7fd fcdd 	bl	8009114 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b75a:	4e1c      	ldr	r6, [pc, #112]	; (800b7cc <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 800b75c:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b75e:	e004      	b.n	800b76a <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800b760:	f7fd fcd8 	bl	8009114 <HAL_GetTick>
 800b764:	1b40      	subs	r0, r0, r5
 800b766:	2864      	cmp	r0, #100	; 0x64
 800b768:	d81f      	bhi.n	800b7aa <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b76a:	6833      	ldr	r3, [r6, #0]
 800b76c:	039a      	lsls	r2, r3, #14
 800b76e:	d5f7      	bpl.n	800b760 <HAL_RCC_OscConfig+0x224>
 800b770:	e71d      	b.n	800b5ae <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800b772:	4916      	ldr	r1, [pc, #88]	; (800b7cc <HAL_RCC_OscConfig+0x290>)
 800b774:	6920      	ldr	r0, [r4, #16]
 800b776:	680a      	ldr	r2, [r1, #0]
 800b778:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800b77c:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800b780:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b782:	071a      	lsls	r2, r3, #28
 800b784:	f57f af41 	bpl.w	800b60a <HAL_RCC_OscConfig+0xce>
 800b788:	e791      	b.n	800b6ae <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800b78a:	6833      	ldr	r3, [r6, #0]
 800b78c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b790:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800b792:	f7fd fcbf 	bl	8009114 <HAL_GetTick>
 800b796:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800b798:	6833      	ldr	r3, [r6, #0]
 800b79a:	05da      	lsls	r2, r3, #23
 800b79c:	f53f af42 	bmi.w	800b624 <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800b7a0:	f7fd fcb8 	bl	8009114 <HAL_GetTick>
 800b7a4:	1bc0      	subs	r0, r0, r7
 800b7a6:	2802      	cmp	r0, #2
 800b7a8:	d9f6      	bls.n	800b798 <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 800b7aa:	2003      	movs	r0, #3
}
 800b7ac:	b002      	add	sp, #8
 800b7ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b7b2:	4a06      	ldr	r2, [pc, #24]	; (800b7cc <HAL_RCC_OscConfig+0x290>)
 800b7b4:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800b7b6:	f043 0301 	orr.w	r3, r3, #1
 800b7ba:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 800b7bc:	f7fd fcaa 	bl	8009114 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b7c0:	4f02      	ldr	r7, [pc, #8]	; (800b7cc <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 800b7c2:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b7c4:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b7c8:	e00b      	b.n	800b7e2 <HAL_RCC_OscConfig+0x2a6>
 800b7ca:	bf00      	nop
 800b7cc:	40023800 	.word	0x40023800
 800b7d0:	42470000 	.word	0x42470000
 800b7d4:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b7d8:	f7fd fc9c 	bl	8009114 <HAL_GetTick>
 800b7dc:	1b80      	subs	r0, r0, r6
 800b7de:	4540      	cmp	r0, r8
 800b7e0:	d8e3      	bhi.n	800b7aa <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b7e2:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800b7e4:	079b      	lsls	r3, r3, #30
 800b7e6:	d5f7      	bpl.n	800b7d8 <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 800b7e8:	2d00      	cmp	r5, #0
 800b7ea:	f43f af40 	beq.w	800b66e <HAL_RCC_OscConfig+0x132>
 800b7ee:	e044      	b.n	800b87a <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 800b7f0:	4a42      	ldr	r2, [pc, #264]	; (800b8fc <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b7f2:	4e43      	ldr	r6, [pc, #268]	; (800b900 <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 800b7f4:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800b7f6:	f7fd fc8d 	bl	8009114 <HAL_GetTick>
 800b7fa:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b7fc:	e004      	b.n	800b808 <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800b7fe:	f7fd fc89 	bl	8009114 <HAL_GetTick>
 800b802:	1b40      	subs	r0, r0, r5
 800b804:	2802      	cmp	r0, #2
 800b806:	d8d0      	bhi.n	800b7aa <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b808:	6833      	ldr	r3, [r6, #0]
 800b80a:	0799      	lsls	r1, r3, #30
 800b80c:	d4f7      	bmi.n	800b7fe <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b80e:	6823      	ldr	r3, [r4, #0]
 800b810:	e6f9      	b.n	800b606 <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800b812:	2801      	cmp	r0, #1
 800b814:	f43f af48 	beq.w	800b6a8 <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 800b818:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800b81a:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b81c:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800b820:	4291      	cmp	r1, r2
 800b822:	f47f af64 	bne.w	800b6ee <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b826:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800b828:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b82c:	4291      	cmp	r1, r2
 800b82e:	f47f af5e 	bne.w	800b6ee <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800b832:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b834:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800b838:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800b83a:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800b83e:	f47f af56 	bne.w	800b6ee <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800b842:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800b844:	0852      	lsrs	r2, r2, #1
 800b846:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800b84a:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800b84c:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800b850:	f47f af4d 	bne.w	800b6ee <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800b854:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b856:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800b85a:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 800b85e:	bf14      	ite	ne
 800b860:	2001      	movne	r0, #1
 800b862:	2000      	moveq	r0, #0
 800b864:	e720      	b.n	800b6a8 <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b866:	4b26      	ldr	r3, [pc, #152]	; (800b900 <HAL_RCC_OscConfig+0x3c4>)
 800b868:	681a      	ldr	r2, [r3, #0]
 800b86a:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800b86e:	601a      	str	r2, [r3, #0]
 800b870:	681a      	ldr	r2, [r3, #0]
 800b872:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800b876:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800b878:	e76d      	b.n	800b756 <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 800b87a:	4a21      	ldr	r2, [pc, #132]	; (800b900 <HAL_RCC_OscConfig+0x3c4>)
 800b87c:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b87e:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800b882:	6413      	str	r3, [r2, #64]	; 0x40
 800b884:	e6f3      	b.n	800b66e <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 800b886:	2001      	movs	r0, #1
}
 800b888:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b88a:	4b1d      	ldr	r3, [pc, #116]	; (800b900 <HAL_RCC_OscConfig+0x3c4>)
 800b88c:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800b88e:	f042 0204 	orr.w	r2, r2, #4
 800b892:	671a      	str	r2, [r3, #112]	; 0x70
 800b894:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800b896:	f042 0201 	orr.w	r2, r2, #1
 800b89a:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800b89c:	e78e      	b.n	800b7bc <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 800b89e:	f7fd fc39 	bl	8009114 <HAL_GetTick>
 800b8a2:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b8a4:	e005      	b.n	800b8b2 <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b8a6:	f7fd fc35 	bl	8009114 <HAL_GetTick>
 800b8aa:	1b80      	subs	r0, r0, r6
 800b8ac:	2802      	cmp	r0, #2
 800b8ae:	f63f af7c 	bhi.w	800b7aa <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b8b2:	682b      	ldr	r3, [r5, #0]
 800b8b4:	0199      	lsls	r1, r3, #6
 800b8b6:	d4f6      	bmi.n	800b8a6 <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b8b8:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800b8bc:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b8be:	430b      	orrs	r3, r1
 800b8c0:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800b8c4:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800b8c8:	0852      	lsrs	r2, r2, #1
 800b8ca:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800b8ce:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800b8d0:	490a      	ldr	r1, [pc, #40]	; (800b8fc <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b8d2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800b8d6:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b8d8:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800b8da:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 800b8dc:	f7fd fc1a 	bl	8009114 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b8e0:	4d07      	ldr	r5, [pc, #28]	; (800b900 <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 800b8e2:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b8e4:	e005      	b.n	800b8f2 <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b8e6:	f7fd fc15 	bl	8009114 <HAL_GetTick>
 800b8ea:	1b00      	subs	r0, r0, r4
 800b8ec:	2802      	cmp	r0, #2
 800b8ee:	f63f af5c 	bhi.w	800b7aa <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b8f2:	682b      	ldr	r3, [r5, #0]
 800b8f4:	019a      	lsls	r2, r3, #6
 800b8f6:	d5f6      	bpl.n	800b8e6 <HAL_RCC_OscConfig+0x3aa>
 800b8f8:	e6d5      	b.n	800b6a6 <HAL_RCC_OscConfig+0x16a>
 800b8fa:	bf00      	nop
 800b8fc:	42470000 	.word	0x42470000
 800b900:	40023800 	.word	0x40023800

0800b904 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b904:	4916      	ldr	r1, [pc, #88]	; (800b960 <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800b906:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b908:	688b      	ldr	r3, [r1, #8]
 800b90a:	f003 030c 	and.w	r3, r3, #12
 800b90e:	2b04      	cmp	r3, #4
 800b910:	d01b      	beq.n	800b94a <HAL_RCC_GetSysClockFreq+0x46>
 800b912:	2b08      	cmp	r3, #8
 800b914:	d117      	bne.n	800b946 <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800b916:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b918:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b91a:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b91c:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800b920:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b924:	d113      	bne.n	800b94e <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b926:	480f      	ldr	r0, [pc, #60]	; (800b964 <HAL_RCC_GetSysClockFreq+0x60>)
 800b928:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800b92c:	fba1 0100 	umull	r0, r1, r1, r0
 800b930:	f7f4 fd0e 	bl	8000350 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800b934:	4b0a      	ldr	r3, [pc, #40]	; (800b960 <HAL_RCC_GetSysClockFreq+0x5c>)
 800b936:	685b      	ldr	r3, [r3, #4]
 800b938:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800b93c:	3301      	adds	r3, #1
 800b93e:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800b940:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800b944:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800b946:	4807      	ldr	r0, [pc, #28]	; (800b964 <HAL_RCC_GetSysClockFreq+0x60>)
}
 800b948:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b94a:	4807      	ldr	r0, [pc, #28]	; (800b968 <HAL_RCC_GetSysClockFreq+0x64>)
}
 800b94c:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b94e:	4806      	ldr	r0, [pc, #24]	; (800b968 <HAL_RCC_GetSysClockFreq+0x64>)
 800b950:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800b954:	2300      	movs	r3, #0
 800b956:	fba1 0100 	umull	r0, r1, r1, r0
 800b95a:	f7f4 fcf9 	bl	8000350 <__aeabi_uldivmod>
 800b95e:	e7e9      	b.n	800b934 <HAL_RCC_GetSysClockFreq+0x30>
 800b960:	40023800 	.word	0x40023800
 800b964:	00f42400 	.word	0x00f42400
 800b968:	007a1200 	.word	0x007a1200

0800b96c <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800b96c:	2800      	cmp	r0, #0
 800b96e:	f000 8087 	beq.w	800ba80 <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800b972:	4a48      	ldr	r2, [pc, #288]	; (800ba94 <HAL_RCC_ClockConfig+0x128>)
 800b974:	6813      	ldr	r3, [r2, #0]
 800b976:	f003 030f 	and.w	r3, r3, #15
 800b97a:	428b      	cmp	r3, r1
{
 800b97c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b980:	460d      	mov	r5, r1
 800b982:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800b984:	d209      	bcs.n	800b99a <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800b986:	b2cb      	uxtb	r3, r1
 800b988:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800b98a:	6813      	ldr	r3, [r2, #0]
 800b98c:	f003 030f 	and.w	r3, r3, #15
 800b990:	428b      	cmp	r3, r1
 800b992:	d002      	beq.n	800b99a <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800b994:	2001      	movs	r0, #1
}
 800b996:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800b99a:	6823      	ldr	r3, [r4, #0]
 800b99c:	0798      	lsls	r0, r3, #30
 800b99e:	d514      	bpl.n	800b9ca <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800b9a0:	0759      	lsls	r1, r3, #29
 800b9a2:	d504      	bpl.n	800b9ae <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800b9a4:	493c      	ldr	r1, [pc, #240]	; (800ba98 <HAL_RCC_ClockConfig+0x12c>)
 800b9a6:	688a      	ldr	r2, [r1, #8]
 800b9a8:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800b9ac:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800b9ae:	071a      	lsls	r2, r3, #28
 800b9b0:	d504      	bpl.n	800b9bc <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800b9b2:	4939      	ldr	r1, [pc, #228]	; (800ba98 <HAL_RCC_ClockConfig+0x12c>)
 800b9b4:	688a      	ldr	r2, [r1, #8]
 800b9b6:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800b9ba:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800b9bc:	4936      	ldr	r1, [pc, #216]	; (800ba98 <HAL_RCC_ClockConfig+0x12c>)
 800b9be:	68a0      	ldr	r0, [r4, #8]
 800b9c0:	688a      	ldr	r2, [r1, #8]
 800b9c2:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800b9c6:	4302      	orrs	r2, r0
 800b9c8:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800b9ca:	07df      	lsls	r7, r3, #31
 800b9cc:	d521      	bpl.n	800ba12 <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800b9ce:	6862      	ldr	r2, [r4, #4]
 800b9d0:	2a01      	cmp	r2, #1
 800b9d2:	d057      	beq.n	800ba84 <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800b9d4:	1e93      	subs	r3, r2, #2
 800b9d6:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b9d8:	4b2f      	ldr	r3, [pc, #188]	; (800ba98 <HAL_RCC_ClockConfig+0x12c>)
 800b9da:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800b9dc:	d94d      	bls.n	800ba7a <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b9de:	0799      	lsls	r1, r3, #30
 800b9e0:	d5d8      	bpl.n	800b994 <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800b9e2:	4e2d      	ldr	r6, [pc, #180]	; (800ba98 <HAL_RCC_ClockConfig+0x12c>)
 800b9e4:	68b3      	ldr	r3, [r6, #8]
 800b9e6:	f023 0303 	bic.w	r3, r3, #3
 800b9ea:	4313      	orrs	r3, r2
 800b9ec:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800b9ee:	f7fd fb91 	bl	8009114 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800b9f2:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800b9f6:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800b9f8:	e004      	b.n	800ba04 <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800b9fa:	f7fd fb8b 	bl	8009114 <HAL_GetTick>
 800b9fe:	1bc0      	subs	r0, r0, r7
 800ba00:	4540      	cmp	r0, r8
 800ba02:	d844      	bhi.n	800ba8e <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800ba04:	68b3      	ldr	r3, [r6, #8]
 800ba06:	6862      	ldr	r2, [r4, #4]
 800ba08:	f003 030c 	and.w	r3, r3, #12
 800ba0c:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800ba10:	d1f3      	bne.n	800b9fa <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800ba12:	4a20      	ldr	r2, [pc, #128]	; (800ba94 <HAL_RCC_ClockConfig+0x128>)
 800ba14:	6813      	ldr	r3, [r2, #0]
 800ba16:	f003 030f 	and.w	r3, r3, #15
 800ba1a:	42ab      	cmp	r3, r5
 800ba1c:	d906      	bls.n	800ba2c <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800ba1e:	b2eb      	uxtb	r3, r5
 800ba20:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800ba22:	6813      	ldr	r3, [r2, #0]
 800ba24:	f003 030f 	and.w	r3, r3, #15
 800ba28:	42ab      	cmp	r3, r5
 800ba2a:	d1b3      	bne.n	800b994 <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800ba2c:	6823      	ldr	r3, [r4, #0]
 800ba2e:	075a      	lsls	r2, r3, #29
 800ba30:	d506      	bpl.n	800ba40 <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800ba32:	4919      	ldr	r1, [pc, #100]	; (800ba98 <HAL_RCC_ClockConfig+0x12c>)
 800ba34:	68e0      	ldr	r0, [r4, #12]
 800ba36:	688a      	ldr	r2, [r1, #8]
 800ba38:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800ba3c:	4302      	orrs	r2, r0
 800ba3e:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800ba40:	071b      	lsls	r3, r3, #28
 800ba42:	d507      	bpl.n	800ba54 <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800ba44:	4a14      	ldr	r2, [pc, #80]	; (800ba98 <HAL_RCC_ClockConfig+0x12c>)
 800ba46:	6921      	ldr	r1, [r4, #16]
 800ba48:	6893      	ldr	r3, [r2, #8]
 800ba4a:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800ba4e:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800ba52:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800ba54:	f7ff ff56 	bl	800b904 <HAL_RCC_GetSysClockFreq>
 800ba58:	4a0f      	ldr	r2, [pc, #60]	; (800ba98 <HAL_RCC_ClockConfig+0x12c>)
 800ba5a:	4c10      	ldr	r4, [pc, #64]	; (800ba9c <HAL_RCC_ClockConfig+0x130>)
 800ba5c:	6892      	ldr	r2, [r2, #8]
 800ba5e:	4910      	ldr	r1, [pc, #64]	; (800baa0 <HAL_RCC_ClockConfig+0x134>)
 800ba60:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800ba64:	4603      	mov	r3, r0
 800ba66:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800ba68:	480e      	ldr	r0, [pc, #56]	; (800baa4 <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800ba6a:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800ba6c:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800ba6e:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800ba70:	f7f6 fca4 	bl	80023bc <HAL_InitTick>
  return HAL_OK;
 800ba74:	2000      	movs	r0, #0
}
 800ba76:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800ba7a:	0198      	lsls	r0, r3, #6
 800ba7c:	d4b1      	bmi.n	800b9e2 <HAL_RCC_ClockConfig+0x76>
 800ba7e:	e789      	b.n	800b994 <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800ba80:	2001      	movs	r0, #1
}
 800ba82:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800ba84:	4b04      	ldr	r3, [pc, #16]	; (800ba98 <HAL_RCC_ClockConfig+0x12c>)
 800ba86:	681b      	ldr	r3, [r3, #0]
 800ba88:	039e      	lsls	r6, r3, #14
 800ba8a:	d4aa      	bmi.n	800b9e2 <HAL_RCC_ClockConfig+0x76>
 800ba8c:	e782      	b.n	800b994 <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800ba8e:	2003      	movs	r0, #3
 800ba90:	e781      	b.n	800b996 <HAL_RCC_ClockConfig+0x2a>
 800ba92:	bf00      	nop
 800ba94:	40023c00 	.word	0x40023c00
 800ba98:	40023800 	.word	0x40023800
 800ba9c:	0802e0e0 	.word	0x0802e0e0
 800baa0:	20000078 	.word	0x20000078
 800baa4:	20000080 	.word	0x20000080

0800baa8 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800baa8:	4b04      	ldr	r3, [pc, #16]	; (800babc <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800baaa:	4905      	ldr	r1, [pc, #20]	; (800bac0 <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800baac:	689b      	ldr	r3, [r3, #8]
 800baae:	4a05      	ldr	r2, [pc, #20]	; (800bac4 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800bab0:	6808      	ldr	r0, [r1, #0]
 800bab2:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800bab6:	5cd3      	ldrb	r3, [r2, r3]
}
 800bab8:	40d8      	lsrs	r0, r3
 800baba:	4770      	bx	lr
 800babc:	40023800 	.word	0x40023800
 800bac0:	20000078 	.word	0x20000078
 800bac4:	0802e0f0 	.word	0x0802e0f0

0800bac8 <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800bac8:	4b0e      	ldr	r3, [pc, #56]	; (800bb04 <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800baca:	220f      	movs	r2, #15
 800bacc:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800bace:	689a      	ldr	r2, [r3, #8]
 800bad0:	f002 0203 	and.w	r2, r2, #3
 800bad4:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800bad6:	689a      	ldr	r2, [r3, #8]
 800bad8:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800badc:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800bade:	689a      	ldr	r2, [r3, #8]
 800bae0:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800bae4:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800bae6:	689b      	ldr	r3, [r3, #8]
 800bae8:	08db      	lsrs	r3, r3, #3
{
 800baea:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800baec:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800baf0:	4c05      	ldr	r4, [pc, #20]	; (800bb08 <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800baf2:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800baf4:	6823      	ldr	r3, [r4, #0]
}
 800baf6:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800bafa:	f003 030f 	and.w	r3, r3, #15
 800bafe:	600b      	str	r3, [r1, #0]
}
 800bb00:	4770      	bx	lr
 800bb02:	bf00      	nop
 800bb04:	40023800 	.word	0x40023800
 800bb08:	40023c00 	.word	0x40023c00

0800bb0c <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800bb0c:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800bb0e:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800bb10:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800bb14:	b083      	sub	sp, #12
 800bb16:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800bb18:	d111      	bne.n	800bb3e <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800bb1a:	f013 0f0c 	tst.w	r3, #12
 800bb1e:	d16f      	bne.n	800bc00 <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800bb20:	0698      	lsls	r0, r3, #26
 800bb22:	f100 80c2 	bmi.w	800bcaa <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800bb26:	f013 0310 	ands.w	r3, r3, #16
 800bb2a:	f000 80bb 	beq.w	800bca4 <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800bb2e:	4b89      	ldr	r3, [pc, #548]	; (800bd54 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800bb30:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800bb34:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800bb38:	2000      	movs	r0, #0
}
 800bb3a:	b003      	add	sp, #12
 800bb3c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800bb3e:	4b86      	ldr	r3, [pc, #536]	; (800bd58 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800bb40:	4e86      	ldr	r6, [pc, #536]	; (800bd5c <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800bb42:	2200      	movs	r2, #0
 800bb44:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800bb46:	f7fd fae5 	bl	8009114 <HAL_GetTick>
 800bb4a:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800bb4c:	e004      	b.n	800bb58 <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800bb4e:	f7fd fae1 	bl	8009114 <HAL_GetTick>
 800bb52:	1b43      	subs	r3, r0, r5
 800bb54:	2b02      	cmp	r3, #2
 800bb56:	d850      	bhi.n	800bbfa <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800bb58:	6833      	ldr	r3, [r6, #0]
 800bb5a:	0118      	lsls	r0, r3, #4
 800bb5c:	d4f7      	bmi.n	800bb4e <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800bb5e:	6823      	ldr	r3, [r4, #0]
 800bb60:	07d9      	lsls	r1, r3, #31
 800bb62:	d506      	bpl.n	800bb72 <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800bb64:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800bb68:	0712      	lsls	r2, r2, #28
 800bb6a:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800bb6e:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800bb72:	079a      	lsls	r2, r3, #30
 800bb74:	d515      	bpl.n	800bba2 <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800bb76:	4979      	ldr	r1, [pc, #484]	; (800bd5c <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800bb78:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800bb7a:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800bb7e:	6865      	ldr	r5, [r4, #4]
 800bb80:	0612      	lsls	r2, r2, #24
 800bb82:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800bb86:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800bb8a:	4302      	orrs	r2, r0
 800bb8c:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800bb90:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800bb94:	69e2      	ldr	r2, [r4, #28]
 800bb96:	f020 001f 	bic.w	r0, r0, #31
 800bb9a:	3a01      	subs	r2, #1
 800bb9c:	4302      	orrs	r2, r0
 800bb9e:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800bba2:	065b      	lsls	r3, r3, #25
 800bba4:	d509      	bpl.n	800bbba <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800bba6:	1d20      	adds	r0, r4, #4
 800bba8:	c80b      	ldmia	r0, {r0, r1, r3}
 800bbaa:	061b      	lsls	r3, r3, #24
 800bbac:	4a6b      	ldr	r2, [pc, #428]	; (800bd5c <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800bbae:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800bbb2:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800bbb6:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800bbba:	4b67      	ldr	r3, [pc, #412]	; (800bd58 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800bbbc:	4e67      	ldr	r6, [pc, #412]	; (800bd5c <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800bbbe:	2201      	movs	r2, #1
 800bbc0:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800bbc2:	f7fd faa7 	bl	8009114 <HAL_GetTick>
 800bbc6:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800bbc8:	e004      	b.n	800bbd4 <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800bbca:	f7fd faa3 	bl	8009114 <HAL_GetTick>
 800bbce:	1b40      	subs	r0, r0, r5
 800bbd0:	2802      	cmp	r0, #2
 800bbd2:	d812      	bhi.n	800bbfa <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800bbd4:	6833      	ldr	r3, [r6, #0]
 800bbd6:	011f      	lsls	r7, r3, #4
 800bbd8:	d5f7      	bpl.n	800bbca <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800bbda:	6823      	ldr	r3, [r4, #0]
 800bbdc:	e79d      	b.n	800bb1a <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800bbde:	f7fd fa99 	bl	8009114 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800bbe2:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800bbe6:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800bbe8:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800bbea:	079b      	lsls	r3, r3, #30
 800bbec:	f100 80a5 	bmi.w	800bd3a <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800bbf0:	f7fd fa90 	bl	8009114 <HAL_GetTick>
 800bbf4:	1b80      	subs	r0, r0, r6
 800bbf6:	42b8      	cmp	r0, r7
 800bbf8:	d9f6      	bls.n	800bbe8 <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800bbfa:	2003      	movs	r0, #3
}
 800bbfc:	b003      	add	sp, #12
 800bbfe:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800bc00:	4b55      	ldr	r3, [pc, #340]	; (800bd58 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800bc02:	4e56      	ldr	r6, [pc, #344]	; (800bd5c <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800bc04:	2200      	movs	r2, #0
 800bc06:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800bc08:	f7fd fa84 	bl	8009114 <HAL_GetTick>
 800bc0c:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800bc0e:	e004      	b.n	800bc1a <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800bc10:	f7fd fa80 	bl	8009114 <HAL_GetTick>
 800bc14:	1b43      	subs	r3, r0, r5
 800bc16:	2b02      	cmp	r3, #2
 800bc18:	d8ef      	bhi.n	800bbfa <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800bc1a:	6833      	ldr	r3, [r6, #0]
 800bc1c:	0098      	lsls	r0, r3, #2
 800bc1e:	d4f7      	bmi.n	800bc10 <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800bc20:	6822      	ldr	r2, [r4, #0]
 800bc22:	0751      	lsls	r1, r2, #29
 800bc24:	d515      	bpl.n	800bc52 <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800bc26:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800bc28:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800bc2c:	6920      	ldr	r0, [r4, #16]
 800bc2e:	061b      	lsls	r3, r3, #24
 800bc30:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800bc34:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800bc38:	430b      	orrs	r3, r1
 800bc3a:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800bc3e:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800bc42:	6a21      	ldr	r1, [r4, #32]
 800bc44:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800bc48:	3901      	subs	r1, #1
 800bc4a:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800bc4e:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800bc52:	0713      	lsls	r3, r2, #28
 800bc54:	d514      	bpl.n	800bc80 <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800bc56:	4a41      	ldr	r2, [pc, #260]	; (800bd5c <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800bc58:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800bc5a:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800bc5e:	6920      	ldr	r0, [r4, #16]
 800bc60:	071b      	lsls	r3, r3, #28
 800bc62:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800bc66:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800bc6a:	430b      	orrs	r3, r1
 800bc6c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800bc70:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800bc74:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800bc76:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800bc7a:	430b      	orrs	r3, r1
 800bc7c:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800bc80:	4b35      	ldr	r3, [pc, #212]	; (800bd58 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800bc82:	4e36      	ldr	r6, [pc, #216]	; (800bd5c <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800bc84:	2201      	movs	r2, #1
 800bc86:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800bc88:	f7fd fa44 	bl	8009114 <HAL_GetTick>
 800bc8c:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800bc8e:	e004      	b.n	800bc9a <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800bc90:	f7fd fa40 	bl	8009114 <HAL_GetTick>
 800bc94:	1b40      	subs	r0, r0, r5
 800bc96:	2802      	cmp	r0, #2
 800bc98:	d8af      	bhi.n	800bbfa <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800bc9a:	6833      	ldr	r3, [r6, #0]
 800bc9c:	009f      	lsls	r7, r3, #2
 800bc9e:	d5f7      	bpl.n	800bc90 <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800bca0:	6823      	ldr	r3, [r4, #0]
 800bca2:	e73d      	b.n	800bb20 <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800bca4:	4618      	mov	r0, r3
}
 800bca6:	b003      	add	sp, #12
 800bca8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800bcaa:	4b2c      	ldr	r3, [pc, #176]	; (800bd5c <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800bcac:	4d2c      	ldr	r5, [pc, #176]	; (800bd60 <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800bcae:	2200      	movs	r2, #0
 800bcb0:	9201      	str	r2, [sp, #4]
 800bcb2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800bcb4:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800bcb8:	641a      	str	r2, [r3, #64]	; 0x40
 800bcba:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800bcbc:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800bcc0:	9301      	str	r3, [sp, #4]
 800bcc2:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800bcc4:	682b      	ldr	r3, [r5, #0]
 800bcc6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800bcca:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800bccc:	f7fd fa22 	bl	8009114 <HAL_GetTick>
 800bcd0:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800bcd2:	e004      	b.n	800bcde <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800bcd4:	f7fd fa1e 	bl	8009114 <HAL_GetTick>
 800bcd8:	1b83      	subs	r3, r0, r6
 800bcda:	2b02      	cmp	r3, #2
 800bcdc:	d88d      	bhi.n	800bbfa <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800bcde:	682b      	ldr	r3, [r5, #0]
 800bce0:	05d9      	lsls	r1, r3, #23
 800bce2:	d5f7      	bpl.n	800bcd4 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800bce4:	4d1d      	ldr	r5, [pc, #116]	; (800bd5c <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800bce6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800bce8:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800bcea:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800bcee:	d111      	bne.n	800bd14 <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800bcf0:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800bcf4:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800bcf8:	d021      	beq.n	800bd3e <HAL_RCCEx_PeriphCLKConfig+0x232>
 800bcfa:	4918      	ldr	r1, [pc, #96]	; (800bd5c <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800bcfc:	688a      	ldr	r2, [r1, #8]
 800bcfe:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800bd02:	608a      	str	r2, [r1, #8]
 800bd04:	4a15      	ldr	r2, [pc, #84]	; (800bd5c <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800bd06:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800bd08:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800bd0c:	430b      	orrs	r3, r1
 800bd0e:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800bd10:	6823      	ldr	r3, [r4, #0]
 800bd12:	e708      	b.n	800bb26 <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800bd14:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800bd18:	4291      	cmp	r1, r2
 800bd1a:	d0eb      	beq.n	800bcf4 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800bd1c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800bd1e:	4a0e      	ldr	r2, [pc, #56]	; (800bd58 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800bd20:	2101      	movs	r1, #1
 800bd22:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800bd26:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800bd2a:	2100      	movs	r1, #0
 800bd2c:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800bd30:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800bd32:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800bd34:	07da      	lsls	r2, r3, #31
 800bd36:	f53f af52 	bmi.w	800bbde <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800bd3a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800bd3c:	e7d8      	b.n	800bcf0 <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800bd3e:	4807      	ldr	r0, [pc, #28]	; (800bd5c <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800bd40:	6882      	ldr	r2, [r0, #8]
 800bd42:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800bd46:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800bd4a:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800bd4e:	430a      	orrs	r2, r1
 800bd50:	6082      	str	r2, [r0, #8]
 800bd52:	e7d7      	b.n	800bd04 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800bd54:	42471000 	.word	0x42471000
 800bd58:	42470000 	.word	0x42470000
 800bd5c:	40023800 	.word	0x40023800
 800bd60:	40007000 	.word	0x40007000

0800bd64 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800bd64:	b1f0      	cbz	r0, 800bda4 <HAL_SDRAM_Init+0x40>
{
 800bd66:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800bd68:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800bd6c:	460d      	mov	r5, r1
 800bd6e:	4604      	mov	r4, r0
 800bd70:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800bd74:	b18b      	cbz	r3, 800bd9a <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800bd76:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800bd78:	2302      	movs	r3, #2
 800bd7a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800bd7e:	f851 0b04 	ldr.w	r0, [r1], #4
 800bd82:	f000 ffcd 	bl	800cd20 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800bd86:	e9d4 0200 	ldrd	r0, r2, [r4]
 800bd8a:	4629      	mov	r1, r5
 800bd8c:	f001 f806 	bl	800cd9c <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800bd90:	2301      	movs	r3, #1
 800bd92:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800bd96:	2000      	movs	r0, #0
}
 800bd98:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800bd9a:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800bd9e:	f7f6 faa5 	bl	80022ec <HAL_SDRAM_MspInit>
 800bda2:	e7e8      	b.n	800bd76 <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800bda4:	2001      	movs	r0, #1
}
 800bda6:	4770      	bx	lr

0800bda8 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800bda8:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800bdaa:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800bdae:	2b02      	cmp	r3, #2
{
 800bdb0:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800bdb2:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800bdb4:	d004      	beq.n	800bdc0 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800bdb6:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800bdba:	2c01      	cmp	r4, #1
 800bdbc:	d001      	beq.n	800bdc2 <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800bdbe:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800bdc0:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800bdc2:	460e      	mov	r6, r1
 800bdc4:	2302      	movs	r3, #2
 800bdc6:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800bdca:	6828      	ldr	r0, [r5, #0]
 800bdcc:	f001 f832 	bl	800ce34 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800bdd0:	6833      	ldr	r3, [r6, #0]
 800bdd2:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800bdd4:	bf06      	itte	eq
 800bdd6:	2305      	moveq	r3, #5
 800bdd8:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800bddc:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800bde0:	2000      	movs	r0, #0
}
 800bde2:	bd70      	pop	{r4, r5, r6, pc}

0800bde4 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800bde4:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800bde6:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800bdea:	2b02      	cmp	r3, #2
{
 800bdec:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800bdee:	b2d8      	uxtb	r0, r3
 800bdf0:	d005      	beq.n	800bdfe <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800bdf2:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800bdf6:	2b01      	cmp	r3, #1
 800bdf8:	b2dd      	uxtb	r5, r3
 800bdfa:	d001      	beq.n	800be00 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800bdfc:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800bdfe:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800be00:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800be02:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800be04:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800be08:	f001 f83e 	bl	800ce88 <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800be0c:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800be10:	2000      	movs	r0, #0
}
 800be12:	bd38      	pop	{r3, r4, r5, pc}

0800be14 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800be14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800be18:	b082      	sub	sp, #8
 800be1a:	461d      	mov	r5, r3
 800be1c:	4616      	mov	r6, r2
 800be1e:	460c      	mov	r4, r1
 800be20:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800be22:	f7fd f977 	bl	8009114 <HAL_GetTick>
 800be26:	4435      	add	r5, r6
 800be28:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800be2a:	f7fd f973 	bl	8009114 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800be2e:	4b27      	ldr	r3, [pc, #156]	; (800becc <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800be30:	681b      	ldr	r3, [r3, #0]
 800be32:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800be36:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800be3a:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800be3c:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800be3e:	1c73      	adds	r3, r6, #1
 800be40:	6839      	ldr	r1, [r7, #0]
 800be42:	d107      	bne.n	800be54 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800be44:	688b      	ldr	r3, [r1, #8]
 800be46:	ea34 0303 	bics.w	r3, r4, r3
 800be4a:	d0fb      	beq.n	800be44 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800be4c:	2000      	movs	r0, #0
}
 800be4e:	b002      	add	sp, #8
 800be50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800be54:	688b      	ldr	r3, [r1, #8]
 800be56:	ea34 0303 	bics.w	r3, r4, r3
 800be5a:	d1f7      	bne.n	800be4c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800be5c:	f7fd f95a 	bl	8009114 <HAL_GetTick>
 800be60:	eba0 0008 	sub.w	r0, r0, r8
 800be64:	42a8      	cmp	r0, r5
 800be66:	d208      	bcs.n	800be7a <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800be68:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800be6a:	2b00      	cmp	r3, #0
      count--;
 800be6c:	9b01      	ldr	r3, [sp, #4]
 800be6e:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800be72:	bf08      	it	eq
 800be74:	2500      	moveq	r5, #0
      count--;
 800be76:	9301      	str	r3, [sp, #4]
 800be78:	e7e1      	b.n	800be3e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800be7a:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800be7e:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800be80:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800be84:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800be88:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800be8a:	d013      	beq.n	800beb4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800be8c:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800be8e:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800be92:	d107      	bne.n	800bea4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800be94:	681a      	ldr	r2, [r3, #0]
 800be96:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800be9a:	601a      	str	r2, [r3, #0]
 800be9c:	681a      	ldr	r2, [r3, #0]
 800be9e:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800bea2:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800bea4:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800bea6:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800bea8:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800beac:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800beb0:	2003      	movs	r0, #3
 800beb2:	e7cc      	b.n	800be4e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800beb4:	68ba      	ldr	r2, [r7, #8]
 800beb6:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800beba:	d002      	beq.n	800bec2 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800bebc:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800bec0:	d1e4      	bne.n	800be8c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800bec2:	681a      	ldr	r2, [r3, #0]
 800bec4:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800bec8:	601a      	str	r2, [r3, #0]
 800beca:	e7df      	b.n	800be8c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800becc:	20000078 	.word	0x20000078

0800bed0 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800bed0:	b538      	push	{r3, r4, r5, lr}
 800bed2:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bed4:	6842      	ldr	r2, [r0, #4]
 800bed6:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800beda:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bedc:	d006      	beq.n	800beec <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800bede:	460a      	mov	r2, r1
 800bee0:	2101      	movs	r1, #1
 800bee2:	f7ff ff97 	bl	800be14 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800bee6:	b978      	cbnz	r0, 800bf08 <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800bee8:	2000      	movs	r0, #0
}
 800beea:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800beec:	6882      	ldr	r2, [r0, #8]
 800beee:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800bef2:	d01c      	beq.n	800bf2e <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800bef4:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800bef8:	d00c      	beq.n	800bf14 <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800befa:	460a      	mov	r2, r1
 800befc:	4620      	mov	r0, r4
 800befe:	2180      	movs	r1, #128	; 0x80
 800bf00:	f7ff ff88 	bl	800be14 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800bf04:	2800      	cmp	r0, #0
 800bf06:	d0ef      	beq.n	800bee8 <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800bf08:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800bf0a:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800bf0e:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800bf10:	6563      	str	r3, [r4, #84]	; 0x54
}
 800bf12:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800bf14:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800bf16:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800bf18:	6829      	ldr	r1, [r5, #0]
 800bf1a:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800bf1e:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800bf20:	2101      	movs	r1, #1
 800bf22:	f7ff ff77 	bl	800be14 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800bf26:	2800      	cmp	r0, #0
 800bf28:	d1ee      	bne.n	800bf08 <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800bf2a:	2000      	movs	r0, #0
 800bf2c:	e7dd      	b.n	800beea <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800bf2e:	6800      	ldr	r0, [r0, #0]
 800bf30:	6802      	ldr	r2, [r0, #0]
 800bf32:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800bf36:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800bf38:	460a      	mov	r2, r1
 800bf3a:	4620      	mov	r0, r4
 800bf3c:	2180      	movs	r1, #128	; 0x80
 800bf3e:	f7ff ff69 	bl	800be14 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800bf42:	2800      	cmp	r0, #0
 800bf44:	d0d0      	beq.n	800bee8 <SPI_EndRxTransaction+0x18>
 800bf46:	e7df      	b.n	800bf08 <SPI_EndRxTransaction+0x38>

0800bf48 <HAL_SPI_Init>:
  if (hspi == NULL)
 800bf48:	2800      	cmp	r0, #0
 800bf4a:	d05c      	beq.n	800c006 <HAL_SPI_Init+0xbe>
{
 800bf4c:	b570      	push	{r4, r5, r6, lr}
 800bf4e:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800bf50:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800bf52:	2800      	cmp	r0, #0
 800bf54:	d047      	beq.n	800bfe6 <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800bf56:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800bf58:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800bf5c:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800bf60:	2200      	movs	r2, #0
 800bf62:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800bf64:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800bf68:	2b00      	cmp	r3, #0
 800bf6a:	d042      	beq.n	800bff2 <HAL_SPI_Init+0xaa>
 800bf6c:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800bf6e:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bf70:	68a5      	ldr	r5, [r4, #8]
 800bf72:	69a2      	ldr	r2, [r4, #24]
 800bf74:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800bf76:	2302      	movs	r3, #2
 800bf78:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800bf7c:	680b      	ldr	r3, [r1, #0]
 800bf7e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800bf82:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bf84:	6863      	ldr	r3, [r4, #4]
 800bf86:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800bf8a:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800bf8e:	432b      	orrs	r3, r5
 800bf90:	68e5      	ldr	r5, [r4, #12]
 800bf92:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800bf96:	432b      	orrs	r3, r5
 800bf98:	6925      	ldr	r5, [r4, #16]
 800bf9a:	f005 0502 	and.w	r5, r5, #2
 800bf9e:	432b      	orrs	r3, r5
 800bfa0:	6965      	ldr	r5, [r4, #20]
 800bfa2:	f005 0501 	and.w	r5, r5, #1
 800bfa6:	432b      	orrs	r3, r5
 800bfa8:	69e5      	ldr	r5, [r4, #28]
 800bfaa:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800bfae:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800bfb2:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800bfb6:	4333      	orrs	r3, r6
 800bfb8:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bfba:	0c12      	lsrs	r2, r2, #16
 800bfbc:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bfc0:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bfc4:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bfc8:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bfcc:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bfce:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bfd0:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800bfd2:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800bfd4:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800bfd6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800bfda:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800bfdc:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800bfde:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800bfe0:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800bfe4:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bfe6:	6863      	ldr	r3, [r4, #4]
 800bfe8:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800bfec:	d0b6      	beq.n	800bf5c <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800bfee:	61e0      	str	r0, [r4, #28]
 800bff0:	e7b4      	b.n	800bf5c <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800bff2:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800bff4:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800bff8:	f7f6 f8ce 	bl	8002198 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bffc:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c000:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800c004:	e7b3      	b.n	800bf6e <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800c006:	2001      	movs	r0, #1
}
 800c008:	4770      	bx	lr
 800c00a:	bf00      	nop

0800c00c <HAL_SPI_Transmit>:
{
 800c00c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c010:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800c012:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800c016:	2801      	cmp	r0, #1
{
 800c018:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800c01a:	f000 8085 	beq.w	800c128 <HAL_SPI_Transmit+0x11c>
 800c01e:	461d      	mov	r5, r3
 800c020:	2301      	movs	r3, #1
 800c022:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800c026:	4688      	mov	r8, r1
 800c028:	4617      	mov	r7, r2
 800c02a:	f7fd f873 	bl	8009114 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800c02e:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800c032:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800c034:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800c036:	b2d8      	uxtb	r0, r3
 800c038:	d009      	beq.n	800c04e <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800c03a:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800c03c:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800c03e:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800c040:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800c044:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800c048:	b002      	add	sp, #8
 800c04a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800c04e:	f1b8 0f00 	cmp.w	r8, #0
 800c052:	d0f3      	beq.n	800c03c <HAL_SPI_Transmit+0x30>
 800c054:	2f00      	cmp	r7, #0
 800c056:	d0f1      	beq.n	800c03c <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c058:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800c05a:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800c05c:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c060:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800c062:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c064:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800c068:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800c06c:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c070:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800c072:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800c074:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800c076:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800c078:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800c07a:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c07c:	f000 8085 	beq.w	800c18a <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c080:	6803      	ldr	r3, [r0, #0]
 800c082:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800c084:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c086:	d403      	bmi.n	800c090 <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800c088:	6803      	ldr	r3, [r0, #0]
 800c08a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800c08e:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800c090:	68e3      	ldr	r3, [r4, #12]
 800c092:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800c096:	d04b      	beq.n	800c130 <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c098:	6863      	ldr	r3, [r4, #4]
 800c09a:	2b00      	cmp	r3, #0
 800c09c:	f000 8097 	beq.w	800c1ce <HAL_SPI_Transmit+0x1c2>
 800c0a0:	2f01      	cmp	r7, #1
 800c0a2:	f000 8094 	beq.w	800c1ce <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800c0a6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c0a8:	b29b      	uxth	r3, r3
 800c0aa:	b1ab      	cbz	r3, 800c0d8 <HAL_SPI_Transmit+0xcc>
 800c0ac:	1c68      	adds	r0, r5, #1
 800c0ae:	f040 8083 	bne.w	800c1b8 <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c0b2:	6823      	ldr	r3, [r4, #0]
 800c0b4:	689a      	ldr	r2, [r3, #8]
 800c0b6:	0791      	lsls	r1, r2, #30
 800c0b8:	f140 8094 	bpl.w	800c1e4 <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c0bc:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c0be:	7812      	ldrb	r2, [r2, #0]
 800c0c0:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800c0c2:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c0c4:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c0c6:	3901      	subs	r1, #1
 800c0c8:	b289      	uxth	r1, r1
 800c0ca:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c0cc:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c0ce:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800c0d0:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c0d2:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800c0d4:	2900      	cmp	r1, #0
 800c0d6:	d1ec      	bne.n	800c0b2 <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c0d8:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c0da:	4b5b      	ldr	r3, [pc, #364]	; (800c248 <HAL_SPI_Transmit+0x23c>)
 800c0dc:	4a5b      	ldr	r2, [pc, #364]	; (800c24c <HAL_SPI_Transmit+0x240>)
 800c0de:	681b      	ldr	r3, [r3, #0]
 800c0e0:	fba2 2303 	umull	r2, r3, r2, r3
 800c0e4:	0d5b      	lsrs	r3, r3, #21
 800c0e6:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800c0ea:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c0ee:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c0f2:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c0f4:	d107      	bne.n	800c106 <HAL_SPI_Transmit+0xfa>
 800c0f6:	e098      	b.n	800c22a <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800c0f8:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c0fa:	6822      	ldr	r2, [r4, #0]
      count--;
 800c0fc:	3b01      	subs	r3, #1
 800c0fe:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c100:	6893      	ldr	r3, [r2, #8]
 800c102:	061b      	lsls	r3, r3, #24
 800c104:	d502      	bpl.n	800c10c <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800c106:	9b01      	ldr	r3, [sp, #4]
 800c108:	2b00      	cmp	r3, #0
 800c10a:	d1f5      	bne.n	800c0f8 <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800c10c:	68a3      	ldr	r3, [r4, #8]
 800c10e:	b933      	cbnz	r3, 800c11e <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800c110:	6822      	ldr	r2, [r4, #0]
 800c112:	9300      	str	r3, [sp, #0]
 800c114:	68d3      	ldr	r3, [r2, #12]
 800c116:	9300      	str	r3, [sp, #0]
 800c118:	6893      	ldr	r3, [r2, #8]
 800c11a:	9300      	str	r3, [sp, #0]
 800c11c:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800c11e:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800c120:	3800      	subs	r0, #0
 800c122:	bf18      	it	ne
 800c124:	2001      	movne	r0, #1
error:
 800c126:	e789      	b.n	800c03c <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800c128:	2002      	movs	r0, #2
}
 800c12a:	b002      	add	sp, #8
 800c12c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c130:	6861      	ldr	r1, [r4, #4]
 800c132:	2900      	cmp	r1, #0
 800c134:	d176      	bne.n	800c224 <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c136:	4643      	mov	r3, r8
 800c138:	f833 7b02 	ldrh.w	r7, [r3], #2
 800c13c:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800c13e:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c140:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c142:	3b01      	subs	r3, #1
 800c144:	b29b      	uxth	r3, r3
 800c146:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c148:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c14a:	b29b      	uxth	r3, r3
 800c14c:	2b00      	cmp	r3, #0
 800c14e:	d0c4      	beq.n	800c0da <HAL_SPI_Transmit+0xce>
 800c150:	1c6b      	adds	r3, r5, #1
 800c152:	d15e      	bne.n	800c212 <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c154:	6883      	ldr	r3, [r0, #8]
 800c156:	079f      	lsls	r7, r3, #30
 800c158:	d50f      	bpl.n	800c17a <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c15a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c15c:	f832 3b02 	ldrh.w	r3, [r2], #2
 800c160:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800c162:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c164:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c166:	3b01      	subs	r3, #1
 800c168:	b29b      	uxth	r3, r3
 800c16a:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c16c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c16e:	b29b      	uxth	r3, r3
 800c170:	2b00      	cmp	r3, #0
 800c172:	d0b1      	beq.n	800c0d8 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c174:	6883      	ldr	r3, [r0, #8]
 800c176:	079f      	lsls	r7, r3, #30
 800c178:	d4ef      	bmi.n	800c15a <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c17a:	f7fc ffcb 	bl	8009114 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800c17e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c180:	b29b      	uxth	r3, r3
 800c182:	2b00      	cmp	r3, #0
 800c184:	d0a8      	beq.n	800c0d8 <HAL_SPI_Transmit+0xcc>
 800c186:	6820      	ldr	r0, [r4, #0]
 800c188:	e7e4      	b.n	800c154 <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800c18a:	6803      	ldr	r3, [r0, #0]
 800c18c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800c190:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800c192:	6803      	ldr	r3, [r0, #0]
 800c194:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800c198:	6003      	str	r3, [r0, #0]
 800c19a:	e771      	b.n	800c080 <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c19c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c19e:	7812      	ldrb	r2, [r2, #0]
 800c1a0:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800c1a2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c1a4:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c1a6:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c1a8:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800c1aa:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c1ac:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c1ae:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c1b0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c1b2:	b29b      	uxth	r3, r3
 800c1b4:	2b00      	cmp	r3, #0
 800c1b6:	d08f      	beq.n	800c0d8 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c1b8:	6823      	ldr	r3, [r4, #0]
 800c1ba:	689a      	ldr	r2, [r3, #8]
 800c1bc:	0792      	lsls	r2, r2, #30
 800c1be:	d4ed      	bmi.n	800c19c <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c1c0:	f7fc ffa8 	bl	8009114 <HAL_GetTick>
 800c1c4:	1b80      	subs	r0, r0, r6
 800c1c6:	42a8      	cmp	r0, r5
 800c1c8:	d3f2      	bcc.n	800c1b0 <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800c1ca:	2003      	movs	r0, #3
 800c1cc:	e736      	b.n	800c03c <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c1ce:	f898 3000 	ldrb.w	r3, [r8]
 800c1d2:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800c1d4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c1d6:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c1d8:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c1da:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800c1dc:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c1de:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c1e0:	86e3      	strh	r3, [r4, #54]	; 0x36
 800c1e2:	e760      	b.n	800c0a6 <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c1e4:	f7fc ff96 	bl	8009114 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800c1e8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c1ea:	b29b      	uxth	r3, r3
 800c1ec:	2b00      	cmp	r3, #0
 800c1ee:	f47f af60 	bne.w	800c0b2 <HAL_SPI_Transmit+0xa6>
 800c1f2:	e771      	b.n	800c0d8 <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c1f4:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c1f6:	f831 3b02 	ldrh.w	r3, [r1], #2
 800c1fa:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800c1fc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c1fe:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c200:	3b01      	subs	r3, #1
 800c202:	b29b      	uxth	r3, r3
 800c204:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c206:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c208:	b29b      	uxth	r3, r3
 800c20a:	2b00      	cmp	r3, #0
 800c20c:	f43f af64 	beq.w	800c0d8 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c210:	6822      	ldr	r2, [r4, #0]
 800c212:	6893      	ldr	r3, [r2, #8]
 800c214:	0799      	lsls	r1, r3, #30
 800c216:	d4ed      	bmi.n	800c1f4 <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c218:	f7fc ff7c 	bl	8009114 <HAL_GetTick>
 800c21c:	1b80      	subs	r0, r0, r6
 800c21e:	42a8      	cmp	r0, r5
 800c220:	d3f1      	bcc.n	800c206 <HAL_SPI_Transmit+0x1fa>
 800c222:	e7d2      	b.n	800c1ca <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c224:	2f01      	cmp	r7, #1
 800c226:	d18f      	bne.n	800c148 <HAL_SPI_Transmit+0x13c>
 800c228:	e785      	b.n	800c136 <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c22a:	4633      	mov	r3, r6
 800c22c:	462a      	mov	r2, r5
 800c22e:	2180      	movs	r1, #128	; 0x80
 800c230:	4620      	mov	r0, r4
 800c232:	f7ff fdef 	bl	800be14 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c236:	2800      	cmp	r0, #0
 800c238:	f43f af68 	beq.w	800c10c <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c23c:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c23e:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c240:	4313      	orrs	r3, r2
 800c242:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c244:	6562      	str	r2, [r4, #84]	; 0x54
 800c246:	e761      	b.n	800c10c <HAL_SPI_Transmit+0x100>
 800c248:	20000078 	.word	0x20000078
 800c24c:	165e9f81 	.word	0x165e9f81

0800c250 <HAL_SPI_TransmitReceive>:
{
 800c250:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c254:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800c256:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800c25a:	2801      	cmp	r0, #1
{
 800c25c:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800c25e:	f000 80ac 	beq.w	800c3ba <HAL_SPI_TransmitReceive+0x16a>
 800c262:	461e      	mov	r6, r3
 800c264:	2301      	movs	r3, #1
 800c266:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800c26a:	4690      	mov	r8, r2
 800c26c:	460f      	mov	r7, r1
 800c26e:	f7fc ff51 	bl	8009114 <HAL_GetTick>
 800c272:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800c274:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800c278:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800c27a:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800c27c:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800c27e:	d011      	beq.n	800c2a4 <HAL_SPI_TransmitReceive+0x54>
 800c280:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800c284:	d009      	beq.n	800c29a <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800c286:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800c288:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800c28a:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800c28c:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800c290:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800c294:	b002      	add	sp, #8
 800c296:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800c29a:	68a1      	ldr	r1, [r4, #8]
 800c29c:	2900      	cmp	r1, #0
 800c29e:	d1f2      	bne.n	800c286 <HAL_SPI_TransmitReceive+0x36>
 800c2a0:	2a04      	cmp	r2, #4
 800c2a2:	d1f0      	bne.n	800c286 <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800c2a4:	2f00      	cmp	r7, #0
 800c2a6:	f000 808c 	beq.w	800c3c2 <HAL_SPI_TransmitReceive+0x172>
 800c2aa:	f1b8 0f00 	cmp.w	r8, #0
 800c2ae:	f000 8088 	beq.w	800c3c2 <HAL_SPI_TransmitReceive+0x172>
 800c2b2:	2e00      	cmp	r6, #0
 800c2b4:	f000 8085 	beq.w	800c3c2 <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800c2b8:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800c2bc:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800c2c0:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800c2c2:	bf1c      	itt	ne
 800c2c4:	2205      	movne	r2, #5
 800c2c6:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c2ca:	2200      	movs	r2, #0
 800c2cc:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800c2ce:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c2d2:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800c2d4:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800c2d6:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c2d8:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800c2da:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c2dc:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800c2de:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800c2e0:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c2e2:	d403      	bmi.n	800c2ec <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800c2e4:	6811      	ldr	r1, [r2, #0]
 800c2e6:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800c2ea:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800c2ec:	68e1      	ldr	r1, [r4, #12]
 800c2ee:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800c2f2:	f000 809e 	beq.w	800c432 <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c2f6:	2b00      	cmp	r3, #0
 800c2f8:	f000 8091 	beq.w	800c41e <HAL_SPI_TransmitReceive+0x1ce>
 800c2fc:	2e01      	cmp	r6, #1
 800c2fe:	f000 808e 	beq.w	800c41e <HAL_SPI_TransmitReceive+0x1ce>
 800c302:	9b08      	ldr	r3, [sp, #32]
 800c304:	3301      	adds	r3, #1
        txallowed = 1U;
 800c306:	f04f 0601 	mov.w	r6, #1
 800c30a:	d028      	beq.n	800c35e <HAL_SPI_TransmitReceive+0x10e>
 800c30c:	e05b      	b.n	800c3c6 <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c30e:	6821      	ldr	r1, [r4, #0]
 800c310:	688b      	ldr	r3, [r1, #8]
 800c312:	0798      	lsls	r0, r3, #30
 800c314:	d50f      	bpl.n	800c336 <HAL_SPI_TransmitReceive+0xe6>
 800c316:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c318:	b29b      	uxth	r3, r3
 800c31a:	b163      	cbz	r3, 800c336 <HAL_SPI_TransmitReceive+0xe6>
 800c31c:	b15e      	cbz	r6, 800c336 <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800c31e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c320:	781b      	ldrb	r3, [r3, #0]
 800c322:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800c324:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800c326:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c328:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800c32a:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800c32c:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800c32e:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800c330:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800c332:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800c334:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c336:	688a      	ldr	r2, [r1, #8]
 800c338:	f012 0201 	ands.w	r2, r2, #1
 800c33c:	d00d      	beq.n	800c35a <HAL_SPI_TransmitReceive+0x10a>
 800c33e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c340:	b29b      	uxth	r3, r3
 800c342:	b153      	cbz	r3, 800c35a <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800c344:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800c346:	68c9      	ldr	r1, [r1, #12]
 800c348:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800c34a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800c34c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c34e:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800c350:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800c352:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800c354:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c356:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800c358:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800c35a:	f7fc fedb 	bl	8009114 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c35e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800c360:	b292      	uxth	r2, r2
 800c362:	2a00      	cmp	r2, #0
 800c364:	d1d3      	bne.n	800c30e <HAL_SPI_TransmitReceive+0xbe>
 800c366:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c368:	b29b      	uxth	r3, r3
 800c36a:	2b00      	cmp	r3, #0
 800c36c:	d1cf      	bne.n	800c30e <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c36e:	4b79      	ldr	r3, [pc, #484]	; (800c554 <HAL_SPI_TransmitReceive+0x304>)
 800c370:	4a79      	ldr	r2, [pc, #484]	; (800c558 <HAL_SPI_TransmitReceive+0x308>)
 800c372:	681b      	ldr	r3, [r3, #0]
 800c374:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c378:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c37a:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800c37e:	0d5b      	lsrs	r3, r3, #21
 800c380:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c384:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c388:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c38a:	d107      	bne.n	800c39c <HAL_SPI_TransmitReceive+0x14c>
 800c38c:	e0d2      	b.n	800c534 <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800c38e:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c390:	6822      	ldr	r2, [r4, #0]
      count--;
 800c392:	3b01      	subs	r3, #1
 800c394:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c396:	6893      	ldr	r3, [r2, #8]
 800c398:	061b      	lsls	r3, r3, #24
 800c39a:	d502      	bpl.n	800c3a2 <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800c39c:	9b01      	ldr	r3, [sp, #4]
 800c39e:	2b00      	cmp	r3, #0
 800c3a0:	d1f5      	bne.n	800c38e <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800c3a2:	68a0      	ldr	r0, [r4, #8]
 800c3a4:	2800      	cmp	r0, #0
 800c3a6:	f040 8082 	bne.w	800c4ae <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800c3aa:	6823      	ldr	r3, [r4, #0]
 800c3ac:	9000      	str	r0, [sp, #0]
 800c3ae:	68da      	ldr	r2, [r3, #12]
 800c3b0:	9200      	str	r2, [sp, #0]
 800c3b2:	689b      	ldr	r3, [r3, #8]
 800c3b4:	9300      	str	r3, [sp, #0]
 800c3b6:	9b00      	ldr	r3, [sp, #0]
 800c3b8:	e766      	b.n	800c288 <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800c3ba:	2002      	movs	r0, #2
}
 800c3bc:	b002      	add	sp, #8
 800c3be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800c3c2:	2001      	movs	r0, #1
 800c3c4:	e760      	b.n	800c288 <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c3c6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c3c8:	b29b      	uxth	r3, r3
 800c3ca:	b91b      	cbnz	r3, 800c3d4 <HAL_SPI_TransmitReceive+0x184>
 800c3cc:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c3ce:	b29b      	uxth	r3, r3
 800c3d0:	2b00      	cmp	r3, #0
 800c3d2:	d0cc      	beq.n	800c36e <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c3d4:	6822      	ldr	r2, [r4, #0]
 800c3d6:	6893      	ldr	r3, [r2, #8]
 800c3d8:	0799      	lsls	r1, r3, #30
 800c3da:	d50f      	bpl.n	800c3fc <HAL_SPI_TransmitReceive+0x1ac>
 800c3dc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c3de:	b29b      	uxth	r3, r3
 800c3e0:	b163      	cbz	r3, 800c3fc <HAL_SPI_TransmitReceive+0x1ac>
 800c3e2:	b15e      	cbz	r6, 800c3fc <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800c3e4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c3e6:	781b      	ldrb	r3, [r3, #0]
 800c3e8:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800c3ea:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800c3ec:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c3ee:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800c3f0:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800c3f2:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800c3f4:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c3f6:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800c3f8:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800c3fa:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c3fc:	6893      	ldr	r3, [r2, #8]
 800c3fe:	f013 0301 	ands.w	r3, r3, #1
 800c402:	d004      	beq.n	800c40e <HAL_SPI_TransmitReceive+0x1be>
 800c404:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c406:	b289      	uxth	r1, r1
 800c408:	2900      	cmp	r1, #0
 800c40a:	f040 8087 	bne.w	800c51c <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800c40e:	f7fc fe81 	bl	8009114 <HAL_GetTick>
 800c412:	9b08      	ldr	r3, [sp, #32]
 800c414:	1b40      	subs	r0, r0, r5
 800c416:	4298      	cmp	r0, r3
 800c418:	d3d5      	bcc.n	800c3c6 <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800c41a:	2003      	movs	r0, #3
 800c41c:	e734      	b.n	800c288 <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c41e:	783b      	ldrb	r3, [r7, #0]
 800c420:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800c422:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c424:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c426:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c428:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800c42a:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c42c:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c42e:	86e3      	strh	r3, [r4, #54]	; 0x36
 800c430:	e767      	b.n	800c302 <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c432:	2b00      	cmp	r3, #0
 800c434:	d13d      	bne.n	800c4b2 <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c436:	f837 3b02 	ldrh.w	r3, [r7], #2
 800c43a:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800c43c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800c43e:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c440:	3b01      	subs	r3, #1
 800c442:	b29b      	uxth	r3, r3
 800c444:	86e3      	strh	r3, [r4, #54]	; 0x36
 800c446:	9b08      	ldr	r3, [sp, #32]
 800c448:	3301      	adds	r3, #1
{
 800c44a:	f04f 0601 	mov.w	r6, #1
 800c44e:	d025      	beq.n	800c49c <HAL_SPI_TransmitReceive+0x24c>
 800c450:	e032      	b.n	800c4b8 <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c452:	6823      	ldr	r3, [r4, #0]
 800c454:	689a      	ldr	r2, [r3, #8]
 800c456:	0792      	lsls	r2, r2, #30
 800c458:	d50d      	bpl.n	800c476 <HAL_SPI_TransmitReceive+0x226>
 800c45a:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800c45c:	b292      	uxth	r2, r2
 800c45e:	b152      	cbz	r2, 800c476 <HAL_SPI_TransmitReceive+0x226>
 800c460:	b14e      	cbz	r6, 800c476 <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c462:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c464:	f831 2b02 	ldrh.w	r2, [r1], #2
 800c468:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800c46a:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c46c:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c46e:	3a01      	subs	r2, #1
 800c470:	b292      	uxth	r2, r2
        txallowed = 0U;
 800c472:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800c474:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c476:	689a      	ldr	r2, [r3, #8]
 800c478:	f012 0201 	ands.w	r2, r2, #1
 800c47c:	d00c      	beq.n	800c498 <HAL_SPI_TransmitReceive+0x248>
 800c47e:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c480:	b289      	uxth	r1, r1
 800c482:	b149      	cbz	r1, 800c498 <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c484:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800c486:	68db      	ldr	r3, [r3, #12]
 800c488:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800c48c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c48e:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c490:	3b01      	subs	r3, #1
 800c492:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800c494:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800c496:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800c498:	f7fc fe3c 	bl	8009114 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c49c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c49e:	b29b      	uxth	r3, r3
 800c4a0:	2b00      	cmp	r3, #0
 800c4a2:	d1d6      	bne.n	800c452 <HAL_SPI_TransmitReceive+0x202>
 800c4a4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c4a6:	b29b      	uxth	r3, r3
 800c4a8:	2b00      	cmp	r3, #0
 800c4aa:	d1d2      	bne.n	800c452 <HAL_SPI_TransmitReceive+0x202>
 800c4ac:	e75f      	b.n	800c36e <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800c4ae:	2000      	movs	r0, #0
 800c4b0:	e6ea      	b.n	800c288 <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c4b2:	2e01      	cmp	r6, #1
 800c4b4:	d1c7      	bne.n	800c446 <HAL_SPI_TransmitReceive+0x1f6>
 800c4b6:	e7be      	b.n	800c436 <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c4b8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c4ba:	b29b      	uxth	r3, r3
 800c4bc:	b923      	cbnz	r3, 800c4c8 <HAL_SPI_TransmitReceive+0x278>
 800c4be:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c4c0:	b29b      	uxth	r3, r3
 800c4c2:	2b00      	cmp	r3, #0
 800c4c4:	f43f af53 	beq.w	800c36e <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c4c8:	6822      	ldr	r2, [r4, #0]
 800c4ca:	6893      	ldr	r3, [r2, #8]
 800c4cc:	079f      	lsls	r7, r3, #30
 800c4ce:	d50d      	bpl.n	800c4ec <HAL_SPI_TransmitReceive+0x29c>
 800c4d0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c4d2:	b29b      	uxth	r3, r3
 800c4d4:	b153      	cbz	r3, 800c4ec <HAL_SPI_TransmitReceive+0x29c>
 800c4d6:	b14e      	cbz	r6, 800c4ec <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c4d8:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c4da:	f831 3b02 	ldrh.w	r3, [r1], #2
 800c4de:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800c4e0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c4e2:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c4e4:	3b01      	subs	r3, #1
 800c4e6:	b29b      	uxth	r3, r3
 800c4e8:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800c4ea:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c4ec:	6893      	ldr	r3, [r2, #8]
 800c4ee:	f013 0301 	ands.w	r3, r3, #1
 800c4f2:	d00c      	beq.n	800c50e <HAL_SPI_TransmitReceive+0x2be>
 800c4f4:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c4f6:	b289      	uxth	r1, r1
 800c4f8:	b149      	cbz	r1, 800c50e <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c4fa:	68d1      	ldr	r1, [r2, #12]
 800c4fc:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c4fe:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800c502:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800c504:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c506:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c508:	3b01      	subs	r3, #1
 800c50a:	b29b      	uxth	r3, r3
 800c50c:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800c50e:	f7fc fe01 	bl	8009114 <HAL_GetTick>
 800c512:	9b08      	ldr	r3, [sp, #32]
 800c514:	1b40      	subs	r0, r0, r5
 800c516:	4298      	cmp	r0, r3
 800c518:	d3ce      	bcc.n	800c4b8 <HAL_SPI_TransmitReceive+0x268>
 800c51a:	e77e      	b.n	800c41a <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800c51c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800c51e:	68d2      	ldr	r2, [r2, #12]
 800c520:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800c522:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800c524:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c526:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800c528:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800c52a:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800c52c:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c52e:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800c530:	461e      	mov	r6, r3
 800c532:	e76c      	b.n	800c40e <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c534:	9a08      	ldr	r2, [sp, #32]
 800c536:	462b      	mov	r3, r5
 800c538:	2180      	movs	r1, #128	; 0x80
 800c53a:	4620      	mov	r0, r4
 800c53c:	f7ff fc6a 	bl	800be14 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c540:	2800      	cmp	r0, #0
 800c542:	f43f af2e 	beq.w	800c3a2 <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c546:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c548:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c54a:	4313      	orrs	r3, r2
 800c54c:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800c54e:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c550:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800c552:	e699      	b.n	800c288 <HAL_SPI_TransmitReceive+0x38>
 800c554:	20000078 	.word	0x20000078
 800c558:	165e9f81 	.word	0x165e9f81

0800c55c <HAL_SPI_Receive>:
{
 800c55c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c560:	6846      	ldr	r6, [r0, #4]
 800c562:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800c566:	b082      	sub	sp, #8
 800c568:	4604      	mov	r4, r0
 800c56a:	4690      	mov	r8, r2
 800c56c:	461d      	mov	r5, r3
 800c56e:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c570:	d06e      	beq.n	800c650 <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800c572:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800c576:	2b01      	cmp	r3, #1
 800c578:	d076      	beq.n	800c668 <HAL_SPI_Receive+0x10c>
 800c57a:	2301      	movs	r3, #1
 800c57c:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800c580:	f7fc fdc8 	bl	8009114 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800c584:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800c588:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800c58c:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800c58e:	fa5f f08c 	uxtb.w	r0, ip
 800c592:	d009      	beq.n	800c5a8 <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800c594:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800c596:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800c598:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800c59a:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800c59e:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800c5a2:	b002      	add	sp, #8
 800c5a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800c5a8:	2f00      	cmp	r7, #0
 800c5aa:	d0f4      	beq.n	800c596 <HAL_SPI_Receive+0x3a>
 800c5ac:	f1b8 0f00 	cmp.w	r8, #0
 800c5b0:	d0f1      	beq.n	800c596 <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c5b2:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800c5b4:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c5b6:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800c5ba:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800c5bc:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c5c0:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800c5c4:	f04f 0104 	mov.w	r1, #4
 800c5c8:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800c5cc:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c5d0:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800c5d2:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800c5d4:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800c5d6:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800c5da:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800c5dc:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c5de:	d107      	bne.n	800c5f0 <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800c5e0:	6811      	ldr	r1, [r2, #0]
 800c5e2:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800c5e6:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800c5e8:	6811      	ldr	r1, [r2, #0]
 800c5ea:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800c5ee:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c5f0:	6811      	ldr	r1, [r2, #0]
 800c5f2:	0648      	lsls	r0, r1, #25
 800c5f4:	d403      	bmi.n	800c5fe <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800c5f6:	6811      	ldr	r1, [r2, #0]
 800c5f8:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800c5fc:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800c5fe:	68e1      	ldr	r1, [r4, #12]
 800c600:	2900      	cmp	r1, #0
 800c602:	d054      	beq.n	800c6ae <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800c604:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c606:	b289      	uxth	r1, r1
 800c608:	b1a9      	cbz	r1, 800c636 <HAL_SPI_Receive+0xda>
 800c60a:	1c69      	adds	r1, r5, #1
 800c60c:	d13e      	bne.n	800c68c <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c60e:	6893      	ldr	r3, [r2, #8]
 800c610:	07db      	lsls	r3, r3, #31
 800c612:	d544      	bpl.n	800c69e <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c614:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800c616:	68d1      	ldr	r1, [r2, #12]
 800c618:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800c61c:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c620:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c622:	f10c 3cff 	add.w	ip, ip, #4294967295
 800c626:	fa1f fc8c 	uxth.w	ip, ip
 800c62a:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c62e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c630:	b29b      	uxth	r3, r3
 800c632:	2b00      	cmp	r3, #0
 800c634:	d1eb      	bne.n	800c60e <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800c636:	4632      	mov	r2, r6
 800c638:	4629      	mov	r1, r5
 800c63a:	4620      	mov	r0, r4
 800c63c:	f7ff fc48 	bl	800bed0 <SPI_EndRxTransaction>
 800c640:	b108      	cbz	r0, 800c646 <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c642:	2320      	movs	r3, #32
 800c644:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800c646:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800c648:	3800      	subs	r0, #0
 800c64a:	bf18      	it	ne
 800c64c:	2001      	movne	r0, #1
error :
 800c64e:	e7a2      	b.n	800c596 <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c650:	6883      	ldr	r3, [r0, #8]
 800c652:	2b00      	cmp	r3, #0
 800c654:	d18d      	bne.n	800c572 <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c656:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800c658:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c65a:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800c65c:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c660:	460a      	mov	r2, r1
 800c662:	f7ff fdf5 	bl	800c250 <HAL_SPI_TransmitReceive>
 800c666:	e79c      	b.n	800c5a2 <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800c668:	2002      	movs	r0, #2
}
 800c66a:	b002      	add	sp, #8
 800c66c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c670:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c672:	68db      	ldr	r3, [r3, #12]
 800c674:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800c678:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c67a:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c67c:	3b01      	subs	r3, #1
 800c67e:	b29b      	uxth	r3, r3
 800c680:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c682:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c684:	b29b      	uxth	r3, r3
 800c686:	2b00      	cmp	r3, #0
 800c688:	d0d5      	beq.n	800c636 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c68a:	6823      	ldr	r3, [r4, #0]
 800c68c:	689a      	ldr	r2, [r3, #8]
 800c68e:	07d2      	lsls	r2, r2, #31
 800c690:	d4ee      	bmi.n	800c670 <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c692:	f7fc fd3f 	bl	8009114 <HAL_GetTick>
 800c696:	1b80      	subs	r0, r0, r6
 800c698:	42a8      	cmp	r0, r5
 800c69a:	d243      	bcs.n	800c724 <HAL_SPI_Receive+0x1c8>
 800c69c:	e7f1      	b.n	800c682 <HAL_SPI_Receive+0x126>
 800c69e:	f7fc fd39 	bl	8009114 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800c6a2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c6a4:	b29b      	uxth	r3, r3
 800c6a6:	2b00      	cmp	r3, #0
 800c6a8:	d0c5      	beq.n	800c636 <HAL_SPI_Receive+0xda>
 800c6aa:	6822      	ldr	r2, [r4, #0]
 800c6ac:	e7af      	b.n	800c60e <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800c6ae:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800c6b0:	b292      	uxth	r2, r2
 800c6b2:	2a00      	cmp	r2, #0
 800c6b4:	d0bf      	beq.n	800c636 <HAL_SPI_Receive+0xda>
 800c6b6:	1c6f      	adds	r7, r5, #1
 800c6b8:	d013      	beq.n	800c6e2 <HAL_SPI_Receive+0x186>
 800c6ba:	e02b      	b.n	800c714 <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800c6bc:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c6be:	7b1b      	ldrb	r3, [r3, #12]
 800c6c0:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800c6c2:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c6c6:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c6c8:	f10c 3cff 	add.w	ip, ip, #4294967295
 800c6cc:	fa1f fc8c 	uxth.w	ip, ip
 800c6d0:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c6d4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c6d6:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800c6d8:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c6da:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800c6dc:	2b00      	cmp	r3, #0
 800c6de:	d0aa      	beq.n	800c636 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c6e0:	6823      	ldr	r3, [r4, #0]
 800c6e2:	689a      	ldr	r2, [r3, #8]
 800c6e4:	07d0      	lsls	r0, r2, #31
 800c6e6:	d4e9      	bmi.n	800c6bc <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c6e8:	f7fc fd14 	bl	8009114 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800c6ec:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c6ee:	b29b      	uxth	r3, r3
 800c6f0:	2b00      	cmp	r3, #0
 800c6f2:	d1f5      	bne.n	800c6e0 <HAL_SPI_Receive+0x184>
 800c6f4:	e79f      	b.n	800c636 <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800c6f6:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c6f8:	7b1b      	ldrb	r3, [r3, #12]
 800c6fa:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800c6fc:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c6fe:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c700:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c702:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800c704:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c706:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c708:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c70a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c70c:	b29b      	uxth	r3, r3
 800c70e:	2b00      	cmp	r3, #0
 800c710:	d091      	beq.n	800c636 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c712:	6823      	ldr	r3, [r4, #0]
 800c714:	689a      	ldr	r2, [r3, #8]
 800c716:	07d1      	lsls	r1, r2, #31
 800c718:	d4ed      	bmi.n	800c6f6 <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c71a:	f7fc fcfb 	bl	8009114 <HAL_GetTick>
 800c71e:	1b80      	subs	r0, r0, r6
 800c720:	42a8      	cmp	r0, r5
 800c722:	d3f2      	bcc.n	800c70a <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800c724:	2003      	movs	r0, #3
 800c726:	e736      	b.n	800c596 <HAL_SPI_Receive+0x3a>

0800c728 <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800c728:	2800      	cmp	r0, #0
 800c72a:	f000 8087 	beq.w	800c83c <HAL_TIM_Base_Init+0x114>
{
 800c72e:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800c730:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800c734:	4604      	mov	r4, r0
 800c736:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c73a:	2b00      	cmp	r3, #0
 800c73c:	d079      	beq.n	800c832 <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800c73e:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c740:	493f      	ldr	r1, [pc, #252]	; (800c840 <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800c742:	2302      	movs	r3, #2
 800c744:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c748:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800c74a:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c74c:	d05d      	beq.n	800c80a <HAL_TIM_Base_Init+0xe2>
 800c74e:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800c752:	d031      	beq.n	800c7b8 <HAL_TIM_Base_Init+0x90>
 800c754:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800c758:	428a      	cmp	r2, r1
 800c75a:	d02d      	beq.n	800c7b8 <HAL_TIM_Base_Init+0x90>
 800c75c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c760:	428a      	cmp	r2, r1
 800c762:	d029      	beq.n	800c7b8 <HAL_TIM_Base_Init+0x90>
 800c764:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c768:	428a      	cmp	r2, r1
 800c76a:	d025      	beq.n	800c7b8 <HAL_TIM_Base_Init+0x90>
 800c76c:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800c770:	428a      	cmp	r2, r1
 800c772:	d04a      	beq.n	800c80a <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800c774:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800c778:	428a      	cmp	r2, r1
 800c77a:	d021      	beq.n	800c7c0 <HAL_TIM_Base_Init+0x98>
 800c77c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c780:	428a      	cmp	r2, r1
 800c782:	d01d      	beq.n	800c7c0 <HAL_TIM_Base_Init+0x98>
 800c784:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c788:	428a      	cmp	r2, r1
 800c78a:	d019      	beq.n	800c7c0 <HAL_TIM_Base_Init+0x98>
 800c78c:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800c790:	428a      	cmp	r2, r1
 800c792:	d015      	beq.n	800c7c0 <HAL_TIM_Base_Init+0x98>
 800c794:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c798:	428a      	cmp	r2, r1
 800c79a:	d011      	beq.n	800c7c0 <HAL_TIM_Base_Init+0x98>
 800c79c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c7a0:	428a      	cmp	r2, r1
 800c7a2:	d00d      	beq.n	800c7c0 <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c7a4:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c7a6:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c7a8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800c7ac:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800c7ae:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800c7b0:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c7b2:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800c7b4:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800c7b6:	e010      	b.n	800c7da <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800c7b8:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800c7ba:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800c7be:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c7c0:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c7c2:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800c7c4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c7c8:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c7ca:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c7ce:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c7d0:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800c7d2:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800c7d4:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c7d6:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800c7d8:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800c7da:	2301      	movs	r3, #1
 800c7dc:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800c7de:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800c7e2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800c7e6:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800c7ea:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800c7ee:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800c7f2:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800c7f6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800c7fa:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800c7fe:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800c802:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800c806:	2000      	movs	r0, #0
}
 800c808:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800c80a:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c80c:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800c80e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800c812:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800c814:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c818:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c81a:	69a1      	ldr	r1, [r4, #24]
 800c81c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800c820:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800c822:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c824:	68e3      	ldr	r3, [r4, #12]
 800c826:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800c828:	6863      	ldr	r3, [r4, #4]
 800c82a:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800c82c:	6963      	ldr	r3, [r4, #20]
 800c82e:	6313      	str	r3, [r2, #48]	; 0x30
 800c830:	e7d3      	b.n	800c7da <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800c832:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800c836:	f7f5 fceb 	bl	8002210 <HAL_TIM_Base_MspInit>
 800c83a:	e780      	b.n	800c73e <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800c83c:	2001      	movs	r0, #1
}
 800c83e:	4770      	bx	lr
 800c840:	40010000 	.word	0x40010000

0800c844 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800c844:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800c848:	2b01      	cmp	r3, #1
 800c84a:	d12f      	bne.n	800c8ac <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c84c:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c84e:	4919      	ldr	r1, [pc, #100]	; (800c8b4 <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800c850:	2202      	movs	r2, #2
 800c852:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c856:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c858:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c85a:	f042 0201 	orr.w	r2, r2, #1
 800c85e:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c860:	d019      	beq.n	800c896 <HAL_TIM_Base_Start_IT+0x52>
 800c862:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800c866:	d016      	beq.n	800c896 <HAL_TIM_Base_Start_IT+0x52>
 800c868:	4a13      	ldr	r2, [pc, #76]	; (800c8b8 <HAL_TIM_Base_Start_IT+0x74>)
 800c86a:	4293      	cmp	r3, r2
 800c86c:	d013      	beq.n	800c896 <HAL_TIM_Base_Start_IT+0x52>
 800c86e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c872:	4293      	cmp	r3, r2
 800c874:	d00f      	beq.n	800c896 <HAL_TIM_Base_Start_IT+0x52>
 800c876:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c87a:	4293      	cmp	r3, r2
 800c87c:	d00b      	beq.n	800c896 <HAL_TIM_Base_Start_IT+0x52>
 800c87e:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800c882:	4293      	cmp	r3, r2
 800c884:	d007      	beq.n	800c896 <HAL_TIM_Base_Start_IT+0x52>
 800c886:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800c88a:	4293      	cmp	r3, r2
 800c88c:	d003      	beq.n	800c896 <HAL_TIM_Base_Start_IT+0x52>
 800c88e:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800c892:	4293      	cmp	r3, r2
 800c894:	d104      	bne.n	800c8a0 <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800c896:	689a      	ldr	r2, [r3, #8]
 800c898:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800c89c:	2a06      	cmp	r2, #6
 800c89e:	d007      	beq.n	800c8b0 <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800c8a0:	681a      	ldr	r2, [r3, #0]
 800c8a2:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800c8a6:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800c8a8:	601a      	str	r2, [r3, #0]
 800c8aa:	4770      	bx	lr
    return HAL_ERROR;
 800c8ac:	2001      	movs	r0, #1
 800c8ae:	4770      	bx	lr
  return HAL_OK;
 800c8b0:	2000      	movs	r0, #0
}
 800c8b2:	4770      	bx	lr
 800c8b4:	40010000 	.word	0x40010000
 800c8b8:	40000400 	.word	0x40000400

0800c8bc <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 800c8bc:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800c8c0:	2b01      	cmp	r3, #1
 800c8c2:	d075      	beq.n	800c9b0 <HAL_TIM_ConfigClockSource+0xf4>
 800c8c4:	4602      	mov	r2, r0
{
 800c8c6:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800c8c8:	2302      	movs	r3, #2
  tmpsmcr = htim->Instance->SMCR;
 800c8ca:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800c8cc:	f882 303d 	strb.w	r3, [r2, #61]	; 0x3d
  __HAL_LOCK(htim);
 800c8d0:	2001      	movs	r0, #1
 800c8d2:	f882 003c 	strb.w	r0, [r2, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800c8d6:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c8d8:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800c8dc:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 800c8e0:	60a3      	str	r3, [r4, #8]
  switch (sClockSourceConfig->ClockSource)
 800c8e2:	680b      	ldr	r3, [r1, #0]
 800c8e4:	2b60      	cmp	r3, #96	; 0x60
 800c8e6:	d065      	beq.n	800c9b4 <HAL_TIM_ConfigClockSource+0xf8>
 800c8e8:	d824      	bhi.n	800c934 <HAL_TIM_ConfigClockSource+0x78>
 800c8ea:	2b40      	cmp	r3, #64	; 0x40
 800c8ec:	d07c      	beq.n	800c9e8 <HAL_TIM_ConfigClockSource+0x12c>
 800c8ee:	d94b      	bls.n	800c988 <HAL_TIM_ConfigClockSource+0xcc>
 800c8f0:	2b50      	cmp	r3, #80	; 0x50
 800c8f2:	d117      	bne.n	800c924 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800c8f4:	684b      	ldr	r3, [r1, #4]
 800c8f6:	68cd      	ldr	r5, [r1, #12]
{
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 800c8f8:	6a21      	ldr	r1, [r4, #32]
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
  tmpccmr1 |= (TIM_ICFilter << 4U);

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800c8fa:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800c8fe:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800c900:	6a23      	ldr	r3, [r4, #32]
 800c902:	f023 0301 	bic.w	r3, r3, #1
 800c906:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c908:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800c90a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800c90e:	ea43 1305 	orr.w	r3, r3, r5, lsl #4

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800c912:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800c914:	6221      	str	r1, [r4, #32]
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 800c916:	68a3      	ldr	r3, [r4, #8]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 800c918:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c91c:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  HAL_StatusTypeDef status = HAL_OK;
 800c920:	2000      	movs	r0, #0
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800c922:	60a3      	str	r3, [r4, #8]
  htim->State = HAL_TIM_STATE_READY;
 800c924:	2101      	movs	r1, #1
  __HAL_UNLOCK(htim);
 800c926:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800c928:	f882 103d 	strb.w	r1, [r2, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800c92c:	f882 303c 	strb.w	r3, [r2, #60]	; 0x3c
}
 800c930:	bc30      	pop	{r4, r5}
 800c932:	4770      	bx	lr
  switch (sClockSourceConfig->ClockSource)
 800c934:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800c938:	d038      	beq.n	800c9ac <HAL_TIM_ConfigClockSource+0xf0>
 800c93a:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800c93e:	d110      	bne.n	800c962 <HAL_TIM_ConfigClockSource+0xa6>

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c940:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800c944:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c946:	432b      	orrs	r3, r5
 800c948:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c94a:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c94e:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800c952:	430b      	orrs	r3, r1

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800c954:	60a3      	str	r3, [r4, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800c956:	68a3      	ldr	r3, [r4, #8]
 800c958:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  HAL_StatusTypeDef status = HAL_OK;
 800c95c:	2000      	movs	r0, #0
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800c95e:	60a3      	str	r3, [r4, #8]
      break;
 800c960:	e7e0      	b.n	800c924 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800c962:	2b70      	cmp	r3, #112	; 0x70
 800c964:	d1de      	bne.n	800c924 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c966:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800c96a:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c96c:	432b      	orrs	r3, r5
 800c96e:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c970:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c974:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800c978:	430b      	orrs	r3, r1
  TIMx->SMCR = tmpsmcr;
 800c97a:	60a3      	str	r3, [r4, #8]
      tmpsmcr = htim->Instance->SMCR;
 800c97c:	68a3      	ldr	r3, [r4, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800c97e:	f043 0377 	orr.w	r3, r3, #119	; 0x77
  HAL_StatusTypeDef status = HAL_OK;
 800c982:	2000      	movs	r0, #0
      htim->Instance->SMCR = tmpsmcr;
 800c984:	60a3      	str	r3, [r4, #8]
      break;
 800c986:	e7cd      	b.n	800c924 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800c988:	2b20      	cmp	r3, #32
 800c98a:	d002      	beq.n	800c992 <HAL_TIM_ConfigClockSource+0xd6>
 800c98c:	d90a      	bls.n	800c9a4 <HAL_TIM_ConfigClockSource+0xe8>
 800c98e:	2b30      	cmp	r3, #48	; 0x30
 800c990:	d1c8      	bne.n	800c924 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr = TIMx->SMCR;
 800c992:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c994:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c998:	430b      	orrs	r3, r1
 800c99a:	f043 0307 	orr.w	r3, r3, #7
  HAL_StatusTypeDef status = HAL_OK;
 800c99e:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800c9a0:	60a3      	str	r3, [r4, #8]
}
 800c9a2:	e7bf      	b.n	800c924 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800c9a4:	f033 0110 	bics.w	r1, r3, #16
 800c9a8:	d1bc      	bne.n	800c924 <HAL_TIM_ConfigClockSource+0x68>
 800c9aa:	e7f2      	b.n	800c992 <HAL_TIM_ConfigClockSource+0xd6>
  HAL_StatusTypeDef status = HAL_OK;
 800c9ac:	2000      	movs	r0, #0
 800c9ae:	e7b9      	b.n	800c924 <HAL_TIM_ConfigClockSource+0x68>
  __HAL_LOCK(htim);
 800c9b0:	2002      	movs	r0, #2
}
 800c9b2:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c9b4:	6a23      	ldr	r3, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800c9b6:	6848      	ldr	r0, [r1, #4]
 800c9b8:	68cd      	ldr	r5, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c9ba:	f023 0310 	bic.w	r3, r3, #16
 800c9be:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c9c0:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800c9c2:	6a23      	ldr	r3, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800c9c4:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800c9c8:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 800c9cc:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800c9d0:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 800c9d4:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800c9d6:	6223      	str	r3, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800c9d8:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c9da:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c9de:	f043 0367 	orr.w	r3, r3, #103	; 0x67
  HAL_StatusTypeDef status = HAL_OK;
 800c9e2:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800c9e4:	60a3      	str	r3, [r4, #8]
}
 800c9e6:	e79d      	b.n	800c924 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800c9e8:	684b      	ldr	r3, [r1, #4]
 800c9ea:	68cd      	ldr	r5, [r1, #12]
  tmpccer = TIMx->CCER;
 800c9ec:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800c9ee:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800c9f2:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800c9f4:	6a23      	ldr	r3, [r4, #32]
 800c9f6:	f023 0301 	bic.w	r3, r3, #1
 800c9fa:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c9fc:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800c9fe:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800ca02:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800ca06:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800ca08:	6221      	str	r1, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800ca0a:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800ca0c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800ca10:	f043 0347 	orr.w	r3, r3, #71	; 0x47
  HAL_StatusTypeDef status = HAL_OK;
 800ca14:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800ca16:	60a3      	str	r3, [r4, #8]
}
 800ca18:	e784      	b.n	800c924 <HAL_TIM_ConfigClockSource+0x68>
 800ca1a:	bf00      	nop

0800ca1c <HAL_TIM_SlaveConfigSynchro>:
  __HAL_LOCK(htim);
 800ca1c:	f890 203c 	ldrb.w	r2, [r0, #60]	; 0x3c
 800ca20:	2a01      	cmp	r2, #1
 800ca22:	d050      	beq.n	800cac6 <HAL_TIM_SlaveConfigSynchro+0xaa>
 800ca24:	4603      	mov	r3, r0
{
 800ca26:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800ca28:	2202      	movs	r2, #2
  tmpsmcr = htim->Instance->SMCR;
 800ca2a:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800ca2c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  __HAL_LOCK(htim);
 800ca30:	2001      	movs	r0, #1
 800ca32:	f883 003c 	strb.w	r0, [r3, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800ca36:	68a2      	ldr	r2, [r4, #8]
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800ca38:	6848      	ldr	r0, [r1, #4]
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800ca3a:	680d      	ldr	r5, [r1, #0]
  tmpsmcr &= ~TIM_SMCR_TS;
 800ca3c:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800ca40:	4302      	orrs	r2, r0
  tmpsmcr &= ~TIM_SMCR_SMS;
 800ca42:	f022 0207 	bic.w	r2, r2, #7
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800ca46:	432a      	orrs	r2, r5
  switch (sSlaveConfig->InputTrigger)
 800ca48:	2850      	cmp	r0, #80	; 0x50
  htim->Instance->SMCR = tmpsmcr;
 800ca4a:	60a2      	str	r2, [r4, #8]
  switch (sSlaveConfig->InputTrigger)
 800ca4c:	d060      	beq.n	800cb10 <HAL_TIM_SlaveConfigSynchro+0xf4>
 800ca4e:	d90f      	bls.n	800ca70 <HAL_TIM_SlaveConfigSynchro+0x54>
 800ca50:	2860      	cmp	r0, #96	; 0x60
 800ca52:	d03a      	beq.n	800caca <HAL_TIM_SlaveConfigSynchro+0xae>
 800ca54:	2870      	cmp	r0, #112	; 0x70
 800ca56:	d10e      	bne.n	800ca76 <HAL_TIM_SlaveConfigSynchro+0x5a>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800ca58:	e9d1 5202 	ldrd	r5, r2, [r1, #8]
  tmpsmcr = TIMx->SMCR;
 800ca5c:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800ca5e:	432a      	orrs	r2, r5
 800ca60:	690d      	ldr	r5, [r1, #16]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800ca62:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800ca66:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800ca6a:	430a      	orrs	r2, r1
  TIMx->SMCR = tmpsmcr;
 800ca6c:	60a2      	str	r2, [r4, #8]
 800ca6e:	e00f      	b.n	800ca90 <HAL_TIM_SlaveConfigSynchro+0x74>
  switch (sSlaveConfig->InputTrigger)
 800ca70:	2840      	cmp	r0, #64	; 0x40
 800ca72:	d03d      	beq.n	800caf0 <HAL_TIM_SlaveConfigSynchro+0xd4>
 800ca74:	d907      	bls.n	800ca86 <HAL_TIM_SlaveConfigSynchro+0x6a>
    htim->State = HAL_TIM_STATE_READY;
 800ca76:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800ca78:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800ca7a:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800ca7e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
 800ca82:	bc30      	pop	{r4, r5}
 800ca84:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800ca86:	2820      	cmp	r0, #32
 800ca88:	d002      	beq.n	800ca90 <HAL_TIM_SlaveConfigSynchro+0x74>
 800ca8a:	d912      	bls.n	800cab2 <HAL_TIM_SlaveConfigSynchro+0x96>
 800ca8c:	2830      	cmp	r0, #48	; 0x30
 800ca8e:	d1f2      	bne.n	800ca76 <HAL_TIM_SlaveConfigSynchro+0x5a>
  __HAL_TIM_DISABLE_IT(htim, TIM_IT_TRIGGER);
 800ca90:	68e2      	ldr	r2, [r4, #12]
 800ca92:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800ca96:	60e2      	str	r2, [r4, #12]
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800ca98:	68e2      	ldr	r2, [r4, #12]
  __HAL_UNLOCK(htim);
 800ca9a:	2100      	movs	r1, #0
  htim->State = HAL_TIM_STATE_READY;
 800ca9c:	2501      	movs	r5, #1
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800ca9e:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800caa2:	60e2      	str	r2, [r4, #12]
  htim->State = HAL_TIM_STATE_READY;
 800caa4:	f883 503d 	strb.w	r5, [r3, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800caa8:	f883 103c 	strb.w	r1, [r3, #60]	; 0x3c
  return HAL_OK;
 800caac:	4608      	mov	r0, r1
}
 800caae:	bc30      	pop	{r4, r5}
 800cab0:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800cab2:	f030 0210 	bics.w	r2, r0, #16
 800cab6:	d0eb      	beq.n	800ca90 <HAL_TIM_SlaveConfigSynchro+0x74>
    htim->State = HAL_TIM_STATE_READY;
 800cab8:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800caba:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800cabc:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800cac0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    return HAL_ERROR;
 800cac4:	e7dd      	b.n	800ca82 <HAL_TIM_SlaveConfigSynchro+0x66>
  __HAL_LOCK(htim);
 800cac6:	2002      	movs	r0, #2
}
 800cac8:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800caca:	6a22      	ldr	r2, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800cacc:	6888      	ldr	r0, [r1, #8]
 800cace:	690d      	ldr	r5, [r1, #16]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800cad0:	f022 0210 	bic.w	r2, r2, #16
 800cad4:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800cad6:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800cad8:	6a22      	ldr	r2, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800cada:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800cade:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800cae2:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  tmpccer |= (TIM_ICPolarity << 4U);
 800cae6:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1 ;
 800caea:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800caec:	6222      	str	r2, [r4, #32]
 800caee:	e7cf      	b.n	800ca90 <HAL_TIM_SlaveConfigSynchro+0x74>
      if (sSlaveConfig->SlaveMode == TIM_SLAVEMODE_GATED)
 800caf0:	2d05      	cmp	r5, #5
 800caf2:	d0c0      	beq.n	800ca76 <HAL_TIM_SlaveConfigSynchro+0x5a>
      tmpccer = htim->Instance->CCER;
 800caf4:	6a20      	ldr	r0, [r4, #32]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800caf6:	6a22      	ldr	r2, [r4, #32]
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800caf8:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800cafa:	f022 0201 	bic.w	r2, r2, #1
 800cafe:	6222      	str	r2, [r4, #32]
      tmpccmr1 = htim->Instance->CCMR1;
 800cb00:	69a2      	ldr	r2, [r4, #24]
      tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800cb02:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800cb06:	ea42 1201 	orr.w	r2, r2, r1, lsl #4
      htim->Instance->CCMR1 = tmpccmr1;
 800cb0a:	61a2      	str	r2, [r4, #24]
      htim->Instance->CCER = tmpccer;
 800cb0c:	6220      	str	r0, [r4, #32]
      break;
 800cb0e:	e7bf      	b.n	800ca90 <HAL_TIM_SlaveConfigSynchro+0x74>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800cb10:	688a      	ldr	r2, [r1, #8]
 800cb12:	6908      	ldr	r0, [r1, #16]
  tmpccer = TIMx->CCER;
 800cb14:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800cb16:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800cb1a:	4311      	orrs	r1, r2
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800cb1c:	6a22      	ldr	r2, [r4, #32]
 800cb1e:	f022 0201 	bic.w	r2, r2, #1
 800cb22:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800cb24:	69a2      	ldr	r2, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800cb26:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800cb2a:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800cb2e:	61a2      	str	r2, [r4, #24]
  TIMx->CCER = tmpccer;
 800cb30:	6221      	str	r1, [r4, #32]
 800cb32:	e7ad      	b.n	800ca90 <HAL_TIM_SlaveConfigSynchro+0x74>

0800cb34 <HAL_TIM_OC_DelayElapsedCallback>:
 800cb34:	4770      	bx	lr
 800cb36:	bf00      	nop

0800cb38 <HAL_TIM_IC_CaptureCallback>:
 800cb38:	4770      	bx	lr
 800cb3a:	bf00      	nop

0800cb3c <HAL_TIM_PWM_PulseFinishedCallback>:
 800cb3c:	4770      	bx	lr
 800cb3e:	bf00      	nop

0800cb40 <HAL_TIM_TriggerCallback>:
 800cb40:	4770      	bx	lr
 800cb42:	bf00      	nop

0800cb44 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800cb44:	6803      	ldr	r3, [r0, #0]
 800cb46:	691a      	ldr	r2, [r3, #16]
 800cb48:	0791      	lsls	r1, r2, #30
{
 800cb4a:	b510      	push	{r4, lr}
 800cb4c:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800cb4e:	d502      	bpl.n	800cb56 <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800cb50:	68da      	ldr	r2, [r3, #12]
 800cb52:	0792      	lsls	r2, r2, #30
 800cb54:	d45f      	bmi.n	800cc16 <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800cb56:	691a      	ldr	r2, [r3, #16]
 800cb58:	0750      	lsls	r0, r2, #29
 800cb5a:	d502      	bpl.n	800cb62 <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800cb5c:	68da      	ldr	r2, [r3, #12]
 800cb5e:	0751      	lsls	r1, r2, #29
 800cb60:	d446      	bmi.n	800cbf0 <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800cb62:	691a      	ldr	r2, [r3, #16]
 800cb64:	0712      	lsls	r2, r2, #28
 800cb66:	d502      	bpl.n	800cb6e <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800cb68:	68da      	ldr	r2, [r3, #12]
 800cb6a:	0710      	lsls	r0, r2, #28
 800cb6c:	d42e      	bmi.n	800cbcc <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800cb6e:	691a      	ldr	r2, [r3, #16]
 800cb70:	06d2      	lsls	r2, r2, #27
 800cb72:	d502      	bpl.n	800cb7a <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800cb74:	68da      	ldr	r2, [r3, #12]
 800cb76:	06d0      	lsls	r0, r2, #27
 800cb78:	d418      	bmi.n	800cbac <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800cb7a:	691a      	ldr	r2, [r3, #16]
 800cb7c:	07d1      	lsls	r1, r2, #31
 800cb7e:	d502      	bpl.n	800cb86 <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800cb80:	68da      	ldr	r2, [r3, #12]
 800cb82:	07d2      	lsls	r2, r2, #31
 800cb84:	d45d      	bmi.n	800cc42 <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800cb86:	691a      	ldr	r2, [r3, #16]
 800cb88:	0610      	lsls	r0, r2, #24
 800cb8a:	d502      	bpl.n	800cb92 <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800cb8c:	68da      	ldr	r2, [r3, #12]
 800cb8e:	0611      	lsls	r1, r2, #24
 800cb90:	d45f      	bmi.n	800cc52 <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800cb92:	691a      	ldr	r2, [r3, #16]
 800cb94:	0652      	lsls	r2, r2, #25
 800cb96:	d502      	bpl.n	800cb9e <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800cb98:	68da      	ldr	r2, [r3, #12]
 800cb9a:	0650      	lsls	r0, r2, #25
 800cb9c:	d461      	bmi.n	800cc62 <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800cb9e:	691a      	ldr	r2, [r3, #16]
 800cba0:	0691      	lsls	r1, r2, #26
 800cba2:	d502      	bpl.n	800cbaa <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800cba4:	68da      	ldr	r2, [r3, #12]
 800cba6:	0692      	lsls	r2, r2, #26
 800cba8:	d443      	bmi.n	800cc32 <HAL_TIM_IRQHandler+0xee>
}
 800cbaa:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800cbac:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800cbb0:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800cbb2:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800cbb4:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800cbb6:	69db      	ldr	r3, [r3, #28]
 800cbb8:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800cbbc:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800cbbe:	d064      	beq.n	800cc8a <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800cbc0:	f7ff ffba 	bl	800cb38 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800cbc4:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800cbc6:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800cbc8:	7722      	strb	r2, [r4, #28]
 800cbca:	e7d6      	b.n	800cb7a <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800cbcc:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800cbd0:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800cbd2:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800cbd4:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800cbd6:	69db      	ldr	r3, [r3, #28]
 800cbd8:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800cbda:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800cbdc:	d152      	bne.n	800cc84 <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800cbde:	f7ff ffa9 	bl	800cb34 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800cbe2:	4620      	mov	r0, r4
 800cbe4:	f7ff ffaa 	bl	800cb3c <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800cbe8:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800cbea:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800cbec:	7722      	strb	r2, [r4, #28]
 800cbee:	e7be      	b.n	800cb6e <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800cbf0:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800cbf4:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800cbf6:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800cbf8:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800cbfa:	699b      	ldr	r3, [r3, #24]
 800cbfc:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800cc00:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800cc02:	d13c      	bne.n	800cc7e <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800cc04:	f7ff ff96 	bl	800cb34 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800cc08:	4620      	mov	r0, r4
 800cc0a:	f7ff ff97 	bl	800cb3c <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800cc0e:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800cc10:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800cc12:	7722      	strb	r2, [r4, #28]
 800cc14:	e7a5      	b.n	800cb62 <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800cc16:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800cc1a:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800cc1c:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800cc1e:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800cc20:	699b      	ldr	r3, [r3, #24]
 800cc22:	079b      	lsls	r3, r3, #30
 800cc24:	d025      	beq.n	800cc72 <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800cc26:	f7ff ff87 	bl	800cb38 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800cc2a:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800cc2c:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800cc2e:	7722      	strb	r2, [r4, #28]
 800cc30:	e791      	b.n	800cb56 <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800cc32:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800cc36:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800cc38:	611a      	str	r2, [r3, #16]
}
 800cc3a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800cc3e:	f000 b86b 	b.w	800cd18 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800cc42:	f06f 0201 	mvn.w	r2, #1
 800cc46:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800cc48:	4620      	mov	r0, r4
 800cc4a:	f7f4 ff97 	bl	8001b7c <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800cc4e:	6823      	ldr	r3, [r4, #0]
 800cc50:	e799      	b.n	800cb86 <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800cc52:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800cc56:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800cc58:	4620      	mov	r0, r4
 800cc5a:	f000 f85f 	bl	800cd1c <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800cc5e:	6823      	ldr	r3, [r4, #0]
 800cc60:	e797      	b.n	800cb92 <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800cc62:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800cc66:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800cc68:	4620      	mov	r0, r4
 800cc6a:	f7ff ff69 	bl	800cb40 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800cc6e:	6823      	ldr	r3, [r4, #0]
 800cc70:	e795      	b.n	800cb9e <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800cc72:	f7ff ff5f 	bl	800cb34 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800cc76:	4620      	mov	r0, r4
 800cc78:	f7ff ff60 	bl	800cb3c <HAL_TIM_PWM_PulseFinishedCallback>
 800cc7c:	e7d5      	b.n	800cc2a <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800cc7e:	f7ff ff5b 	bl	800cb38 <HAL_TIM_IC_CaptureCallback>
 800cc82:	e7c4      	b.n	800cc0e <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800cc84:	f7ff ff58 	bl	800cb38 <HAL_TIM_IC_CaptureCallback>
 800cc88:	e7ae      	b.n	800cbe8 <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800cc8a:	f7ff ff53 	bl	800cb34 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800cc8e:	4620      	mov	r0, r4
 800cc90:	f7ff ff54 	bl	800cb3c <HAL_TIM_PWM_PulseFinishedCallback>
 800cc94:	e796      	b.n	800cbc4 <HAL_TIM_IRQHandler+0x80>
 800cc96:	bf00      	nop

0800cc98 <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800cc98:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800cc9c:	2b01      	cmp	r3, #1
 800cc9e:	d037      	beq.n	800cd10 <HAL_TIMEx_MasterConfigSynchronization+0x78>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800cca0:	6803      	ldr	r3, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800cca2:	2202      	movs	r2, #2
{
 800cca4:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800cca6:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  tmpcr2 = htim->Instance->CR2;
 800ccaa:	685a      	ldr	r2, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800ccac:	680d      	ldr	r5, [r1, #0]
  tmpsmcr = htim->Instance->SMCR;
 800ccae:	689c      	ldr	r4, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800ccb0:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800ccb4:	432a      	orrs	r2, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800ccb6:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800ccb8:	4a16      	ldr	r2, [pc, #88]	; (800cd14 <HAL_TIMEx_MasterConfigSynchronization+0x7c>)
 800ccba:	4293      	cmp	r3, r2
 800ccbc:	d01a      	beq.n	800ccf4 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800ccbe:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800ccc2:	d017      	beq.n	800ccf4 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800ccc4:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800ccc8:	4293      	cmp	r3, r2
 800ccca:	d013      	beq.n	800ccf4 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800cccc:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ccd0:	4293      	cmp	r3, r2
 800ccd2:	d00f      	beq.n	800ccf4 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800ccd4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ccd8:	4293      	cmp	r3, r2
 800ccda:	d00b      	beq.n	800ccf4 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800ccdc:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800cce0:	4293      	cmp	r3, r2
 800cce2:	d007      	beq.n	800ccf4 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800cce4:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800cce8:	4293      	cmp	r3, r2
 800ccea:	d003      	beq.n	800ccf4 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800ccec:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800ccf0:	4293      	cmp	r3, r2
 800ccf2:	d104      	bne.n	800ccfe <HAL_TIMEx_MasterConfigSynchronization+0x66>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800ccf4:	684a      	ldr	r2, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 800ccf6:	f024 0480 	bic.w	r4, r4, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800ccfa:	4314      	orrs	r4, r2

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800ccfc:	609c      	str	r4, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;

  __HAL_UNLOCK(htim);
 800ccfe:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800cd00:	2201      	movs	r2, #1
 800cd02:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800cd06:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c

  return HAL_OK;
}
 800cd0a:	bc30      	pop	{r4, r5}
  return HAL_OK;
 800cd0c:	4618      	mov	r0, r3
}
 800cd0e:	4770      	bx	lr
  __HAL_LOCK(htim);
 800cd10:	2002      	movs	r0, #2
}
 800cd12:	4770      	bx	lr
 800cd14:	40010000 	.word	0x40010000

0800cd18 <HAL_TIMEx_CommutCallback>:
 800cd18:	4770      	bx	lr
 800cd1a:	bf00      	nop

0800cd1c <HAL_TIMEx_BreakCallback>:
 800cd1c:	4770      	bx	lr
 800cd1e:	bf00      	nop

0800cd20 <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800cd20:	680b      	ldr	r3, [r1, #0]
{
 800cd22:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800cd24:	b9d3      	cbnz	r3, 800cd5c <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800cd26:	6803      	ldr	r3, [r0, #0]
 800cd28:	684c      	ldr	r4, [r1, #4]
 800cd2a:	688a      	ldr	r2, [r1, #8]
 800cd2c:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800cd30:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800cd34:	4323      	orrs	r3, r4
 800cd36:	4313      	orrs	r3, r2
 800cd38:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800cd3c:	4323      	orrs	r3, r4
 800cd3e:	4313      	orrs	r3, r2
 800cd40:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800cd44:	4323      	orrs	r3, r4
 800cd46:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800cd4a:	4313      	orrs	r3, r2
 800cd4c:	432b      	orrs	r3, r5
 800cd4e:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800cd50:	4323      	orrs	r3, r4
 800cd52:	4313      	orrs	r3, r2
 800cd54:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800cd56:	bc30      	pop	{r4, r5}
 800cd58:	2000      	movs	r0, #0
 800cd5a:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800cd5c:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800cd60:	6803      	ldr	r3, [r0, #0]
 800cd62:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800cd66:	4323      	orrs	r3, r4
 800cd68:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800cd6a:	4313      	orrs	r3, r2
 800cd6c:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800cd6e:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800cd70:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800cd72:	6843      	ldr	r3, [r0, #4]
 800cd74:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800cd78:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800cd7c:	4313      	orrs	r3, r2
 800cd7e:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800cd82:	4323      	orrs	r3, r4
 800cd84:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800cd88:	4313      	orrs	r3, r2
 800cd8a:	432b      	orrs	r3, r5
 800cd8c:	698a      	ldr	r2, [r1, #24]
 800cd8e:	4323      	orrs	r3, r4
 800cd90:	4313      	orrs	r3, r2
 800cd92:	6043      	str	r3, [r0, #4]
}
 800cd94:	bc30      	pop	{r4, r5}
 800cd96:	2000      	movs	r0, #0
 800cd98:	4770      	bx	lr
 800cd9a:	bf00      	nop

0800cd9c <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800cd9c:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800cd9e:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800cda0:	bb02      	cbnz	r2, 800cde4 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800cda2:	e9d1 2400 	ldrd	r2, r4, [r1]
 800cda6:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800cdaa:	3c01      	subs	r4, #1
 800cdac:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800cdb0:	3a01      	subs	r2, #1
 800cdb2:	4313      	orrs	r3, r2
 800cdb4:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800cdb8:	3c01      	subs	r4, #1
 800cdba:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800cdbe:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800cdc2:	3a01      	subs	r2, #1
 800cdc4:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800cdc8:	698a      	ldr	r2, [r1, #24]
 800cdca:	1e69      	subs	r1, r5, #1
 800cdcc:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800cdd0:	1e61      	subs	r1, r4, #1
 800cdd2:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800cdd6:	3a01      	subs	r2, #1
 800cdd8:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800cddc:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800cdde:	bc30      	pop	{r4, r5}
 800cde0:	2000      	movs	r0, #0
 800cde2:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800cde4:	68cc      	ldr	r4, [r1, #12]
 800cde6:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800cde8:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800cdea:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800cdee:	3c01      	subs	r4, #1
 800cdf0:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800cdf4:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800cdf8:	3a01      	subs	r2, #1
 800cdfa:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800cdfe:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800ce00:	e9d1 2400 	ldrd	r2, r4, [r1]
 800ce04:	68c3      	ldr	r3, [r0, #12]
 800ce06:	3c01      	subs	r4, #1
 800ce08:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800ce0c:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800ce10:	3a01      	subs	r2, #1
 800ce12:	690c      	ldr	r4, [r1, #16]
 800ce14:	4313      	orrs	r3, r2
 800ce16:	698a      	ldr	r2, [r1, #24]
 800ce18:	1e69      	subs	r1, r5, #1
 800ce1a:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800ce1e:	1e61      	subs	r1, r4, #1
 800ce20:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800ce24:	3a01      	subs	r2, #1
 800ce26:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800ce2a:	60c3      	str	r3, [r0, #12]
}
 800ce2c:	bc30      	pop	{r4, r5}
 800ce2e:	2000      	movs	r0, #0
 800ce30:	4770      	bx	lr
 800ce32:	bf00      	nop

0800ce34 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800ce34:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800ce36:	680b      	ldr	r3, [r1, #0]
{
 800ce38:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800ce3a:	684a      	ldr	r2, [r1, #4]
{
 800ce3c:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800ce3e:	4313      	orrs	r3, r2
 800ce40:	6900      	ldr	r0, [r0, #16]
 800ce42:	68ca      	ldr	r2, [r1, #12]
 800ce44:	0d80      	lsrs	r0, r0, #22
 800ce46:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800ce4a:	688a      	ldr	r2, [r1, #8]
 800ce4c:	0580      	lsls	r0, r0, #22
 800ce4e:	4303      	orrs	r3, r0
 800ce50:	3a01      	subs	r2, #1
 800ce52:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800ce56:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800ce58:	f7fc f95c 	bl	8009114 <HAL_GetTick>
 800ce5c:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800ce5e:	1c6b      	adds	r3, r5, #1
 800ce60:	d105      	bne.n	800ce6e <FMC_SDRAM_SendCommand+0x3a>
 800ce62:	69a3      	ldr	r3, [r4, #24]
 800ce64:	f013 0320 	ands.w	r3, r3, #32
 800ce68:	d1fb      	bne.n	800ce62 <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800ce6a:	4618      	mov	r0, r3
}
 800ce6c:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800ce6e:	69a3      	ldr	r3, [r4, #24]
 800ce70:	f013 0320 	ands.w	r3, r3, #32
 800ce74:	d0f9      	beq.n	800ce6a <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800ce76:	b125      	cbz	r5, 800ce82 <FMC_SDRAM_SendCommand+0x4e>
 800ce78:	f7fc f94c 	bl	8009114 <HAL_GetTick>
 800ce7c:	1b80      	subs	r0, r0, r6
 800ce7e:	42a8      	cmp	r0, r5
 800ce80:	d9ed      	bls.n	800ce5e <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800ce82:	2003      	movs	r0, #3
}
 800ce84:	bd70      	pop	{r4, r5, r6, pc}
 800ce86:	bf00      	nop

0800ce88 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800ce88:	6943      	ldr	r3, [r0, #20]
 800ce8a:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800ce8e:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800ce90:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800ce94:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800ce98:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800ce9a:	6151      	str	r1, [r2, #20]
}
 800ce9c:	4770      	bx	lr
 800ce9e:	bf00      	nop

0800cea0 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800cea0:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800cea2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cea6:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800cea8:	f002 fb04 	bl	800f4b4 <xTaskGetSchedulerState>
 800ceac:	2801      	cmp	r0, #1
 800ceae:	d100      	bne.n	800ceb2 <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800ceb0:	bd08      	pop	{r3, pc}
 800ceb2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800ceb6:	f000 bc45 	b.w	800d744 <xPortSysTickHandler>
 800ceba:	bf00      	nop

0800cebc <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800cebc:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800cec0:	b92b      	cbnz	r3, 800cece <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800cec2:	4b06      	ldr	r3, [pc, #24]	; (800cedc <osKernelInitialize+0x20>)
 800cec4:	6818      	ldr	r0, [r3, #0]
 800cec6:	b928      	cbnz	r0, 800ced4 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800cec8:	2201      	movs	r2, #1
 800ceca:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800cecc:	4770      	bx	lr
    stat = osErrorISR;
 800cece:	f06f 0005 	mvn.w	r0, #5
 800ced2:	4770      	bx	lr
    } else {
      stat = osError;
 800ced4:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800ced8:	4770      	bx	lr
 800ceda:	bf00      	nop
 800cedc:	200023d8 	.word	0x200023d8

0800cee0 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800cee0:	b510      	push	{r4, lr}
 800cee2:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800cee6:	b974      	cbnz	r4, 800cf06 <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800cee8:	4b08      	ldr	r3, [pc, #32]	; (800cf0c <osKernelStart+0x2c>)
 800ceea:	681a      	ldr	r2, [r3, #0]
 800ceec:	2a01      	cmp	r2, #1
 800ceee:	d107      	bne.n	800cf00 <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800cef0:	4907      	ldr	r1, [pc, #28]	; (800cf10 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800cef2:	2202      	movs	r2, #2
 800cef4:	77cc      	strb	r4, [r1, #31]
 800cef6:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800cef8:	f002 f8b6 	bl	800f068 <vTaskStartScheduler>
      stat = osOK;
 800cefc:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800cefe:	bd10      	pop	{r4, pc}
      stat = osError;
 800cf00:	f04f 30ff 	mov.w	r0, #4294967295
}
 800cf04:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800cf06:	f06f 0005 	mvn.w	r0, #5
}
 800cf0a:	bd10      	pop	{r4, pc}
 800cf0c:	200023d8 	.word	0x200023d8
 800cf10:	e000ed00 	.word	0xe000ed00

0800cf14 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800cf14:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cf16:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800cf18:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800cf1a:	4615      	mov	r5, r2
  hTask = NULL;
 800cf1c:	9405      	str	r4, [sp, #20]
 800cf1e:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800cf22:	b9ea      	cbnz	r2, 800cf60 <osThreadNew+0x4c>
 800cf24:	b350      	cbz	r0, 800cf7c <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800cf26:	b1f5      	cbz	r5, 800cf66 <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800cf28:	69ab      	ldr	r3, [r5, #24]
 800cf2a:	bb5b      	cbnz	r3, 800cf84 <osThreadNew+0x70>
 800cf2c:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800cf2e:	686a      	ldr	r2, [r5, #4]
 800cf30:	07d2      	lsls	r2, r2, #31
 800cf32:	d423      	bmi.n	800cf7c <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800cf34:	696e      	ldr	r6, [r5, #20]
 800cf36:	b34e      	cbz	r6, 800cf8c <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800cf38:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800cf3c:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800cf3e:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800cf40:	b34c      	cbz	r4, 800cf96 <osThreadNew+0x82>
 800cf42:	68ea      	ldr	r2, [r5, #12]
 800cf44:	2aab      	cmp	r2, #171	; 0xab
 800cf46:	d919      	bls.n	800cf7c <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800cf48:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800cf4a:	b1bd      	cbz	r5, 800cf7c <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800cf4c:	b1b6      	cbz	r6, 800cf7c <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800cf4e:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800cf52:	9300      	str	r3, [sp, #0]
 800cf54:	4662      	mov	r2, ip
 800cf56:	460b      	mov	r3, r1
 800cf58:	4639      	mov	r1, r7
 800cf5a:	f001 ffc3 	bl	800eee4 <xTaskCreateStatic>
 800cf5e:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800cf60:	4620      	mov	r0, r4
 800cf62:	b007      	add	sp, #28
 800cf64:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cf66:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800cf68:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800cf6a:	ac05      	add	r4, sp, #20
 800cf6c:	9300      	str	r3, [sp, #0]
 800cf6e:	9401      	str	r4, [sp, #4]
 800cf70:	460b      	mov	r3, r1
 800cf72:	4629      	mov	r1, r5
 800cf74:	f001 fff0 	bl	800ef58 <xTaskCreate>
 800cf78:	2801      	cmp	r0, #1
 800cf7a:	d00a      	beq.n	800cf92 <osThreadNew+0x7e>
        return (NULL);
 800cf7c:	2400      	movs	r4, #0
}
 800cf7e:	4620      	mov	r0, r4
 800cf80:	b007      	add	sp, #28
 800cf82:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800cf84:	1e5c      	subs	r4, r3, #1
 800cf86:	2c37      	cmp	r4, #55	; 0x37
 800cf88:	d9d1      	bls.n	800cf2e <osThreadNew+0x1a>
 800cf8a:	e7f7      	b.n	800cf7c <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800cf8c:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800cf90:	e7d4      	b.n	800cf3c <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800cf92:	9c05      	ldr	r4, [sp, #20]
 800cf94:	e7e4      	b.n	800cf60 <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800cf96:	68ee      	ldr	r6, [r5, #12]
 800cf98:	2e00      	cmp	r6, #0
 800cf9a:	d1e1      	bne.n	800cf60 <osThreadNew+0x4c>
 800cf9c:	692d      	ldr	r5, [r5, #16]
 800cf9e:	2d00      	cmp	r5, #0
 800cfa0:	d1de      	bne.n	800cf60 <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800cfa2:	fa1f f28c 	uxth.w	r2, ip
 800cfa6:	463d      	mov	r5, r7
 800cfa8:	e7df      	b.n	800cf6a <osThreadNew+0x56>
 800cfaa:	bf00      	nop

0800cfac <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800cfac:	b510      	push	{r4, lr}
 800cfae:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800cfb2:	b92c      	cbnz	r4, 800cfc0 <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800cfb4:	b900      	cbnz	r0, 800cfb8 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800cfb6:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800cfb8:	f002 f800 	bl	800efbc <vTaskDelay>
    stat = osOK;
 800cfbc:	4620      	mov	r0, r4
}
 800cfbe:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800cfc0:	f06f 0005 	mvn.w	r0, #5
}
 800cfc4:	bd10      	pop	{r4, pc}
 800cfc6:	bf00      	nop

0800cfc8 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800cfc8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cfca:	b083      	sub	sp, #12
 800cfcc:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800cfd0:	b9fe      	cbnz	r6, 800d012 <osSemaphoreNew+0x4a>
 800cfd2:	b1f0      	cbz	r0, 800d012 <osSemaphoreNew+0x4a>
 800cfd4:	4288      	cmp	r0, r1
 800cfd6:	460f      	mov	r7, r1
 800cfd8:	d31b      	bcc.n	800d012 <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800cfda:	4615      	mov	r5, r2
 800cfdc:	b192      	cbz	r2, 800d004 <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800cfde:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800cfe2:	b1d2      	cbz	r2, 800d01a <osSemaphoreNew+0x52>
 800cfe4:	2b4f      	cmp	r3, #79	; 0x4f
 800cfe6:	d914      	bls.n	800d012 <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800cfe8:	2801      	cmp	r0, #1
 800cfea:	d038      	beq.n	800d05e <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800cfec:	f000 fd90 	bl	800db10 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800cff0:	4604      	mov	r4, r0
 800cff2:	b170      	cbz	r0, 800d012 <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800cff4:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800cff6:	4620      	mov	r0, r4
 800cff8:	4629      	mov	r1, r5
 800cffa:	f001 fc3b 	bl	800e874 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800cffe:	4620      	mov	r0, r4
 800d000:	b003      	add	sp, #12
 800d002:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800d004:	2801      	cmp	r0, #1
 800d006:	d012      	beq.n	800d02e <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800d008:	f000 fde2 	bl	800dbd0 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800d00c:	4604      	mov	r4, r0
 800d00e:	2800      	cmp	r0, #0
 800d010:	d1f1      	bne.n	800cff6 <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800d012:	2400      	movs	r4, #0
}
 800d014:	4620      	mov	r0, r4
 800d016:	b003      	add	sp, #12
 800d018:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800d01a:	2b00      	cmp	r3, #0
 800d01c:	d1f9      	bne.n	800d012 <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800d01e:	2801      	cmp	r0, #1
 800d020:	d005      	beq.n	800d02e <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800d022:	f000 fdd5 	bl	800dbd0 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800d026:	4604      	mov	r4, r0
 800d028:	2800      	cmp	r0, #0
 800d02a:	d1e3      	bne.n	800cff4 <osSemaphoreNew+0x2c>
 800d02c:	e7f1      	b.n	800d012 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800d02e:	2203      	movs	r2, #3
 800d030:	2100      	movs	r1, #0
 800d032:	2001      	movs	r0, #1
 800d034:	f000 fd2a 	bl	800da8c <xQueueGenericCreate>
 800d038:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800d03a:	2c00      	cmp	r4, #0
 800d03c:	d0e9      	beq.n	800d012 <osSemaphoreNew+0x4a>
 800d03e:	b917      	cbnz	r7, 800d046 <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800d040:	2d00      	cmp	r5, #0
 800d042:	d1d7      	bne.n	800cff4 <osSemaphoreNew+0x2c>
 800d044:	e7d7      	b.n	800cff6 <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800d046:	2300      	movs	r3, #0
 800d048:	461a      	mov	r2, r3
 800d04a:	4619      	mov	r1, r3
 800d04c:	4620      	mov	r0, r4
 800d04e:	f000 fe05 	bl	800dc5c <xQueueGenericSend>
 800d052:	2801      	cmp	r0, #1
 800d054:	d0f4      	beq.n	800d040 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800d056:	4620      	mov	r0, r4
 800d058:	f001 fbc6 	bl	800e7e8 <vQueueDelete>
 800d05c:	e7d9      	b.n	800d012 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800d05e:	4613      	mov	r3, r2
 800d060:	2203      	movs	r2, #3
 800d062:	9200      	str	r2, [sp, #0]
 800d064:	4631      	mov	r1, r6
 800d066:	4632      	mov	r2, r6
 800d068:	f000 fca2 	bl	800d9b0 <xQueueGenericCreateStatic>
 800d06c:	4604      	mov	r4, r0
 800d06e:	e7e4      	b.n	800d03a <osSemaphoreNew+0x72>

0800d070 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800d070:	b370      	cbz	r0, 800d0d0 <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800d072:	b510      	push	{r4, lr}
 800d074:	460c      	mov	r4, r1
 800d076:	b082      	sub	sp, #8
 800d078:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800d07c:	b1c3      	cbz	r3, 800d0b0 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800d07e:	bb21      	cbnz	r1, 800d0ca <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800d080:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d082:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800d084:	f001 fb2e 	bl	800e6e4 <xQueueReceiveFromISR>
 800d088:	2801      	cmp	r0, #1
 800d08a:	d11a      	bne.n	800d0c2 <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d08c:	9b01      	ldr	r3, [sp, #4]
 800d08e:	b913      	cbnz	r3, 800d096 <osSemaphoreAcquire+0x26>
  stat = osOK;
 800d090:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800d092:	b002      	add	sp, #8
 800d094:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800d096:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d09a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d09e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d0a2:	f3bf 8f4f 	dsb	sy
 800d0a6:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d0aa:	4620      	mov	r0, r4
}
 800d0ac:	b002      	add	sp, #8
 800d0ae:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800d0b0:	f001 f98e 	bl	800e3d0 <xQueueSemaphoreTake>
 800d0b4:	2801      	cmp	r0, #1
 800d0b6:	d0eb      	beq.n	800d090 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800d0b8:	b11c      	cbz	r4, 800d0c2 <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800d0ba:	f06f 0001 	mvn.w	r0, #1
}
 800d0be:	b002      	add	sp, #8
 800d0c0:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800d0c2:	f06f 0002 	mvn.w	r0, #2
}
 800d0c6:	b002      	add	sp, #8
 800d0c8:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800d0ca:	f06f 0003 	mvn.w	r0, #3
 800d0ce:	e7e0      	b.n	800d092 <osSemaphoreAcquire+0x22>
 800d0d0:	f06f 0003 	mvn.w	r0, #3
}
 800d0d4:	4770      	bx	lr
 800d0d6:	bf00      	nop

0800d0d8 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800d0d8:	b330      	cbz	r0, 800d128 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800d0da:	b510      	push	{r4, lr}
 800d0dc:	b082      	sub	sp, #8
 800d0de:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800d0e2:	b1ab      	cbz	r3, 800d110 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800d0e4:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800d0e6:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800d0e8:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800d0ea:	f000 ff9b 	bl	800e024 <xQueueGiveFromISR>
 800d0ee:	2801      	cmp	r0, #1
 800d0f0:	d117      	bne.n	800d122 <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800d0f2:	9b01      	ldr	r3, [sp, #4]
 800d0f4:	b193      	cbz	r3, 800d11c <osSemaphoreRelease+0x44>
 800d0f6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d0fa:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d0fe:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d102:	f3bf 8f4f 	dsb	sy
 800d106:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d10a:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800d10c:	b002      	add	sp, #8
 800d10e:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800d110:	461a      	mov	r2, r3
 800d112:	4619      	mov	r1, r3
 800d114:	f000 fda2 	bl	800dc5c <xQueueGenericSend>
 800d118:	2801      	cmp	r0, #1
 800d11a:	d102      	bne.n	800d122 <osSemaphoreRelease+0x4a>
  stat = osOK;
 800d11c:	2000      	movs	r0, #0
}
 800d11e:	b002      	add	sp, #8
 800d120:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800d122:	f06f 0002 	mvn.w	r0, #2
 800d126:	e7fa      	b.n	800d11e <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800d128:	f06f 0003 	mvn.w	r0, #3
}
 800d12c:	4770      	bx	lr
 800d12e:	bf00      	nop

0800d130 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800d130:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d132:	b085      	sub	sp, #20
 800d134:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800d138:	b987      	cbnz	r7, 800d15c <osMessageQueueNew+0x2c>
 800d13a:	4605      	mov	r5, r0
 800d13c:	b170      	cbz	r0, 800d15c <osMessageQueueNew+0x2c>
 800d13e:	b169      	cbz	r1, 800d15c <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800d140:	4614      	mov	r4, r2
 800d142:	b1ea      	cbz	r2, 800d180 <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800d144:	6893      	ldr	r3, [r2, #8]
 800d146:	b163      	cbz	r3, 800d162 <osMessageQueueNew+0x32>
 800d148:	68d2      	ldr	r2, [r2, #12]
 800d14a:	2a4f      	cmp	r2, #79	; 0x4f
 800d14c:	d906      	bls.n	800d15c <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800d14e:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800d150:	b122      	cbz	r2, 800d15c <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800d152:	6966      	ldr	r6, [r4, #20]
 800d154:	fb01 f505 	mul.w	r5, r1, r5
 800d158:	42ae      	cmp	r6, r5
 800d15a:	d21c      	bcs.n	800d196 <osMessageQueueNew+0x66>
  hQueue = NULL;
 800d15c:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800d15e:	b005      	add	sp, #20
 800d160:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800d162:	68d3      	ldr	r3, [r2, #12]
 800d164:	2b00      	cmp	r3, #0
 800d166:	d1f9      	bne.n	800d15c <osMessageQueueNew+0x2c>
 800d168:	6913      	ldr	r3, [r2, #16]
 800d16a:	2b00      	cmp	r3, #0
 800d16c:	d1f6      	bne.n	800d15c <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800d16e:	6952      	ldr	r2, [r2, #20]
 800d170:	2a00      	cmp	r2, #0
 800d172:	d1f3      	bne.n	800d15c <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800d174:	f000 fc8a 	bl	800da8c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800d178:	2800      	cmp	r0, #0
 800d17a:	d0ef      	beq.n	800d15c <osMessageQueueNew+0x2c>
        name = attr->name;
 800d17c:	6824      	ldr	r4, [r4, #0]
 800d17e:	e003      	b.n	800d188 <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800d180:	f000 fc84 	bl	800da8c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800d184:	2800      	cmp	r0, #0
 800d186:	d0e9      	beq.n	800d15c <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800d188:	4621      	mov	r1, r4
 800d18a:	9003      	str	r0, [sp, #12]
 800d18c:	f001 fb72 	bl	800e874 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800d190:	9803      	ldr	r0, [sp, #12]
}
 800d192:	b005      	add	sp, #20
 800d194:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800d196:	9700      	str	r7, [sp, #0]
 800d198:	f000 fc0a 	bl	800d9b0 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800d19c:	2800      	cmp	r0, #0
 800d19e:	d1ed      	bne.n	800d17c <osMessageQueueNew+0x4c>
 800d1a0:	e7dc      	b.n	800d15c <osMessageQueueNew+0x2c>
 800d1a2:	bf00      	nop

0800d1a4 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800d1a4:	b570      	push	{r4, r5, r6, lr}
 800d1a6:	461c      	mov	r4, r3
 800d1a8:	b082      	sub	sp, #8
 800d1aa:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800d1ae:	b1be      	cbz	r6, 800d1e0 <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800d1b0:	b350      	cbz	r0, 800d208 <osMessageQueuePut+0x64>
 800d1b2:	b349      	cbz	r1, 800d208 <osMessageQueuePut+0x64>
 800d1b4:	bb43      	cbnz	r3, 800d208 <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800d1b6:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d1b8:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800d1ba:	f000 fecd 	bl	800df58 <xQueueGenericSendFromISR>
 800d1be:	2801      	cmp	r0, #1
 800d1c0:	d11e      	bne.n	800d200 <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d1c2:	9b01      	ldr	r3, [sp, #4]
 800d1c4:	b1cb      	cbz	r3, 800d1fa <osMessageQueuePut+0x56>
 800d1c6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d1ca:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d1ce:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d1d2:	f3bf 8f4f 	dsb	sy
 800d1d6:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d1da:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800d1dc:	b002      	add	sp, #8
 800d1de:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800d1e0:	b190      	cbz	r0, 800d208 <osMessageQueuePut+0x64>
 800d1e2:	b189      	cbz	r1, 800d208 <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800d1e4:	4633      	mov	r3, r6
 800d1e6:	4622      	mov	r2, r4
 800d1e8:	f000 fd38 	bl	800dc5c <xQueueGenericSend>
 800d1ec:	2801      	cmp	r0, #1
 800d1ee:	d004      	beq.n	800d1fa <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800d1f0:	b134      	cbz	r4, 800d200 <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800d1f2:	f06f 0001 	mvn.w	r0, #1
}
 800d1f6:	b002      	add	sp, #8
 800d1f8:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800d1fa:	2000      	movs	r0, #0
}
 800d1fc:	b002      	add	sp, #8
 800d1fe:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800d200:	f06f 0002 	mvn.w	r0, #2
}
 800d204:	b002      	add	sp, #8
 800d206:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800d208:	f06f 0003 	mvn.w	r0, #3
 800d20c:	e7e6      	b.n	800d1dc <osMessageQueuePut+0x38>
 800d20e:	bf00      	nop

0800d210 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800d210:	b530      	push	{r4, r5, lr}
 800d212:	461c      	mov	r4, r3
 800d214:	b083      	sub	sp, #12
 800d216:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800d21a:	b1bb      	cbz	r3, 800d24c <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800d21c:	b348      	cbz	r0, 800d272 <osMessageQueueGet+0x62>
 800d21e:	b341      	cbz	r1, 800d272 <osMessageQueueGet+0x62>
 800d220:	bb3c      	cbnz	r4, 800d272 <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800d222:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d224:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800d226:	f001 fa5d 	bl	800e6e4 <xQueueReceiveFromISR>
 800d22a:	2801      	cmp	r0, #1
 800d22c:	d11d      	bne.n	800d26a <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d22e:	9b01      	ldr	r3, [sp, #4]
 800d230:	b1c3      	cbz	r3, 800d264 <osMessageQueueGet+0x54>
 800d232:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d236:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d23a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d23e:	f3bf 8f4f 	dsb	sy
 800d242:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d246:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800d248:	b003      	add	sp, #12
 800d24a:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800d24c:	b188      	cbz	r0, 800d272 <osMessageQueueGet+0x62>
 800d24e:	b181      	cbz	r1, 800d272 <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800d250:	4622      	mov	r2, r4
 800d252:	f000 ff3f 	bl	800e0d4 <xQueueReceive>
 800d256:	2801      	cmp	r0, #1
 800d258:	d004      	beq.n	800d264 <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800d25a:	b134      	cbz	r4, 800d26a <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800d25c:	f06f 0001 	mvn.w	r0, #1
}
 800d260:	b003      	add	sp, #12
 800d262:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800d264:	2000      	movs	r0, #0
}
 800d266:	b003      	add	sp, #12
 800d268:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800d26a:	f06f 0002 	mvn.w	r0, #2
}
 800d26e:	b003      	add	sp, #12
 800d270:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800d272:	f06f 0003 	mvn.w	r0, #3
 800d276:	e7e7      	b.n	800d248 <osMessageQueueGet+0x38>

0800d278 <osMessageQueueGetCount>:
 800d278:	b130      	cbz	r0, 800d288 <osMessageQueueGetCount+0x10>
 800d27a:	f3ef 8305 	mrs	r3, IPSR
 800d27e:	b10b      	cbz	r3, 800d284 <osMessageQueueGetCount+0xc>
 800d280:	f001 baa4 	b.w	800e7cc <uxQueueMessagesWaitingFromISR>
 800d284:	f001 ba8c 	b.w	800e7a0 <uxQueueMessagesWaiting>
 800d288:	4770      	bx	lr
 800d28a:	bf00      	nop

0800d28c <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800d28c:	4b04      	ldr	r3, [pc, #16]	; (800d2a0 <vApplicationGetIdleTaskMemory+0x14>)
 800d28e:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800d290:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800d292:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800d294:	4c03      	ldr	r4, [pc, #12]	; (800d2a4 <vApplicationGetIdleTaskMemory+0x18>)
 800d296:	600c      	str	r4, [r1, #0]
}
 800d298:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800d29c:	6013      	str	r3, [r2, #0]
}
 800d29e:	4770      	bx	lr
 800d2a0:	2000232c 	.word	0x2000232c
 800d2a4:	2000212c 	.word	0x2000212c

0800d2a8 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800d2a8:	4b05      	ldr	r3, [pc, #20]	; (800d2c0 <vApplicationGetTimerTaskMemory+0x18>)
 800d2aa:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800d2ac:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800d2ae:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800d2b2:	4c04      	ldr	r4, [pc, #16]	; (800d2c4 <vApplicationGetTimerTaskMemory+0x1c>)
 800d2b4:	600c      	str	r4, [r1, #0]
}
 800d2b6:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800d2ba:	6013      	str	r3, [r2, #0]
}
 800d2bc:	4770      	bx	lr
 800d2be:	bf00      	nop
 800d2c0:	200027dc 	.word	0x200027dc
 800d2c4:	200023dc 	.word	0x200023dc

0800d2c8 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800d2c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d2cc:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800d2ce:	f001 ff47 	bl	800f160 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800d2d2:	4a54      	ldr	r2, [pc, #336]	; (800d424 <pvPortMalloc+0x15c>)
 800d2d4:	6816      	ldr	r6, [r2, #0]
 800d2d6:	2e00      	cmp	r6, #0
 800d2d8:	d06e      	beq.n	800d3b8 <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800d2da:	4b53      	ldr	r3, [pc, #332]	; (800d428 <pvPortMalloc+0x160>)
 800d2dc:	681f      	ldr	r7, [r3, #0]
 800d2de:	423d      	tst	r5, r7
 800d2e0:	d12e      	bne.n	800d340 <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800d2e2:	b36d      	cbz	r5, 800d340 <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800d2e4:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800d2e8:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800d2ea:	bf1c      	itt	ne
 800d2ec:	f024 0407 	bicne.w	r4, r4, #7
 800d2f0:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800d2f2:	b32c      	cbz	r4, 800d340 <pvPortMalloc+0x78>
 800d2f4:	f8df c144 	ldr.w	ip, [pc, #324]	; 800d43c <pvPortMalloc+0x174>
 800d2f8:	f8dc 5000 	ldr.w	r5, [ip]
 800d2fc:	42a5      	cmp	r5, r4
 800d2fe:	d31f      	bcc.n	800d340 <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800d300:	484a      	ldr	r0, [pc, #296]	; (800d42c <pvPortMalloc+0x164>)
 800d302:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800d304:	e003      	b.n	800d30e <pvPortMalloc+0x46>
 800d306:	681a      	ldr	r2, [r3, #0]
 800d308:	b122      	cbz	r2, 800d314 <pvPortMalloc+0x4c>
 800d30a:	4618      	mov	r0, r3
 800d30c:	4613      	mov	r3, r2
 800d30e:	6859      	ldr	r1, [r3, #4]
 800d310:	42a1      	cmp	r1, r4
 800d312:	d3f8      	bcc.n	800d306 <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800d314:	42b3      	cmp	r3, r6
 800d316:	d013      	beq.n	800d340 <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800d318:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800d31a:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800d31c:	f858 eb08 	ldr.w	lr, [r8], #8
 800d320:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800d324:	2a10      	cmp	r2, #16
 800d326:	d929      	bls.n	800d37c <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800d328:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800d32a:	0748      	lsls	r0, r1, #29
 800d32c:	d00f      	beq.n	800d34e <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800d32e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d332:	f383 8811 	msr	BASEPRI, r3
 800d336:	f3bf 8f6f 	isb	sy
 800d33a:	f3bf 8f4f 	dsb	sy
 800d33e:	e7fe      	b.n	800d33e <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800d340:	f001 ff16 	bl	800f170 <xTaskResumeAll>
 800d344:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800d348:	4640      	mov	r0, r8
 800d34a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800d34e:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d350:	4a36      	ldr	r2, [pc, #216]	; (800d42c <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800d352:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d354:	4614      	mov	r4, r2
 800d356:	6812      	ldr	r2, [r2, #0]
 800d358:	4291      	cmp	r1, r2
 800d35a:	d8fb      	bhi.n	800d354 <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800d35c:	6860      	ldr	r0, [r4, #4]
 800d35e:	eb04 0e00 	add.w	lr, r4, r0
 800d362:	4571      	cmp	r1, lr
 800d364:	d04b      	beq.n	800d3fe <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d366:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d36a:	eb01 000e 	add.w	r0, r1, lr
 800d36e:	4282      	cmp	r2, r0
 800d370:	d051      	beq.n	800d416 <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800d372:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d374:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800d376:	bf18      	it	ne
 800d378:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d37a:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800d37c:	4a2c      	ldr	r2, [pc, #176]	; (800d430 <pvPortMalloc+0x168>)
 800d37e:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d380:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800d382:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800d384:	bf38      	it	cc
 800d386:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800d388:	4a2a      	ldr	r2, [pc, #168]	; (800d434 <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d38a:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800d38e:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800d390:	2000      	movs	r0, #0
 800d392:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800d396:	6813      	ldr	r3, [r2, #0]
 800d398:	3301      	adds	r3, #1
 800d39a:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800d39c:	f001 fee8 	bl	800f170 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800d3a0:	f018 0f07 	tst.w	r8, #7
 800d3a4:	d0d0      	beq.n	800d348 <pvPortMalloc+0x80>
 800d3a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d3aa:	f383 8811 	msr	BASEPRI, r3
 800d3ae:	f3bf 8f6f 	isb	sy
 800d3b2:	f3bf 8f4f 	dsb	sy
 800d3b6:	e7fe      	b.n	800d3b6 <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800d3b8:	4b1f      	ldr	r3, [pc, #124]	; (800d438 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800d3ba:	075e      	lsls	r6, r3, #29
 800d3bc:	d118      	bne.n	800d3f0 <pvPortMalloc+0x128>
 800d3be:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800d3c2:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800d3c4:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800d3c6:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800d3ca:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d3cc:	4a18      	ldr	r2, [pc, #96]	; (800d430 <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800d3ce:	4817      	ldr	r0, [pc, #92]	; (800d42c <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800d3d0:	4c15      	ldr	r4, [pc, #84]	; (800d428 <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800d3d2:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800d3d4:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d3d6:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d3d8:	4a18      	ldr	r2, [pc, #96]	; (800d43c <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800d3da:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d3de:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800d3e0:	2200      	movs	r2, #0
 800d3e2:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800d3e4:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800d3e6:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800d3ea:	e9c1 6300 	strd	r6, r3, [r1]
}
 800d3ee:	e776      	b.n	800d2de <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800d3f0:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800d3f2:	f021 0107 	bic.w	r1, r1, #7
 800d3f6:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800d3fa:	460b      	mov	r3, r1
 800d3fc:	e7e2      	b.n	800d3c4 <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d3fe:	6849      	ldr	r1, [r1, #4]
 800d400:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d404:	eb04 010e 	add.w	r1, r4, lr
 800d408:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d40a:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d40e:	d001      	beq.n	800d414 <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d410:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800d412:	e7b2      	b.n	800d37a <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d414:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800d416:	42b2      	cmp	r2, r6
 800d418:	d0ab      	beq.n	800d372 <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d41a:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d41c:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d41e:	4470      	add	r0, lr
 800d420:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d422:	e7a6      	b.n	800d372 <pvPortMalloc+0xaa>
 800d424:	20002888 	.word	0x20002888
 800d428:	2001288c 	.word	0x2001288c
 800d42c:	200128a0 	.word	0x200128a0
 800d430:	20012894 	.word	0x20012894
 800d434:	20012898 	.word	0x20012898
 800d438:	2000288c 	.word	0x2000288c
 800d43c:	20012890 	.word	0x20012890

0800d440 <vPortFree>:
	if( pv != NULL )
 800d440:	b1d0      	cbz	r0, 800d478 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800d442:	4a2c      	ldr	r2, [pc, #176]	; (800d4f4 <vPortFree+0xb4>)
 800d444:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800d448:	6812      	ldr	r2, [r2, #0]
 800d44a:	4213      	tst	r3, r2
 800d44c:	d00b      	beq.n	800d466 <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800d44e:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800d452:	b191      	cbz	r1, 800d47a <vPortFree+0x3a>
 800d454:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d458:	f383 8811 	msr	BASEPRI, r3
 800d45c:	f3bf 8f6f 	isb	sy
 800d460:	f3bf 8f4f 	dsb	sy
 800d464:	e7fe      	b.n	800d464 <vPortFree+0x24>
 800d466:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d46a:	f383 8811 	msr	BASEPRI, r3
 800d46e:	f3bf 8f6f 	isb	sy
 800d472:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800d476:	e7fe      	b.n	800d476 <vPortFree+0x36>
 800d478:	4770      	bx	lr
{
 800d47a:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800d47c:	ea23 0302 	bic.w	r3, r3, r2
{
 800d480:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800d482:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d486:	4c1c      	ldr	r4, [pc, #112]	; (800d4f8 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800d488:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800d48a:	f001 fe69 	bl	800f160 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d48e:	9801      	ldr	r0, [sp, #4]
 800d490:	6822      	ldr	r2, [r4, #0]
 800d492:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d496:	4b19      	ldr	r3, [pc, #100]	; (800d4fc <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d498:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800d49a:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d49c:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d49e:	461a      	mov	r2, r3
 800d4a0:	681b      	ldr	r3, [r3, #0]
 800d4a2:	4298      	cmp	r0, r3
 800d4a4:	d8fb      	bhi.n	800d49e <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800d4a6:	6854      	ldr	r4, [r2, #4]
 800d4a8:	eb02 0e04 	add.w	lr, r2, r4
 800d4ac:	4570      	cmp	r0, lr
 800d4ae:	d010      	beq.n	800d4d2 <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d4b0:	eb00 0c01 	add.w	ip, r0, r1
 800d4b4:	4563      	cmp	r3, ip
 800d4b6:	d014      	beq.n	800d4e2 <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800d4b8:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d4ba:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800d4bc:	bf18      	it	ne
 800d4be:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800d4c0:	4a0f      	ldr	r2, [pc, #60]	; (800d500 <vPortFree+0xc0>)
 800d4c2:	6813      	ldr	r3, [r2, #0]
 800d4c4:	3301      	adds	r3, #1
 800d4c6:	6013      	str	r3, [r2, #0]
}
 800d4c8:	b002      	add	sp, #8
 800d4ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800d4ce:	f001 be4f 	b.w	800f170 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d4d2:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d4d4:	1850      	adds	r0, r2, r1
 800d4d6:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d4d8:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d4da:	d001      	beq.n	800d4e0 <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d4dc:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800d4de:	e7ef      	b.n	800d4c0 <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d4e0:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800d4e2:	4c08      	ldr	r4, [pc, #32]	; (800d504 <vPortFree+0xc4>)
 800d4e4:	6824      	ldr	r4, [r4, #0]
 800d4e6:	42a3      	cmp	r3, r4
 800d4e8:	d0e6      	beq.n	800d4b8 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d4ea:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d4ee:	4421      	add	r1, r4
 800d4f0:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d4f2:	e7e1      	b.n	800d4b8 <vPortFree+0x78>
 800d4f4:	2001288c 	.word	0x2001288c
 800d4f8:	20012890 	.word	0x20012890
 800d4fc:	200128a0 	.word	0x200128a0
 800d500:	2001289c 	.word	0x2001289c
 800d504:	20002888 	.word	0x20002888

0800d508 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d508:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800d50c:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800d510:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800d512:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d516:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800d51a:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800d51c:	4770      	bx	lr
 800d51e:	bf00      	nop

0800d520 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800d520:	2300      	movs	r3, #0
 800d522:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800d524:	4770      	bx	lr
 800d526:	bf00      	nop

0800d528 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800d528:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800d52a:	689a      	ldr	r2, [r3, #8]
 800d52c:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800d52e:	6802      	ldr	r2, [r0, #0]
{
 800d530:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800d532:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800d534:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800d536:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800d538:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800d53a:	6099      	str	r1, [r3, #8]
}
 800d53c:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 800d540:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800d542:	6002      	str	r2, [r0, #0]
}
 800d544:	4770      	bx	lr
 800d546:	bf00      	nop

0800d548 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800d548:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800d54a:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800d54c:	1c6b      	adds	r3, r5, #1
 800d54e:	d010      	beq.n	800d572 <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800d550:	f100 0308 	add.w	r3, r0, #8
 800d554:	461c      	mov	r4, r3
 800d556:	685b      	ldr	r3, [r3, #4]
 800d558:	681a      	ldr	r2, [r3, #0]
 800d55a:	42aa      	cmp	r2, r5
 800d55c:	d9fa      	bls.n	800d554 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800d55e:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800d560:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800d562:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800d564:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800d566:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800d568:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 800d56a:	6108      	str	r0, [r1, #16]
}
 800d56c:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 800d56e:	6002      	str	r2, [r0, #0]
}
 800d570:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 800d572:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800d574:	6863      	ldr	r3, [r4, #4]
 800d576:	e7f2      	b.n	800d55e <vListInsert+0x16>

0800d578 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800d578:	6903      	ldr	r3, [r0, #16]
{
 800d57a:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800d57c:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800d580:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800d582:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 800d584:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800d586:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800d588:	bf08      	it	eq
 800d58a:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 800d58c:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 800d58e:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 800d592:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 800d594:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 800d596:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800d598:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 800d59a:	6818      	ldr	r0, [r3, #0]
}
 800d59c:	4770      	bx	lr
 800d59e:	bf00      	nop

0800d5a0 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800d5a0:	4808      	ldr	r0, [pc, #32]	; (800d5c4 <prvPortStartFirstTask+0x24>)
 800d5a2:	6800      	ldr	r0, [r0, #0]
 800d5a4:	6800      	ldr	r0, [r0, #0]
 800d5a6:	f380 8808 	msr	MSP, r0
 800d5aa:	f04f 0000 	mov.w	r0, #0
 800d5ae:	f380 8814 	msr	CONTROL, r0
 800d5b2:	b662      	cpsie	i
 800d5b4:	b661      	cpsie	f
 800d5b6:	f3bf 8f4f 	dsb	sy
 800d5ba:	f3bf 8f6f 	isb	sy
 800d5be:	df00      	svc	0
 800d5c0:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800d5c2:	0000      	.short	0x0000
 800d5c4:	e000ed08 	.word	0xe000ed08

0800d5c8 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800d5c8:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800d5d8 <vPortEnableVFP+0x10>
 800d5cc:	6801      	ldr	r1, [r0, #0]
 800d5ce:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800d5d2:	6001      	str	r1, [r0, #0]
 800d5d4:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800d5d6:	0000      	.short	0x0000
 800d5d8:	e000ed88 	.word	0xe000ed88

0800d5dc <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 800d5dc:	4b0e      	ldr	r3, [pc, #56]	; (800d618 <prvTaskExitError+0x3c>)
 800d5de:	681b      	ldr	r3, [r3, #0]
{
 800d5e0:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800d5e2:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 800d5e4:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 800d5e6:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800d5e8:	d008      	beq.n	800d5fc <prvTaskExitError+0x20>
 800d5ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d5ee:	f383 8811 	msr	BASEPRI, r3
 800d5f2:	f3bf 8f6f 	isb	sy
 800d5f6:	f3bf 8f4f 	dsb	sy
 800d5fa:	e7fe      	b.n	800d5fa <prvTaskExitError+0x1e>
 800d5fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d600:	f383 8811 	msr	BASEPRI, r3
 800d604:	f3bf 8f6f 	isb	sy
 800d608:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800d60c:	9b01      	ldr	r3, [sp, #4]
 800d60e:	2b00      	cmp	r3, #0
 800d610:	d0fc      	beq.n	800d60c <prvTaskExitError+0x30>
}
 800d612:	b002      	add	sp, #8
 800d614:	4770      	bx	lr
 800d616:	bf00      	nop
 800d618:	20000084 	.word	0x20000084

0800d61c <pxPortInitialiseStack>:
{
 800d61c:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800d61e:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800d622:	4c07      	ldr	r4, [pc, #28]	; (800d640 <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800d624:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800d628:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800d62c:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800d630:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800d634:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 800d638:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d63c:	3844      	subs	r0, #68	; 0x44
 800d63e:	4770      	bx	lr
 800d640:	0800d5dd 	.word	0x0800d5dd
	...

0800d650 <SVC_Handler>:
	__asm volatile (
 800d650:	4b07      	ldr	r3, [pc, #28]	; (800d670 <pxCurrentTCBConst2>)
 800d652:	6819      	ldr	r1, [r3, #0]
 800d654:	6808      	ldr	r0, [r1, #0]
 800d656:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d65a:	f380 8809 	msr	PSP, r0
 800d65e:	f3bf 8f6f 	isb	sy
 800d662:	f04f 0000 	mov.w	r0, #0
 800d666:	f380 8811 	msr	BASEPRI, r0
 800d66a:	4770      	bx	lr
 800d66c:	f3af 8000 	nop.w

0800d670 <pxCurrentTCBConst2>:
 800d670:	200128f0 	.word	0x200128f0

0800d674 <vPortEnterCritical>:
 800d674:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d678:	f383 8811 	msr	BASEPRI, r3
 800d67c:	f3bf 8f6f 	isb	sy
 800d680:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800d684:	4a0b      	ldr	r2, [pc, #44]	; (800d6b4 <vPortEnterCritical+0x40>)
 800d686:	6813      	ldr	r3, [r2, #0]
 800d688:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800d68a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800d68c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800d68e:	d000      	beq.n	800d692 <vPortEnterCritical+0x1e>
}
 800d690:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800d692:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d696:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800d69a:	b2db      	uxtb	r3, r3
 800d69c:	2b00      	cmp	r3, #0
 800d69e:	d0f7      	beq.n	800d690 <vPortEnterCritical+0x1c>
 800d6a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6a4:	f383 8811 	msr	BASEPRI, r3
 800d6a8:	f3bf 8f6f 	isb	sy
 800d6ac:	f3bf 8f4f 	dsb	sy
 800d6b0:	e7fe      	b.n	800d6b0 <vPortEnterCritical+0x3c>
 800d6b2:	bf00      	nop
 800d6b4:	20000084 	.word	0x20000084

0800d6b8 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800d6b8:	4a08      	ldr	r2, [pc, #32]	; (800d6dc <vPortExitCritical+0x24>)
 800d6ba:	6813      	ldr	r3, [r2, #0]
 800d6bc:	b943      	cbnz	r3, 800d6d0 <vPortExitCritical+0x18>
 800d6be:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6c2:	f383 8811 	msr	BASEPRI, r3
 800d6c6:	f3bf 8f6f 	isb	sy
 800d6ca:	f3bf 8f4f 	dsb	sy
 800d6ce:	e7fe      	b.n	800d6ce <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800d6d0:	3b01      	subs	r3, #1
 800d6d2:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800d6d4:	b90b      	cbnz	r3, 800d6da <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800d6d6:	f383 8811 	msr	BASEPRI, r3
}
 800d6da:	4770      	bx	lr
 800d6dc:	20000084 	.word	0x20000084

0800d6e0 <PendSV_Handler>:
	__asm volatile
 800d6e0:	f3ef 8009 	mrs	r0, PSP
 800d6e4:	f3bf 8f6f 	isb	sy
 800d6e8:	4b15      	ldr	r3, [pc, #84]	; (800d740 <pxCurrentTCBConst>)
 800d6ea:	681a      	ldr	r2, [r3, #0]
 800d6ec:	f01e 0f10 	tst.w	lr, #16
 800d6f0:	bf08      	it	eq
 800d6f2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800d6f6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d6fa:	6010      	str	r0, [r2, #0]
 800d6fc:	e92d 0009 	stmdb	sp!, {r0, r3}
 800d700:	f04f 0050 	mov.w	r0, #80	; 0x50
 800d704:	f380 8811 	msr	BASEPRI, r0
 800d708:	f3bf 8f4f 	dsb	sy
 800d70c:	f3bf 8f6f 	isb	sy
 800d710:	f001 fd54 	bl	800f1bc <vTaskSwitchContext>
 800d714:	f04f 0000 	mov.w	r0, #0
 800d718:	f380 8811 	msr	BASEPRI, r0
 800d71c:	bc09      	pop	{r0, r3}
 800d71e:	6819      	ldr	r1, [r3, #0]
 800d720:	6808      	ldr	r0, [r1, #0]
 800d722:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d726:	f01e 0f10 	tst.w	lr, #16
 800d72a:	bf08      	it	eq
 800d72c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800d730:	f380 8809 	msr	PSP, r0
 800d734:	f3bf 8f6f 	isb	sy
 800d738:	4770      	bx	lr
 800d73a:	bf00      	nop
 800d73c:	f3af 8000 	nop.w

0800d740 <pxCurrentTCBConst>:
 800d740:	200128f0 	.word	0x200128f0

0800d744 <xPortSysTickHandler>:
{
 800d744:	b508      	push	{r3, lr}
	__asm volatile
 800d746:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d74a:	f383 8811 	msr	BASEPRI, r3
 800d74e:	f3bf 8f6f 	isb	sy
 800d752:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800d756:	f001 fd21 	bl	800f19c <xTaskIncrementTick>
 800d75a:	b128      	cbz	r0, 800d768 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800d75c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d760:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d764:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800d768:	2300      	movs	r3, #0
 800d76a:	f383 8811 	msr	BASEPRI, r3
}
 800d76e:	bd08      	pop	{r3, pc}

0800d770 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800d770:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800d774:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d776:	4906      	ldr	r1, [pc, #24]	; (800d790 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800d778:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800d77a:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d77c:	680b      	ldr	r3, [r1, #0]
 800d77e:	4905      	ldr	r1, [pc, #20]	; (800d794 <vPortSetupTimerInterrupt+0x24>)
 800d780:	fba1 1303 	umull	r1, r3, r1, r3
 800d784:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800d786:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d788:	3b01      	subs	r3, #1
 800d78a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800d78c:	6110      	str	r0, [r2, #16]
}
 800d78e:	4770      	bx	lr
 800d790:	20000078 	.word	0x20000078
 800d794:	10624dd3 	.word	0x10624dd3

0800d798 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800d798:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d79c:	4a49      	ldr	r2, [pc, #292]	; (800d8c4 <xPortStartScheduler+0x12c>)
 800d79e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800d7a2:	4291      	cmp	r1, r2
 800d7a4:	d043      	beq.n	800d82e <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800d7a6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800d7aa:	4b47      	ldr	r3, [pc, #284]	; (800d8c8 <xPortStartScheduler+0x130>)
 800d7ac:	429a      	cmp	r2, r3
 800d7ae:	d035      	beq.n	800d81c <xPortStartScheduler+0x84>
{
 800d7b0:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d7b2:	4b46      	ldr	r3, [pc, #280]	; (800d8cc <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d7b4:	4846      	ldr	r0, [pc, #280]	; (800d8d0 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d7b6:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d7b8:	4c46      	ldr	r4, [pc, #280]	; (800d8d4 <xPortStartScheduler+0x13c>)
{
 800d7ba:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800d7bc:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d7be:	b2d2      	uxtb	r2, r2
 800d7c0:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800d7c2:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800d7c4:	781b      	ldrb	r3, [r3, #0]
 800d7c6:	b2db      	uxtb	r3, r3
 800d7c8:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d7cc:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d7d0:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d7d4:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d7d8:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d7da:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d7dc:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d7de:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d7e0:	bf48      	it	mi
 800d7e2:	2206      	movmi	r2, #6
 800d7e4:	d511      	bpl.n	800d80a <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800d7e6:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800d7ea:	005b      	lsls	r3, r3, #1
 800d7ec:	b2db      	uxtb	r3, r3
 800d7ee:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d7f2:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800d7f6:	0609      	lsls	r1, r1, #24
 800d7f8:	4610      	mov	r0, r2
 800d7fa:	f102 32ff 	add.w	r2, r2, #4294967295
 800d7fe:	d4f2      	bmi.n	800d7e6 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800d800:	2803      	cmp	r0, #3
 800d802:	6020      	str	r0, [r4, #0]
 800d804:	f88d 3007 	strb.w	r3, [sp, #7]
 800d808:	d01a      	beq.n	800d840 <xPortStartScheduler+0xa8>
	__asm volatile
 800d80a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d80e:	f383 8811 	msr	BASEPRI, r3
 800d812:	f3bf 8f6f 	isb	sy
 800d816:	f3bf 8f4f 	dsb	sy
 800d81a:	e7fe      	b.n	800d81a <xPortStartScheduler+0x82>
 800d81c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d820:	f383 8811 	msr	BASEPRI, r3
 800d824:	f3bf 8f6f 	isb	sy
 800d828:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800d82c:	e7fe      	b.n	800d82c <xPortStartScheduler+0x94>
 800d82e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d832:	f383 8811 	msr	BASEPRI, r3
 800d836:	f3bf 8f6f 	isb	sy
 800d83a:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800d83e:	e7fe      	b.n	800d83e <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d840:	9b02      	ldr	r3, [sp, #8]
 800d842:	4a22      	ldr	r2, [pc, #136]	; (800d8cc <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d844:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800d848:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d84c:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800d84e:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d850:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d852:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800d856:	4c20      	ldr	r4, [pc, #128]	; (800d8d8 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d858:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800d85c:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800d860:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 800d864:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800d868:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800d86c:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 800d86e:	f7ff ff7f 	bl	800d770 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800d872:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 800d874:	f7ff fea8 	bl	800d5c8 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800d878:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 800d87c:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800d880:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 800d884:	f7ff fe8c 	bl	800d5a0 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800d888:	f001 fc98 	bl	800f1bc <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 800d88c:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 800d88e:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 800d890:	3301      	adds	r3, #1
 800d892:	d008      	beq.n	800d8a6 <xPortStartScheduler+0x10e>
 800d894:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d898:	f383 8811 	msr	BASEPRI, r3
 800d89c:	f3bf 8f6f 	isb	sy
 800d8a0:	f3bf 8f4f 	dsb	sy
 800d8a4:	e7fe      	b.n	800d8a4 <xPortStartScheduler+0x10c>
 800d8a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d8aa:	f383 8811 	msr	BASEPRI, r3
 800d8ae:	f3bf 8f6f 	isb	sy
 800d8b2:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800d8b6:	9b03      	ldr	r3, [sp, #12]
 800d8b8:	2b00      	cmp	r3, #0
 800d8ba:	d0fc      	beq.n	800d8b6 <xPortStartScheduler+0x11e>
}
 800d8bc:	2000      	movs	r0, #0
 800d8be:	b004      	add	sp, #16
 800d8c0:	bd70      	pop	{r4, r5, r6, pc}
 800d8c2:	bf00      	nop
 800d8c4:	410fc271 	.word	0x410fc271
 800d8c8:	410fc270 	.word	0x410fc270
 800d8cc:	e000e400 	.word	0xe000e400
 800d8d0:	200128a8 	.word	0x200128a8
 800d8d4:	200128ac 	.word	0x200128ac
 800d8d8:	20000084 	.word	0x20000084

0800d8dc <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800d8dc:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800d8e0:	2b0f      	cmp	r3, #15
 800d8e2:	d90e      	bls.n	800d902 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800d8e4:	4911      	ldr	r1, [pc, #68]	; (800d92c <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800d8e6:	4a12      	ldr	r2, [pc, #72]	; (800d930 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800d8e8:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800d8ea:	7812      	ldrb	r2, [r2, #0]
 800d8ec:	429a      	cmp	r2, r3
 800d8ee:	d908      	bls.n	800d902 <vPortValidateInterruptPriority+0x26>
 800d8f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d8f4:	f383 8811 	msr	BASEPRI, r3
 800d8f8:	f3bf 8f6f 	isb	sy
 800d8fc:	f3bf 8f4f 	dsb	sy
 800d900:	e7fe      	b.n	800d900 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800d902:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d906:	4a0b      	ldr	r2, [pc, #44]	; (800d934 <vPortValidateInterruptPriority+0x58>)
 800d908:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800d90c:	6812      	ldr	r2, [r2, #0]
 800d90e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800d912:	4293      	cmp	r3, r2
 800d914:	d908      	bls.n	800d928 <vPortValidateInterruptPriority+0x4c>
 800d916:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d91a:	f383 8811 	msr	BASEPRI, r3
 800d91e:	f3bf 8f6f 	isb	sy
 800d922:	f3bf 8f4f 	dsb	sy
 800d926:	e7fe      	b.n	800d926 <vPortValidateInterruptPriority+0x4a>
	}
 800d928:	4770      	bx	lr
 800d92a:	bf00      	nop
 800d92c:	e000e3f0 	.word	0xe000e3f0
 800d930:	200128a8 	.word	0x200128a8
 800d934:	200128ac 	.word	0x200128ac

0800d938 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 800d938:	b570      	push	{r4, r5, r6, lr}
 800d93a:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d93c:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d93e:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d940:	b920      	cbnz	r0, 800d94c <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800d942:	6825      	ldr	r5, [r4, #0]
 800d944:	b34d      	cbz	r5, 800d99a <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d946:	3601      	adds	r6, #1
 800d948:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 800d94a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800d94c:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d94e:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 800d950:	b97d      	cbnz	r5, 800d972 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d952:	6860      	ldr	r0, [r4, #4]
 800d954:	f01c fee9 	bl	802a72a <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d958:	6863      	ldr	r3, [r4, #4]
 800d95a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d95c:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d95e:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d960:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d962:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800d964:	bf24      	itt	cs
 800d966:	6823      	ldrcs	r3, [r4, #0]
 800d968:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d96a:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800d96c:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d96e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800d970:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800d972:	68e0      	ldr	r0, [r4, #12]
 800d974:	f01c fed9 	bl	802a72a <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800d978:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d97a:	68e3      	ldr	r3, [r4, #12]
 800d97c:	4251      	negs	r1, r2
 800d97e:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d980:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800d982:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d984:	4293      	cmp	r3, r2
 800d986:	d202      	bcs.n	800d98e <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800d988:	68a3      	ldr	r3, [r4, #8]
 800d98a:	440b      	add	r3, r1
 800d98c:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800d98e:	2d02      	cmp	r5, #2
 800d990:	d008      	beq.n	800d9a4 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d992:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800d994:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d996:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800d998:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800d99a:	68a0      	ldr	r0, [r4, #8]
 800d99c:	f001 fde0 	bl	800f560 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800d9a0:	60a5      	str	r5, [r4, #8]
 800d9a2:	e7d0      	b.n	800d946 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800d9a4:	2e01      	cmp	r6, #1
 800d9a6:	bf38      	it	cc
 800d9a8:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 800d9aa:	2000      	movs	r0, #0
 800d9ac:	e7cc      	b.n	800d948 <prvCopyDataToQueue+0x10>
 800d9ae:	bf00      	nop

0800d9b0 <xQueueGenericCreateStatic>:
	{
 800d9b0:	b530      	push	{r4, r5, lr}
 800d9b2:	b083      	sub	sp, #12
 800d9b4:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800d9b8:	b940      	cbnz	r0, 800d9cc <xQueueGenericCreateStatic+0x1c>
 800d9ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d9be:	f383 8811 	msr	BASEPRI, r3
 800d9c2:	f3bf 8f6f 	isb	sy
 800d9c6:	f3bf 8f4f 	dsb	sy
 800d9ca:	e7fe      	b.n	800d9ca <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 800d9cc:	461d      	mov	r5, r3
 800d9ce:	b17b      	cbz	r3, 800d9f0 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800d9d0:	b302      	cbz	r2, 800da14 <xQueueGenericCreateStatic+0x64>
 800d9d2:	b1b1      	cbz	r1, 800da02 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d9d4:	2350      	movs	r3, #80	; 0x50
 800d9d6:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d9d8:	9b01      	ldr	r3, [sp, #4]
 800d9da:	2b50      	cmp	r3, #80	; 0x50
 800d9dc:	d023      	beq.n	800da26 <xQueueGenericCreateStatic+0x76>
 800d9de:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d9e2:	f383 8811 	msr	BASEPRI, r3
 800d9e6:	f3bf 8f6f 	isb	sy
 800d9ea:	f3bf 8f4f 	dsb	sy
 800d9ee:	e7fe      	b.n	800d9ee <xQueueGenericCreateStatic+0x3e>
 800d9f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d9f4:	f383 8811 	msr	BASEPRI, r3
 800d9f8:	f3bf 8f6f 	isb	sy
 800d9fc:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800da00:	e7fe      	b.n	800da00 <xQueueGenericCreateStatic+0x50>
 800da02:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da06:	f383 8811 	msr	BASEPRI, r3
 800da0a:	f3bf 8f6f 	isb	sy
 800da0e:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800da12:	e7fe      	b.n	800da12 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800da14:	bb89      	cbnz	r1, 800da7a <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800da16:	2250      	movs	r2, #80	; 0x50
 800da18:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800da1a:	9a01      	ldr	r2, [sp, #4]
 800da1c:	2a50      	cmp	r2, #80	; 0x50
 800da1e:	d1de      	bne.n	800d9de <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800da20:	9a01      	ldr	r2, [sp, #4]
 800da22:	462a      	mov	r2, r5
 800da24:	e000      	b.n	800da28 <xQueueGenericCreateStatic+0x78>
 800da26:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 800da28:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800da2a:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800da2c:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800da30:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 800da34:	f7ff fe1e 	bl	800d674 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800da38:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 800da3c:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800da3e:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800da40:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800da44:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800da46:	4401      	add	r1, r0
 800da48:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800da4a:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800da4c:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800da4e:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800da50:	21ff      	movs	r1, #255	; 0xff
 800da52:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800da56:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800da58:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800da5c:	f105 0010 	add.w	r0, r5, #16
 800da60:	f7ff fd52 	bl	800d508 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800da64:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800da68:	f7ff fd4e 	bl	800d508 <vListInitialise>
	taskEXIT_CRITICAL();
 800da6c:	f7ff fe24 	bl	800d6b8 <vPortExitCritical>
	}
 800da70:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800da72:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 800da76:	b003      	add	sp, #12
 800da78:	bd30      	pop	{r4, r5, pc}
 800da7a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da7e:	f383 8811 	msr	BASEPRI, r3
 800da82:	f3bf 8f6f 	isb	sy
 800da86:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800da8a:	e7fe      	b.n	800da8a <xQueueGenericCreateStatic+0xda>

0800da8c <xQueueGenericCreate>:
	{
 800da8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800da8e:	b940      	cbnz	r0, 800daa2 <xQueueGenericCreate+0x16>
 800da90:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da94:	f383 8811 	msr	BASEPRI, r3
 800da98:	f3bf 8f6f 	isb	sy
 800da9c:	f3bf 8f4f 	dsb	sy
 800daa0:	e7fe      	b.n	800daa0 <xQueueGenericCreate+0x14>
 800daa2:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800daa4:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800daa8:	3050      	adds	r0, #80	; 0x50
 800daaa:	460e      	mov	r6, r1
 800daac:	4617      	mov	r7, r2
 800daae:	f7ff fc0b 	bl	800d2c8 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800dab2:	4604      	mov	r4, r0
 800dab4:	b340      	cbz	r0, 800db08 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800dab6:	2300      	movs	r3, #0
 800dab8:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800dabc:	b336      	cbz	r6, 800db0c <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dabe:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 800dac2:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800dac4:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 800dac8:	f7ff fdd4 	bl	800d674 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dacc:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 800dad0:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800dad2:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dad4:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dad8:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dada:	440a      	add	r2, r1
 800dadc:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800dade:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dae0:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800dae2:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800dae4:	22ff      	movs	r2, #255	; 0xff
 800dae6:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800daea:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800daec:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800daf0:	f104 0010 	add.w	r0, r4, #16
 800daf4:	f7ff fd08 	bl	800d508 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800daf8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800dafc:	f7ff fd04 	bl	800d508 <vListInitialise>
	taskEXIT_CRITICAL();
 800db00:	f7ff fdda 	bl	800d6b8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800db04:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800db08:	4620      	mov	r0, r4
 800db0a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800db0c:	4603      	mov	r3, r0
 800db0e:	e7d8      	b.n	800dac2 <xQueueGenericCreate+0x36>

0800db10 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 800db10:	b940      	cbnz	r0, 800db24 <xQueueCreateCountingSemaphoreStatic+0x14>
 800db12:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db16:	f383 8811 	msr	BASEPRI, r3
 800db1a:	f3bf 8f6f 	isb	sy
 800db1e:	f3bf 8f4f 	dsb	sy
 800db22:	e7fe      	b.n	800db22 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 800db24:	4288      	cmp	r0, r1
 800db26:	d208      	bcs.n	800db3a <xQueueCreateCountingSemaphoreStatic+0x2a>
 800db28:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db2c:	f383 8811 	msr	BASEPRI, r3
 800db30:	f3bf 8f6f 	isb	sy
 800db34:	f3bf 8f4f 	dsb	sy
 800db38:	e7fe      	b.n	800db38 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 800db3a:	b530      	push	{r4, r5, lr}
 800db3c:	4615      	mov	r5, r2
 800db3e:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 800db40:	2a00      	cmp	r2, #0
 800db42:	d03c      	beq.n	800dbbe <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800db44:	2350      	movs	r3, #80	; 0x50
 800db46:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 800db48:	9b03      	ldr	r3, [sp, #12]
 800db4a:	2b50      	cmp	r3, #80	; 0x50
 800db4c:	d008      	beq.n	800db60 <xQueueCreateCountingSemaphoreStatic+0x50>
 800db4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db52:	f383 8811 	msr	BASEPRI, r3
 800db56:	f3bf 8f6f 	isb	sy
 800db5a:	f3bf 8f4f 	dsb	sy
 800db5e:	e7fe      	b.n	800db5e <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 800db60:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800db62:	2301      	movs	r3, #1
 800db64:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800db68:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800db6a:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 800db6e:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800db70:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 800db72:	f7ff fd7f 	bl	800d674 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800db76:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 800db7a:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800db7c:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800db7e:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800db82:	1ac3      	subs	r3, r0, r3
 800db84:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800db86:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 800db88:	f04f 0eff 	mov.w	lr, #255	; 0xff
 800db8c:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800db90:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800db92:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800db94:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800db98:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800db9a:	f105 0010 	add.w	r0, r5, #16
 800db9e:	f7ff fcb3 	bl	800d508 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800dba2:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800dba6:	f7ff fcaf 	bl	800d508 <vListInitialise>
	taskEXIT_CRITICAL();
 800dbaa:	f7ff fd85 	bl	800d6b8 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800dbae:	9901      	ldr	r1, [sp, #4]
 800dbb0:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 800dbb2:	2302      	movs	r3, #2
	}
 800dbb4:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800dbb6:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 800dbba:	b005      	add	sp, #20
 800dbbc:	bd30      	pop	{r4, r5, pc}
 800dbbe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dbc2:	f383 8811 	msr	BASEPRI, r3
 800dbc6:	f3bf 8f6f 	isb	sy
 800dbca:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800dbce:	e7fe      	b.n	800dbce <xQueueCreateCountingSemaphoreStatic+0xbe>

0800dbd0 <xQueueCreateCountingSemaphore>:
	{
 800dbd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 800dbd2:	b940      	cbnz	r0, 800dbe6 <xQueueCreateCountingSemaphore+0x16>
 800dbd4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dbd8:	f383 8811 	msr	BASEPRI, r3
 800dbdc:	f3bf 8f6f 	isb	sy
 800dbe0:	f3bf 8f4f 	dsb	sy
 800dbe4:	e7fe      	b.n	800dbe4 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 800dbe6:	4288      	cmp	r0, r1
 800dbe8:	460e      	mov	r6, r1
 800dbea:	4604      	mov	r4, r0
 800dbec:	d208      	bcs.n	800dc00 <xQueueCreateCountingSemaphore+0x30>
 800dbee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dbf2:	f383 8811 	msr	BASEPRI, r3
 800dbf6:	f3bf 8f6f 	isb	sy
 800dbfa:	f3bf 8f4f 	dsb	sy
 800dbfe:	e7fe      	b.n	800dbfe <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800dc00:	2050      	movs	r0, #80	; 0x50
 800dc02:	f7ff fb61 	bl	800d2c8 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800dc06:	4605      	mov	r5, r0
 800dc08:	b330      	cbz	r0, 800dc58 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800dc0a:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 800dc0c:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800dc10:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800dc14:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 800dc16:	f7ff fd2d 	bl	800d674 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dc1a:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 800dc1e:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800dc20:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dc22:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dc26:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dc28:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dc2a:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dc2c:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800dc2e:	22ff      	movs	r2, #255	; 0xff
 800dc30:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dc34:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800dc36:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800dc38:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800dc3c:	f105 0010 	add.w	r0, r5, #16
 800dc40:	f7ff fc62 	bl	800d508 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800dc44:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800dc48:	f7ff fc5e 	bl	800d508 <vListInitialise>
	taskEXIT_CRITICAL();
 800dc4c:	f7ff fd34 	bl	800d6b8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800dc50:	2302      	movs	r3, #2
 800dc52:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800dc56:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 800dc58:	4628      	mov	r0, r5
 800dc5a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800dc5c <xQueueGenericSend>:
{
 800dc5c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800dc60:	b085      	sub	sp, #20
 800dc62:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 800dc64:	2800      	cmp	r0, #0
 800dc66:	f000 80a4 	beq.w	800ddb2 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800dc6a:	4688      	mov	r8, r1
 800dc6c:	461f      	mov	r7, r3
 800dc6e:	4604      	mov	r4, r0
 800dc70:	2900      	cmp	r1, #0
 800dc72:	f000 8091 	beq.w	800dd98 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800dc76:	2f02      	cmp	r7, #2
 800dc78:	d10b      	bne.n	800dc92 <xQueueGenericSend+0x36>
 800dc7a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800dc7c:	2b01      	cmp	r3, #1
 800dc7e:	d008      	beq.n	800dc92 <xQueueGenericSend+0x36>
 800dc80:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc84:	f383 8811 	msr	BASEPRI, r3
 800dc88:	f3bf 8f6f 	isb	sy
 800dc8c:	f3bf 8f4f 	dsb	sy
 800dc90:	e7fe      	b.n	800dc90 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800dc92:	f001 fc0f 	bl	800f4b4 <xTaskGetSchedulerState>
 800dc96:	4605      	mov	r5, r0
 800dc98:	2800      	cmp	r0, #0
 800dc9a:	f000 8093 	beq.w	800ddc4 <xQueueGenericSend+0x168>
 800dc9e:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dca0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800dca4:	f7ff fce6 	bl	800d674 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800dca8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800dcaa:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800dcac:	429a      	cmp	r2, r3
 800dcae:	f0c0 80ef 	bcc.w	800de90 <xQueueGenericSend+0x234>
 800dcb2:	2f02      	cmp	r7, #2
 800dcb4:	f000 80ec 	beq.w	800de90 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 800dcb8:	9801      	ldr	r0, [sp, #4]
 800dcba:	2800      	cmp	r0, #0
 800dcbc:	f000 8101 	beq.w	800dec2 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 800dcc0:	2d00      	cmp	r5, #0
 800dcc2:	f000 80e1 	beq.w	800de88 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 800dcc6:	f7ff fcf7 	bl	800d6b8 <vPortExitCritical>
		vTaskSuspendAll();
 800dcca:	f001 fa49 	bl	800f160 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800dcce:	f7ff fcd1 	bl	800d674 <vPortEnterCritical>
 800dcd2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dcd6:	2bff      	cmp	r3, #255	; 0xff
 800dcd8:	bf04      	itt	eq
 800dcda:	2300      	moveq	r3, #0
 800dcdc:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800dce0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dce4:	2bff      	cmp	r3, #255	; 0xff
 800dce6:	bf04      	itt	eq
 800dce8:	2300      	moveq	r3, #0
 800dcea:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800dcee:	f7ff fce3 	bl	800d6b8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800dcf2:	a901      	add	r1, sp, #4
 800dcf4:	a802      	add	r0, sp, #8
 800dcf6:	f001 fb8f 	bl	800f418 <xTaskCheckForTimeOut>
 800dcfa:	2800      	cmp	r0, #0
 800dcfc:	f040 80e6 	bne.w	800decc <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800dd00:	f7ff fcb8 	bl	800d674 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800dd04:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800dd06:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800dd08:	429a      	cmp	r2, r3
 800dd0a:	d068      	beq.n	800ddde <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800dd0c:	f7ff fcd4 	bl	800d6b8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dd10:	f7ff fcb0 	bl	800d674 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800dd14:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800dd18:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dd1a:	2d00      	cmp	r5, #0
 800dd1c:	dc04      	bgt.n	800dd28 <xQueueGenericSend+0xcc>
 800dd1e:	e011      	b.n	800dd44 <xQueueGenericSend+0xe8>
			--cTxLock;
 800dd20:	1e6a      	subs	r2, r5, #1
 800dd22:	b2d3      	uxtb	r3, r2
 800dd24:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dd26:	b16b      	cbz	r3, 800dd44 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dd28:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dd2a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dd2c:	b153      	cbz	r3, 800dd44 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dd2e:	f001 fb1f 	bl	800f370 <xTaskRemoveFromEventList>
 800dd32:	2800      	cmp	r0, #0
 800dd34:	d0f4      	beq.n	800dd20 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 800dd36:	f001 fbb7 	bl	800f4a8 <vTaskMissedYield>
			--cTxLock;
 800dd3a:	1e6a      	subs	r2, r5, #1
 800dd3c:	b2d3      	uxtb	r3, r2
 800dd3e:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dd40:	2b00      	cmp	r3, #0
 800dd42:	d1f1      	bne.n	800dd28 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 800dd44:	23ff      	movs	r3, #255	; 0xff
 800dd46:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800dd4a:	f7ff fcb5 	bl	800d6b8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dd4e:	f7ff fc91 	bl	800d674 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800dd52:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 800dd56:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dd58:	2d00      	cmp	r5, #0
 800dd5a:	dd14      	ble.n	800dd86 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dd5c:	f104 0910 	add.w	r9, r4, #16
 800dd60:	e003      	b.n	800dd6a <xQueueGenericSend+0x10e>
				--cRxLock;
 800dd62:	1e6a      	subs	r2, r5, #1
 800dd64:	b2d3      	uxtb	r3, r2
 800dd66:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dd68:	b16b      	cbz	r3, 800dd86 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dd6a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dd6c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dd6e:	b153      	cbz	r3, 800dd86 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dd70:	f001 fafe 	bl	800f370 <xTaskRemoveFromEventList>
 800dd74:	2800      	cmp	r0, #0
 800dd76:	d0f4      	beq.n	800dd62 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 800dd78:	f001 fb96 	bl	800f4a8 <vTaskMissedYield>
				--cRxLock;
 800dd7c:	1e6a      	subs	r2, r5, #1
 800dd7e:	b2d3      	uxtb	r3, r2
 800dd80:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dd82:	2b00      	cmp	r3, #0
 800dd84:	d1f1      	bne.n	800dd6a <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 800dd86:	23ff      	movs	r3, #255	; 0xff
 800dd88:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800dd8c:	f7ff fc94 	bl	800d6b8 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800dd90:	f001 f9ee 	bl	800f170 <xTaskResumeAll>
 800dd94:	2501      	movs	r5, #1
 800dd96:	e785      	b.n	800dca4 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800dd98:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800dd9a:	2b00      	cmp	r3, #0
 800dd9c:	f43f af6b 	beq.w	800dc76 <xQueueGenericSend+0x1a>
 800dda0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dda4:	f383 8811 	msr	BASEPRI, r3
 800dda8:	f3bf 8f6f 	isb	sy
 800ddac:	f3bf 8f4f 	dsb	sy
 800ddb0:	e7fe      	b.n	800ddb0 <xQueueGenericSend+0x154>
 800ddb2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ddb6:	f383 8811 	msr	BASEPRI, r3
 800ddba:	f3bf 8f6f 	isb	sy
 800ddbe:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800ddc2:	e7fe      	b.n	800ddc2 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ddc4:	9b01      	ldr	r3, [sp, #4]
 800ddc6:	2b00      	cmp	r3, #0
 800ddc8:	f43f af6a 	beq.w	800dca0 <xQueueGenericSend+0x44>
 800ddcc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ddd0:	f383 8811 	msr	BASEPRI, r3
 800ddd4:	f3bf 8f6f 	isb	sy
 800ddd8:	f3bf 8f4f 	dsb	sy
 800dddc:	e7fe      	b.n	800dddc <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800ddde:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 800dde2:	f7ff fc69 	bl	800d6b8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800dde6:	9901      	ldr	r1, [sp, #4]
 800dde8:	4648      	mov	r0, r9
 800ddea:	f001 fa33 	bl	800f254 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800ddee:	f7ff fc41 	bl	800d674 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ddf2:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ddf6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ddf8:	2d00      	cmp	r5, #0
 800ddfa:	dc04      	bgt.n	800de06 <xQueueGenericSend+0x1aa>
 800ddfc:	e011      	b.n	800de22 <xQueueGenericSend+0x1c6>
			--cTxLock;
 800ddfe:	1e6b      	subs	r3, r5, #1
 800de00:	b2da      	uxtb	r2, r3
 800de02:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800de04:	b16a      	cbz	r2, 800de22 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800de06:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800de08:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800de0a:	b153      	cbz	r3, 800de22 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800de0c:	f001 fab0 	bl	800f370 <xTaskRemoveFromEventList>
 800de10:	2800      	cmp	r0, #0
 800de12:	d0f4      	beq.n	800ddfe <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 800de14:	f001 fb48 	bl	800f4a8 <vTaskMissedYield>
			--cTxLock;
 800de18:	1e6b      	subs	r3, r5, #1
 800de1a:	b2da      	uxtb	r2, r3
 800de1c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800de1e:	2a00      	cmp	r2, #0
 800de20:	d1f1      	bne.n	800de06 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 800de22:	23ff      	movs	r3, #255	; 0xff
 800de24:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800de28:	f7ff fc46 	bl	800d6b8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800de2c:	f7ff fc22 	bl	800d674 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800de30:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800de34:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800de36:	2d00      	cmp	r5, #0
 800de38:	dc04      	bgt.n	800de44 <xQueueGenericSend+0x1e8>
 800de3a:	e011      	b.n	800de60 <xQueueGenericSend+0x204>
				--cRxLock;
 800de3c:	1e6b      	subs	r3, r5, #1
 800de3e:	b2da      	uxtb	r2, r3
 800de40:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800de42:	b16a      	cbz	r2, 800de60 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800de44:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800de46:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800de48:	b153      	cbz	r3, 800de60 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800de4a:	f001 fa91 	bl	800f370 <xTaskRemoveFromEventList>
 800de4e:	2800      	cmp	r0, #0
 800de50:	d0f4      	beq.n	800de3c <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 800de52:	f001 fb29 	bl	800f4a8 <vTaskMissedYield>
				--cRxLock;
 800de56:	1e6b      	subs	r3, r5, #1
 800de58:	b2da      	uxtb	r2, r3
 800de5a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800de5c:	2a00      	cmp	r2, #0
 800de5e:	d1f1      	bne.n	800de44 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 800de60:	23ff      	movs	r3, #255	; 0xff
 800de62:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800de66:	f7ff fc27 	bl	800d6b8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800de6a:	f001 f981 	bl	800f170 <xTaskResumeAll>
 800de6e:	2800      	cmp	r0, #0
 800de70:	d190      	bne.n	800dd94 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 800de72:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800de76:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800de7a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800de7e:	f3bf 8f4f 	dsb	sy
 800de82:	f3bf 8f6f 	isb	sy
 800de86:	e785      	b.n	800dd94 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800de88:	a802      	add	r0, sp, #8
 800de8a:	f001 fab9 	bl	800f400 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800de8e:	e71a      	b.n	800dcc6 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800de90:	463a      	mov	r2, r7
 800de92:	4641      	mov	r1, r8
 800de94:	4620      	mov	r0, r4
 800de96:	f7ff fd4f 	bl	800d938 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800de9a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800de9c:	2b00      	cmp	r3, #0
 800de9e:	d153      	bne.n	800df48 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 800dea0:	b148      	cbz	r0, 800deb6 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 800dea2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dea6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800deaa:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800deae:	f3bf 8f4f 	dsb	sy
 800deb2:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800deb6:	f7ff fbff 	bl	800d6b8 <vPortExitCritical>
				return pdPASS;
 800deba:	2001      	movs	r0, #1
}
 800debc:	b005      	add	sp, #20
 800debe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800dec2:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 800dec4:	f7ff fbf8 	bl	800d6b8 <vPortExitCritical>
					return errQUEUE_FULL;
 800dec8:	9800      	ldr	r0, [sp, #0]
 800deca:	e7f7      	b.n	800debc <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 800decc:	f7ff fbd2 	bl	800d674 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ded0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ded4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ded6:	2d00      	cmp	r5, #0
 800ded8:	dd10      	ble.n	800defc <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800deda:	f104 0624 	add.w	r6, r4, #36	; 0x24
 800dede:	e003      	b.n	800dee8 <xQueueGenericSend+0x28c>
			--cTxLock;
 800dee0:	1e6b      	subs	r3, r5, #1
 800dee2:	b2da      	uxtb	r2, r3
 800dee4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dee6:	b14a      	cbz	r2, 800defc <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dee8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800deea:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800deec:	b133      	cbz	r3, 800defc <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800deee:	f001 fa3f 	bl	800f370 <xTaskRemoveFromEventList>
 800def2:	2800      	cmp	r0, #0
 800def4:	d0f4      	beq.n	800dee0 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 800def6:	f001 fad7 	bl	800f4a8 <vTaskMissedYield>
 800defa:	e7f1      	b.n	800dee0 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 800defc:	23ff      	movs	r3, #255	; 0xff
 800defe:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800df02:	f7ff fbd9 	bl	800d6b8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800df06:	f7ff fbb5 	bl	800d674 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800df0a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800df0e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800df10:	2d00      	cmp	r5, #0
 800df12:	dd10      	ble.n	800df36 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800df14:	f104 0610 	add.w	r6, r4, #16
 800df18:	e003      	b.n	800df22 <xQueueGenericSend+0x2c6>
				--cRxLock;
 800df1a:	1e6b      	subs	r3, r5, #1
 800df1c:	b2da      	uxtb	r2, r3
 800df1e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800df20:	b14a      	cbz	r2, 800df36 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800df22:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800df24:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800df26:	b133      	cbz	r3, 800df36 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800df28:	f001 fa22 	bl	800f370 <xTaskRemoveFromEventList>
 800df2c:	2800      	cmp	r0, #0
 800df2e:	d0f4      	beq.n	800df1a <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 800df30:	f001 faba 	bl	800f4a8 <vTaskMissedYield>
 800df34:	e7f1      	b.n	800df1a <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 800df36:	23ff      	movs	r3, #255	; 0xff
 800df38:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800df3c:	f7ff fbbc 	bl	800d6b8 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800df40:	f001 f916 	bl	800f170 <xTaskResumeAll>
			return errQUEUE_FULL;
 800df44:	2000      	movs	r0, #0
 800df46:	e7b9      	b.n	800debc <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800df48:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800df4c:	f001 fa10 	bl	800f370 <xTaskRemoveFromEventList>
 800df50:	2800      	cmp	r0, #0
 800df52:	d0b0      	beq.n	800deb6 <xQueueGenericSend+0x25a>
 800df54:	e7a5      	b.n	800dea2 <xQueueGenericSend+0x246>
 800df56:	bf00      	nop

0800df58 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 800df58:	2800      	cmp	r0, #0
 800df5a:	d04b      	beq.n	800dff4 <xQueueGenericSendFromISR+0x9c>
{
 800df5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800df60:	460e      	mov	r6, r1
 800df62:	4617      	mov	r7, r2
 800df64:	461d      	mov	r5, r3
 800df66:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800df68:	b321      	cbz	r1, 800dfb4 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800df6a:	2d02      	cmp	r5, #2
 800df6c:	d10b      	bne.n	800df86 <xQueueGenericSendFromISR+0x2e>
 800df6e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800df70:	2b01      	cmp	r3, #1
 800df72:	d008      	beq.n	800df86 <xQueueGenericSendFromISR+0x2e>
 800df74:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df78:	f383 8811 	msr	BASEPRI, r3
 800df7c:	f3bf 8f6f 	isb	sy
 800df80:	f3bf 8f4f 	dsb	sy
 800df84:	e7fe      	b.n	800df84 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800df86:	f7ff fca9 	bl	800d8dc <vPortValidateInterruptPriority>
	__asm volatile
 800df8a:	f3ef 8811 	mrs	r8, BASEPRI
 800df8e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df92:	f383 8811 	msr	BASEPRI, r3
 800df96:	f3bf 8f6f 	isb	sy
 800df9a:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800df9e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800dfa0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800dfa2:	429a      	cmp	r2, r3
 800dfa4:	d312      	bcc.n	800dfcc <xQueueGenericSendFromISR+0x74>
 800dfa6:	2d02      	cmp	r5, #2
 800dfa8:	d010      	beq.n	800dfcc <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 800dfaa:	2000      	movs	r0, #0
	__asm volatile
 800dfac:	f388 8811 	msr	BASEPRI, r8
}
 800dfb0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800dfb4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800dfb6:	2b00      	cmp	r3, #0
 800dfb8:	d0d7      	beq.n	800df6a <xQueueGenericSendFromISR+0x12>
	__asm volatile
 800dfba:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dfbe:	f383 8811 	msr	BASEPRI, r3
 800dfc2:	f3bf 8f6f 	isb	sy
 800dfc6:	f3bf 8f4f 	dsb	sy
 800dfca:	e7fe      	b.n	800dfca <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800dfcc:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 800dfce:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800dfd2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800dfd4:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 800dfd6:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800dfd8:	4620      	mov	r0, r4
 800dfda:	f7ff fcad 	bl	800d938 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800dfde:	1c6b      	adds	r3, r5, #1
 800dfe0:	d011      	beq.n	800e006 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800dfe2:	1c6b      	adds	r3, r5, #1
 800dfe4:	b25b      	sxtb	r3, r3
 800dfe6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 800dfea:	2001      	movs	r0, #1
	__asm volatile
 800dfec:	f388 8811 	msr	BASEPRI, r8
}
 800dff0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 800dff4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dff8:	f383 8811 	msr	BASEPRI, r3
 800dffc:	f3bf 8f6f 	isb	sy
 800e000:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e004:	e7fe      	b.n	800e004 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e006:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e008:	2b00      	cmp	r3, #0
 800e00a:	d0ee      	beq.n	800dfea <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e00c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e010:	f001 f9ae 	bl	800f370 <xTaskRemoveFromEventList>
 800e014:	2800      	cmp	r0, #0
 800e016:	d0e8      	beq.n	800dfea <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800e018:	2f00      	cmp	r7, #0
 800e01a:	d0e6      	beq.n	800dfea <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800e01c:	2001      	movs	r0, #1
 800e01e:	6038      	str	r0, [r7, #0]
 800e020:	e7c4      	b.n	800dfac <xQueueGenericSendFromISR+0x54>
 800e022:	bf00      	nop

0800e024 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 800e024:	b370      	cbz	r0, 800e084 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 800e026:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 800e028:	b570      	push	{r4, r5, r6, lr}
 800e02a:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 800e02c:	b143      	cbz	r3, 800e040 <xQueueGiveFromISR+0x1c>
 800e02e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e032:	f383 8811 	msr	BASEPRI, r3
 800e036:	f3bf 8f6f 	isb	sy
 800e03a:	f3bf 8f4f 	dsb	sy
 800e03e:	e7fe      	b.n	800e03e <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800e040:	6803      	ldr	r3, [r0, #0]
 800e042:	460c      	mov	r4, r1
 800e044:	b33b      	cbz	r3, 800e096 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800e046:	f7ff fc49 	bl	800d8dc <vPortValidateInterruptPriority>
	__asm volatile
 800e04a:	f3ef 8511 	mrs	r5, BASEPRI
 800e04e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e052:	f383 8811 	msr	BASEPRI, r3
 800e056:	f3bf 8f6f 	isb	sy
 800e05a:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e05e:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800e060:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800e062:	429a      	cmp	r2, r3
 800e064:	d923      	bls.n	800e0ae <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 800e066:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e06a:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 800e06c:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e06e:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800e070:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 800e072:	d020      	beq.n	800e0b6 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800e074:	3301      	adds	r3, #1
 800e076:	b25b      	sxtb	r3, r3
 800e078:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 800e07c:	2001      	movs	r0, #1
	__asm volatile
 800e07e:	f385 8811 	msr	BASEPRI, r5
}
 800e082:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 800e084:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e088:	f383 8811 	msr	BASEPRI, r3
 800e08c:	f3bf 8f6f 	isb	sy
 800e090:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e094:	e7fe      	b.n	800e094 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800e096:	6883      	ldr	r3, [r0, #8]
 800e098:	2b00      	cmp	r3, #0
 800e09a:	d0d4      	beq.n	800e046 <xQueueGiveFromISR+0x22>
 800e09c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e0a0:	f383 8811 	msr	BASEPRI, r3
 800e0a4:	f3bf 8f6f 	isb	sy
 800e0a8:	f3bf 8f4f 	dsb	sy
 800e0ac:	e7fe      	b.n	800e0ac <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 800e0ae:	2000      	movs	r0, #0
	__asm volatile
 800e0b0:	f385 8811 	msr	BASEPRI, r5
}
 800e0b4:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e0b6:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800e0b8:	2b00      	cmp	r3, #0
 800e0ba:	d0df      	beq.n	800e07c <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e0bc:	f106 0024 	add.w	r0, r6, #36	; 0x24
 800e0c0:	f001 f956 	bl	800f370 <xTaskRemoveFromEventList>
 800e0c4:	2800      	cmp	r0, #0
 800e0c6:	d0d9      	beq.n	800e07c <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 800e0c8:	2c00      	cmp	r4, #0
 800e0ca:	d0d7      	beq.n	800e07c <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800e0cc:	2001      	movs	r0, #1
 800e0ce:	6020      	str	r0, [r4, #0]
 800e0d0:	e7ee      	b.n	800e0b0 <xQueueGiveFromISR+0x8c>
 800e0d2:	bf00      	nop

0800e0d4 <xQueueReceive>:
{
 800e0d4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e0d8:	b085      	sub	sp, #20
 800e0da:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800e0dc:	2800      	cmp	r0, #0
 800e0de:	f000 815c 	beq.w	800e39a <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e0e2:	460f      	mov	r7, r1
 800e0e4:	4604      	mov	r4, r0
 800e0e6:	2900      	cmp	r1, #0
 800e0e8:	d079      	beq.n	800e1de <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e0ea:	f001 f9e3 	bl	800f4b4 <xTaskGetSchedulerState>
 800e0ee:	2800      	cmp	r0, #0
 800e0f0:	f000 8081 	beq.w	800e1f6 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 800e0f4:	f7ff fabe 	bl	800d674 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e0f8:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e0fa:	2d00      	cmp	r5, #0
 800e0fc:	f040 8138 	bne.w	800e370 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e100:	9b01      	ldr	r3, [sp, #4]
 800e102:	2b00      	cmp	r3, #0
 800e104:	f000 80d5 	beq.w	800e2b2 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800e108:	a802      	add	r0, sp, #8
 800e10a:	f001 f979 	bl	800f400 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 800e10e:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e110:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 800e114:	f7ff fad0 	bl	800d6b8 <vPortExitCritical>
		vTaskSuspendAll();
 800e118:	f001 f822 	bl	800f160 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e11c:	f7ff faaa 	bl	800d674 <vPortEnterCritical>
 800e120:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e124:	2bff      	cmp	r3, #255	; 0xff
 800e126:	bf08      	it	eq
 800e128:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800e12c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e130:	2bff      	cmp	r3, #255	; 0xff
 800e132:	bf08      	it	eq
 800e134:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800e138:	f7ff fabe 	bl	800d6b8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e13c:	a901      	add	r1, sp, #4
 800e13e:	a802      	add	r0, sp, #8
 800e140:	f001 f96a 	bl	800f418 <xTaskCheckForTimeOut>
 800e144:	2800      	cmp	r0, #0
 800e146:	d163      	bne.n	800e210 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 800e148:	f7ff fa94 	bl	800d674 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e14c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e14e:	2b00      	cmp	r3, #0
 800e150:	f000 80b5 	beq.w	800e2be <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 800e154:	f7ff fab0 	bl	800d6b8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e158:	f7ff fa8c 	bl	800d674 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e15c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e160:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e162:	2d00      	cmp	r5, #0
 800e164:	dc04      	bgt.n	800e170 <xQueueReceive+0x9c>
 800e166:	e011      	b.n	800e18c <xQueueReceive+0xb8>
			--cTxLock;
 800e168:	1e6b      	subs	r3, r5, #1
 800e16a:	b2da      	uxtb	r2, r3
 800e16c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e16e:	b16a      	cbz	r2, 800e18c <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e170:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e172:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e174:	b153      	cbz	r3, 800e18c <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e176:	f001 f8fb 	bl	800f370 <xTaskRemoveFromEventList>
 800e17a:	2800      	cmp	r0, #0
 800e17c:	d0f4      	beq.n	800e168 <xQueueReceive+0x94>
						vTaskMissedYield();
 800e17e:	f001 f993 	bl	800f4a8 <vTaskMissedYield>
			--cTxLock;
 800e182:	1e6b      	subs	r3, r5, #1
 800e184:	b2da      	uxtb	r2, r3
 800e186:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e188:	2a00      	cmp	r2, #0
 800e18a:	d1f1      	bne.n	800e170 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 800e18c:	23ff      	movs	r3, #255	; 0xff
 800e18e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e192:	f7ff fa91 	bl	800d6b8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e196:	f7ff fa6d 	bl	800d674 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e19a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e19e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e1a0:	2d00      	cmp	r5, #0
 800e1a2:	dd14      	ble.n	800e1ce <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e1a4:	f104 0910 	add.w	r9, r4, #16
 800e1a8:	e003      	b.n	800e1b2 <xQueueReceive+0xde>
				--cRxLock;
 800e1aa:	1e6b      	subs	r3, r5, #1
 800e1ac:	b2da      	uxtb	r2, r3
 800e1ae:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e1b0:	b16a      	cbz	r2, 800e1ce <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e1b2:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e1b4:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e1b6:	b153      	cbz	r3, 800e1ce <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e1b8:	f001 f8da 	bl	800f370 <xTaskRemoveFromEventList>
 800e1bc:	2800      	cmp	r0, #0
 800e1be:	d0f4      	beq.n	800e1aa <xQueueReceive+0xd6>
					vTaskMissedYield();
 800e1c0:	f001 f972 	bl	800f4a8 <vTaskMissedYield>
				--cRxLock;
 800e1c4:	1e6b      	subs	r3, r5, #1
 800e1c6:	b2da      	uxtb	r2, r3
 800e1c8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e1ca:	2a00      	cmp	r2, #0
 800e1cc:	d1f1      	bne.n	800e1b2 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 800e1ce:	23ff      	movs	r3, #255	; 0xff
 800e1d0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e1d4:	f7ff fa70 	bl	800d6b8 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800e1d8:	f000 ffca 	bl	800f170 <xTaskResumeAll>
		taskENTER_CRITICAL();
 800e1dc:	e060      	b.n	800e2a0 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e1de:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e1e0:	2b00      	cmp	r3, #0
 800e1e2:	d082      	beq.n	800e0ea <xQueueReceive+0x16>
	__asm volatile
 800e1e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e1e8:	f383 8811 	msr	BASEPRI, r3
 800e1ec:	f3bf 8f6f 	isb	sy
 800e1f0:	f3bf 8f4f 	dsb	sy
 800e1f4:	e7fe      	b.n	800e1f4 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e1f6:	9b01      	ldr	r3, [sp, #4]
 800e1f8:	2b00      	cmp	r3, #0
 800e1fa:	f43f af7b 	beq.w	800e0f4 <xQueueReceive+0x20>
 800e1fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e202:	f383 8811 	msr	BASEPRI, r3
 800e206:	f3bf 8f6f 	isb	sy
 800e20a:	f3bf 8f4f 	dsb	sy
 800e20e:	e7fe      	b.n	800e20e <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 800e210:	f7ff fa30 	bl	800d674 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e214:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e218:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e21a:	2d00      	cmp	r5, #0
 800e21c:	dc04      	bgt.n	800e228 <xQueueReceive+0x154>
 800e21e:	e011      	b.n	800e244 <xQueueReceive+0x170>
			--cTxLock;
 800e220:	1e6b      	subs	r3, r5, #1
 800e222:	b2da      	uxtb	r2, r3
 800e224:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e226:	b16a      	cbz	r2, 800e244 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e228:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e22a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e22c:	b153      	cbz	r3, 800e244 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e22e:	f001 f89f 	bl	800f370 <xTaskRemoveFromEventList>
 800e232:	2800      	cmp	r0, #0
 800e234:	d0f4      	beq.n	800e220 <xQueueReceive+0x14c>
						vTaskMissedYield();
 800e236:	f001 f937 	bl	800f4a8 <vTaskMissedYield>
			--cTxLock;
 800e23a:	1e6b      	subs	r3, r5, #1
 800e23c:	b2da      	uxtb	r2, r3
 800e23e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e240:	2a00      	cmp	r2, #0
 800e242:	d1f1      	bne.n	800e228 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 800e244:	23ff      	movs	r3, #255	; 0xff
 800e246:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e24a:	f7ff fa35 	bl	800d6b8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e24e:	f7ff fa11 	bl	800d674 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e252:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e256:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e258:	2d00      	cmp	r5, #0
 800e25a:	dd14      	ble.n	800e286 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e25c:	f104 0910 	add.w	r9, r4, #16
 800e260:	e003      	b.n	800e26a <xQueueReceive+0x196>
				--cRxLock;
 800e262:	1e6b      	subs	r3, r5, #1
 800e264:	b2da      	uxtb	r2, r3
 800e266:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e268:	b16a      	cbz	r2, 800e286 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e26a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e26c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e26e:	b153      	cbz	r3, 800e286 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e270:	f001 f87e 	bl	800f370 <xTaskRemoveFromEventList>
 800e274:	2800      	cmp	r0, #0
 800e276:	d0f4      	beq.n	800e262 <xQueueReceive+0x18e>
					vTaskMissedYield();
 800e278:	f001 f916 	bl	800f4a8 <vTaskMissedYield>
				--cRxLock;
 800e27c:	1e6b      	subs	r3, r5, #1
 800e27e:	b2da      	uxtb	r2, r3
 800e280:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e282:	2a00      	cmp	r2, #0
 800e284:	d1f1      	bne.n	800e26a <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 800e286:	23ff      	movs	r3, #255	; 0xff
 800e288:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e28c:	f7ff fa14 	bl	800d6b8 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800e290:	f000 ff6e 	bl	800f170 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800e294:	f7ff f9ee 	bl	800d674 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e298:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e29a:	b153      	cbz	r3, 800e2b2 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 800e29c:	f7ff fa0c 	bl	800d6b8 <vPortExitCritical>
		taskENTER_CRITICAL();
 800e2a0:	f7ff f9e8 	bl	800d674 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e2a4:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e2a6:	2d00      	cmp	r5, #0
 800e2a8:	d162      	bne.n	800e370 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e2aa:	9b01      	ldr	r3, [sp, #4]
 800e2ac:	2b00      	cmp	r3, #0
 800e2ae:	f47f af31 	bne.w	800e114 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 800e2b2:	f7ff fa01 	bl	800d6b8 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800e2b6:	2000      	movs	r0, #0
}
 800e2b8:	b005      	add	sp, #20
 800e2ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800e2be:	f7ff f9fb 	bl	800d6b8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800e2c2:	9901      	ldr	r1, [sp, #4]
 800e2c4:	4630      	mov	r0, r6
 800e2c6:	f000 ffc5 	bl	800f254 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800e2ca:	f7ff f9d3 	bl	800d674 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e2ce:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e2d2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e2d4:	2d00      	cmp	r5, #0
 800e2d6:	dc04      	bgt.n	800e2e2 <xQueueReceive+0x20e>
 800e2d8:	e011      	b.n	800e2fe <xQueueReceive+0x22a>
			--cTxLock;
 800e2da:	1e6b      	subs	r3, r5, #1
 800e2dc:	b2da      	uxtb	r2, r3
 800e2de:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e2e0:	b16a      	cbz	r2, 800e2fe <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e2e2:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e2e4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e2e6:	b153      	cbz	r3, 800e2fe <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e2e8:	f001 f842 	bl	800f370 <xTaskRemoveFromEventList>
 800e2ec:	2800      	cmp	r0, #0
 800e2ee:	d0f4      	beq.n	800e2da <xQueueReceive+0x206>
						vTaskMissedYield();
 800e2f0:	f001 f8da 	bl	800f4a8 <vTaskMissedYield>
			--cTxLock;
 800e2f4:	1e6b      	subs	r3, r5, #1
 800e2f6:	b2da      	uxtb	r2, r3
 800e2f8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e2fa:	2a00      	cmp	r2, #0
 800e2fc:	d1f1      	bne.n	800e2e2 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 800e2fe:	23ff      	movs	r3, #255	; 0xff
 800e300:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e304:	f7ff f9d8 	bl	800d6b8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e308:	f7ff f9b4 	bl	800d674 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e30c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e310:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e312:	2d00      	cmp	r5, #0
 800e314:	dd14      	ble.n	800e340 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e316:	f104 0910 	add.w	r9, r4, #16
 800e31a:	e003      	b.n	800e324 <xQueueReceive+0x250>
				--cRxLock;
 800e31c:	1e6b      	subs	r3, r5, #1
 800e31e:	b2da      	uxtb	r2, r3
 800e320:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e322:	b16a      	cbz	r2, 800e340 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e324:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e326:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e328:	b153      	cbz	r3, 800e340 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e32a:	f001 f821 	bl	800f370 <xTaskRemoveFromEventList>
 800e32e:	2800      	cmp	r0, #0
 800e330:	d0f4      	beq.n	800e31c <xQueueReceive+0x248>
					vTaskMissedYield();
 800e332:	f001 f8b9 	bl	800f4a8 <vTaskMissedYield>
				--cRxLock;
 800e336:	1e6b      	subs	r3, r5, #1
 800e338:	b2da      	uxtb	r2, r3
 800e33a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e33c:	2a00      	cmp	r2, #0
 800e33e:	d1f1      	bne.n	800e324 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 800e340:	23ff      	movs	r3, #255	; 0xff
 800e342:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e346:	f7ff f9b7 	bl	800d6b8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800e34a:	f000 ff11 	bl	800f170 <xTaskResumeAll>
 800e34e:	2800      	cmp	r0, #0
 800e350:	d1a6      	bne.n	800e2a0 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 800e352:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e356:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e35a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e35e:	f3bf 8f4f 	dsb	sy
 800e362:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 800e366:	f7ff f985 	bl	800d674 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e36a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e36c:	2d00      	cmp	r5, #0
 800e36e:	d09c      	beq.n	800e2aa <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800e370:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e372:	b152      	cbz	r2, 800e38a <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e374:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e376:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e378:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e37a:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e37c:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800e37e:	bf24      	itt	cs
 800e380:	6821      	ldrcs	r1, [r4, #0]
 800e382:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e384:	4638      	mov	r0, r7
 800e386:	f01c f9d0 	bl	802a72a <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e38a:	3d01      	subs	r5, #1
 800e38c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e38e:	6923      	ldr	r3, [r4, #16]
 800e390:	b963      	cbnz	r3, 800e3ac <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 800e392:	f7ff f991 	bl	800d6b8 <vPortExitCritical>
				return pdPASS;
 800e396:	2001      	movs	r0, #1
 800e398:	e78e      	b.n	800e2b8 <xQueueReceive+0x1e4>
 800e39a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e39e:	f383 8811 	msr	BASEPRI, r3
 800e3a2:	f3bf 8f6f 	isb	sy
 800e3a6:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800e3aa:	e7fe      	b.n	800e3aa <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e3ac:	f104 0010 	add.w	r0, r4, #16
 800e3b0:	f000 ffde 	bl	800f370 <xTaskRemoveFromEventList>
 800e3b4:	2800      	cmp	r0, #0
 800e3b6:	d0ec      	beq.n	800e392 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 800e3b8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e3bc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e3c0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e3c4:	f3bf 8f4f 	dsb	sy
 800e3c8:	f3bf 8f6f 	isb	sy
 800e3cc:	e7e1      	b.n	800e392 <xQueueReceive+0x2be>
 800e3ce:	bf00      	nop

0800e3d0 <xQueueSemaphoreTake>:
{
 800e3d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e3d4:	b084      	sub	sp, #16
 800e3d6:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800e3d8:	2800      	cmp	r0, #0
 800e3da:	d05c      	beq.n	800e496 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 800e3dc:	6c07      	ldr	r7, [r0, #64]	; 0x40
 800e3de:	4604      	mov	r4, r0
 800e3e0:	b147      	cbz	r7, 800e3f4 <xQueueSemaphoreTake+0x24>
 800e3e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e3e6:	f383 8811 	msr	BASEPRI, r3
 800e3ea:	f3bf 8f6f 	isb	sy
 800e3ee:	f3bf 8f4f 	dsb	sy
 800e3f2:	e7fe      	b.n	800e3f2 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e3f4:	f001 f85e 	bl	800f4b4 <xTaskGetSchedulerState>
 800e3f8:	4605      	mov	r5, r0
 800e3fa:	2800      	cmp	r0, #0
 800e3fc:	d054      	beq.n	800e4a8 <xQueueSemaphoreTake+0xd8>
 800e3fe:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e400:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800e404:	f7ff f936 	bl	800d674 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800e408:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800e40a:	2b00      	cmp	r3, #0
 800e40c:	f040 8148 	bne.w	800e6a0 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e410:	9b01      	ldr	r3, [sp, #4]
 800e412:	2b00      	cmp	r3, #0
 800e414:	f000 813a 	beq.w	800e68c <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 800e418:	2d00      	cmp	r5, #0
 800e41a:	f000 809d 	beq.w	800e558 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 800e41e:	f7ff f94b 	bl	800d6b8 <vPortExitCritical>
		vTaskSuspendAll();
 800e422:	f000 fe9d 	bl	800f160 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e426:	f7ff f925 	bl	800d674 <vPortEnterCritical>
 800e42a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e42e:	2bff      	cmp	r3, #255	; 0xff
 800e430:	bf04      	itt	eq
 800e432:	2300      	moveq	r3, #0
 800e434:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800e438:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e43c:	2bff      	cmp	r3, #255	; 0xff
 800e43e:	bf04      	itt	eq
 800e440:	2300      	moveq	r3, #0
 800e442:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800e446:	f7ff f937 	bl	800d6b8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e44a:	a901      	add	r1, sp, #4
 800e44c:	a802      	add	r0, sp, #8
 800e44e:	f000 ffe3 	bl	800f418 <xTaskCheckForTimeOut>
 800e452:	2800      	cmp	r0, #0
 800e454:	d135      	bne.n	800e4c2 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 800e456:	f7ff f90d 	bl	800d674 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e45a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e45c:	2b00      	cmp	r3, #0
 800e45e:	f000 80a4 	beq.w	800e5aa <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 800e462:	f7ff f929 	bl	800d6b8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e466:	f7ff f905 	bl	800d674 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e46a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e46e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e470:	2d00      	cmp	r5, #0
 800e472:	dc05      	bgt.n	800e480 <xQueueSemaphoreTake+0xb0>
 800e474:	e074      	b.n	800e560 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 800e476:	1e6b      	subs	r3, r5, #1
 800e478:	b2da      	uxtb	r2, r3
 800e47a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e47c:	2a00      	cmp	r2, #0
 800e47e:	d06f      	beq.n	800e560 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e480:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e482:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e484:	2b00      	cmp	r3, #0
 800e486:	d06b      	beq.n	800e560 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e488:	f000 ff72 	bl	800f370 <xTaskRemoveFromEventList>
 800e48c:	2800      	cmp	r0, #0
 800e48e:	d0f2      	beq.n	800e476 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 800e490:	f001 f80a 	bl	800f4a8 <vTaskMissedYield>
 800e494:	e7ef      	b.n	800e476 <xQueueSemaphoreTake+0xa6>
 800e496:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e49a:	f383 8811 	msr	BASEPRI, r3
 800e49e:	f3bf 8f6f 	isb	sy
 800e4a2:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800e4a6:	e7fe      	b.n	800e4a6 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e4a8:	9b01      	ldr	r3, [sp, #4]
 800e4aa:	2b00      	cmp	r3, #0
 800e4ac:	f000 80d4 	beq.w	800e658 <xQueueSemaphoreTake+0x288>
 800e4b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e4b4:	f383 8811 	msr	BASEPRI, r3
 800e4b8:	f3bf 8f6f 	isb	sy
 800e4bc:	f3bf 8f4f 	dsb	sy
 800e4c0:	e7fe      	b.n	800e4c0 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 800e4c2:	f7ff f8d7 	bl	800d674 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e4c6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e4ca:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e4cc:	2d00      	cmp	r5, #0
 800e4ce:	dc04      	bgt.n	800e4da <xQueueSemaphoreTake+0x10a>
 800e4d0:	e011      	b.n	800e4f6 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 800e4d2:	1e6b      	subs	r3, r5, #1
 800e4d4:	b2da      	uxtb	r2, r3
 800e4d6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e4d8:	b16a      	cbz	r2, 800e4f6 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e4da:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e4dc:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e4de:	b153      	cbz	r3, 800e4f6 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e4e0:	f000 ff46 	bl	800f370 <xTaskRemoveFromEventList>
 800e4e4:	2800      	cmp	r0, #0
 800e4e6:	d0f4      	beq.n	800e4d2 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 800e4e8:	f000 ffde 	bl	800f4a8 <vTaskMissedYield>
			--cTxLock;
 800e4ec:	1e6b      	subs	r3, r5, #1
 800e4ee:	b2da      	uxtb	r2, r3
 800e4f0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e4f2:	2a00      	cmp	r2, #0
 800e4f4:	d1f1      	bne.n	800e4da <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 800e4f6:	23ff      	movs	r3, #255	; 0xff
 800e4f8:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e4fc:	f7ff f8dc 	bl	800d6b8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e500:	f7ff f8b8 	bl	800d674 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e504:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e508:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e50a:	2d00      	cmp	r5, #0
 800e50c:	dd14      	ble.n	800e538 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e50e:	f104 0810 	add.w	r8, r4, #16
 800e512:	e003      	b.n	800e51c <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 800e514:	1e6b      	subs	r3, r5, #1
 800e516:	b2da      	uxtb	r2, r3
 800e518:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e51a:	b16a      	cbz	r2, 800e538 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e51c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e51e:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e520:	b153      	cbz	r3, 800e538 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e522:	f000 ff25 	bl	800f370 <xTaskRemoveFromEventList>
 800e526:	2800      	cmp	r0, #0
 800e528:	d0f4      	beq.n	800e514 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 800e52a:	f000 ffbd 	bl	800f4a8 <vTaskMissedYield>
				--cRxLock;
 800e52e:	1e6b      	subs	r3, r5, #1
 800e530:	b2da      	uxtb	r2, r3
 800e532:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e534:	2a00      	cmp	r2, #0
 800e536:	d1f1      	bne.n	800e51c <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 800e538:	23ff      	movs	r3, #255	; 0xff
 800e53a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e53e:	f7ff f8bb 	bl	800d6b8 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800e542:	f000 fe15 	bl	800f170 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800e546:	f7ff f895 	bl	800d674 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e54a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e54c:	2b00      	cmp	r3, #0
 800e54e:	d07c      	beq.n	800e64a <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 800e550:	f7ff f8b2 	bl	800d6b8 <vPortExitCritical>
	return xReturn;
 800e554:	2501      	movs	r5, #1
 800e556:	e755      	b.n	800e404 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800e558:	a802      	add	r0, sp, #8
 800e55a:	f000 ff51 	bl	800f400 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800e55e:	e75e      	b.n	800e41e <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800e560:	23ff      	movs	r3, #255	; 0xff
 800e562:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e566:	f7ff f8a7 	bl	800d6b8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e56a:	f7ff f883 	bl	800d674 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e56e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e572:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e574:	2d00      	cmp	r5, #0
 800e576:	dd10      	ble.n	800e59a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e578:	f104 0810 	add.w	r8, r4, #16
 800e57c:	e003      	b.n	800e586 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 800e57e:	1e6b      	subs	r3, r5, #1
 800e580:	b2da      	uxtb	r2, r3
 800e582:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e584:	b14a      	cbz	r2, 800e59a <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e586:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e588:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e58a:	b133      	cbz	r3, 800e59a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e58c:	f000 fef0 	bl	800f370 <xTaskRemoveFromEventList>
 800e590:	2800      	cmp	r0, #0
 800e592:	d0f4      	beq.n	800e57e <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 800e594:	f000 ff88 	bl	800f4a8 <vTaskMissedYield>
 800e598:	e7f1      	b.n	800e57e <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 800e59a:	23ff      	movs	r3, #255	; 0xff
 800e59c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e5a0:	f7ff f88a 	bl	800d6b8 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800e5a4:	f000 fde4 	bl	800f170 <xTaskResumeAll>
 800e5a8:	e7d4      	b.n	800e554 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800e5aa:	f7ff f885 	bl	800d6b8 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e5ae:	6823      	ldr	r3, [r4, #0]
 800e5b0:	2b00      	cmp	r3, #0
 800e5b2:	d062      	beq.n	800e67a <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800e5b4:	9901      	ldr	r1, [sp, #4]
 800e5b6:	4630      	mov	r0, r6
 800e5b8:	f000 fe4c 	bl	800f254 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800e5bc:	f7ff f85a 	bl	800d674 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e5c0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e5c4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e5c6:	2d00      	cmp	r5, #0
 800e5c8:	dc04      	bgt.n	800e5d4 <xQueueSemaphoreTake+0x204>
 800e5ca:	e00d      	b.n	800e5e8 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 800e5cc:	1e6b      	subs	r3, r5, #1
 800e5ce:	b2da      	uxtb	r2, r3
 800e5d0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e5d2:	b14a      	cbz	r2, 800e5e8 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e5d4:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e5d6:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e5d8:	b133      	cbz	r3, 800e5e8 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e5da:	f000 fec9 	bl	800f370 <xTaskRemoveFromEventList>
 800e5de:	2800      	cmp	r0, #0
 800e5e0:	d0f4      	beq.n	800e5cc <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 800e5e2:	f000 ff61 	bl	800f4a8 <vTaskMissedYield>
 800e5e6:	e7f1      	b.n	800e5cc <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 800e5e8:	23ff      	movs	r3, #255	; 0xff
 800e5ea:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e5ee:	f7ff f863 	bl	800d6b8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e5f2:	f7ff f83f 	bl	800d674 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e5f6:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e5fa:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e5fc:	2d00      	cmp	r5, #0
 800e5fe:	dd10      	ble.n	800e622 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e600:	f104 0810 	add.w	r8, r4, #16
 800e604:	e003      	b.n	800e60e <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 800e606:	1e6b      	subs	r3, r5, #1
 800e608:	b2da      	uxtb	r2, r3
 800e60a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e60c:	b14a      	cbz	r2, 800e622 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e60e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e610:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e612:	b133      	cbz	r3, 800e622 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e614:	f000 feac 	bl	800f370 <xTaskRemoveFromEventList>
 800e618:	2800      	cmp	r0, #0
 800e61a:	d0f4      	beq.n	800e606 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 800e61c:	f000 ff44 	bl	800f4a8 <vTaskMissedYield>
 800e620:	e7f1      	b.n	800e606 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 800e622:	23ff      	movs	r3, #255	; 0xff
 800e624:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e628:	f7ff f846 	bl	800d6b8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800e62c:	f000 fda0 	bl	800f170 <xTaskResumeAll>
 800e630:	2800      	cmp	r0, #0
 800e632:	d18f      	bne.n	800e554 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 800e634:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e638:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e63c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e640:	f3bf 8f4f 	dsb	sy
 800e644:	f3bf 8f6f 	isb	sy
 800e648:	e784      	b.n	800e554 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800e64a:	f7ff f835 	bl	800d6b8 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 800e64e:	b92f      	cbnz	r7, 800e65c <xQueueSemaphoreTake+0x28c>
}
 800e650:	4638      	mov	r0, r7
 800e652:	b004      	add	sp, #16
 800e654:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e658:	4607      	mov	r7, r0
 800e65a:	e6d1      	b.n	800e400 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 800e65c:	f7ff f80a 	bl	800d674 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800e660:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800e662:	b119      	cbz	r1, 800e66c <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800e664:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e666:	6819      	ldr	r1, [r3, #0]
 800e668:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800e66c:	68a0      	ldr	r0, [r4, #8]
 800e66e:	f000 ffbd 	bl	800f5ec <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800e672:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 800e674:	f7ff f820 	bl	800d6b8 <vPortExitCritical>
 800e678:	e7ea      	b.n	800e650 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 800e67a:	f7fe fffb 	bl	800d674 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800e67e:	68a0      	ldr	r0, [r4, #8]
 800e680:	f000 ff28 	bl	800f4d4 <xTaskPriorityInherit>
 800e684:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 800e686:	f7ff f817 	bl	800d6b8 <vPortExitCritical>
 800e68a:	e793      	b.n	800e5b4 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800e68c:	b197      	cbz	r7, 800e6b4 <xQueueSemaphoreTake+0x2e4>
 800e68e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e692:	f383 8811 	msr	BASEPRI, r3
 800e696:	f3bf 8f6f 	isb	sy
 800e69a:	f3bf 8f4f 	dsb	sy
 800e69e:	e7fe      	b.n	800e69e <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e6a0:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800e6a2:	3b01      	subs	r3, #1
 800e6a4:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e6a6:	b1ca      	cbz	r2, 800e6dc <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e6a8:	6923      	ldr	r3, [r4, #16]
 800e6aa:	b933      	cbnz	r3, 800e6ba <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 800e6ac:	f7ff f804 	bl	800d6b8 <vPortExitCritical>
				return pdPASS;
 800e6b0:	2701      	movs	r7, #1
 800e6b2:	e7cd      	b.n	800e650 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 800e6b4:	f7ff f800 	bl	800d6b8 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800e6b8:	e7ca      	b.n	800e650 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e6ba:	f104 0010 	add.w	r0, r4, #16
 800e6be:	f000 fe57 	bl	800f370 <xTaskRemoveFromEventList>
 800e6c2:	2800      	cmp	r0, #0
 800e6c4:	d0f2      	beq.n	800e6ac <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 800e6c6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e6ca:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e6ce:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e6d2:	f3bf 8f4f 	dsb	sy
 800e6d6:	f3bf 8f6f 	isb	sy
 800e6da:	e7e7      	b.n	800e6ac <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800e6dc:	f000 ffda 	bl	800f694 <pvTaskIncrementMutexHeldCount>
 800e6e0:	60a0      	str	r0, [r4, #8]
 800e6e2:	e7e1      	b.n	800e6a8 <xQueueSemaphoreTake+0x2d8>

0800e6e4 <xQueueReceiveFromISR>:
{
 800e6e4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 800e6e8:	b310      	cbz	r0, 800e730 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e6ea:	460e      	mov	r6, r1
 800e6ec:	4617      	mov	r7, r2
 800e6ee:	4604      	mov	r4, r0
 800e6f0:	b191      	cbz	r1, 800e718 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800e6f2:	f7ff f8f3 	bl	800d8dc <vPortValidateInterruptPriority>
	__asm volatile
 800e6f6:	f3ef 8911 	mrs	r9, BASEPRI
 800e6fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e6fe:	f383 8811 	msr	BASEPRI, r3
 800e702:	f3bf 8f6f 	isb	sy
 800e706:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e70a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e70c:	b9cd      	cbnz	r5, 800e742 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 800e70e:	4628      	mov	r0, r5
	__asm volatile
 800e710:	f389 8811 	msr	BASEPRI, r9
}
 800e714:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e718:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e71a:	2b00      	cmp	r3, #0
 800e71c:	d0e9      	beq.n	800e6f2 <xQueueReceiveFromISR+0xe>
	__asm volatile
 800e71e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e722:	f383 8811 	msr	BASEPRI, r3
 800e726:	f3bf 8f6f 	isb	sy
 800e72a:	f3bf 8f4f 	dsb	sy
 800e72e:	e7fe      	b.n	800e72e <xQueueReceiveFromISR+0x4a>
 800e730:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e734:	f383 8811 	msr	BASEPRI, r3
 800e738:	f3bf 8f6f 	isb	sy
 800e73c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e740:	e7fe      	b.n	800e740 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 800e742:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800e746:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 800e748:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800e74c:	b152      	cbz	r2, 800e764 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e74e:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e750:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e752:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e754:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e756:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800e758:	bf24      	itt	cs
 800e75a:	6821      	ldrcs	r1, [r4, #0]
 800e75c:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e75e:	4630      	mov	r0, r6
 800e760:	f01b ffe3 	bl	802a72a <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e764:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800e766:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e76a:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800e76c:	d009      	beq.n	800e782 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800e76e:	f108 0301 	add.w	r3, r8, #1
 800e772:	b25b      	sxtb	r3, r3
 800e774:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 800e778:	2001      	movs	r0, #1
	__asm volatile
 800e77a:	f389 8811 	msr	BASEPRI, r9
}
 800e77e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e782:	6923      	ldr	r3, [r4, #16]
 800e784:	2b00      	cmp	r3, #0
 800e786:	d0f7      	beq.n	800e778 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e788:	f104 0010 	add.w	r0, r4, #16
 800e78c:	f000 fdf0 	bl	800f370 <xTaskRemoveFromEventList>
 800e790:	2800      	cmp	r0, #0
 800e792:	d0f1      	beq.n	800e778 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 800e794:	2f00      	cmp	r7, #0
 800e796:	d0ef      	beq.n	800e778 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800e798:	2001      	movs	r0, #1
 800e79a:	6038      	str	r0, [r7, #0]
 800e79c:	e7b8      	b.n	800e710 <xQueueReceiveFromISR+0x2c>
 800e79e:	bf00      	nop

0800e7a0 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 800e7a0:	b158      	cbz	r0, 800e7ba <uxQueueMessagesWaiting+0x1a>
{
 800e7a2:	b510      	push	{r4, lr}
 800e7a4:	4604      	mov	r4, r0
 800e7a6:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 800e7a8:	f7fe ff64 	bl	800d674 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 800e7ac:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800e7ae:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800e7b0:	f7fe ff82 	bl	800d6b8 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800e7b4:	9801      	ldr	r0, [sp, #4]
 800e7b6:	b002      	add	sp, #8
 800e7b8:	bd10      	pop	{r4, pc}
	__asm volatile
 800e7ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e7be:	f383 8811 	msr	BASEPRI, r3
 800e7c2:	f3bf 8f6f 	isb	sy
 800e7c6:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 800e7ca:	e7fe      	b.n	800e7ca <uxQueueMessagesWaiting+0x2a>

0800e7cc <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 800e7cc:	b108      	cbz	r0, 800e7d2 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 800e7ce:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800e7d0:	4770      	bx	lr
 800e7d2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e7d6:	f383 8811 	msr	BASEPRI, r3
 800e7da:	f3bf 8f6f 	isb	sy
 800e7de:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e7e2:	e7fe      	b.n	800e7e2 <uxQueueMessagesWaitingFromISR+0x16>
 800e7e4:	0000      	movs	r0, r0
	...

0800e7e8 <vQueueDelete>:
	configASSERT( pxQueue );
 800e7e8:	b1f0      	cbz	r0, 800e828 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800e7ea:	4b21      	ldr	r3, [pc, #132]	; (800e870 <vQueueDelete+0x88>)
 800e7ec:	685a      	ldr	r2, [r3, #4]
 800e7ee:	4290      	cmp	r0, r2
 800e7f0:	d025      	beq.n	800e83e <vQueueDelete+0x56>
 800e7f2:	68da      	ldr	r2, [r3, #12]
 800e7f4:	4290      	cmp	r0, r2
 800e7f6:	d02c      	beq.n	800e852 <vQueueDelete+0x6a>
 800e7f8:	695a      	ldr	r2, [r3, #20]
 800e7fa:	4290      	cmp	r0, r2
 800e7fc:	d02b      	beq.n	800e856 <vQueueDelete+0x6e>
 800e7fe:	69da      	ldr	r2, [r3, #28]
 800e800:	4290      	cmp	r0, r2
 800e802:	d02a      	beq.n	800e85a <vQueueDelete+0x72>
 800e804:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800e806:	4290      	cmp	r0, r2
 800e808:	d029      	beq.n	800e85e <vQueueDelete+0x76>
 800e80a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e80c:	4290      	cmp	r0, r2
 800e80e:	d01e      	beq.n	800e84e <vQueueDelete+0x66>
 800e810:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800e812:	4290      	cmp	r0, r2
 800e814:	d025      	beq.n	800e862 <vQueueDelete+0x7a>
 800e816:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800e818:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e81a:	bf08      	it	eq
 800e81c:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800e81e:	d00f      	beq.n	800e840 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800e820:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800e824:	b14b      	cbz	r3, 800e83a <vQueueDelete+0x52>
}
 800e826:	4770      	bx	lr
 800e828:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e82c:	f383 8811 	msr	BASEPRI, r3
 800e830:	f3bf 8f6f 	isb	sy
 800e834:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e838:	e7fe      	b.n	800e838 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 800e83a:	f7fe be01 	b.w	800d440 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e83e:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800e840:	ed9f 7b09 	vldr	d7, [pc, #36]	; 800e868 <vQueueDelete+0x80>
 800e844:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800e848:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 800e84c:	e7e8      	b.n	800e820 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e84e:	2205      	movs	r2, #5
 800e850:	e7f6      	b.n	800e840 <vQueueDelete+0x58>
 800e852:	2201      	movs	r2, #1
 800e854:	e7f4      	b.n	800e840 <vQueueDelete+0x58>
 800e856:	2202      	movs	r2, #2
 800e858:	e7f2      	b.n	800e840 <vQueueDelete+0x58>
 800e85a:	2203      	movs	r2, #3
 800e85c:	e7f0      	b.n	800e840 <vQueueDelete+0x58>
 800e85e:	2204      	movs	r2, #4
 800e860:	e7ee      	b.n	800e840 <vQueueDelete+0x58>
 800e862:	2206      	movs	r2, #6
 800e864:	e7ec      	b.n	800e840 <vQueueDelete+0x58>
 800e866:	bf00      	nop
	...
 800e870:	200128b0 	.word	0x200128b0

0800e874 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800e874:	4b12      	ldr	r3, [pc, #72]	; (800e8c0 <vQueueAddToRegistry+0x4c>)
 800e876:	681a      	ldr	r2, [r3, #0]
 800e878:	b17a      	cbz	r2, 800e89a <vQueueAddToRegistry+0x26>
 800e87a:	689a      	ldr	r2, [r3, #8]
 800e87c:	b162      	cbz	r2, 800e898 <vQueueAddToRegistry+0x24>
 800e87e:	691a      	ldr	r2, [r3, #16]
 800e880:	b192      	cbz	r2, 800e8a8 <vQueueAddToRegistry+0x34>
 800e882:	699a      	ldr	r2, [r3, #24]
 800e884:	b192      	cbz	r2, 800e8ac <vQueueAddToRegistry+0x38>
 800e886:	6a1a      	ldr	r2, [r3, #32]
 800e888:	b192      	cbz	r2, 800e8b0 <vQueueAddToRegistry+0x3c>
 800e88a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800e88c:	b192      	cbz	r2, 800e8b4 <vQueueAddToRegistry+0x40>
 800e88e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800e890:	b192      	cbz	r2, 800e8b8 <vQueueAddToRegistry+0x44>
 800e892:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800e894:	b192      	cbz	r2, 800e8bc <vQueueAddToRegistry+0x48>
	}
 800e896:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e898:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 800e89a:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800e89e:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800e8a2:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 800e8a6:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e8a8:	2202      	movs	r2, #2
 800e8aa:	e7f6      	b.n	800e89a <vQueueAddToRegistry+0x26>
 800e8ac:	2203      	movs	r2, #3
 800e8ae:	e7f4      	b.n	800e89a <vQueueAddToRegistry+0x26>
 800e8b0:	2204      	movs	r2, #4
 800e8b2:	e7f2      	b.n	800e89a <vQueueAddToRegistry+0x26>
 800e8b4:	2205      	movs	r2, #5
 800e8b6:	e7f0      	b.n	800e89a <vQueueAddToRegistry+0x26>
 800e8b8:	2206      	movs	r2, #6
 800e8ba:	e7ee      	b.n	800e89a <vQueueAddToRegistry+0x26>
 800e8bc:	2207      	movs	r2, #7
 800e8be:	e7ec      	b.n	800e89a <vQueueAddToRegistry+0x26>
 800e8c0:	200128b0 	.word	0x200128b0

0800e8c4 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800e8c4:	b570      	push	{r4, r5, r6, lr}
 800e8c6:	4605      	mov	r5, r0
 800e8c8:	460e      	mov	r6, r1
 800e8ca:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800e8cc:	f7fe fed2 	bl	800d674 <vPortEnterCritical>
 800e8d0:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800e8d4:	2bff      	cmp	r3, #255	; 0xff
 800e8d6:	bf04      	itt	eq
 800e8d8:	2300      	moveq	r3, #0
 800e8da:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 800e8de:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800e8e2:	2bff      	cmp	r3, #255	; 0xff
 800e8e4:	bf04      	itt	eq
 800e8e6:	2300      	moveq	r3, #0
 800e8e8:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 800e8ec:	f7fe fee4 	bl	800d6b8 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800e8f0:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800e8f2:	2b00      	cmp	r3, #0
 800e8f4:	d043      	beq.n	800e97e <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 800e8f6:	f7fe febd 	bl	800d674 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e8fa:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800e8fe:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e900:	2c00      	cmp	r4, #0
 800e902:	dd14      	ble.n	800e92e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e904:	f105 0624 	add.w	r6, r5, #36	; 0x24
 800e908:	e003      	b.n	800e912 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 800e90a:	1e63      	subs	r3, r4, #1
 800e90c:	b2da      	uxtb	r2, r3
 800e90e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e910:	b16a      	cbz	r2, 800e92e <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e912:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e914:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e916:	b153      	cbz	r3, 800e92e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e918:	f000 fd2a 	bl	800f370 <xTaskRemoveFromEventList>
 800e91c:	2800      	cmp	r0, #0
 800e91e:	d0f4      	beq.n	800e90a <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 800e920:	f000 fdc2 	bl	800f4a8 <vTaskMissedYield>
			--cTxLock;
 800e924:	1e63      	subs	r3, r4, #1
 800e926:	b2da      	uxtb	r2, r3
 800e928:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e92a:	2a00      	cmp	r2, #0
 800e92c:	d1f1      	bne.n	800e912 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800e92e:	23ff      	movs	r3, #255	; 0xff
 800e930:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e934:	f7fe fec0 	bl	800d6b8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e938:	f7fe fe9c 	bl	800d674 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e93c:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800e940:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e942:	2c00      	cmp	r4, #0
 800e944:	dd14      	ble.n	800e970 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e946:	f105 0610 	add.w	r6, r5, #16
 800e94a:	e003      	b.n	800e954 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 800e94c:	1e63      	subs	r3, r4, #1
 800e94e:	b2da      	uxtb	r2, r3
 800e950:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e952:	b16a      	cbz	r2, 800e970 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e954:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e956:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e958:	b153      	cbz	r3, 800e970 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e95a:	f000 fd09 	bl	800f370 <xTaskRemoveFromEventList>
 800e95e:	2800      	cmp	r0, #0
 800e960:	d0f4      	beq.n	800e94c <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 800e962:	f000 fda1 	bl	800f4a8 <vTaskMissedYield>
				--cRxLock;
 800e966:	1e63      	subs	r3, r4, #1
 800e968:	b2da      	uxtb	r2, r3
 800e96a:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e96c:	2a00      	cmp	r2, #0
 800e96e:	d1f1      	bne.n	800e954 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 800e970:	23ff      	movs	r3, #255	; 0xff
 800e972:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 800e976:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800e97a:	f7fe be9d 	b.w	800d6b8 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800e97e:	4622      	mov	r2, r4
 800e980:	4631      	mov	r1, r6
 800e982:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e986:	f000 fca9 	bl	800f2dc <vTaskPlaceOnEventListRestricted>
 800e98a:	e7b4      	b.n	800e8f6 <vQueueWaitForMessageRestricted+0x32>

0800e98c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800e98c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e990:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800e992:	f7fe fe6f 	bl	800d674 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800e996:	4a34      	ldr	r2, [pc, #208]	; (800ea68 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 800e998:	4e34      	ldr	r6, [pc, #208]	; (800ea6c <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 800e99a:	6813      	ldr	r3, [r2, #0]
 800e99c:	3301      	adds	r3, #1
 800e99e:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 800e9a0:	6833      	ldr	r3, [r6, #0]
 800e9a2:	2b00      	cmp	r3, #0
 800e9a4:	d032      	beq.n	800ea0c <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 800e9a6:	4c32      	ldr	r4, [pc, #200]	; (800ea70 <prvAddNewTaskToReadyList+0xe4>)
 800e9a8:	6823      	ldr	r3, [r4, #0]
 800e9aa:	b33b      	cbz	r3, 800e9fc <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e9ac:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e9ae:	4f31      	ldr	r7, [pc, #196]	; (800ea74 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 800e9b0:	4a31      	ldr	r2, [pc, #196]	; (800ea78 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 800e9b2:	4932      	ldr	r1, [pc, #200]	; (800ea7c <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 800e9b4:	6813      	ldr	r3, [r2, #0]
 800e9b6:	3301      	adds	r3, #1
 800e9b8:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800e9ba:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800e9bc:	680b      	ldr	r3, [r1, #0]
 800e9be:	4283      	cmp	r3, r0
 800e9c0:	bf38      	it	cc
 800e9c2:	6008      	strcc	r0, [r1, #0]
 800e9c4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800e9c8:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800e9cc:	1d29      	adds	r1, r5, #4
 800e9ce:	f7fe fdab 	bl	800d528 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 800e9d2:	f7fe fe71 	bl	800d6b8 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 800e9d6:	6823      	ldr	r3, [r4, #0]
 800e9d8:	b173      	cbz	r3, 800e9f8 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800e9da:	6832      	ldr	r2, [r6, #0]
 800e9dc:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800e9de:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800e9e0:	429a      	cmp	r2, r3
 800e9e2:	d209      	bcs.n	800e9f8 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 800e9e4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e9e8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e9ec:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e9f0:	f3bf 8f4f 	dsb	sy
 800e9f4:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800e9f8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e9fc:	6833      	ldr	r3, [r6, #0]
 800e9fe:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800ea00:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ea02:	4f1c      	ldr	r7, [pc, #112]	; (800ea74 <prvAddNewTaskToReadyList+0xe8>)
 800ea04:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 800ea06:	bf98      	it	ls
 800ea08:	6035      	strls	r5, [r6, #0]
 800ea0a:	e7d1      	b.n	800e9b0 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 800ea0c:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800ea0e:	6813      	ldr	r3, [r2, #0]
 800ea10:	2b01      	cmp	r3, #1
 800ea12:	d003      	beq.n	800ea1c <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800ea14:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800ea16:	4f17      	ldr	r7, [pc, #92]	; (800ea74 <prvAddNewTaskToReadyList+0xe8>)
 800ea18:	4c15      	ldr	r4, [pc, #84]	; (800ea70 <prvAddNewTaskToReadyList+0xe4>)
 800ea1a:	e7c9      	b.n	800e9b0 <prvAddNewTaskToReadyList+0x24>
 800ea1c:	4f15      	ldr	r7, [pc, #84]	; (800ea74 <prvAddNewTaskToReadyList+0xe8>)
 800ea1e:	463c      	mov	r4, r7
 800ea20:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800ea24:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800ea26:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800ea28:	f7fe fd6e 	bl	800d508 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800ea2c:	45a0      	cmp	r8, r4
 800ea2e:	d1f9      	bne.n	800ea24 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 800ea30:	f8df 9060 	ldr.w	r9, [pc, #96]	; 800ea94 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 800ea34:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800ea98 <prvAddNewTaskToReadyList+0x10c>
 800ea38:	4c0d      	ldr	r4, [pc, #52]	; (800ea70 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 800ea3a:	4648      	mov	r0, r9
 800ea3c:	f7fe fd64 	bl	800d508 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800ea40:	4640      	mov	r0, r8
 800ea42:	f7fe fd61 	bl	800d508 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800ea46:	480e      	ldr	r0, [pc, #56]	; (800ea80 <prvAddNewTaskToReadyList+0xf4>)
 800ea48:	f7fe fd5e 	bl	800d508 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800ea4c:	480d      	ldr	r0, [pc, #52]	; (800ea84 <prvAddNewTaskToReadyList+0xf8>)
 800ea4e:	f7fe fd5b 	bl	800d508 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800ea52:	480d      	ldr	r0, [pc, #52]	; (800ea88 <prvAddNewTaskToReadyList+0xfc>)
 800ea54:	f7fe fd58 	bl	800d508 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800ea58:	4b0c      	ldr	r3, [pc, #48]	; (800ea8c <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 800ea5a:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 800ea5c:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800ea60:	4b0b      	ldr	r3, [pc, #44]	; (800ea90 <prvAddNewTaskToReadyList+0x104>)
 800ea62:	f8c3 8000 	str.w	r8, [r3]
}
 800ea66:	e7a3      	b.n	800e9b0 <prvAddNewTaskToReadyList+0x24>
 800ea68:	20012d5c 	.word	0x20012d5c
 800ea6c:	200128f0 	.word	0x200128f0
 800ea70:	20012db8 	.word	0x20012db8
 800ea74:	200128fc 	.word	0x200128fc
 800ea78:	20012d68 	.word	0x20012d68
 800ea7c:	20012d6c 	.word	0x20012d6c
 800ea80:	20012da4 	.word	0x20012da4
 800ea84:	20012dd0 	.word	0x20012dd0
 800ea88:	20012dbc 	.word	0x20012dbc
 800ea8c:	200128f4 	.word	0x200128f4
 800ea90:	200128f8 	.word	0x200128f8
 800ea94:	20012d70 	.word	0x20012d70
 800ea98:	20012d84 	.word	0x20012d84

0800ea9c <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800ea9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800eaa0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800eaa2:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800eaa6:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800eaaa:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800eaac:	4606      	mov	r6, r0
 800eaae:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800eab0:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800eab2:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800eab4:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800eab6:	f01b fd12 	bl	802a4de <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800eaba:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800eabc:	f1a9 0904 	sub.w	r9, r9, #4
 800eac0:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800eac2:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 800eac6:	2d00      	cmp	r5, #0
 800eac8:	d079      	beq.n	800ebbe <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800eaca:	782b      	ldrb	r3, [r5, #0]
 800eacc:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 800ead0:	2b00      	cmp	r3, #0
 800ead2:	d03b      	beq.n	800eb4c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800ead4:	786b      	ldrb	r3, [r5, #1]
 800ead6:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 800eada:	2b00      	cmp	r3, #0
 800eadc:	d036      	beq.n	800eb4c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800eade:	78ab      	ldrb	r3, [r5, #2]
 800eae0:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 800eae4:	b393      	cbz	r3, 800eb4c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800eae6:	78eb      	ldrb	r3, [r5, #3]
 800eae8:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 800eaec:	b373      	cbz	r3, 800eb4c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800eaee:	792b      	ldrb	r3, [r5, #4]
 800eaf0:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 800eaf4:	b353      	cbz	r3, 800eb4c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800eaf6:	796b      	ldrb	r3, [r5, #5]
 800eaf8:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 800eafc:	b333      	cbz	r3, 800eb4c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800eafe:	79ab      	ldrb	r3, [r5, #6]
 800eb00:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 800eb04:	b313      	cbz	r3, 800eb4c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800eb06:	79eb      	ldrb	r3, [r5, #7]
 800eb08:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 800eb0c:	b1f3      	cbz	r3, 800eb4c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800eb0e:	7a2b      	ldrb	r3, [r5, #8]
 800eb10:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 800eb14:	b1d3      	cbz	r3, 800eb4c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800eb16:	7a6b      	ldrb	r3, [r5, #9]
 800eb18:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 800eb1c:	b1b3      	cbz	r3, 800eb4c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800eb1e:	7aab      	ldrb	r3, [r5, #10]
 800eb20:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 800eb24:	b193      	cbz	r3, 800eb4c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800eb26:	7aeb      	ldrb	r3, [r5, #11]
 800eb28:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 800eb2c:	b173      	cbz	r3, 800eb4c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800eb2e:	7b2b      	ldrb	r3, [r5, #12]
 800eb30:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 800eb34:	b153      	cbz	r3, 800eb4c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800eb36:	7b6b      	ldrb	r3, [r5, #13]
 800eb38:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 800eb3c:	b133      	cbz	r3, 800eb4c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800eb3e:	7bab      	ldrb	r3, [r5, #14]
 800eb40:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 800eb44:	b113      	cbz	r3, 800eb4c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800eb46:	7beb      	ldrb	r3, [r5, #15]
 800eb48:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800eb4c:	2300      	movs	r3, #0
 800eb4e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800eb52:	9d08      	ldr	r5, [sp, #32]
 800eb54:	2d37      	cmp	r5, #55	; 0x37
 800eb56:	bf28      	it	cs
 800eb58:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800eb5a:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800eb5e:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800eb60:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800eb62:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800eb64:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800eb68:	f7fe fcda 	bl	800d520 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800eb6c:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800eb70:	f104 0018 	add.w	r0, r4, #24
 800eb74:	f7fe fcd4 	bl	800d520 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800eb78:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 800eb7a:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800eb7e:	4651      	mov	r1, sl
 800eb80:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800eb82:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800eb84:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800eb86:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800eb8a:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800eb8e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800eb92:	f01b fca4 	bl	802a4de <memset>
 800eb96:	4b0b      	ldr	r3, [pc, #44]	; (800ebc4 <prvInitialiseNewTask.constprop.0+0x128>)
 800eb98:	65e3      	str	r3, [r4, #92]	; 0x5c
 800eb9a:	f103 0568 	add.w	r5, r3, #104	; 0x68
 800eb9e:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800eba0:	463a      	mov	r2, r7
 800eba2:	4631      	mov	r1, r6
 800eba4:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800eba6:	6625      	str	r5, [r4, #96]	; 0x60
 800eba8:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800ebaa:	f7fe fd37 	bl	800d61c <pxPortInitialiseStack>
 800ebae:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800ebb0:	f1b8 0f00 	cmp.w	r8, #0
 800ebb4:	d001      	beq.n	800ebba <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800ebb6:	f8c8 4000 	str.w	r4, [r8]
}
 800ebba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800ebbe:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800ebc2:	e7c6      	b.n	800eb52 <prvInitialiseNewTask.constprop.0+0xb6>
 800ebc4:	20013880 	.word	0x20013880

0800ebc8 <prvIdleTask>:
{
 800ebc8:	b580      	push	{r7, lr}
 800ebca:	4d23      	ldr	r5, [pc, #140]	; (800ec58 <prvIdleTask+0x90>)
 800ebcc:	4f23      	ldr	r7, [pc, #140]	; (800ec5c <prvIdleTask+0x94>)
 800ebce:	4e24      	ldr	r6, [pc, #144]	; (800ec60 <prvIdleTask+0x98>)
 800ebd0:	f8df 8090 	ldr.w	r8, [pc, #144]	; 800ec64 <prvIdleTask+0x9c>
				taskYIELD();
 800ebd4:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 800ebd8:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800ebdc:	682b      	ldr	r3, [r5, #0]
 800ebde:	b35b      	cbz	r3, 800ec38 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 800ebe0:	f7fe fd48 	bl	800d674 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ebe4:	68fb      	ldr	r3, [r7, #12]
 800ebe6:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800ebe8:	1d20      	adds	r0, r4, #4
 800ebea:	f7fe fcc5 	bl	800d578 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800ebee:	6833      	ldr	r3, [r6, #0]
 800ebf0:	3b01      	subs	r3, #1
 800ebf2:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 800ebf4:	682b      	ldr	r3, [r5, #0]
 800ebf6:	3b01      	subs	r3, #1
 800ebf8:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 800ebfa:	f7fe fd5d 	bl	800d6b8 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800ebfe:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800ec02:	f01b fcb5 	bl	802a570 <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800ec06:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 800ec0a:	b163      	cbz	r3, 800ec26 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800ec0c:	2b01      	cmp	r3, #1
 800ec0e:	d01e      	beq.n	800ec4e <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800ec10:	2b02      	cmp	r3, #2
 800ec12:	d0e3      	beq.n	800ebdc <prvIdleTask+0x14>
 800ec14:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec18:	f383 8811 	msr	BASEPRI, r3
 800ec1c:	f3bf 8f6f 	isb	sy
 800ec20:	f3bf 8f4f 	dsb	sy
 800ec24:	e7fe      	b.n	800ec24 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 800ec26:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800ec28:	f7fe fc0a 	bl	800d440 <vPortFree>
				vPortFree( pxTCB );
 800ec2c:	4620      	mov	r0, r4
 800ec2e:	f7fe fc07 	bl	800d440 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800ec32:	682b      	ldr	r3, [r5, #0]
 800ec34:	2b00      	cmp	r3, #0
 800ec36:	d1d3      	bne.n	800ebe0 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800ec38:	f8d8 3000 	ldr.w	r3, [r8]
 800ec3c:	2b01      	cmp	r3, #1
 800ec3e:	d9cd      	bls.n	800ebdc <prvIdleTask+0x14>
				taskYIELD();
 800ec40:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 800ec44:	f3bf 8f4f 	dsb	sy
 800ec48:	f3bf 8f6f 	isb	sy
 800ec4c:	e7c6      	b.n	800ebdc <prvIdleTask+0x14>
				vPortFree( pxTCB );
 800ec4e:	4620      	mov	r0, r4
 800ec50:	f7fe fbf6 	bl	800d440 <vPortFree>
 800ec54:	e7c2      	b.n	800ebdc <prvIdleTask+0x14>
 800ec56:	bf00      	nop
 800ec58:	20012d60 	.word	0x20012d60
 800ec5c:	20012dd0 	.word	0x20012dd0
 800ec60:	20012d5c 	.word	0x20012d5c
 800ec64:	200128fc 	.word	0x200128fc

0800ec68 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 800ec68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800ec6c:	4b47      	ldr	r3, [pc, #284]	; (800ed8c <xTaskIncrementTick.part.0+0x124>)
 800ec6e:	681e      	ldr	r6, [r3, #0]
 800ec70:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 800ec72:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 800ec74:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800ec76:	2e00      	cmp	r6, #0
 800ec78:	d040      	beq.n	800ecfc <xTaskIncrementTick.part.0+0x94>
 800ec7a:	f8df b124 	ldr.w	fp, [pc, #292]	; 800eda0 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800ec7e:	f8db 3000 	ldr.w	r3, [fp]
 800ec82:	429e      	cmp	r6, r3
 800ec84:	d347      	bcc.n	800ed16 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800ec86:	4f42      	ldr	r7, [pc, #264]	; (800ed90 <xTaskIncrementTick.part.0+0x128>)
 800ec88:	f8df 9118 	ldr.w	r9, [pc, #280]	; 800eda4 <xTaskIncrementTick.part.0+0x13c>
 800ec8c:	683b      	ldr	r3, [r7, #0]
 800ec8e:	f8df a118 	ldr.w	sl, [pc, #280]	; 800eda8 <xTaskIncrementTick.part.0+0x140>
 800ec92:	681d      	ldr	r5, [r3, #0]
 800ec94:	2d00      	cmp	r5, #0
 800ec96:	d073      	beq.n	800ed80 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 800ec98:	f8df 8110 	ldr.w	r8, [pc, #272]	; 800edac <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 800ec9c:	2500      	movs	r5, #0
 800ec9e:	e022      	b.n	800ece6 <xTaskIncrementTick.part.0+0x7e>
 800eca0:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800eca2:	f7fe fc69 	bl	800d578 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800eca6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800eca8:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800ecaa:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800ecae:	b113      	cbz	r3, 800ecb6 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800ecb0:	f7fe fc62 	bl	800d578 <uxListRemove>
 800ecb4:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800ecb6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800ecb8:	f8d8 2000 	ldr.w	r2, [r8]
 800ecbc:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800ecc0:	4293      	cmp	r3, r2
 800ecc2:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800ecc6:	bf88      	it	hi
 800ecc8:	f8c8 3000 	strhi.w	r3, [r8]
 800eccc:	f7fe fc2c 	bl	800d528 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800ecd0:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800ecd4:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800ecd6:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800ecd8:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800ecda:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 800ecdc:	4291      	cmp	r1, r2
 800ecde:	bf28      	it	cs
 800ece0:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800ece2:	2b00      	cmp	r3, #0
 800ece4:	d04c      	beq.n	800ed80 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ece6:	683b      	ldr	r3, [r7, #0]
 800ece8:	68db      	ldr	r3, [r3, #12]
 800ecea:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800ecec:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800ecee:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 800ecf0:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800ecf2:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 800ecf4:	d2d4      	bcs.n	800eca0 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 800ecf6:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800ecfa:	e011      	b.n	800ed20 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 800ecfc:	4b24      	ldr	r3, [pc, #144]	; (800ed90 <xTaskIncrementTick.part.0+0x128>)
 800ecfe:	681a      	ldr	r2, [r3, #0]
 800ed00:	6812      	ldr	r2, [r2, #0]
 800ed02:	b30a      	cbz	r2, 800ed48 <xTaskIncrementTick.part.0+0xe0>
 800ed04:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed08:	f383 8811 	msr	BASEPRI, r3
 800ed0c:	f3bf 8f6f 	isb	sy
 800ed10:	f3bf 8f4f 	dsb	sy
 800ed14:	e7fe      	b.n	800ed14 <xTaskIncrementTick.part.0+0xac>
 800ed16:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800eda4 <xTaskIncrementTick.part.0+0x13c>
 800ed1a:	f8df a08c 	ldr.w	sl, [pc, #140]	; 800eda8 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 800ed1e:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800ed20:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 800ed24:	491b      	ldr	r1, [pc, #108]	; (800ed94 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800ed26:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ed28:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800ed2c:	009b      	lsls	r3, r3, #2
 800ed2e:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 800ed32:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 800ed34:	2a02      	cmp	r2, #2
 800ed36:	bf28      	it	cs
 800ed38:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 800ed3a:	2b00      	cmp	r3, #0
}
 800ed3c:	bf0c      	ite	eq
 800ed3e:	4628      	moveq	r0, r5
 800ed40:	2001      	movne	r0, #1
 800ed42:	b003      	add	sp, #12
 800ed44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 800ed48:	4a13      	ldr	r2, [pc, #76]	; (800ed98 <xTaskIncrementTick.part.0+0x130>)
 800ed4a:	6818      	ldr	r0, [r3, #0]
 800ed4c:	6811      	ldr	r1, [r2, #0]
 800ed4e:	6019      	str	r1, [r3, #0]
 800ed50:	4912      	ldr	r1, [pc, #72]	; (800ed9c <xTaskIncrementTick.part.0+0x134>)
 800ed52:	6010      	str	r0, [r2, #0]
 800ed54:	680a      	ldr	r2, [r1, #0]
 800ed56:	3201      	adds	r2, #1
 800ed58:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800ed5a:	681a      	ldr	r2, [r3, #0]
 800ed5c:	6812      	ldr	r2, [r2, #0]
 800ed5e:	b932      	cbnz	r2, 800ed6e <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800ed60:	f8df b03c 	ldr.w	fp, [pc, #60]	; 800eda0 <xTaskIncrementTick.part.0+0x138>
 800ed64:	f04f 33ff 	mov.w	r3, #4294967295
 800ed68:	f8cb 3000 	str.w	r3, [fp]
 800ed6c:	e787      	b.n	800ec7e <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ed6e:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800ed70:	f8df b02c 	ldr.w	fp, [pc, #44]	; 800eda0 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ed74:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800ed76:	68db      	ldr	r3, [r3, #12]
 800ed78:	685b      	ldr	r3, [r3, #4]
 800ed7a:	f8cb 3000 	str.w	r3, [fp]
	}
}
 800ed7e:	e77e      	b.n	800ec7e <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ed80:	f04f 33ff 	mov.w	r3, #4294967295
 800ed84:	f8cb 3000 	str.w	r3, [fp]
					break;
 800ed88:	e7ca      	b.n	800ed20 <xTaskIncrementTick.part.0+0xb8>
 800ed8a:	bf00      	nop
 800ed8c:	20012de4 	.word	0x20012de4
 800ed90:	200128f4 	.word	0x200128f4
 800ed94:	20012de8 	.word	0x20012de8
 800ed98:	200128f8 	.word	0x200128f8
 800ed9c:	20012d9c 	.word	0x20012d9c
 800eda0:	20012d98 	.word	0x20012d98
 800eda4:	200128fc 	.word	0x200128fc
 800eda8:	200128f0 	.word	0x200128f0
 800edac:	20012d6c 	.word	0x20012d6c

0800edb0 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 800edb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 800edb4:	4d41      	ldr	r5, [pc, #260]	; (800eebc <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 800edb6:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 800edb8:	f7fe fc5c 	bl	800d674 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800edbc:	682b      	ldr	r3, [r5, #0]
 800edbe:	3b01      	subs	r3, #1
 800edc0:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800edc2:	682b      	ldr	r3, [r5, #0]
 800edc4:	2b00      	cmp	r3, #0
 800edc6:	d161      	bne.n	800ee8c <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800edc8:	4b3d      	ldr	r3, [pc, #244]	; (800eec0 <xTaskResumeAll.part.0+0x110>)
 800edca:	681b      	ldr	r3, [r3, #0]
 800edcc:	2b00      	cmp	r3, #0
 800edce:	d05d      	beq.n	800ee8c <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800edd0:	4e3c      	ldr	r6, [pc, #240]	; (800eec4 <xTaskResumeAll.part.0+0x114>)
 800edd2:	6833      	ldr	r3, [r6, #0]
 800edd4:	2b00      	cmp	r3, #0
 800edd6:	d06e      	beq.n	800eeb6 <xTaskResumeAll.part.0+0x106>
 800edd8:	4f3b      	ldr	r7, [pc, #236]	; (800eec8 <xTaskResumeAll.part.0+0x118>)
 800edda:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 800eed8 <xTaskResumeAll.part.0+0x128>
 800edde:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 800eedc <xTaskResumeAll.part.0+0x12c>
 800ede2:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 800eee0 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ede6:	68f3      	ldr	r3, [r6, #12]
 800ede8:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800edea:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800edee:	f104 0018 	add.w	r0, r4, #24
 800edf2:	f7fe fbc1 	bl	800d578 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800edf6:	4658      	mov	r0, fp
 800edf8:	f7fe fbbe 	bl	800d578 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800edfc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800edfe:	683a      	ldr	r2, [r7, #0]
 800ee00:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800ee04:	4293      	cmp	r3, r2
 800ee06:	4659      	mov	r1, fp
 800ee08:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800ee0c:	bf88      	it	hi
 800ee0e:	603b      	strhi	r3, [r7, #0]
 800ee10:	f7fe fb8a 	bl	800d528 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800ee14:	f8d8 3000 	ldr.w	r3, [r8]
 800ee18:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ee1a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ee1c:	429a      	cmp	r2, r3
 800ee1e:	d33d      	bcc.n	800ee9c <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 800ee20:	2301      	movs	r3, #1
 800ee22:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800ee26:	6833      	ldr	r3, [r6, #0]
 800ee28:	2b00      	cmp	r3, #0
 800ee2a:	d1dc      	bne.n	800ede6 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800ee2c:	4b27      	ldr	r3, [pc, #156]	; (800eecc <xTaskResumeAll.part.0+0x11c>)
 800ee2e:	681a      	ldr	r2, [r3, #0]
 800ee30:	6812      	ldr	r2, [r2, #0]
 800ee32:	2a00      	cmp	r2, #0
 800ee34:	d03a      	beq.n	800eeac <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ee36:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800ee38:	4b25      	ldr	r3, [pc, #148]	; (800eed0 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ee3a:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800ee3c:	68d2      	ldr	r2, [r2, #12]
 800ee3e:	6852      	ldr	r2, [r2, #4]
 800ee40:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800ee42:	4e24      	ldr	r6, [pc, #144]	; (800eed4 <xTaskResumeAll.part.0+0x124>)
 800ee44:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800ee46:	b194      	cbz	r4, 800ee6e <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 800ee48:	2701      	movs	r7, #1
 800ee4a:	e006      	b.n	800ee5a <xTaskResumeAll.part.0+0xaa>
 800ee4c:	f7ff ff0c 	bl	800ec68 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 800ee50:	b108      	cbz	r0, 800ee56 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 800ee52:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800ee56:	3c01      	subs	r4, #1
 800ee58:	d008      	beq.n	800ee6c <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ee5a:	682b      	ldr	r3, [r5, #0]
 800ee5c:	2b00      	cmp	r3, #0
 800ee5e:	d0f5      	beq.n	800ee4c <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 800ee60:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800ee62:	3c01      	subs	r4, #1
		++xPendedTicks;
 800ee64:	f103 0301 	add.w	r3, r3, #1
 800ee68:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800ee6a:	d1f6      	bne.n	800ee5a <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 800ee6c:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 800ee6e:	f8da 3000 	ldr.w	r3, [sl]
 800ee72:	b15b      	cbz	r3, 800ee8c <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 800ee74:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ee78:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ee7c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ee80:	f3bf 8f4f 	dsb	sy
 800ee84:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800ee88:	2001      	movs	r0, #1
 800ee8a:	e000      	b.n	800ee8e <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 800ee8c:	2000      	movs	r0, #0
 800ee8e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800ee90:	f7fe fc12 	bl	800d6b8 <vPortExitCritical>
}
 800ee94:	9801      	ldr	r0, [sp, #4]
 800ee96:	b003      	add	sp, #12
 800ee98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800ee9c:	6833      	ldr	r3, [r6, #0]
 800ee9e:	2b00      	cmp	r3, #0
 800eea0:	d1a1      	bne.n	800ede6 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800eea2:	4b0a      	ldr	r3, [pc, #40]	; (800eecc <xTaskResumeAll.part.0+0x11c>)
 800eea4:	681a      	ldr	r2, [r3, #0]
 800eea6:	6812      	ldr	r2, [r2, #0]
 800eea8:	2a00      	cmp	r2, #0
 800eeaa:	d1c4      	bne.n	800ee36 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 800eeac:	4b08      	ldr	r3, [pc, #32]	; (800eed0 <xTaskResumeAll.part.0+0x120>)
 800eeae:	f04f 32ff 	mov.w	r2, #4294967295
 800eeb2:	601a      	str	r2, [r3, #0]
 800eeb4:	e7c5      	b.n	800ee42 <xTaskResumeAll.part.0+0x92>
 800eeb6:	f8df a028 	ldr.w	sl, [pc, #40]	; 800eee0 <xTaskResumeAll.part.0+0x130>
 800eeba:	e7c2      	b.n	800ee42 <xTaskResumeAll.part.0+0x92>
 800eebc:	20012d64 	.word	0x20012d64
 800eec0:	20012d5c 	.word	0x20012d5c
 800eec4:	20012da4 	.word	0x20012da4
 800eec8:	20012d6c 	.word	0x20012d6c
 800eecc:	200128f4 	.word	0x200128f4
 800eed0:	20012d98 	.word	0x20012d98
 800eed4:	20012da0 	.word	0x20012da0
 800eed8:	200128fc 	.word	0x200128fc
 800eedc:	200128f0 	.word	0x200128f0
 800eee0:	20012de8 	.word	0x20012de8

0800eee4 <xTaskCreateStatic>:
	{
 800eee4:	b530      	push	{r4, r5, lr}
 800eee6:	b087      	sub	sp, #28
 800eee8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800eeea:	b1c4      	cbz	r4, 800ef1e <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 800eeec:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800eeee:	b16d      	cbz	r5, 800ef0c <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 800eef0:	25ac      	movs	r5, #172	; 0xac
 800eef2:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800eef4:	9d05      	ldr	r5, [sp, #20]
 800eef6:	2dac      	cmp	r5, #172	; 0xac
 800eef8:	d01a      	beq.n	800ef30 <xTaskCreateStatic+0x4c>
 800eefa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eefe:	f383 8811 	msr	BASEPRI, r3
 800ef02:	f3bf 8f6f 	isb	sy
 800ef06:	f3bf 8f4f 	dsb	sy
 800ef0a:	e7fe      	b.n	800ef0a <xTaskCreateStatic+0x26>
 800ef0c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef10:	f383 8811 	msr	BASEPRI, r3
 800ef14:	f3bf 8f6f 	isb	sy
 800ef18:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800ef1c:	e7fe      	b.n	800ef1c <xTaskCreateStatic+0x38>
 800ef1e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef22:	f383 8811 	msr	BASEPRI, r3
 800ef26:	f3bf 8f6f 	isb	sy
 800ef2a:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800ef2e:	e7fe      	b.n	800ef2e <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800ef30:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800ef32:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800ef34:	2402      	movs	r4, #2
 800ef36:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800ef3a:	ac04      	add	r4, sp, #16
 800ef3c:	e9cd 4501 	strd	r4, r5, [sp, #4]
 800ef40:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800ef42:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800ef44:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800ef46:	f7ff fda9 	bl	800ea9c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800ef4a:	980c      	ldr	r0, [sp, #48]	; 0x30
 800ef4c:	f7ff fd1e 	bl	800e98c <prvAddNewTaskToReadyList>
	}
 800ef50:	9804      	ldr	r0, [sp, #16]
 800ef52:	b007      	add	sp, #28
 800ef54:	bd30      	pop	{r4, r5, pc}
 800ef56:	bf00      	nop

0800ef58 <xTaskCreate>:
	{
 800ef58:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ef5c:	4607      	mov	r7, r0
 800ef5e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800ef60:	0090      	lsls	r0, r2, #2
	{
 800ef62:	4615      	mov	r5, r2
 800ef64:	4688      	mov	r8, r1
 800ef66:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800ef68:	f7fe f9ae 	bl	800d2c8 <pvPortMalloc>
			if( pxStack != NULL )
 800ef6c:	b1d8      	cbz	r0, 800efa6 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800ef6e:	4604      	mov	r4, r0
 800ef70:	20ac      	movs	r0, #172	; 0xac
 800ef72:	f7fe f9a9 	bl	800d2c8 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800ef76:	4606      	mov	r6, r0
 800ef78:	b1d0      	cbz	r0, 800efb0 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 800ef7a:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800ef7c:	2400      	movs	r4, #0
 800ef7e:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800ef82:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800ef84:	9401      	str	r4, [sp, #4]
 800ef86:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800ef88:	9602      	str	r6, [sp, #8]
 800ef8a:	464b      	mov	r3, r9
 800ef8c:	462a      	mov	r2, r5
 800ef8e:	4641      	mov	r1, r8
 800ef90:	4638      	mov	r0, r7
 800ef92:	9400      	str	r4, [sp, #0]
 800ef94:	f7ff fd82 	bl	800ea9c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800ef98:	4630      	mov	r0, r6
 800ef9a:	f7ff fcf7 	bl	800e98c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800ef9e:	2001      	movs	r0, #1
	}
 800efa0:	b005      	add	sp, #20
 800efa2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800efa6:	f04f 30ff 	mov.w	r0, #4294967295
	}
 800efaa:	b005      	add	sp, #20
 800efac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800efb0:	4620      	mov	r0, r4
 800efb2:	f7fe fa45 	bl	800d440 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800efb6:	f04f 30ff 	mov.w	r0, #4294967295
 800efba:	e7f1      	b.n	800efa0 <xTaskCreate+0x48>

0800efbc <vTaskDelay>:
	{
 800efbc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800efbe:	b950      	cbnz	r0, 800efd6 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800efc0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800efc4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800efc8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800efcc:	f3bf 8f4f 	dsb	sy
 800efd0:	f3bf 8f6f 	isb	sy
	}
 800efd4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800efd6:	4d1e      	ldr	r5, [pc, #120]	; (800f050 <vTaskDelay+0x94>)
 800efd8:	682b      	ldr	r3, [r5, #0]
 800efda:	b143      	cbz	r3, 800efee <vTaskDelay+0x32>
 800efdc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800efe0:	f383 8811 	msr	BASEPRI, r3
 800efe4:	f3bf 8f6f 	isb	sy
 800efe8:	f3bf 8f4f 	dsb	sy
 800efec:	e7fe      	b.n	800efec <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 800efee:	682b      	ldr	r3, [r5, #0]
 800eff0:	3301      	adds	r3, #1
 800eff2:	4604      	mov	r4, r0
 800eff4:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800eff6:	4b17      	ldr	r3, [pc, #92]	; (800f054 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800eff8:	4e17      	ldr	r6, [pc, #92]	; (800f058 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 800effa:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800effc:	6830      	ldr	r0, [r6, #0]
 800effe:	3004      	adds	r0, #4
 800f000:	f7fe faba 	bl	800d578 <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800f004:	6833      	ldr	r3, [r6, #0]
 800f006:	19e4      	adds	r4, r4, r7
 800f008:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 800f00a:	d310      	bcc.n	800f02e <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f00c:	4b13      	ldr	r3, [pc, #76]	; (800f05c <vTaskDelay+0xa0>)
 800f00e:	6818      	ldr	r0, [r3, #0]
 800f010:	6831      	ldr	r1, [r6, #0]
 800f012:	3104      	adds	r1, #4
 800f014:	f7fe fa98 	bl	800d548 <vListInsert>
	configASSERT( uxSchedulerSuspended );
 800f018:	682b      	ldr	r3, [r5, #0]
 800f01a:	b9a3      	cbnz	r3, 800f046 <vTaskDelay+0x8a>
 800f01c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f020:	f383 8811 	msr	BASEPRI, r3
 800f024:	f3bf 8f6f 	isb	sy
 800f028:	f3bf 8f4f 	dsb	sy
 800f02c:	e7fe      	b.n	800f02c <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f02e:	4b0c      	ldr	r3, [pc, #48]	; (800f060 <vTaskDelay+0xa4>)
 800f030:	6818      	ldr	r0, [r3, #0]
 800f032:	6831      	ldr	r1, [r6, #0]
 800f034:	3104      	adds	r1, #4
 800f036:	f7fe fa87 	bl	800d548 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 800f03a:	4b0a      	ldr	r3, [pc, #40]	; (800f064 <vTaskDelay+0xa8>)
 800f03c:	681a      	ldr	r2, [r3, #0]
 800f03e:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 800f040:	bf38      	it	cc
 800f042:	601c      	strcc	r4, [r3, #0]
 800f044:	e7e8      	b.n	800f018 <vTaskDelay+0x5c>
 800f046:	f7ff feb3 	bl	800edb0 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 800f04a:	2800      	cmp	r0, #0
 800f04c:	d0b8      	beq.n	800efc0 <vTaskDelay+0x4>
	}
 800f04e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f050:	20012d64 	.word	0x20012d64
 800f054:	20012de4 	.word	0x20012de4
 800f058:	200128f0 	.word	0x200128f0
 800f05c:	200128f8 	.word	0x200128f8
 800f060:	200128f4 	.word	0x200128f4
 800f064:	20012d98 	.word	0x20012d98

0800f068 <vTaskStartScheduler>:
{
 800f068:	b530      	push	{r4, r5, lr}
 800f06a:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800f06c:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800f06e:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800f070:	a906      	add	r1, sp, #24
 800f072:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800f074:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800f078:	f7fe f908 	bl	800d28c <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800f07c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800f080:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 800f082:	b1bb      	cbz	r3, 800f0b4 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 800f084:	b16d      	cbz	r5, 800f0a2 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 800f086:	21ac      	movs	r1, #172	; 0xac
 800f088:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 800f08a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800f08c:	29ac      	cmp	r1, #172	; 0xac
 800f08e:	d01a      	beq.n	800f0c6 <vTaskStartScheduler+0x5e>
 800f090:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f094:	f383 8811 	msr	BASEPRI, r3
 800f098:	f3bf 8f6f 	isb	sy
 800f09c:	f3bf 8f4f 	dsb	sy
 800f0a0:	e7fe      	b.n	800f0a0 <vTaskStartScheduler+0x38>
 800f0a2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f0a6:	f383 8811 	msr	BASEPRI, r3
 800f0aa:	f3bf 8f6f 	isb	sy
 800f0ae:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800f0b2:	e7fe      	b.n	800f0b2 <vTaskStartScheduler+0x4a>
 800f0b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f0b8:	f383 8811 	msr	BASEPRI, r3
 800f0bc:	f3bf 8f6f 	isb	sy
 800f0c0:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800f0c4:	e7fe      	b.n	800f0c4 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800f0c6:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f0c8:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800f0ca:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800f0cc:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f0d0:	4623      	mov	r3, r4
 800f0d2:	e9cd 0501 	strd	r0, r5, [sp, #4]
 800f0d6:	491b      	ldr	r1, [pc, #108]	; (800f144 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800f0d8:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f0da:	9400      	str	r4, [sp, #0]
 800f0dc:	481a      	ldr	r0, [pc, #104]	; (800f148 <vTaskStartScheduler+0xe0>)
 800f0de:	f7ff fcdd 	bl	800ea9c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800f0e2:	4628      	mov	r0, r5
 800f0e4:	f7ff fc52 	bl	800e98c <prvAddNewTaskToReadyList>
		return xReturn;
 800f0e8:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 800f0ea:	b1eb      	cbz	r3, 800f128 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 800f0ec:	f000 fc6e 	bl	800f9cc <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800f0f0:	2801      	cmp	r0, #1
 800f0f2:	d11b      	bne.n	800f12c <vTaskStartScheduler+0xc4>
 800f0f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f0f8:	f383 8811 	msr	BASEPRI, r3
 800f0fc:	f3bf 8f6f 	isb	sy
 800f100:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f104:	4b11      	ldr	r3, [pc, #68]	; (800f14c <vTaskStartScheduler+0xe4>)
 800f106:	4a12      	ldr	r2, [pc, #72]	; (800f150 <vTaskStartScheduler+0xe8>)
 800f108:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800f10a:	4912      	ldr	r1, [pc, #72]	; (800f154 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f10c:	3358      	adds	r3, #88	; 0x58
 800f10e:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 800f110:	4a11      	ldr	r2, [pc, #68]	; (800f158 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800f112:	4b12      	ldr	r3, [pc, #72]	; (800f15c <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 800f114:	f04f 35ff 	mov.w	r5, #4294967295
 800f118:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 800f11a:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800f11c:	601c      	str	r4, [r3, #0]
}
 800f11e:	b00b      	add	sp, #44	; 0x2c
 800f120:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 800f124:	f7fe bb38 	b.w	800d798 <xPortStartScheduler>
}
 800f128:	b00b      	add	sp, #44	; 0x2c
 800f12a:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800f12c:	3001      	adds	r0, #1
 800f12e:	d1fb      	bne.n	800f128 <vTaskStartScheduler+0xc0>
 800f130:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f134:	f383 8811 	msr	BASEPRI, r3
 800f138:	f3bf 8f6f 	isb	sy
 800f13c:	f3bf 8f4f 	dsb	sy
 800f140:	e7fe      	b.n	800f140 <vTaskStartScheduler+0xd8>
 800f142:	bf00      	nop
 800f144:	0802e11c 	.word	0x0802e11c
 800f148:	0800ebc9 	.word	0x0800ebc9
 800f14c:	200128f0 	.word	0x200128f0
 800f150:	20000160 	.word	0x20000160
 800f154:	20012d98 	.word	0x20012d98
 800f158:	20012db8 	.word	0x20012db8
 800f15c:	20012de4 	.word	0x20012de4

0800f160 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800f160:	4a02      	ldr	r2, [pc, #8]	; (800f16c <vTaskSuspendAll+0xc>)
 800f162:	6813      	ldr	r3, [r2, #0]
 800f164:	3301      	adds	r3, #1
 800f166:	6013      	str	r3, [r2, #0]
}
 800f168:	4770      	bx	lr
 800f16a:	bf00      	nop
 800f16c:	20012d64 	.word	0x20012d64

0800f170 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 800f170:	4b06      	ldr	r3, [pc, #24]	; (800f18c <xTaskResumeAll+0x1c>)
 800f172:	681b      	ldr	r3, [r3, #0]
 800f174:	b943      	cbnz	r3, 800f188 <xTaskResumeAll+0x18>
 800f176:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f17a:	f383 8811 	msr	BASEPRI, r3
 800f17e:	f3bf 8f6f 	isb	sy
 800f182:	f3bf 8f4f 	dsb	sy
 800f186:	e7fe      	b.n	800f186 <xTaskResumeAll+0x16>
 800f188:	f7ff be12 	b.w	800edb0 <xTaskResumeAll.part.0>
 800f18c:	20012d64 	.word	0x20012d64

0800f190 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800f190:	4b01      	ldr	r3, [pc, #4]	; (800f198 <xTaskGetTickCount+0x8>)
 800f192:	6818      	ldr	r0, [r3, #0]
}
 800f194:	4770      	bx	lr
 800f196:	bf00      	nop
 800f198:	20012de4 	.word	0x20012de4

0800f19c <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f19c:	4b05      	ldr	r3, [pc, #20]	; (800f1b4 <xTaskIncrementTick+0x18>)
 800f19e:	681b      	ldr	r3, [r3, #0]
 800f1a0:	b90b      	cbnz	r3, 800f1a6 <xTaskIncrementTick+0xa>
 800f1a2:	f7ff bd61 	b.w	800ec68 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 800f1a6:	4a04      	ldr	r2, [pc, #16]	; (800f1b8 <xTaskIncrementTick+0x1c>)
 800f1a8:	6813      	ldr	r3, [r2, #0]
 800f1aa:	3301      	adds	r3, #1
}
 800f1ac:	2000      	movs	r0, #0
		++xPendedTicks;
 800f1ae:	6013      	str	r3, [r2, #0]
}
 800f1b0:	4770      	bx	lr
 800f1b2:	bf00      	nop
 800f1b4:	20012d64 	.word	0x20012d64
 800f1b8:	20012da0 	.word	0x20012da0

0800f1bc <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800f1bc:	4b1f      	ldr	r3, [pc, #124]	; (800f23c <vTaskSwitchContext+0x80>)
 800f1be:	681b      	ldr	r3, [r3, #0]
 800f1c0:	b11b      	cbz	r3, 800f1ca <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 800f1c2:	4b1f      	ldr	r3, [pc, #124]	; (800f240 <vTaskSwitchContext+0x84>)
 800f1c4:	2201      	movs	r2, #1
 800f1c6:	601a      	str	r2, [r3, #0]
 800f1c8:	4770      	bx	lr
		xYieldPending = pdFALSE;
 800f1ca:	4a1d      	ldr	r2, [pc, #116]	; (800f240 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f1cc:	491d      	ldr	r1, [pc, #116]	; (800f244 <vTaskSwitchContext+0x88>)
{
 800f1ce:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f1d0:	4c1d      	ldr	r4, [pc, #116]	; (800f248 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 800f1d2:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f1d4:	6823      	ldr	r3, [r4, #0]
 800f1d6:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800f1da:	0092      	lsls	r2, r2, #2
 800f1dc:	0098      	lsls	r0, r3, #2
 800f1de:	588a      	ldr	r2, [r1, r2]
 800f1e0:	b942      	cbnz	r2, 800f1f4 <vTaskSwitchContext+0x38>
 800f1e2:	b313      	cbz	r3, 800f22a <vTaskSwitchContext+0x6e>
 800f1e4:	3b01      	subs	r3, #1
 800f1e6:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800f1ea:	0098      	lsls	r0, r3, #2
 800f1ec:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800f1f0:	2a00      	cmp	r2, #0
 800f1f2:	d0f6      	beq.n	800f1e2 <vTaskSwitchContext+0x26>
 800f1f4:	4418      	add	r0, r3
 800f1f6:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 800f1fa:	4662      	mov	r2, ip
 800f1fc:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800f200:	6849      	ldr	r1, [r1, #4]
 800f202:	f8cc 1004 	str.w	r1, [ip, #4]
 800f206:	3208      	adds	r2, #8
 800f208:	4291      	cmp	r1, r2
 800f20a:	bf08      	it	eq
 800f20c:	6849      	ldreq	r1, [r1, #4]
 800f20e:	4a0f      	ldr	r2, [pc, #60]	; (800f24c <vTaskSwitchContext+0x90>)
 800f210:	bf08      	it	eq
 800f212:	f8cc 1004 	streq.w	r1, [ip, #4]
 800f216:	68c9      	ldr	r1, [r1, #12]
 800f218:	6011      	str	r1, [r2, #0]
 800f21a:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f21c:	6813      	ldr	r3, [r2, #0]
 800f21e:	4a0c      	ldr	r2, [pc, #48]	; (800f250 <vTaskSwitchContext+0x94>)
}
 800f220:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f224:	3358      	adds	r3, #88	; 0x58
 800f226:	6013      	str	r3, [r2, #0]
}
 800f228:	4770      	bx	lr
 800f22a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f22e:	f383 8811 	msr	BASEPRI, r3
 800f232:	f3bf 8f6f 	isb	sy
 800f236:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f23a:	e7fe      	b.n	800f23a <vTaskSwitchContext+0x7e>
 800f23c:	20012d64 	.word	0x20012d64
 800f240:	20012de8 	.word	0x20012de8
 800f244:	200128fc 	.word	0x200128fc
 800f248:	20012d6c 	.word	0x20012d6c
 800f24c:	200128f0 	.word	0x200128f0
 800f250:	20000160 	.word	0x20000160

0800f254 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 800f254:	b1d0      	cbz	r0, 800f28c <vTaskPlaceOnEventList+0x38>
{
 800f256:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800f258:	4d1a      	ldr	r5, [pc, #104]	; (800f2c4 <vTaskPlaceOnEventList+0x70>)
 800f25a:	460c      	mov	r4, r1
 800f25c:	6829      	ldr	r1, [r5, #0]
 800f25e:	3118      	adds	r1, #24
 800f260:	f7fe f972 	bl	800d548 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800f264:	4b18      	ldr	r3, [pc, #96]	; (800f2c8 <vTaskPlaceOnEventList+0x74>)
 800f266:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f268:	6828      	ldr	r0, [r5, #0]
 800f26a:	3004      	adds	r0, #4
 800f26c:	f7fe f984 	bl	800d578 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800f270:	1c63      	adds	r3, r4, #1
 800f272:	d014      	beq.n	800f29e <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800f274:	682b      	ldr	r3, [r5, #0]
 800f276:	19a4      	adds	r4, r4, r6
 800f278:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800f27a:	d317      	bcc.n	800f2ac <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f27c:	4b13      	ldr	r3, [pc, #76]	; (800f2cc <vTaskPlaceOnEventList+0x78>)
 800f27e:	6818      	ldr	r0, [r3, #0]
 800f280:	6829      	ldr	r1, [r5, #0]
}
 800f282:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f286:	3104      	adds	r1, #4
 800f288:	f7fe b95e 	b.w	800d548 <vListInsert>
 800f28c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f290:	f383 8811 	msr	BASEPRI, r3
 800f294:	f3bf 8f6f 	isb	sy
 800f298:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 800f29c:	e7fe      	b.n	800f29c <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f29e:	6829      	ldr	r1, [r5, #0]
 800f2a0:	480b      	ldr	r0, [pc, #44]	; (800f2d0 <vTaskPlaceOnEventList+0x7c>)
}
 800f2a2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f2a6:	3104      	adds	r1, #4
 800f2a8:	f7fe b93e 	b.w	800d528 <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f2ac:	4b09      	ldr	r3, [pc, #36]	; (800f2d4 <vTaskPlaceOnEventList+0x80>)
 800f2ae:	6818      	ldr	r0, [r3, #0]
 800f2b0:	6829      	ldr	r1, [r5, #0]
 800f2b2:	3104      	adds	r1, #4
 800f2b4:	f7fe f948 	bl	800d548 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800f2b8:	4b07      	ldr	r3, [pc, #28]	; (800f2d8 <vTaskPlaceOnEventList+0x84>)
 800f2ba:	681a      	ldr	r2, [r3, #0]
 800f2bc:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800f2be:	bf38      	it	cc
 800f2c0:	601c      	strcc	r4, [r3, #0]
}
 800f2c2:	bd70      	pop	{r4, r5, r6, pc}
 800f2c4:	200128f0 	.word	0x200128f0
 800f2c8:	20012de4 	.word	0x20012de4
 800f2cc:	200128f8 	.word	0x200128f8
 800f2d0:	20012dbc 	.word	0x20012dbc
 800f2d4:	200128f4 	.word	0x200128f4
 800f2d8:	20012d98 	.word	0x20012d98

0800f2dc <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 800f2dc:	b330      	cbz	r0, 800f32c <vTaskPlaceOnEventListRestricted+0x50>
	{
 800f2de:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800f2e0:	4e1d      	ldr	r6, [pc, #116]	; (800f358 <vTaskPlaceOnEventListRestricted+0x7c>)
 800f2e2:	460c      	mov	r4, r1
 800f2e4:	6831      	ldr	r1, [r6, #0]
 800f2e6:	4615      	mov	r5, r2
 800f2e8:	3118      	adds	r1, #24
 800f2ea:	f7fe f91d 	bl	800d528 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 800f2ee:	4b1b      	ldr	r3, [pc, #108]	; (800f35c <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 800f2f0:	b985      	cbnz	r5, 800f314 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 800f2f2:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f2f4:	6830      	ldr	r0, [r6, #0]
 800f2f6:	3004      	adds	r0, #4
 800f2f8:	f7fe f93e 	bl	800d578 <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800f2fc:	6833      	ldr	r3, [r6, #0]
 800f2fe:	1964      	adds	r4, r4, r5
 800f300:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800f302:	d31c      	bcc.n	800f33e <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f304:	4b16      	ldr	r3, [pc, #88]	; (800f360 <vTaskPlaceOnEventListRestricted+0x84>)
 800f306:	6818      	ldr	r0, [r3, #0]
 800f308:	6831      	ldr	r1, [r6, #0]
	}
 800f30a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f30e:	3104      	adds	r1, #4
 800f310:	f7fe b91a 	b.w	800d548 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800f314:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f316:	6830      	ldr	r0, [r6, #0]
 800f318:	3004      	adds	r0, #4
 800f31a:	f7fe f92d 	bl	800d578 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f31e:	6831      	ldr	r1, [r6, #0]
 800f320:	4810      	ldr	r0, [pc, #64]	; (800f364 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 800f322:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f326:	3104      	adds	r1, #4
 800f328:	f7fe b8fe 	b.w	800d528 <vListInsertEnd>
 800f32c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f330:	f383 8811 	msr	BASEPRI, r3
 800f334:	f3bf 8f6f 	isb	sy
 800f338:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 800f33c:	e7fe      	b.n	800f33c <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f33e:	4b0a      	ldr	r3, [pc, #40]	; (800f368 <vTaskPlaceOnEventListRestricted+0x8c>)
 800f340:	6818      	ldr	r0, [r3, #0]
 800f342:	6831      	ldr	r1, [r6, #0]
 800f344:	3104      	adds	r1, #4
 800f346:	f7fe f8ff 	bl	800d548 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800f34a:	4b08      	ldr	r3, [pc, #32]	; (800f36c <vTaskPlaceOnEventListRestricted+0x90>)
 800f34c:	681a      	ldr	r2, [r3, #0]
 800f34e:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800f350:	bf38      	it	cc
 800f352:	601c      	strcc	r4, [r3, #0]
	}
 800f354:	bd70      	pop	{r4, r5, r6, pc}
 800f356:	bf00      	nop
 800f358:	200128f0 	.word	0x200128f0
 800f35c:	20012de4 	.word	0x20012de4
 800f360:	200128f8 	.word	0x200128f8
 800f364:	20012dbc 	.word	0x20012dbc
 800f368:	200128f4 	.word	0x200128f4
 800f36c:	20012d98 	.word	0x20012d98

0800f370 <xTaskRemoveFromEventList>:
{
 800f370:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f372:	68c3      	ldr	r3, [r0, #12]
 800f374:	68dc      	ldr	r4, [r3, #12]
{
 800f376:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 800f378:	2c00      	cmp	r4, #0
 800f37a:	d02b      	beq.n	800f3d4 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800f37c:	f104 0518 	add.w	r5, r4, #24
 800f380:	4628      	mov	r0, r5
 800f382:	f7fe f8f9 	bl	800d578 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f386:	4b18      	ldr	r3, [pc, #96]	; (800f3e8 <xTaskRemoveFromEventList+0x78>)
 800f388:	681b      	ldr	r3, [r3, #0]
 800f38a:	b17b      	cbz	r3, 800f3ac <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800f38c:	4817      	ldr	r0, [pc, #92]	; (800f3ec <xTaskRemoveFromEventList+0x7c>)
 800f38e:	4629      	mov	r1, r5
 800f390:	f7fe f8ca 	bl	800d528 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800f394:	4b16      	ldr	r3, [pc, #88]	; (800f3f0 <xTaskRemoveFromEventList+0x80>)
 800f396:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800f398:	681b      	ldr	r3, [r3, #0]
 800f39a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f39c:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800f39e:	bf85      	ittet	hi
 800f3a0:	4b14      	ldrhi	r3, [pc, #80]	; (800f3f4 <xTaskRemoveFromEventList+0x84>)
 800f3a2:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800f3a4:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800f3a6:	6018      	strhi	r0, [r3, #0]
}
 800f3a8:	b003      	add	sp, #12
 800f3aa:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800f3ac:	1d21      	adds	r1, r4, #4
 800f3ae:	4608      	mov	r0, r1
 800f3b0:	9101      	str	r1, [sp, #4]
 800f3b2:	f7fe f8e1 	bl	800d578 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800f3b6:	4a10      	ldr	r2, [pc, #64]	; (800f3f8 <xTaskRemoveFromEventList+0x88>)
 800f3b8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f3ba:	6810      	ldr	r0, [r2, #0]
 800f3bc:	9901      	ldr	r1, [sp, #4]
 800f3be:	4283      	cmp	r3, r0
 800f3c0:	480e      	ldr	r0, [pc, #56]	; (800f3fc <xTaskRemoveFromEventList+0x8c>)
 800f3c2:	bf88      	it	hi
 800f3c4:	6013      	strhi	r3, [r2, #0]
 800f3c6:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f3ca:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800f3ce:	f7fe f8ab 	bl	800d528 <vListInsertEnd>
 800f3d2:	e7df      	b.n	800f394 <xTaskRemoveFromEventList+0x24>
 800f3d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f3d8:	f383 8811 	msr	BASEPRI, r3
 800f3dc:	f3bf 8f6f 	isb	sy
 800f3e0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 800f3e4:	e7fe      	b.n	800f3e4 <xTaskRemoveFromEventList+0x74>
 800f3e6:	bf00      	nop
 800f3e8:	20012d64 	.word	0x20012d64
 800f3ec:	20012da4 	.word	0x20012da4
 800f3f0:	200128f0 	.word	0x200128f0
 800f3f4:	20012de8 	.word	0x20012de8
 800f3f8:	20012d6c 	.word	0x20012d6c
 800f3fc:	200128fc 	.word	0x200128fc

0800f400 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800f400:	4a03      	ldr	r2, [pc, #12]	; (800f410 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f402:	4b04      	ldr	r3, [pc, #16]	; (800f414 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800f404:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f406:	681b      	ldr	r3, [r3, #0]
 800f408:	e9c0 2300 	strd	r2, r3, [r0]
}
 800f40c:	4770      	bx	lr
 800f40e:	bf00      	nop
 800f410:	20012d9c 	.word	0x20012d9c
 800f414:	20012de4 	.word	0x20012de4

0800f418 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 800f418:	b328      	cbz	r0, 800f466 <xTaskCheckForTimeOut+0x4e>
{
 800f41a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f41c:	460d      	mov	r5, r1
 800f41e:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 800f420:	b1c1      	cbz	r1, 800f454 <xTaskCheckForTimeOut+0x3c>
 800f422:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800f424:	f7fe f926 	bl	800d674 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 800f428:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 800f42a:	4a1d      	ldr	r2, [pc, #116]	; (800f4a0 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 800f42c:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 800f42e:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800f430:	d030      	beq.n	800f494 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800f432:	f8df c070 	ldr.w	ip, [pc, #112]	; 800f4a4 <xTaskCheckForTimeOut+0x8c>
 800f436:	e9d4 6000 	ldrd	r6, r0, [r4]
 800f43a:	f8dc 7000 	ldr.w	r7, [ip]
 800f43e:	42be      	cmp	r6, r7
 800f440:	d01a      	beq.n	800f478 <xTaskCheckForTimeOut+0x60>
 800f442:	4288      	cmp	r0, r1
 800f444:	d818      	bhi.n	800f478 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 800f446:	2001      	movs	r0, #1
 800f448:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800f44a:	f7fe f935 	bl	800d6b8 <vPortExitCritical>
}
 800f44e:	9801      	ldr	r0, [sp, #4]
 800f450:	b003      	add	sp, #12
 800f452:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f454:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f458:	f383 8811 	msr	BASEPRI, r3
 800f45c:	f3bf 8f6f 	isb	sy
 800f460:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 800f464:	e7fe      	b.n	800f464 <xTaskCheckForTimeOut+0x4c>
 800f466:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f46a:	f383 8811 	msr	BASEPRI, r3
 800f46e:	f3bf 8f6f 	isb	sy
 800f472:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 800f476:	e7fe      	b.n	800f476 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800f478:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800f47c:	4573      	cmp	r3, lr
 800f47e:	d90b      	bls.n	800f498 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 800f480:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800f482:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f486:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 800f488:	4403      	add	r3, r0
 800f48a:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 800f48c:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f48e:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 800f492:	e7d9      	b.n	800f448 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 800f494:	2000      	movs	r0, #0
 800f496:	e7d7      	b.n	800f448 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 800f498:	2300      	movs	r3, #0
 800f49a:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 800f49c:	2001      	movs	r0, #1
 800f49e:	e7d3      	b.n	800f448 <xTaskCheckForTimeOut+0x30>
 800f4a0:	20012de4 	.word	0x20012de4
 800f4a4:	20012d9c 	.word	0x20012d9c

0800f4a8 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800f4a8:	4b01      	ldr	r3, [pc, #4]	; (800f4b0 <vTaskMissedYield+0x8>)
 800f4aa:	2201      	movs	r2, #1
 800f4ac:	601a      	str	r2, [r3, #0]
}
 800f4ae:	4770      	bx	lr
 800f4b0:	20012de8 	.word	0x20012de8

0800f4b4 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800f4b4:	4b05      	ldr	r3, [pc, #20]	; (800f4cc <xTaskGetSchedulerState+0x18>)
 800f4b6:	681b      	ldr	r3, [r3, #0]
 800f4b8:	b133      	cbz	r3, 800f4c8 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f4ba:	4b05      	ldr	r3, [pc, #20]	; (800f4d0 <xTaskGetSchedulerState+0x1c>)
 800f4bc:	6818      	ldr	r0, [r3, #0]
 800f4be:	fab0 f080 	clz	r0, r0
 800f4c2:	0940      	lsrs	r0, r0, #5
 800f4c4:	0040      	lsls	r0, r0, #1
 800f4c6:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800f4c8:	2001      	movs	r0, #1
	}
 800f4ca:	4770      	bx	lr
 800f4cc:	20012db8 	.word	0x20012db8
 800f4d0:	20012d64 	.word	0x20012d64

0800f4d4 <xTaskPriorityInherit>:
	{
 800f4d4:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800f4d6:	4604      	mov	r4, r0
	{
 800f4d8:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 800f4da:	b1c8      	cbz	r0, 800f510 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800f4dc:	4d1d      	ldr	r5, [pc, #116]	; (800f554 <xTaskPriorityInherit+0x80>)
 800f4de:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800f4e0:	682a      	ldr	r2, [r5, #0]
 800f4e2:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800f4e4:	4293      	cmp	r3, r2
 800f4e6:	d215      	bcs.n	800f514 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800f4e8:	6982      	ldr	r2, [r0, #24]
 800f4ea:	2a00      	cmp	r2, #0
 800f4ec:	db04      	blt.n	800f4f8 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f4ee:	682a      	ldr	r2, [r5, #0]
 800f4f0:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800f4f2:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 800f4f6:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800f4f8:	4e17      	ldr	r6, [pc, #92]	; (800f558 <xTaskPriorityInherit+0x84>)
 800f4fa:	6962      	ldr	r2, [r4, #20]
 800f4fc:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f500:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800f504:	429a      	cmp	r2, r3
 800f506:	d00e      	beq.n	800f526 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f508:	682b      	ldr	r3, [r5, #0]
 800f50a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f50c:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 800f50e:	2001      	movs	r0, #1
	}
 800f510:	b002      	add	sp, #8
 800f512:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800f514:	682b      	ldr	r3, [r5, #0]
 800f516:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800f518:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f51a:	4298      	cmp	r0, r3
 800f51c:	bf2c      	ite	cs
 800f51e:	2000      	movcs	r0, #0
 800f520:	2001      	movcc	r0, #1
	}
 800f522:	b002      	add	sp, #8
 800f524:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f526:	1d21      	adds	r1, r4, #4
 800f528:	4608      	mov	r0, r1
 800f52a:	9101      	str	r1, [sp, #4]
 800f52c:	f7fe f824 	bl	800d578 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f530:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800f532:	4b0a      	ldr	r3, [pc, #40]	; (800f55c <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f534:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800f536:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f538:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800f53a:	4290      	cmp	r0, r2
 800f53c:	bf88      	it	hi
 800f53e:	6018      	strhi	r0, [r3, #0]
 800f540:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800f544:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 800f548:	9901      	ldr	r1, [sp, #4]
 800f54a:	f7fd ffed 	bl	800d528 <vListInsertEnd>
				xReturn = pdTRUE;
 800f54e:	2001      	movs	r0, #1
 800f550:	e7de      	b.n	800f510 <xTaskPriorityInherit+0x3c>
 800f552:	bf00      	nop
 800f554:	200128f0 	.word	0x200128f0
 800f558:	200128fc 	.word	0x200128fc
 800f55c:	20012d6c 	.word	0x20012d6c

0800f560 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 800f560:	b318      	cbz	r0, 800f5aa <xTaskPriorityDisinherit+0x4a>
	{
 800f562:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 800f564:	4b1e      	ldr	r3, [pc, #120]	; (800f5e0 <xTaskPriorityDisinherit+0x80>)
 800f566:	681c      	ldr	r4, [r3, #0]
 800f568:	4284      	cmp	r4, r0
	{
 800f56a:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 800f56c:	d008      	beq.n	800f580 <xTaskPriorityDisinherit+0x20>
 800f56e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f572:	f383 8811 	msr	BASEPRI, r3
 800f576:	f3bf 8f6f 	isb	sy
 800f57a:	f3bf 8f4f 	dsb	sy
 800f57e:	e7fe      	b.n	800f57e <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 800f580:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800f582:	b14b      	cbz	r3, 800f598 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800f584:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800f586:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800f588:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800f58a:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800f58c:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800f58e:	d000      	beq.n	800f592 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800f590:	b16b      	cbz	r3, 800f5ae <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 800f592:	2000      	movs	r0, #0
	}
 800f594:	b002      	add	sp, #8
 800f596:	bd10      	pop	{r4, pc}
 800f598:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f59c:	f383 8811 	msr	BASEPRI, r3
 800f5a0:	f3bf 8f6f 	isb	sy
 800f5a4:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800f5a8:	e7fe      	b.n	800f5a8 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 800f5aa:	2000      	movs	r0, #0
	}
 800f5ac:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f5ae:	1d21      	adds	r1, r4, #4
 800f5b0:	4608      	mov	r0, r1
 800f5b2:	9101      	str	r1, [sp, #4]
 800f5b4:	f7fd ffe0 	bl	800d578 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800f5b8:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800f5ba:	4a0a      	ldr	r2, [pc, #40]	; (800f5e4 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800f5bc:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f5be:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 800f5c2:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800f5c4:	6810      	ldr	r0, [r2, #0]
 800f5c6:	9901      	ldr	r1, [sp, #4]
 800f5c8:	4283      	cmp	r3, r0
 800f5ca:	4807      	ldr	r0, [pc, #28]	; (800f5e8 <xTaskPriorityDisinherit+0x88>)
 800f5cc:	bf88      	it	hi
 800f5ce:	6013      	strhi	r3, [r2, #0]
 800f5d0:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f5d4:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800f5d8:	f7fd ffa6 	bl	800d528 <vListInsertEnd>
					xReturn = pdTRUE;
 800f5dc:	2001      	movs	r0, #1
		return xReturn;
 800f5de:	e7d9      	b.n	800f594 <xTaskPriorityDisinherit+0x34>
 800f5e0:	200128f0 	.word	0x200128f0
 800f5e4:	20012d6c 	.word	0x20012d6c
 800f5e8:	200128fc 	.word	0x200128fc

0800f5ec <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 800f5ec:	2800      	cmp	r0, #0
 800f5ee:	d041      	beq.n	800f674 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 800f5f0:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 800f5f2:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 800f5f4:	b083      	sub	sp, #12
 800f5f6:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 800f5f8:	b153      	cbz	r3, 800f610 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800f5fa:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 800f5fc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800f5fe:	4281      	cmp	r1, r0
 800f600:	bf38      	it	cc
 800f602:	4601      	movcc	r1, r0
 800f604:	428a      	cmp	r2, r1
 800f606:	d001      	beq.n	800f60c <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800f608:	2b01      	cmp	r3, #1
 800f60a:	d00a      	beq.n	800f622 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 800f60c:	b003      	add	sp, #12
 800f60e:	bd30      	pop	{r4, r5, pc}
 800f610:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f614:	f383 8811 	msr	BASEPRI, r3
 800f618:	f3bf 8f6f 	isb	sy
 800f61c:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800f620:	e7fe      	b.n	800f620 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 800f622:	4b19      	ldr	r3, [pc, #100]	; (800f688 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 800f624:	681b      	ldr	r3, [r3, #0]
 800f626:	42a3      	cmp	r3, r4
 800f628:	d025      	beq.n	800f676 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800f62a:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 800f62c:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800f62e:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f630:	bfa8      	it	ge
 800f632:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800f636:	4d15      	ldr	r5, [pc, #84]	; (800f68c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f638:	bfa8      	it	ge
 800f63a:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800f63c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800f640:	6961      	ldr	r1, [r4, #20]
 800f642:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 800f646:	4299      	cmp	r1, r3
 800f648:	d1e0      	bne.n	800f60c <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f64a:	1d21      	adds	r1, r4, #4
 800f64c:	4608      	mov	r0, r1
 800f64e:	9101      	str	r1, [sp, #4]
 800f650:	f7fd ff92 	bl	800d578 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800f654:	4b0e      	ldr	r3, [pc, #56]	; (800f690 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 800f656:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800f658:	681a      	ldr	r2, [r3, #0]
 800f65a:	9901      	ldr	r1, [sp, #4]
 800f65c:	4290      	cmp	r0, r2
 800f65e:	bf88      	it	hi
 800f660:	6018      	strhi	r0, [r3, #0]
 800f662:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800f666:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 800f66a:	b003      	add	sp, #12
 800f66c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800f670:	f7fd bf5a 	b.w	800d528 <vListInsertEnd>
 800f674:	4770      	bx	lr
 800f676:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f67a:	f383 8811 	msr	BASEPRI, r3
 800f67e:	f3bf 8f6f 	isb	sy
 800f682:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 800f686:	e7fe      	b.n	800f686 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 800f688:	200128f0 	.word	0x200128f0
 800f68c:	200128fc 	.word	0x200128fc
 800f690:	20012d6c 	.word	0x20012d6c

0800f694 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800f694:	4b04      	ldr	r3, [pc, #16]	; (800f6a8 <pvTaskIncrementMutexHeldCount+0x14>)
 800f696:	681a      	ldr	r2, [r3, #0]
 800f698:	b11a      	cbz	r2, 800f6a2 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800f69a:	6819      	ldr	r1, [r3, #0]
 800f69c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800f69e:	3201      	adds	r2, #1
 800f6a0:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800f6a2:	6818      	ldr	r0, [r3, #0]
	}
 800f6a4:	4770      	bx	lr
 800f6a6:	bf00      	nop
 800f6a8:	200128f0 	.word	0x200128f0

0800f6ac <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 800f6ac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f6b0:	4e22      	ldr	r6, [pc, #136]	; (800f73c <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 800f6b2:	f8df 9090 	ldr.w	r9, [pc, #144]	; 800f744 <prvSwitchTimerLists+0x98>
{
 800f6b6:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 800f6b8:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800f6bc:	e00d      	b.n	800f6da <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800f6be:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f6c0:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800f6c2:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f6c4:	1d25      	adds	r5, r4, #4
 800f6c6:	4628      	mov	r0, r5
 800f6c8:	f7fd ff56 	bl	800d578 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f6cc:	6a23      	ldr	r3, [r4, #32]
 800f6ce:	4620      	mov	r0, r4
 800f6d0:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f6d2:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800f6d6:	075b      	lsls	r3, r3, #29
 800f6d8:	d40a      	bmi.n	800f6f0 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800f6da:	6833      	ldr	r3, [r6, #0]
 800f6dc:	681a      	ldr	r2, [r3, #0]
 800f6de:	2a00      	cmp	r2, #0
 800f6e0:	d1ed      	bne.n	800f6be <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 800f6e2:	4a17      	ldr	r2, [pc, #92]	; (800f740 <prvSwitchTimerLists+0x94>)
 800f6e4:	6811      	ldr	r1, [r2, #0]
 800f6e6:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 800f6e8:	6013      	str	r3, [r2, #0]
}
 800f6ea:	b005      	add	sp, #20
 800f6ec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800f6f0:	69a3      	ldr	r3, [r4, #24]
 800f6f2:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 800f6f4:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f6f6:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 800f6f8:	d205      	bcs.n	800f706 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f6fa:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800f6fc:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f6fe:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f700:	f7fd ff22 	bl	800d548 <vListInsert>
 800f704:	e7e9      	b.n	800f6da <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 800f706:	f8d9 3000 	ldr.w	r3, [r9]
 800f70a:	b16b      	cbz	r3, 800f728 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800f70c:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800f710:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f712:	f7ff fecf 	bl	800f4b4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f716:	2300      	movs	r3, #0
 800f718:	f8d9 0000 	ldr.w	r0, [r9]
 800f71c:	461a      	mov	r2, r3
 800f71e:	4669      	mov	r1, sp
 800f720:	f7fe fa9c 	bl	800dc5c <xQueueGenericSend>
				configASSERT( xResult );
 800f724:	2800      	cmp	r0, #0
 800f726:	d1d8      	bne.n	800f6da <prvSwitchTimerLists+0x2e>
 800f728:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f72c:	f383 8811 	msr	BASEPRI, r3
 800f730:	f3bf 8f6f 	isb	sy
 800f734:	f3bf 8f4f 	dsb	sy
 800f738:	e7fe      	b.n	800f738 <prvSwitchTimerLists+0x8c>
 800f73a:	bf00      	nop
 800f73c:	20012dec 	.word	0x20012dec
 800f740:	20012df0 	.word	0x20012df0
 800f744:	20012f10 	.word	0x20012f10

0800f748 <prvTimerTask>:
{
 800f748:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f74c:	4e9b      	ldr	r6, [pc, #620]	; (800f9bc <prvTimerTask+0x274>)
 800f74e:	4d9c      	ldr	r5, [pc, #624]	; (800f9c0 <prvTimerTask+0x278>)
 800f750:	4c9c      	ldr	r4, [pc, #624]	; (800f9c4 <prvTimerTask+0x27c>)
 800f752:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 800f754:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 800f758:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800f75c:	6833      	ldr	r3, [r6, #0]
 800f75e:	681f      	ldr	r7, [r3, #0]
 800f760:	2f00      	cmp	r7, #0
 800f762:	f000 80a8 	beq.w	800f8b6 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800f766:	68db      	ldr	r3, [r3, #12]
 800f768:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 800f76a:	f7ff fcf9 	bl	800f160 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800f76e:	f7ff fd0f 	bl	800f190 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800f772:	682a      	ldr	r2, [r5, #0]
 800f774:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 800f776:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800f778:	f0c0 80ae 	bcc.w	800f8d8 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800f77c:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 800f77e:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800f780:	f240 80b4 	bls.w	800f8ec <prvTimerTask+0x1a4>
 800f784:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800f786:	6820      	ldr	r0, [r4, #0]
 800f788:	eba7 010a 	sub.w	r1, r7, sl
 800f78c:	f7ff f89a 	bl	800e8c4 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800f790:	f7ff fcee 	bl	800f170 <xTaskResumeAll>
 800f794:	b928      	cbnz	r0, 800f7a2 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 800f796:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 800f79a:	f3bf 8f4f 	dsb	sy
 800f79e:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800f7a2:	6820      	ldr	r0, [r4, #0]
 800f7a4:	2200      	movs	r2, #0
 800f7a6:	a902      	add	r1, sp, #8
 800f7a8:	f7fe fc94 	bl	800e0d4 <xQueueReceive>
 800f7ac:	2800      	cmp	r0, #0
 800f7ae:	d0d5      	beq.n	800f75c <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800f7b0:	9b02      	ldr	r3, [sp, #8]
 800f7b2:	2b00      	cmp	r3, #0
 800f7b4:	db76      	blt.n	800f8a4 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800f7b6:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800f7b8:	697b      	ldr	r3, [r7, #20]
 800f7ba:	b113      	cbz	r3, 800f7c2 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f7bc:	1d38      	adds	r0, r7, #4
 800f7be:	f7fd fedb 	bl	800d578 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 800f7c2:	f7ff fce5 	bl	800f190 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800f7c6:	682b      	ldr	r3, [r5, #0]
 800f7c8:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 800f7ca:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800f7cc:	f0c0 808b 	bcc.w	800f8e6 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 800f7d0:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 800f7d2:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 800f7d6:	2b09      	cmp	r3, #9
 800f7d8:	d8e3      	bhi.n	800f7a2 <prvTimerTask+0x5a>
 800f7da:	e8df f003 	tbb	[pc, r3]
 800f7de:	0505      	.short	0x0505
 800f7e0:	5a3d5305 	.word	0x5a3d5305
 800f7e4:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f7e8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800f7ec:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f7ee:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f7f0:	f043 0301 	orr.w	r3, r3, #1
 800f7f4:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800f7f8:	9b03      	ldr	r3, [sp, #12]
 800f7fa:	1899      	adds	r1, r3, r2
 800f7fc:	bf2c      	ite	cs
 800f7fe:	2001      	movcs	r0, #1
 800f800:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 800f802:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f804:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 800f806:	f200 808c 	bhi.w	800f922 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f80a:	ebaa 0303 	sub.w	r3, sl, r3
 800f80e:	429a      	cmp	r2, r3
 800f810:	d832      	bhi.n	800f878 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f812:	6a3b      	ldr	r3, [r7, #32]
 800f814:	4638      	mov	r0, r7
 800f816:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f818:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f81c:	075b      	lsls	r3, r3, #29
 800f81e:	d5c0      	bpl.n	800f7a2 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 800f820:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800f822:	9903      	ldr	r1, [sp, #12]
 800f824:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 800f826:	b172      	cbz	r2, 800f846 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800f828:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800f82a:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 800f82e:	2300      	movs	r3, #0
 800f830:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f832:	f7ff fe3f 	bl	800f4b4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f836:	2300      	movs	r3, #0
 800f838:	6820      	ldr	r0, [r4, #0]
 800f83a:	461a      	mov	r2, r3
 800f83c:	a906      	add	r1, sp, #24
 800f83e:	f7fe fa0d 	bl	800dc5c <xQueueGenericSend>
							configASSERT( xResult );
 800f842:	2800      	cmp	r0, #0
 800f844:	d1ad      	bne.n	800f7a2 <prvTimerTask+0x5a>
 800f846:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f84a:	f383 8811 	msr	BASEPRI, r3
 800f84e:	f3bf 8f6f 	isb	sy
 800f852:	f3bf 8f4f 	dsb	sy
 800f856:	e7fe      	b.n	800f856 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f858:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f85c:	f043 0301 	orr.w	r3, r3, #1
 800f860:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800f864:	9b03      	ldr	r3, [sp, #12]
 800f866:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800f868:	2b00      	cmp	r3, #0
 800f86a:	f000 809d 	beq.w	800f9a8 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800f86e:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 800f870:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f872:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f874:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 800f876:	d85e      	bhi.n	800f936 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800f878:	4b53      	ldr	r3, [pc, #332]	; (800f9c8 <prvTimerTask+0x280>)
 800f87a:	1d39      	adds	r1, r7, #4
 800f87c:	6818      	ldr	r0, [r3, #0]
 800f87e:	f7fd fe63 	bl	800d548 <vListInsert>
	return xProcessTimerNow;
 800f882:	e78e      	b.n	800f7a2 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f884:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f888:	f023 0301 	bic.w	r3, r3, #1
 800f88c:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 800f890:	e787      	b.n	800f7a2 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800f892:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f896:	079a      	lsls	r2, r3, #30
 800f898:	d552      	bpl.n	800f940 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f89a:	f023 0301 	bic.w	r3, r3, #1
 800f89e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 800f8a2:	e77e      	b.n	800f7a2 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800f8a4:	9b03      	ldr	r3, [sp, #12]
 800f8a6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800f8aa:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800f8ac:	9b02      	ldr	r3, [sp, #8]
 800f8ae:	2b00      	cmp	r3, #0
 800f8b0:	f6ff af77 	blt.w	800f7a2 <prvTimerTask+0x5a>
 800f8b4:	e77f      	b.n	800f7b6 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 800f8b6:	f7ff fc53 	bl	800f160 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800f8ba:	f7ff fc69 	bl	800f190 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800f8be:	682a      	ldr	r2, [r5, #0]
 800f8c0:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 800f8c2:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800f8c4:	d808      	bhi.n	800f8d8 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800f8c6:	4b40      	ldr	r3, [pc, #256]	; (800f9c8 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 800f8c8:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800f8cc:	681a      	ldr	r2, [r3, #0]
 800f8ce:	6812      	ldr	r2, [r2, #0]
 800f8d0:	fab2 f282 	clz	r2, r2
 800f8d4:	0952      	lsrs	r2, r2, #5
 800f8d6:	e756      	b.n	800f786 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 800f8d8:	f7ff fee8 	bl	800f6ac <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 800f8dc:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 800f8e0:	f7ff fc46 	bl	800f170 <xTaskResumeAll>
 800f8e4:	e75d      	b.n	800f7a2 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 800f8e6:	f7ff fee1 	bl	800f6ac <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 800f8ea:	e771      	b.n	800f7d0 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 800f8ec:	f7ff fc40 	bl	800f170 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f8f0:	6832      	ldr	r2, [r6, #0]
 800f8f2:	68d2      	ldr	r2, [r2, #12]
 800f8f4:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f8f8:	f10b 0104 	add.w	r1, fp, #4
 800f8fc:	4608      	mov	r0, r1
 800f8fe:	9101      	str	r1, [sp, #4]
 800f900:	f7fd fe3a 	bl	800d578 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f904:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 800f908:	9901      	ldr	r1, [sp, #4]
 800f90a:	f010 0f04 	tst.w	r0, #4
 800f90e:	d11b      	bne.n	800f948 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f910:	f020 0001 	bic.w	r0, r0, #1
 800f914:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f918:	f8db 3020 	ldr.w	r3, [fp, #32]
 800f91c:	4658      	mov	r0, fp
 800f91e:	4798      	blx	r3
}
 800f920:	e73f      	b.n	800f7a2 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800f922:	4553      	cmp	r3, sl
 800f924:	d902      	bls.n	800f92c <prvTimerTask+0x1e4>
 800f926:	2800      	cmp	r0, #0
 800f928:	f43f af73 	beq.w	800f812 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f92c:	6830      	ldr	r0, [r6, #0]
 800f92e:	1d39      	adds	r1, r7, #4
 800f930:	f7fd fe0a 	bl	800d548 <vListInsert>
	return xProcessTimerNow;
 800f934:	e735      	b.n	800f7a2 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f936:	6830      	ldr	r0, [r6, #0]
 800f938:	1d39      	adds	r1, r7, #4
 800f93a:	f7fd fe05 	bl	800d548 <vListInsert>
 800f93e:	e730      	b.n	800f7a2 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 800f940:	4638      	mov	r0, r7
 800f942:	f7fd fd7d 	bl	800d440 <vPortFree>
 800f946:	e72c      	b.n	800f7a2 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800f948:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f94c:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800f950:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 800f952:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f954:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 800f958:	d903      	bls.n	800f962 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f95a:	6830      	ldr	r0, [r6, #0]
 800f95c:	f7fd fdf4 	bl	800d548 <vListInsert>
	return xProcessTimerNow;
 800f960:	e7da      	b.n	800f918 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f962:	ebaa 0307 	sub.w	r3, sl, r7
 800f966:	429a      	cmp	r2, r3
 800f968:	d819      	bhi.n	800f99e <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 800f96a:	6823      	ldr	r3, [r4, #0]
 800f96c:	b173      	cbz	r3, 800f98c <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 800f96e:	2300      	movs	r3, #0
 800f970:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800f972:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800f974:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f978:	f7ff fd9c 	bl	800f4b4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f97c:	2300      	movs	r3, #0
 800f97e:	6820      	ldr	r0, [r4, #0]
 800f980:	461a      	mov	r2, r3
 800f982:	a906      	add	r1, sp, #24
 800f984:	f7fe f96a 	bl	800dc5c <xQueueGenericSend>
			configASSERT( xResult );
 800f988:	2800      	cmp	r0, #0
 800f98a:	d1c5      	bne.n	800f918 <prvTimerTask+0x1d0>
 800f98c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f990:	f383 8811 	msr	BASEPRI, r3
 800f994:	f3bf 8f6f 	isb	sy
 800f998:	f3bf 8f4f 	dsb	sy
 800f99c:	e7fe      	b.n	800f99c <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800f99e:	4b0a      	ldr	r3, [pc, #40]	; (800f9c8 <prvTimerTask+0x280>)
 800f9a0:	6818      	ldr	r0, [r3, #0]
 800f9a2:	f7fd fdd1 	bl	800d548 <vListInsert>
	return xProcessTimerNow;
 800f9a6:	e7b7      	b.n	800f918 <prvTimerTask+0x1d0>
 800f9a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f9ac:	f383 8811 	msr	BASEPRI, r3
 800f9b0:	f3bf 8f6f 	isb	sy
 800f9b4:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800f9b8:	e7fe      	b.n	800f9b8 <prvTimerTask+0x270>
 800f9ba:	bf00      	nop
 800f9bc:	20012dec 	.word	0x20012dec
 800f9c0:	20012ebc 	.word	0x20012ebc
 800f9c4:	20012f10 	.word	0x20012f10
 800f9c8:	20012df0 	.word	0x20012df0

0800f9cc <xTimerCreateTimerTask>:
{
 800f9cc:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800f9ce:	4c23      	ldr	r4, [pc, #140]	; (800fa5c <xTimerCreateTimerTask+0x90>)
{
 800f9d0:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 800f9d2:	f7fd fe4f 	bl	800d674 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800f9d6:	6825      	ldr	r5, [r4, #0]
 800f9d8:	b335      	cbz	r5, 800fa28 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 800f9da:	f7fd fe6d 	bl	800d6b8 <vPortExitCritical>
	if( xTimerQueue != NULL )
 800f9de:	6823      	ldr	r3, [r4, #0]
 800f9e0:	b1cb      	cbz	r3, 800fa16 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800f9e2:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800f9e4:	aa07      	add	r2, sp, #28
 800f9e6:	a906      	add	r1, sp, #24
 800f9e8:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800f9ea:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800f9ee:	f7fd fc5b 	bl	800d2a8 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800f9f2:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 800f9f6:	2302      	movs	r3, #2
 800f9f8:	e9cd 1001 	strd	r1, r0, [sp, #4]
 800f9fc:	9300      	str	r3, [sp, #0]
 800f9fe:	9a07      	ldr	r2, [sp, #28]
 800fa00:	4917      	ldr	r1, [pc, #92]	; (800fa60 <xTimerCreateTimerTask+0x94>)
 800fa02:	4818      	ldr	r0, [pc, #96]	; (800fa64 <xTimerCreateTimerTask+0x98>)
 800fa04:	4623      	mov	r3, r4
 800fa06:	f7ff fa6d 	bl	800eee4 <xTaskCreateStatic>
 800fa0a:	4b17      	ldr	r3, [pc, #92]	; (800fa68 <xTimerCreateTimerTask+0x9c>)
 800fa0c:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800fa0e:	b110      	cbz	r0, 800fa16 <xTimerCreateTimerTask+0x4a>
}
 800fa10:	2001      	movs	r0, #1
 800fa12:	b009      	add	sp, #36	; 0x24
 800fa14:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fa16:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fa1a:	f383 8811 	msr	BASEPRI, r3
 800fa1e:	f3bf 8f6f 	isb	sy
 800fa22:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800fa26:	e7fe      	b.n	800fa26 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 800fa28:	4f10      	ldr	r7, [pc, #64]	; (800fa6c <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 800fa2a:	4e11      	ldr	r6, [pc, #68]	; (800fa70 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 800fa2c:	4638      	mov	r0, r7
 800fa2e:	f7fd fd6b 	bl	800d508 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800fa32:	4630      	mov	r0, r6
 800fa34:	f7fd fd68 	bl	800d508 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800fa38:	4a0e      	ldr	r2, [pc, #56]	; (800fa74 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800fa3a:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 800fa3c:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800fa3e:	4a0e      	ldr	r2, [pc, #56]	; (800fa78 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800fa40:	4b0e      	ldr	r3, [pc, #56]	; (800fa7c <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 800fa42:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800fa44:	2110      	movs	r1, #16
 800fa46:	4a0e      	ldr	r2, [pc, #56]	; (800fa80 <xTimerCreateTimerTask+0xb4>)
 800fa48:	200a      	movs	r0, #10
 800fa4a:	f7fd ffb1 	bl	800d9b0 <xQueueGenericCreateStatic>
 800fa4e:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 800fa50:	2800      	cmp	r0, #0
 800fa52:	d0c2      	beq.n	800f9da <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800fa54:	490b      	ldr	r1, [pc, #44]	; (800fa84 <xTimerCreateTimerTask+0xb8>)
 800fa56:	f7fe ff0d 	bl	800e874 <vQueueAddToRegistry>
 800fa5a:	e7be      	b.n	800f9da <xTimerCreateTimerTask+0xe>
 800fa5c:	20012f10 	.word	0x20012f10
 800fa60:	0802e12c 	.word	0x0802e12c
 800fa64:	0800f749 	.word	0x0800f749
 800fa68:	20012f14 	.word	0x20012f14
 800fa6c:	20012e94 	.word	0x20012e94
 800fa70:	20012ea8 	.word	0x20012ea8
 800fa74:	20012dec 	.word	0x20012dec
 800fa78:	20012df0 	.word	0x20012df0
 800fa7c:	20012ec0 	.word	0x20012ec0
 800fa80:	20012df4 	.word	0x20012df4
 800fa84:	0802e124 	.word	0x0802e124

0800fa88 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800fa88:	8880      	ldrh	r0, [r0, #4]
 800fa8a:	4770      	bx	lr

0800fa8c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800fa8c:	b570      	push	{r4, r5, r6, lr}
 800fa8e:	6803      	ldr	r3, [r0, #0]
 800fa90:	4605      	mov	r5, r0
 800fa92:	460c      	mov	r4, r1
 800fa94:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fa96:	2100      	movs	r1, #0
 800fa98:	4798      	blx	r3
 800fa9a:	682b      	ldr	r3, [r5, #0]
 800fa9c:	4606      	mov	r6, r0
 800fa9e:	6a1b      	ldr	r3, [r3, #32]
 800faa0:	4628      	mov	r0, r5
 800faa2:	4798      	blx	r3
 800faa4:	1ba4      	subs	r4, r4, r6
 800faa6:	b2a4      	uxth	r4, r4
 800faa8:	fbb4 f0f0 	udiv	r0, r4, r0
 800faac:	bd70      	pop	{r4, r5, r6, pc}

0800faae <_ZN8touchgfx17AbstractPartition5clearEv>:
 800faae:	2300      	movs	r3, #0
 800fab0:	8083      	strh	r3, [r0, #4]
 800fab2:	4770      	bx	lr

0800fab4 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800fab4:	b510      	push	{r4, lr}
 800fab6:	6803      	ldr	r3, [r0, #0]
 800fab8:	8881      	ldrh	r1, [r0, #4]
 800faba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fabc:	4604      	mov	r4, r0
 800fabe:	4798      	blx	r3
 800fac0:	88a3      	ldrh	r3, [r4, #4]
 800fac2:	3301      	adds	r3, #1
 800fac4:	80a3      	strh	r3, [r4, #4]
 800fac6:	bd10      	pop	{r4, pc}

0800fac8 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800fac8:	6803      	ldr	r3, [r0, #0]
 800faca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800facc:	4718      	bx	r3

0800face <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800face:	4770      	bx	lr

0800fad0 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800fad0:	4a02      	ldr	r2, [pc, #8]	; (800fadc <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800fad2:	6002      	str	r2, [r0, #0]
 800fad4:	2200      	movs	r2, #0
 800fad6:	8082      	strh	r2, [r0, #4]
 800fad8:	4770      	bx	lr
 800fada:	bf00      	nop
 800fadc:	0802e13c 	.word	0x0802e13c

0800fae0 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 800fae0:	b510      	push	{r4, lr}
 800fae2:	6803      	ldr	r3, [r0, #0]
 800fae4:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800fae8:	4604      	mov	r4, r0
 800faea:	4798      	blx	r3
 800faec:	b110      	cbz	r0, 800faf4 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 800faee:	4620      	mov	r0, r4
 800faf0:	f7f1 fa96 	bl	8001020 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800faf4:	bd10      	pop	{r4, pc}

0800faf6 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 800faf6:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 800fafa:	4770      	bx	lr

0800fafc <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 800fafc:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 800fb00:	4770      	bx	lr

0800fb02 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 800fb02:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 800fb06:	4770      	bx	lr

0800fb08 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 800fb08:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 800fb0c:	4770      	bx	lr

0800fb0e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 800fb0e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fb10:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 800fb14:	461e      	mov	r6, r3
 800fb16:	6803      	ldr	r3, [r0, #0]
 800fb18:	460f      	mov	r7, r1
 800fb1a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800fb1e:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 800fb22:	4604      	mov	r4, r0
 800fb24:	4615      	mov	r5, r2
 800fb26:	4798      	blx	r3
 800fb28:	b93e      	cbnz	r6, 800fb3a <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 800fb2a:	1bed      	subs	r5, r5, r7
 800fb2c:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 800fb30:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800fb34:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800fb38:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fb3a:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 800fb3e:	e7f7      	b.n	800fb30 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

0800fb40 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 800fb40:	b510      	push	{r4, lr}
 800fb42:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800fb46:	600c      	str	r4, [r1, #0]
 800fb48:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800fb4c:	6011      	str	r1, [r2, #0]
 800fb4e:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800fb52:	801a      	strh	r2, [r3, #0]
 800fb54:	9b02      	ldr	r3, [sp, #8]
 800fb56:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 800fb5a:	801a      	strh	r2, [r3, #0]
 800fb5c:	bd10      	pop	{r4, pc}

0800fb5e <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 800fb5e:	b510      	push	{r4, lr}
 800fb60:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800fb64:	600c      	str	r4, [r1, #0]
 800fb66:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800fb6a:	6011      	str	r1, [r2, #0]
 800fb6c:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800fb70:	801a      	strh	r2, [r3, #0]
 800fb72:	bd10      	pop	{r4, pc}

0800fb74 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 800fb74:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800fb78:	600b      	str	r3, [r1, #0]
 800fb7a:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800fb7e:	6013      	str	r3, [r2, #0]
 800fb80:	4770      	bx	lr

0800fb82 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 800fb82:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 800fb86:	4770      	bx	lr

0800fb88 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 800fb88:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 800fb8c:	4770      	bx	lr

0800fb8e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 800fb8e:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 800fb92:	4770      	bx	lr

0800fb94 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 800fb94:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 800fb98:	4770      	bx	lr

0800fb9a <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 800fb9a:	4770      	bx	lr

0800fb9c <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 800fb9c:	b510      	push	{r4, lr}
 800fb9e:	21b4      	movs	r1, #180	; 0xb4
 800fba0:	4604      	mov	r4, r0
 800fba2:	f019 fc84 	bl	80294ae <_ZdlPvj>
 800fba6:	4620      	mov	r0, r4
 800fba8:	bd10      	pop	{r4, pc}

0800fbaa <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 800fbaa:	b570      	push	{r4, r5, r6, lr}
 800fbac:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 800fbb0:	428d      	cmp	r5, r1
 800fbb2:	bfb8      	it	lt
 800fbb4:	460d      	movlt	r5, r1
 800fbb6:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800fbba:	428d      	cmp	r5, r1
 800fbbc:	4604      	mov	r4, r0
 800fbbe:	bfa8      	it	ge
 800fbc0:	460d      	movge	r5, r1
 800fbc2:	4616      	mov	r6, r2
 800fbc4:	b99a      	cbnz	r2, 800fbee <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 800fbc6:	6803      	ldr	r3, [r0, #0]
 800fbc8:	4629      	mov	r1, r5
 800fbca:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800fbce:	4798      	blx	r3
 800fbd0:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800fbd4:	b368      	cbz	r0, 800fc32 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800fbd6:	6803      	ldr	r3, [r0, #0]
 800fbd8:	68db      	ldr	r3, [r3, #12]
 800fbda:	4798      	blx	r3
 800fbdc:	b348      	cbz	r0, 800fc32 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800fbde:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800fbe2:	6803      	ldr	r3, [r0, #0]
 800fbe4:	4621      	mov	r1, r4
 800fbe6:	689b      	ldr	r3, [r3, #8]
 800fbe8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fbec:	4718      	bx	r3
 800fbee:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800fbf2:	2b00      	cmp	r3, #0
 800fbf4:	dd08      	ble.n	800fc08 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 800fbf6:	f005 fbe3 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
 800fbfa:	4621      	mov	r1, r4
 800fbfc:	3004      	adds	r0, #4
 800fbfe:	f005 fc2c 	bl	801545a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800fc02:	2300      	movs	r3, #0
 800fc04:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800fc08:	6823      	ldr	r3, [r4, #0]
 800fc0a:	4620      	mov	r0, r4
 800fc0c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800fc10:	4798      	blx	r3
 800fc12:	2300      	movs	r3, #0
 800fc14:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 800fc18:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 800fc1c:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 800fc20:	f005 fbce 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
 800fc24:	4621      	mov	r1, r4
 800fc26:	3004      	adds	r0, #4
 800fc28:	f005 fcc0 	bl	80155ac <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 800fc2c:	2301      	movs	r3, #1
 800fc2e:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800fc32:	bd70      	pop	{r4, r5, r6, pc}

0800fc34 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 800fc34:	b510      	push	{r4, lr}
 800fc36:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800fc3a:	4299      	cmp	r1, r3
 800fc3c:	bfb8      	it	lt
 800fc3e:	4619      	movlt	r1, r3
 800fc40:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800fc44:	4299      	cmp	r1, r3
 800fc46:	bfa8      	it	ge
 800fc48:	4619      	movge	r1, r3
 800fc4a:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 800fc4e:	428b      	cmp	r3, r1
 800fc50:	4604      	mov	r4, r0
 800fc52:	d010      	beq.n	800fc76 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800fc54:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 800fc58:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 800fc5c:	b158      	cbz	r0, 800fc76 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800fc5e:	6803      	ldr	r3, [r0, #0]
 800fc60:	68db      	ldr	r3, [r3, #12]
 800fc62:	4798      	blx	r3
 800fc64:	b138      	cbz	r0, 800fc76 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800fc66:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 800fc6a:	6803      	ldr	r3, [r0, #0]
 800fc6c:	4621      	mov	r1, r4
 800fc6e:	689b      	ldr	r3, [r3, #8]
 800fc70:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fc74:	4718      	bx	r3
 800fc76:	bd10      	pop	{r4, pc}

0800fc78 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 800fc78:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800fc7a:	4604      	mov	r4, r0
 800fc7c:	460d      	mov	r5, r1
 800fc7e:	b1a9      	cbz	r1, 800fcac <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 800fc80:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 800fc84:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 800fc88:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 800fc8c:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 800fc90:	ab01      	add	r3, sp, #4
 800fc92:	1a12      	subs	r2, r2, r0
 800fc94:	1b89      	subs	r1, r1, r6
 800fc96:	1a38      	subs	r0, r7, r0
 800fc98:	f006 fe48 	bl	801692c <_ZN8touchgfx6muldivElllRl>
 800fc9c:	4629      	mov	r1, r5
 800fc9e:	ab01      	add	r3, sp, #4
 800fca0:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 800fca4:	4430      	add	r0, r6
 800fca6:	f006 fe41 	bl	801692c <_ZN8touchgfx6muldivElllRl>
 800fcaa:	b285      	uxth	r5, r0
 800fcac:	4628      	mov	r0, r5
 800fcae:	b003      	add	sp, #12
 800fcb0:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800fcb2 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 800fcb2:	b570      	push	{r4, r5, r6, lr}
 800fcb4:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 800fcb8:	4604      	mov	r4, r0
 800fcba:	2b00      	cmp	r3, #0
 800fcbc:	d035      	beq.n	800fd2a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800fcbe:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 800fcc2:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 800fcc6:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 800fcca:	3001      	adds	r0, #1
 800fccc:	1ad2      	subs	r2, r2, r3
 800fcce:	b212      	sxth	r2, r2
 800fcd0:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 800fcd4:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 800fcd8:	2100      	movs	r1, #0
 800fcda:	b280      	uxth	r0, r0
 800fcdc:	47a8      	blx	r5
 800fcde:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 800fce2:	6823      	ldr	r3, [r4, #0]
 800fce4:	4401      	add	r1, r0
 800fce6:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800fcea:	4620      	mov	r0, r4
 800fcec:	4798      	blx	r3
 800fcee:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 800fcf2:	429a      	cmp	r2, r3
 800fcf4:	db19      	blt.n	800fd2a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800fcf6:	2500      	movs	r5, #0
 800fcf8:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800fcfc:	f005 fb60 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
 800fd00:	4621      	mov	r1, r4
 800fd02:	3004      	adds	r0, #4
 800fd04:	f005 fba9 	bl	801545a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800fd08:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800fd0c:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800fd10:	b158      	cbz	r0, 800fd2a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800fd12:	6803      	ldr	r3, [r0, #0]
 800fd14:	68db      	ldr	r3, [r3, #12]
 800fd16:	4798      	blx	r3
 800fd18:	b138      	cbz	r0, 800fd2a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800fd1a:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800fd1e:	6803      	ldr	r3, [r0, #0]
 800fd20:	4621      	mov	r1, r4
 800fd22:	689b      	ldr	r3, [r3, #8]
 800fd24:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fd28:	4718      	bx	r3
 800fd2a:	bd70      	pop	{r4, r5, r6, pc}

0800fd2c <_ZN8touchgfx8DrawableC1Ev>:
 800fd2c:	4a0a      	ldr	r2, [pc, #40]	; (800fd58 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 800fd2e:	6002      	str	r2, [r0, #0]
 800fd30:	2200      	movs	r2, #0
 800fd32:	8082      	strh	r2, [r0, #4]
 800fd34:	80c2      	strh	r2, [r0, #6]
 800fd36:	8102      	strh	r2, [r0, #8]
 800fd38:	8142      	strh	r2, [r0, #10]
 800fd3a:	8182      	strh	r2, [r0, #12]
 800fd3c:	81c2      	strh	r2, [r0, #14]
 800fd3e:	8202      	strh	r2, [r0, #16]
 800fd40:	8242      	strh	r2, [r0, #18]
 800fd42:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800fd46:	61c2      	str	r2, [r0, #28]
 800fd48:	8402      	strh	r2, [r0, #32]
 800fd4a:	8442      	strh	r2, [r0, #34]	; 0x22
 800fd4c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800fd50:	2201      	movs	r2, #1
 800fd52:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800fd56:	4770      	bx	lr
 800fd58:	0802e8dc 	.word	0x0802e8dc

0800fd5c <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800fd5c:	b570      	push	{r4, r5, r6, lr}
 800fd5e:	6803      	ldr	r3, [r0, #0]
 800fd60:	4604      	mov	r4, r0
 800fd62:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800fd64:	4615      	mov	r5, r2
 800fd66:	4798      	blx	r3
 800fd68:	6823      	ldr	r3, [r4, #0]
 800fd6a:	4629      	mov	r1, r5
 800fd6c:	4620      	mov	r0, r4
 800fd6e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800fd70:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fd74:	4718      	bx	r3

0800fd76 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 800fd76:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fd7a:	4604      	mov	r4, r0
 800fd7c:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 800fd80:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 800fd84:	460e      	mov	r6, r1
 800fd86:	4615      	mov	r5, r2
 800fd88:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800fd8c:	4619      	mov	r1, r3
 800fd8e:	463a      	mov	r2, r7
 800fd90:	3058      	adds	r0, #88	; 0x58
 800fd92:	4698      	mov	r8, r3
 800fd94:	f7ff ffe2 	bl	800fd5c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800fd98:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800fd9c:	4446      	add	r6, r8
 800fd9e:	42b3      	cmp	r3, r6
 800fda0:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800fda4:	bfb8      	it	lt
 800fda6:	8126      	strhlt	r6, [r4, #8]
 800fda8:	443d      	add	r5, r7
 800fdaa:	42ab      	cmp	r3, r5
 800fdac:	bfb8      	it	lt
 800fdae:	8165      	strhlt	r5, [r4, #10]
 800fdb0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fdb4 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 800fdb4:	b510      	push	{r4, lr}
 800fdb6:	4604      	mov	r4, r0
 800fdb8:	302c      	adds	r0, #44	; 0x2c
 800fdba:	f002 fdf8 	bl	80129ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800fdbe:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 800fdc2:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 800fdc6:	4620      	mov	r0, r4
 800fdc8:	f7ff ffc8 	bl	800fd5c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800fdcc:	bd10      	pop	{r4, pc}
	...

0800fdd0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 800fdd0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800fdd2:	4604      	mov	r4, r0
 800fdd4:	4626      	mov	r6, r4
 800fdd6:	2500      	movs	r5, #0
 800fdd8:	f7ff ffa8 	bl	800fd2c <_ZN8touchgfx8DrawableC1Ev>
 800fddc:	4b23      	ldr	r3, [pc, #140]	; (800fe6c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 800fdde:	62a5      	str	r5, [r4, #40]	; 0x28
 800fde0:	f846 3b2c 	str.w	r3, [r6], #44
 800fde4:	2226      	movs	r2, #38	; 0x26
 800fde6:	4629      	mov	r1, r5
 800fde8:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800fdec:	4630      	mov	r0, r6
 800fdee:	f8ad 7004 	strh.w	r7, [sp, #4]
 800fdf2:	f01a fb74 	bl	802a4de <memset>
 800fdf6:	4630      	mov	r0, r6
 800fdf8:	f7ff ff98 	bl	800fd2c <_ZN8touchgfx8DrawableC1Ev>
 800fdfc:	a902      	add	r1, sp, #8
 800fdfe:	4b1c      	ldr	r3, [pc, #112]	; (800fe70 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 800fe00:	62e3      	str	r3, [r4, #44]	; 0x2c
 800fe02:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 800fe06:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800fe0a:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 800fe0e:	4630      	mov	r0, r6
 800fe10:	f104 0758 	add.w	r7, r4, #88	; 0x58
 800fe14:	f002 fdcb 	bl	80129ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800fe18:	4638      	mov	r0, r7
 800fe1a:	f7ff ff87 	bl	800fd2c <_ZN8touchgfx8DrawableC1Ev>
 800fe1e:	4b15      	ldr	r3, [pc, #84]	; (800fe74 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 800fe20:	65a3      	str	r3, [r4, #88]	; 0x58
 800fe22:	2364      	movs	r3, #100	; 0x64
 800fe24:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 800fe28:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 800fe2c:	4b12      	ldr	r3, [pc, #72]	; (800fe78 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 800fe2e:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 800fe32:	4629      	mov	r1, r5
 800fe34:	4630      	mov	r0, r6
 800fe36:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 800fe3a:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800fe3e:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 800fe42:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800fe46:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 800fe4a:	f7f1 f845 	bl	8000ed8 <_ZN8touchgfx8Drawable4setXEs>
 800fe4e:	4629      	mov	r1, r5
 800fe50:	4630      	mov	r0, r6
 800fe52:	f7f1 f843 	bl	8000edc <_ZN8touchgfx8Drawable4setYEs>
 800fe56:	4631      	mov	r1, r6
 800fe58:	4620      	mov	r0, r4
 800fe5a:	f000 f819 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800fe5e:	4620      	mov	r0, r4
 800fe60:	4639      	mov	r1, r7
 800fe62:	f000 f815 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800fe66:	4620      	mov	r0, r4
 800fe68:	b003      	add	sp, #12
 800fe6a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fe6c:	0802e170 	.word	0x0802e170
 800fe70:	0802e798 	.word	0x0802e798
 800fe74:	0802e244 	.word	0x0802e244
 800fe78:	0801708b 	.word	0x0801708b

0800fe7c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800fe7c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800fe7e:	2000      	movs	r0, #0
 800fe80:	b12b      	cbz	r3, 800fe8e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800fe82:	b920      	cbnz	r0, 800fe8e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800fe84:	1a5a      	subs	r2, r3, r1
 800fe86:	4250      	negs	r0, r2
 800fe88:	4150      	adcs	r0, r2
 800fe8a:	699b      	ldr	r3, [r3, #24]
 800fe8c:	e7f8      	b.n	800fe80 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800fe8e:	4770      	bx	lr

0800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800fe90:	2300      	movs	r3, #0
 800fe92:	6148      	str	r0, [r1, #20]
 800fe94:	618b      	str	r3, [r1, #24]
 800fe96:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800fe98:	b913      	cbnz	r3, 800fea0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800fe9a:	6281      	str	r1, [r0, #40]	; 0x28
 800fe9c:	4770      	bx	lr
 800fe9e:	4613      	mov	r3, r2
 800fea0:	699a      	ldr	r2, [r3, #24]
 800fea2:	2a00      	cmp	r2, #0
 800fea4:	d1fb      	bne.n	800fe9e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800fea6:	6199      	str	r1, [r3, #24]
 800fea8:	4770      	bx	lr

0800feaa <_ZN8touchgfx9Container9removeAllEv>:
 800feaa:	2200      	movs	r2, #0
 800feac:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800feae:	b123      	cbz	r3, 800feba <_ZN8touchgfx9Container9removeAllEv+0x10>
 800feb0:	6999      	ldr	r1, [r3, #24]
 800feb2:	6281      	str	r1, [r0, #40]	; 0x28
 800feb4:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800feb8:	e7f8      	b.n	800feac <_ZN8touchgfx9Container9removeAllEv+0x2>
 800feba:	4770      	bx	lr

0800febc <_ZN8touchgfx9Container6unlinkEv>:
 800febc:	2300      	movs	r3, #0
 800febe:	6283      	str	r3, [r0, #40]	; 0x28
 800fec0:	4770      	bx	lr

0800fec2 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800fec2:	2200      	movs	r2, #0
 800fec4:	8002      	strh	r2, [r0, #0]
 800fec6:	8042      	strh	r2, [r0, #2]
 800fec8:	8082      	strh	r2, [r0, #4]
 800feca:	80c2      	strh	r2, [r0, #6]
 800fecc:	4770      	bx	lr

0800fece <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800fece:	b570      	push	{r4, r5, r6, lr}
 800fed0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800fed2:	460d      	mov	r5, r1
 800fed4:	4616      	mov	r6, r2
 800fed6:	b13c      	cbz	r4, 800fee8 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800fed8:	6823      	ldr	r3, [r4, #0]
 800feda:	4620      	mov	r0, r4
 800fedc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800fede:	4632      	mov	r2, r6
 800fee0:	4629      	mov	r1, r5
 800fee2:	4798      	blx	r3
 800fee4:	69a4      	ldr	r4, [r4, #24]
 800fee6:	e7f6      	b.n	800fed6 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800fee8:	bd70      	pop	{r4, r5, r6, pc}

0800feea <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800feea:	b538      	push	{r3, r4, r5, lr}
 800feec:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800feee:	460d      	mov	r5, r1
 800fef0:	b134      	cbz	r4, 800ff00 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800fef2:	682b      	ldr	r3, [r5, #0]
 800fef4:	4621      	mov	r1, r4
 800fef6:	689b      	ldr	r3, [r3, #8]
 800fef8:	4628      	mov	r0, r5
 800fefa:	4798      	blx	r3
 800fefc:	69a4      	ldr	r4, [r4, #24]
 800fefe:	e7f7      	b.n	800fef0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800ff00:	bd38      	pop	{r3, r4, r5, pc}

0800ff02 <_ZN8touchgfx9ContainerD1Ev>:
 800ff02:	4770      	bx	lr

0800ff04 <_ZN8touchgfx9ContainerD0Ev>:
 800ff04:	b510      	push	{r4, lr}
 800ff06:	212c      	movs	r1, #44	; 0x2c
 800ff08:	4604      	mov	r4, r0
 800ff0a:	f019 fad0 	bl	80294ae <_ZdlPvj>
 800ff0e:	4620      	mov	r0, r4
 800ff10:	bd10      	pop	{r4, pc}

0800ff12 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800ff12:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800ff14:	b19b      	cbz	r3, 800ff3e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800ff16:	428b      	cmp	r3, r1
 800ff18:	d109      	bne.n	800ff2e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800ff1a:	699a      	ldr	r2, [r3, #24]
 800ff1c:	2100      	movs	r1, #0
 800ff1e:	6159      	str	r1, [r3, #20]
 800ff20:	6282      	str	r2, [r0, #40]	; 0x28
 800ff22:	b902      	cbnz	r2, 800ff26 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800ff24:	4770      	bx	lr
 800ff26:	6199      	str	r1, [r3, #24]
 800ff28:	4770      	bx	lr
 800ff2a:	4613      	mov	r3, r2
 800ff2c:	b13a      	cbz	r2, 800ff3e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800ff2e:	699a      	ldr	r2, [r3, #24]
 800ff30:	428a      	cmp	r2, r1
 800ff32:	d1fa      	bne.n	800ff2a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800ff34:	698a      	ldr	r2, [r1, #24]
 800ff36:	619a      	str	r2, [r3, #24]
 800ff38:	2300      	movs	r3, #0
 800ff3a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800ff3e:	4770      	bx	lr

0800ff40 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800ff40:	b410      	push	{r4}
 800ff42:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800ff44:	4604      	mov	r4, r0
 800ff46:	b92b      	cbnz	r3, 800ff54 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800ff48:	6803      	ldr	r3, [r0, #0]
 800ff4a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ff4e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800ff50:	4611      	mov	r1, r2
 800ff52:	4718      	bx	r3
 800ff54:	b941      	cbnz	r1, 800ff68 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800ff56:	6193      	str	r3, [r2, #24]
 800ff58:	6282      	str	r2, [r0, #40]	; 0x28
 800ff5a:	6154      	str	r4, [r2, #20]
 800ff5c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ff60:	4770      	bx	lr
 800ff62:	4603      	mov	r3, r0
 800ff64:	2800      	cmp	r0, #0
 800ff66:	d0f9      	beq.n	800ff5c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800ff68:	4299      	cmp	r1, r3
 800ff6a:	6998      	ldr	r0, [r3, #24]
 800ff6c:	d1f9      	bne.n	800ff62 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800ff6e:	6190      	str	r0, [r2, #24]
 800ff70:	618a      	str	r2, [r1, #24]
 800ff72:	e7f2      	b.n	800ff5a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800ff74 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800ff74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ff78:	461f      	mov	r7, r3
 800ff7a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800ff7e:	460d      	mov	r5, r1
 800ff80:	4616      	mov	r6, r2
 800ff82:	b103      	cbz	r3, 800ff86 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800ff84:	6038      	str	r0, [r7, #0]
 800ff86:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ff88:	b314      	cbz	r4, 800ffd0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800ff8a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800ff8e:	b1eb      	cbz	r3, 800ffcc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ff90:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800ff94:	428d      	cmp	r5, r1
 800ff96:	db19      	blt.n	800ffcc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ff98:	8923      	ldrh	r3, [r4, #8]
 800ff9a:	b289      	uxth	r1, r1
 800ff9c:	440b      	add	r3, r1
 800ff9e:	b21b      	sxth	r3, r3
 800ffa0:	429d      	cmp	r5, r3
 800ffa2:	da13      	bge.n	800ffcc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ffa4:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800ffa8:	4296      	cmp	r6, r2
 800ffaa:	db0f      	blt.n	800ffcc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ffac:	8963      	ldrh	r3, [r4, #10]
 800ffae:	b292      	uxth	r2, r2
 800ffb0:	4413      	add	r3, r2
 800ffb2:	b21b      	sxth	r3, r3
 800ffb4:	429e      	cmp	r6, r3
 800ffb6:	da09      	bge.n	800ffcc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ffb8:	6823      	ldr	r3, [r4, #0]
 800ffba:	1ab2      	subs	r2, r6, r2
 800ffbc:	1a69      	subs	r1, r5, r1
 800ffbe:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800ffc2:	b212      	sxth	r2, r2
 800ffc4:	463b      	mov	r3, r7
 800ffc6:	b209      	sxth	r1, r1
 800ffc8:	4620      	mov	r0, r4
 800ffca:	47c0      	blx	r8
 800ffcc:	69a4      	ldr	r4, [r4, #24]
 800ffce:	e7db      	b.n	800ff88 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800ffd0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ffd4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800ffd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ffd8:	4c6e      	ldr	r4, [pc, #440]	; (8010194 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800ffda:	b0a1      	sub	sp, #132	; 0x84
 800ffdc:	6824      	ldr	r4, [r4, #0]
 800ffde:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800ffe0:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800ffe4:	9303      	str	r3, [sp, #12]
 800ffe6:	2400      	movs	r4, #0
 800ffe8:	802c      	strh	r4, [r5, #0]
 800ffea:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800ffec:	802c      	strh	r4, [r5, #0]
 800ffee:	601c      	str	r4, [r3, #0]
 800fff0:	4606      	mov	r6, r0
 800fff2:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800fff6:	f7ff ffbd 	bl	800ff74 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800fffa:	f1b9 0f03 	cmp.w	r9, #3
 800fffe:	f340 80c2 	ble.w	8010186 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8010002:	4631      	mov	r1, r6
 8010004:	a80c      	add	r0, sp, #48	; 0x30
 8010006:	f006 fb5f 	bl	80166c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801000a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801000e:	9306      	str	r3, [sp, #24]
 8010010:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8010014:	9307      	str	r3, [sp, #28]
 8010016:	9b03      	ldr	r3, [sp, #12]
 8010018:	f8d3 a000 	ldr.w	sl, [r3]
 801001c:	f1ba 0f00 	cmp.w	sl, #0
 8010020:	f000 80b4 	beq.w	801018c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8010024:	4651      	mov	r1, sl
 8010026:	a810      	add	r0, sp, #64	; 0x40
 8010028:	f006 fb4e 	bl	80166c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801002c:	9b01      	ldr	r3, [sp, #4]
 801002e:	9a06      	ldr	r2, [sp, #24]
 8010030:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 8010034:	189d      	adds	r5, r3, r2
 8010036:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 801003a:	9a07      	ldr	r2, [sp, #28]
 801003c:	2002      	movs	r0, #2
 801003e:	fb91 f1f0 	sdiv	r1, r1, r0
 8010042:	4419      	add	r1, r3
 8010044:	1a6d      	subs	r5, r5, r1
 8010046:	9b02      	ldr	r3, [sp, #8]
 8010048:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 801004c:	4413      	add	r3, r2
 801004e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 8010052:	fb92 f2f0 	sdiv	r2, r2, r0
 8010056:	440a      	add	r2, r1
 8010058:	1a9b      	subs	r3, r3, r2
 801005a:	435b      	muls	r3, r3
 801005c:	fb05 3505 	mla	r5, r5, r5, r3
 8010060:	4f4d      	ldr	r7, [pc, #308]	; (8010198 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 8010062:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8010064:	ac10      	add	r4, sp, #64	; 0x40
 8010066:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010068:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 801006a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 801006c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 801006e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010070:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8010074:	f1b9 0f0c 	cmp.w	r9, #12
 8010078:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 801007c:	f04f 0303 	mov.w	r3, #3
 8010080:	bfc8      	it	gt
 8010082:	4698      	movgt	r8, r3
 8010084:	f8cd 9000 	str.w	r9, [sp]
 8010088:	f04f 0400 	mov.w	r4, #0
 801008c:	bfdc      	itt	le
 801008e:	f109 32ff 	addle.w	r2, r9, #4294967295
 8010092:	fb92 f8f3 	sdivle	r8, r2, r3
 8010096:	1c63      	adds	r3, r4, #1
 8010098:	aa10      	add	r2, sp, #64	; 0x40
 801009a:	f004 0401 	and.w	r4, r4, #1
 801009e:	9308      	str	r3, [sp, #32]
 80100a0:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 80100a4:	9b00      	ldr	r3, [sp, #0]
 80100a6:	fb93 f3f8 	sdiv	r3, r3, r8
 80100aa:	b29b      	uxth	r3, r3
 80100ac:	3404      	adds	r4, #4
 80100ae:	f04f 0b00 	mov.w	fp, #0
 80100b2:	9304      	str	r3, [sp, #16]
 80100b4:	9a04      	ldr	r2, [sp, #16]
 80100b6:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80100ba:	fb13 f302 	smulbb	r3, r3, r2
 80100be:	9a01      	ldr	r2, [sp, #4]
 80100c0:	b29b      	uxth	r3, r3
 80100c2:	1899      	adds	r1, r3, r2
 80100c4:	9305      	str	r3, [sp, #20]
 80100c6:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 80100ca:	b209      	sxth	r1, r1
 80100cc:	4299      	cmp	r1, r3
 80100ce:	db4d      	blt.n	801016c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80100d0:	8932      	ldrh	r2, [r6, #8]
 80100d2:	4413      	add	r3, r2
 80100d4:	b21b      	sxth	r3, r3
 80100d6:	4299      	cmp	r1, r3
 80100d8:	da48      	bge.n	801016c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80100da:	9b04      	ldr	r3, [sp, #16]
 80100dc:	6827      	ldr	r7, [r4, #0]
 80100de:	fb17 f703 	smulbb	r7, r7, r3
 80100e2:	9b02      	ldr	r3, [sp, #8]
 80100e4:	b2bf      	uxth	r7, r7
 80100e6:	18fa      	adds	r2, r7, r3
 80100e8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 80100ec:	b212      	sxth	r2, r2
 80100ee:	429a      	cmp	r2, r3
 80100f0:	db3c      	blt.n	801016c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80100f2:	8970      	ldrh	r0, [r6, #10]
 80100f4:	4403      	add	r3, r0
 80100f6:	b21b      	sxth	r3, r3
 80100f8:	429a      	cmp	r2, r3
 80100fa:	da37      	bge.n	801016c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80100fc:	2300      	movs	r3, #0
 80100fe:	930b      	str	r3, [sp, #44]	; 0x2c
 8010100:	4630      	mov	r0, r6
 8010102:	ab0b      	add	r3, sp, #44	; 0x2c
 8010104:	f7ff ff36 	bl	800ff74 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8010108:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801010a:	b37a      	cbz	r2, 801016c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801010c:	4552      	cmp	r2, sl
 801010e:	d02d      	beq.n	801016c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010110:	4611      	mov	r1, r2
 8010112:	a80e      	add	r0, sp, #56	; 0x38
 8010114:	9209      	str	r2, [sp, #36]	; 0x24
 8010116:	f006 fad7 	bl	80166c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801011a:	9a06      	ldr	r2, [sp, #24]
 801011c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8010120:	9b01      	ldr	r3, [sp, #4]
 8010122:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 8010126:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 801012a:	4413      	add	r3, r2
 801012c:	f04f 0e02 	mov.w	lr, #2
 8010130:	fb91 f1fe 	sdiv	r1, r1, lr
 8010134:	4401      	add	r1, r0
 8010136:	1a58      	subs	r0, r3, r1
 8010138:	9a07      	ldr	r2, [sp, #28]
 801013a:	9b02      	ldr	r3, [sp, #8]
 801013c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8010140:	fb9c fcfe 	sdiv	ip, ip, lr
 8010144:	4413      	add	r3, r2
 8010146:	448c      	add	ip, r1
 8010148:	eba3 030c 	sub.w	r3, r3, ip
 801014c:	435b      	muls	r3, r3
 801014e:	fb00 3300 	mla	r3, r0, r0, r3
 8010152:	42ab      	cmp	r3, r5
 8010154:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8010156:	d208      	bcs.n	801016a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8010158:	9803      	ldr	r0, [sp, #12]
 801015a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801015c:	6001      	str	r1, [r0, #0]
 801015e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8010160:	9805      	ldr	r0, [sp, #20]
 8010162:	8008      	strh	r0, [r1, #0]
 8010164:	992b      	ldr	r1, [sp, #172]	; 0xac
 8010166:	461d      	mov	r5, r3
 8010168:	800f      	strh	r7, [r1, #0]
 801016a:	4692      	mov	sl, r2
 801016c:	f10b 0b01 	add.w	fp, fp, #1
 8010170:	f1bb 0f04 	cmp.w	fp, #4
 8010174:	f104 0408 	add.w	r4, r4, #8
 8010178:	d19c      	bne.n	80100b4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 801017a:	9b00      	ldr	r3, [sp, #0]
 801017c:	9c08      	ldr	r4, [sp, #32]
 801017e:	444b      	add	r3, r9
 8010180:	4544      	cmp	r4, r8
 8010182:	9300      	str	r3, [sp, #0]
 8010184:	d187      	bne.n	8010096 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8010186:	b021      	add	sp, #132	; 0x84
 8010188:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801018c:	f04f 35ff 	mov.w	r5, #4294967295
 8010190:	e766      	b.n	8010060 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8010192:	bf00      	nop
 8010194:	20012f24 	.word	0x20012f24
 8010198:	0802b1ec 	.word	0x0802b1ec

0801019c <_ZN8touchgfx4RectaNERKS0_>:
 801019c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80101a0:	f9b1 7000 	ldrsh.w	r7, [r1]
 80101a4:	888c      	ldrh	r4, [r1, #4]
 80101a6:	f9b0 9000 	ldrsh.w	r9, [r0]
 80101aa:	443c      	add	r4, r7
 80101ac:	b2a4      	uxth	r4, r4
 80101ae:	fa0f f884 	sxth.w	r8, r4
 80101b2:	45c1      	cmp	r9, r8
 80101b4:	da2f      	bge.n	8010216 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80101b6:	8882      	ldrh	r2, [r0, #4]
 80101b8:	444a      	add	r2, r9
 80101ba:	b292      	uxth	r2, r2
 80101bc:	fa0f fe82 	sxth.w	lr, r2
 80101c0:	4577      	cmp	r7, lr
 80101c2:	da28      	bge.n	8010216 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80101c4:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 80101c8:	88cb      	ldrh	r3, [r1, #6]
 80101ca:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 80101ce:	442b      	add	r3, r5
 80101d0:	b21b      	sxth	r3, r3
 80101d2:	429e      	cmp	r6, r3
 80101d4:	da1f      	bge.n	8010216 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80101d6:	88c3      	ldrh	r3, [r0, #6]
 80101d8:	4433      	add	r3, r6
 80101da:	b29b      	uxth	r3, r3
 80101dc:	fa0f fc83 	sxth.w	ip, r3
 80101e0:	4565      	cmp	r5, ip
 80101e2:	da18      	bge.n	8010216 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80101e4:	454f      	cmp	r7, r9
 80101e6:	bfb8      	it	lt
 80101e8:	464f      	movlt	r7, r9
 80101ea:	42b5      	cmp	r5, r6
 80101ec:	bfb8      	it	lt
 80101ee:	4635      	movlt	r5, r6
 80101f0:	45f0      	cmp	r8, lr
 80101f2:	bfd8      	it	le
 80101f4:	4622      	movle	r2, r4
 80101f6:	1bd2      	subs	r2, r2, r7
 80101f8:	8082      	strh	r2, [r0, #4]
 80101fa:	884a      	ldrh	r2, [r1, #2]
 80101fc:	88c9      	ldrh	r1, [r1, #6]
 80101fe:	8007      	strh	r7, [r0, #0]
 8010200:	440a      	add	r2, r1
 8010202:	b292      	uxth	r2, r2
 8010204:	b211      	sxth	r1, r2
 8010206:	458c      	cmp	ip, r1
 8010208:	bfa8      	it	ge
 801020a:	4613      	movge	r3, r2
 801020c:	1b5b      	subs	r3, r3, r5
 801020e:	80c3      	strh	r3, [r0, #6]
 8010210:	8045      	strh	r5, [r0, #2]
 8010212:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010216:	2300      	movs	r3, #0
 8010218:	8003      	strh	r3, [r0, #0]
 801021a:	8043      	strh	r3, [r0, #2]
 801021c:	8083      	strh	r3, [r0, #4]
 801021e:	80c3      	strh	r3, [r0, #6]
 8010220:	e7f7      	b.n	8010212 <_ZN8touchgfx4RectaNERKS0_+0x76>

08010222 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8010222:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010226:	2b00      	cmp	r3, #0
 8010228:	dd06      	ble.n	8010238 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 801022a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 801022e:	2800      	cmp	r0, #0
 8010230:	bfcc      	ite	gt
 8010232:	2000      	movgt	r0, #0
 8010234:	2001      	movle	r0, #1
 8010236:	4770      	bx	lr
 8010238:	2001      	movs	r0, #1
 801023a:	4770      	bx	lr

0801023c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 801023c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010240:	2300      	movs	r3, #0
 8010242:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8010244:	8003      	strh	r3, [r0, #0]
 8010246:	4604      	mov	r4, r0
 8010248:	8043      	strh	r3, [r0, #2]
 801024a:	8083      	strh	r3, [r0, #4]
 801024c:	80c3      	strh	r3, [r0, #6]
 801024e:	2d00      	cmp	r5, #0
 8010250:	d040      	beq.n	80102d4 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8010252:	1d28      	adds	r0, r5, #4
 8010254:	f7ff ffe5 	bl	8010222 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010258:	b988      	cbnz	r0, 801027e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 801025a:	4620      	mov	r0, r4
 801025c:	f7ff ffe1 	bl	8010222 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010260:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8010264:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8010268:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 801026c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8010270:	b138      	cbz	r0, 8010282 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8010272:	8022      	strh	r2, [r4, #0]
 8010274:	8063      	strh	r3, [r4, #2]
 8010276:	f8a4 e004 	strh.w	lr, [r4, #4]
 801027a:	f8a4 c006 	strh.w	ip, [r4, #6]
 801027e:	69ad      	ldr	r5, [r5, #24]
 8010280:	e7e5      	b.n	801024e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8010282:	f9b4 0000 	ldrsh.w	r0, [r4]
 8010286:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 801028a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 801028e:	4290      	cmp	r0, r2
 8010290:	4607      	mov	r7, r0
 8010292:	bfa8      	it	ge
 8010294:	4617      	movge	r7, r2
 8010296:	4472      	add	r2, lr
 8010298:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 801029c:	8027      	strh	r7, [r4, #0]
 801029e:	4299      	cmp	r1, r3
 80102a0:	460e      	mov	r6, r1
 80102a2:	4440      	add	r0, r8
 80102a4:	bfa8      	it	ge
 80102a6:	461e      	movge	r6, r3
 80102a8:	4471      	add	r1, lr
 80102aa:	4463      	add	r3, ip
 80102ac:	b200      	sxth	r0, r0
 80102ae:	b212      	sxth	r2, r2
 80102b0:	b209      	sxth	r1, r1
 80102b2:	b21b      	sxth	r3, r3
 80102b4:	4290      	cmp	r0, r2
 80102b6:	bfac      	ite	ge
 80102b8:	ebc7 0200 	rsbge	r2, r7, r0
 80102bc:	ebc7 0202 	rsblt	r2, r7, r2
 80102c0:	4299      	cmp	r1, r3
 80102c2:	bfac      	ite	ge
 80102c4:	ebc6 0301 	rsbge	r3, r6, r1
 80102c8:	ebc6 0303 	rsblt	r3, r6, r3
 80102cc:	8066      	strh	r6, [r4, #2]
 80102ce:	80a2      	strh	r2, [r4, #4]
 80102d0:	80e3      	strh	r3, [r4, #6]
 80102d2:	e7d4      	b.n	801027e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 80102d4:	4620      	mov	r0, r4
 80102d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080102da <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 80102da:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80102de:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 80102e2:	b383      	cbz	r3, 8010346 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 80102e4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80102e6:	b374      	cbz	r4, 8010346 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 80102e8:	f9b1 5000 	ldrsh.w	r5, [r1]
 80102ec:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 80102f0:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 80102f4:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 80102f8:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80102fc:	b303      	cbz	r3, 8010340 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 80102fe:	4668      	mov	r0, sp
 8010300:	1d21      	adds	r1, r4, #4
 8010302:	f8ad 5000 	strh.w	r5, [sp]
 8010306:	f8ad 6002 	strh.w	r6, [sp, #2]
 801030a:	f8ad 7004 	strh.w	r7, [sp, #4]
 801030e:	f8ad 8006 	strh.w	r8, [sp, #6]
 8010312:	f7ff ff43 	bl	801019c <_ZN8touchgfx4RectaNERKS0_>
 8010316:	4668      	mov	r0, sp
 8010318:	f7ff ff83 	bl	8010222 <_ZNK8touchgfx4Rect7isEmptyEv>
 801031c:	b980      	cbnz	r0, 8010340 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 801031e:	f8bd 3000 	ldrh.w	r3, [sp]
 8010322:	88a2      	ldrh	r2, [r4, #4]
 8010324:	1a9b      	subs	r3, r3, r2
 8010326:	f8ad 3000 	strh.w	r3, [sp]
 801032a:	88e2      	ldrh	r2, [r4, #6]
 801032c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010330:	1a9b      	subs	r3, r3, r2
 8010332:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010336:	6823      	ldr	r3, [r4, #0]
 8010338:	4669      	mov	r1, sp
 801033a:	689b      	ldr	r3, [r3, #8]
 801033c:	4620      	mov	r0, r4
 801033e:	4798      	blx	r3
 8010340:	69a4      	ldr	r4, [r4, #24]
 8010342:	2c00      	cmp	r4, #0
 8010344:	d1d8      	bne.n	80102f8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8010346:	b002      	add	sp, #8
 8010348:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801034c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 801034c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801034e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8010352:	460d      	mov	r5, r1
 8010354:	4616      	mov	r6, r2
 8010356:	b323      	cbz	r3, 80103a2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010358:	6a84      	ldr	r4, [r0, #40]	; 0x28
 801035a:	b314      	cbz	r4, 80103a2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 801035c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010360:	b1eb      	cbz	r3, 801039e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010362:	6828      	ldr	r0, [r5, #0]
 8010364:	6869      	ldr	r1, [r5, #4]
 8010366:	466b      	mov	r3, sp
 8010368:	c303      	stmia	r3!, {r0, r1}
 801036a:	4668      	mov	r0, sp
 801036c:	1d21      	adds	r1, r4, #4
 801036e:	f7ff ff15 	bl	801019c <_ZN8touchgfx4RectaNERKS0_>
 8010372:	4668      	mov	r0, sp
 8010374:	f7ff ff55 	bl	8010222 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010378:	b988      	cbnz	r0, 801039e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 801037a:	f8bd 3000 	ldrh.w	r3, [sp]
 801037e:	88a2      	ldrh	r2, [r4, #4]
 8010380:	1a9b      	subs	r3, r3, r2
 8010382:	f8ad 3000 	strh.w	r3, [sp]
 8010386:	88e2      	ldrh	r2, [r4, #6]
 8010388:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801038c:	1a9b      	subs	r3, r3, r2
 801038e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010392:	6823      	ldr	r3, [r4, #0]
 8010394:	4632      	mov	r2, r6
 8010396:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010398:	4669      	mov	r1, sp
 801039a:	4620      	mov	r0, r4
 801039c:	4798      	blx	r3
 801039e:	69a4      	ldr	r4, [r4, #24]
 80103a0:	e7db      	b.n	801035a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 80103a2:	b002      	add	sp, #8
 80103a4:	bd70      	pop	{r4, r5, r6, pc}

080103a6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 80103a6:	b513      	push	{r0, r1, r4, lr}
 80103a8:	6803      	ldr	r3, [r0, #0]
 80103aa:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 80103ae:	2300      	movs	r3, #0
 80103b0:	e9cd 3300 	strd	r3, r3, [sp]
 80103b4:	466b      	mov	r3, sp
 80103b6:	47a0      	blx	r4
 80103b8:	b002      	add	sp, #8
 80103ba:	bd10      	pop	{r4, pc}

080103bc <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 80103bc:	2301      	movs	r3, #1
 80103be:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 80103c2:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 80103c6:	4770      	bx	lr

080103c8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 80103c8:	2301      	movs	r3, #1
 80103ca:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 80103ce:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 80103d2:	4770      	bx	lr

080103d4 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 80103d4:	6843      	ldr	r3, [r0, #4]
 80103d6:	2201      	movs	r2, #1
 80103d8:	725a      	strb	r2, [r3, #9]
 80103da:	6840      	ldr	r0, [r0, #4]
 80103dc:	6803      	ldr	r3, [r0, #0]
 80103de:	691b      	ldr	r3, [r3, #16]
 80103e0:	4718      	bx	r3

080103e2 <_ZN8touchgfx3HAL8flushDMAEv>:
 80103e2:	6840      	ldr	r0, [r0, #4]
 80103e4:	6803      	ldr	r3, [r0, #0]
 80103e6:	689b      	ldr	r3, [r3, #8]
 80103e8:	4718      	bx	r3

080103ea <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 80103ea:	b530      	push	{r4, r5, lr}
 80103ec:	b08b      	sub	sp, #44	; 0x2c
 80103ee:	6804      	ldr	r4, [r0, #0]
 80103f0:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 80103f4:	9509      	str	r5, [sp, #36]	; 0x24
 80103f6:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 80103fa:	9508      	str	r5, [sp, #32]
 80103fc:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8010400:	9507      	str	r5, [sp, #28]
 8010402:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8010406:	9506      	str	r5, [sp, #24]
 8010408:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 801040c:	9505      	str	r5, [sp, #20]
 801040e:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8010412:	9504      	str	r5, [sp, #16]
 8010414:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 8010418:	9503      	str	r5, [sp, #12]
 801041a:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 801041e:	9502      	str	r5, [sp, #8]
 8010420:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8010424:	e9cd 3500 	strd	r3, r5, [sp]
 8010428:	4613      	mov	r3, r2
 801042a:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 801042c:	2200      	movs	r2, #0
 801042e:	47a0      	blx	r4
 8010430:	b00b      	add	sp, #44	; 0x2c
 8010432:	bd30      	pop	{r4, r5, pc}

08010434 <_ZN8touchgfx3HAL10beginFrameEv>:
 8010434:	4b04      	ldr	r3, [pc, #16]	; (8010448 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8010436:	781b      	ldrb	r3, [r3, #0]
 8010438:	b123      	cbz	r3, 8010444 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 801043a:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 801043e:	f080 0001 	eor.w	r0, r0, #1
 8010442:	4770      	bx	lr
 8010444:	2001      	movs	r0, #1
 8010446:	4770      	bx	lr
 8010448:	20012f22 	.word	0x20012f22

0801044c <_ZN8touchgfx3HAL8endFrameEv>:
 801044c:	b510      	push	{r4, lr}
 801044e:	4604      	mov	r4, r0
 8010450:	6840      	ldr	r0, [r0, #4]
 8010452:	6803      	ldr	r3, [r0, #0]
 8010454:	689b      	ldr	r3, [r3, #8]
 8010456:	4798      	blx	r3
 8010458:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 801045c:	b113      	cbz	r3, 8010464 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 801045e:	2301      	movs	r3, #1
 8010460:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8010464:	bd10      	pop	{r4, pc}

08010466 <_ZN8touchgfx3HAL10initializeEv>:
 8010466:	b510      	push	{r4, lr}
 8010468:	4604      	mov	r4, r0
 801046a:	f7f0 fb1f 	bl	8000aac <_ZN8touchgfx10OSWrappers10initializeEv>
 801046e:	f7f0 fa2b 	bl	80008c8 <_ZN8touchgfx4GPIO4initEv>
 8010472:	6860      	ldr	r0, [r4, #4]
 8010474:	6803      	ldr	r3, [r0, #0]
 8010476:	68db      	ldr	r3, [r3, #12]
 8010478:	4798      	blx	r3
 801047a:	68e0      	ldr	r0, [r4, #12]
 801047c:	6803      	ldr	r3, [r0, #0]
 801047e:	689b      	ldr	r3, [r3, #8]
 8010480:	4798      	blx	r3
 8010482:	6823      	ldr	r3, [r4, #0]
 8010484:	4620      	mov	r0, r4
 8010486:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8010488:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801048c:	4718      	bx	r3
	...

08010490 <_ZN8touchgfx3HAL4tickEv>:
 8010490:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010492:	6803      	ldr	r3, [r0, #0]
 8010494:	4d5b      	ldr	r5, [pc, #364]	; (8010604 <_ZN8touchgfx3HAL4tickEv+0x174>)
 8010496:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801049a:	4604      	mov	r4, r0
 801049c:	4798      	blx	r3
 801049e:	2800      	cmp	r0, #0
 80104a0:	f000 8095 	beq.w	80105ce <_ZN8touchgfx3HAL4tickEv+0x13e>
 80104a4:	2001      	movs	r0, #1
 80104a6:	f7f0 f9c1 	bl	800082c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 80104aa:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 80104ae:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 80104b2:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 80104b6:	2600      	movs	r6, #0
 80104b8:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 80104bc:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 80104c0:	b133      	cbz	r3, 80104d0 <_ZN8touchgfx3HAL4tickEv+0x40>
 80104c2:	6823      	ldr	r3, [r4, #0]
 80104c4:	4620      	mov	r0, r4
 80104c6:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 80104ca:	4798      	blx	r3
 80104cc:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 80104d0:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 80104d4:	6862      	ldr	r2, [r4, #4]
 80104d6:	f083 0301 	eor.w	r3, r3, #1
 80104da:	7253      	strb	r3, [r2, #9]
 80104dc:	2601      	movs	r6, #1
 80104de:	702e      	strb	r6, [r5, #0]
 80104e0:	f004 ff6e 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
 80104e4:	6803      	ldr	r3, [r0, #0]
 80104e6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80104e8:	4798      	blx	r3
 80104ea:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 80104ee:	b90b      	cbnz	r3, 80104f4 <_ZN8touchgfx3HAL4tickEv+0x64>
 80104f0:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 80104f4:	f004 ff64 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
 80104f8:	6803      	ldr	r3, [r0, #0]
 80104fa:	695b      	ldr	r3, [r3, #20]
 80104fc:	4798      	blx	r3
 80104fe:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8010500:	6803      	ldr	r3, [r0, #0]
 8010502:	691b      	ldr	r3, [r3, #16]
 8010504:	4798      	blx	r3
 8010506:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 801050a:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 801050e:	3b01      	subs	r3, #1
 8010510:	b2db      	uxtb	r3, r3
 8010512:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8010516:	b10a      	cbz	r2, 801051c <_ZN8touchgfx3HAL4tickEv+0x8c>
 8010518:	2b00      	cmp	r3, #0
 801051a:	d1eb      	bne.n	80104f4 <_ZN8touchgfx3HAL4tickEv+0x64>
 801051c:	4a3a      	ldr	r2, [pc, #232]	; (8010608 <_ZN8touchgfx3HAL4tickEv+0x178>)
 801051e:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 8010522:	7813      	ldrb	r3, [r2, #0]
 8010524:	3301      	adds	r3, #1
 8010526:	b25b      	sxtb	r3, r3
 8010528:	4299      	cmp	r1, r3
 801052a:	7013      	strb	r3, [r2, #0]
 801052c:	dc10      	bgt.n	8010550 <_ZN8touchgfx3HAL4tickEv+0xc0>
 801052e:	68e0      	ldr	r0, [r4, #12]
 8010530:	2300      	movs	r3, #0
 8010532:	7013      	strb	r3, [r2, #0]
 8010534:	6803      	ldr	r3, [r0, #0]
 8010536:	aa03      	add	r2, sp, #12
 8010538:	68db      	ldr	r3, [r3, #12]
 801053a:	a902      	add	r1, sp, #8
 801053c:	4798      	blx	r3
 801053e:	6823      	ldr	r3, [r4, #0]
 8010540:	2800      	cmp	r0, #0
 8010542:	d050      	beq.n	80105e6 <_ZN8touchgfx3HAL4tickEv+0x156>
 8010544:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010548:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 801054c:	4620      	mov	r0, r4
 801054e:	4798      	blx	r3
 8010550:	6960      	ldr	r0, [r4, #20]
 8010552:	2300      	movs	r3, #0
 8010554:	f88d 3007 	strb.w	r3, [sp, #7]
 8010558:	b158      	cbz	r0, 8010572 <_ZN8touchgfx3HAL4tickEv+0xe2>
 801055a:	6803      	ldr	r3, [r0, #0]
 801055c:	f10d 0107 	add.w	r1, sp, #7
 8010560:	68db      	ldr	r3, [r3, #12]
 8010562:	4798      	blx	r3
 8010564:	b128      	cbz	r0, 8010572 <_ZN8touchgfx3HAL4tickEv+0xe2>
 8010566:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8010568:	f89d 1007 	ldrb.w	r1, [sp, #7]
 801056c:	6803      	ldr	r3, [r0, #0]
 801056e:	68db      	ldr	r3, [r3, #12]
 8010570:	4798      	blx	r3
 8010572:	f104 001c 	add.w	r0, r4, #28
 8010576:	f015 feb9 	bl	80262ec <_ZN8touchgfx8Gestures4tickEv>
 801057a:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 801057e:	b30b      	cbz	r3, 80105c4 <_ZN8touchgfx3HAL4tickEv+0x134>
 8010580:	6920      	ldr	r0, [r4, #16]
 8010582:	6803      	ldr	r3, [r0, #0]
 8010584:	691b      	ldr	r3, [r3, #16]
 8010586:	4798      	blx	r3
 8010588:	6f63      	ldr	r3, [r4, #116]	; 0x74
 801058a:	4606      	mov	r6, r0
 801058c:	b903      	cbnz	r3, 8010590 <_ZN8touchgfx3HAL4tickEv+0x100>
 801058e:	6760      	str	r0, [r4, #116]	; 0x74
 8010590:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010592:	4a1e      	ldr	r2, [pc, #120]	; (801060c <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8010594:	1af3      	subs	r3, r6, r3
 8010596:	4293      	cmp	r3, r2
 8010598:	d914      	bls.n	80105c4 <_ZN8touchgfx3HAL4tickEv+0x134>
 801059a:	6920      	ldr	r0, [r4, #16]
 801059c:	6803      	ldr	r3, [r0, #0]
 801059e:	699b      	ldr	r3, [r3, #24]
 80105a0:	4798      	blx	r3
 80105a2:	6f63      	ldr	r3, [r4, #116]	; 0x74
 80105a4:	2264      	movs	r2, #100	; 0x64
 80105a6:	1af3      	subs	r3, r6, r3
 80105a8:	fbb3 f3f2 	udiv	r3, r3, r2
 80105ac:	fbb0 f0f3 	udiv	r0, r0, r3
 80105b0:	2800      	cmp	r0, #0
 80105b2:	dc1d      	bgt.n	80105f0 <_ZN8touchgfx3HAL4tickEv+0x160>
 80105b4:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 80105b8:	6920      	ldr	r0, [r4, #16]
 80105ba:	6803      	ldr	r3, [r0, #0]
 80105bc:	2100      	movs	r1, #0
 80105be:	69db      	ldr	r3, [r3, #28]
 80105c0:	4798      	blx	r3
 80105c2:	6766      	str	r6, [r4, #116]	; 0x74
 80105c4:	f004 fefc 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
 80105c8:	6803      	ldr	r3, [r0, #0]
 80105ca:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80105cc:	4798      	blx	r3
 80105ce:	6823      	ldr	r3, [r4, #0]
 80105d0:	4620      	mov	r0, r4
 80105d2:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 80105d6:	4798      	blx	r3
 80105d8:	2001      	movs	r0, #1
 80105da:	f7f0 f93f 	bl	800085c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 80105de:	2300      	movs	r3, #0
 80105e0:	702b      	strb	r3, [r5, #0]
 80105e2:	b004      	add	sp, #16
 80105e4:	bd70      	pop	{r4, r5, r6, pc}
 80105e6:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 80105ea:	4620      	mov	r0, r4
 80105ec:	4798      	blx	r3
 80105ee:	e7af      	b.n	8010550 <_ZN8touchgfx3HAL4tickEv+0xc0>
 80105f0:	2863      	cmp	r0, #99	; 0x63
 80105f2:	bfcb      	itete	gt
 80105f4:	2300      	movgt	r3, #0
 80105f6:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 80105fa:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 80105fe:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 8010602:	e7d9      	b.n	80105b8 <_ZN8touchgfx3HAL4tickEv+0x128>
 8010604:	20012f28 	.word	0x20012f28
 8010608:	20012f29 	.word	0x20012f29
 801060c:	05f5e100 	.word	0x05f5e100

08010610 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8010610:	b510      	push	{r4, lr}
 8010612:	4604      	mov	r4, r0
 8010614:	f7f0 fa7a 	bl	8000b0c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8010618:	6863      	ldr	r3, [r4, #4]
 801061a:	2200      	movs	r2, #0
 801061c:	729a      	strb	r2, [r3, #10]
 801061e:	bd10      	pop	{r4, pc}

08010620 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8010620:	65c1      	str	r1, [r0, #92]	; 0x5c
 8010622:	301c      	adds	r0, #28
 8010624:	f015 be60 	b.w	80262e8 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08010628 <_ZN8touchgfx3HAL5touchEll>:
 8010628:	b530      	push	{r4, r5, lr}
 801062a:	b087      	sub	sp, #28
 801062c:	4604      	mov	r4, r0
 801062e:	a804      	add	r0, sp, #16
 8010630:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8010634:	f004 fc90 	bl	8014f58 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8010638:	9b04      	ldr	r3, [sp, #16]
 801063a:	f8ad 300c 	strh.w	r3, [sp, #12]
 801063e:	a906      	add	r1, sp, #24
 8010640:	9b05      	ldr	r3, [sp, #20]
 8010642:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8010646:	a803      	add	r0, sp, #12
 8010648:	f004 fcd8 	bl	8014ffc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 801064c:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 8010650:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8010654:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8010658:	f104 001c 	add.w	r0, r4, #28
 801065c:	b189      	cbz	r1, 8010682 <_ZN8touchgfx3HAL5touchEll+0x5a>
 801065e:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 8010662:	9300      	str	r3, [sp, #0]
 8010664:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 8010668:	4613      	mov	r3, r2
 801066a:	462a      	mov	r2, r5
 801066c:	f015 fe4c 	bl	8026308 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8010670:	b128      	cbz	r0, 801067e <_ZN8touchgfx3HAL5touchEll+0x56>
 8010672:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8010676:	6623      	str	r3, [r4, #96]	; 0x60
 8010678:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801067c:	6663      	str	r3, [r4, #100]	; 0x64
 801067e:	b007      	add	sp, #28
 8010680:	bd30      	pop	{r4, r5, pc}
 8010682:	f015 fe81 	bl	8026388 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8010686:	2301      	movs	r3, #1
 8010688:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 801068c:	e7f1      	b.n	8010672 <_ZN8touchgfx3HAL5touchEll+0x4a>

0801068e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 801068e:	b510      	push	{r4, lr}
 8010690:	2b00      	cmp	r3, #0
 8010692:	d046      	beq.n	8010722 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010694:	ea81 0002 	eor.w	r0, r1, r2
 8010698:	07c4      	lsls	r4, r0, #31
 801069a:	d508      	bpl.n	80106ae <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 801069c:	440b      	add	r3, r1
 801069e:	3a01      	subs	r2, #1
 80106a0:	428b      	cmp	r3, r1
 80106a2:	d93e      	bls.n	8010722 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80106a4:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 80106a8:	f801 0b01 	strb.w	r0, [r1], #1
 80106ac:	e7f8      	b.n	80106a0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 80106ae:	07d0      	lsls	r0, r2, #31
 80106b0:	bf42      	ittt	mi
 80106b2:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 80106b6:	f801 0b01 	strbmi.w	r0, [r1], #1
 80106ba:	f103 33ff 	addmi.w	r3, r3, #4294967295
 80106be:	2b01      	cmp	r3, #1
 80106c0:	d911      	bls.n	80106e6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80106c2:	ea81 0402 	eor.w	r4, r1, r2
 80106c6:	07a4      	lsls	r4, r4, #30
 80106c8:	4610      	mov	r0, r2
 80106ca:	d022      	beq.n	8010712 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 80106cc:	f023 0401 	bic.w	r4, r3, #1
 80106d0:	440c      	add	r4, r1
 80106d2:	428c      	cmp	r4, r1
 80106d4:	4602      	mov	r2, r0
 80106d6:	d904      	bls.n	80106e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 80106d8:	8812      	ldrh	r2, [r2, #0]
 80106da:	f821 2b02 	strh.w	r2, [r1], #2
 80106de:	3002      	adds	r0, #2
 80106e0:	e7f7      	b.n	80106d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 80106e2:	f003 0301 	and.w	r3, r3, #1
 80106e6:	f023 0003 	bic.w	r0, r3, #3
 80106ea:	4408      	add	r0, r1
 80106ec:	4288      	cmp	r0, r1
 80106ee:	4614      	mov	r4, r2
 80106f0:	d904      	bls.n	80106fc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 80106f2:	6824      	ldr	r4, [r4, #0]
 80106f4:	f841 4b04 	str.w	r4, [r1], #4
 80106f8:	3204      	adds	r2, #4
 80106fa:	e7f7      	b.n	80106ec <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 80106fc:	f003 0303 	and.w	r3, r3, #3
 8010700:	440b      	add	r3, r1
 8010702:	3a01      	subs	r2, #1
 8010704:	428b      	cmp	r3, r1
 8010706:	d90c      	bls.n	8010722 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010708:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 801070c:	f801 0b01 	strb.w	r0, [r1], #1
 8010710:	e7f8      	b.n	8010704 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 8010712:	0790      	lsls	r0, r2, #30
 8010714:	d0e7      	beq.n	80106e6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010716:	f832 0b02 	ldrh.w	r0, [r2], #2
 801071a:	f821 0b02 	strh.w	r0, [r1], #2
 801071e:	3b02      	subs	r3, #2
 8010720:	e7e1      	b.n	80106e6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010722:	2001      	movs	r0, #1
 8010724:	bd10      	pop	{r4, pc}

08010726 <_ZN8touchgfx3HAL7noTouchEv>:
 8010726:	b510      	push	{r4, lr}
 8010728:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 801072c:	4604      	mov	r4, r0
 801072e:	b153      	cbz	r3, 8010746 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8010730:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 8010734:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 8010738:	2101      	movs	r1, #1
 801073a:	301c      	adds	r0, #28
 801073c:	f015 fe24 	bl	8026388 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8010740:	2300      	movs	r3, #0
 8010742:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8010746:	bd10      	pop	{r4, pc}

08010748 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8010748:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801074c:	b085      	sub	sp, #20
 801074e:	ad04      	add	r5, sp, #16
 8010750:	4604      	mov	r4, r0
 8010752:	2000      	movs	r0, #0
 8010754:	f845 0d04 	str.w	r0, [r5, #-4]!
 8010758:	69a0      	ldr	r0, [r4, #24]
 801075a:	6806      	ldr	r6, [r0, #0]
 801075c:	9501      	str	r5, [sp, #4]
 801075e:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8010762:	9500      	str	r5, [sp, #0]
 8010764:	6835      	ldr	r5, [r6, #0]
 8010766:	4699      	mov	r9, r3
 8010768:	460f      	mov	r7, r1
 801076a:	4690      	mov	r8, r2
 801076c:	47a8      	blx	r5
 801076e:	4d10      	ldr	r5, [pc, #64]	; (80107b0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8010770:	4606      	mov	r6, r0
 8010772:	f8a5 9000 	strh.w	r9, [r5]
 8010776:	f7f3 f8f9 	bl	800396c <_ZN8touchgfx3HAL3lcdEv>
 801077a:	6803      	ldr	r3, [r0, #0]
 801077c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801077e:	4798      	blx	r3
 8010780:	b128      	cbz	r0, 801078e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 8010782:	2801      	cmp	r0, #1
 8010784:	d00b      	beq.n	801079e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8010786:	4630      	mov	r0, r6
 8010788:	b005      	add	sp, #20
 801078a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801078e:	882b      	ldrh	r3, [r5, #0]
 8010790:	fb08 7203 	mla	r2, r8, r3, r7
 8010794:	9b03      	ldr	r3, [sp, #12]
 8010796:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 801079a:	63e3      	str	r3, [r4, #60]	; 0x3c
 801079c:	e7f3      	b.n	8010786 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 801079e:	882a      	ldrh	r2, [r5, #0]
 80107a0:	9b03      	ldr	r3, [sp, #12]
 80107a2:	fb08 7202 	mla	r2, r8, r2, r7
 80107a6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80107aa:	1a9a      	subs	r2, r3, r2
 80107ac:	63e2      	str	r2, [r4, #60]	; 0x3c
 80107ae:	e7ea      	b.n	8010786 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 80107b0:	20012f1e 	.word	0x20012f1e

080107b4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 80107b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80107b6:	b08b      	sub	sp, #44	; 0x2c
 80107b8:	4617      	mov	r7, r2
 80107ba:	4604      	mov	r4, r0
 80107bc:	460e      	mov	r6, r1
 80107be:	461d      	mov	r5, r3
 80107c0:	f7f3 f8d4 	bl	800396c <_ZN8touchgfx3HAL3lcdEv>
 80107c4:	6803      	ldr	r3, [r0, #0]
 80107c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80107c8:	4798      	blx	r3
 80107ca:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80107ce:	9007      	str	r0, [sp, #28]
 80107d0:	e9cd 0308 	strd	r0, r3, [sp, #32]
 80107d4:	4b0d      	ldr	r3, [pc, #52]	; (801080c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 80107d6:	6822      	ldr	r2, [r4, #0]
 80107d8:	881b      	ldrh	r3, [r3, #0]
 80107da:	9306      	str	r3, [sp, #24]
 80107dc:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 80107e0:	9305      	str	r3, [sp, #20]
 80107e2:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 80107e6:	9304      	str	r3, [sp, #16]
 80107e8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80107ec:	9303      	str	r3, [sp, #12]
 80107ee:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80107f2:	9302      	str	r3, [sp, #8]
 80107f4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80107f8:	e9cd 5300 	strd	r5, r3, [sp]
 80107fc:	4631      	mov	r1, r6
 80107fe:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8010800:	463b      	mov	r3, r7
 8010802:	2200      	movs	r2, #0
 8010804:	4620      	mov	r0, r4
 8010806:	47a8      	blx	r5
 8010808:	b00b      	add	sp, #44	; 0x2c
 801080a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801080c:	20012f1e 	.word	0x20012f1e

08010810 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8010810:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010814:	4698      	mov	r8, r3
 8010816:	6803      	ldr	r3, [r0, #0]
 8010818:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 801081a:	4b15      	ldr	r3, [pc, #84]	; (8010870 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 801081c:	b08b      	sub	sp, #44	; 0x2c
 801081e:	4617      	mov	r7, r2
 8010820:	f8b3 9000 	ldrh.w	r9, [r3]
 8010824:	460e      	mov	r6, r1
 8010826:	4604      	mov	r4, r0
 8010828:	f7f3 f8a0 	bl	800396c <_ZN8touchgfx3HAL3lcdEv>
 801082c:	6803      	ldr	r3, [r0, #0]
 801082e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010830:	4798      	blx	r3
 8010832:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8010836:	e9cd 0308 	strd	r0, r3, [sp, #32]
 801083a:	2302      	movs	r3, #2
 801083c:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8010840:	2301      	movs	r3, #1
 8010842:	9305      	str	r3, [sp, #20]
 8010844:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8010848:	9304      	str	r3, [sp, #16]
 801084a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 801084e:	9303      	str	r3, [sp, #12]
 8010850:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8010854:	9302      	str	r3, [sp, #8]
 8010856:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801085a:	2200      	movs	r2, #0
 801085c:	e9cd 8300 	strd	r8, r3, [sp]
 8010860:	4631      	mov	r1, r6
 8010862:	463b      	mov	r3, r7
 8010864:	4620      	mov	r0, r4
 8010866:	47a8      	blx	r5
 8010868:	b00b      	add	sp, #44	; 0x2c
 801086a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801086e:	bf00      	nop
 8010870:	20012f1e 	.word	0x20012f1e

08010874 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8010874:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010878:	4698      	mov	r8, r3
 801087a:	6803      	ldr	r3, [r0, #0]
 801087c:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 801087e:	4b11      	ldr	r3, [pc, #68]	; (80108c4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8010880:	b087      	sub	sp, #28
 8010882:	f8b3 9000 	ldrh.w	r9, [r3]
 8010886:	460e      	mov	r6, r1
 8010888:	4617      	mov	r7, r2
 801088a:	4604      	mov	r4, r0
 801088c:	f7f3 f86e 	bl	800396c <_ZN8touchgfx3HAL3lcdEv>
 8010890:	6803      	ldr	r3, [r0, #0]
 8010892:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010894:	4798      	blx	r3
 8010896:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 801089a:	f8cd 900c 	str.w	r9, [sp, #12]
 801089e:	e9cd 0304 	strd	r0, r3, [sp, #16]
 80108a2:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 80108a6:	9302      	str	r3, [sp, #8]
 80108a8:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 80108ac:	9301      	str	r3, [sp, #4]
 80108ae:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80108b2:	9300      	str	r3, [sp, #0]
 80108b4:	463a      	mov	r2, r7
 80108b6:	4643      	mov	r3, r8
 80108b8:	4631      	mov	r1, r6
 80108ba:	4620      	mov	r0, r4
 80108bc:	47a8      	blx	r5
 80108be:	b007      	add	sp, #28
 80108c0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80108c4:	20012f1e 	.word	0x20012f1e

080108c8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 80108c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80108cc:	4604      	mov	r4, r0
 80108ce:	b08f      	sub	sp, #60	; 0x3c
 80108d0:	4610      	mov	r0, r2
 80108d2:	460d      	mov	r5, r1
 80108d4:	4691      	mov	r9, r2
 80108d6:	461e      	mov	r6, r3
 80108d8:	f008 f8f0 	bl	8018abc <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 80108dc:	2800      	cmp	r0, #0
 80108de:	f000 809d 	beq.w	8010a1c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 80108e2:	6823      	ldr	r3, [r4, #0]
 80108e4:	f8df b198 	ldr.w	fp, [pc, #408]	; 8010a80 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 80108e8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80108ea:	f8df a198 	ldr.w	sl, [pc, #408]	; 8010a84 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 80108ee:	4f61      	ldr	r7, [pc, #388]	; (8010a74 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80108f0:	4620      	mov	r0, r4
 80108f2:	4798      	blx	r3
 80108f4:	6823      	ldr	r3, [r4, #0]
 80108f6:	4620      	mov	r0, r4
 80108f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80108fa:	4798      	blx	r3
 80108fc:	f8bb 3000 	ldrh.w	r3, [fp]
 8010900:	9301      	str	r3, [sp, #4]
 8010902:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8010906:	f8ba 3000 	ldrh.w	r3, [sl]
 801090a:	9302      	str	r3, [sp, #8]
 801090c:	883b      	ldrh	r3, [r7, #0]
 801090e:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8010912:	9303      	str	r3, [sp, #12]
 8010914:	4b58      	ldr	r3, [pc, #352]	; (8010a78 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010916:	9305      	str	r3, [sp, #20]
 8010918:	881a      	ldrh	r2, [r3, #0]
 801091a:	9204      	str	r2, [sp, #16]
 801091c:	4640      	mov	r0, r8
 801091e:	f008 f961 	bl	8018be4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8010922:	8038      	strh	r0, [r7, #0]
 8010924:	4640      	mov	r0, r8
 8010926:	f008 f991 	bl	8018c4c <_ZNK8touchgfx6Bitmap9getHeightEv>
 801092a:	9b05      	ldr	r3, [sp, #20]
 801092c:	b280      	uxth	r0, r0
 801092e:	8018      	strh	r0, [r3, #0]
 8010930:	4b52      	ldr	r3, [pc, #328]	; (8010a7c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8010932:	781b      	ldrb	r3, [r3, #0]
 8010934:	2b00      	cmp	r3, #0
 8010936:	d174      	bne.n	8010a22 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8010938:	883b      	ldrh	r3, [r7, #0]
 801093a:	f8ab 3000 	strh.w	r3, [fp]
 801093e:	f8aa 0000 	strh.w	r0, [sl]
 8010942:	4648      	mov	r0, r9
 8010944:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8010948:	f008 f8b8 	bl	8018abc <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 801094c:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8010950:	2200      	movs	r2, #0
 8010952:	4611      	mov	r1, r2
 8010954:	4628      	mov	r0, r5
 8010956:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 801095a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 801095e:	f7f1 ff4a 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 8010962:	2301      	movs	r3, #1
 8010964:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8010968:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 801096c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8010970:	2b00      	cmp	r3, #0
 8010972:	dd5c      	ble.n	8010a2e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8010974:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8010978:	2b00      	cmp	r3, #0
 801097a:	dd58      	ble.n	8010a2e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 801097c:	462a      	mov	r2, r5
 801097e:	ab0a      	add	r3, sp, #40	; 0x28
 8010980:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8010984:	6851      	ldr	r1, [r2, #4]
 8010986:	c303      	stmia	r3!, {r0, r1}
 8010988:	4631      	mov	r1, r6
 801098a:	a80a      	add	r0, sp, #40	; 0x28
 801098c:	f7ff fc06 	bl	801019c <_ZN8touchgfx4RectaNERKS0_>
 8010990:	4b38      	ldr	r3, [pc, #224]	; (8010a74 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8010992:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010996:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 801099a:	2100      	movs	r1, #0
 801099c:	aa0a      	add	r2, sp, #40	; 0x28
 801099e:	4b36      	ldr	r3, [pc, #216]	; (8010a78 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80109a0:	910c      	str	r1, [sp, #48]	; 0x30
 80109a2:	e892 0003 	ldmia.w	r2, {r0, r1}
 80109a6:	f9b3 3000 	ldrsh.w	r3, [r3]
 80109aa:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80109ae:	ab08      	add	r3, sp, #32
 80109b0:	e883 0003 	stmia.w	r3, {r0, r1}
 80109b4:	4618      	mov	r0, r3
 80109b6:	a90c      	add	r1, sp, #48	; 0x30
 80109b8:	f7ff fbf0 	bl	801019c <_ZN8touchgfx4RectaNERKS0_>
 80109bc:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 80109be:	2b00      	cmp	r3, #0
 80109c0:	d13c      	bne.n	8010a3c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 80109c2:	2000      	movs	r0, #0
 80109c4:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 80109c8:	2600      	movs	r6, #0
 80109ca:	682a      	ldr	r2, [r5, #0]
 80109cc:	696b      	ldr	r3, [r5, #20]
 80109ce:	616e      	str	r6, [r5, #20]
 80109d0:	9305      	str	r3, [sp, #20]
 80109d2:	6892      	ldr	r2, [r2, #8]
 80109d4:	a908      	add	r1, sp, #32
 80109d6:	4628      	mov	r0, r5
 80109d8:	4790      	blx	r2
 80109da:	9b05      	ldr	r3, [sp, #20]
 80109dc:	616b      	str	r3, [r5, #20]
 80109de:	4652      	mov	r2, sl
 80109e0:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 80109e4:	4649      	mov	r1, r9
 80109e6:	4628      	mov	r0, r5
 80109e8:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 80109ec:	f7f1 ff03 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 80109f0:	4b23      	ldr	r3, [pc, #140]	; (8010a80 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 80109f2:	9a01      	ldr	r2, [sp, #4]
 80109f4:	801a      	strh	r2, [r3, #0]
 80109f6:	4b23      	ldr	r3, [pc, #140]	; (8010a84 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 80109f8:	9a02      	ldr	r2, [sp, #8]
 80109fa:	801a      	strh	r2, [r3, #0]
 80109fc:	4b1d      	ldr	r3, [pc, #116]	; (8010a74 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80109fe:	9a03      	ldr	r2, [sp, #12]
 8010a00:	801a      	strh	r2, [r3, #0]
 8010a02:	4b1d      	ldr	r3, [pc, #116]	; (8010a78 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010a04:	9a04      	ldr	r2, [sp, #16]
 8010a06:	801a      	strh	r2, [r3, #0]
 8010a08:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 8010a0c:	6823      	ldr	r3, [r4, #0]
 8010a0e:	4620      	mov	r0, r4
 8010a10:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010a12:	4798      	blx	r3
 8010a14:	6823      	ldr	r3, [r4, #0]
 8010a16:	4620      	mov	r0, r4
 8010a18:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010a1a:	4798      	blx	r3
 8010a1c:	b00f      	add	sp, #60	; 0x3c
 8010a1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010a22:	883b      	ldrh	r3, [r7, #0]
 8010a24:	f8ab 0000 	strh.w	r0, [fp]
 8010a28:	f8aa 3000 	strh.w	r3, [sl]
 8010a2c:	e789      	b.n	8010942 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 8010a2e:	462a      	mov	r2, r5
 8010a30:	ab0a      	add	r3, sp, #40	; 0x28
 8010a32:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8010a36:	6851      	ldr	r1, [r2, #4]
 8010a38:	c303      	stmia	r3!, {r0, r1}
 8010a3a:	e7a9      	b.n	8010990 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 8010a3c:	a807      	add	r0, sp, #28
 8010a3e:	f008 fa41 	bl	8018ec4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010a42:	4606      	mov	r6, r0
 8010a44:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8010a46:	6803      	ldr	r3, [r0, #0]
 8010a48:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010a4a:	4798      	blx	r3
 8010a4c:	4286      	cmp	r6, r0
 8010a4e:	d1b8      	bne.n	80109c2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8010a50:	f7f2 ff8c 	bl	800396c <_ZN8touchgfx3HAL3lcdEv>
 8010a54:	6803      	ldr	r3, [r0, #0]
 8010a56:	4606      	mov	r6, r0
 8010a58:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010a5a:	9305      	str	r3, [sp, #20]
 8010a5c:	a807      	add	r0, sp, #28
 8010a5e:	f008 fa31 	bl	8018ec4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010a62:	9b05      	ldr	r3, [sp, #20]
 8010a64:	4601      	mov	r1, r0
 8010a66:	4630      	mov	r0, r6
 8010a68:	4798      	blx	r3
 8010a6a:	f080 0001 	eor.w	r0, r0, #1
 8010a6e:	b2c0      	uxtb	r0, r0
 8010a70:	e7a8      	b.n	80109c4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8010a72:	bf00      	nop
 8010a74:	20012f18 	.word	0x20012f18
 8010a78:	20012f1a 	.word	0x20012f1a
 8010a7c:	20012f1c 	.word	0x20012f1c
 8010a80:	20012f1e 	.word	0x20012f1e
 8010a84:	20012f20 	.word	0x20012f20

08010a88 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8010a88:	b510      	push	{r4, lr}
 8010a8a:	4b07      	ldr	r3, [pc, #28]	; (8010aa8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8010a8c:	781b      	ldrb	r3, [r3, #0]
 8010a8e:	4604      	mov	r4, r0
 8010a90:	b13b      	cbz	r3, 8010aa2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8010a92:	6803      	ldr	r3, [r0, #0]
 8010a94:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010a96:	4798      	blx	r3
 8010a98:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8010a9a:	4283      	cmp	r3, r0
 8010a9c:	d101      	bne.n	8010aa2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8010a9e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8010aa0:	bd10      	pop	{r4, pc}
 8010aa2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8010aa4:	e7fc      	b.n	8010aa0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8010aa6:	bf00      	nop
 8010aa8:	20012f22 	.word	0x20012f22

08010aac <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8010aac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010ab0:	b08a      	sub	sp, #40	; 0x28
 8010ab2:	461d      	mov	r5, r3
 8010ab4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8010ab8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8010abc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010ac0:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010ac4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010ac8:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010acc:	2400      	movs	r4, #0
 8010ace:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010ad2:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 8010ad6:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010ada:	4690      	mov	r8, r2
 8010adc:	4607      	mov	r7, r0
 8010ade:	9404      	str	r4, [sp, #16]
 8010ae0:	f88d 4020 	strb.w	r4, [sp, #32]
 8010ae4:	f7ff ffd0 	bl	8010a88 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010ae8:	fb06 8505 	mla	r5, r6, r5, r8
 8010aec:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8010af0:	6878      	ldr	r0, [r7, #4]
 8010af2:	9505      	str	r5, [sp, #20]
 8010af4:	f8ad 601e 	strh.w	r6, [sp, #30]
 8010af8:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8010afc:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8010b00:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8010b04:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8010b08:	6803      	ldr	r3, [r0, #0]
 8010b0a:	a901      	add	r1, sp, #4
 8010b0c:	685b      	ldr	r3, [r3, #4]
 8010b0e:	4798      	blx	r3
 8010b10:	b00a      	add	sp, #40	; 0x28
 8010b12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010b16 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8010b16:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010b1a:	b08b      	sub	sp, #44	; 0x2c
 8010b1c:	2400      	movs	r4, #0
 8010b1e:	461d      	mov	r5, r3
 8010b20:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8010b24:	4688      	mov	r8, r1
 8010b26:	4691      	mov	r9, r2
 8010b28:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 8010b2c:	9404      	str	r4, [sp, #16]
 8010b2e:	4607      	mov	r7, r0
 8010b30:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8010b34:	f7ff ffa8 	bl	8010a88 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010b38:	fb06 9505 	mla	r5, r6, r5, r9
 8010b3c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010b40:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010b44:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8010b48:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8010b4c:	6878      	ldr	r0, [r7, #4]
 8010b4e:	9505      	str	r5, [sp, #20]
 8010b50:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010b54:	f8ad 401c 	strh.w	r4, [sp, #28]
 8010b58:	f8ad 601e 	strh.w	r6, [sp, #30]
 8010b5c:	f8cd 8010 	str.w	r8, [sp, #16]
 8010b60:	f8ad 4020 	strh.w	r4, [sp, #32]
 8010b64:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8010b68:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8010b6c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8010b70:	6803      	ldr	r3, [r0, #0]
 8010b72:	a901      	add	r1, sp, #4
 8010b74:	685b      	ldr	r3, [r3, #4]
 8010b76:	4798      	blx	r3
 8010b78:	b00b      	add	sp, #44	; 0x2c
 8010b7a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08010b80 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8010b80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010b84:	b08a      	sub	sp, #40	; 0x28
 8010b86:	4698      	mov	r8, r3
 8010b88:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 8010b8c:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8010b90:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 8010b94:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8010b98:	2300      	movs	r3, #0
 8010b9a:	2d0b      	cmp	r5, #11
 8010b9c:	4606      	mov	r6, r0
 8010b9e:	9304      	str	r3, [sp, #16]
 8010ba0:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8010ba4:	d138      	bne.n	8010c18 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 8010ba6:	2380      	movs	r3, #128	; 0x80
 8010ba8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8010bac:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010bb0:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010bb4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010bb8:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010bbc:	f88d 0020 	strb.w	r0, [sp, #32]
 8010bc0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8010bc4:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010bc8:	4630      	mov	r0, r6
 8010bca:	9203      	str	r2, [sp, #12]
 8010bcc:	f7ff ff5c 	bl	8010a88 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010bd0:	2c0b      	cmp	r4, #11
 8010bd2:	bf98      	it	ls
 8010bd4:	4b1b      	ldrls	r3, [pc, #108]	; (8010c44 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 8010bd6:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8010bda:	bf98      	it	ls
 8010bdc:	5d19      	ldrbls	r1, [r3, r4]
 8010bde:	f8ad 701e 	strh.w	r7, [sp, #30]
 8010be2:	bf88      	it	hi
 8010be4:	2100      	movhi	r1, #0
 8010be6:	fb02 8307 	mla	r3, r2, r7, r8
 8010bea:	10c9      	asrs	r1, r1, #3
 8010bec:	fb01 0003 	mla	r0, r1, r3, r0
 8010bf0:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 8010bf4:	9005      	str	r0, [sp, #20]
 8010bf6:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8010bfa:	6870      	ldr	r0, [r6, #4]
 8010bfc:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 8010c00:	2300      	movs	r3, #0
 8010c02:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8010c06:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8010c0a:	6803      	ldr	r3, [r0, #0]
 8010c0c:	a901      	add	r1, sp, #4
 8010c0e:	685b      	ldr	r3, [r3, #4]
 8010c10:	4798      	blx	r3
 8010c12:	b00a      	add	sp, #40	; 0x28
 8010c14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010c18:	2d02      	cmp	r5, #2
 8010c1a:	d109      	bne.n	8010c30 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 8010c1c:	28ff      	cmp	r0, #255	; 0xff
 8010c1e:	d105      	bne.n	8010c2c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8010c20:	f1bc 0f00 	cmp.w	ip, #0
 8010c24:	bf14      	ite	ne
 8010c26:	2340      	movne	r3, #64	; 0x40
 8010c28:	2320      	moveq	r3, #32
 8010c2a:	e7bd      	b.n	8010ba8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010c2c:	2340      	movs	r3, #64	; 0x40
 8010c2e:	e7bb      	b.n	8010ba8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010c30:	28ff      	cmp	r0, #255	; 0xff
 8010c32:	d105      	bne.n	8010c40 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 8010c34:	f1bc 0f00 	cmp.w	ip, #0
 8010c38:	bf14      	ite	ne
 8010c3a:	2304      	movne	r3, #4
 8010c3c:	2301      	moveq	r3, #1
 8010c3e:	e7b3      	b.n	8010ba8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010c40:	2304      	movs	r3, #4
 8010c42:	e7b1      	b.n	8010ba8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010c44:	0802e2cc 	.word	0x0802e2cc

08010c48 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8010c48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010c4c:	b08b      	sub	sp, #44	; 0x2c
 8010c4e:	461d      	mov	r5, r3
 8010c50:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8010c54:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8010c58:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 8010c5c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8010c60:	bf14      	ite	ne
 8010c62:	2308      	movne	r3, #8
 8010c64:	2302      	moveq	r3, #2
 8010c66:	2400      	movs	r4, #0
 8010c68:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8010c6c:	4688      	mov	r8, r1
 8010c6e:	4693      	mov	fp, r2
 8010c70:	9404      	str	r4, [sp, #16]
 8010c72:	4607      	mov	r7, r0
 8010c74:	f7ff ff08 	bl	8010a88 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010c78:	2e0b      	cmp	r6, #11
 8010c7a:	bf98      	it	ls
 8010c7c:	4b15      	ldrls	r3, [pc, #84]	; (8010cd4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 8010c7e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8010c82:	bf98      	it	ls
 8010c84:	5d9c      	ldrbls	r4, [r3, r6]
 8010c86:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8010c8a:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010c8e:	fb05 b50a 	mla	r5, r5, sl, fp
 8010c92:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8010c96:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010c9a:	10e4      	asrs	r4, r4, #3
 8010c9c:	fb04 0405 	mla	r4, r4, r5, r0
 8010ca0:	2300      	movs	r3, #0
 8010ca2:	6878      	ldr	r0, [r7, #4]
 8010ca4:	9405      	str	r4, [sp, #20]
 8010ca6:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010caa:	f8ad a01e 	strh.w	sl, [sp, #30]
 8010cae:	f8cd 8010 	str.w	r8, [sp, #16]
 8010cb2:	f88d 9020 	strb.w	r9, [sp, #32]
 8010cb6:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 8010cba:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8010cbe:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 8010cc2:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 8010cc6:	6803      	ldr	r3, [r0, #0]
 8010cc8:	a901      	add	r1, sp, #4
 8010cca:	685b      	ldr	r3, [r3, #4]
 8010ccc:	4798      	blx	r3
 8010cce:	b00b      	add	sp, #44	; 0x2c
 8010cd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010cd4:	0802e2cc 	.word	0x0802e2cc

08010cd8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8010cd8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010cdc:	461e      	mov	r6, r3
 8010cde:	4b0a      	ldr	r3, [pc, #40]	; (8010d08 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8010ce0:	460f      	mov	r7, r1
 8010ce2:	881d      	ldrh	r5, [r3, #0]
 8010ce4:	4690      	mov	r8, r2
 8010ce6:	f7f2 fe41 	bl	800396c <_ZN8touchgfx3HAL3lcdEv>
 8010cea:	6803      	ldr	r3, [r0, #0]
 8010cec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010cee:	4798      	blx	r3
 8010cf0:	280b      	cmp	r0, #11
 8010cf2:	bf9a      	itte	ls
 8010cf4:	4b05      	ldrls	r3, [pc, #20]	; (8010d0c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8010cf6:	5c1c      	ldrbls	r4, [r3, r0]
 8010cf8:	2400      	movhi	r4, #0
 8010cfa:	fb08 7005 	mla	r0, r8, r5, r7
 8010cfe:	10e4      	asrs	r4, r4, #3
 8010d00:	fb04 6000 	mla	r0, r4, r0, r6
 8010d04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010d08:	20012f1e 	.word	0x20012f1e
 8010d0c:	0802e2cc 	.word	0x0802e2cc

08010d10 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8010d10:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010d12:	b08b      	sub	sp, #44	; 0x2c
 8010d14:	461f      	mov	r7, r3
 8010d16:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8010d1a:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8010d1e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010d22:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010d26:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010d2a:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010d2e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010d32:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010d36:	2500      	movs	r5, #0
 8010d38:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8010d3c:	f88d 3020 	strb.w	r3, [sp, #32]
 8010d40:	4604      	mov	r4, r0
 8010d42:	4616      	mov	r6, r2
 8010d44:	9504      	str	r5, [sp, #16]
 8010d46:	f7ff fe9f 	bl	8010a88 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010d4a:	463a      	mov	r2, r7
 8010d4c:	4631      	mov	r1, r6
 8010d4e:	4603      	mov	r3, r0
 8010d50:	4620      	mov	r0, r4
 8010d52:	f7ff ffc1 	bl	8010cd8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010d56:	4b0e      	ldr	r3, [pc, #56]	; (8010d90 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8010d58:	9005      	str	r0, [sp, #20]
 8010d5a:	881b      	ldrh	r3, [r3, #0]
 8010d5c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8010d60:	f7f2 fe04 	bl	800396c <_ZN8touchgfx3HAL3lcdEv>
 8010d64:	6803      	ldr	r3, [r0, #0]
 8010d66:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010d68:	4798      	blx	r3
 8010d6a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8010d6c:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8010d70:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8010d74:	9304      	str	r3, [sp, #16]
 8010d76:	6860      	ldr	r0, [r4, #4]
 8010d78:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8010d7c:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8010d80:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 8010d84:	6803      	ldr	r3, [r0, #0]
 8010d86:	a901      	add	r1, sp, #4
 8010d88:	685b      	ldr	r3, [r3, #4]
 8010d8a:	4798      	blx	r3
 8010d8c:	b00b      	add	sp, #44	; 0x2c
 8010d8e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010d90:	20012f1e 	.word	0x20012f1e

08010d94 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8010d94:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010d96:	b08d      	sub	sp, #52	; 0x34
 8010d98:	466b      	mov	r3, sp
 8010d9a:	e883 0006 	stmia.w	r3, {r1, r2}
 8010d9e:	2300      	movs	r3, #0
 8010da0:	9306      	str	r3, [sp, #24]
 8010da2:	6803      	ldr	r3, [r0, #0]
 8010da4:	f8bd 6000 	ldrh.w	r6, [sp]
 8010da8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010daa:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8010dae:	2501      	movs	r5, #1
 8010db0:	9503      	str	r5, [sp, #12]
 8010db2:	4604      	mov	r4, r0
 8010db4:	4798      	blx	r3
 8010db6:	463a      	mov	r2, r7
 8010db8:	4631      	mov	r1, r6
 8010dba:	4603      	mov	r3, r0
 8010dbc:	4620      	mov	r0, r4
 8010dbe:	f7ff ff8b 	bl	8010cd8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010dc2:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8010dc4:	9307      	str	r3, [sp, #28]
 8010dc6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8010dca:	f8ad 3020 	strh.w	r3, [sp, #32]
 8010dce:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8010dd2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8010dd6:	4b0f      	ldr	r3, [pc, #60]	; (8010e14 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8010dd8:	9004      	str	r0, [sp, #16]
 8010dda:	881b      	ldrh	r3, [r3, #0]
 8010ddc:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8010de0:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8010de4:	f7f2 fdc2 	bl	800396c <_ZN8touchgfx3HAL3lcdEv>
 8010de8:	6803      	ldr	r3, [r0, #0]
 8010dea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010dec:	4798      	blx	r3
 8010dee:	23ff      	movs	r3, #255	; 0xff
 8010df0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8010df4:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8010df8:	6860      	ldr	r0, [r4, #4]
 8010dfa:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8010dfe:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8010e02:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8010e06:	6803      	ldr	r3, [r0, #0]
 8010e08:	a903      	add	r1, sp, #12
 8010e0a:	685b      	ldr	r3, [r3, #4]
 8010e0c:	4798      	blx	r3
 8010e0e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8010e10:	b00d      	add	sp, #52	; 0x34
 8010e12:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010e14:	20012f1e 	.word	0x20012f1e

08010e18 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8010e18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010e1c:	b08c      	sub	sp, #48	; 0x30
 8010e1e:	461e      	mov	r6, r3
 8010e20:	466d      	mov	r5, sp
 8010e22:	2300      	movs	r3, #0
 8010e24:	e885 0006 	stmia.w	r5, {r1, r2}
 8010e28:	9306      	str	r3, [sp, #24]
 8010e2a:	6803      	ldr	r3, [r0, #0]
 8010e2c:	f8bd 7000 	ldrh.w	r7, [sp]
 8010e30:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010e32:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8010e36:	2501      	movs	r5, #1
 8010e38:	9503      	str	r5, [sp, #12]
 8010e3a:	4604      	mov	r4, r0
 8010e3c:	4798      	blx	r3
 8010e3e:	4642      	mov	r2, r8
 8010e40:	4639      	mov	r1, r7
 8010e42:	4603      	mov	r3, r0
 8010e44:	4620      	mov	r0, r4
 8010e46:	f7ff ff47 	bl	8010cd8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010e4a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8010e4e:	f8ad 3020 	strh.w	r3, [sp, #32]
 8010e52:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8010e56:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8010e5a:	4b11      	ldr	r3, [pc, #68]	; (8010ea0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 8010e5c:	9004      	str	r0, [sp, #16]
 8010e5e:	881b      	ldrh	r3, [r3, #0]
 8010e60:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8010e64:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8010e66:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8010e6a:	9607      	str	r6, [sp, #28]
 8010e6c:	f7f2 fd7e 	bl	800396c <_ZN8touchgfx3HAL3lcdEv>
 8010e70:	6803      	ldr	r3, [r0, #0]
 8010e72:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010e74:	4798      	blx	r3
 8010e76:	23ff      	movs	r3, #255	; 0xff
 8010e78:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8010e7c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8010e80:	6860      	ldr	r0, [r4, #4]
 8010e82:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8010e86:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8010e8a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8010e8e:	6803      	ldr	r3, [r0, #0]
 8010e90:	a903      	add	r1, sp, #12
 8010e92:	685b      	ldr	r3, [r3, #4]
 8010e94:	4798      	blx	r3
 8010e96:	4630      	mov	r0, r6
 8010e98:	b00c      	add	sp, #48	; 0x30
 8010e9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010e9e:	bf00      	nop
 8010ea0:	20012f1e 	.word	0x20012f1e

08010ea4 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8010ea4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010ea6:	b085      	sub	sp, #20
 8010ea8:	ac02      	add	r4, sp, #8
 8010eaa:	e884 0006 	stmia.w	r4, {r1, r2}
 8010eae:	4605      	mov	r5, r0
 8010eb0:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8010eb4:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8010eb8:	f7ff fde6 	bl	8010a88 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010ebc:	463a      	mov	r2, r7
 8010ebe:	4603      	mov	r3, r0
 8010ec0:	4631      	mov	r1, r6
 8010ec2:	4628      	mov	r0, r5
 8010ec4:	f7ff ff08 	bl	8010cd8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010ec8:	4a05      	ldr	r2, [pc, #20]	; (8010ee0 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 8010eca:	682b      	ldr	r3, [r5, #0]
 8010ecc:	8812      	ldrh	r2, [r2, #0]
 8010ece:	9200      	str	r2, [sp, #0]
 8010ed0:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8010ed2:	e894 0006 	ldmia.w	r4, {r1, r2}
 8010ed6:	4603      	mov	r3, r0
 8010ed8:	4628      	mov	r0, r5
 8010eda:	47b0      	blx	r6
 8010edc:	b005      	add	sp, #20
 8010ede:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010ee0:	20012f1e 	.word	0x20012f1e

08010ee4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8010ee4:	b570      	push	{r4, r5, r6, lr}
 8010ee6:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 8010eea:	4604      	mov	r4, r0
 8010eec:	b19b      	cbz	r3, 8010f16 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8010eee:	2002      	movs	r0, #2
 8010ef0:	f7ef fccc 	bl	800088c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8010ef4:	2300      	movs	r3, #0
 8010ef6:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8010efa:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 8010efe:	6823      	ldr	r3, [r4, #0]
 8010f00:	4620      	mov	r0, r4
 8010f02:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 8010f06:	f7ff fdbf 	bl	8010a88 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010f0a:	462b      	mov	r3, r5
 8010f0c:	4601      	mov	r1, r0
 8010f0e:	4620      	mov	r0, r4
 8010f10:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010f14:	4718      	bx	r3
 8010f16:	bd70      	pop	{r4, r5, r6, pc}

08010f18 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8010f18:	b538      	push	{r3, r4, r5, lr}
 8010f1a:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 8010f1e:	428b      	cmp	r3, r1
 8010f20:	4604      	mov	r4, r0
 8010f22:	460d      	mov	r5, r1
 8010f24:	d006      	beq.n	8010f34 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 8010f26:	6803      	ldr	r3, [r0, #0]
 8010f28:	b929      	cbnz	r1, 8010f36 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8010f2a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8010f2e:	4798      	blx	r3
 8010f30:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 8010f34:	bd38      	pop	{r3, r4, r5, pc}
 8010f36:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8010f3a:	e7f8      	b.n	8010f2e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08010f3c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8010f3c:	b510      	push	{r4, lr}
 8010f3e:	4b0d      	ldr	r3, [pc, #52]	; (8010f74 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8010f40:	781b      	ldrb	r3, [r3, #0]
 8010f42:	4604      	mov	r4, r0
 8010f44:	b95b      	cbnz	r3, 8010f5e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8010f46:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 8010f4a:	2b02      	cmp	r3, #2
 8010f4c:	d007      	beq.n	8010f5e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8010f4e:	6840      	ldr	r0, [r0, #4]
 8010f50:	f000 f92c 	bl	80111ac <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8010f54:	b118      	cbz	r0, 8010f5e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8010f56:	6862      	ldr	r2, [r4, #4]
 8010f58:	7a53      	ldrb	r3, [r2, #9]
 8010f5a:	2b00      	cmp	r3, #0
 8010f5c:	d0fc      	beq.n	8010f58 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 8010f5e:	f7ef fdcd 	bl	8000afc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8010f62:	4620      	mov	r0, r4
 8010f64:	2100      	movs	r1, #0
 8010f66:	f7ff ffd7 	bl	8010f18 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8010f6a:	4620      	mov	r0, r4
 8010f6c:	f7ff fd8c 	bl	8010a88 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010f70:	bd10      	pop	{r4, pc}
 8010f72:	bf00      	nop
 8010f74:	20012f22 	.word	0x20012f22

08010f78 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 8010f78:	b570      	push	{r4, r5, r6, lr}
 8010f7a:	4604      	mov	r4, r0
 8010f7c:	6803      	ldr	r3, [r0, #0]
 8010f7e:	b919      	cbnz	r1, 8010f88 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 8010f80:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010f82:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010f86:	4718      	bx	r3
 8010f88:	2200      	movs	r2, #0
 8010f8a:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 8010f8e:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 8010f92:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010f94:	4798      	blx	r3
 8010f96:	6863      	ldr	r3, [r4, #4]
 8010f98:	2101      	movs	r1, #1
 8010f9a:	4605      	mov	r5, r0
 8010f9c:	7299      	strb	r1, [r3, #10]
 8010f9e:	4620      	mov	r0, r4
 8010fa0:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 8010fa4:	f7ff ffb8 	bl	8010f18 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8010fa8:	4628      	mov	r0, r5
 8010faa:	bd70      	pop	{r4, r5, r6, pc}

08010fac <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8010fac:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8010fb0:	1a13      	subs	r3, r2, r0
 8010fb2:	4258      	negs	r0, r3
 8010fb4:	4158      	adcs	r0, r3
 8010fb6:	4770      	bx	lr

08010fb8 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8010fb8:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8010fbc:	1a9b      	subs	r3, r3, r2
 8010fbe:	2b00      	cmp	r3, #0
 8010fc0:	bfdc      	itt	le
 8010fc2:	6882      	ldrle	r2, [r0, #8]
 8010fc4:	189b      	addle	r3, r3, r2
 8010fc6:	2b01      	cmp	r3, #1
 8010fc8:	bfcc      	ite	gt
 8010fca:	2000      	movgt	r0, #0
 8010fcc:	2001      	movle	r0, #1
 8010fce:	4770      	bx	lr

08010fd0 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8010fd0:	6902      	ldr	r2, [r0, #16]
 8010fd2:	6843      	ldr	r3, [r0, #4]
 8010fd4:	2024      	movs	r0, #36	; 0x24
 8010fd6:	fb00 3002 	mla	r0, r0, r2, r3
 8010fda:	4770      	bx	lr

08010fdc <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8010fdc:	6803      	ldr	r3, [r0, #0]
 8010fde:	691b      	ldr	r3, [r3, #16]
 8010fe0:	4718      	bx	r3

08010fe2 <_ZN8touchgfx13DMA_Interface7executeEv>:
 8010fe2:	b570      	push	{r4, r5, r6, lr}
 8010fe4:	2301      	movs	r3, #1
 8010fe6:	7203      	strb	r3, [r0, #8]
 8010fe8:	4604      	mov	r4, r0
 8010fea:	6840      	ldr	r0, [r0, #4]
 8010fec:	6803      	ldr	r3, [r0, #0]
 8010fee:	699b      	ldr	r3, [r3, #24]
 8010ff0:	4798      	blx	r3
 8010ff2:	6803      	ldr	r3, [r0, #0]
 8010ff4:	2b40      	cmp	r3, #64	; 0x40
 8010ff6:	4605      	mov	r5, r0
 8010ff8:	d00c      	beq.n	8011014 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010ffa:	d810      	bhi.n	801101e <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8010ffc:	2b04      	cmp	r3, #4
 8010ffe:	d01d      	beq.n	801103c <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8011000:	d804      	bhi.n	801100c <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 8011002:	2b01      	cmp	r3, #1
 8011004:	d006      	beq.n	8011014 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011006:	2b02      	cmp	r3, #2
 8011008:	d02c      	beq.n	8011064 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 801100a:	bd70      	pop	{r4, r5, r6, pc}
 801100c:	2b08      	cmp	r3, #8
 801100e:	d01d      	beq.n	801104c <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8011010:	2b20      	cmp	r3, #32
 8011012:	d1fa      	bne.n	801100a <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 8011014:	6823      	ldr	r3, [r4, #0]
 8011016:	4620      	mov	r0, r4
 8011018:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801101a:	4798      	blx	r3
 801101c:	e013      	b.n	8011046 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 801101e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8011022:	d0f7      	beq.n	8011014 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011024:	d804      	bhi.n	8011030 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 8011026:	2b80      	cmp	r3, #128	; 0x80
 8011028:	d0f4      	beq.n	8011014 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801102a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 801102e:	e7f0      	b.n	8011012 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8011030:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8011034:	d0ee      	beq.n	8011014 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011036:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 801103a:	e7e5      	b.n	8011008 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 801103c:	6823      	ldr	r3, [r4, #0]
 801103e:	7f01      	ldrb	r1, [r0, #28]
 8011040:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011042:	4620      	mov	r0, r4
 8011044:	4798      	blx	r3
 8011046:	6823      	ldr	r3, [r4, #0]
 8011048:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801104a:	e006      	b.n	801105a <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 801104c:	6823      	ldr	r3, [r4, #0]
 801104e:	7f01      	ldrb	r1, [r0, #28]
 8011050:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011052:	4620      	mov	r0, r4
 8011054:	4798      	blx	r3
 8011056:	6823      	ldr	r3, [r4, #0]
 8011058:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801105a:	4629      	mov	r1, r5
 801105c:	4620      	mov	r0, r4
 801105e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011062:	4718      	bx	r3
 8011064:	6823      	ldr	r3, [r4, #0]
 8011066:	4620      	mov	r0, r4
 8011068:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801106a:	4798      	blx	r3
 801106c:	e7f3      	b.n	8011056 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0801106e <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 801106e:	4770      	bx	lr

08011070 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8011070:	4770      	bx	lr

08011072 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 8011072:	4770      	bx	lr

08011074 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8011074:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8011078:	1ad2      	subs	r2, r2, r3
 801107a:	2a00      	cmp	r2, #0
 801107c:	b510      	push	{r4, lr}
 801107e:	bfdc      	itt	le
 8011080:	6884      	ldrle	r4, [r0, #8]
 8011082:	1912      	addle	r2, r2, r4
 8011084:	2a01      	cmp	r2, #1
 8011086:	dd16      	ble.n	80110b6 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8011088:	6842      	ldr	r2, [r0, #4]
 801108a:	2424      	movs	r4, #36	; 0x24
 801108c:	fb04 2303 	mla	r3, r4, r3, r2
 8011090:	f101 0220 	add.w	r2, r1, #32
 8011094:	f851 4b04 	ldr.w	r4, [r1], #4
 8011098:	f843 4b04 	str.w	r4, [r3], #4
 801109c:	4291      	cmp	r1, r2
 801109e:	d1f9      	bne.n	8011094 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 80110a0:	780a      	ldrb	r2, [r1, #0]
 80110a2:	701a      	strb	r2, [r3, #0]
 80110a4:	68c3      	ldr	r3, [r0, #12]
 80110a6:	6882      	ldr	r2, [r0, #8]
 80110a8:	f3bf 8f5b 	dmb	ish
 80110ac:	3301      	adds	r3, #1
 80110ae:	429a      	cmp	r2, r3
 80110b0:	bfd8      	it	le
 80110b2:	1a9b      	suble	r3, r3, r2
 80110b4:	60c3      	str	r3, [r0, #12]
 80110b6:	bd10      	pop	{r4, pc}

080110b8 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 80110b8:	6903      	ldr	r3, [r0, #16]
 80110ba:	6882      	ldr	r2, [r0, #8]
 80110bc:	f3bf 8f5b 	dmb	ish
 80110c0:	3301      	adds	r3, #1
 80110c2:	429a      	cmp	r2, r3
 80110c4:	bfd8      	it	le
 80110c6:	1a9b      	suble	r3, r3, r2
 80110c8:	6103      	str	r3, [r0, #16]
 80110ca:	4770      	bx	lr

080110cc <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 80110cc:	b570      	push	{r4, r5, r6, lr}
 80110ce:	4604      	mov	r4, r0
 80110d0:	460e      	mov	r6, r1
 80110d2:	6860      	ldr	r0, [r4, #4]
 80110d4:	6803      	ldr	r3, [r0, #0]
 80110d6:	685b      	ldr	r3, [r3, #4]
 80110d8:	4798      	blx	r3
 80110da:	2800      	cmp	r0, #0
 80110dc:	d1f9      	bne.n	80110d2 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 80110de:	4d0d      	ldr	r5, [pc, #52]	; (8011114 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 80110e0:	6828      	ldr	r0, [r5, #0]
 80110e2:	6803      	ldr	r3, [r0, #0]
 80110e4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80110e6:	4798      	blx	r3
 80110e8:	f7ef fd16 	bl	8000b18 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 80110ec:	6828      	ldr	r0, [r5, #0]
 80110ee:	2101      	movs	r1, #1
 80110f0:	f7ff ff12 	bl	8010f18 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80110f4:	6860      	ldr	r0, [r4, #4]
 80110f6:	6803      	ldr	r3, [r0, #0]
 80110f8:	4631      	mov	r1, r6
 80110fa:	689b      	ldr	r3, [r3, #8]
 80110fc:	4798      	blx	r3
 80110fe:	6823      	ldr	r3, [r4, #0]
 8011100:	4620      	mov	r0, r4
 8011102:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011104:	4798      	blx	r3
 8011106:	6828      	ldr	r0, [r5, #0]
 8011108:	6803      	ldr	r3, [r0, #0]
 801110a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801110e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8011110:	4718      	bx	r3
 8011112:	bf00      	nop
 8011114:	20012f24 	.word	0x20012f24

08011118 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8011118:	b508      	push	{r3, lr}
 801111a:	f7ef fcef 	bl	8000afc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 801111e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011122:	f7ef bcf3 	b.w	8000b0c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08011126 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8011126:	b510      	push	{r4, lr}
 8011128:	2114      	movs	r1, #20
 801112a:	4604      	mov	r4, r0
 801112c:	f018 f9bf 	bl	80294ae <_ZdlPvj>
 8011130:	4620      	mov	r0, r4
 8011132:	bd10      	pop	{r4, pc}

08011134 <_ZN8touchgfx13DMA_Interface5startEv>:
 8011134:	b510      	push	{r4, lr}
 8011136:	4604      	mov	r4, r0
 8011138:	6840      	ldr	r0, [r0, #4]
 801113a:	6803      	ldr	r3, [r0, #0]
 801113c:	681b      	ldr	r3, [r3, #0]
 801113e:	4798      	blx	r3
 8011140:	b948      	cbnz	r0, 8011156 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011142:	7a63      	ldrb	r3, [r4, #9]
 8011144:	b13b      	cbz	r3, 8011156 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011146:	7a23      	ldrb	r3, [r4, #8]
 8011148:	b92b      	cbnz	r3, 8011156 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801114a:	6823      	ldr	r3, [r4, #0]
 801114c:	4620      	mov	r0, r4
 801114e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011150:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011154:	4718      	bx	r3
 8011156:	bd10      	pop	{r4, pc}

08011158 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8011158:	b570      	push	{r4, r5, r6, lr}
 801115a:	4604      	mov	r4, r0
 801115c:	6840      	ldr	r0, [r0, #4]
 801115e:	6803      	ldr	r3, [r0, #0]
 8011160:	681b      	ldr	r3, [r3, #0]
 8011162:	4798      	blx	r3
 8011164:	4605      	mov	r5, r0
 8011166:	b930      	cbnz	r0, 8011176 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8011168:	7a23      	ldrb	r3, [r4, #8]
 801116a:	b123      	cbz	r3, 8011176 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 801116c:	6860      	ldr	r0, [r4, #4]
 801116e:	6803      	ldr	r3, [r0, #0]
 8011170:	695b      	ldr	r3, [r3, #20]
 8011172:	4798      	blx	r3
 8011174:	7225      	strb	r5, [r4, #8]
 8011176:	6860      	ldr	r0, [r4, #4]
 8011178:	6803      	ldr	r3, [r0, #0]
 801117a:	681b      	ldr	r3, [r3, #0]
 801117c:	4798      	blx	r3
 801117e:	b928      	cbnz	r0, 801118c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8011180:	6823      	ldr	r3, [r4, #0]
 8011182:	4620      	mov	r0, r4
 8011184:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011186:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801118a:	4718      	bx	r3
 801118c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011190:	f7ef bcca 	b.w	8000b28 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

08011194 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8011194:	b510      	push	{r4, lr}
 8011196:	4c04      	ldr	r4, [pc, #16]	; (80111a8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8011198:	6082      	str	r2, [r0, #8]
 801119a:	2200      	movs	r2, #0
 801119c:	e9c0 4100 	strd	r4, r1, [r0]
 80111a0:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80111a4:	bd10      	pop	{r4, pc}
 80111a6:	bf00      	nop
 80111a8:	0802e2e0 	.word	0x0802e2e0

080111ac <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 80111ac:	6840      	ldr	r0, [r0, #4]
 80111ae:	6803      	ldr	r3, [r0, #0]
 80111b0:	681b      	ldr	r3, [r3, #0]
 80111b2:	4718      	bx	r3

080111b4 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 80111b4:	4b06      	ldr	r3, [pc, #24]	; (80111d0 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 80111b6:	60c1      	str	r1, [r0, #12]
 80111b8:	094a      	lsrs	r2, r1, #5
 80111ba:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 80111be:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80111c2:	4313      	orrs	r3, r2
 80111c4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80111c8:	4319      	orrs	r1, r3
 80111ca:	8201      	strh	r1, [r0, #16]
 80111cc:	4770      	bx	lr
 80111ce:	bf00      	nop
 80111d0:	fffff800 	.word	0xfffff800

080111d4 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 80111d4:	f1a0 0008 	sub.w	r0, r0, #8
 80111d8:	e7ec      	b.n	80111b4 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 80111da:	bf00      	nop

080111dc <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 80111dc:	b508      	push	{r3, lr}
 80111de:	4b05      	ldr	r3, [pc, #20]	; (80111f4 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 80111e0:	6818      	ldr	r0, [r3, #0]
 80111e2:	6803      	ldr	r3, [r0, #0]
 80111e4:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 80111e8:	4798      	blx	r3
 80111ea:	1e43      	subs	r3, r0, #1
 80111ec:	4258      	negs	r0, r3
 80111ee:	4158      	adcs	r0, r3
 80111f0:	bd08      	pop	{r3, pc}
 80111f2:	bf00      	nop
 80111f4:	20012f24 	.word	0x20012f24

080111f8 <_ZN8touchgfx13PainterRGB565D1Ev>:
 80111f8:	4770      	bx	lr

080111fa <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 80111fa:	3808      	subs	r0, #8
 80111fc:	4770      	bx	lr

080111fe <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 80111fe:	b430      	push	{r4, r5}
 8011200:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 8011204:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 8011208:	8a02      	ldrh	r2, [r0, #16]
 801120a:	9202      	str	r2, [sp, #8]
 801120c:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8011210:	68c2      	ldr	r2, [r0, #12]
 8011212:	4629      	mov	r1, r5
 8011214:	4620      	mov	r0, r4
 8011216:	bc30      	pop	{r4, r5}
 8011218:	f7ef bf4a 	b.w	80010b0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0801121c <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 801121c:	f7ef bf46 	b.w	80010ac <_ZN8touchgfx5paint8tearDownEv>

08011220 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8011220:	b510      	push	{r4, lr}
 8011222:	2114      	movs	r1, #20
 8011224:	4604      	mov	r4, r0
 8011226:	f018 f942 	bl	80294ae <_ZdlPvj>
 801122a:	4620      	mov	r0, r4
 801122c:	bd10      	pop	{r4, pc}

0801122e <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 801122e:	f1a0 0008 	sub.w	r0, r0, #8
 8011232:	e7f5      	b.n	8011220 <_ZN8touchgfx13PainterRGB565D0Ev>

08011234 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 8011234:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8011236:	6803      	ldr	r3, [r0, #0]
 8011238:	460d      	mov	r5, r1
 801123a:	4604      	mov	r4, r0
 801123c:	4601      	mov	r1, r0
 801123e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8011240:	a802      	add	r0, sp, #8
 8011242:	4798      	blx	r3
 8011244:	6828      	ldr	r0, [r5, #0]
 8011246:	6869      	ldr	r1, [r5, #4]
 8011248:	466b      	mov	r3, sp
 801124a:	c303      	stmia	r3!, {r0, r1}
 801124c:	4668      	mov	r0, sp
 801124e:	4619      	mov	r1, r3
 8011250:	f7fe ffa4 	bl	801019c <_ZN8touchgfx4RectaNERKS0_>
 8011254:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8011256:	b188      	cbz	r0, 801127c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011258:	6803      	ldr	r3, [r0, #0]
 801125a:	1d21      	adds	r1, r4, #4
 801125c:	68db      	ldr	r3, [r3, #12]
 801125e:	4798      	blx	r3
 8011260:	b160      	cbz	r0, 801127c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011262:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8011266:	2b00      	cmp	r3, #0
 8011268:	dd08      	ble.n	801127c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801126a:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 801126e:	2d00      	cmp	r5, #0
 8011270:	dd04      	ble.n	801127c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011272:	4a2b      	ldr	r2, [pc, #172]	; (8011320 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 8011274:	7812      	ldrb	r2, [r2, #0]
 8011276:	b11a      	cbz	r2, 8011280 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 8011278:	2a01      	cmp	r2, #1
 801127a:	d029      	beq.n	80112d0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 801127c:	b004      	add	sp, #16
 801127e:	bd70      	pop	{r4, r5, r6, pc}
 8011280:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011284:	441d      	add	r5, r3
 8011286:	b2ad      	uxth	r5, r5
 8011288:	b22e      	sxth	r6, r5
 801128a:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 801128e:	42b3      	cmp	r3, r6
 8011290:	daf4      	bge.n	801127c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011292:	6823      	ldr	r3, [r4, #0]
 8011294:	4669      	mov	r1, sp
 8011296:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011298:	4620      	mov	r0, r4
 801129a:	4798      	blx	r3
 801129c:	b940      	cbnz	r0, 80112b0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 801129e:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 80112a2:	2b01      	cmp	r3, #1
 80112a4:	d004      	beq.n	80112b0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 80112a6:	3301      	adds	r3, #1
 80112a8:	105b      	asrs	r3, r3, #1
 80112aa:	f8ad 3006 	strh.w	r3, [sp, #6]
 80112ae:	e7f0      	b.n	8011292 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 80112b0:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80112b4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80112b8:	4413      	add	r3, r2
 80112ba:	b29b      	uxth	r3, r3
 80112bc:	441a      	add	r2, r3
 80112be:	b212      	sxth	r2, r2
 80112c0:	4296      	cmp	r6, r2
 80112c2:	f8ad 3002 	strh.w	r3, [sp, #2]
 80112c6:	dae0      	bge.n	801128a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 80112c8:	1aeb      	subs	r3, r5, r3
 80112ca:	f8ad 3006 	strh.w	r3, [sp, #6]
 80112ce:	e7dc      	b.n	801128a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 80112d0:	f8bd 5000 	ldrh.w	r5, [sp]
 80112d4:	441d      	add	r5, r3
 80112d6:	b2ad      	uxth	r5, r5
 80112d8:	b22e      	sxth	r6, r5
 80112da:	f9bd 3000 	ldrsh.w	r3, [sp]
 80112de:	42b3      	cmp	r3, r6
 80112e0:	dacc      	bge.n	801127c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80112e2:	6823      	ldr	r3, [r4, #0]
 80112e4:	4669      	mov	r1, sp
 80112e6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80112e8:	4620      	mov	r0, r4
 80112ea:	4798      	blx	r3
 80112ec:	b940      	cbnz	r0, 8011300 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 80112ee:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80112f2:	2b01      	cmp	r3, #1
 80112f4:	d004      	beq.n	8011300 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 80112f6:	3301      	adds	r3, #1
 80112f8:	105b      	asrs	r3, r3, #1
 80112fa:	f8ad 3004 	strh.w	r3, [sp, #4]
 80112fe:	e7f0      	b.n	80112e2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8011300:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8011304:	f8bd 3000 	ldrh.w	r3, [sp]
 8011308:	4413      	add	r3, r2
 801130a:	b29b      	uxth	r3, r3
 801130c:	441a      	add	r2, r3
 801130e:	b212      	sxth	r2, r2
 8011310:	4296      	cmp	r6, r2
 8011312:	f8ad 3000 	strh.w	r3, [sp]
 8011316:	dae0      	bge.n	80112da <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8011318:	1aeb      	subs	r3, r5, r3
 801131a:	f8ad 3004 	strh.w	r3, [sp, #4]
 801131e:	e7dc      	b.n	80112da <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8011320:	20012f1c 	.word	0x20012f1c

08011324 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 8011324:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8011326:	6803      	ldr	r3, [r0, #0]
 8011328:	4604      	mov	r4, r0
 801132a:	4601      	mov	r1, r0
 801132c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 801132e:	4668      	mov	r0, sp
 8011330:	4798      	blx	r3
 8011332:	2100      	movs	r1, #0
 8011334:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8011338:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 801133c:	9102      	str	r1, [sp, #8]
 801133e:	4668      	mov	r0, sp
 8011340:	a902      	add	r1, sp, #8
 8011342:	f8ad 200c 	strh.w	r2, [sp, #12]
 8011346:	f8ad 300e 	strh.w	r3, [sp, #14]
 801134a:	f7fe ff27 	bl	801019c <_ZN8touchgfx4RectaNERKS0_>
 801134e:	6823      	ldr	r3, [r4, #0]
 8011350:	4669      	mov	r1, sp
 8011352:	691b      	ldr	r3, [r3, #16]
 8011354:	4620      	mov	r0, r4
 8011356:	4798      	blx	r3
 8011358:	b004      	add	sp, #16
 801135a:	bd10      	pop	{r4, pc}

0801135c <_ZN8touchgfx12CanvasWidgetC1Ev>:
 801135c:	2101      	movs	r1, #1
 801135e:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8011362:	490b      	ldr	r1, [pc, #44]	; (8011390 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 8011364:	6001      	str	r1, [r0, #0]
 8011366:	2200      	movs	r2, #0
 8011368:	21ff      	movs	r1, #255	; 0xff
 801136a:	8082      	strh	r2, [r0, #4]
 801136c:	80c2      	strh	r2, [r0, #6]
 801136e:	8102      	strh	r2, [r0, #8]
 8011370:	8142      	strh	r2, [r0, #10]
 8011372:	8182      	strh	r2, [r0, #12]
 8011374:	81c2      	strh	r2, [r0, #14]
 8011376:	8202      	strh	r2, [r0, #16]
 8011378:	8242      	strh	r2, [r0, #18]
 801137a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801137e:	61c2      	str	r2, [r0, #28]
 8011380:	8402      	strh	r2, [r0, #32]
 8011382:	8442      	strh	r2, [r0, #34]	; 0x22
 8011384:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8011388:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 801138c:	6282      	str	r2, [r0, #40]	; 0x28
 801138e:	4770      	bx	lr
 8011390:	0802e33c 	.word	0x0802e33c

08011394 <_ZNK8touchgfx4Line14getMinimalRectEv>:
 8011394:	f101 0364 	add.w	r3, r1, #100	; 0x64
 8011398:	4602      	mov	r2, r0
 801139a:	cb03      	ldmia	r3!, {r0, r1}
 801139c:	6010      	str	r0, [r2, #0]
 801139e:	6051      	str	r1, [r2, #4]
 80113a0:	4610      	mov	r0, r2
 80113a2:	4770      	bx	lr

080113a4 <_ZN8touchgfx4LineD1Ev>:
 80113a4:	4770      	bx	lr

080113a6 <_ZN8touchgfx4LineD0Ev>:
 80113a6:	b510      	push	{r4, lr}
 80113a8:	2170      	movs	r1, #112	; 0x70
 80113aa:	4604      	mov	r4, r0
 80113ac:	f018 f87f 	bl	80294ae <_ZdlPvj>
 80113b0:	4620      	mov	r0, r4
 80113b2:	bd10      	pop	{r4, pc}

080113b4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 80113b4:	b507      	push	{r0, r1, r2, lr}
 80113b6:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 80113ba:	ab01      	add	r3, sp, #4
 80113bc:	6809      	ldr	r1, [r1, #0]
 80113be:	6800      	ldr	r0, [r0, #0]
 80113c0:	f005 fab4 	bl	801692c <_ZN8touchgfx6muldivElllRl>
 80113c4:	b003      	add	sp, #12
 80113c6:	f85d fb04 	ldr.w	pc, [sp], #4

080113ca <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 80113ca:	6800      	ldr	r0, [r0, #0]
 80113cc:	2800      	cmp	r0, #0
 80113ce:	bfb9      	ittee	lt
 80113d0:	2320      	movlt	r3, #32
 80113d2:	fb90 f0f3 	sdivlt	r0, r0, r3
 80113d6:	301f      	addge	r0, #31
 80113d8:	1140      	asrge	r0, r0, #5
 80113da:	4770      	bx	lr

080113dc <_ZNK8touchgfx4Line17invalidateContentEv>:
 80113dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80113e0:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 80113e4:	b089      	sub	sp, #36	; 0x24
 80113e6:	4604      	mov	r4, r0
 80113e8:	b353      	cbz	r3, 8011440 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 80113ea:	6803      	ldr	r3, [r0, #0]
 80113ec:	4601      	mov	r1, r0
 80113ee:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80113f0:	a802      	add	r0, sp, #8
 80113f2:	4798      	blx	r3
 80113f4:	2220      	movs	r2, #32
 80113f6:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 80113fa:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80113fc:	fb9a f0f2 	sdiv	r0, sl, r2
 8011400:	fb91 f5f2 	sdiv	r5, r1, r2
 8011404:	1b40      	subs	r0, r0, r5
 8011406:	2800      	cmp	r0, #0
 8011408:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801140a:	fb93 f6f2 	sdiv	r6, r3, r2
 801140e:	bfb8      	it	lt
 8011410:	4240      	neglt	r0, r0
 8011412:	0076      	lsls	r6, r6, #1
 8011414:	4286      	cmp	r6, r0
 8011416:	f8d4 b000 	ldr.w	fp, [r4]
 801141a:	dc0c      	bgt.n	8011436 <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 801141c:	6b25      	ldr	r5, [r4, #48]	; 0x30
 801141e:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 8011422:	fb95 f0f2 	sdiv	r0, r5, r2
 8011426:	fb98 f7f2 	sdiv	r7, r8, r2
 801142a:	1bc0      	subs	r0, r0, r7
 801142c:	2800      	cmp	r0, #0
 801142e:	bfb8      	it	lt
 8011430:	4240      	neglt	r0, r0
 8011432:	4286      	cmp	r6, r0
 8011434:	dd07      	ble.n	8011446 <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 8011436:	f8db 3010 	ldr.w	r3, [fp, #16]
 801143a:	a902      	add	r1, sp, #8
 801143c:	4620      	mov	r0, r4
 801143e:	4798      	blx	r3
 8011440:	b009      	add	sp, #36	; 0x24
 8011442:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011446:	3301      	adds	r3, #1
 8011448:	2002      	movs	r0, #2
 801144a:	f10d 0920 	add.w	r9, sp, #32
 801144e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8011452:	4103      	asrs	r3, r0
 8011454:	f849 3d08 	str.w	r3, [r9, #-8]!
 8011458:	eb01 060a 	add.w	r6, r1, sl
 801145c:	eb08 0705 	add.w	r7, r8, r5
 8011460:	fb96 f6f0 	sdiv	r6, r6, r0
 8011464:	fb97 f7f0 	sdiv	r7, r7, r0
 8011468:	4648      	mov	r0, r9
 801146a:	9101      	str	r1, [sp, #4]
 801146c:	b236      	sxth	r6, r6
 801146e:	b23f      	sxth	r7, r7
 8011470:	fb96 f6f2 	sdiv	r6, r6, r2
 8011474:	fb97 f7f2 	sdiv	r7, r7, r2
 8011478:	f7ff ffa7 	bl	80113ca <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 801147c:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8011480:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 8011484:	9901      	ldr	r1, [sp, #4]
 8011486:	4293      	cmp	r3, r2
 8011488:	fa1f fe87 	uxth.w	lr, r7
 801148c:	fa1f fc86 	uxth.w	ip, r6
 8011490:	eba1 0a0a 	sub.w	sl, r1, sl
 8011494:	b280      	uxth	r0, r0
 8011496:	da54      	bge.n	8011542 <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 8011498:	ebac 0100 	sub.w	r1, ip, r0
 801149c:	b289      	uxth	r1, r1
 801149e:	4460      	add	r0, ip
 80114a0:	f1ba 0f00 	cmp.w	sl, #0
 80114a4:	b20e      	sxth	r6, r1
 80114a6:	b280      	uxth	r0, r0
 80114a8:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 80114ac:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 80114b0:	da29      	bge.n	8011506 <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 80114b2:	eba8 0505 	sub.w	r5, r8, r5
 80114b6:	2d00      	cmp	r5, #0
 80114b8:	da2a      	bge.n	8011510 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 80114ba:	fa1f f88a 	uxth.w	r8, sl
 80114be:	eba0 0008 	sub.w	r0, r0, r8
 80114c2:	fa1f f58c 	uxth.w	r5, ip
 80114c6:	4443      	add	r3, r8
 80114c8:	f8ad 0014 	strh.w	r0, [sp, #20]
 80114cc:	1a59      	subs	r1, r3, r1
 80114ce:	ebae 0005 	sub.w	r0, lr, r5
 80114d2:	f8ad a010 	strh.w	sl, [sp, #16]
 80114d6:	f8ad c012 	strh.w	ip, [sp, #18]
 80114da:	f8ad 0016 	strh.w	r0, [sp, #22]
 80114de:	f8ad 6018 	strh.w	r6, [sp, #24]
 80114e2:	f8ad 701a 	strh.w	r7, [sp, #26]
 80114e6:	f8ad 101c 	strh.w	r1, [sp, #28]
 80114ea:	442a      	add	r2, r5
 80114ec:	eba2 0e0e 	sub.w	lr, r2, lr
 80114f0:	f8ad e01e 	strh.w	lr, [sp, #30]
 80114f4:	f8db 3010 	ldr.w	r3, [fp, #16]
 80114f8:	a904      	add	r1, sp, #16
 80114fa:	4620      	mov	r0, r4
 80114fc:	4798      	blx	r3
 80114fe:	6823      	ldr	r3, [r4, #0]
 8011500:	4649      	mov	r1, r9
 8011502:	691b      	ldr	r3, [r3, #16]
 8011504:	e79a      	b.n	801143c <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 8011506:	d003      	beq.n	8011510 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8011508:	eba8 0505 	sub.w	r5, r8, r5
 801150c:	2d00      	cmp	r5, #0
 801150e:	dcd4      	bgt.n	80114ba <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 8011510:	fa1f f88a 	uxth.w	r8, sl
 8011514:	4443      	add	r3, r8
 8011516:	fa1f f58c 	uxth.w	r5, ip
 801151a:	1a59      	subs	r1, r3, r1
 801151c:	eba0 0008 	sub.w	r0, r0, r8
 8011520:	ebae 0305 	sub.w	r3, lr, r5
 8011524:	f8ad 6010 	strh.w	r6, [sp, #16]
 8011528:	f8ad c012 	strh.w	ip, [sp, #18]
 801152c:	f8ad 1014 	strh.w	r1, [sp, #20]
 8011530:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011534:	f8ad a018 	strh.w	sl, [sp, #24]
 8011538:	f8ad 701a 	strh.w	r7, [sp, #26]
 801153c:	f8ad 001c 	strh.w	r0, [sp, #28]
 8011540:	e7d3      	b.n	80114ea <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 8011542:	ebae 0100 	sub.w	r1, lr, r0
 8011546:	b289      	uxth	r1, r1
 8011548:	4470      	add	r0, lr
 801154a:	f1ba 0f00 	cmp.w	sl, #0
 801154e:	b20f      	sxth	r7, r1
 8011550:	b280      	uxth	r0, r0
 8011552:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 8011556:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 801155a:	da20      	bge.n	801159e <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 801155c:	eba8 0505 	sub.w	r5, r8, r5
 8011560:	2d00      	cmp	r5, #0
 8011562:	da21      	bge.n	80115a8 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8011564:	fa1f f88e 	uxth.w	r8, lr
 8011568:	fa1f f58a 	uxth.w	r5, sl
 801156c:	4443      	add	r3, r8
 801156e:	442a      	add	r2, r5
 8011570:	f8ad e010 	strh.w	lr, [sp, #16]
 8011574:	1b40      	subs	r0, r0, r5
 8011576:	ebac 0e08 	sub.w	lr, ip, r8
 801157a:	1a51      	subs	r1, r2, r1
 801157c:	eba3 0c0c 	sub.w	ip, r3, ip
 8011580:	f8ad a012 	strh.w	sl, [sp, #18]
 8011584:	f8ad e014 	strh.w	lr, [sp, #20]
 8011588:	f8ad 0016 	strh.w	r0, [sp, #22]
 801158c:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011590:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011594:	f8ad c01c 	strh.w	ip, [sp, #28]
 8011598:	f8ad 101e 	strh.w	r1, [sp, #30]
 801159c:	e7aa      	b.n	80114f4 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 801159e:	d003      	beq.n	80115a8 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 80115a0:	eba8 0505 	sub.w	r5, r8, r5
 80115a4:	2d00      	cmp	r5, #0
 80115a6:	dcdd      	bgt.n	8011564 <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 80115a8:	fa1f f58e 	uxth.w	r5, lr
 80115ac:	fa1f f88a 	uxth.w	r8, sl
 80115b0:	4442      	add	r2, r8
 80115b2:	442b      	add	r3, r5
 80115b4:	f8ad 7012 	strh.w	r7, [sp, #18]
 80115b8:	1a51      	subs	r1, r2, r1
 80115ba:	ebac 0705 	sub.w	r7, ip, r5
 80115be:	eba0 0008 	sub.w	r0, r0, r8
 80115c2:	eba3 0c0c 	sub.w	ip, r3, ip
 80115c6:	f8ad e010 	strh.w	lr, [sp, #16]
 80115ca:	f8ad 7014 	strh.w	r7, [sp, #20]
 80115ce:	f8ad 1016 	strh.w	r1, [sp, #22]
 80115d2:	f8ad 6018 	strh.w	r6, [sp, #24]
 80115d6:	f8ad a01a 	strh.w	sl, [sp, #26]
 80115da:	f8ad c01c 	strh.w	ip, [sp, #28]
 80115de:	f8ad 001e 	strh.w	r0, [sp, #30]
 80115e2:	e787      	b.n	80114f4 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

080115e4 <_ZN8touchgfx7CWRUtil4sineEi>:
 80115e4:	f44f 73b4 	mov.w	r3, #360	; 0x168
 80115e8:	fb90 f2f3 	sdiv	r2, r0, r3
 80115ec:	fb02 0013 	mls	r0, r2, r3, r0
 80115f0:	2800      	cmp	r0, #0
 80115f2:	bfb8      	it	lt
 80115f4:	18c0      	addlt	r0, r0, r3
 80115f6:	285a      	cmp	r0, #90	; 0x5a
 80115f8:	4b09      	ldr	r3, [pc, #36]	; (8011620 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 80115fa:	dc02      	bgt.n	8011602 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 80115fc:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8011600:	4770      	bx	lr
 8011602:	28b4      	cmp	r0, #180	; 0xb4
 8011604:	dc02      	bgt.n	801160c <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 8011606:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 801160a:	e7f7      	b.n	80115fc <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 801160c:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 8011610:	bfd4      	ite	le
 8011612:	38b4      	suble	r0, #180	; 0xb4
 8011614:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 8011618:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801161c:	4240      	negs	r0, r0
 801161e:	4770      	bx	lr
 8011620:	0802e408 	.word	0x0802e408

08011624 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 8011624:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 8011628:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801162a:	fb90 f2f3 	sdiv	r2, r0, r3
 801162e:	fb02 0013 	mls	r0, r2, r3, r0
 8011632:	2800      	cmp	r0, #0
 8011634:	bfb8      	it	lt
 8011636:	18c0      	addlt	r0, r0, r3
 8011638:	1144      	asrs	r4, r0, #5
 801163a:	f000 061f 	and.w	r6, r0, #31
 801163e:	4620      	mov	r0, r4
 8011640:	f7ff ffd0 	bl	80115e4 <_ZN8touchgfx7CWRUtil4sineEi>
 8011644:	4605      	mov	r5, r0
 8011646:	b90e      	cbnz	r6, 801164c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 8011648:	b002      	add	sp, #8
 801164a:	bd70      	pop	{r4, r5, r6, pc}
 801164c:	1c60      	adds	r0, r4, #1
 801164e:	f7ff ffc9 	bl	80115e4 <_ZN8touchgfx7CWRUtil4sineEi>
 8011652:	ab01      	add	r3, sp, #4
 8011654:	2220      	movs	r2, #32
 8011656:	4631      	mov	r1, r6
 8011658:	1b40      	subs	r0, r0, r5
 801165a:	f005 f967 	bl	801692c <_ZN8touchgfx6muldivElllRl>
 801165e:	4428      	add	r0, r5
 8011660:	e7f2      	b.n	8011648 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

08011662 <_ZN8touchgfx7CWRUtil5isqrtEm>:
 8011662:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 8011666:	bf2c      	ite	cs
 8011668:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 801166c:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 8011670:	2300      	movs	r3, #0
 8011672:	1899      	adds	r1, r3, r2
 8011674:	4288      	cmp	r0, r1
 8011676:	bf24      	itt	cs
 8011678:	1853      	addcs	r3, r2, r1
 801167a:	1a40      	subcs	r0, r0, r1
 801167c:	0892      	lsrs	r2, r2, #2
 801167e:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8011682:	d1f6      	bne.n	8011672 <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 8011684:	4618      	mov	r0, r3
 8011686:	4770      	bx	lr

08011688 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 8011688:	b510      	push	{r4, lr}
 801168a:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 801168e:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 8011692:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 8011696:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 801169a:	13a4      	asrs	r4, r4, #14
 801169c:	139b      	asrs	r3, r3, #14
 801169e:	429c      	cmp	r4, r3
 80116a0:	bfb8      	it	lt
 80116a2:	461c      	movlt	r4, r3
 80116a4:	2c01      	cmp	r4, #1
 80116a6:	dd07      	ble.n	80116b8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 80116a8:	fb91 f1f4 	sdiv	r1, r1, r4
 80116ac:	fb90 f0f4 	sdiv	r0, r0, r4
 80116b0:	f7ff ffea 	bl	8011688 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 80116b4:	4360      	muls	r0, r4
 80116b6:	bd10      	pop	{r4, pc}
 80116b8:	4340      	muls	r0, r0
 80116ba:	fb01 0001 	mla	r0, r1, r1, r0
 80116be:	f7ff ffd0 	bl	8011662 <_ZN8touchgfx7CWRUtil5isqrtEm>
 80116c2:	e7f8      	b.n	80116b6 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

080116c4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 80116c4:	2800      	cmp	r0, #0
 80116c6:	b508      	push	{r3, lr}
 80116c8:	da05      	bge.n	80116d6 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 80116ca:	4240      	negs	r0, r0
 80116cc:	f7ff fffa 	bl	80116c4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 80116d0:	4240      	negs	r0, r0
 80116d2:	b240      	sxtb	r0, r0
 80116d4:	bd08      	pop	{r3, pc}
 80116d6:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 80116da:	dc11      	bgt.n	8011700 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 80116dc:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 80116e0:	dd09      	ble.n	80116f6 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 80116e2:	4340      	muls	r0, r0
 80116e4:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 80116e8:	f7ff ffbb 	bl	8011662 <_ZN8touchgfx7CWRUtil5isqrtEm>
 80116ec:	f7ff ffea 	bl	80116c4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 80116f0:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 80116f4:	e7ed      	b.n	80116d2 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 80116f6:	3003      	adds	r0, #3
 80116f8:	10c0      	asrs	r0, r0, #3
 80116fa:	4b02      	ldr	r3, [pc, #8]	; (8011704 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 80116fc:	5618      	ldrsb	r0, [r3, r0]
 80116fe:	e7e9      	b.n	80116d4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8011700:	2000      	movs	r0, #0
 8011702:	e7e7      	b.n	80116d4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8011704:	0802e3ac 	.word	0x0802e3ac

08011708 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 8011708:	4281      	cmp	r1, r0
 801170a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801170c:	460c      	mov	r4, r1
 801170e:	4615      	mov	r5, r2
 8011710:	dd07      	ble.n	8011722 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 8011712:	4601      	mov	r1, r0
 8011714:	4620      	mov	r0, r4
 8011716:	f7ff fff7 	bl	8011708 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 801171a:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 801171e:	b003      	add	sp, #12
 8011720:	bd30      	pop	{r4, r5, pc}
 8011722:	f7ff ffb1 	bl	8011688 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8011726:	6028      	str	r0, [r5, #0]
 8011728:	2800      	cmp	r0, #0
 801172a:	d0f8      	beq.n	801171e <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 801172c:	4602      	mov	r2, r0
 801172e:	ab01      	add	r3, sp, #4
 8011730:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8011734:	4620      	mov	r0, r4
 8011736:	f005 f8f9 	bl	801692c <_ZN8touchgfx6muldivElllRl>
 801173a:	f7ff ffc3 	bl	80116c4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 801173e:	e7ee      	b.n	801171e <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

08011740 <_ZN8touchgfx4LineC1Ev>:
 8011740:	b510      	push	{r4, lr}
 8011742:	4604      	mov	r4, r0
 8011744:	f7ff fe0a 	bl	801135c <_ZN8touchgfx12CanvasWidgetC1Ev>
 8011748:	4b0c      	ldr	r3, [pc, #48]	; (801177c <_ZN8touchgfx4LineC1Ev+0x3c>)
 801174a:	6023      	str	r3, [r4, #0]
 801174c:	2220      	movs	r2, #32
 801174e:	2300      	movs	r3, #0
 8011750:	63e2      	str	r2, [r4, #60]	; 0x3c
 8011752:	2212      	movs	r2, #18
 8011754:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8011758:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 801175c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8011760:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 8011764:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 8011768:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 801176c:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 8011770:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 8011774:	66e2      	str	r2, [r4, #108]	; 0x6c
 8011776:	60a3      	str	r3, [r4, #8]
 8011778:	4620      	mov	r0, r4
 801177a:	bd10      	pop	{r4, pc}
 801177c:	0802e4c8 	.word	0x0802e4c8

08011780 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 8011780:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8011784:	6b47      	ldr	r7, [r0, #52]	; 0x34
 8011786:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8011788:	6b85      	ldr	r5, [r0, #56]	; 0x38
 801178a:	6b02      	ldr	r2, [r0, #48]	; 0x30
 801178c:	1aff      	subs	r7, r7, r3
 801178e:	4604      	mov	r4, r0
 8011790:	eba5 0502 	sub.w	r5, r5, r2
 8011794:	d142      	bne.n	801181c <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 8011796:	b955      	cbnz	r5, 80117ae <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 8011798:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 801179c:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 80117a0:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 80117a4:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 80117a8:	b002      	add	sp, #8
 80117aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80117ae:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 80117b2:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 80117b6:	4629      	mov	r1, r5
 80117b8:	4642      	mov	r2, r8
 80117ba:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 80117bc:	f005 f8d5 	bl	801696a <_ZN8touchgfx6muldivElll>
 80117c0:	2502      	movs	r5, #2
 80117c2:	4642      	mov	r2, r8
 80117c4:	fb90 f6f5 	sdiv	r6, r0, r5
 80117c8:	4639      	mov	r1, r7
 80117ca:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 80117cc:	f005 f8cd 	bl	801696a <_ZN8touchgfx6muldivElll>
 80117d0:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 80117d4:	fb90 f5f5 	sdiv	r5, r0, r5
 80117d8:	f1b9 0f00 	cmp.w	r9, #0
 80117dc:	d067      	beq.n	80118ae <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 80117de:	f1b9 0f02 	cmp.w	r9, #2
 80117e2:	d878      	bhi.n	80118d6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 80117e4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80117e6:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80117e8:	1b93      	subs	r3, r2, r6
 80117ea:	1b5b      	subs	r3, r3, r5
 80117ec:	6463      	str	r3, [r4, #68]	; 0x44
 80117ee:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80117f0:	18e9      	adds	r1, r5, r3
 80117f2:	1b89      	subs	r1, r1, r6
 80117f4:	6561      	str	r1, [r4, #84]	; 0x54
 80117f6:	1b81      	subs	r1, r0, r6
 80117f8:	4429      	add	r1, r5
 80117fa:	64a1      	str	r1, [r4, #72]	; 0x48
 80117fc:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80117fe:	4430      	add	r0, r6
 8011800:	186f      	adds	r7, r5, r1
 8011802:	4432      	add	r2, r6
 8011804:	1b49      	subs	r1, r1, r5
 8011806:	4437      	add	r7, r6
 8011808:	4428      	add	r0, r5
 801180a:	4431      	add	r1, r6
 801180c:	1b52      	subs	r2, r2, r5
 801180e:	1b5b      	subs	r3, r3, r5
 8011810:	65a7      	str	r7, [r4, #88]	; 0x58
 8011812:	64e0      	str	r0, [r4, #76]	; 0x4c
 8011814:	65e1      	str	r1, [r4, #92]	; 0x5c
 8011816:	6522      	str	r2, [r4, #80]	; 0x50
 8011818:	1b9b      	subs	r3, r3, r6
 801181a:	e05b      	b.n	80118d4 <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 801181c:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 8011820:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 8011824:	2d00      	cmp	r5, #0
 8011826:	d0c6      	beq.n	80117b6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8011828:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 801182c:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 8011830:	fb93 f2f8 	sdiv	r2, r3, r8
 8011834:	fb08 3312 	mls	r3, r8, r2, r3
 8011838:	b353      	cbz	r3, 8011890 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 801183a:	fb98 f2f3 	sdiv	r2, r8, r3
 801183e:	fb03 8812 	mls	r8, r3, r2, r8
 8011842:	f1b8 0f00 	cmp.w	r8, #0
 8011846:	d1f3      	bne.n	8011830 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 8011848:	2b01      	cmp	r3, #1
 801184a:	bf1c      	itt	ne
 801184c:	fb95 f5f3 	sdivne	r5, r5, r3
 8011850:	fb97 f7f3 	sdivne	r7, r7, r3
 8011854:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 8011858:	f24b 5104 	movw	r1, #46340	; 0xb504
 801185c:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 8011860:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 8011864:	428b      	cmp	r3, r1
 8011866:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 801186a:	4608      	mov	r0, r1
 801186c:	dd01      	ble.n	8011872 <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 801186e:	428a      	cmp	r2, r1
 8011870:	dc10      	bgt.n	8011894 <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 8011872:	fb90 f3f3 	sdiv	r3, r0, r3
 8011876:	fb90 f2f2 	sdiv	r2, r0, r2
 801187a:	4293      	cmp	r3, r2
 801187c:	bfa8      	it	ge
 801187e:	4613      	movge	r3, r2
 8011880:	435f      	muls	r7, r3
 8011882:	435d      	muls	r5, r3
 8011884:	4629      	mov	r1, r5
 8011886:	4638      	mov	r0, r7
 8011888:	f7ff fefe 	bl	8011688 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 801188c:	4680      	mov	r8, r0
 801188e:	e792      	b.n	80117b6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8011890:	4643      	mov	r3, r8
 8011892:	e7d9      	b.n	8011848 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 8011894:	fb93 f3f1 	sdiv	r3, r3, r1
 8011898:	fb92 f2f1 	sdiv	r2, r2, r1
 801189c:	4293      	cmp	r3, r2
 801189e:	bfcc      	ite	gt
 80118a0:	3301      	addgt	r3, #1
 80118a2:	1c53      	addle	r3, r2, #1
 80118a4:	fb97 f7f3 	sdiv	r7, r7, r3
 80118a8:	fb95 f5f3 	sdiv	r5, r5, r3
 80118ac:	e7ea      	b.n	8011884 <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 80118ae:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80118b0:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80118b2:	1b93      	subs	r3, r2, r6
 80118b4:	6463      	str	r3, [r4, #68]	; 0x44
 80118b6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80118b8:	18e9      	adds	r1, r5, r3
 80118ba:	6561      	str	r1, [r4, #84]	; 0x54
 80118bc:	1b81      	subs	r1, r0, r6
 80118be:	64a1      	str	r1, [r4, #72]	; 0x48
 80118c0:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80118c2:	4430      	add	r0, r6
 80118c4:	186f      	adds	r7, r5, r1
 80118c6:	4432      	add	r2, r6
 80118c8:	1b49      	subs	r1, r1, r5
 80118ca:	65a7      	str	r7, [r4, #88]	; 0x58
 80118cc:	64e0      	str	r0, [r4, #76]	; 0x4c
 80118ce:	65e1      	str	r1, [r4, #92]	; 0x5c
 80118d0:	6522      	str	r2, [r4, #80]	; 0x50
 80118d2:	1b5b      	subs	r3, r3, r5
 80118d4:	6623      	str	r3, [r4, #96]	; 0x60
 80118d6:	6c62      	ldr	r2, [r4, #68]	; 0x44
 80118d8:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80118da:	9200      	str	r2, [sp, #0]
 80118dc:	9301      	str	r3, [sp, #4]
 80118de:	f104 0148 	add.w	r1, r4, #72	; 0x48
 80118e2:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 80118e6:	680f      	ldr	r7, [r1, #0]
 80118e8:	9800      	ldr	r0, [sp, #0]
 80118ea:	42ba      	cmp	r2, r7
 80118ec:	bfa8      	it	ge
 80118ee:	463a      	movge	r2, r7
 80118f0:	4287      	cmp	r7, r0
 80118f2:	bfc8      	it	gt
 80118f4:	9700      	strgt	r7, [sp, #0]
 80118f6:	690f      	ldr	r7, [r1, #16]
 80118f8:	9801      	ldr	r0, [sp, #4]
 80118fa:	42bb      	cmp	r3, r7
 80118fc:	bfa8      	it	ge
 80118fe:	463b      	movge	r3, r7
 8011900:	3104      	adds	r1, #4
 8011902:	4287      	cmp	r7, r0
 8011904:	bfc8      	it	gt
 8011906:	9701      	strgt	r7, [sp, #4]
 8011908:	458c      	cmp	ip, r1
 801190a:	d1ec      	bne.n	80118e6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 801190c:	4668      	mov	r0, sp
 801190e:	2720      	movs	r7, #32
 8011910:	fb92 f8f7 	sdiv	r8, r2, r7
 8011914:	fb93 f7f7 	sdiv	r7, r3, r7
 8011918:	f7ff fd57 	bl	80113ca <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 801191c:	4682      	mov	sl, r0
 801191e:	a801      	add	r0, sp, #4
 8011920:	f7ff fd53 	bl	80113ca <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8011924:	ebaa 0208 	sub.w	r2, sl, r8
 8011928:	1bc0      	subs	r0, r0, r7
 801192a:	f1b9 0f01 	cmp.w	r9, #1
 801192e:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 8011932:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 8011936:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 801193a:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 801193e:	f47f af33 	bne.w	80117a8 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 8011942:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8011944:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8011946:	1b83      	subs	r3, r0, r6
 8011948:	6463      	str	r3, [r4, #68]	; 0x44
 801194a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 801194c:	18ea      	adds	r2, r5, r3
 801194e:	6562      	str	r2, [r4, #84]	; 0x54
 8011950:	1b8a      	subs	r2, r1, r6
 8011952:	64a2      	str	r2, [r4, #72]	; 0x48
 8011954:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8011956:	4431      	add	r1, r6
 8011958:	18af      	adds	r7, r5, r2
 801195a:	4406      	add	r6, r0
 801195c:	1b52      	subs	r2, r2, r5
 801195e:	1b5d      	subs	r5, r3, r5
 8011960:	65a7      	str	r7, [r4, #88]	; 0x58
 8011962:	64e1      	str	r1, [r4, #76]	; 0x4c
 8011964:	65e2      	str	r2, [r4, #92]	; 0x5c
 8011966:	6526      	str	r6, [r4, #80]	; 0x50
 8011968:	6625      	str	r5, [r4, #96]	; 0x60
 801196a:	e71d      	b.n	80117a8 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

0801196c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 801196c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801196e:	428b      	cmp	r3, r1
 8011970:	d102      	bne.n	8011978 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 8011972:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8011974:	4293      	cmp	r3, r2
 8011976:	d003      	beq.n	8011980 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 8011978:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 801197c:	f7ff bf00 	b.w	8011780 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8011980:	4770      	bx	lr

08011982 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 8011982:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8011984:	428b      	cmp	r3, r1
 8011986:	d102      	bne.n	801198e <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 8011988:	6b83      	ldr	r3, [r0, #56]	; 0x38
 801198a:	4293      	cmp	r3, r2
 801198c:	d003      	beq.n	8011996 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 801198e:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 8011992:	f7ff bef5 	b.w	8011780 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8011996:	4770      	bx	lr

08011998 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 8011998:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 801199c:	f7ff bef0 	b.w	8011780 <_ZN8touchgfx4Line17updateCachedShapeEv>

080119a0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 80119a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80119a4:	b0a0      	sub	sp, #128	; 0x80
 80119a6:	4604      	mov	r4, r0
 80119a8:	460a      	mov	r2, r1
 80119aa:	4601      	mov	r1, r0
 80119ac:	a804      	add	r0, sp, #16
 80119ae:	f014 fe3b 	bl	8026628 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 80119b2:	2300      	movs	r3, #0
 80119b4:	9301      	str	r3, [sp, #4]
 80119b6:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80119ba:	2b01      	cmp	r3, #1
 80119bc:	d17c      	bne.n	8011ab8 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 80119be:	6c60      	ldr	r0, [r4, #68]	; 0x44
 80119c0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80119c2:	6d61      	ldr	r1, [r4, #84]	; 0x54
 80119c4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80119c6:	1ac0      	subs	r0, r0, r3
 80119c8:	eba1 0102 	sub.w	r1, r1, r2
 80119cc:	d437      	bmi.n	8011a3e <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 80119ce:	2900      	cmp	r1, #0
 80119d0:	aa01      	add	r2, sp, #4
 80119d2:	db2e      	blt.n	8011a32 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 80119d4:	f7ff fe98 	bl	8011708 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80119d8:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 80119dc:	6d62      	ldr	r2, [r4, #84]	; 0x54
 80119de:	6c61      	ldr	r1, [r4, #68]	; 0x44
 80119e0:	a804      	add	r0, sp, #16
 80119e2:	f014 ffa1 	bl	8026928 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 80119e6:	6da2      	ldr	r2, [r4, #88]	; 0x58
 80119e8:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80119ea:	a804      	add	r0, sp, #16
 80119ec:	f014 ffe9 	bl	80269c2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80119f0:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 80119f2:	2db3      	cmp	r5, #179	; 0xb3
 80119f4:	dc33      	bgt.n	8011a5e <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 80119f6:	eba6 0805 	sub.w	r8, r6, r5
 80119fa:	4640      	mov	r0, r8
 80119fc:	f7ff fdf2 	bl	80115e4 <_ZN8touchgfx7CWRUtil4sineEi>
 8011a00:	a902      	add	r1, sp, #8
 8011a02:	9002      	str	r0, [sp, #8]
 8011a04:	a801      	add	r0, sp, #4
 8011a06:	f7ff fcd5 	bl	80113b4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011a0a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8011a0c:	1847      	adds	r7, r0, r1
 8011a0e:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8011a12:	f7ff fde7 	bl	80115e4 <_ZN8touchgfx7CWRUtil4sineEi>
 8011a16:	a903      	add	r1, sp, #12
 8011a18:	9003      	str	r0, [sp, #12]
 8011a1a:	a801      	add	r0, sp, #4
 8011a1c:	f7ff fcca 	bl	80113b4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011a20:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8011a22:	4639      	mov	r1, r7
 8011a24:	1a12      	subs	r2, r2, r0
 8011a26:	a804      	add	r0, sp, #16
 8011a28:	f014 ffcb 	bl	80269c2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011a2c:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8011a2e:	441d      	add	r5, r3
 8011a30:	e7df      	b.n	80119f2 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 8011a32:	4249      	negs	r1, r1
 8011a34:	f7ff fe68 	bl	8011708 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8011a38:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 8011a3c:	e7ce      	b.n	80119dc <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8011a3e:	2900      	cmp	r1, #0
 8011a40:	f1c0 0000 	rsb	r0, r0, #0
 8011a44:	aa01      	add	r2, sp, #4
 8011a46:	db04      	blt.n	8011a52 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 8011a48:	f7ff fe5e 	bl	8011708 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8011a4c:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 8011a50:	e7c4      	b.n	80119dc <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8011a52:	4249      	negs	r1, r1
 8011a54:	f7ff fe58 	bl	8011708 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8011a58:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 8011a5c:	e7be      	b.n	80119dc <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8011a5e:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8011a60:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8011a62:	a804      	add	r0, sp, #16
 8011a64:	f014 ffad 	bl	80269c2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011a68:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8011a6a:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8011a6c:	a804      	add	r0, sp, #16
 8011a6e:	f014 ffa8 	bl	80269c2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011a72:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8011a74:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 8011a78:	2d00      	cmp	r5, #0
 8011a7a:	dd31      	ble.n	8011ae0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 8011a7c:	eb05 0806 	add.w	r8, r5, r6
 8011a80:	4640      	mov	r0, r8
 8011a82:	f7ff fdaf 	bl	80115e4 <_ZN8touchgfx7CWRUtil4sineEi>
 8011a86:	a902      	add	r1, sp, #8
 8011a88:	9002      	str	r0, [sp, #8]
 8011a8a:	a801      	add	r0, sp, #4
 8011a8c:	f7ff fc92 	bl	80113b4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011a90:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8011a92:	1847      	adds	r7, r0, r1
 8011a94:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8011a98:	f7ff fda4 	bl	80115e4 <_ZN8touchgfx7CWRUtil4sineEi>
 8011a9c:	a903      	add	r1, sp, #12
 8011a9e:	9003      	str	r0, [sp, #12]
 8011aa0:	a801      	add	r0, sp, #4
 8011aa2:	f7ff fc87 	bl	80113b4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011aa6:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8011aa8:	4639      	mov	r1, r7
 8011aaa:	1a12      	subs	r2, r2, r0
 8011aac:	a804      	add	r0, sp, #16
 8011aae:	f014 ff88 	bl	80269c2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011ab2:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8011ab4:	1aed      	subs	r5, r5, r3
 8011ab6:	e7df      	b.n	8011a78 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 8011ab8:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8011aba:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8011abc:	a804      	add	r0, sp, #16
 8011abe:	f014 ff33 	bl	8026928 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8011ac2:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8011ac4:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8011ac6:	a804      	add	r0, sp, #16
 8011ac8:	f014 ff7b 	bl	80269c2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011acc:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8011ace:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8011ad0:	a804      	add	r0, sp, #16
 8011ad2:	f014 ff76 	bl	80269c2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011ad6:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8011ad8:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8011ada:	a804      	add	r0, sp, #16
 8011adc:	f014 ff71 	bl	80269c2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011ae0:	21ff      	movs	r1, #255	; 0xff
 8011ae2:	a804      	add	r0, sp, #16
 8011ae4:	f014 fe5c 	bl	80267a0 <_ZN8touchgfx6Canvas6renderEh>
 8011ae8:	4b04      	ldr	r3, [pc, #16]	; (8011afc <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 8011aea:	9304      	str	r3, [sp, #16]
 8011aec:	4604      	mov	r4, r0
 8011aee:	a80c      	add	r0, sp, #48	; 0x30
 8011af0:	f001 f8cc 	bl	8012c8c <_ZN8touchgfx7OutlineD1Ev>
 8011af4:	4620      	mov	r0, r4
 8011af6:	b020      	add	sp, #128	; 0x80
 8011af8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011afc:	0802ecf0 	.word	0x0802ecf0

08011b00 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8011b00:	2000      	movs	r0, #0
 8011b02:	4770      	bx	lr

08011b04 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8011b04:	4b07      	ldr	r3, [pc, #28]	; (8011b24 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 8011b06:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8011b08:	881b      	ldrh	r3, [r3, #0]
 8011b0a:	4293      	cmp	r3, r2
 8011b0c:	bf81      	itttt	hi
 8011b0e:	4b06      	ldrhi	r3, [pc, #24]	; (8011b28 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8011b10:	681b      	ldrhi	r3, [r3, #0]
 8011b12:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 8011b16:	7858      	ldrbhi	r0, [r3, #1]
 8011b18:	bf8c      	ite	hi
 8011b1a:	f000 0003 	andhi.w	r0, r0, #3
 8011b1e:	2000      	movls	r0, #0
 8011b20:	4770      	bx	lr
 8011b22:	bf00      	nop
 8011b24:	20012f80 	.word	0x20012f80
 8011b28:	20012f7c 	.word	0x20012f7c

08011b2c <_ZN8touchgfx8TextAreaD1Ev>:
 8011b2c:	4770      	bx	lr
	...

08011b30 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8011b30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011b34:	4b10      	ldr	r3, [pc, #64]	; (8011b78 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8011b36:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8011b38:	881b      	ldrh	r3, [r3, #0]
 8011b3a:	428b      	cmp	r3, r1
 8011b3c:	4604      	mov	r4, r0
 8011b3e:	d918      	bls.n	8011b72 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8011b40:	6803      	ldr	r3, [r0, #0]
 8011b42:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 8011b44:	4b0d      	ldr	r3, [pc, #52]	; (8011b7c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8011b46:	6818      	ldr	r0, [r3, #0]
 8011b48:	f7f6 fb58 	bl	80081fc <_ZNK8touchgfx5Texts7getTextEt>
 8011b4c:	6823      	ldr	r3, [r4, #0]
 8011b4e:	4606      	mov	r6, r0
 8011b50:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011b52:	4620      	mov	r0, r4
 8011b54:	4798      	blx	r3
 8011b56:	6823      	ldr	r3, [r4, #0]
 8011b58:	4607      	mov	r7, r0
 8011b5a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011b5e:	4620      	mov	r0, r4
 8011b60:	4798      	blx	r3
 8011b62:	463a      	mov	r2, r7
 8011b64:	4603      	mov	r3, r0
 8011b66:	4631      	mov	r1, r6
 8011b68:	4620      	mov	r0, r4
 8011b6a:	46ac      	mov	ip, r5
 8011b6c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8011b70:	4760      	bx	ip
 8011b72:	2000      	movs	r0, #0
 8011b74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011b78:	20012f80 	.word	0x20012f80
 8011b7c:	20012f88 	.word	0x20012f88

08011b80 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8011b80:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8011b84:	4b17      	ldr	r3, [pc, #92]	; (8011be4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8011b86:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8011b88:	881b      	ldrh	r3, [r3, #0]
 8011b8a:	428b      	cmp	r3, r1
 8011b8c:	4604      	mov	r4, r0
 8011b8e:	d926      	bls.n	8011bde <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8011b90:	4b15      	ldr	r3, [pc, #84]	; (8011be8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8011b92:	681b      	ldr	r3, [r3, #0]
 8011b94:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8011b98:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8011b9c:	4b13      	ldr	r3, [pc, #76]	; (8011bec <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8011b9e:	7855      	ldrb	r5, [r2, #1]
 8011ba0:	681b      	ldr	r3, [r3, #0]
 8011ba2:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8011ba6:	6833      	ldr	r3, [r6, #0]
 8011ba8:	69df      	ldr	r7, [r3, #28]
 8011baa:	4b11      	ldr	r3, [pc, #68]	; (8011bf0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8011bac:	6818      	ldr	r0, [r3, #0]
 8011bae:	f7f6 fb25 	bl	80081fc <_ZNK8touchgfx5Texts7getTextEt>
 8011bb2:	6823      	ldr	r3, [r4, #0]
 8011bb4:	4680      	mov	r8, r0
 8011bb6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011bb8:	4620      	mov	r0, r4
 8011bba:	4798      	blx	r3
 8011bbc:	6823      	ldr	r3, [r4, #0]
 8011bbe:	4681      	mov	r9, r0
 8011bc0:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011bc4:	4620      	mov	r0, r4
 8011bc6:	4798      	blx	r3
 8011bc8:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8011bcc:	9000      	str	r0, [sp, #0]
 8011bce:	464b      	mov	r3, r9
 8011bd0:	4642      	mov	r2, r8
 8011bd2:	4629      	mov	r1, r5
 8011bd4:	4630      	mov	r0, r6
 8011bd6:	47b8      	blx	r7
 8011bd8:	b003      	add	sp, #12
 8011bda:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011bde:	2000      	movs	r0, #0
 8011be0:	e7fa      	b.n	8011bd8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8011be2:	bf00      	nop
 8011be4:	20012f80 	.word	0x20012f80
 8011be8:	20012f7c 	.word	0x20012f7c
 8011bec:	20012f84 	.word	0x20012f84
 8011bf0:	20012f88 	.word	0x20012f88

08011bf4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8011bf4:	b40e      	push	{r1, r2, r3}
 8011bf6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011bfa:	4b2f      	ldr	r3, [pc, #188]	; (8011cb8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8011bfc:	881a      	ldrh	r2, [r3, #0]
 8011bfe:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8011c00:	429a      	cmp	r2, r3
 8011c02:	b09d      	sub	sp, #116	; 0x74
 8011c04:	4604      	mov	r4, r0
 8011c06:	d954      	bls.n	8011cb2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8011c08:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8011cbc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8011c0c:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8011cc0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8011c10:	aa26      	add	r2, sp, #152	; 0x98
 8011c12:	9202      	str	r2, [sp, #8]
 8011c14:	f8d9 2000 	ldr.w	r2, [r9]
 8011c18:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8011c1c:	f8d8 3000 	ldr.w	r3, [r8]
 8011c20:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8011c24:	682b      	ldr	r3, [r5, #0]
 8011c26:	4628      	mov	r0, r5
 8011c28:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011c2a:	4798      	blx	r3
 8011c2c:	b207      	sxth	r7, r0
 8011c2e:	4606      	mov	r6, r0
 8011c30:	a803      	add	r0, sp, #12
 8011c32:	f005 fa57 	bl	80170e4 <_ZN8touchgfx12TextProviderC1Ev>
 8011c36:	682b      	ldr	r3, [r5, #0]
 8011c38:	4628      	mov	r0, r5
 8011c3a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011c3c:	4798      	blx	r3
 8011c3e:	682b      	ldr	r3, [r5, #0]
 8011c40:	4682      	mov	sl, r0
 8011c42:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011c44:	4628      	mov	r0, r5
 8011c46:	4798      	blx	r3
 8011c48:	4653      	mov	r3, sl
 8011c4a:	9000      	str	r0, [sp, #0]
 8011c4c:	9a02      	ldr	r2, [sp, #8]
 8011c4e:	9925      	ldr	r1, [sp, #148]	; 0x94
 8011c50:	a803      	add	r0, sp, #12
 8011c52:	f005 faa2 	bl	801719a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011c56:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011c58:	f8d9 3000 	ldr.w	r3, [r9]
 8011c5c:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8011c60:	8925      	ldrh	r5, [r4, #8]
 8011c62:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8011c66:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8011c6a:	eba5 050c 	sub.w	r5, r5, ip
 8011c6e:	784a      	ldrb	r2, [r1, #1]
 8011c70:	f8d8 3000 	ldr.w	r3, [r8]
 8011c74:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8011c78:	b22d      	sxth	r5, r5
 8011c7a:	9500      	str	r5, [sp, #0]
 8011c7c:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8011c80:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8011c84:	a803      	add	r0, sp, #12
 8011c86:	f002 feed 	bl	8014a64 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8011c8a:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 8011c8e:	18b9      	adds	r1, r7, r2
 8011c90:	2900      	cmp	r1, #0
 8011c92:	b203      	sxth	r3, r0
 8011c94:	dd0b      	ble.n	8011cae <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 8011c96:	3b01      	subs	r3, #1
 8011c98:	fb13 f302 	smulbb	r3, r3, r2
 8011c9c:	fb16 3300 	smlabb	r3, r6, r0, r3
 8011ca0:	b21f      	sxth	r7, r3
 8011ca2:	4638      	mov	r0, r7
 8011ca4:	b01d      	add	sp, #116	; 0x74
 8011ca6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011caa:	b003      	add	sp, #12
 8011cac:	4770      	bx	lr
 8011cae:	2b00      	cmp	r3, #0
 8011cb0:	dcf7      	bgt.n	8011ca2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8011cb2:	2700      	movs	r7, #0
 8011cb4:	e7f5      	b.n	8011ca2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8011cb6:	bf00      	nop
 8011cb8:	20012f80 	.word	0x20012f80
 8011cbc:	20012f7c 	.word	0x20012f7c
 8011cc0:	20012f84 	.word	0x20012f84

08011cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8011cc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011cc8:	4bbc      	ldr	r3, [pc, #752]	; (8011fbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 8011cca:	460c      	mov	r4, r1
 8011ccc:	881b      	ldrh	r3, [r3, #0]
 8011cce:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8011cd0:	428b      	cmp	r3, r1
 8011cd2:	b0a9      	sub	sp, #164	; 0xa4
 8011cd4:	4680      	mov	r8, r0
 8011cd6:	d809      	bhi.n	8011cec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8011cd8:	2300      	movs	r3, #0
 8011cda:	f04f 32ff 	mov.w	r2, #4294967295
 8011cde:	e9c0 3200 	strd	r3, r2, [r0]
 8011ce2:	6083      	str	r3, [r0, #8]
 8011ce4:	4640      	mov	r0, r8
 8011ce6:	b029      	add	sp, #164	; 0xa4
 8011ce8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011cec:	4eb4      	ldr	r6, [pc, #720]	; (8011fc0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 8011cee:	6833      	ldr	r3, [r6, #0]
 8011cf0:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8011cf4:	4bb3      	ldr	r3, [pc, #716]	; (8011fc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8011cf6:	681b      	ldr	r3, [r3, #0]
 8011cf8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8011cfc:	4bb2      	ldr	r3, [pc, #712]	; (8011fc8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8011cfe:	6818      	ldr	r0, [r3, #0]
 8011d00:	f7f6 fa7c 	bl	80081fc <_ZNK8touchgfx5Texts7getTextEt>
 8011d04:	682b      	ldr	r3, [r5, #0]
 8011d06:	4681      	mov	r9, r0
 8011d08:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011d0a:	4628      	mov	r0, r5
 8011d0c:	4798      	blx	r3
 8011d0e:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 8011d10:	b203      	sxth	r3, r0
 8011d12:	4407      	add	r7, r0
 8011d14:	9304      	str	r3, [sp, #16]
 8011d16:	b2bb      	uxth	r3, r7
 8011d18:	9303      	str	r3, [sp, #12]
 8011d1a:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8011d1e:	4682      	mov	sl, r0
 8011d20:	a80f      	add	r0, sp, #60	; 0x3c
 8011d22:	2b00      	cmp	r3, #0
 8011d24:	f040 80a6 	bne.w	8011e74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8011d28:	f005 f9dc 	bl	80170e4 <_ZN8touchgfx12TextProviderC1Ev>
 8011d2c:	682b      	ldr	r3, [r5, #0]
 8011d2e:	4628      	mov	r0, r5
 8011d30:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011d32:	4798      	blx	r3
 8011d34:	682b      	ldr	r3, [r5, #0]
 8011d36:	4606      	mov	r6, r0
 8011d38:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011d3a:	4628      	mov	r0, r5
 8011d3c:	4798      	blx	r3
 8011d3e:	6823      	ldr	r3, [r4, #0]
 8011d40:	4607      	mov	r7, r0
 8011d42:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011d44:	4620      	mov	r0, r4
 8011d46:	4798      	blx	r3
 8011d48:	6823      	ldr	r3, [r4, #0]
 8011d4a:	4683      	mov	fp, r0
 8011d4c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011d50:	4620      	mov	r0, r4
 8011d52:	4798      	blx	r3
 8011d54:	463b      	mov	r3, r7
 8011d56:	e9cd b000 	strd	fp, r0, [sp]
 8011d5a:	4649      	mov	r1, r9
 8011d5c:	4632      	mov	r2, r6
 8011d5e:	a80f      	add	r0, sp, #60	; 0x3c
 8011d60:	f005 fa30 	bl	80171c4 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8011d64:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011d68:	f8df b254 	ldr.w	fp, [pc, #596]	; 8011fc0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8011d6c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011d70:	f04f 0600 	mov.w	r6, #0
 8011d74:	bf0c      	ite	eq
 8011d76:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 8011d7a:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 8011d7e:	4637      	mov	r7, r6
 8011d80:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011d82:	f8db 3000 	ldr.w	r3, [fp]
 8011d86:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8011d8a:	4629      	mov	r1, r5
 8011d8c:	785b      	ldrb	r3, [r3, #1]
 8011d8e:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8011d92:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011d96:	a80f      	add	r0, sp, #60	; 0x3c
 8011d98:	f002 fb7f 	bl	801449a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8011d9c:	9b03      	ldr	r3, [sp, #12]
 8011d9e:	4286      	cmp	r6, r0
 8011da0:	bfb8      	it	lt
 8011da2:	4606      	movlt	r6, r0
 8011da4:	3701      	adds	r7, #1
 8011da6:	eba9 0903 	sub.w	r9, r9, r3
 8011daa:	a80f      	add	r0, sp, #60	; 0x3c
 8011dac:	b236      	sxth	r6, r6
 8011dae:	b2bf      	uxth	r7, r7
 8011db0:	fa0f f989 	sxth.w	r9, r9
 8011db4:	f005 f9bd 	bl	8017132 <_ZN8touchgfx12TextProvider11endOfStringEv>
 8011db8:	b918      	cbnz	r0, 8011dc2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011dba:	7a2b      	ldrb	r3, [r5, #8]
 8011dbc:	444b      	add	r3, r9
 8011dbe:	2b00      	cmp	r3, #0
 8011dc0:	dcde      	bgt.n	8011d80 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 8011dc2:	9b03      	ldr	r3, [sp, #12]
 8011dc4:	9a04      	ldr	r2, [sp, #16]
 8011dc6:	f895 9009 	ldrb.w	r9, [r5, #9]
 8011dca:	fb13 f707 	smulbb	r7, r3, r7
 8011dce:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8011dd0:	1aff      	subs	r7, r7, r3
 8011dd2:	b2bf      	uxth	r7, r7
 8011dd4:	b23b      	sxth	r3, r7
 8011dd6:	429a      	cmp	r2, r3
 8011dd8:	bfa8      	it	ge
 8011dda:	4657      	movge	r7, sl
 8011ddc:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011de0:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011de4:	6823      	ldr	r3, [r4, #0]
 8011de6:	bf08      	it	eq
 8011de8:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8011dec:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011dee:	bf18      	it	ne
 8011df0:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 8011df4:	4620      	mov	r0, r4
 8011df6:	4798      	blx	r3
 8011df8:	444f      	add	r7, r9
 8011dfa:	fa1f f987 	uxth.w	r9, r7
 8011dfe:	2801      	cmp	r0, #1
 8011e00:	fa0f f789 	sxth.w	r7, r9
 8011e04:	b2b3      	uxth	r3, r6
 8011e06:	f000 80e1 	beq.w	8011fcc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8011e0a:	2802      	cmp	r0, #2
 8011e0c:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 8011e10:	f000 80e2 	beq.w	8011fd8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 8011e14:	7aea      	ldrb	r2, [r5, #11]
 8011e16:	7b2d      	ldrb	r5, [r5, #12]
 8011e18:	b236      	sxth	r6, r6
 8011e1a:	1ab6      	subs	r6, r6, r2
 8011e1c:	442a      	add	r2, r5
 8011e1e:	4413      	add	r3, r2
 8011e20:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 8011e24:	fa1f fa86 	uxth.w	sl, r6
 8011e28:	b29b      	uxth	r3, r3
 8011e2a:	2a02      	cmp	r2, #2
 8011e2c:	fa0f fb8a 	sxth.w	fp, sl
 8011e30:	b21e      	sxth	r6, r3
 8011e32:	f000 80d5 	beq.w	8011fe0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 8011e36:	2a03      	cmp	r2, #3
 8011e38:	f000 80dd 	beq.w	8011ff6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8011e3c:	2a01      	cmp	r2, #1
 8011e3e:	f040 80e5 	bne.w	801200c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 8011e42:	8925      	ldrh	r5, [r4, #8]
 8011e44:	4633      	mov	r3, r6
 8011e46:	eba5 0909 	sub.w	r9, r5, r9
 8011e4a:	463e      	mov	r6, r7
 8011e4c:	465d      	mov	r5, fp
 8011e4e:	461f      	mov	r7, r3
 8011e50:	fa0f fb89 	sxth.w	fp, r9
 8011e54:	4b5c      	ldr	r3, [pc, #368]	; (8011fc8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8011e56:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8011e58:	6818      	ldr	r0, [r3, #0]
 8011e5a:	f7f6 f9cf 	bl	80081fc <_ZNK8touchgfx5Texts7getTextEt>
 8011e5e:	f8a8 b000 	strh.w	fp, [r8]
 8011e62:	f8a8 5002 	strh.w	r5, [r8, #2]
 8011e66:	f8a8 6004 	strh.w	r6, [r8, #4]
 8011e6a:	f8a8 7006 	strh.w	r7, [r8, #6]
 8011e6e:	f8c8 0008 	str.w	r0, [r8, #8]
 8011e72:	e737      	b.n	8011ce4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 8011e74:	f005 f936 	bl	80170e4 <_ZN8touchgfx12TextProviderC1Ev>
 8011e78:	682b      	ldr	r3, [r5, #0]
 8011e7a:	4628      	mov	r0, r5
 8011e7c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011e7e:	4798      	blx	r3
 8011e80:	682b      	ldr	r3, [r5, #0]
 8011e82:	4607      	mov	r7, r0
 8011e84:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011e86:	4628      	mov	r0, r5
 8011e88:	4798      	blx	r3
 8011e8a:	6823      	ldr	r3, [r4, #0]
 8011e8c:	4683      	mov	fp, r0
 8011e8e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011e90:	4620      	mov	r0, r4
 8011e92:	4798      	blx	r3
 8011e94:	6822      	ldr	r2, [r4, #0]
 8011e96:	9005      	str	r0, [sp, #20]
 8011e98:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 8011e9c:	4620      	mov	r0, r4
 8011e9e:	4790      	blx	r2
 8011ea0:	9b05      	ldr	r3, [sp, #20]
 8011ea2:	9001      	str	r0, [sp, #4]
 8011ea4:	463a      	mov	r2, r7
 8011ea6:	4649      	mov	r1, r9
 8011ea8:	9300      	str	r3, [sp, #0]
 8011eaa:	a80f      	add	r0, sp, #60	; 0x3c
 8011eac:	465b      	mov	r3, fp
 8011eae:	f005 f989 	bl	80171c4 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8011eb2:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011eb6:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8011eba:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8011ebc:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8011ec0:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011ec4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8011ec8:	bf0a      	itet	eq
 8011eca:	464a      	moveq	r2, r9
 8011ecc:	461a      	movne	r2, r3
 8011ece:	4699      	moveq	r9, r3
 8011ed0:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 8011ed4:	1ad2      	subs	r2, r2, r3
 8011ed6:	6833      	ldr	r3, [r6, #0]
 8011ed8:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 8011edc:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8011ee0:	af0f      	add	r7, sp, #60	; 0x3c
 8011ee2:	7859      	ldrb	r1, [r3, #1]
 8011ee4:	9707      	str	r7, [sp, #28]
 8011ee6:	2300      	movs	r3, #0
 8011ee8:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8011eec:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011ef0:	f88d 1020 	strb.w	r1, [sp, #32]
 8011ef4:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8011ef8:	9509      	str	r5, [sp, #36]	; 0x24
 8011efa:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8011efe:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8011f02:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8011f06:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8011f0a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8011f0e:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8011f12:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8011f16:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8011f1a:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8011f1e:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 8011f22:	b350      	cbz	r0, 8011f7a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011f24:	682b      	ldr	r3, [r5, #0]
 8011f26:	4628      	mov	r0, r5
 8011f28:	695b      	ldr	r3, [r3, #20]
 8011f2a:	4798      	blx	r3
 8011f2c:	4607      	mov	r7, r0
 8011f2e:	b320      	cbz	r0, 8011f7a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011f30:	9809      	ldr	r0, [sp, #36]	; 0x24
 8011f32:	6803      	ldr	r3, [r0, #0]
 8011f34:	4639      	mov	r1, r7
 8011f36:	68db      	ldr	r3, [r3, #12]
 8011f38:	4798      	blx	r3
 8011f3a:	4606      	mov	r6, r0
 8011f3c:	b1e8      	cbz	r0, 8011f7a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011f3e:	7b43      	ldrb	r3, [r0, #13]
 8011f40:	7a82      	ldrb	r2, [r0, #10]
 8011f42:	005b      	lsls	r3, r3, #1
 8011f44:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011f48:	4313      	orrs	r3, r2
 8011f4a:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8011f4e:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 8011f52:	2b06      	cmp	r3, #6
 8011f54:	d111      	bne.n	8011f7a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011f56:	9809      	ldr	r0, [sp, #36]	; 0x24
 8011f58:	6803      	ldr	r3, [r0, #0]
 8011f5a:	4632      	mov	r2, r6
 8011f5c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011f5e:	4639      	mov	r1, r7
 8011f60:	4798      	blx	r3
 8011f62:	7b73      	ldrb	r3, [r6, #13]
 8011f64:	005b      	lsls	r3, r3, #1
 8011f66:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8011f6a:	7ab3      	ldrb	r3, [r6, #10]
 8011f6c:	4313      	orrs	r3, r2
 8011f6e:	4418      	add	r0, r3
 8011f70:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8011f74:	4418      	add	r0, r3
 8011f76:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 8011f7a:	2600      	movs	r6, #0
 8011f7c:	4637      	mov	r7, r6
 8011f7e:	a806      	add	r0, sp, #24
 8011f80:	f002 fc6c 	bl	801485c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8011f84:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 8011f88:	9b03      	ldr	r3, [sp, #12]
 8011f8a:	4286      	cmp	r6, r0
 8011f8c:	eba9 0903 	sub.w	r9, r9, r3
 8011f90:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8011f94:	bfb8      	it	lt
 8011f96:	4606      	movlt	r6, r0
 8011f98:	3701      	adds	r7, #1
 8011f9a:	b236      	sxth	r6, r6
 8011f9c:	b2bf      	uxth	r7, r7
 8011f9e:	fa0f f989 	sxth.w	r9, r9
 8011fa2:	2b00      	cmp	r3, #0
 8011fa4:	f43f af0d 	beq.w	8011dc2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011fa8:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 8011fac:	2b00      	cmp	r3, #0
 8011fae:	f47f af08 	bne.w	8011dc2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011fb2:	7a2b      	ldrb	r3, [r5, #8]
 8011fb4:	444b      	add	r3, r9
 8011fb6:	2b00      	cmp	r3, #0
 8011fb8:	dce1      	bgt.n	8011f7e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 8011fba:	e702      	b.n	8011dc2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011fbc:	20012f80 	.word	0x20012f80
 8011fc0:	20012f7c 	.word	0x20012f7c
 8011fc4:	20012f84 	.word	0x20012f84
 8011fc8:	20012f88 	.word	0x20012f88
 8011fcc:	ebaa 0606 	sub.w	r6, sl, r6
 8011fd0:	2002      	movs	r0, #2
 8011fd2:	fb96 f6f0 	sdiv	r6, r6, r0
 8011fd6:	e71d      	b.n	8011e14 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8011fd8:	441e      	add	r6, r3
 8011fda:	ebaa 0606 	sub.w	r6, sl, r6
 8011fde:	e719      	b.n	8011e14 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8011fe0:	8925      	ldrh	r5, [r4, #8]
 8011fe2:	1aed      	subs	r5, r5, r3
 8011fe4:	eba5 050a 	sub.w	r5, r5, sl
 8011fe8:	fa0f fb85 	sxth.w	fp, r5
 8011fec:	8965      	ldrh	r5, [r4, #10]
 8011fee:	eba5 0509 	sub.w	r5, r5, r9
 8011ff2:	b22d      	sxth	r5, r5
 8011ff4:	e72e      	b.n	8011e54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8011ff6:	8965      	ldrh	r5, [r4, #10]
 8011ff8:	1aed      	subs	r5, r5, r3
 8011ffa:	eba5 050a 	sub.w	r5, r5, sl
 8011ffe:	4633      	mov	r3, r6
 8012000:	b22d      	sxth	r5, r5
 8012002:	463e      	mov	r6, r7
 8012004:	f04f 0b00 	mov.w	fp, #0
 8012008:	461f      	mov	r7, r3
 801200a:	e723      	b.n	8011e54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 801200c:	2500      	movs	r5, #0
 801200e:	e721      	b.n	8011e54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08012010 <_ZN8touchgfx8TextAreaD0Ev>:
 8012010:	b510      	push	{r4, lr}
 8012012:	2148      	movs	r1, #72	; 0x48
 8012014:	4604      	mov	r4, r0
 8012016:	f017 fa4a 	bl	80294ae <_ZdlPvj>
 801201a:	4620      	mov	r0, r4
 801201c:	bd10      	pop	{r4, pc}
	...

08012020 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8012020:	b513      	push	{r0, r1, r4, lr}
 8012022:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 8012026:	4604      	mov	r4, r0
 8012028:	b1fb      	cbz	r3, 801206a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801202a:	4b16      	ldr	r3, [pc, #88]	; (8012084 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 801202c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 801202e:	881b      	ldrh	r3, [r3, #0]
 8012030:	428b      	cmp	r3, r1
 8012032:	d91a      	bls.n	801206a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012034:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8012038:	2b00      	cmp	r3, #0
 801203a:	dd16      	ble.n	801206a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801203c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012040:	2b00      	cmp	r3, #0
 8012042:	dd12      	ble.n	801206a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012044:	4b10      	ldr	r3, [pc, #64]	; (8012088 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8012046:	6818      	ldr	r0, [r3, #0]
 8012048:	f7f6 f8d8 	bl	80081fc <_ZNK8touchgfx5Texts7getTextEt>
 801204c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8012050:	6822      	ldr	r2, [r4, #0]
 8012052:	2b00      	cmp	r3, #0
 8012054:	db06      	blt.n	8012064 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8012056:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 801205a:	2b00      	cmp	r3, #0
 801205c:	db02      	blt.n	8012064 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 801205e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8012060:	4298      	cmp	r0, r3
 8012062:	d004      	beq.n	801206e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 8012064:	6953      	ldr	r3, [r2, #20]
 8012066:	4620      	mov	r0, r4
 8012068:	4798      	blx	r3
 801206a:	b002      	add	sp, #8
 801206c:	bd10      	pop	{r4, pc}
 801206e:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 8012072:	c903      	ldmia	r1, {r0, r1}
 8012074:	466b      	mov	r3, sp
 8012076:	e883 0003 	stmia.w	r3, {r0, r1}
 801207a:	6912      	ldr	r2, [r2, #16]
 801207c:	4619      	mov	r1, r3
 801207e:	4620      	mov	r0, r4
 8012080:	4790      	blx	r2
 8012082:	e7f2      	b.n	801206a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012084:	20012f80 	.word	0x20012f80
 8012088:	20012f88 	.word	0x20012f88

0801208c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 801208c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012090:	4b44      	ldr	r3, [pc, #272]	; (80121a4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 8012092:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8012094:	881b      	ldrh	r3, [r3, #0]
 8012096:	4293      	cmp	r3, r2
 8012098:	b08e      	sub	sp, #56	; 0x38
 801209a:	4604      	mov	r4, r0
 801209c:	d97e      	bls.n	801219c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801209e:	6808      	ldr	r0, [r1, #0]
 80120a0:	4d41      	ldr	r5, [pc, #260]	; (80121a8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 80120a2:	6849      	ldr	r1, [r1, #4]
 80120a4:	ab05      	add	r3, sp, #20
 80120a6:	c303      	stmia	r3!, {r0, r1}
 80120a8:	4611      	mov	r1, r2
 80120aa:	6828      	ldr	r0, [r5, #0]
 80120ac:	f7f6 f8a6 	bl	80081fc <_ZNK8touchgfx5Texts7getTextEt>
 80120b0:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 80120b4:	2b00      	cmp	r3, #0
 80120b6:	db11      	blt.n	80120dc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80120b8:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 80120bc:	2b00      	cmp	r3, #0
 80120be:	db0d      	blt.n	80120dc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80120c0:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80120c2:	4298      	cmp	r0, r3
 80120c4:	d10a      	bne.n	80120dc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80120c6:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 80120ca:	e892 0003 	ldmia.w	r2, {r0, r1}
 80120ce:	ab09      	add	r3, sp, #36	; 0x24
 80120d0:	e883 0003 	stmia.w	r3, {r0, r1}
 80120d4:	4619      	mov	r1, r3
 80120d6:	a805      	add	r0, sp, #20
 80120d8:	f7fe f860 	bl	801019c <_ZN8touchgfx4RectaNERKS0_>
 80120dc:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80120e0:	2b00      	cmp	r3, #0
 80120e2:	dd5b      	ble.n	801219c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80120e4:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80120e8:	2b00      	cmp	r3, #0
 80120ea:	dd57      	ble.n	801219c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80120ec:	4f2f      	ldr	r7, [pc, #188]	; (80121ac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 80120ee:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80120f0:	683b      	ldr	r3, [r7, #0]
 80120f2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80120f6:	4b2e      	ldr	r3, [pc, #184]	; (80121b0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 80120f8:	681b      	ldr	r3, [r3, #0]
 80120fa:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80120fe:	2e00      	cmp	r6, #0
 8012100:	d04c      	beq.n	801219c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8012102:	6823      	ldr	r3, [r4, #0]
 8012104:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8012108:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 801210a:	4620      	mov	r0, r4
 801210c:	4798      	blx	r3
 801210e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8012110:	683b      	ldr	r3, [r7, #0]
 8012112:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 8012116:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 801211a:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 801211e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8012120:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8012124:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8012128:	785b      	ldrb	r3, [r3, #1]
 801212a:	9609      	str	r6, [sp, #36]	; 0x24
 801212c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8012130:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8012134:	4b1f      	ldr	r3, [pc, #124]	; (80121b4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 8012136:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 801213a:	681b      	ldr	r3, [r3, #0]
 801213c:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8012140:	910b      	str	r1, [sp, #44]	; 0x2c
 8012142:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 8012146:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 801214a:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 801214e:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 8012152:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8012156:	b10a      	cbz	r2, 801215c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8012158:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 801215a:	b906      	cbnz	r6, 801215e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 801215c:	689e      	ldr	r6, [r3, #8]
 801215e:	af07      	add	r7, sp, #28
 8012160:	4621      	mov	r1, r4
 8012162:	4638      	mov	r0, r7
 8012164:	f004 fab0 	bl	80166c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012168:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801216a:	6828      	ldr	r0, [r5, #0]
 801216c:	f7f6 f846 	bl	80081fc <_ZNK8touchgfx5Texts7getTextEt>
 8012170:	6823      	ldr	r3, [r4, #0]
 8012172:	4605      	mov	r5, r0
 8012174:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012176:	4620      	mov	r0, r4
 8012178:	4798      	blx	r3
 801217a:	6823      	ldr	r3, [r4, #0]
 801217c:	4680      	mov	r8, r0
 801217e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012182:	4620      	mov	r0, r4
 8012184:	4798      	blx	r3
 8012186:	e9cd 8002 	strd	r8, r0, [sp, #8]
 801218a:	ab09      	add	r3, sp, #36	; 0x24
 801218c:	9300      	str	r3, [sp, #0]
 801218e:	9501      	str	r5, [sp, #4]
 8012190:	ab05      	add	r3, sp, #20
 8012192:	e897 0006 	ldmia.w	r7, {r1, r2}
 8012196:	4630      	mov	r0, r6
 8012198:	f7f5 ffe2 	bl	8008160 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801219c:	b00e      	add	sp, #56	; 0x38
 801219e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80121a2:	bf00      	nop
 80121a4:	20012f80 	.word	0x20012f80
 80121a8:	20012f88 	.word	0x20012f88
 80121ac:	20012f7c 	.word	0x20012f7c
 80121b0:	20012f84 	.word	0x20012f84
 80121b4:	20012f24 	.word	0x20012f24

080121b8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 80121b8:	b538      	push	{r3, r4, r5, lr}
 80121ba:	4b0e      	ldr	r3, [pc, #56]	; (80121f4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 80121bc:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80121be:	881b      	ldrh	r3, [r3, #0]
 80121c0:	429a      	cmp	r2, r3
 80121c2:	4604      	mov	r4, r0
 80121c4:	d214      	bcs.n	80121f0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 80121c6:	6803      	ldr	r3, [r0, #0]
 80121c8:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80121ca:	4798      	blx	r3
 80121cc:	6823      	ldr	r3, [r4, #0]
 80121ce:	4605      	mov	r5, r0
 80121d0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80121d2:	4620      	mov	r0, r4
 80121d4:	4798      	blx	r3
 80121d6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80121da:	b22d      	sxth	r5, r5
 80121dc:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80121e0:	4601      	mov	r1, r0
 80121e2:	bf06      	itte	eq
 80121e4:	4602      	moveq	r2, r0
 80121e6:	4629      	moveq	r1, r5
 80121e8:	462a      	movne	r2, r5
 80121ea:	4620      	mov	r0, r4
 80121ec:	f7fd fdb6 	bl	800fd5c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80121f0:	bd38      	pop	{r3, r4, r5, pc}
 80121f2:	bf00      	nop
 80121f4:	20012f80 	.word	0x20012f80

080121f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 80121f8:	b530      	push	{r4, r5, lr}
 80121fa:	888b      	ldrh	r3, [r1, #4]
 80121fc:	8583      	strh	r3, [r0, #44]	; 0x2c
 80121fe:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8012202:	b085      	sub	sp, #20
 8012204:	4604      	mov	r4, r0
 8012206:	b923      	cbnz	r3, 8012212 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8012208:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 801220c:	b90b      	cbnz	r3, 8012212 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 801220e:	f7ff ffd3 	bl	80121b8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8012212:	6823      	ldr	r3, [r4, #0]
 8012214:	466d      	mov	r5, sp
 8012216:	4621      	mov	r1, r4
 8012218:	4628      	mov	r0, r5
 801221a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 801221e:	4798      	blx	r3
 8012220:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8012224:	343c      	adds	r4, #60	; 0x3c
 8012226:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 801222a:	b005      	add	sp, #20
 801222c:	bd30      	pop	{r4, r5, pc}

0801222e <_ZNK8touchgfx3Box12getSolidRectEv>:
 801222e:	2300      	movs	r3, #0
 8012230:	8083      	strh	r3, [r0, #4]
 8012232:	80c3      	strh	r3, [r0, #6]
 8012234:	8003      	strh	r3, [r0, #0]
 8012236:	8043      	strh	r3, [r0, #2]
 8012238:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 801223c:	2bff      	cmp	r3, #255	; 0xff
 801223e:	bf01      	itttt	eq
 8012240:	890b      	ldrheq	r3, [r1, #8]
 8012242:	8083      	strheq	r3, [r0, #4]
 8012244:	894b      	ldrheq	r3, [r1, #10]
 8012246:	80c3      	strheq	r3, [r0, #6]
 8012248:	4770      	bx	lr
	...

0801224c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 801224c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801224e:	4604      	mov	r4, r0
 8012250:	6808      	ldr	r0, [r1, #0]
 8012252:	6849      	ldr	r1, [r1, #4]
 8012254:	466b      	mov	r3, sp
 8012256:	c303      	stmia	r3!, {r0, r1}
 8012258:	6823      	ldr	r3, [r4, #0]
 801225a:	4669      	mov	r1, sp
 801225c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801225e:	4620      	mov	r0, r4
 8012260:	4798      	blx	r3
 8012262:	4b08      	ldr	r3, [pc, #32]	; (8012284 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8012264:	681b      	ldr	r3, [r3, #0]
 8012266:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801226a:	b10a      	cbz	r2, 8012270 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 801226c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801226e:	b900      	cbnz	r0, 8012272 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8012270:	6898      	ldr	r0, [r3, #8]
 8012272:	6803      	ldr	r3, [r0, #0]
 8012274:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8012276:	6a1d      	ldr	r5, [r3, #32]
 8012278:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 801227c:	4669      	mov	r1, sp
 801227e:	47a8      	blx	r5
 8012280:	b003      	add	sp, #12
 8012282:	bd30      	pop	{r4, r5, pc}
 8012284:	20012f24 	.word	0x20012f24

08012288 <_ZN8touchgfx3BoxD1Ev>:
 8012288:	4770      	bx	lr

0801228a <_ZN8touchgfx3BoxD0Ev>:
 801228a:	b510      	push	{r4, lr}
 801228c:	212c      	movs	r1, #44	; 0x2c
 801228e:	4604      	mov	r4, r0
 8012290:	f017 f90d 	bl	80294ae <_ZdlPvj>
 8012294:	4620      	mov	r0, r4
 8012296:	bd10      	pop	{r4, pc}

08012298 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8012298:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 801229c:	b12a      	cbz	r2, 80122aa <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 801229e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80122a2:	b112      	cbz	r2, 80122aa <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 80122a4:	6803      	ldr	r3, [r0, #0]
 80122a6:	695b      	ldr	r3, [r3, #20]
 80122a8:	4718      	bx	r3
 80122aa:	4770      	bx	lr

080122ac <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 80122ac:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 80122b0:	600b      	str	r3, [r1, #0]
 80122b2:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 80122b6:	6013      	str	r3, [r2, #0]
 80122b8:	4770      	bx	lr

080122ba <_ZN8touchgfx5Gauge8setWidthEs>:
 80122ba:	8101      	strh	r1, [r0, #8]
 80122bc:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 80122c0:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 80122c4:	4770      	bx	lr

080122c6 <_ZN8touchgfx5Gauge9setHeightEs>:
 80122c6:	8141      	strh	r1, [r0, #10]
 80122c8:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 80122cc:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 80122d0:	4770      	bx	lr

080122d2 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 80122d2:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 80122d6:	4770      	bx	lr

080122d8 <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 80122d8:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 80122dc:	4770      	bx	lr

080122de <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 80122de:	4770      	bx	lr

080122e0 <_ZN8touchgfx5GaugeD1Ev>:
 80122e0:	4770      	bx	lr

080122e2 <_ZN8touchgfx5Gauge8setAlphaEh>:
 80122e2:	b538      	push	{r3, r4, r5, lr}
 80122e4:	4604      	mov	r4, r0
 80122e6:	460d      	mov	r5, r1
 80122e8:	f7fd fc51 	bl	800fb8e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 80122ec:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 80122f0:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 80122f4:	bd38      	pop	{r3, r4, r5, pc}

080122f6 <_ZN8touchgfx5GaugeD0Ev>:
 80122f6:	b510      	push	{r4, lr}
 80122f8:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 80122fc:	4604      	mov	r4, r0
 80122fe:	f017 f8d6 	bl	80294ae <_ZdlPvj>
 8012302:	4620      	mov	r0, r4
 8012304:	bd10      	pop	{r4, pc}

08012306 <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 8012306:	b510      	push	{r4, lr}
 8012308:	6803      	ldr	r3, [r0, #0]
 801230a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 801230e:	4604      	mov	r4, r0
 8012310:	4798      	blx	r3
 8012312:	b170      	cbz	r0, 8012332 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8012314:	6823      	ldr	r3, [r4, #0]
 8012316:	4620      	mov	r0, r4
 8012318:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 801231c:	4798      	blx	r3
 801231e:	b140      	cbz	r0, 8012332 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8012320:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8012324:	b12b      	cbz	r3, 8012332 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8012326:	6823      	ldr	r3, [r4, #0]
 8012328:	4620      	mov	r0, r4
 801232a:	695b      	ldr	r3, [r3, #20]
 801232c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012330:	4718      	bx	r3
 8012332:	bd10      	pop	{r4, pc}

08012334 <_ZN8touchgfx5GaugeC1Ev>:
 8012334:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012336:	4604      	mov	r4, r0
 8012338:	4626      	mov	r6, r4
 801233a:	f7fd fd49 	bl	800fdd0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 801233e:	4b18      	ldr	r3, [pc, #96]	; (80123a0 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 8012340:	f846 3bb4 	str.w	r3, [r6], #180
 8012344:	a902      	add	r1, sp, #8
 8012346:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801234a:	f821 3d04 	strh.w	r3, [r1, #-4]!
 801234e:	4630      	mov	r0, r6
 8012350:	f015 f970 	bl	8027634 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 8012354:	2500      	movs	r5, #0
 8012356:	2301      	movs	r3, #1
 8012358:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 801235c:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 8012360:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 8012364:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8012368:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 801236c:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8012370:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8012374:	4638      	mov	r0, r7
 8012376:	f014 fba1 	bl	8026abc <_ZN8touchgfx6CircleC1Ev>
 801237a:	f104 0158 	add.w	r1, r4, #88	; 0x58
 801237e:	4620      	mov	r0, r4
 8012380:	f7fd fdc7 	bl	800ff12 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8012384:	4639      	mov	r1, r7
 8012386:	4620      	mov	r0, r4
 8012388:	f7fd fd82 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801238c:	4620      	mov	r0, r4
 801238e:	4631      	mov	r1, r6
 8012390:	f7fd fd7e 	bl	800fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012394:	4620      	mov	r0, r4
 8012396:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 801239a:	b003      	add	sp, #12
 801239c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801239e:	bf00      	nop
 80123a0:	0802e638 	.word	0x0802e638

080123a4 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 80123a4:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 80123a8:	4770      	bx	lr

080123aa <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 80123aa:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 80123ae:	4770      	bx	lr

080123b0 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 80123b0:	b538      	push	{r3, r4, r5, lr}
 80123b2:	8902      	ldrh	r2, [r0, #8]
 80123b4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80123b8:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 80123bc:	4604      	mov	r4, r0
 80123be:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 80123c2:	2200      	movs	r2, #0
 80123c4:	4611      	mov	r1, r2
 80123c6:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 80123ca:	4628      	mov	r0, r5
 80123cc:	f7f0 fa13 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 80123d0:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 80123d4:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 80123d8:	1a9b      	subs	r3, r3, r2
 80123da:	ee07 3a90 	vmov	s15, r3
 80123de:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 80123e2:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 80123e6:	1a9b      	subs	r3, r3, r2
 80123e8:	ee07 3a10 	vmov	s14, r3
 80123ec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80123f0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80123f4:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 80123f8:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 80123fc:	4628      	mov	r0, r5
 80123fe:	f015 f965 	bl	80276cc <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012402:	4b16      	ldr	r3, [pc, #88]	; (801245c <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 8012404:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8012408:	4628      	mov	r0, r5
 801240a:	f015 f95f 	bl	80276cc <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 801240e:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8012412:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 8012416:	ee07 3a90 	vmov	s15, r3
 801241a:	ee07 2a10 	vmov	s14, r2
 801241e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012422:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012426:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 801242a:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 801242e:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 8012432:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8012436:	4628      	mov	r0, r5
 8012438:	f015 f948 	bl	80276cc <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 801243c:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 8012440:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 8012444:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8012448:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 801244c:	4628      	mov	r0, r5
 801244e:	f015 f93d 	bl	80276cc <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012452:	2301      	movs	r3, #1
 8012454:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8012458:	bd38      	pop	{r3, r4, r5, pc}
 801245a:	bf00      	nop
 801245c:	43960000 	.word	0x43960000

08012460 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 8012460:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012462:	4604      	mov	r4, r0
 8012464:	a802      	add	r0, sp, #8
 8012466:	4616      	mov	r6, r2
 8012468:	f820 1d04 	strh.w	r1, [r0, #-4]!
 801246c:	461d      	mov	r5, r3
 801246e:	4601      	mov	r1, r0
 8012470:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8012474:	f015 fa80 	bl	8027978 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 8012478:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 801247c:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 8012480:	4620      	mov	r0, r4
 8012482:	f7ff ff95 	bl	80123b0 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8012486:	b002      	add	sp, #8
 8012488:	bd70      	pop	{r4, r5, r6, pc}

0801248a <_ZN8touchgfx5Gauge9setCenterEii>:
 801248a:	b570      	push	{r4, r5, r6, lr}
 801248c:	4606      	mov	r6, r0
 801248e:	460d      	mov	r5, r1
 8012490:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 8012494:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 8012498:	4614      	mov	r4, r2
 801249a:	f7ff ff89 	bl	80123b0 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 801249e:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 80124a2:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 80124a6:	1aa4      	subs	r4, r4, r2
 80124a8:	1a6d      	subs	r5, r5, r1
 80124aa:	0164      	lsls	r4, r4, #5
 80124ac:	016d      	lsls	r5, r5, #5
 80124ae:	3410      	adds	r4, #16
 80124b0:	3510      	adds	r5, #16
 80124b2:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 80124b6:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 80124ba:	bd70      	pop	{r4, r5, r6, pc}

080124bc <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 80124bc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80124be:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 80124c0:	0149      	lsls	r1, r1, #5
 80124c2:	4299      	cmp	r1, r3
 80124c4:	4604      	mov	r4, r0
 80124c6:	9101      	str	r1, [sp, #4]
 80124c8:	d00b      	beq.n	80124e2 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 80124ca:	4601      	mov	r1, r0
 80124cc:	aa01      	add	r2, sp, #4
 80124ce:	a802      	add	r0, sp, #8
 80124d0:	f014 fcf2 	bl	8026eb8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 80124d4:	9b01      	ldr	r3, [sp, #4]
 80124d6:	63e3      	str	r3, [r4, #60]	; 0x3c
 80124d8:	6823      	ldr	r3, [r4, #0]
 80124da:	a902      	add	r1, sp, #8
 80124dc:	691b      	ldr	r3, [r3, #16]
 80124de:	4620      	mov	r0, r4
 80124e0:	4798      	blx	r3
 80124e2:	b004      	add	sp, #16
 80124e4:	bd10      	pop	{r4, pc}
	...

080124e8 <_ZN8touchgfx5Gauge8setValueEi>:
 80124e8:	b570      	push	{r4, r5, r6, lr}
 80124ea:	4604      	mov	r4, r0
 80124ec:	f7fd fba2 	bl	800fc34 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 80124f0:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 80124f4:	429a      	cmp	r2, r3
 80124f6:	bfac      	ite	ge
 80124f8:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 80124fc:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 8012500:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8012504:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 8012508:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 801250c:	1ac9      	subs	r1, r1, r3
 801250e:	2900      	cmp	r1, #0
 8012510:	bfb8      	it	lt
 8012512:	4249      	neglt	r1, r1
 8012514:	b289      	uxth	r1, r1
 8012516:	4620      	mov	r0, r4
 8012518:	f7fd fbae 	bl	800fc78 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 801251c:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8012520:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8012524:	eddf 6a19 	vldr	s13, [pc, #100]	; 801258c <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 8012528:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8012590 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 801252c:	429a      	cmp	r2, r3
 801252e:	4605      	mov	r5, r0
 8012530:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 8012534:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8012538:	da15      	bge.n	8012566 <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 801253a:	1b5b      	subs	r3, r3, r5
 801253c:	ee07 3a90 	vmov	s15, r3
 8012540:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012544:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8012548:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 801254c:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8012550:	ee21 1a07 	vmul.f32	s2, s2, s14
 8012554:	f015 f829 	bl	80275aa <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8012558:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 801255c:	1b49      	subs	r1, r1, r5
 801255e:	4630      	mov	r0, r6
 8012560:	f7ff ffac 	bl	80124bc <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 8012564:	bd70      	pop	{r4, r5, r6, pc}
 8012566:	442b      	add	r3, r5
 8012568:	ee07 3a90 	vmov	s15, r3
 801256c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012570:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8012574:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8012578:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 801257c:	ee21 1a07 	vmul.f32	s2, s2, s14
 8012580:	f015 f813 	bl	80275aa <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8012584:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8012588:	4429      	add	r1, r5
 801258a:	e7e8      	b.n	801255e <_ZN8touchgfx5Gauge8setValueEi+0x76>
 801258c:	43340000 	.word	0x43340000
 8012590:	40490fdb 	.word	0x40490fdb

08012594 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 8012594:	b510      	push	{r4, lr}
 8012596:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 801259a:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 801259e:	0149      	lsls	r1, r1, #5
 80125a0:	0152      	lsls	r2, r2, #5
 80125a2:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 80125a6:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 80125aa:	4604      	mov	r4, r0
 80125ac:	f7fd faec 	bl	800fb88 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 80125b0:	4601      	mov	r1, r0
 80125b2:	4620      	mov	r0, r4
 80125b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80125b8:	f7ff bf96 	b.w	80124e8 <_ZN8touchgfx5Gauge8setValueEi>

080125bc <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 80125bc:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 80125c0:	4770      	bx	lr

080125c2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 80125c2:	b570      	push	{r4, r5, r6, lr}
 80125c4:	880b      	ldrh	r3, [r1, #0]
 80125c6:	85c3      	strh	r3, [r0, #46]	; 0x2e
 80125c8:	4605      	mov	r5, r0
 80125ca:	8813      	ldrh	r3, [r2, #0]
 80125cc:	f825 3f30 	strh.w	r3, [r5, #48]!
 80125d0:	4604      	mov	r4, r0
 80125d2:	4628      	mov	r0, r5
 80125d4:	f006 fb06 	bl	8018be4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80125d8:	4606      	mov	r6, r0
 80125da:	4628      	mov	r0, r5
 80125dc:	f006 fb36 	bl	8018c4c <_ZNK8touchgfx6Bitmap9getHeightEv>
 80125e0:	6823      	ldr	r3, [r4, #0]
 80125e2:	4605      	mov	r5, r0
 80125e4:	4631      	mov	r1, r6
 80125e6:	4620      	mov	r0, r4
 80125e8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80125ea:	4798      	blx	r3
 80125ec:	6823      	ldr	r3, [r4, #0]
 80125ee:	4629      	mov	r1, r5
 80125f0:	4620      	mov	r0, r4
 80125f2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80125f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80125f8:	4718      	bx	r3

080125fa <_ZN8touchgfx14AbstractButton13executeActionEv>:
 80125fa:	b510      	push	{r4, lr}
 80125fc:	4604      	mov	r4, r0
 80125fe:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8012600:	b150      	cbz	r0, 8012618 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8012602:	6803      	ldr	r3, [r0, #0]
 8012604:	68db      	ldr	r3, [r3, #12]
 8012606:	4798      	blx	r3
 8012608:	b130      	cbz	r0, 8012618 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 801260a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 801260c:	6803      	ldr	r3, [r0, #0]
 801260e:	4621      	mov	r1, r4
 8012610:	689b      	ldr	r3, [r3, #8]
 8012612:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012616:	4718      	bx	r3
 8012618:	bd10      	pop	{r4, pc}

0801261a <_ZNK8touchgfx6Button12getSolidRectEv>:
 801261a:	b510      	push	{r4, lr}
 801261c:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8012620:	2bff      	cmp	r3, #255	; 0xff
 8012622:	4604      	mov	r4, r0
 8012624:	d006      	beq.n	8012634 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8012626:	2300      	movs	r3, #0
 8012628:	8003      	strh	r3, [r0, #0]
 801262a:	8043      	strh	r3, [r0, #2]
 801262c:	8083      	strh	r3, [r0, #4]
 801262e:	80c3      	strh	r3, [r0, #6]
 8012630:	4620      	mov	r0, r4
 8012632:	bd10      	pop	{r4, pc}
 8012634:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8012638:	b11b      	cbz	r3, 8012642 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 801263a:	3130      	adds	r1, #48	; 0x30
 801263c:	f006 fb3a 	bl	8018cb4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8012640:	e7f6      	b.n	8012630 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8012642:	312e      	adds	r1, #46	; 0x2e
 8012644:	e7fa      	b.n	801263c <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

08012648 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8012648:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801264c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8012650:	b08a      	sub	sp, #40	; 0x28
 8012652:	4604      	mov	r4, r0
 8012654:	4688      	mov	r8, r1
 8012656:	2b00      	cmp	r3, #0
 8012658:	d066      	beq.n	8012728 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 801265a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 801265c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012660:	a805      	add	r0, sp, #20
 8012662:	f006 fabf 	bl	8018be4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012666:	4607      	mov	r7, r0
 8012668:	a805      	add	r0, sp, #20
 801266a:	f006 faef 	bl	8018c4c <_ZNK8touchgfx6Bitmap9getHeightEv>
 801266e:	f9b8 6000 	ldrsh.w	r6, [r8]
 8012672:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8012676:	4432      	add	r2, r6
 8012678:	b292      	uxth	r2, r2
 801267a:	2300      	movs	r3, #0
 801267c:	fa0f fc82 	sxth.w	ip, r2
 8012680:	459c      	cmp	ip, r3
 8012682:	9306      	str	r3, [sp, #24]
 8012684:	dd52      	ble.n	801272c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012686:	42b7      	cmp	r7, r6
 8012688:	dd50      	ble.n	801272c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801268a:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 801268e:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8012692:	442b      	add	r3, r5
 8012694:	b29b      	uxth	r3, r3
 8012696:	b219      	sxth	r1, r3
 8012698:	2900      	cmp	r1, #0
 801269a:	dd47      	ble.n	801272c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801269c:	42a8      	cmp	r0, r5
 801269e:	dd45      	ble.n	801272c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80126a0:	4567      	cmp	r7, ip
 80126a2:	bfb8      	it	lt
 80126a4:	b2ba      	uxthlt	r2, r7
 80126a6:	4288      	cmp	r0, r1
 80126a8:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 80126ac:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80126b0:	bfb8      	it	lt
 80126b2:	b283      	uxthlt	r3, r0
 80126b4:	1b92      	subs	r2, r2, r6
 80126b6:	1b5b      	subs	r3, r3, r5
 80126b8:	f8ad 201c 	strh.w	r2, [sp, #28]
 80126bc:	f8ad 301e 	strh.w	r3, [sp, #30]
 80126c0:	f8ad 6018 	strh.w	r6, [sp, #24]
 80126c4:	f8ad 501a 	strh.w	r5, [sp, #26]
 80126c8:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80126cc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80126d0:	429a      	cmp	r2, r3
 80126d2:	d026      	beq.n	8012722 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80126d4:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80126d8:	2b00      	cmp	r3, #0
 80126da:	dd22      	ble.n	8012722 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80126dc:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80126e0:	2b00      	cmp	r3, #0
 80126e2:	dd1e      	ble.n	8012722 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80126e4:	2300      	movs	r3, #0
 80126e6:	e9cd 3308 	strd	r3, r3, [sp, #32]
 80126ea:	6823      	ldr	r3, [r4, #0]
 80126ec:	a908      	add	r1, sp, #32
 80126ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80126f0:	4620      	mov	r0, r4
 80126f2:	4798      	blx	r3
 80126f4:	4b0f      	ldr	r3, [pc, #60]	; (8012734 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 80126f6:	681b      	ldr	r3, [r3, #0]
 80126f8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80126fc:	b10a      	cbz	r2, 8012702 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 80126fe:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8012700:	b900      	cbnz	r0, 8012704 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8012702:	6898      	ldr	r0, [r3, #8]
 8012704:	6801      	ldr	r1, [r0, #0]
 8012706:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801270a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801270e:	2501      	movs	r5, #1
 8012710:	9502      	str	r5, [sp, #8]
 8012712:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8012716:	9401      	str	r4, [sp, #4]
 8012718:	ac06      	add	r4, sp, #24
 801271a:	9400      	str	r4, [sp, #0]
 801271c:	688c      	ldr	r4, [r1, #8]
 801271e:	a905      	add	r1, sp, #20
 8012720:	47a0      	blx	r4
 8012722:	b00a      	add	sp, #40	; 0x28
 8012724:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012728:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 801272a:	e797      	b.n	801265c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 801272c:	2300      	movs	r3, #0
 801272e:	9307      	str	r3, [sp, #28]
 8012730:	e7ca      	b.n	80126c8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8012732:	bf00      	nop
 8012734:	20012f24 	.word	0x20012f24

08012738 <_ZNK8touchgfx6Button17invalidateContentEv>:
 8012738:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 801273c:	b12a      	cbz	r2, 801274a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 801273e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8012742:	b112      	cbz	r2, 801274a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8012744:	6803      	ldr	r3, [r0, #0]
 8012746:	695b      	ldr	r3, [r3, #20]
 8012748:	4718      	bx	r3
 801274a:	4770      	bx	lr

0801274c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 801274c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012750:	4b2f      	ldr	r3, [pc, #188]	; (8012810 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8012752:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8012754:	881b      	ldrh	r3, [r3, #0]
 8012756:	4293      	cmp	r3, r2
 8012758:	b08d      	sub	sp, #52	; 0x34
 801275a:	4604      	mov	r4, r0
 801275c:	460f      	mov	r7, r1
 801275e:	d954      	bls.n	801280a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8012760:	4b2c      	ldr	r3, [pc, #176]	; (8012814 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8012762:	6819      	ldr	r1, [r3, #0]
 8012764:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8012768:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 801276c:	4a2a      	ldr	r2, [pc, #168]	; (8012818 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 801276e:	6812      	ldr	r2, [r2, #0]
 8012770:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8012774:	2900      	cmp	r1, #0
 8012776:	d048      	beq.n	801280a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8012778:	785a      	ldrb	r2, [r3, #1]
 801277a:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 801277e:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8012782:	4b26      	ldr	r3, [pc, #152]	; (801281c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8012784:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 8012788:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 801278c:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8012790:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8012792:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 8012796:	9107      	str	r1, [sp, #28]
 8012798:	f3c2 0801 	ubfx	r8, r2, #0, #2
 801279c:	f3c2 0281 	ubfx	r2, r2, #2, #2
 80127a0:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 80127a4:	681a      	ldr	r2, [r3, #0]
 80127a6:	f88d 8020 	strb.w	r8, [sp, #32]
 80127aa:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 80127ae:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 80127b2:	9609      	str	r6, [sp, #36]	; 0x24
 80127b4:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 80127b8:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 80127bc:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 80127c0:	b10b      	cbz	r3, 80127c6 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 80127c2:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 80127c4:	b905      	cbnz	r5, 80127c8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 80127c6:	6895      	ldr	r5, [r2, #8]
 80127c8:	ae05      	add	r6, sp, #20
 80127ca:	4621      	mov	r1, r4
 80127cc:	4630      	mov	r0, r6
 80127ce:	f003 ff7b 	bl	80166c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80127d2:	4b13      	ldr	r3, [pc, #76]	; (8012820 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 80127d4:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80127d6:	6818      	ldr	r0, [r3, #0]
 80127d8:	f7f5 fd10 	bl	80081fc <_ZNK8touchgfx5Texts7getTextEt>
 80127dc:	6823      	ldr	r3, [r4, #0]
 80127de:	4680      	mov	r8, r0
 80127e0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80127e2:	4620      	mov	r0, r4
 80127e4:	4798      	blx	r3
 80127e6:	6823      	ldr	r3, [r4, #0]
 80127e8:	4681      	mov	r9, r0
 80127ea:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80127ee:	4620      	mov	r0, r4
 80127f0:	4798      	blx	r3
 80127f2:	e9cd 9002 	strd	r9, r0, [sp, #8]
 80127f6:	ab07      	add	r3, sp, #28
 80127f8:	9300      	str	r3, [sp, #0]
 80127fa:	f8cd 8004 	str.w	r8, [sp, #4]
 80127fe:	463b      	mov	r3, r7
 8012800:	e896 0006 	ldmia.w	r6, {r1, r2}
 8012804:	4628      	mov	r0, r5
 8012806:	f7f5 fcab 	bl	8008160 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801280a:	b00d      	add	sp, #52	; 0x34
 801280c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012810:	20012f80 	.word	0x20012f80
 8012814:	20012f7c 	.word	0x20012f7c
 8012818:	20012f84 	.word	0x20012f84
 801281c:	20012f24 	.word	0x20012f24
 8012820:	20012f88 	.word	0x20012f88

08012824 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 8012824:	4770      	bx	lr

08012826 <_ZN8touchgfx14ButtonWithIconD1Ev>:
 8012826:	4770      	bx	lr

08012828 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 8012828:	b510      	push	{r4, lr}
 801282a:	213c      	movs	r1, #60	; 0x3c
 801282c:	4604      	mov	r4, r0
 801282e:	f016 fe3e 	bl	80294ae <_ZdlPvj>
 8012832:	4620      	mov	r0, r4
 8012834:	bd10      	pop	{r4, pc}

08012836 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 8012836:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801283a:	461c      	mov	r4, r3
 801283c:	4606      	mov	r6, r0
 801283e:	9f06      	ldr	r7, [sp, #24]
 8012840:	f7ff febf 	bl	80125c2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8012844:	8823      	ldrh	r3, [r4, #0]
 8012846:	86b3      	strh	r3, [r6, #52]	; 0x34
 8012848:	883b      	ldrh	r3, [r7, #0]
 801284a:	86f3      	strh	r3, [r6, #54]	; 0x36
 801284c:	4638      	mov	r0, r7
 801284e:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 8012852:	f006 f9c7 	bl	8018be4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012856:	f04f 0802 	mov.w	r8, #2
 801285a:	fb95 f5f8 	sdiv	r5, r5, r8
 801285e:	b2ad      	uxth	r5, r5
 8012860:	fb90 f0f8 	sdiv	r0, r0, r8
 8012864:	1a2d      	subs	r5, r5, r0
 8012866:	8735      	strh	r5, [r6, #56]	; 0x38
 8012868:	4638      	mov	r0, r7
 801286a:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 801286e:	fb94 f4f8 	sdiv	r4, r4, r8
 8012872:	f006 f9eb 	bl	8018c4c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012876:	b2a4      	uxth	r4, r4
 8012878:	fb90 f0f8 	sdiv	r0, r0, r8
 801287c:	1a24      	subs	r4, r4, r0
 801287e:	8774      	strh	r4, [r6, #58]	; 0x3a
 8012880:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012884 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8012884:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012888:	4604      	mov	r4, r0
 801288a:	b08c      	sub	sp, #48	; 0x30
 801288c:	460d      	mov	r5, r1
 801288e:	f7ff fedb 	bl	8012648 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8012892:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8012896:	2b00      	cmp	r3, #0
 8012898:	d05d      	beq.n	8012956 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 801289a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801289c:	f8ad 3014 	strh.w	r3, [sp, #20]
 80128a0:	a805      	add	r0, sp, #20
 80128a2:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 80128a6:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 80128aa:	f006 f99b 	bl	8018be4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80128ae:	4606      	mov	r6, r0
 80128b0:	a805      	add	r0, sp, #20
 80128b2:	f006 f9cb 	bl	8018c4c <_ZNK8touchgfx6Bitmap9getHeightEv>
 80128b6:	6869      	ldr	r1, [r5, #4]
 80128b8:	f8ad 001e 	strh.w	r0, [sp, #30]
 80128bc:	6828      	ldr	r0, [r5, #0]
 80128be:	f8ad 8018 	strh.w	r8, [sp, #24]
 80128c2:	ab08      	add	r3, sp, #32
 80128c4:	ad08      	add	r5, sp, #32
 80128c6:	c303      	stmia	r3!, {r0, r1}
 80128c8:	a906      	add	r1, sp, #24
 80128ca:	4628      	mov	r0, r5
 80128cc:	f8ad 701a 	strh.w	r7, [sp, #26]
 80128d0:	f8ad 601c 	strh.w	r6, [sp, #28]
 80128d4:	f7fd fc62 	bl	801019c <_ZN8touchgfx4RectaNERKS0_>
 80128d8:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80128dc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80128e0:	429a      	cmp	r2, r3
 80128e2:	d035      	beq.n	8012950 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80128e4:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80128e8:	2b00      	cmp	r3, #0
 80128ea:	dd31      	ble.n	8012950 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80128ec:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 80128f0:	2b00      	cmp	r3, #0
 80128f2:	dd2d      	ble.n	8012950 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80128f4:	2300      	movs	r3, #0
 80128f6:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 80128fa:	6823      	ldr	r3, [r4, #0]
 80128fc:	a90a      	add	r1, sp, #40	; 0x28
 80128fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012900:	4620      	mov	r0, r4
 8012902:	4798      	blx	r3
 8012904:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8012908:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 801290a:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 801290e:	1a9b      	subs	r3, r3, r2
 8012910:	f8ad 3020 	strh.w	r3, [sp, #32]
 8012914:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 8012916:	1ac9      	subs	r1, r1, r3
 8012918:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 801291c:	490f      	ldr	r1, [pc, #60]	; (801295c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 801291e:	6809      	ldr	r1, [r1, #0]
 8012920:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 8012924:	b108      	cbz	r0, 801292a <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 8012926:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 8012928:	b900      	cbnz	r0, 801292c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 801292a:	6888      	ldr	r0, [r1, #8]
 801292c:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 8012930:	440b      	add	r3, r1
 8012932:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8012936:	2601      	movs	r6, #1
 8012938:	440a      	add	r2, r1
 801293a:	6801      	ldr	r1, [r0, #0]
 801293c:	9602      	str	r6, [sp, #8]
 801293e:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8012942:	e9cd 5400 	strd	r5, r4, [sp]
 8012946:	b21b      	sxth	r3, r3
 8012948:	688c      	ldr	r4, [r1, #8]
 801294a:	b212      	sxth	r2, r2
 801294c:	a905      	add	r1, sp, #20
 801294e:	47a0      	blx	r4
 8012950:	b00c      	add	sp, #48	; 0x30
 8012952:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012956:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8012958:	e7a0      	b.n	801289c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 801295a:	bf00      	nop
 801295c:	20012f24 	.word	0x20012f24

08012960 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 8012960:	b510      	push	{r4, lr}
 8012962:	2101      	movs	r1, #1
 8012964:	2200      	movs	r2, #0
 8012966:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801296a:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 801296e:	4c0e      	ldr	r4, [pc, #56]	; (80129a8 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 8012970:	8082      	strh	r2, [r0, #4]
 8012972:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8012976:	80c2      	strh	r2, [r0, #6]
 8012978:	8102      	strh	r2, [r0, #8]
 801297a:	8142      	strh	r2, [r0, #10]
 801297c:	8182      	strh	r2, [r0, #12]
 801297e:	81c2      	strh	r2, [r0, #14]
 8012980:	8202      	strh	r2, [r0, #16]
 8012982:	8242      	strh	r2, [r0, #18]
 8012984:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8012988:	61c2      	str	r2, [r0, #28]
 801298a:	8402      	strh	r2, [r0, #32]
 801298c:	8442      	strh	r2, [r0, #34]	; 0x22
 801298e:	6282      	str	r2, [r0, #40]	; 0x28
 8012990:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8012994:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8012996:	8601      	strh	r1, [r0, #48]	; 0x30
 8012998:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 801299c:	6004      	str	r4, [r0, #0]
 801299e:	8681      	strh	r1, [r0, #52]	; 0x34
 80129a0:	86c1      	strh	r1, [r0, #54]	; 0x36
 80129a2:	8702      	strh	r2, [r0, #56]	; 0x38
 80129a4:	8742      	strh	r2, [r0, #58]	; 0x3a
 80129a6:	bd10      	pop	{r4, pc}
 80129a8:	0802e720 	.word	0x0802e720

080129ac <_ZN8touchgfx5ImageD1Ev>:
 80129ac:	4770      	bx	lr

080129ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 80129ae:	b570      	push	{r4, r5, r6, lr}
 80129b0:	880b      	ldrh	r3, [r1, #0]
 80129b2:	84c3      	strh	r3, [r0, #38]	; 0x26
 80129b4:	4604      	mov	r4, r0
 80129b6:	4608      	mov	r0, r1
 80129b8:	460d      	mov	r5, r1
 80129ba:	f006 f913 	bl	8018be4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80129be:	4606      	mov	r6, r0
 80129c0:	4628      	mov	r0, r5
 80129c2:	f006 f943 	bl	8018c4c <_ZNK8touchgfx6Bitmap9getHeightEv>
 80129c6:	6823      	ldr	r3, [r4, #0]
 80129c8:	4605      	mov	r5, r0
 80129ca:	4631      	mov	r1, r6
 80129cc:	4620      	mov	r0, r4
 80129ce:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80129d0:	4798      	blx	r3
 80129d2:	6823      	ldr	r3, [r4, #0]
 80129d4:	4629      	mov	r1, r5
 80129d6:	4620      	mov	r0, r4
 80129d8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80129da:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80129de:	4718      	bx	r3

080129e0 <_ZN8touchgfx5ImageD0Ev>:
 80129e0:	b510      	push	{r4, lr}
 80129e2:	212c      	movs	r1, #44	; 0x2c
 80129e4:	4604      	mov	r4, r0
 80129e6:	f016 fd62 	bl	80294ae <_ZdlPvj>
 80129ea:	4620      	mov	r0, r4
 80129ec:	bd10      	pop	{r4, pc}

080129ee <_ZNK8touchgfx5Image12getSolidRectEv>:
 80129ee:	b510      	push	{r4, lr}
 80129f0:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 80129f4:	2bff      	cmp	r3, #255	; 0xff
 80129f6:	4604      	mov	r4, r0
 80129f8:	d006      	beq.n	8012a08 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 80129fa:	2300      	movs	r3, #0
 80129fc:	8003      	strh	r3, [r0, #0]
 80129fe:	8043      	strh	r3, [r0, #2]
 8012a00:	8083      	strh	r3, [r0, #4]
 8012a02:	80c3      	strh	r3, [r0, #6]
 8012a04:	4620      	mov	r0, r4
 8012a06:	bd10      	pop	{r4, pc}
 8012a08:	3126      	adds	r1, #38	; 0x26
 8012a0a:	f006 f953 	bl	8018cb4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8012a0e:	e7f9      	b.n	8012a04 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

08012a10 <_ZNK8touchgfx5Image17invalidateContentEv>:
 8012a10:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 8012a14:	b12a      	cbz	r2, 8012a22 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8012a16:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8012a1a:	b112      	cbz	r2, 8012a22 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8012a1c:	6803      	ldr	r3, [r0, #0]
 8012a1e:	695b      	ldr	r3, [r3, #20]
 8012a20:	4718      	bx	r3
 8012a22:	4770      	bx	lr

08012a24 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8012a24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012a28:	4604      	mov	r4, r0
 8012a2a:	b088      	sub	sp, #32
 8012a2c:	f854 3b26 	ldr.w	r3, [r4], #38
 8012a30:	2500      	movs	r5, #0
 8012a32:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012a34:	460f      	mov	r7, r1
 8012a36:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8012a3a:	a904      	add	r1, sp, #16
 8012a3c:	4606      	mov	r6, r0
 8012a3e:	4798      	blx	r3
 8012a40:	4620      	mov	r0, r4
 8012a42:	f006 f8cf 	bl	8018be4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012a46:	4680      	mov	r8, r0
 8012a48:	4620      	mov	r0, r4
 8012a4a:	f006 f8ff 	bl	8018c4c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012a4e:	9506      	str	r5, [sp, #24]
 8012a50:	ad06      	add	r5, sp, #24
 8012a52:	f8ad 001e 	strh.w	r0, [sp, #30]
 8012a56:	4639      	mov	r1, r7
 8012a58:	4628      	mov	r0, r5
 8012a5a:	f8ad 801c 	strh.w	r8, [sp, #28]
 8012a5e:	f7fd fb9d 	bl	801019c <_ZN8touchgfx4RectaNERKS0_>
 8012a62:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8012a66:	2b00      	cmp	r3, #0
 8012a68:	dd19      	ble.n	8012a9e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8012a6a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8012a6e:	2b00      	cmp	r3, #0
 8012a70:	dd15      	ble.n	8012a9e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8012a72:	4b0c      	ldr	r3, [pc, #48]	; (8012aa4 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8012a74:	681b      	ldr	r3, [r3, #0]
 8012a76:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8012a7a:	b10a      	cbz	r2, 8012a80 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 8012a7c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8012a7e:	b900      	cbnz	r0, 8012a82 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8012a80:	6898      	ldr	r0, [r3, #8]
 8012a82:	6801      	ldr	r1, [r0, #0]
 8012a84:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8012a88:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8012a8c:	2701      	movs	r7, #1
 8012a8e:	9702      	str	r7, [sp, #8]
 8012a90:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8012a94:	e9cd 5600 	strd	r5, r6, [sp]
 8012a98:	688d      	ldr	r5, [r1, #8]
 8012a9a:	4621      	mov	r1, r4
 8012a9c:	47a8      	blx	r5
 8012a9e:	b008      	add	sp, #32
 8012aa0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012aa4:	20012f24 	.word	0x20012f24

08012aa8 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 8012aa8:	4770      	bx	lr

08012aaa <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 8012aaa:	b510      	push	{r4, lr}
 8012aac:	2148      	movs	r1, #72	; 0x48
 8012aae:	4604      	mov	r4, r0
 8012ab0:	f016 fcfd 	bl	80294ae <_ZdlPvj>
 8012ab4:	4620      	mov	r0, r4
 8012ab6:	bd10      	pop	{r4, pc}

08012ab8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 8012ab8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012abc:	b08d      	sub	sp, #52	; 0x34
 8012abe:	4604      	mov	r4, r0
 8012ac0:	460f      	mov	r7, r1
 8012ac2:	f7ff fdc1 	bl	8012648 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8012ac6:	4a55      	ldr	r2, [pc, #340]	; (8012c1c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 8012ac8:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8012aca:	8812      	ldrh	r2, [r2, #0]
 8012acc:	429a      	cmp	r2, r3
 8012ace:	f240 8082 	bls.w	8012bd6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8012ad2:	4d53      	ldr	r5, [pc, #332]	; (8012c20 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 8012ad4:	682a      	ldr	r2, [r5, #0]
 8012ad6:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8012ada:	4b52      	ldr	r3, [pc, #328]	; (8012c24 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 8012adc:	681b      	ldr	r3, [r3, #0]
 8012ade:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8012ae2:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 8012ae6:	2200      	movs	r2, #0
 8012ae8:	e9cd 2203 	strd	r2, r2, [sp, #12]
 8012aec:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 8012af0:	2a03      	cmp	r2, #3
 8012af2:	d811      	bhi.n	8012b18 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8012af4:	e8df f002 	tbb	[pc, r2]
 8012af8:	89727902 	.word	0x89727902
 8012afc:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8012b00:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8012b04:	1ad2      	subs	r2, r2, r3
 8012b06:	2002      	movs	r0, #2
 8012b08:	f8ad 1010 	strh.w	r1, [sp, #16]
 8012b0c:	fb92 f2f0 	sdiv	r2, r2, r0
 8012b10:	f8ad 3012 	strh.w	r3, [sp, #18]
 8012b14:	f8ad 200e 	strh.w	r2, [sp, #14]
 8012b18:	f10d 080c 	add.w	r8, sp, #12
 8012b1c:	e898 0003 	ldmia.w	r8, {r0, r1}
 8012b20:	f10d 0914 	add.w	r9, sp, #20
 8012b24:	e889 0003 	stmia.w	r9, {r0, r1}
 8012b28:	4639      	mov	r1, r7
 8012b2a:	4648      	mov	r0, r9
 8012b2c:	f7fd fb36 	bl	801019c <_ZN8touchgfx4RectaNERKS0_>
 8012b30:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8012b34:	2b00      	cmp	r3, #0
 8012b36:	dd4e      	ble.n	8012bd6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8012b38:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8012b3c:	2b00      	cmp	r3, #0
 8012b3e:	dd4a      	ble.n	8012bd6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8012b40:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8012b44:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8012b48:	1a9b      	subs	r3, r3, r2
 8012b4a:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012b4e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8012b52:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8012b56:	1a9b      	subs	r3, r3, r2
 8012b58:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012b5c:	6823      	ldr	r3, [r4, #0]
 8012b5e:	4641      	mov	r1, r8
 8012b60:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012b62:	4620      	mov	r0, r4
 8012b64:	4798      	blx	r3
 8012b66:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8012b6a:	2b00      	cmp	r3, #0
 8012b6c:	d053      	beq.n	8012c16 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 8012b6e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8012b70:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 8012b72:	682b      	ldr	r3, [r5, #0]
 8012b74:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 8012b78:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 8012b7c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8012b80:	785b      	ldrb	r3, [r3, #1]
 8012b82:	9209      	str	r2, [sp, #36]	; 0x24
 8012b84:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8012b88:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8012b8c:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8012b90:	2300      	movs	r3, #0
 8012b92:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8012b96:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8012b9a:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8012b9e:	4b22      	ldr	r3, [pc, #136]	; (8012c28 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8012ba0:	9607      	str	r6, [sp, #28]
 8012ba2:	681b      	ldr	r3, [r3, #0]
 8012ba4:	f88d 5020 	strb.w	r5, [sp, #32]
 8012ba8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8012bac:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8012bb0:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8012bb4:	b10a      	cbz	r2, 8012bba <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 8012bb6:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8012bb8:	b904      	cbnz	r4, 8012bbc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 8012bba:	689c      	ldr	r4, [r3, #8]
 8012bbc:	4b1b      	ldr	r3, [pc, #108]	; (8012c2c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 8012bbe:	6818      	ldr	r0, [r3, #0]
 8012bc0:	f7f5 fb1c 	bl	80081fc <_ZNK8touchgfx5Texts7getTextEt>
 8012bc4:	ab07      	add	r3, sp, #28
 8012bc6:	9001      	str	r0, [sp, #4]
 8012bc8:	9300      	str	r3, [sp, #0]
 8012bca:	e898 0006 	ldmia.w	r8, {r1, r2}
 8012bce:	464b      	mov	r3, r9
 8012bd0:	4620      	mov	r0, r4
 8012bd2:	f7f5 fac5 	bl	8008160 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8012bd6:	b00d      	add	sp, #52	; 0x34
 8012bd8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012bdc:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8012be0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8012be4:	1ad2      	subs	r2, r2, r3
 8012be6:	3201      	adds	r2, #1
 8012be8:	e78d      	b.n	8012b06 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 8012bea:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8012bee:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8012bf2:	1ad2      	subs	r2, r2, r3
 8012bf4:	3201      	adds	r2, #1
 8012bf6:	2002      	movs	r0, #2
 8012bf8:	f8ad 3010 	strh.w	r3, [sp, #16]
 8012bfc:	fb92 f2f0 	sdiv	r2, r2, r0
 8012c00:	f8ad 1012 	strh.w	r1, [sp, #18]
 8012c04:	f8ad 200c 	strh.w	r2, [sp, #12]
 8012c08:	e786      	b.n	8012b18 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8012c0a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8012c0e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8012c12:	1ad2      	subs	r2, r2, r3
 8012c14:	e7ef      	b.n	8012bf6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 8012c16:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8012c18:	e7aa      	b.n	8012b70 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 8012c1a:	bf00      	nop
 8012c1c:	20012f80 	.word	0x20012f80
 8012c20:	20012f7c 	.word	0x20012f7c
 8012c24:	20012f84 	.word	0x20012f84
 8012c28:	20012f24 	.word	0x20012f24
 8012c2c:	20012f88 	.word	0x20012f88

08012c30 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8012c30:	b510      	push	{r4, lr}
 8012c32:	2101      	movs	r1, #1
 8012c34:	4c13      	ldr	r4, [pc, #76]	; (8012c84 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 8012c36:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8012c3a:	2200      	movs	r2, #0
 8012c3c:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8012c40:	6004      	str	r4, [r0, #0]
 8012c42:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8012c46:	4c10      	ldr	r4, [pc, #64]	; (8012c88 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 8012c48:	8082      	strh	r2, [r0, #4]
 8012c4a:	80c2      	strh	r2, [r0, #6]
 8012c4c:	8102      	strh	r2, [r0, #8]
 8012c4e:	8142      	strh	r2, [r0, #10]
 8012c50:	8182      	strh	r2, [r0, #12]
 8012c52:	81c2      	strh	r2, [r0, #14]
 8012c54:	8202      	strh	r2, [r0, #16]
 8012c56:	8242      	strh	r2, [r0, #18]
 8012c58:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8012c5c:	61c2      	str	r2, [r0, #28]
 8012c5e:	8402      	strh	r2, [r0, #32]
 8012c60:	8442      	strh	r2, [r0, #34]	; 0x22
 8012c62:	6282      	str	r2, [r0, #40]	; 0x28
 8012c64:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8012c68:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8012c6a:	8601      	strh	r1, [r0, #48]	; 0x30
 8012c6c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8012c70:	6344      	str	r4, [r0, #52]	; 0x34
 8012c72:	8701      	strh	r1, [r0, #56]	; 0x38
 8012c74:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 8012c78:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 8012c7c:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 8012c80:	bd10      	pop	{r4, pc}
 8012c82:	bf00      	nop
 8012c84:	0802e804 	.word	0x0802e804
 8012c88:	0802bc78 	.word	0x0802bc78

08012c8c <_ZN8touchgfx7OutlineD1Ev>:
 8012c8c:	4770      	bx	lr

08012c8e <_ZN8touchgfx7OutlineD0Ev>:
 8012c8e:	b510      	push	{r4, lr}
 8012c90:	2130      	movs	r1, #48	; 0x30
 8012c92:	4604      	mov	r4, r0
 8012c94:	f016 fc0b 	bl	80294ae <_ZdlPvj>
 8012c98:	4620      	mov	r0, r4
 8012c9a:	bd10      	pop	{r4, pc}

08012c9c <_ZN8touchgfx7Outline5resetEv>:
 8012c9c:	b510      	push	{r4, lr}
 8012c9e:	4604      	mov	r4, r0
 8012ca0:	f000 fe96 	bl	80139d0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8012ca4:	60e0      	str	r0, [r4, #12]
 8012ca6:	f000 fe99 	bl	80139dc <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 8012caa:	68e3      	ldr	r3, [r4, #12]
 8012cac:	6123      	str	r3, [r4, #16]
 8012cae:	08c0      	lsrs	r0, r0, #3
 8012cb0:	2200      	movs	r2, #0
 8012cb2:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8012cb6:	3801      	subs	r0, #1
 8012cb8:	6060      	str	r0, [r4, #4]
 8012cba:	60a2      	str	r2, [r4, #8]
 8012cbc:	8019      	strh	r1, [r3, #0]
 8012cbe:	8059      	strh	r1, [r3, #2]
 8012cc0:	809a      	strh	r2, [r3, #4]
 8012cc2:	80da      	strh	r2, [r3, #6]
 8012cc4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8012cc6:	f023 0301 	bic.w	r3, r3, #1
 8012cca:	f043 0302 	orr.w	r3, r3, #2
 8012cce:	6263      	str	r3, [r4, #36]	; 0x24
 8012cd0:	bd10      	pop	{r4, pc}
	...

08012cd4 <_ZN8touchgfx7OutlineC1Ev>:
 8012cd4:	b510      	push	{r4, lr}
 8012cd6:	4b0a      	ldr	r3, [pc, #40]	; (8012d00 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 8012cd8:	6003      	str	r3, [r0, #0]
 8012cda:	2300      	movs	r3, #0
 8012cdc:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8012ce0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8012ce4:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8012ce8:	e9c0 3307 	strd	r3, r3, [r0, #28]
 8012cec:	6243      	str	r3, [r0, #36]	; 0x24
 8012cee:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8012cf2:	4604      	mov	r4, r0
 8012cf4:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 8012cf8:	f7ff ffd0 	bl	8012c9c <_ZN8touchgfx7Outline5resetEv>
 8012cfc:	4620      	mov	r0, r4
 8012cfe:	bd10      	pop	{r4, pc}
 8012d00:	0802e878 	.word	0x0802e878

08012d04 <_ZN8touchgfx7Outline10renderLineEiiii>:
 8012d04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012d08:	b093      	sub	sp, #76	; 0x4c
 8012d0a:	1156      	asrs	r6, r2, #5
 8012d0c:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8012d0e:	9305      	str	r3, [sp, #20]
 8012d10:	f004 051f 	and.w	r5, r4, #31
 8012d14:	1153      	asrs	r3, r2, #5
 8012d16:	9504      	str	r5, [sp, #16]
 8012d18:	1165      	asrs	r5, r4, #5
 8012d1a:	9303      	str	r3, [sp, #12]
 8012d1c:	42ae      	cmp	r6, r5
 8012d1e:	ea4f 1364 	mov.w	r3, r4, asr #5
 8012d22:	9306      	str	r3, [sp, #24]
 8012d24:	f002 031f 	and.w	r3, r2, #31
 8012d28:	f040 80f8 	bne.w	8012f1c <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 8012d2c:	9c04      	ldr	r4, [sp, #16]
 8012d2e:	9a05      	ldr	r2, [sp, #20]
 8012d30:	42a3      	cmp	r3, r4
 8012d32:	ea4f 1e62 	mov.w	lr, r2, asr #5
 8012d36:	6902      	ldr	r2, [r0, #16]
 8012d38:	d125      	bne.n	8012d86 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 8012d3a:	f9b2 3000 	ldrsh.w	r3, [r2]
 8012d3e:	459e      	cmp	lr, r3
 8012d40:	d103      	bne.n	8012d4a <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8012d42:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8012d46:	429e      	cmp	r6, r3
 8012d48:	d035      	beq.n	8012db6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012d4a:	88d1      	ldrh	r1, [r2, #6]
 8012d4c:	8893      	ldrh	r3, [r2, #4]
 8012d4e:	430b      	orrs	r3, r1
 8012d50:	d010      	beq.n	8012d74 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8012d52:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8012d56:	2b00      	cmp	r3, #0
 8012d58:	db0c      	blt.n	8012d74 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8012d5a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8012d5c:	428b      	cmp	r3, r1
 8012d5e:	da09      	bge.n	8012d74 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8012d60:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8012d64:	428b      	cmp	r3, r1
 8012d66:	bf38      	it	cc
 8012d68:	3208      	addcc	r2, #8
 8012d6a:	f103 0301 	add.w	r3, r3, #1
 8012d6e:	bf38      	it	cc
 8012d70:	6102      	strcc	r2, [r0, #16]
 8012d72:	6083      	str	r3, [r0, #8]
 8012d74:	6903      	ldr	r3, [r0, #16]
 8012d76:	9a03      	ldr	r2, [sp, #12]
 8012d78:	f8a3 e000 	strh.w	lr, [r3]
 8012d7c:	805a      	strh	r2, [r3, #2]
 8012d7e:	2200      	movs	r2, #0
 8012d80:	809a      	strh	r2, [r3, #4]
 8012d82:	80da      	strh	r2, [r3, #6]
 8012d84:	e017      	b.n	8012db6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012d86:	9c05      	ldr	r4, [sp, #20]
 8012d88:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 8012d8c:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8012d90:	f004 041f 	and.w	r4, r4, #31
 8012d94:	114e      	asrs	r6, r1, #5
 8012d96:	9402      	str	r4, [sp, #8]
 8012d98:	9c04      	ldr	r4, [sp, #16]
 8012d9a:	4576      	cmp	r6, lr
 8012d9c:	f001 0c1f 	and.w	ip, r1, #31
 8012da0:	eba4 0403 	sub.w	r4, r4, r3
 8012da4:	d10a      	bne.n	8012dbc <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 8012da6:	9b02      	ldr	r3, [sp, #8]
 8012da8:	449c      	add	ip, r3
 8012daa:	44a0      	add	r8, r4
 8012dac:	fb04 a40c 	mla	r4, r4, ip, sl
 8012db0:	f8a2 8004 	strh.w	r8, [r2, #4]
 8012db4:	80d4      	strh	r4, [r2, #6]
 8012db6:	b013      	add	sp, #76	; 0x4c
 8012db8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012dbc:	9d05      	ldr	r5, [sp, #20]
 8012dbe:	1a69      	subs	r1, r5, r1
 8012dc0:	bf5b      	ittet	pl
 8012dc2:	f1cc 0520 	rsbpl	r5, ip, #32
 8012dc6:	436c      	mulpl	r4, r5
 8012dc8:	2500      	movmi	r5, #0
 8012dca:	2520      	movpl	r5, #32
 8012dcc:	bf44      	itt	mi
 8012dce:	fb04 f40c 	mulmi.w	r4, r4, ip
 8012dd2:	4249      	negmi	r1, r1
 8012dd4:	9501      	str	r5, [sp, #4]
 8012dd6:	9f01      	ldr	r7, [sp, #4]
 8012dd8:	fb94 f5f1 	sdiv	r5, r4, r1
 8012ddc:	fb01 4415 	mls	r4, r1, r5, r4
 8012de0:	bf54      	ite	pl
 8012de2:	f04f 0901 	movpl.w	r9, #1
 8012de6:	f04f 39ff 	movmi.w	r9, #4294967295
 8012dea:	2c00      	cmp	r4, #0
 8012dec:	bfb8      	it	lt
 8012dee:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8012df2:	44bc      	add	ip, r7
 8012df4:	44a8      	add	r8, r5
 8012df6:	fb05 ac0c 	mla	ip, r5, ip, sl
 8012dfa:	f8a2 8004 	strh.w	r8, [r2, #4]
 8012dfe:	f8a2 c006 	strh.w	ip, [r2, #6]
 8012e02:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012e06:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8012e0a:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 8012e0e:	bfb8      	it	lt
 8012e10:	1864      	addlt	r4, r4, r1
 8012e12:	ea58 0202 	orrs.w	r2, r8, r2
 8012e16:	444e      	add	r6, r9
 8012e18:	d011      	beq.n	8012e3e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8012e1a:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8012e1e:	f1b8 0f00 	cmp.w	r8, #0
 8012e22:	db0c      	blt.n	8012e3e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8012e24:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8012e26:	4590      	cmp	r8, r2
 8012e28:	da09      	bge.n	8012e3e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8012e2a:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 8012e2e:	4590      	cmp	r8, r2
 8012e30:	bf3c      	itt	cc
 8012e32:	f10c 0208 	addcc.w	r2, ip, #8
 8012e36:	6102      	strcc	r2, [r0, #16]
 8012e38:	f108 0201 	add.w	r2, r8, #1
 8012e3c:	6082      	str	r2, [r0, #8]
 8012e3e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012e42:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8012e46:	f8ac 6000 	strh.w	r6, [ip]
 8012e4a:	2700      	movs	r7, #0
 8012e4c:	45b6      	cmp	lr, r6
 8012e4e:	f8ac 2002 	strh.w	r2, [ip, #2]
 8012e52:	f8ac 7004 	strh.w	r7, [ip, #4]
 8012e56:	f8ac 7006 	strh.w	r7, [ip, #6]
 8012e5a:	442b      	add	r3, r5
 8012e5c:	d04d      	beq.n	8012efa <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 8012e5e:	9f04      	ldr	r7, [sp, #16]
 8012e60:	1aff      	subs	r7, r7, r3
 8012e62:	443d      	add	r5, r7
 8012e64:	016d      	lsls	r5, r5, #5
 8012e66:	fb95 f8f1 	sdiv	r8, r5, r1
 8012e6a:	fb01 5518 	mls	r5, r1, r8, r5
 8012e6e:	2d00      	cmp	r5, #0
 8012e70:	bfb8      	it	lt
 8012e72:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8012e76:	f108 0701 	add.w	r7, r8, #1
 8012e7a:	bfb8      	it	lt
 8012e7c:	186d      	addlt	r5, r5, r1
 8012e7e:	1a64      	subs	r4, r4, r1
 8012e80:	9703      	str	r7, [sp, #12]
 8012e82:	f04f 0a00 	mov.w	sl, #0
 8012e86:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012e8a:	1964      	adds	r4, r4, r5
 8012e8c:	bf58      	it	pl
 8012e8e:	9f03      	ldrpl	r7, [sp, #12]
 8012e90:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8012e94:	bf48      	it	mi
 8012e96:	4647      	movmi	r7, r8
 8012e98:	44bb      	add	fp, r7
 8012e9a:	f8ac b004 	strh.w	fp, [ip, #4]
 8012e9e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012ea2:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8012ea6:	f8ac b006 	strh.w	fp, [ip, #6]
 8012eaa:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012eae:	443b      	add	r3, r7
 8012eb0:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012eb4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8012eb8:	bf58      	it	pl
 8012eba:	1a64      	subpl	r4, r4, r1
 8012ebc:	ea5b 0707 	orrs.w	r7, fp, r7
 8012ec0:	444e      	add	r6, r9
 8012ec2:	d011      	beq.n	8012ee8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8012ec4:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8012ec8:	f1bb 0f00 	cmp.w	fp, #0
 8012ecc:	db0c      	blt.n	8012ee8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8012ece:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012ed0:	45bb      	cmp	fp, r7
 8012ed2:	da09      	bge.n	8012ee8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8012ed4:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8012ed8:	45bb      	cmp	fp, r7
 8012eda:	bf3c      	itt	cc
 8012edc:	f10c 0708 	addcc.w	r7, ip, #8
 8012ee0:	6107      	strcc	r7, [r0, #16]
 8012ee2:	f10b 0701 	add.w	r7, fp, #1
 8012ee6:	6087      	str	r7, [r0, #8]
 8012ee8:	6907      	ldr	r7, [r0, #16]
 8012eea:	45b6      	cmp	lr, r6
 8012eec:	803e      	strh	r6, [r7, #0]
 8012eee:	807a      	strh	r2, [r7, #2]
 8012ef0:	f8a7 a004 	strh.w	sl, [r7, #4]
 8012ef4:	f8a7 a006 	strh.w	sl, [r7, #6]
 8012ef8:	d1c5      	bne.n	8012e86 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 8012efa:	9a04      	ldr	r2, [sp, #16]
 8012efc:	1ad3      	subs	r3, r2, r3
 8012efe:	6902      	ldr	r2, [r0, #16]
 8012f00:	8891      	ldrh	r1, [r2, #4]
 8012f02:	88d6      	ldrh	r6, [r2, #6]
 8012f04:	4419      	add	r1, r3
 8012f06:	8091      	strh	r1, [r2, #4]
 8012f08:	9902      	ldr	r1, [sp, #8]
 8012f0a:	f101 0c20 	add.w	ip, r1, #32
 8012f0e:	9901      	ldr	r1, [sp, #4]
 8012f10:	ebac 0c01 	sub.w	ip, ip, r1
 8012f14:	fb03 630c 	mla	r3, r3, ip, r6
 8012f18:	80d3      	strh	r3, [r2, #6]
 8012f1a:	e74c      	b.n	8012db6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012f1c:	9d05      	ldr	r5, [sp, #20]
 8012f1e:	1aa2      	subs	r2, r4, r2
 8012f20:	eba5 0501 	sub.w	r5, r5, r1
 8012f24:	9508      	str	r5, [sp, #32]
 8012f26:	9202      	str	r2, [sp, #8]
 8012f28:	f140 8128 	bpl.w	801317c <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 8012f2c:	9a03      	ldr	r2, [sp, #12]
 8012f2e:	2a00      	cmp	r2, #0
 8012f30:	f6ff af41 	blt.w	8012db6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012f34:	9a02      	ldr	r2, [sp, #8]
 8012f36:	4252      	negs	r2, r2
 8012f38:	9202      	str	r2, [sp, #8]
 8012f3a:	9a06      	ldr	r2, [sp, #24]
 8012f3c:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8012f40:	f04f 34ff 	mov.w	r4, #4294967295
 8012f44:	9206      	str	r2, [sp, #24]
 8012f46:	462a      	mov	r2, r5
 8012f48:	940b      	str	r4, [sp, #44]	; 0x2c
 8012f4a:	435a      	muls	r2, r3
 8012f4c:	2400      	movs	r4, #0
 8012f4e:	9d02      	ldr	r5, [sp, #8]
 8012f50:	9401      	str	r4, [sp, #4]
 8012f52:	9c02      	ldr	r4, [sp, #8]
 8012f54:	fb92 f4f4 	sdiv	r4, r2, r4
 8012f58:	fb05 2214 	mls	r2, r5, r4, r2
 8012f5c:	2a00      	cmp	r2, #0
 8012f5e:	9207      	str	r2, [sp, #28]
 8012f60:	bfbc      	itt	lt
 8012f62:	1952      	addlt	r2, r2, r5
 8012f64:	9207      	strlt	r2, [sp, #28]
 8012f66:	9a01      	ldr	r2, [sp, #4]
 8012f68:	6905      	ldr	r5, [r0, #16]
 8012f6a:	bfb8      	it	lt
 8012f6c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8012f70:	eb04 0901 	add.w	r9, r4, r1
 8012f74:	429a      	cmp	r2, r3
 8012f76:	ea4f 1669 	mov.w	r6, r9, asr #5
 8012f7a:	f040 8112 	bne.w	80131a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 8012f7e:	f9b5 3000 	ldrsh.w	r3, [r5]
 8012f82:	429e      	cmp	r6, r3
 8012f84:	d104      	bne.n	8012f90 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8012f86:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8012f8a:	9a03      	ldr	r2, [sp, #12]
 8012f8c:	429a      	cmp	r2, r3
 8012f8e:	d01b      	beq.n	8012fc8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8012f90:	88ea      	ldrh	r2, [r5, #6]
 8012f92:	88ab      	ldrh	r3, [r5, #4]
 8012f94:	4313      	orrs	r3, r2
 8012f96:	d010      	beq.n	8012fba <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8012f98:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8012f9c:	2a00      	cmp	r2, #0
 8012f9e:	db0c      	blt.n	8012fba <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8012fa0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012fa2:	429a      	cmp	r2, r3
 8012fa4:	da09      	bge.n	8012fba <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8012fa6:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 8012faa:	429a      	cmp	r2, r3
 8012fac:	bf38      	it	cc
 8012fae:	3508      	addcc	r5, #8
 8012fb0:	f102 0201 	add.w	r2, r2, #1
 8012fb4:	bf38      	it	cc
 8012fb6:	6105      	strcc	r5, [r0, #16]
 8012fb8:	6082      	str	r2, [r0, #8]
 8012fba:	6903      	ldr	r3, [r0, #16]
 8012fbc:	9a03      	ldr	r2, [sp, #12]
 8012fbe:	805a      	strh	r2, [r3, #2]
 8012fc0:	2200      	movs	r2, #0
 8012fc2:	801e      	strh	r6, [r3, #0]
 8012fc4:	809a      	strh	r2, [r3, #4]
 8012fc6:	80da      	strh	r2, [r3, #6]
 8012fc8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8012fca:	9a03      	ldr	r2, [sp, #12]
 8012fcc:	6901      	ldr	r1, [r0, #16]
 8012fce:	441a      	add	r2, r3
 8012fd0:	f9b1 3000 	ldrsh.w	r3, [r1]
 8012fd4:	42b3      	cmp	r3, r6
 8012fd6:	d103      	bne.n	8012fe0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 8012fd8:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8012fdc:	429a      	cmp	r2, r3
 8012fde:	d01a      	beq.n	8013016 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 8012fe0:	88cc      	ldrh	r4, [r1, #6]
 8012fe2:	888b      	ldrh	r3, [r1, #4]
 8012fe4:	4323      	orrs	r3, r4
 8012fe6:	d010      	beq.n	801300a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8012fe8:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8012fec:	2c00      	cmp	r4, #0
 8012fee:	db0c      	blt.n	801300a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8012ff0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012ff2:	429c      	cmp	r4, r3
 8012ff4:	da09      	bge.n	801300a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8012ff6:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8012ffa:	429c      	cmp	r4, r3
 8012ffc:	bf38      	it	cc
 8012ffe:	3108      	addcc	r1, #8
 8013000:	f104 0401 	add.w	r4, r4, #1
 8013004:	bf38      	it	cc
 8013006:	6101      	strcc	r1, [r0, #16]
 8013008:	6084      	str	r4, [r0, #8]
 801300a:	6903      	ldr	r3, [r0, #16]
 801300c:	2100      	movs	r1, #0
 801300e:	801e      	strh	r6, [r3, #0]
 8013010:	805a      	strh	r2, [r3, #2]
 8013012:	8099      	strh	r1, [r3, #4]
 8013014:	80d9      	strh	r1, [r3, #6]
 8013016:	9b06      	ldr	r3, [sp, #24]
 8013018:	4293      	cmp	r3, r2
 801301a:	f000 8082 	beq.w	8013122 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 801301e:	9b08      	ldr	r3, [sp, #32]
 8013020:	9c02      	ldr	r4, [sp, #8]
 8013022:	9902      	ldr	r1, [sp, #8]
 8013024:	015b      	lsls	r3, r3, #5
 8013026:	fb93 f1f1 	sdiv	r1, r3, r1
 801302a:	fb04 3311 	mls	r3, r4, r1, r3
 801302e:	2b00      	cmp	r3, #0
 8013030:	9103      	str	r1, [sp, #12]
 8013032:	9308      	str	r3, [sp, #32]
 8013034:	da04      	bge.n	8013040 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 8013036:	1e4b      	subs	r3, r1, #1
 8013038:	9303      	str	r3, [sp, #12]
 801303a:	9b08      	ldr	r3, [sp, #32]
 801303c:	4423      	add	r3, r4
 801303e:	9308      	str	r3, [sp, #32]
 8013040:	9b07      	ldr	r3, [sp, #28]
 8013042:	9902      	ldr	r1, [sp, #8]
 8013044:	1a5b      	subs	r3, r3, r1
 8013046:	9307      	str	r3, [sp, #28]
 8013048:	9b01      	ldr	r3, [sp, #4]
 801304a:	f1c3 0320 	rsb	r3, r3, #32
 801304e:	930e      	str	r3, [sp, #56]	; 0x38
 8013050:	990e      	ldr	r1, [sp, #56]	; 0x38
 8013052:	9b01      	ldr	r3, [sp, #4]
 8013054:	1a5b      	subs	r3, r3, r1
 8013056:	464f      	mov	r7, r9
 8013058:	930a      	str	r3, [sp, #40]	; 0x28
 801305a:	2600      	movs	r6, #0
 801305c:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8013060:	185b      	adds	r3, r3, r1
 8013062:	bf58      	it	pl
 8013064:	9902      	ldrpl	r1, [sp, #8]
 8013066:	9307      	str	r3, [sp, #28]
 8013068:	bf5d      	ittte	pl
 801306a:	1a5b      	subpl	r3, r3, r1
 801306c:	9307      	strpl	r3, [sp, #28]
 801306e:	9b03      	ldrpl	r3, [sp, #12]
 8013070:	9903      	ldrmi	r1, [sp, #12]
 8013072:	bf58      	it	pl
 8013074:	1c59      	addpl	r1, r3, #1
 8013076:	4489      	add	r9, r1
 8013078:	2a00      	cmp	r2, #0
 801307a:	ea4f 1a69 	mov.w	sl, r9, asr #5
 801307e:	db2e      	blt.n	80130de <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013080:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8013082:	4293      	cmp	r3, r2
 8013084:	dd2b      	ble.n	80130de <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013086:	9c01      	ldr	r4, [sp, #4]
 8013088:	6905      	ldr	r5, [r0, #16]
 801308a:	46a0      	mov	r8, r4
 801308c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801308e:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8013092:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8013096:	45a0      	cmp	r8, r4
 8013098:	f040 814f 	bne.w	801333a <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 801309c:	f9b5 1000 	ldrsh.w	r1, [r5]
 80130a0:	4551      	cmp	r1, sl
 80130a2:	d103      	bne.n	80130ac <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 80130a4:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80130a8:	4291      	cmp	r1, r2
 80130aa:	d018      	beq.n	80130de <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80130ac:	ea5c 010e 	orrs.w	r1, ip, lr
 80130b0:	d00f      	beq.n	80130d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80130b2:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80130b6:	2900      	cmp	r1, #0
 80130b8:	db0b      	blt.n	80130d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80130ba:	428b      	cmp	r3, r1
 80130bc:	dd09      	ble.n	80130d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80130be:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 80130c2:	4299      	cmp	r1, r3
 80130c4:	bf38      	it	cc
 80130c6:	3508      	addcc	r5, #8
 80130c8:	f101 0101 	add.w	r1, r1, #1
 80130cc:	bf38      	it	cc
 80130ce:	6105      	strcc	r5, [r0, #16]
 80130d0:	6081      	str	r1, [r0, #8]
 80130d2:	6903      	ldr	r3, [r0, #16]
 80130d4:	f8a3 a000 	strh.w	sl, [r3]
 80130d8:	805a      	strh	r2, [r3, #2]
 80130da:	809e      	strh	r6, [r3, #4]
 80130dc:	80de      	strh	r6, [r3, #6]
 80130de:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80130e0:	6901      	ldr	r1, [r0, #16]
 80130e2:	441a      	add	r2, r3
 80130e4:	88cc      	ldrh	r4, [r1, #6]
 80130e6:	888b      	ldrh	r3, [r1, #4]
 80130e8:	4323      	orrs	r3, r4
 80130ea:	d010      	beq.n	801310e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80130ec:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80130f0:	2c00      	cmp	r4, #0
 80130f2:	db0c      	blt.n	801310e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80130f4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80130f6:	429c      	cmp	r4, r3
 80130f8:	da09      	bge.n	801310e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80130fa:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80130fe:	429c      	cmp	r4, r3
 8013100:	bf38      	it	cc
 8013102:	3108      	addcc	r1, #8
 8013104:	f104 0401 	add.w	r4, r4, #1
 8013108:	bf38      	it	cc
 801310a:	6101      	strcc	r1, [r0, #16]
 801310c:	6084      	str	r4, [r0, #8]
 801310e:	6903      	ldr	r3, [r0, #16]
 8013110:	f8a3 a000 	strh.w	sl, [r3]
 8013114:	805a      	strh	r2, [r3, #2]
 8013116:	809e      	strh	r6, [r3, #4]
 8013118:	80de      	strh	r6, [r3, #6]
 801311a:	9b06      	ldr	r3, [sp, #24]
 801311c:	4293      	cmp	r3, r2
 801311e:	464f      	mov	r7, r9
 8013120:	d19c      	bne.n	801305c <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8013122:	9b01      	ldr	r3, [sp, #4]
 8013124:	6907      	ldr	r7, [r0, #16]
 8013126:	f1c3 0620 	rsb	r6, r3, #32
 801312a:	9b05      	ldr	r3, [sp, #20]
 801312c:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8013130:	9b04      	ldr	r3, [sp, #16]
 8013132:	429e      	cmp	r6, r3
 8013134:	f040 81cc 	bne.w	80134d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8013138:	f9b7 3000 	ldrsh.w	r3, [r7]
 801313c:	459e      	cmp	lr, r3
 801313e:	d104      	bne.n	801314a <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8013140:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8013144:	429a      	cmp	r2, r3
 8013146:	f43f ae36 	beq.w	8012db6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801314a:	88f9      	ldrh	r1, [r7, #6]
 801314c:	88bb      	ldrh	r3, [r7, #4]
 801314e:	430b      	orrs	r3, r1
 8013150:	d010      	beq.n	8013174 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8013152:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8013156:	2b00      	cmp	r3, #0
 8013158:	db0c      	blt.n	8013174 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 801315a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801315c:	428b      	cmp	r3, r1
 801315e:	da09      	bge.n	8013174 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8013160:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8013164:	428b      	cmp	r3, r1
 8013166:	bf38      	it	cc
 8013168:	3708      	addcc	r7, #8
 801316a:	f103 0301 	add.w	r3, r3, #1
 801316e:	bf38      	it	cc
 8013170:	6107      	strcc	r7, [r0, #16]
 8013172:	6083      	str	r3, [r0, #8]
 8013174:	6903      	ldr	r3, [r0, #16]
 8013176:	f8a3 e000 	strh.w	lr, [r3]
 801317a:	e5ff      	b.n	8012d7c <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 801317c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 801317e:	9c03      	ldr	r4, [sp, #12]
 8013180:	42a2      	cmp	r2, r4
 8013182:	f6ff ae18 	blt.w	8012db6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013186:	9c06      	ldr	r4, [sp, #24]
 8013188:	42a2      	cmp	r2, r4
 801318a:	bfb8      	it	lt
 801318c:	3201      	addlt	r2, #1
 801318e:	9c08      	ldr	r4, [sp, #32]
 8013190:	bfb8      	it	lt
 8013192:	9206      	strlt	r2, [sp, #24]
 8013194:	f1c3 0220 	rsb	r2, r3, #32
 8013198:	4362      	muls	r2, r4
 801319a:	2401      	movs	r4, #1
 801319c:	940b      	str	r4, [sp, #44]	; 0x2c
 801319e:	2420      	movs	r4, #32
 80131a0:	e6d5      	b.n	8012f4e <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 80131a2:	f009 021f 	and.w	r2, r9, #31
 80131a6:	ea4f 1861 	mov.w	r8, r1, asr #5
 80131aa:	920c      	str	r2, [sp, #48]	; 0x30
 80131ac:	9a01      	ldr	r2, [sp, #4]
 80131ae:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 80131b2:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 80131b6:	45b0      	cmp	r8, r6
 80131b8:	f001 011f 	and.w	r1, r1, #31
 80131bc:	eba2 0203 	sub.w	r2, r2, r3
 80131c0:	d108      	bne.n	80131d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 80131c2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80131c4:	4419      	add	r1, r3
 80131c6:	4496      	add	lr, r2
 80131c8:	fb02 a101 	mla	r1, r2, r1, sl
 80131cc:	f8a5 e004 	strh.w	lr, [r5, #4]
 80131d0:	80e9      	strh	r1, [r5, #6]
 80131d2:	e6f9      	b.n	8012fc8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80131d4:	2c00      	cmp	r4, #0
 80131d6:	f2c0 80a9 	blt.w	801332c <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 80131da:	2701      	movs	r7, #1
 80131dc:	f1c1 0c20 	rsb	ip, r1, #32
 80131e0:	970a      	str	r7, [sp, #40]	; 0x28
 80131e2:	fb02 f20c 	mul.w	r2, r2, ip
 80131e6:	2720      	movs	r7, #32
 80131e8:	9709      	str	r7, [sp, #36]	; 0x24
 80131ea:	fb92 fcf4 	sdiv	ip, r2, r4
 80131ee:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80131f0:	fb04 221c 	mls	r2, r4, ip, r2
 80131f4:	2a00      	cmp	r2, #0
 80131f6:	bfb8      	it	lt
 80131f8:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 80131fc:	4439      	add	r1, r7
 80131fe:	fb0c a101 	mla	r1, ip, r1, sl
 8013202:	80e9      	strh	r1, [r5, #6]
 8013204:	44e6      	add	lr, ip
 8013206:	990a      	ldr	r1, [sp, #40]	; 0x28
 8013208:	f8a5 e004 	strh.w	lr, [r5, #4]
 801320c:	eb08 0501 	add.w	r5, r8, r1
 8013210:	6901      	ldr	r1, [r0, #16]
 8013212:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 8013216:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 801321a:	bfb8      	it	lt
 801321c:	1912      	addlt	r2, r2, r4
 801321e:	ea58 070e 	orrs.w	r7, r8, lr
 8013222:	d010      	beq.n	8013246 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8013224:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8013228:	f1be 0f00 	cmp.w	lr, #0
 801322c:	db0b      	blt.n	8013246 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 801322e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013230:	45be      	cmp	lr, r7
 8013232:	da08      	bge.n	8013246 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8013234:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8013238:	45be      	cmp	lr, r7
 801323a:	bf3c      	itt	cc
 801323c:	3108      	addcc	r1, #8
 801323e:	6101      	strcc	r1, [r0, #16]
 8013240:	f10e 0101 	add.w	r1, lr, #1
 8013244:	6081      	str	r1, [r0, #8]
 8013246:	6901      	ldr	r1, [r0, #16]
 8013248:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801324c:	800d      	strh	r5, [r1, #0]
 801324e:	f04f 0e00 	mov.w	lr, #0
 8013252:	42ae      	cmp	r6, r5
 8013254:	f8a1 8002 	strh.w	r8, [r1, #2]
 8013258:	f8a1 e004 	strh.w	lr, [r1, #4]
 801325c:	f8a1 e006 	strh.w	lr, [r1, #6]
 8013260:	4463      	add	r3, ip
 8013262:	d054      	beq.n	801330e <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8013264:	9901      	ldr	r1, [sp, #4]
 8013266:	1ac9      	subs	r1, r1, r3
 8013268:	4461      	add	r1, ip
 801326a:	0149      	lsls	r1, r1, #5
 801326c:	fb91 fef4 	sdiv	lr, r1, r4
 8013270:	fb04 111e 	mls	r1, r4, lr, r1
 8013274:	2900      	cmp	r1, #0
 8013276:	bfb8      	it	lt
 8013278:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 801327c:	f10e 0701 	add.w	r7, lr, #1
 8013280:	bfb8      	it	lt
 8013282:	1909      	addlt	r1, r1, r4
 8013284:	1b12      	subs	r2, r2, r4
 8013286:	970d      	str	r7, [sp, #52]	; 0x34
 8013288:	f8d0 a010 	ldr.w	sl, [r0, #16]
 801328c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801328e:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8013292:	1852      	adds	r2, r2, r1
 8013294:	bf54      	ite	pl
 8013296:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 801329a:	46f4      	movmi	ip, lr
 801329c:	44e3      	add	fp, ip
 801329e:	f8aa b004 	strh.w	fp, [sl, #4]
 80132a2:	f8ba b006 	ldrh.w	fp, [sl, #6]
 80132a6:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 80132aa:	f8aa b006 	strh.w	fp, [sl, #6]
 80132ae:	4463      	add	r3, ip
 80132b0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80132b4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80132b8:	f8bc a004 	ldrh.w	sl, [ip, #4]
 80132bc:	bf58      	it	pl
 80132be:	1b12      	subpl	r2, r2, r4
 80132c0:	443d      	add	r5, r7
 80132c2:	ea5b 070a 	orrs.w	r7, fp, sl
 80132c6:	d014      	beq.n	80132f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80132c8:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 80132cc:	f1ba 0f00 	cmp.w	sl, #0
 80132d0:	db0f      	blt.n	80132f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80132d2:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80132d4:	45ba      	cmp	sl, r7
 80132d6:	da0c      	bge.n	80132f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80132d8:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 80132dc:	45ba      	cmp	sl, r7
 80132de:	bf38      	it	cc
 80132e0:	f10c 0c08 	addcc.w	ip, ip, #8
 80132e4:	f10a 0a01 	add.w	sl, sl, #1
 80132e8:	bf38      	it	cc
 80132ea:	f8c0 c010 	strcc.w	ip, [r0, #16]
 80132ee:	f8c0 a008 	str.w	sl, [r0, #8]
 80132f2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80132f6:	f04f 0700 	mov.w	r7, #0
 80132fa:	42ae      	cmp	r6, r5
 80132fc:	f8ac 5000 	strh.w	r5, [ip]
 8013300:	f8ac 8002 	strh.w	r8, [ip, #2]
 8013304:	f8ac 7004 	strh.w	r7, [ip, #4]
 8013308:	f8ac 7006 	strh.w	r7, [ip, #6]
 801330c:	d1bc      	bne.n	8013288 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 801330e:	6904      	ldr	r4, [r0, #16]
 8013310:	9a01      	ldr	r2, [sp, #4]
 8013312:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013314:	1ad3      	subs	r3, r2, r3
 8013316:	88a2      	ldrh	r2, [r4, #4]
 8013318:	441a      	add	r2, r3
 801331a:	80a2      	strh	r2, [r4, #4]
 801331c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801331e:	3120      	adds	r1, #32
 8013320:	1a89      	subs	r1, r1, r2
 8013322:	88e2      	ldrh	r2, [r4, #6]
 8013324:	fb03 2301 	mla	r3, r3, r1, r2
 8013328:	80e3      	strh	r3, [r4, #6]
 801332a:	e64d      	b.n	8012fc8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 801332c:	f04f 37ff 	mov.w	r7, #4294967295
 8013330:	970a      	str	r7, [sp, #40]	; 0x28
 8013332:	434a      	muls	r2, r1
 8013334:	4264      	negs	r4, r4
 8013336:	2700      	movs	r7, #0
 8013338:	e756      	b.n	80131e8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 801333a:	ea4f 1867 	mov.w	r8, r7, asr #5
 801333e:	f009 031f 	and.w	r3, r9, #31
 8013342:	45d0      	cmp	r8, sl
 8013344:	f007 071f 	and.w	r7, r7, #31
 8013348:	930f      	str	r3, [sp, #60]	; 0x3c
 801334a:	fa1f fc8c 	uxth.w	ip, ip
 801334e:	fa1f fe8e 	uxth.w	lr, lr
 8013352:	d10a      	bne.n	801336a <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8013354:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013356:	449c      	add	ip, r3
 8013358:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801335a:	f8a5 c004 	strh.w	ip, [r5, #4]
 801335e:	441f      	add	r7, r3
 8013360:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013362:	fb03 e707 	mla	r7, r3, r7, lr
 8013366:	80ef      	strh	r7, [r5, #6]
 8013368:	e6b9      	b.n	80130de <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801336a:	2900      	cmp	r1, #0
 801336c:	f2c0 80a8 	blt.w	80134c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8013370:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8013372:	f1c7 0320 	rsb	r3, r7, #32
 8013376:	4363      	muls	r3, r4
 8013378:	2401      	movs	r4, #1
 801337a:	940d      	str	r4, [sp, #52]	; 0x34
 801337c:	2420      	movs	r4, #32
 801337e:	940c      	str	r4, [sp, #48]	; 0x30
 8013380:	fb93 f4f1 	sdiv	r4, r3, r1
 8013384:	fb01 3b14 	mls	fp, r1, r4, r3
 8013388:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801338a:	f1bb 0f00 	cmp.w	fp, #0
 801338e:	bfb8      	it	lt
 8013390:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8013394:	441f      	add	r7, r3
 8013396:	fb04 e707 	mla	r7, r4, r7, lr
 801339a:	44a4      	add	ip, r4
 801339c:	f8a5 c004 	strh.w	ip, [r5, #4]
 80133a0:	80ef      	strh	r7, [r5, #6]
 80133a2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80133a6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80133a8:	f8bc e006 	ldrh.w	lr, [ip, #6]
 80133ac:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80133b0:	bfb8      	it	lt
 80133b2:	448b      	addlt	fp, r1
 80133b4:	eb08 0503 	add.w	r5, r8, r3
 80133b8:	ea5e 0307 	orrs.w	r3, lr, r7
 80133bc:	d011      	beq.n	80133e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 80133be:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 80133c2:	f1be 0f00 	cmp.w	lr, #0
 80133c6:	db0c      	blt.n	80133e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 80133c8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80133ca:	45be      	cmp	lr, r7
 80133cc:	da09      	bge.n	80133e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 80133ce:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 80133d2:	45be      	cmp	lr, r7
 80133d4:	bf3c      	itt	cc
 80133d6:	f10c 0708 	addcc.w	r7, ip, #8
 80133da:	6107      	strcc	r7, [r0, #16]
 80133dc:	f10e 0701 	add.w	r7, lr, #1
 80133e0:	6087      	str	r7, [r0, #8]
 80133e2:	6907      	ldr	r7, [r0, #16]
 80133e4:	b213      	sxth	r3, r2
 80133e6:	9310      	str	r3, [sp, #64]	; 0x40
 80133e8:	807b      	strh	r3, [r7, #2]
 80133ea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80133ec:	803d      	strh	r5, [r7, #0]
 80133ee:	4555      	cmp	r5, sl
 80133f0:	80be      	strh	r6, [r7, #4]
 80133f2:	80fe      	strh	r6, [r7, #6]
 80133f4:	eb04 0c03 	add.w	ip, r4, r3
 80133f8:	d051      	beq.n	801349e <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 80133fa:	9b01      	ldr	r3, [sp, #4]
 80133fc:	eba3 070c 	sub.w	r7, r3, ip
 8013400:	443c      	add	r4, r7
 8013402:	0164      	lsls	r4, r4, #5
 8013404:	fb94 f8f1 	sdiv	r8, r4, r1
 8013408:	fb01 4418 	mls	r4, r1, r8, r4
 801340c:	2c00      	cmp	r4, #0
 801340e:	bfb8      	it	lt
 8013410:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8013414:	ebab 0301 	sub.w	r3, fp, r1
 8013418:	f108 0701 	add.w	r7, r8, #1
 801341c:	bfb8      	it	lt
 801341e:	1864      	addlt	r4, r4, r1
 8013420:	9309      	str	r3, [sp, #36]	; 0x24
 8013422:	9711      	str	r7, [sp, #68]	; 0x44
 8013424:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013426:	f8d0 e010 	ldr.w	lr, [r0, #16]
 801342a:	191b      	adds	r3, r3, r4
 801342c:	bf58      	it	pl
 801342e:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8013430:	f8be b004 	ldrh.w	fp, [lr, #4]
 8013434:	9309      	str	r3, [sp, #36]	; 0x24
 8013436:	bf48      	it	mi
 8013438:	4647      	movmi	r7, r8
 801343a:	44bb      	add	fp, r7
 801343c:	f8ae b004 	strh.w	fp, [lr, #4]
 8013440:	f8be b006 	ldrh.w	fp, [lr, #6]
 8013444:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8013448:	f8ae b006 	strh.w	fp, [lr, #6]
 801344c:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8013450:	44bc      	add	ip, r7
 8013452:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8013454:	f8be b006 	ldrh.w	fp, [lr, #6]
 8013458:	443d      	add	r5, r7
 801345a:	f8be 7004 	ldrh.w	r7, [lr, #4]
 801345e:	bf5c      	itt	pl
 8013460:	1a5b      	subpl	r3, r3, r1
 8013462:	9309      	strpl	r3, [sp, #36]	; 0x24
 8013464:	ea5b 0307 	orrs.w	r3, fp, r7
 8013468:	d011      	beq.n	801348e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 801346a:	f9be b002 	ldrsh.w	fp, [lr, #2]
 801346e:	f1bb 0f00 	cmp.w	fp, #0
 8013472:	db0c      	blt.n	801348e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8013474:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013476:	45bb      	cmp	fp, r7
 8013478:	da09      	bge.n	801348e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 801347a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 801347e:	45bb      	cmp	fp, r7
 8013480:	bf3c      	itt	cc
 8013482:	f10e 0708 	addcc.w	r7, lr, #8
 8013486:	6107      	strcc	r7, [r0, #16]
 8013488:	f10b 0701 	add.w	r7, fp, #1
 801348c:	6087      	str	r7, [r0, #8]
 801348e:	6907      	ldr	r7, [r0, #16]
 8013490:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013492:	803d      	strh	r5, [r7, #0]
 8013494:	4555      	cmp	r5, sl
 8013496:	807b      	strh	r3, [r7, #2]
 8013498:	80be      	strh	r6, [r7, #4]
 801349a:	80fe      	strh	r6, [r7, #6]
 801349c:	d1c2      	bne.n	8013424 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 801349e:	9b01      	ldr	r3, [sp, #4]
 80134a0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80134a2:	eba3 0c0c 	sub.w	ip, r3, ip
 80134a6:	6903      	ldr	r3, [r0, #16]
 80134a8:	8899      	ldrh	r1, [r3, #4]
 80134aa:	4461      	add	r1, ip
 80134ac:	8099      	strh	r1, [r3, #4]
 80134ae:	990c      	ldr	r1, [sp, #48]	; 0x30
 80134b0:	3720      	adds	r7, #32
 80134b2:	1a7f      	subs	r7, r7, r1
 80134b4:	88d9      	ldrh	r1, [r3, #6]
 80134b6:	fb0c 1c07 	mla	ip, ip, r7, r1
 80134ba:	f8a3 c006 	strh.w	ip, [r3, #6]
 80134be:	e60e      	b.n	80130de <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80134c0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80134c2:	f04f 34ff 	mov.w	r4, #4294967295
 80134c6:	940d      	str	r4, [sp, #52]	; 0x34
 80134c8:	437b      	muls	r3, r7
 80134ca:	4249      	negs	r1, r1
 80134cc:	2400      	movs	r4, #0
 80134ce:	e756      	b.n	801337e <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 80134d0:	9905      	ldr	r1, [sp, #20]
 80134d2:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 80134d6:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 80134da:	f001 011f 	and.w	r1, r1, #31
 80134de:	ea4f 1b69 	mov.w	fp, r9, asr #5
 80134e2:	9102      	str	r1, [sp, #8]
 80134e4:	9904      	ldr	r1, [sp, #16]
 80134e6:	45f3      	cmp	fp, lr
 80134e8:	f009 0c1f 	and.w	ip, r9, #31
 80134ec:	eba1 0406 	sub.w	r4, r1, r6
 80134f0:	d108      	bne.n	8013504 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 80134f2:	9b02      	ldr	r3, [sp, #8]
 80134f4:	449c      	add	ip, r3
 80134f6:	44a0      	add	r8, r4
 80134f8:	fb04 a40c 	mla	r4, r4, ip, sl
 80134fc:	f8a7 8004 	strh.w	r8, [r7, #4]
 8013500:	80fc      	strh	r4, [r7, #6]
 8013502:	e458      	b.n	8012db6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013504:	9905      	ldr	r1, [sp, #20]
 8013506:	ebb1 0109 	subs.w	r1, r1, r9
 801350a:	bf5b      	ittet	pl
 801350c:	f1cc 0520 	rsbpl	r5, ip, #32
 8013510:	436c      	mulpl	r4, r5
 8013512:	2500      	movmi	r5, #0
 8013514:	2520      	movpl	r5, #32
 8013516:	bf44      	itt	mi
 8013518:	fb04 f40c 	mulmi.w	r4, r4, ip
 801351c:	4249      	negmi	r1, r1
 801351e:	9501      	str	r5, [sp, #4]
 8013520:	9b01      	ldr	r3, [sp, #4]
 8013522:	fb94 f5f1 	sdiv	r5, r4, r1
 8013526:	fb01 4415 	mls	r4, r1, r5, r4
 801352a:	bf54      	ite	pl
 801352c:	f04f 0901 	movpl.w	r9, #1
 8013530:	f04f 39ff 	movmi.w	r9, #4294967295
 8013534:	2c00      	cmp	r4, #0
 8013536:	bfb8      	it	lt
 8013538:	f105 35ff 	addlt.w	r5, r5, #4294967295
 801353c:	449c      	add	ip, r3
 801353e:	44a8      	add	r8, r5
 8013540:	fb05 ac0c 	mla	ip, r5, ip, sl
 8013544:	f8a7 8004 	strh.w	r8, [r7, #4]
 8013548:	f8a7 c006 	strh.w	ip, [r7, #6]
 801354c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013550:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8013554:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013558:	bfb8      	it	lt
 801355a:	1864      	addlt	r4, r4, r1
 801355c:	ea58 0707 	orrs.w	r7, r8, r7
 8013560:	eb0b 0309 	add.w	r3, fp, r9
 8013564:	d011      	beq.n	801358a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013566:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 801356a:	f1b8 0f00 	cmp.w	r8, #0
 801356e:	db0c      	blt.n	801358a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013570:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013572:	45b8      	cmp	r8, r7
 8013574:	da09      	bge.n	801358a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013576:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 801357a:	45b8      	cmp	r8, r7
 801357c:	bf3c      	itt	cc
 801357e:	f10c 0708 	addcc.w	r7, ip, #8
 8013582:	6107      	strcc	r7, [r0, #16]
 8013584:	f108 0701 	add.w	r7, r8, #1
 8013588:	6087      	str	r7, [r0, #8]
 801358a:	6907      	ldr	r7, [r0, #16]
 801358c:	f04f 0c00 	mov.w	ip, #0
 8013590:	b212      	sxth	r2, r2
 8013592:	459e      	cmp	lr, r3
 8013594:	803b      	strh	r3, [r7, #0]
 8013596:	807a      	strh	r2, [r7, #2]
 8013598:	f8a7 c004 	strh.w	ip, [r7, #4]
 801359c:	f8a7 c006 	strh.w	ip, [r7, #6]
 80135a0:	442e      	add	r6, r5
 80135a2:	d04d      	beq.n	8013640 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 80135a4:	9f04      	ldr	r7, [sp, #16]
 80135a6:	1bbf      	subs	r7, r7, r6
 80135a8:	443d      	add	r5, r7
 80135aa:	016d      	lsls	r5, r5, #5
 80135ac:	fb95 f8f1 	sdiv	r8, r5, r1
 80135b0:	fb01 5518 	mls	r5, r1, r8, r5
 80135b4:	4565      	cmp	r5, ip
 80135b6:	bfb8      	it	lt
 80135b8:	f108 38ff 	addlt.w	r8, r8, #4294967295
 80135bc:	f108 0701 	add.w	r7, r8, #1
 80135c0:	bfb8      	it	lt
 80135c2:	186d      	addlt	r5, r5, r1
 80135c4:	1a64      	subs	r4, r4, r1
 80135c6:	9703      	str	r7, [sp, #12]
 80135c8:	f04f 0a00 	mov.w	sl, #0
 80135cc:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80135d0:	1964      	adds	r4, r4, r5
 80135d2:	bf58      	it	pl
 80135d4:	9f03      	ldrpl	r7, [sp, #12]
 80135d6:	f8bc b004 	ldrh.w	fp, [ip, #4]
 80135da:	bf48      	it	mi
 80135dc:	4647      	movmi	r7, r8
 80135de:	44bb      	add	fp, r7
 80135e0:	f8ac b004 	strh.w	fp, [ip, #4]
 80135e4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80135e8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 80135ec:	f8ac b006 	strh.w	fp, [ip, #6]
 80135f0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80135f4:	443e      	add	r6, r7
 80135f6:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80135fa:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80135fe:	bf58      	it	pl
 8013600:	1a64      	subpl	r4, r4, r1
 8013602:	ea5b 0707 	orrs.w	r7, fp, r7
 8013606:	444b      	add	r3, r9
 8013608:	d011      	beq.n	801362e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 801360a:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 801360e:	f1bb 0f00 	cmp.w	fp, #0
 8013612:	db0c      	blt.n	801362e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8013614:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013616:	45bb      	cmp	fp, r7
 8013618:	da09      	bge.n	801362e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 801361a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 801361e:	45bb      	cmp	fp, r7
 8013620:	bf3c      	itt	cc
 8013622:	f10c 0708 	addcc.w	r7, ip, #8
 8013626:	6107      	strcc	r7, [r0, #16]
 8013628:	f10b 0701 	add.w	r7, fp, #1
 801362c:	6087      	str	r7, [r0, #8]
 801362e:	6907      	ldr	r7, [r0, #16]
 8013630:	459e      	cmp	lr, r3
 8013632:	803b      	strh	r3, [r7, #0]
 8013634:	807a      	strh	r2, [r7, #2]
 8013636:	f8a7 a004 	strh.w	sl, [r7, #4]
 801363a:	f8a7 a006 	strh.w	sl, [r7, #6]
 801363e:	d1c5      	bne.n	80135cc <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8013640:	9b04      	ldr	r3, [sp, #16]
 8013642:	1b9e      	subs	r6, r3, r6
 8013644:	6903      	ldr	r3, [r0, #16]
 8013646:	889a      	ldrh	r2, [r3, #4]
 8013648:	4432      	add	r2, r6
 801364a:	809a      	strh	r2, [r3, #4]
 801364c:	9a02      	ldr	r2, [sp, #8]
 801364e:	f102 0c20 	add.w	ip, r2, #32
 8013652:	9a01      	ldr	r2, [sp, #4]
 8013654:	ebac 0c02 	sub.w	ip, ip, r2
 8013658:	88da      	ldrh	r2, [r3, #6]
 801365a:	fb06 260c 	mla	r6, r6, ip, r2
 801365e:	80de      	strh	r6, [r3, #6]
 8013660:	f7ff bba9 	b.w	8012db6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08013664 <_ZN8touchgfx7Outline6lineToEii>:
 8013664:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013666:	079b      	lsls	r3, r3, #30
 8013668:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801366a:	460e      	mov	r6, r1
 801366c:	4615      	mov	r5, r2
 801366e:	d511      	bpl.n	8013694 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8013670:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8013674:	ea86 0701 	eor.w	r7, r6, r1
 8013678:	ea85 0302 	eor.w	r3, r5, r2
 801367c:	433b      	orrs	r3, r7
 801367e:	d009      	beq.n	8013694 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8013680:	4633      	mov	r3, r6
 8013682:	9500      	str	r5, [sp, #0]
 8013684:	f7ff fb3e 	bl	8012d04 <_ZN8touchgfx7Outline10renderLineEiiii>
 8013688:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801368a:	e9c0 6505 	strd	r6, r5, [r0, #20]
 801368e:	f043 0301 	orr.w	r3, r3, #1
 8013692:	6243      	str	r3, [r0, #36]	; 0x24
 8013694:	b003      	add	sp, #12
 8013696:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013698 <_ZN8touchgfx7Outline6moveToEii>:
 8013698:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801369a:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801369c:	4615      	mov	r5, r2
 801369e:	079a      	lsls	r2, r3, #30
 80136a0:	4604      	mov	r4, r0
 80136a2:	460e      	mov	r6, r1
 80136a4:	d401      	bmi.n	80136aa <_ZN8touchgfx7Outline6moveToEii+0x12>
 80136a6:	f7ff faf9 	bl	8012c9c <_ZN8touchgfx7Outline5resetEv>
 80136aa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80136ac:	07db      	lsls	r3, r3, #31
 80136ae:	d504      	bpl.n	80136ba <_ZN8touchgfx7Outline6moveToEii+0x22>
 80136b0:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 80136b4:	4620      	mov	r0, r4
 80136b6:	f7ff ffd5 	bl	8013664 <_ZN8touchgfx7Outline6lineToEii>
 80136ba:	6923      	ldr	r3, [r4, #16]
 80136bc:	f9b3 2000 	ldrsh.w	r2, [r3]
 80136c0:	1170      	asrs	r0, r6, #5
 80136c2:	4290      	cmp	r0, r2
 80136c4:	ea4f 1165 	mov.w	r1, r5, asr #5
 80136c8:	d103      	bne.n	80136d2 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 80136ca:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80136ce:	4291      	cmp	r1, r2
 80136d0:	d01a      	beq.n	8013708 <_ZN8touchgfx7Outline6moveToEii+0x70>
 80136d2:	88df      	ldrh	r7, [r3, #6]
 80136d4:	889a      	ldrh	r2, [r3, #4]
 80136d6:	433a      	orrs	r2, r7
 80136d8:	d010      	beq.n	80136fc <_ZN8touchgfx7Outline6moveToEii+0x64>
 80136da:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80136de:	2a00      	cmp	r2, #0
 80136e0:	db0c      	blt.n	80136fc <_ZN8touchgfx7Outline6moveToEii+0x64>
 80136e2:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 80136e4:	42ba      	cmp	r2, r7
 80136e6:	da09      	bge.n	80136fc <_ZN8touchgfx7Outline6moveToEii+0x64>
 80136e8:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 80136ec:	42ba      	cmp	r2, r7
 80136ee:	bf38      	it	cc
 80136f0:	3308      	addcc	r3, #8
 80136f2:	f102 0201 	add.w	r2, r2, #1
 80136f6:	bf38      	it	cc
 80136f8:	6123      	strcc	r3, [r4, #16]
 80136fa:	60a2      	str	r2, [r4, #8]
 80136fc:	6923      	ldr	r3, [r4, #16]
 80136fe:	2200      	movs	r2, #0
 8013700:	8018      	strh	r0, [r3, #0]
 8013702:	8059      	strh	r1, [r3, #2]
 8013704:	809a      	strh	r2, [r3, #4]
 8013706:	80da      	strh	r2, [r3, #6]
 8013708:	6166      	str	r6, [r4, #20]
 801370a:	e9c4 5606 	strd	r5, r6, [r4, #24]
 801370e:	6225      	str	r5, [r4, #32]
 8013710:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08013712 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8013712:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013716:	b0d0      	sub	sp, #320	; 0x140
 8013718:	466c      	mov	r4, sp
 801371a:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 801371e:	4627      	mov	r7, r4
 8013720:	1a0d      	subs	r5, r1, r0
 8013722:	2d48      	cmp	r5, #72	; 0x48
 8013724:	f100 0308 	add.w	r3, r0, #8
 8013728:	f340 80d5 	ble.w	80138d6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 801372c:	112d      	asrs	r5, r5, #4
 801372e:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8013732:	f9b0 9000 	ldrsh.w	r9, [r0]
 8013736:	6816      	ldr	r6, [r2, #0]
 8013738:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 801373c:	6006      	str	r6, [r0, #0]
 801373e:	6856      	ldr	r6, [r2, #4]
 8013740:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8013744:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8013748:	6046      	str	r6, [r0, #4]
 801374a:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801374e:	f8a2 8002 	strh.w	r8, [r2, #2]
 8013752:	f8a2 e004 	strh.w	lr, [r2, #4]
 8013756:	f8a2 c006 	strh.w	ip, [r2, #6]
 801375a:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 801375e:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8013762:	4565      	cmp	r5, ip
 8013764:	f1a1 0208 	sub.w	r2, r1, #8
 8013768:	db06      	blt.n	8013778 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 801376a:	d119      	bne.n	80137a0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 801376c:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8013770:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8013774:	42ae      	cmp	r6, r5
 8013776:	dd13      	ble.n	80137a0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8013778:	460e      	mov	r6, r1
 801377a:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 801377e:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8013782:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8013786:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 801378a:	601d      	str	r5, [r3, #0]
 801378c:	6875      	ldr	r5, [r6, #4]
 801378e:	605d      	str	r5, [r3, #4]
 8013790:	f821 9c08 	strh.w	r9, [r1, #-8]
 8013794:	f821 cc06 	strh.w	ip, [r1, #-6]
 8013798:	f821 8c04 	strh.w	r8, [r1, #-4]
 801379c:	f821 ec02 	strh.w	lr, [r1, #-2]
 80137a0:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 80137a4:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 80137a8:	42ae      	cmp	r6, r5
 80137aa:	db06      	blt.n	80137ba <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 80137ac:	d116      	bne.n	80137dc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 80137ae:	f9b0 c000 	ldrsh.w	ip, [r0]
 80137b2:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 80137b6:	45ac      	cmp	ip, r5
 80137b8:	da10      	bge.n	80137dc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 80137ba:	681d      	ldr	r5, [r3, #0]
 80137bc:	f9b0 8000 	ldrsh.w	r8, [r0]
 80137c0:	6005      	str	r5, [r0, #0]
 80137c2:	685d      	ldr	r5, [r3, #4]
 80137c4:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 80137c8:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 80137cc:	f8a0 8008 	strh.w	r8, [r0, #8]
 80137d0:	6045      	str	r5, [r0, #4]
 80137d2:	8146      	strh	r6, [r0, #10]
 80137d4:	f8a0 e00c 	strh.w	lr, [r0, #12]
 80137d8:	f8a0 c00e 	strh.w	ip, [r0, #14]
 80137dc:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 80137e0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 80137e4:	4565      	cmp	r5, ip
 80137e6:	db06      	blt.n	80137f6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 80137e8:	d119      	bne.n	801381e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80137ea:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 80137ee:	f9b0 5000 	ldrsh.w	r5, [r0]
 80137f2:	42ae      	cmp	r6, r5
 80137f4:	da13      	bge.n	801381e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80137f6:	460e      	mov	r6, r1
 80137f8:	f9b0 9000 	ldrsh.w	r9, [r0]
 80137fc:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8013800:	6005      	str	r5, [r0, #0]
 8013802:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8013806:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 801380a:	6875      	ldr	r5, [r6, #4]
 801380c:	6045      	str	r5, [r0, #4]
 801380e:	f821 9c08 	strh.w	r9, [r1, #-8]
 8013812:	f821 cc06 	strh.w	ip, [r1, #-6]
 8013816:	f821 8c04 	strh.w	r8, [r1, #-4]
 801381a:	f821 ec02 	strh.w	lr, [r1, #-2]
 801381e:	3308      	adds	r3, #8
 8013820:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8013824:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8013828:	45e6      	cmp	lr, ip
 801382a:	dbf8      	blt.n	801381e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801382c:	d105      	bne.n	801383a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 801382e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8013832:	f9b0 5000 	ldrsh.w	r5, [r0]
 8013836:	42ae      	cmp	r6, r5
 8013838:	dbf1      	blt.n	801381e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801383a:	4615      	mov	r5, r2
 801383c:	3a08      	subs	r2, #8
 801383e:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8013842:	45b4      	cmp	ip, r6
 8013844:	dbf9      	blt.n	801383a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8013846:	d105      	bne.n	8013854 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8013848:	f9b0 8000 	ldrsh.w	r8, [r0]
 801384c:	f9b2 6000 	ldrsh.w	r6, [r2]
 8013850:	45b0      	cmp	r8, r6
 8013852:	dbf2      	blt.n	801383a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8013854:	4293      	cmp	r3, r2
 8013856:	f1a5 0608 	sub.w	r6, r5, #8
 801385a:	d816      	bhi.n	801388a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 801385c:	f8d6 c000 	ldr.w	ip, [r6]
 8013860:	f9b3 a000 	ldrsh.w	sl, [r3]
 8013864:	f8c3 c000 	str.w	ip, [r3]
 8013868:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 801386c:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8013870:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8013874:	f8c3 c004 	str.w	ip, [r3, #4]
 8013878:	f825 ac08 	strh.w	sl, [r5, #-8]
 801387c:	f825 ec06 	strh.w	lr, [r5, #-6]
 8013880:	f825 9c04 	strh.w	r9, [r5, #-4]
 8013884:	f825 8c02 	strh.w	r8, [r5, #-2]
 8013888:	e7c9      	b.n	801381e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801388a:	f8d6 e000 	ldr.w	lr, [r6]
 801388e:	f9b0 a000 	ldrsh.w	sl, [r0]
 8013892:	f8c0 e000 	str.w	lr, [r0]
 8013896:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 801389a:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 801389e:	f8d6 e004 	ldr.w	lr, [r6, #4]
 80138a2:	f8c0 e004 	str.w	lr, [r0, #4]
 80138a6:	f825 ac08 	strh.w	sl, [r5, #-8]
 80138aa:	f825 cc06 	strh.w	ip, [r5, #-6]
 80138ae:	f825 9c04 	strh.w	r9, [r5, #-4]
 80138b2:	f825 8c02 	strh.w	r8, [r5, #-2]
 80138b6:	1acd      	subs	r5, r1, r3
 80138b8:	1a16      	subs	r6, r2, r0
 80138ba:	10ed      	asrs	r5, r5, #3
 80138bc:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 80138c0:	bfb5      	itete	lt
 80138c2:	e9c4 0200 	strdlt	r0, r2, [r4]
 80138c6:	e9c4 3100 	strdge	r3, r1, [r4]
 80138ca:	460a      	movlt	r2, r1
 80138cc:	4603      	movge	r3, r0
 80138ce:	3408      	adds	r4, #8
 80138d0:	4618      	mov	r0, r3
 80138d2:	4611      	mov	r1, r2
 80138d4:	e724      	b.n	8013720 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 80138d6:	4299      	cmp	r1, r3
 80138d8:	d928      	bls.n	801392c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 80138da:	f1a3 0210 	sub.w	r2, r3, #16
 80138de:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 80138e2:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 80138e6:	45ac      	cmp	ip, r5
 80138e8:	db06      	blt.n	80138f8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 80138ea:	d11d      	bne.n	8013928 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80138ec:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 80138f0:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 80138f4:	42ae      	cmp	r6, r5
 80138f6:	da17      	bge.n	8013928 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80138f8:	4615      	mov	r5, r2
 80138fa:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 80138fe:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8013902:	6116      	str	r6, [r2, #16]
 8013904:	686e      	ldr	r6, [r5, #4]
 8013906:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 801390a:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 801390e:	f8a2 9008 	strh.w	r9, [r2, #8]
 8013912:	42a8      	cmp	r0, r5
 8013914:	6156      	str	r6, [r2, #20]
 8013916:	f8a2 c00a 	strh.w	ip, [r2, #10]
 801391a:	f8a2 800c 	strh.w	r8, [r2, #12]
 801391e:	f8a2 e00e 	strh.w	lr, [r2, #14]
 8013922:	f1a2 0208 	sub.w	r2, r2, #8
 8013926:	d1da      	bne.n	80138de <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 8013928:	3308      	adds	r3, #8
 801392a:	e7d4      	b.n	80138d6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 801392c:	42bc      	cmp	r4, r7
 801392e:	d903      	bls.n	8013938 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8013930:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8013934:	3c08      	subs	r4, #8
 8013936:	e6f3      	b.n	8013720 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8013938:	b050      	add	sp, #320	; 0x140
 801393a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801393e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 801393e:	b510      	push	{r4, lr}
 8013940:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013942:	07da      	lsls	r2, r3, #31
 8013944:	4604      	mov	r4, r0
 8013946:	d507      	bpl.n	8013958 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8013948:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 801394c:	f7ff fe8a 	bl	8013664 <_ZN8touchgfx7Outline6lineToEii>
 8013950:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013952:	f023 0301 	bic.w	r3, r3, #1
 8013956:	6243      	str	r3, [r0, #36]	; 0x24
 8013958:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801395a:	079b      	lsls	r3, r3, #30
 801395c:	d521      	bpl.n	80139a2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 801395e:	6923      	ldr	r3, [r4, #16]
 8013960:	88d9      	ldrh	r1, [r3, #6]
 8013962:	889a      	ldrh	r2, [r3, #4]
 8013964:	430a      	orrs	r2, r1
 8013966:	d010      	beq.n	801398a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8013968:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801396c:	2a00      	cmp	r2, #0
 801396e:	db0c      	blt.n	801398a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8013970:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8013972:	428a      	cmp	r2, r1
 8013974:	da09      	bge.n	801398a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8013976:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 801397a:	4291      	cmp	r1, r2
 801397c:	bf88      	it	hi
 801397e:	3308      	addhi	r3, #8
 8013980:	f102 0201 	add.w	r2, r2, #1
 8013984:	bf88      	it	hi
 8013986:	6123      	strhi	r3, [r4, #16]
 8013988:	60a2      	str	r2, [r4, #8]
 801398a:	68a1      	ldr	r1, [r4, #8]
 801398c:	b129      	cbz	r1, 801399a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 801398e:	6863      	ldr	r3, [r4, #4]
 8013990:	4299      	cmp	r1, r3
 8013992:	d802      	bhi.n	801399a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8013994:	68e0      	ldr	r0, [r4, #12]
 8013996:	f7ff febc 	bl	8013712 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 801399a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801399c:	f023 0302 	bic.w	r3, r3, #2
 80139a0:	6263      	str	r3, [r4, #36]	; 0x24
 80139a2:	68e0      	ldr	r0, [r4, #12]
 80139a4:	bd10      	pop	{r4, pc}
	...

080139a8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 80139a8:	4b02      	ldr	r3, [pc, #8]	; (80139b4 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 80139aa:	6018      	str	r0, [r3, #0]
 80139ac:	4b02      	ldr	r3, [pc, #8]	; (80139b8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 80139ae:	6019      	str	r1, [r3, #0]
 80139b0:	4770      	bx	lr
 80139b2:	bf00      	nop
 80139b4:	20012f2c 	.word	0x20012f2c
 80139b8:	20012f30 	.word	0x20012f30

080139bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 80139bc:	4a02      	ldr	r2, [pc, #8]	; (80139c8 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 80139be:	2300      	movs	r3, #0
 80139c0:	6013      	str	r3, [r2, #0]
 80139c2:	4a02      	ldr	r2, [pc, #8]	; (80139cc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 80139c4:	6013      	str	r3, [r2, #0]
 80139c6:	4770      	bx	lr
 80139c8:	20012f2c 	.word	0x20012f2c
 80139cc:	20012f30 	.word	0x20012f30

080139d0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 80139d0:	4b01      	ldr	r3, [pc, #4]	; (80139d8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 80139d2:	6818      	ldr	r0, [r3, #0]
 80139d4:	4770      	bx	lr
 80139d6:	bf00      	nop
 80139d8:	20012f2c 	.word	0x20012f2c

080139dc <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 80139dc:	4b01      	ldr	r3, [pc, #4]	; (80139e4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 80139de:	6818      	ldr	r0, [r3, #0]
 80139e0:	4770      	bx	lr
 80139e2:	bf00      	nop
 80139e4:	20012f30 	.word	0x20012f30

080139e8 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 80139e8:	b510      	push	{r4, lr}
 80139ea:	6803      	ldr	r3, [r0, #0]
 80139ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80139ee:	460c      	mov	r4, r1
 80139f0:	4798      	blx	r3
 80139f2:	1b03      	subs	r3, r0, r4
 80139f4:	4258      	negs	r0, r3
 80139f6:	4158      	adcs	r0, r3
 80139f8:	bd10      	pop	{r4, pc}
	...

080139fc <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 80139fc:	4b01      	ldr	r3, [pc, #4]	; (8013a04 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 80139fe:	6019      	str	r1, [r3, #0]
 8013a00:	4770      	bx	lr
 8013a02:	bf00      	nop
 8013a04:	20012f34 	.word	0x20012f34

08013a08 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8013a08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013a0c:	4696      	mov	lr, r2
 8013a0e:	4605      	mov	r5, r0
 8013a10:	4614      	mov	r4, r2
 8013a12:	460e      	mov	r6, r1
 8013a14:	461f      	mov	r7, r3
 8013a16:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013a1a:	b097      	sub	sp, #92	; 0x5c
 8013a1c:	f10d 0c1c 	add.w	ip, sp, #28
 8013a20:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013a24:	f8de 3000 	ldr.w	r3, [lr]
 8013a28:	f8cc 3000 	str.w	r3, [ip]
 8013a2c:	f104 0e14 	add.w	lr, r4, #20
 8013a30:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013a34:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8013a38:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013a3c:	f8de 3000 	ldr.w	r3, [lr]
 8013a40:	f8cc 3000 	str.w	r3, [ip]
 8013a44:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8013a48:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013a4c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8013a50:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013a54:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8013a58:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 8013a5c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8013a60:	f8de 3000 	ldr.w	r3, [lr]
 8013a64:	f8cc 3000 	str.w	r3, [ip]
 8013a68:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8013a6a:	682b      	ldr	r3, [r5, #0]
 8013a6c:	9201      	str	r2, [sp, #4]
 8013a6e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8013a72:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8013a74:	9200      	str	r2, [sp, #0]
 8013a76:	f8cd 8008 	str.w	r8, [sp, #8]
 8013a7a:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 8013a7e:	aa07      	add	r2, sp, #28
 8013a80:	463b      	mov	r3, r7
 8013a82:	4631      	mov	r1, r6
 8013a84:	4628      	mov	r0, r5
 8013a86:	47d8      	blx	fp
 8013a88:	46a6      	mov	lr, r4
 8013a8a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013a8e:	f10d 0c1c 	add.w	ip, sp, #28
 8013a92:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013a96:	f8de 3000 	ldr.w	r3, [lr]
 8013a9a:	f8cc 3000 	str.w	r3, [ip]
 8013a9e:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8013aa2:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013aa6:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8013aaa:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013aae:	343c      	adds	r4, #60	; 0x3c
 8013ab0:	f8de 3000 	ldr.w	r3, [lr]
 8013ab4:	f8cc 3000 	str.w	r3, [ip]
 8013ab8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8013aba:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8013abe:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013ac2:	6823      	ldr	r3, [r4, #0]
 8013ac4:	f8cc 3000 	str.w	r3, [ip]
 8013ac8:	682b      	ldr	r3, [r5, #0]
 8013aca:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8013ace:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8013ad0:	9201      	str	r2, [sp, #4]
 8013ad2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8013ad4:	9200      	str	r2, [sp, #0]
 8013ad6:	f8cd 8008 	str.w	r8, [sp, #8]
 8013ada:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 8013adc:	aa07      	add	r2, sp, #28
 8013ade:	463b      	mov	r3, r7
 8013ae0:	4631      	mov	r1, r6
 8013ae2:	4628      	mov	r0, r5
 8013ae4:	47a0      	blx	r4
 8013ae6:	b017      	add	sp, #92	; 0x5c
 8013ae8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013aec <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 8013aec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013af0:	b08d      	sub	sp, #52	; 0x34
 8013af2:	4688      	mov	r8, r1
 8013af4:	9916      	ldr	r1, [sp, #88]	; 0x58
 8013af6:	f8d3 c000 	ldr.w	ip, [r3]
 8013afa:	680f      	ldr	r7, [r1, #0]
 8013afc:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8013b00:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8013b04:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8013b08:	edd3 6a07 	vldr	s13, [r3, #28]
 8013b0c:	9918      	ldr	r1, [sp, #96]	; 0x60
 8013b0e:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8013b12:	f9b1 9000 	ldrsh.w	r9, [r1]
 8013b16:	f9ba 1000 	ldrsh.w	r1, [sl]
 8013b1a:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 8013b1e:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8013b22:	eba7 070c 	sub.w	r7, r7, ip
 8013b26:	42bc      	cmp	r4, r7
 8013b28:	bfa8      	it	ge
 8013b2a:	463c      	movge	r4, r7
 8013b2c:	ee07 4a90 	vmov	s15, r4
 8013b30:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8013b34:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8013b38:	ee25 4a04 	vmul.f32	s8, s10, s8
 8013b3c:	ee65 4a24 	vmul.f32	s9, s10, s9
 8013b40:	ee25 5a27 	vmul.f32	s10, s10, s15
 8013b44:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8013b48:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8013b4c:	eb09 0e0c 	add.w	lr, r9, ip
 8013b50:	4571      	cmp	r1, lr
 8013b52:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8013b56:	ee32 1a05 	vadd.f32	s2, s4, s10
 8013b5a:	ee36 0a84 	vadd.f32	s0, s13, s8
 8013b5e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8013b62:	ee22 2a07 	vmul.f32	s4, s4, s14
 8013b66:	f340 808d 	ble.w	8013c84 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 8013b6a:	eba1 060e 	sub.w	r6, r1, lr
 8013b6e:	fb96 f5f4 	sdiv	r5, r6, r4
 8013b72:	ee07 5a10 	vmov	s14, r5
 8013b76:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013b7a:	2d00      	cmp	r5, #0
 8013b7c:	fb04 6615 	mls	r6, r4, r5, r6
 8013b80:	eea7 0a04 	vfma.f32	s0, s14, s8
 8013b84:	eee7 0a24 	vfma.f32	s1, s14, s9
 8013b88:	eea7 1a05 	vfma.f32	s2, s14, s10
 8013b8c:	dd13      	ble.n	8013bb6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 8013b8e:	ee70 6a44 	vsub.f32	s13, s0, s8
 8013b92:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8013b96:	eef5 6a40 	vcmp.f32	s13, #0.0
 8013b9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013b9e:	bf18      	it	ne
 8013ba0:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8013ba4:	ee31 2a45 	vsub.f32	s4, s2, s10
 8013ba8:	bf08      	it	eq
 8013baa:	eeb0 7a67 	vmoveq.f32	s14, s15
 8013bae:	ee61 1a87 	vmul.f32	s3, s3, s14
 8013bb2:	ee22 2a07 	vmul.f32	s4, s4, s14
 8013bb6:	fb05 f204 	mul.w	r2, r5, r4
 8013bba:	1abf      	subs	r7, r7, r2
 8013bbc:	4494      	add	ip, r2
 8013bbe:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8013bc2:	4411      	add	r1, r2
 8013bc4:	eb09 020c 	add.w	r2, r9, ip
 8013bc8:	443a      	add	r2, r7
 8013bca:	b209      	sxth	r1, r1
 8013bcc:	428a      	cmp	r2, r1
 8013bce:	bfc4      	itt	gt
 8013bd0:	eba1 0209 	subgt.w	r2, r1, r9
 8013bd4:	eba2 070c 	subgt.w	r7, r2, ip
 8013bd8:	2f00      	cmp	r7, #0
 8013bda:	dd50      	ble.n	8013c7e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 8013bdc:	fb97 f1f4 	sdiv	r1, r7, r4
 8013be0:	fb04 7211 	mls	r2, r4, r1, r7
 8013be4:	b90a      	cbnz	r2, 8013bea <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 8013be6:	3901      	subs	r1, #1
 8013be8:	4622      	mov	r2, r4
 8013bea:	eec7 3a80 	vdiv.f32	s7, s15, s0
 8013bee:	6840      	ldr	r0, [r0, #4]
 8013bf0:	900b      	str	r0, [sp, #44]	; 0x2c
 8013bf2:	f8d0 a000 	ldr.w	sl, [r0]
 8013bf6:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8013bf8:	9008      	str	r0, [sp, #32]
 8013bfa:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 8013bfe:	9818      	ldr	r0, [sp, #96]	; 0x60
 8013c00:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8013c04:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8013c08:	695b      	ldr	r3, [r3, #20]
 8013c0a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8013c0c:	445b      	add	r3, fp
 8013c0e:	eef0 6a42 	vmov.f32	s13, s4
 8013c12:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8013c16:	ee21 3a23 	vmul.f32	s6, s2, s7
 8013c1a:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8013c1e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013c22:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8013c26:	9307      	str	r3, [sp, #28]
 8013c28:	ee17 7a90 	vmov	r7, s15
 8013c2c:	ee73 7a42 	vsub.f32	s15, s6, s4
 8013c30:	eeb0 7a61 	vmov.f32	s14, s3
 8013c34:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8013c38:	ee16 3a90 	vmov	r3, s13
 8013c3c:	fb97 f7f4 	sdiv	r7, r7, r4
 8013c40:	ee17 ca90 	vmov	ip, s15
 8013c44:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8013c48:	fb9c fcf4 	sdiv	ip, ip, r4
 8013c4c:	fb0c 3306 	mla	r3, ip, r6, r3
 8013c50:	9302      	str	r3, [sp, #8]
 8013c52:	ee17 3a10 	vmov	r3, s14
 8013c56:	44b6      	add	lr, r6
 8013c58:	fb04 e505 	mla	r5, r4, r5, lr
 8013c5c:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8013c60:	fb07 3706 	mla	r7, r7, r6, r3
 8013c64:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8013c68:	e9cd 4700 	strd	r4, r7, [sp]
 8013c6c:	2900      	cmp	r1, #0
 8013c6e:	bfcc      	ite	gt
 8013c70:	46a1      	movgt	r9, r4
 8013c72:	4691      	movle	r9, r2
 8013c74:	eba9 0306 	sub.w	r3, r9, r6
 8013c78:	f8da 4008 	ldr.w	r4, [sl, #8]
 8013c7c:	47a0      	blx	r4
 8013c7e:	b00d      	add	sp, #52	; 0x34
 8013c80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013c84:	2500      	movs	r5, #0
 8013c86:	462e      	mov	r6, r5
 8013c88:	e799      	b.n	8013bbe <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

08013c8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8013c8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013c90:	b0db      	sub	sp, #364	; 0x16c
 8013c92:	461d      	mov	r5, r3
 8013c94:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8013c98:	930a      	str	r3, [sp, #40]	; 0x28
 8013c9a:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 8013c9e:	930b      	str	r3, [sp, #44]	; 0x2c
 8013ca0:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8013ca4:	9310      	str	r3, [sp, #64]	; 0x40
 8013ca6:	6803      	ldr	r3, [r0, #0]
 8013ca8:	910f      	str	r1, [sp, #60]	; 0x3c
 8013caa:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 8013cac:	9009      	str	r0, [sp, #36]	; 0x24
 8013cae:	4614      	mov	r4, r2
 8013cb0:	4629      	mov	r1, r5
 8013cb2:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8013cb6:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 8013cba:	47b8      	blx	r7
 8013cbc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013cbe:	6058      	str	r0, [r3, #4]
 8013cc0:	2800      	cmp	r0, #0
 8013cc2:	f000 83a1 	beq.w	8014408 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013cc6:	682b      	ldr	r3, [r5, #0]
 8013cc8:	9314      	str	r3, [sp, #80]	; 0x50
 8013cca:	686b      	ldr	r3, [r5, #4]
 8013ccc:	9315      	str	r3, [sp, #84]	; 0x54
 8013cce:	4bc4      	ldr	r3, [pc, #784]	; (8013fe0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8013cd0:	ed94 7a02 	vldr	s14, [r4, #8]
 8013cd4:	7819      	ldrb	r1, [r3, #0]
 8013cd6:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8013cda:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 8013cde:	2900      	cmp	r1, #0
 8013ce0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8013ce4:	bf16      	itet	ne
 8013ce6:	4619      	movne	r1, r3
 8013ce8:	4611      	moveq	r1, r2
 8013cea:	4613      	movne	r3, r2
 8013cec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013cf0:	9116      	str	r1, [sp, #88]	; 0x58
 8013cf2:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 8013cf6:	f240 8387 	bls.w	8014408 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013cfa:	ed94 7a07 	vldr	s14, [r4, #28]
 8013cfe:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8013d02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013d06:	f240 837f 	bls.w	8014408 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013d0a:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 8013d0e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8013d12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013d16:	f240 8377 	bls.w	8014408 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013d1a:	6822      	ldr	r2, [r4, #0]
 8013d1c:	4bb1      	ldr	r3, [pc, #708]	; (8013fe4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 8013d1e:	429a      	cmp	r2, r3
 8013d20:	f2c0 8372 	blt.w	8014408 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013d24:	49b0      	ldr	r1, [pc, #704]	; (8013fe8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8013d26:	6963      	ldr	r3, [r4, #20]
 8013d28:	428a      	cmp	r2, r1
 8013d2a:	f300 836d 	bgt.w	8014408 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013d2e:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8013d32:	48ae      	ldr	r0, [pc, #696]	; (8013fec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8013d34:	33ff      	adds	r3, #255	; 0xff
 8013d36:	4283      	cmp	r3, r0
 8013d38:	f200 8366 	bhi.w	8014408 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013d3c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8013d3e:	4dac      	ldr	r5, [pc, #688]	; (8013ff0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8013d40:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8013d44:	33ff      	adds	r3, #255	; 0xff
 8013d46:	42ab      	cmp	r3, r5
 8013d48:	f200 835e 	bhi.w	8014408 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013d4c:	6862      	ldr	r2, [r4, #4]
 8013d4e:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8013d52:	33ff      	adds	r3, #255	; 0xff
 8013d54:	4283      	cmp	r3, r0
 8013d56:	f200 8357 	bhi.w	8014408 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013d5a:	69a1      	ldr	r1, [r4, #24]
 8013d5c:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8013d60:	33ff      	adds	r3, #255	; 0xff
 8013d62:	4283      	cmp	r3, r0
 8013d64:	f200 8350 	bhi.w	8014408 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013d68:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8013d6a:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 8013d6e:	30ff      	adds	r0, #255	; 0xff
 8013d70:	42a8      	cmp	r0, r5
 8013d72:	f200 8349 	bhi.w	8014408 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013d76:	428a      	cmp	r2, r1
 8013d78:	f280 8110 	bge.w	8013f9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8013d7c:	429a      	cmp	r2, r3
 8013d7e:	f300 8119 	bgt.w	8013fb4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8013d82:	4299      	cmp	r1, r3
 8013d84:	f280 811d 	bge.w	8013fc2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8013d88:	2502      	movs	r5, #2
 8013d8a:	2701      	movs	r7, #1
 8013d8c:	46a9      	mov	r9, r5
 8013d8e:	46b8      	mov	r8, r7
 8013d90:	f04f 0a00 	mov.w	sl, #0
 8013d94:	4621      	mov	r1, r4
 8013d96:	a849      	add	r0, sp, #292	; 0x124
 8013d98:	f003 feec 	bl	8017b74 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8013d9c:	4622      	mov	r2, r4
 8013d9e:	4653      	mov	r3, sl
 8013da0:	a949      	add	r1, sp, #292	; 0x124
 8013da2:	f8cd 9000 	str.w	r9, [sp]
 8013da6:	a819      	add	r0, sp, #100	; 0x64
 8013da8:	f004 f814 	bl	8017dd4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8013dac:	4622      	mov	r2, r4
 8013dae:	4653      	mov	r3, sl
 8013db0:	a949      	add	r1, sp, #292	; 0x124
 8013db2:	f8cd 8000 	str.w	r8, [sp]
 8013db6:	a829      	add	r0, sp, #164	; 0xa4
 8013db8:	f004 f80c 	bl	8017dd4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8013dbc:	4643      	mov	r3, r8
 8013dbe:	4622      	mov	r2, r4
 8013dc0:	a949      	add	r1, sp, #292	; 0x124
 8013dc2:	f8cd 9000 	str.w	r9, [sp]
 8013dc6:	a839      	add	r0, sp, #228	; 0xe4
 8013dc8:	f004 f804 	bl	8017dd4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8013dcc:	42af      	cmp	r7, r5
 8013dce:	bfb5      	itete	lt
 8013dd0:	2300      	movlt	r3, #0
 8013dd2:	2301      	movge	r3, #1
 8013dd4:	930e      	strlt	r3, [sp, #56]	; 0x38
 8013dd6:	930e      	strge	r3, [sp, #56]	; 0x38
 8013dd8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013dda:	e893 0003 	ldmia.w	r3, {r0, r1}
 8013dde:	af12      	add	r7, sp, #72	; 0x48
 8013de0:	bfb9      	ittee	lt
 8013de2:	ad29      	addlt	r5, sp, #164	; 0xa4
 8013de4:	ac19      	addlt	r4, sp, #100	; 0x64
 8013de6:	ad19      	addge	r5, sp, #100	; 0x64
 8013de8:	ac29      	addge	r4, sp, #164	; 0xa4
 8013dea:	e887 0003 	stmia.w	r7, {r0, r1}
 8013dee:	b928      	cbnz	r0, 8013dfc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8013df0:	4b80      	ldr	r3, [pc, #512]	; (8013ff4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8013df2:	6818      	ldr	r0, [r3, #0]
 8013df4:	6803      	ldr	r3, [r0, #0]
 8013df6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013df8:	4798      	blx	r3
 8013dfa:	6038      	str	r0, [r7, #0]
 8013dfc:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8013dfe:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8013e02:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8013e06:	930c      	str	r3, [sp, #48]	; 0x30
 8013e08:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013e0a:	6963      	ldr	r3, [r4, #20]
 8013e0c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8013e0e:	440b      	add	r3, r1
 8013e10:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8013e14:	4408      	add	r0, r1
 8013e16:	b200      	sxth	r0, r0
 8013e18:	4283      	cmp	r3, r0
 8013e1a:	900d      	str	r0, [sp, #52]	; 0x34
 8013e1c:	f280 80dd 	bge.w	8013fda <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8013e20:	428b      	cmp	r3, r1
 8013e22:	da08      	bge.n	8013e36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8013e24:	2a00      	cmp	r2, #0
 8013e26:	dd06      	ble.n	8013e36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8013e28:	1acb      	subs	r3, r1, r3
 8013e2a:	429a      	cmp	r2, r3
 8013e2c:	f2c0 80e4 	blt.w	8013ff8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8013e30:	2b00      	cmp	r3, #0
 8013e32:	f300 80e2 	bgt.w	8013ffa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8013e36:	6967      	ldr	r7, [r4, #20]
 8013e38:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013e3a:	443b      	add	r3, r7
 8013e3c:	461f      	mov	r7, r3
 8013e3e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013e40:	1bdf      	subs	r7, r3, r7
 8013e42:	4297      	cmp	r7, r2
 8013e44:	bfa8      	it	ge
 8013e46:	4617      	movge	r7, r2
 8013e48:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8013e4c:	2f00      	cmp	r7, #0
 8013e4e:	f340 8166 	ble.w	801411e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8013e52:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8013e54:	6829      	ldr	r1, [r5, #0]
 8013e56:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013e5a:	f9bb 3000 	ldrsh.w	r3, [fp]
 8013e5e:	6820      	ldr	r0, [r4, #0]
 8013e60:	4411      	add	r1, r2
 8013e62:	4299      	cmp	r1, r3
 8013e64:	dd1a      	ble.n	8013e9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8013e66:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8013e6a:	440b      	add	r3, r1
 8013e6c:	4402      	add	r2, r0
 8013e6e:	b21b      	sxth	r3, r3
 8013e70:	429a      	cmp	r2, r3
 8013e72:	dc13      	bgt.n	8013e9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8013e74:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013e76:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013e78:	681b      	ldr	r3, [r3, #0]
 8013e7a:	9206      	str	r2, [sp, #24]
 8013e7c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013e7e:	9205      	str	r2, [sp, #20]
 8013e80:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013e82:	9500      	str	r5, [sp, #0]
 8013e84:	e9cd b203 	strd	fp, r2, [sp, #12]
 8013e88:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8013e8a:	9809      	ldr	r0, [sp, #36]	; 0x24
 8013e8c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8013e90:	a912      	add	r1, sp, #72	; 0x48
 8013e92:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8013e96:	aa49      	add	r2, sp, #292	; 0x124
 8013e98:	4623      	mov	r3, r4
 8013e9a:	47c8      	blx	r9
 8013e9c:	e9d4 2300 	ldrd	r2, r3, [r4]
 8013ea0:	441a      	add	r2, r3
 8013ea2:	6963      	ldr	r3, [r4, #20]
 8013ea4:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8013ea8:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8013eac:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8013eb0:	68a1      	ldr	r1, [r4, #8]
 8013eb2:	ed94 6a08 	vldr	s12, [r4, #32]
 8013eb6:	6022      	str	r2, [r4, #0]
 8013eb8:	3301      	adds	r3, #1
 8013eba:	6163      	str	r3, [r4, #20]
 8013ebc:	69a3      	ldr	r3, [r4, #24]
 8013ebe:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013ec2:	3b01      	subs	r3, #1
 8013ec4:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8013ec8:	61a3      	str	r3, [r4, #24]
 8013eca:	6923      	ldr	r3, [r4, #16]
 8013ecc:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8013ed0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013ed4:	edd4 6a07 	vldr	s13, [r4, #28]
 8013ed8:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8013edc:	440b      	add	r3, r1
 8013ede:	68e1      	ldr	r1, [r4, #12]
 8013ee0:	6123      	str	r3, [r4, #16]
 8013ee2:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013ee6:	428b      	cmp	r3, r1
 8013ee8:	edc4 6a07 	vstr	s13, [r4, #28]
 8013eec:	db15      	blt.n	8013f1a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 8013eee:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8013ef2:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013ef6:	3201      	adds	r2, #1
 8013ef8:	edc4 6a07 	vstr	s13, [r4, #28]
 8013efc:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8013f00:	6022      	str	r2, [r4, #0]
 8013f02:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013f06:	1a5b      	subs	r3, r3, r1
 8013f08:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8013f0c:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8013f10:	6123      	str	r3, [r4, #16]
 8013f12:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013f16:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8013f1a:	e9d5 2300 	ldrd	r2, r3, [r5]
 8013f1e:	441a      	add	r2, r3
 8013f20:	696b      	ldr	r3, [r5, #20]
 8013f22:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8013f26:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8013f2a:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8013f2e:	68a9      	ldr	r1, [r5, #8]
 8013f30:	ed95 6a08 	vldr	s12, [r5, #32]
 8013f34:	602a      	str	r2, [r5, #0]
 8013f36:	3301      	adds	r3, #1
 8013f38:	616b      	str	r3, [r5, #20]
 8013f3a:	69ab      	ldr	r3, [r5, #24]
 8013f3c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013f40:	3b01      	subs	r3, #1
 8013f42:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8013f46:	61ab      	str	r3, [r5, #24]
 8013f48:	692b      	ldr	r3, [r5, #16]
 8013f4a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8013f4e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013f52:	edd5 6a07 	vldr	s13, [r5, #28]
 8013f56:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013f5a:	440b      	add	r3, r1
 8013f5c:	68e9      	ldr	r1, [r5, #12]
 8013f5e:	612b      	str	r3, [r5, #16]
 8013f60:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013f64:	428b      	cmp	r3, r1
 8013f66:	edc5 6a07 	vstr	s13, [r5, #28]
 8013f6a:	db15      	blt.n	8013f98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8013f6c:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8013f70:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013f74:	3201      	adds	r2, #1
 8013f76:	edc5 6a07 	vstr	s13, [r5, #28]
 8013f7a:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8013f7e:	602a      	str	r2, [r5, #0]
 8013f80:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013f84:	1a5b      	subs	r3, r3, r1
 8013f86:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8013f8a:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8013f8e:	612b      	str	r3, [r5, #16]
 8013f90:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013f94:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013f98:	3f01      	subs	r7, #1
 8013f9a:	e757      	b.n	8013e4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8013f9c:	4299      	cmp	r1, r3
 8013f9e:	dc13      	bgt.n	8013fc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8013fa0:	429a      	cmp	r2, r3
 8013fa2:	da14      	bge.n	8013fce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8013fa4:	2502      	movs	r5, #2
 8013fa6:	2703      	movs	r7, #3
 8013fa8:	46a9      	mov	r9, r5
 8013faa:	f04f 0800 	mov.w	r8, #0
 8013fae:	f04f 0a01 	mov.w	sl, #1
 8013fb2:	e6ef      	b.n	8013d94 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8013fb4:	2501      	movs	r5, #1
 8013fb6:	2700      	movs	r7, #0
 8013fb8:	46a9      	mov	r9, r5
 8013fba:	46b8      	mov	r8, r7
 8013fbc:	f04f 0a02 	mov.w	sl, #2
 8013fc0:	e6e8      	b.n	8013d94 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8013fc2:	2501      	movs	r5, #1
 8013fc4:	2702      	movs	r7, #2
 8013fc6:	e6e1      	b.n	8013d8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8013fc8:	2500      	movs	r5, #0
 8013fca:	2701      	movs	r7, #1
 8013fcc:	e7f4      	b.n	8013fb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 8013fce:	2702      	movs	r7, #2
 8013fd0:	2503      	movs	r5, #3
 8013fd2:	f04f 0900 	mov.w	r9, #0
 8013fd6:	46b8      	mov	r8, r7
 8013fd8:	e7e9      	b.n	8013fae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 8013fda:	4613      	mov	r3, r2
 8013fdc:	e728      	b.n	8013e30 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 8013fde:	bf00      	nop
 8013fe0:	20012f1c 	.word	0x20012f1c
 8013fe4:	fffd8f01 	.word	0xfffd8f01
 8013fe8:	00027100 	.word	0x00027100
 8013fec:	0004e1ff 	.word	0x0004e1ff
 8013ff0:	0004e1fe 	.word	0x0004e1fe
 8013ff4:	20012f24 	.word	0x20012f24
 8013ff8:	4613      	mov	r3, r2
 8013ffa:	992b      	ldr	r1, [sp, #172]	; 0xac
 8013ffc:	9111      	str	r1, [sp, #68]	; 0x44
 8013ffe:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8014002:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8014006:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8014008:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 801400c:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8014010:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8014014:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8014018:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 801401c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8014020:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8014024:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8014028:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 801402c:	469e      	mov	lr, r3
 801402e:	469c      	mov	ip, r3
 8014030:	f04f 0900 	mov.w	r9, #0
 8014034:	f1bc 0f00 	cmp.w	ip, #0
 8014038:	d147      	bne.n	80140ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 801403a:	eb03 0c07 	add.w	ip, r3, r7
 801403e:	1ad7      	subs	r7, r2, r3
 8014040:	f1b9 0f00 	cmp.w	r9, #0
 8014044:	d009      	beq.n	801405a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8014046:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 801404a:	9029      	str	r0, [sp, #164]	; 0xa4
 801404c:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8014050:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8014054:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8014058:	912d      	str	r1, [sp, #180]	; 0xb4
 801405a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801405c:	9111      	str	r1, [sp, #68]	; 0x44
 801405e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8014062:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8014066:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801406a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801406e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8014072:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8014076:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801407a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801407e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8014082:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8014086:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801408a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801408e:	f04f 0800 	mov.w	r8, #0
 8014092:	f1be 0f00 	cmp.w	lr, #0
 8014096:	d031      	beq.n	80140fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8014098:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801409a:	4431      	add	r1, r6
 801409c:	4549      	cmp	r1, r9
 801409e:	4450      	add	r0, sl
 80140a0:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80140a4:	ee37 7a04 	vadd.f32	s14, s14, s8
 80140a8:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80140ac:	db08      	blt.n	80140c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 80140ae:	ee77 7a85 	vadd.f32	s15, s15, s10
 80140b2:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80140b6:	ee37 7a06 	vadd.f32	s14, s14, s12
 80140ba:	3001      	adds	r0, #1
 80140bc:	eba1 0109 	sub.w	r1, r1, r9
 80140c0:	f10e 3eff 	add.w	lr, lr, #4294967295
 80140c4:	f04f 0801 	mov.w	r8, #1
 80140c8:	e7e3      	b.n	8014092 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 80140ca:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80140cc:	4431      	add	r1, r6
 80140ce:	4541      	cmp	r1, r8
 80140d0:	4450      	add	r0, sl
 80140d2:	ee37 7a24 	vadd.f32	s14, s14, s9
 80140d6:	ee77 7a84 	vadd.f32	s15, s15, s8
 80140da:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80140de:	db08      	blt.n	80140f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 80140e0:	ee76 6a85 	vadd.f32	s13, s13, s10
 80140e4:	ee37 7a25 	vadd.f32	s14, s14, s11
 80140e8:	ee77 7a86 	vadd.f32	s15, s15, s12
 80140ec:	3001      	adds	r0, #1
 80140ee:	eba1 0108 	sub.w	r1, r1, r8
 80140f2:	f10c 3cff 	add.w	ip, ip, #4294967295
 80140f6:	f04f 0901 	mov.w	r9, #1
 80140fa:	e79b      	b.n	8014034 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 80140fc:	449c      	add	ip, r3
 80140fe:	1aff      	subs	r7, r7, r3
 8014100:	f1b8 0f00 	cmp.w	r8, #0
 8014104:	d009      	beq.n	801411a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8014106:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 801410a:	9019      	str	r0, [sp, #100]	; 0x64
 801410c:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8014110:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8014114:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8014118:	911d      	str	r1, [sp, #116]	; 0x74
 801411a:	1ad2      	subs	r2, r2, r3
 801411c:	e68b      	b.n	8013e36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801411e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014120:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8014122:	2b00      	cmp	r3, #0
 8014124:	f000 80d1 	beq.w	80142ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8014128:	ad19      	add	r5, sp, #100	; 0x64
 801412a:	ac39      	add	r4, sp, #228	; 0xe4
 801412c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801412e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8014132:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8014136:	930c      	str	r3, [sp, #48]	; 0x30
 8014138:	990c      	ldr	r1, [sp, #48]	; 0x30
 801413a:	6963      	ldr	r3, [r4, #20]
 801413c:	440b      	add	r3, r1
 801413e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8014142:	4408      	add	r0, r1
 8014144:	b200      	sxth	r0, r0
 8014146:	4283      	cmp	r3, r0
 8014148:	900d      	str	r0, [sp, #52]	; 0x34
 801414a:	f280 80c1 	bge.w	80142d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 801414e:	428b      	cmp	r3, r1
 8014150:	da08      	bge.n	8014164 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8014152:	2a00      	cmp	r2, #0
 8014154:	dd06      	ble.n	8014164 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8014156:	1acb      	subs	r3, r1, r3
 8014158:	429a      	cmp	r2, r3
 801415a:	f2c0 80bb 	blt.w	80142d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 801415e:	2b00      	cmp	r3, #0
 8014160:	f300 80b9 	bgt.w	80142d6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8014164:	6967      	ldr	r7, [r4, #20]
 8014166:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014168:	443b      	add	r3, r7
 801416a:	461f      	mov	r7, r3
 801416c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801416e:	1bdf      	subs	r7, r3, r7
 8014170:	4297      	cmp	r7, r2
 8014172:	bfa8      	it	ge
 8014174:	4617      	movge	r7, r2
 8014176:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801417a:	2f00      	cmp	r7, #0
 801417c:	f340 813c 	ble.w	80143f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8014180:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8014182:	6829      	ldr	r1, [r5, #0]
 8014184:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014188:	f9bb 3000 	ldrsh.w	r3, [fp]
 801418c:	6820      	ldr	r0, [r4, #0]
 801418e:	4411      	add	r1, r2
 8014190:	4299      	cmp	r1, r3
 8014192:	dd1a      	ble.n	80141ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8014194:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8014198:	440b      	add	r3, r1
 801419a:	4402      	add	r2, r0
 801419c:	b21b      	sxth	r3, r3
 801419e:	429a      	cmp	r2, r3
 80141a0:	dc13      	bgt.n	80141ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 80141a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80141a4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80141a6:	681b      	ldr	r3, [r3, #0]
 80141a8:	9206      	str	r2, [sp, #24]
 80141aa:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80141ac:	9205      	str	r2, [sp, #20]
 80141ae:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80141b0:	9500      	str	r5, [sp, #0]
 80141b2:	e9cd b203 	strd	fp, r2, [sp, #12]
 80141b6:	9a64      	ldr	r2, [sp, #400]	; 0x190
 80141b8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80141ba:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80141be:	a912      	add	r1, sp, #72	; 0x48
 80141c0:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 80141c4:	aa49      	add	r2, sp, #292	; 0x124
 80141c6:	4623      	mov	r3, r4
 80141c8:	47c8      	blx	r9
 80141ca:	e9d4 2300 	ldrd	r2, r3, [r4]
 80141ce:	441a      	add	r2, r3
 80141d0:	6963      	ldr	r3, [r4, #20]
 80141d2:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 80141d6:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 80141da:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 80141de:	68a1      	ldr	r1, [r4, #8]
 80141e0:	ed94 6a08 	vldr	s12, [r4, #32]
 80141e4:	6022      	str	r2, [r4, #0]
 80141e6:	3301      	adds	r3, #1
 80141e8:	6163      	str	r3, [r4, #20]
 80141ea:	69a3      	ldr	r3, [r4, #24]
 80141ec:	ee37 7a27 	vadd.f32	s14, s14, s15
 80141f0:	3b01      	subs	r3, #1
 80141f2:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 80141f6:	61a3      	str	r3, [r4, #24]
 80141f8:	6923      	ldr	r3, [r4, #16]
 80141fa:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80141fe:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014202:	edd4 6a07 	vldr	s13, [r4, #28]
 8014206:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801420a:	440b      	add	r3, r1
 801420c:	68e1      	ldr	r1, [r4, #12]
 801420e:	6123      	str	r3, [r4, #16]
 8014210:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014214:	428b      	cmp	r3, r1
 8014216:	edc4 6a07 	vstr	s13, [r4, #28]
 801421a:	db15      	blt.n	8014248 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 801421c:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8014220:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014224:	3201      	adds	r2, #1
 8014226:	edc4 6a07 	vstr	s13, [r4, #28]
 801422a:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 801422e:	6022      	str	r2, [r4, #0]
 8014230:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014234:	1a5b      	subs	r3, r3, r1
 8014236:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801423a:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 801423e:	6123      	str	r3, [r4, #16]
 8014240:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014244:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8014248:	e9d5 2300 	ldrd	r2, r3, [r5]
 801424c:	441a      	add	r2, r3
 801424e:	696b      	ldr	r3, [r5, #20]
 8014250:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8014254:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8014258:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801425c:	68a9      	ldr	r1, [r5, #8]
 801425e:	ed95 6a08 	vldr	s12, [r5, #32]
 8014262:	602a      	str	r2, [r5, #0]
 8014264:	3301      	adds	r3, #1
 8014266:	616b      	str	r3, [r5, #20]
 8014268:	69ab      	ldr	r3, [r5, #24]
 801426a:	ee37 7a27 	vadd.f32	s14, s14, s15
 801426e:	3b01      	subs	r3, #1
 8014270:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8014274:	61ab      	str	r3, [r5, #24]
 8014276:	692b      	ldr	r3, [r5, #16]
 8014278:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801427c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014280:	edd5 6a07 	vldr	s13, [r5, #28]
 8014284:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8014288:	440b      	add	r3, r1
 801428a:	68e9      	ldr	r1, [r5, #12]
 801428c:	612b      	str	r3, [r5, #16]
 801428e:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014292:	428b      	cmp	r3, r1
 8014294:	edc5 6a07 	vstr	s13, [r5, #28]
 8014298:	db15      	blt.n	80142c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 801429a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 801429e:	ee76 6a26 	vadd.f32	s13, s12, s13
 80142a2:	3201      	adds	r2, #1
 80142a4:	edc5 6a07 	vstr	s13, [r5, #28]
 80142a8:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 80142ac:	602a      	str	r2, [r5, #0]
 80142ae:	ee36 7a87 	vadd.f32	s14, s13, s14
 80142b2:	1a5b      	subs	r3, r3, r1
 80142b4:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80142b8:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 80142bc:	612b      	str	r3, [r5, #16]
 80142be:	ee77 7a27 	vadd.f32	s15, s14, s15
 80142c2:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80142c6:	3f01      	subs	r7, #1
 80142c8:	e757      	b.n	801417a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 80142ca:	ad39      	add	r5, sp, #228	; 0xe4
 80142cc:	ac19      	add	r4, sp, #100	; 0x64
 80142ce:	e72d      	b.n	801412c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 80142d0:	4613      	mov	r3, r2
 80142d2:	e744      	b.n	801415e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 80142d4:	4613      	mov	r3, r2
 80142d6:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 80142da:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 80142dc:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 80142e0:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 80142e4:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 80142e8:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 80142ec:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 80142f0:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 80142f4:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 80142f8:	993d      	ldr	r1, [sp, #244]	; 0xf4
 80142fa:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 80142fe:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8014302:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8014306:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 801430a:	960e      	str	r6, [sp, #56]	; 0x38
 801430c:	469e      	mov	lr, r3
 801430e:	461f      	mov	r7, r3
 8014310:	f04f 0900 	mov.w	r9, #0
 8014314:	2f00      	cmp	r7, #0
 8014316:	d146      	bne.n	80143a6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8014318:	449c      	add	ip, r3
 801431a:	1ad7      	subs	r7, r2, r3
 801431c:	f1b9 0f00 	cmp.w	r9, #0
 8014320:	d009      	beq.n	8014336 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8014322:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8014326:	9039      	str	r0, [sp, #228]	; 0xe4
 8014328:	913d      	str	r1, [sp, #244]	; 0xf4
 801432a:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 801432e:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8014332:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8014336:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8014338:	910e      	str	r1, [sp, #56]	; 0x38
 801433a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 801433e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8014342:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8014346:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801434a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 801434e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8014352:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8014356:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801435a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 801435e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8014362:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8014366:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801436a:	f04f 0800 	mov.w	r8, #0
 801436e:	f1be 0f00 	cmp.w	lr, #0
 8014372:	d030      	beq.n	80143d6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8014374:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8014376:	4431      	add	r1, r6
 8014378:	4549      	cmp	r1, r9
 801437a:	4450      	add	r0, sl
 801437c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8014380:	ee37 7a04 	vadd.f32	s14, s14, s8
 8014384:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8014388:	db08      	blt.n	801439c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 801438a:	ee77 7a85 	vadd.f32	s15, s15, s10
 801438e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8014392:	ee37 7a06 	vadd.f32	s14, s14, s12
 8014396:	3001      	adds	r0, #1
 8014398:	eba1 0109 	sub.w	r1, r1, r9
 801439c:	f10e 3eff 	add.w	lr, lr, #4294967295
 80143a0:	f04f 0801 	mov.w	r8, #1
 80143a4:	e7e3      	b.n	801436e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 80143a6:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80143a8:	4431      	add	r1, r6
 80143aa:	4541      	cmp	r1, r8
 80143ac:	4450      	add	r0, sl
 80143ae:	ee37 7a24 	vadd.f32	s14, s14, s9
 80143b2:	ee77 7a84 	vadd.f32	s15, s15, s8
 80143b6:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80143ba:	db08      	blt.n	80143ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 80143bc:	ee76 6a85 	vadd.f32	s13, s13, s10
 80143c0:	ee37 7a25 	vadd.f32	s14, s14, s11
 80143c4:	ee77 7a86 	vadd.f32	s15, s15, s12
 80143c8:	3001      	adds	r0, #1
 80143ca:	eba1 0108 	sub.w	r1, r1, r8
 80143ce:	3f01      	subs	r7, #1
 80143d0:	f04f 0901 	mov.w	r9, #1
 80143d4:	e79e      	b.n	8014314 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 80143d6:	449c      	add	ip, r3
 80143d8:	1aff      	subs	r7, r7, r3
 80143da:	f1b8 0f00 	cmp.w	r8, #0
 80143de:	d009      	beq.n	80143f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 80143e0:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 80143e4:	9019      	str	r0, [sp, #100]	; 0x64
 80143e6:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 80143ea:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 80143ee:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 80143f2:	911d      	str	r1, [sp, #116]	; 0x74
 80143f4:	1ad2      	subs	r2, r2, r3
 80143f6:	e6b5      	b.n	8014164 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80143f8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80143fa:	681b      	ldr	r3, [r3, #0]
 80143fc:	b923      	cbnz	r3, 8014408 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80143fe:	4b04      	ldr	r3, [pc, #16]	; (8014410 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8014400:	6818      	ldr	r0, [r3, #0]
 8014402:	6803      	ldr	r3, [r0, #0]
 8014404:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014406:	4798      	blx	r3
 8014408:	b05b      	add	sp, #364	; 0x16c
 801440a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801440e:	bf00      	nop
 8014410:	20012f24 	.word	0x20012f24

08014414 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8014414:	b570      	push	{r4, r5, r6, lr}
 8014416:	4604      	mov	r4, r0
 8014418:	f89d 601c 	ldrb.w	r6, [sp, #28]
 801441c:	9805      	ldr	r0, [sp, #20]
 801441e:	6061      	str	r1, [r4, #4]
 8014420:	2500      	movs	r5, #0
 8014422:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8014426:	8263      	strh	r3, [r4, #18]
 8014428:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801442c:	8025      	strh	r5, [r4, #0]
 801442e:	7221      	strb	r1, [r4, #8]
 8014430:	7266      	strb	r6, [r4, #9]
 8014432:	60e0      	str	r0, [r4, #12]
 8014434:	8222      	strh	r2, [r4, #16]
 8014436:	82a3      	strh	r3, [r4, #20]
 8014438:	82e5      	strh	r5, [r4, #22]
 801443a:	8325      	strh	r5, [r4, #24]
 801443c:	8365      	strh	r5, [r4, #26]
 801443e:	83a5      	strh	r5, [r4, #28]
 8014440:	83e5      	strh	r5, [r4, #30]
 8014442:	8425      	strh	r5, [r4, #32]
 8014444:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8014448:	b32e      	cbz	r6, 8014496 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801444a:	6803      	ldr	r3, [r0, #0]
 801444c:	695b      	ldr	r3, [r3, #20]
 801444e:	4798      	blx	r3
 8014450:	4606      	mov	r6, r0
 8014452:	b300      	cbz	r0, 8014496 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014454:	68e0      	ldr	r0, [r4, #12]
 8014456:	6803      	ldr	r3, [r0, #0]
 8014458:	4631      	mov	r1, r6
 801445a:	68db      	ldr	r3, [r3, #12]
 801445c:	4798      	blx	r3
 801445e:	4605      	mov	r5, r0
 8014460:	b1c8      	cbz	r0, 8014496 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014462:	7b43      	ldrb	r3, [r0, #13]
 8014464:	7a82      	ldrb	r2, [r0, #10]
 8014466:	005b      	lsls	r3, r3, #1
 8014468:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801446c:	4313      	orrs	r3, r2
 801446e:	8423      	strh	r3, [r4, #32]
 8014470:	7a63      	ldrb	r3, [r4, #9]
 8014472:	2b06      	cmp	r3, #6
 8014474:	d10f      	bne.n	8014496 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014476:	68e0      	ldr	r0, [r4, #12]
 8014478:	6803      	ldr	r3, [r0, #0]
 801447a:	462a      	mov	r2, r5
 801447c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801447e:	4631      	mov	r1, r6
 8014480:	4798      	blx	r3
 8014482:	7b6b      	ldrb	r3, [r5, #13]
 8014484:	005b      	lsls	r3, r3, #1
 8014486:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801448a:	7aab      	ldrb	r3, [r5, #10]
 801448c:	4313      	orrs	r3, r2
 801448e:	4418      	add	r0, r3
 8014490:	8c23      	ldrh	r3, [r4, #32]
 8014492:	4418      	add	r0, r3
 8014494:	8420      	strh	r0, [r4, #32]
 8014496:	4620      	mov	r0, r4
 8014498:	bd70      	pop	{r4, r5, r6, pc}

0801449a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 801449a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801449e:	2400      	movs	r4, #0
 80144a0:	b085      	sub	sp, #20
 80144a2:	4681      	mov	r9, r0
 80144a4:	4688      	mov	r8, r1
 80144a6:	4692      	mov	sl, r2
 80144a8:	469b      	mov	fp, r3
 80144aa:	4627      	mov	r7, r4
 80144ac:	4625      	mov	r5, r4
 80144ae:	4626      	mov	r6, r4
 80144b0:	4554      	cmp	r4, sl
 80144b2:	da2a      	bge.n	801450a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80144b4:	2300      	movs	r3, #0
 80144b6:	9303      	str	r3, [sp, #12]
 80144b8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80144bc:	429d      	cmp	r5, r3
 80144be:	d004      	beq.n	80144ca <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 80144c0:	f242 030b 	movw	r3, #8203	; 0x200b
 80144c4:	429d      	cmp	r5, r3
 80144c6:	bf18      	it	ne
 80144c8:	462f      	movne	r7, r5
 80144ca:	ab03      	add	r3, sp, #12
 80144cc:	4642      	mov	r2, r8
 80144ce:	4659      	mov	r1, fp
 80144d0:	4648      	mov	r0, r9
 80144d2:	f003 f965 	bl	80177a0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80144d6:	4605      	mov	r5, r0
 80144d8:	b1b8      	cbz	r0, 801450a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80144da:	280a      	cmp	r0, #10
 80144dc:	d015      	beq.n	801450a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80144de:	9a03      	ldr	r2, [sp, #12]
 80144e0:	b18a      	cbz	r2, 8014506 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 80144e2:	7b50      	ldrb	r0, [r2, #13]
 80144e4:	7a93      	ldrb	r3, [r2, #10]
 80144e6:	8895      	ldrh	r5, [r2, #4]
 80144e8:	0040      	lsls	r0, r0, #1
 80144ea:	f400 7080 	and.w	r0, r0, #256	; 0x100
 80144ee:	4303      	orrs	r3, r0
 80144f0:	9301      	str	r3, [sp, #4]
 80144f2:	f8d8 3000 	ldr.w	r3, [r8]
 80144f6:	4639      	mov	r1, r7
 80144f8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80144fa:	4640      	mov	r0, r8
 80144fc:	4798      	blx	r3
 80144fe:	9b01      	ldr	r3, [sp, #4]
 8014500:	4418      	add	r0, r3
 8014502:	4406      	add	r6, r0
 8014504:	b2b6      	uxth	r6, r6
 8014506:	3401      	adds	r4, #1
 8014508:	e7d2      	b.n	80144b0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 801450a:	4630      	mov	r0, r6
 801450c:	b005      	add	sp, #20
 801450e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014512 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8014512:	2a02      	cmp	r2, #2
 8014514:	b530      	push	{r4, r5, lr}
 8014516:	d011      	beq.n	801453c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8014518:	2a03      	cmp	r2, #3
 801451a:	d01c      	beq.n	8014556 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 801451c:	2a01      	cmp	r2, #1
 801451e:	d10c      	bne.n	801453a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8014520:	888b      	ldrh	r3, [r1, #4]
 8014522:	8801      	ldrh	r1, [r0, #0]
 8014524:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8014528:	8844      	ldrh	r4, [r0, #2]
 801452a:	8004      	strh	r4, [r0, #0]
 801452c:	1a5b      	subs	r3, r3, r1
 801452e:	1a9b      	subs	r3, r3, r2
 8014530:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8014534:	8043      	strh	r3, [r0, #2]
 8014536:	8081      	strh	r1, [r0, #4]
 8014538:	80c2      	strh	r2, [r0, #6]
 801453a:	bd30      	pop	{r4, r5, pc}
 801453c:	88cb      	ldrh	r3, [r1, #6]
 801453e:	8842      	ldrh	r2, [r0, #2]
 8014540:	1a9b      	subs	r3, r3, r2
 8014542:	88c2      	ldrh	r2, [r0, #6]
 8014544:	1a9b      	subs	r3, r3, r2
 8014546:	888a      	ldrh	r2, [r1, #4]
 8014548:	8801      	ldrh	r1, [r0, #0]
 801454a:	8043      	strh	r3, [r0, #2]
 801454c:	1a52      	subs	r2, r2, r1
 801454e:	8881      	ldrh	r1, [r0, #4]
 8014550:	1a52      	subs	r2, r2, r1
 8014552:	8002      	strh	r2, [r0, #0]
 8014554:	e7f1      	b.n	801453a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8014556:	88cb      	ldrh	r3, [r1, #6]
 8014558:	8841      	ldrh	r1, [r0, #2]
 801455a:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 801455e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8014562:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8014566:	8045      	strh	r5, [r0, #2]
 8014568:	1a5b      	subs	r3, r3, r1
 801456a:	1a9b      	subs	r3, r3, r2
 801456c:	8003      	strh	r3, [r0, #0]
 801456e:	8082      	strh	r2, [r0, #4]
 8014570:	80c4      	strh	r4, [r0, #6]
 8014572:	e7e2      	b.n	801453a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08014574 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8014574:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014578:	b09f      	sub	sp, #124	; 0x7c
 801457a:	9116      	str	r1, [sp, #88]	; 0x58
 801457c:	9317      	str	r3, [sp, #92]	; 0x5c
 801457e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8014580:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014582:	8809      	ldrh	r1, [r1, #0]
 8014584:	889b      	ldrh	r3, [r3, #4]
 8014586:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 801458a:	9212      	str	r2, [sp, #72]	; 0x48
 801458c:	440b      	add	r3, r1
 801458e:	b21b      	sxth	r3, r3
 8014590:	9310      	str	r3, [sp, #64]	; 0x40
 8014592:	f8d8 3000 	ldr.w	r3, [r8]
 8014596:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 801459a:	7b19      	ldrb	r1, [r3, #12]
 801459c:	7adb      	ldrb	r3, [r3, #11]
 801459e:	9011      	str	r0, [sp, #68]	; 0x44
 80145a0:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 80145a4:	9114      	str	r1, [sp, #80]	; 0x50
 80145a6:	9315      	str	r3, [sp, #84]	; 0x54
 80145a8:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 80145ac:	2a00      	cmp	r2, #0
 80145ae:	d06a      	beq.n	8014686 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 80145b0:	f898 3010 	ldrb.w	r3, [r8, #16]
 80145b4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80145b6:	2b06      	cmp	r3, #6
 80145b8:	bf14      	ite	ne
 80145ba:	2301      	movne	r3, #1
 80145bc:	2302      	moveq	r3, #2
 80145be:	4413      	add	r3, r2
 80145c0:	f04f 0900 	mov.w	r9, #0
 80145c4:	930f      	str	r3, [sp, #60]	; 0x3c
 80145c6:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 80145ca:	464c      	mov	r4, r9
 80145cc:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 80145d0:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 80145d4:	4293      	cmp	r3, r2
 80145d6:	f280 808f 	bge.w	80146f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 80145da:	2300      	movs	r3, #0
 80145dc:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 80145e0:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 80145e4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80145e8:	429c      	cmp	r4, r3
 80145ea:	d006      	beq.n	80145fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 80145ec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80145ee:	f242 020b 	movw	r2, #8203	; 0x200b
 80145f2:	4294      	cmp	r4, r2
 80145f4:	bf18      	it	ne
 80145f6:	4623      	movne	r3, r4
 80145f8:	930d      	str	r3, [sp, #52]	; 0x34
 80145fa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80145fc:	992d      	ldr	r1, [sp, #180]	; 0xb4
 80145fe:	f8d8 2000 	ldr.w	r2, [r8]
 8014602:	428b      	cmp	r3, r1
 8014604:	db41      	blt.n	801468a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8014606:	6813      	ldr	r3, [r2, #0]
 8014608:	4610      	mov	r0, r2
 801460a:	695b      	ldr	r3, [r3, #20]
 801460c:	4798      	blx	r3
 801460e:	4604      	mov	r4, r0
 8014610:	f8d8 0000 	ldr.w	r0, [r8]
 8014614:	6803      	ldr	r3, [r0, #0]
 8014616:	aa1d      	add	r2, sp, #116	; 0x74
 8014618:	689d      	ldr	r5, [r3, #8]
 801461a:	4621      	mov	r1, r4
 801461c:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8014620:	47a8      	blx	r5
 8014622:	901c      	str	r0, [sp, #112]	; 0x70
 8014624:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014628:	429c      	cmp	r4, r3
 801462a:	f000 80eb 	beq.w	8014804 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801462e:	f242 030b 	movw	r3, #8203	; 0x200b
 8014632:	429c      	cmp	r4, r3
 8014634:	f000 80e6 	beq.w	8014804 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014638:	2c00      	cmp	r4, #0
 801463a:	f000 80f8 	beq.w	801482e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 801463e:	2c0a      	cmp	r4, #10
 8014640:	d060      	beq.n	8014704 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8014642:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8014644:	b36a      	cbz	r2, 80146a2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8014646:	8894      	ldrh	r4, [r2, #4]
 8014648:	f1bb 0f00 	cmp.w	fp, #0
 801464c:	d03b      	beq.n	80146c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 801464e:	f892 900d 	ldrb.w	r9, [r2, #13]
 8014652:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8014656:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801465a:	f892 900a 	ldrb.w	r9, [r2, #10]
 801465e:	f1bb 0f01 	cmp.w	fp, #1
 8014662:	ea49 0903 	orr.w	r9, r9, r3
 8014666:	d134      	bne.n	80146d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8014668:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801466a:	eba6 0609 	sub.w	r6, r6, r9
 801466e:	2b00      	cmp	r3, #0
 8014670:	d14f      	bne.n	8014712 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8014672:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014674:	eb09 0306 	add.w	r3, r9, r6
 8014678:	4413      	add	r3, r2
 801467a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801467c:	f9b2 2000 	ldrsh.w	r2, [r2]
 8014680:	4293      	cmp	r3, r2
 8014682:	da51      	bge.n	8014728 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8014684:	e038      	b.n	80146f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8014686:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014688:	e79a      	b.n	80145c0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 801468a:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 801468e:	9301      	str	r3, [sp, #4]
 8014690:	ab1d      	add	r3, sp, #116	; 0x74
 8014692:	9300      	str	r3, [sp, #0]
 8014694:	4659      	mov	r1, fp
 8014696:	ab1c      	add	r3, sp, #112	; 0x70
 8014698:	982c      	ldr	r0, [sp, #176]	; 0xb0
 801469a:	f003 f8ca 	bl	8017832 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 801469e:	4604      	mov	r4, r0
 80146a0:	e7c0      	b.n	8014624 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 80146a2:	f8d8 0000 	ldr.w	r0, [r8]
 80146a6:	6803      	ldr	r3, [r0, #0]
 80146a8:	691b      	ldr	r3, [r3, #16]
 80146aa:	4798      	blx	r3
 80146ac:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80146b0:	4298      	cmp	r0, r3
 80146b2:	f000 80a7 	beq.w	8014804 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80146b6:	f242 030b 	movw	r3, #8203	; 0x200b
 80146ba:	4298      	cmp	r0, r3
 80146bc:	f000 80a2 	beq.w	8014804 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80146c0:	f1bb 0f00 	cmp.w	fp, #0
 80146c4:	d100      	bne.n	80146c8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 80146c6:	444e      	add	r6, r9
 80146c8:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80146ca:	2a00      	cmp	r2, #0
 80146cc:	d1bf      	bne.n	801464e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 80146ce:	4691      	mov	r9, r2
 80146d0:	e098      	b.n	8014804 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80146d2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80146d4:	2b00      	cmp	r3, #0
 80146d6:	f000 80ac 	beq.w	8014832 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 80146da:	f1bb 0f00 	cmp.w	fp, #0
 80146de:	d118      	bne.n	8014712 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 80146e0:	f8d8 0000 	ldr.w	r0, [r8]
 80146e4:	990d      	ldr	r1, [sp, #52]	; 0x34
 80146e6:	6803      	ldr	r3, [r0, #0]
 80146e8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80146ea:	4798      	blx	r3
 80146ec:	4406      	add	r6, r0
 80146ee:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80146f0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80146f2:	1af3      	subs	r3, r6, r3
 80146f4:	4293      	cmp	r3, r2
 80146f6:	dd17      	ble.n	8014728 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 80146f8:	2c00      	cmp	r4, #0
 80146fa:	f000 8098 	beq.w	801482e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80146fe:	2c0a      	cmp	r4, #10
 8014700:	f040 8086 	bne.w	8014810 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 8014704:	240a      	movs	r4, #10
 8014706:	fab4 f084 	clz	r0, r4
 801470a:	0940      	lsrs	r0, r0, #5
 801470c:	b01f      	add	sp, #124	; 0x7c
 801470e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014712:	f8d8 0000 	ldr.w	r0, [r8]
 8014716:	990d      	ldr	r1, [sp, #52]	; 0x34
 8014718:	6803      	ldr	r3, [r0, #0]
 801471a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801471c:	4798      	blx	r3
 801471e:	f1bb 0f01 	cmp.w	fp, #1
 8014722:	eba6 0600 	sub.w	r6, r6, r0
 8014726:	d0a4      	beq.n	8014672 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8014728:	981c      	ldr	r0, [sp, #112]	; 0x70
 801472a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801472c:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8014730:	f9b3 7000 	ldrsh.w	r7, [r3]
 8014734:	7b43      	ldrb	r3, [r0, #13]
 8014736:	015b      	lsls	r3, r3, #5
 8014738:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801473c:	7983      	ldrb	r3, [r0, #6]
 801473e:	4431      	add	r1, r6
 8014740:	4313      	orrs	r3, r2
 8014742:	440b      	add	r3, r1
 8014744:	42bb      	cmp	r3, r7
 8014746:	db5d      	blt.n	8014804 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014748:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801474a:	4299      	cmp	r1, r3
 801474c:	da5a      	bge.n	8014804 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801474e:	f8d8 0000 	ldr.w	r0, [r8]
 8014752:	6803      	ldr	r3, [r0, #0]
 8014754:	42b7      	cmp	r7, r6
 8014756:	bfc8      	it	gt
 8014758:	1bbf      	subgt	r7, r7, r6
 801475a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801475c:	bfcc      	ite	gt
 801475e:	b2bf      	uxthgt	r7, r7
 8014760:	2700      	movle	r7, #0
 8014762:	4798      	blx	r3
 8014764:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8014766:	7b5a      	ldrb	r2, [r3, #13]
 8014768:	00d1      	lsls	r1, r2, #3
 801476a:	f401 7580 	and.w	r5, r1, #256	; 0x100
 801476e:	7a19      	ldrb	r1, [r3, #8]
 8014770:	4329      	orrs	r1, r5
 8014772:	0655      	lsls	r5, r2, #25
 8014774:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8014776:	bf44      	itt	mi
 8014778:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 801477c:	b209      	sxthmi	r1, r1
 801477e:	1945      	adds	r5, r0, r5
 8014780:	1a6d      	subs	r5, r5, r1
 8014782:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8014784:	b2ad      	uxth	r5, r5
 8014786:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 801478a:	fa0f fa85 	sxth.w	sl, r5
 801478e:	4551      	cmp	r1, sl
 8014790:	dd3c      	ble.n	801480c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8014792:	0112      	lsls	r2, r2, #4
 8014794:	79d8      	ldrb	r0, [r3, #7]
 8014796:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801479a:	4302      	orrs	r2, r0
 801479c:	4492      	add	sl, r2
 801479e:	4551      	cmp	r1, sl
 80147a0:	dc30      	bgt.n	8014804 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80147a2:	1b4d      	subs	r5, r1, r5
 80147a4:	b22d      	sxth	r5, r5
 80147a6:	468a      	mov	sl, r1
 80147a8:	9319      	str	r3, [sp, #100]	; 0x64
 80147aa:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80147ac:	f8d8 0000 	ldr.w	r0, [r8]
 80147b0:	681a      	ldr	r2, [r3, #0]
 80147b2:	6801      	ldr	r1, [r0, #0]
 80147b4:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 80147b6:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 80147b8:	9313      	str	r3, [sp, #76]	; 0x4c
 80147ba:	9218      	str	r2, [sp, #96]	; 0x60
 80147bc:	6c09      	ldr	r1, [r1, #64]	; 0x40
 80147be:	4788      	blx	r1
 80147c0:	f898 1006 	ldrb.w	r1, [r8, #6]
 80147c4:	910b      	str	r1, [sp, #44]	; 0x2c
 80147c6:	f898 100e 	ldrb.w	r1, [r8, #14]
 80147ca:	910a      	str	r1, [sp, #40]	; 0x28
 80147cc:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 80147d0:	9109      	str	r1, [sp, #36]	; 0x24
 80147d2:	f8d8 1008 	ldr.w	r1, [r8, #8]
 80147d6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80147d8:	9305      	str	r3, [sp, #20]
 80147da:	b2ad      	uxth	r5, r5
 80147dc:	e9cd 0107 	strd	r0, r1, [sp, #28]
 80147e0:	e9cd 7502 	strd	r7, r5, [sp, #8]
 80147e4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80147e6:	9304      	str	r3, [sp, #16]
 80147e8:	4437      	add	r7, r6
 80147ea:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80147ec:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80147ee:	9206      	str	r2, [sp, #24]
 80147f0:	b23f      	sxth	r7, r7
 80147f2:	f8cd a004 	str.w	sl, [sp, #4]
 80147f6:	9700      	str	r7, [sp, #0]
 80147f8:	681a      	ldr	r2, [r3, #0]
 80147fa:	9916      	ldr	r1, [sp, #88]	; 0x58
 80147fc:	685b      	ldr	r3, [r3, #4]
 80147fe:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014800:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8014802:	47a8      	blx	r5
 8014804:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014806:	3301      	adds	r3, #1
 8014808:	930e      	str	r3, [sp, #56]	; 0x38
 801480a:	e6e1      	b.n	80145d0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 801480c:	2500      	movs	r5, #0
 801480e:	e7cb      	b.n	80147a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8014810:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8014812:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014814:	3501      	adds	r5, #1
 8014816:	429d      	cmp	r5, r3
 8014818:	f6bf af75 	bge.w	8014706 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 801481c:	4659      	mov	r1, fp
 801481e:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8014820:	f7f3 fc5a 	bl	80080d8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8014824:	4604      	mov	r4, r0
 8014826:	b110      	cbz	r0, 801482e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8014828:	280a      	cmp	r0, #10
 801482a:	d1f2      	bne.n	8014812 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 801482c:	e76a      	b.n	8014704 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 801482e:	2400      	movs	r4, #0
 8014830:	e769      	b.n	8014706 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8014832:	f1bb 0f00 	cmp.w	fp, #0
 8014836:	f43f af5a 	beq.w	80146ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 801483a:	e775      	b.n	8014728 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

0801483c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 801483c:	b530      	push	{r4, r5, lr}
 801483e:	8ac4      	ldrh	r4, [r0, #22]
 8014840:	8b45      	ldrh	r5, [r0, #26]
 8014842:	8343      	strh	r3, [r0, #26]
 8014844:	442c      	add	r4, r5
 8014846:	1ae4      	subs	r4, r4, r3
 8014848:	82c4      	strh	r4, [r0, #22]
 801484a:	8b83      	ldrh	r3, [r0, #28]
 801484c:	8b04      	ldrh	r4, [r0, #24]
 801484e:	4422      	add	r2, r4
 8014850:	440c      	add	r4, r1
 8014852:	1a59      	subs	r1, r3, r1
 8014854:	83c2      	strh	r2, [r0, #30]
 8014856:	8304      	strh	r4, [r0, #24]
 8014858:	8381      	strh	r1, [r0, #28]
 801485a:	bd30      	pop	{r4, r5, pc}

0801485c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 801485c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014860:	4604      	mov	r4, r0
 8014862:	8a47      	ldrh	r7, [r0, #18]
 8014864:	68c0      	ldr	r0, [r0, #12]
 8014866:	6803      	ldr	r3, [r0, #0]
 8014868:	b085      	sub	sp, #20
 801486a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801486c:	4798      	blx	r3
 801486e:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8014872:	7a63      	ldrb	r3, [r4, #9]
 8014874:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8014878:	42b7      	cmp	r7, r6
 801487a:	f103 33ff 	add.w	r3, r3, #4294967295
 801487e:	bfac      	ite	ge
 8014880:	f04f 0900 	movge.w	r9, #0
 8014884:	f04f 0901 	movlt.w	r9, #1
 8014888:	2b05      	cmp	r3, #5
 801488a:	d804      	bhi.n	8014896 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 801488c:	e8df f003 	tbb	[pc, r3]
 8014890:	470e0854 	.word	0x470e0854
 8014894:	4c4c      	.short	0x4c4c
 8014896:	2500      	movs	r5, #0
 8014898:	46a9      	mov	r9, r5
 801489a:	462e      	mov	r6, r5
 801489c:	462f      	mov	r7, r5
 801489e:	e00d      	b.n	80148bc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80148a0:	42b7      	cmp	r7, r6
 80148a2:	bfb4      	ite	lt
 80148a4:	2600      	movlt	r6, #0
 80148a6:	2601      	movge	r6, #1
 80148a8:	2500      	movs	r5, #0
 80148aa:	e7f7      	b.n	801489c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 80148ac:	42b7      	cmp	r7, r6
 80148ae:	464d      	mov	r5, r9
 80148b0:	f04f 0900 	mov.w	r9, #0
 80148b4:	bfb4      	ite	lt
 80148b6:	2600      	movlt	r6, #0
 80148b8:	2601      	movge	r6, #1
 80148ba:	464f      	mov	r7, r9
 80148bc:	f04f 0800 	mov.w	r8, #0
 80148c0:	f8a4 8016 	strh.w	r8, [r4, #22]
 80148c4:	f8a4 8018 	strh.w	r8, [r4, #24]
 80148c8:	f8cd 8004 	str.w	r8, [sp, #4]
 80148cc:	2300      	movs	r3, #0
 80148ce:	9303      	str	r3, [sp, #12]
 80148d0:	8823      	ldrh	r3, [r4, #0]
 80148d2:	2b20      	cmp	r3, #32
 80148d4:	d034      	beq.n	8014940 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 80148d6:	f242 010b 	movw	r1, #8203	; 0x200b
 80148da:	1a5a      	subs	r2, r3, r1
 80148dc:	f1d2 0a00 	rsbs	sl, r2, #0
 80148e0:	eb4a 0a02 	adc.w	sl, sl, r2
 80148e4:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80148e8:	4293      	cmp	r3, r2
 80148ea:	d009      	beq.n	8014900 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 80148ec:	428b      	cmp	r3, r1
 80148ee:	9a01      	ldr	r2, [sp, #4]
 80148f0:	bf18      	it	ne
 80148f2:	461a      	movne	r2, r3
 80148f4:	9201      	str	r2, [sp, #4]
 80148f6:	bf0c      	ite	eq
 80148f8:	f04f 0a01 	moveq.w	sl, #1
 80148fc:	f04f 0a00 	movne.w	sl, #0
 8014900:	ab03      	add	r3, sp, #12
 8014902:	68e2      	ldr	r2, [r4, #12]
 8014904:	7a21      	ldrb	r1, [r4, #8]
 8014906:	6860      	ldr	r0, [r4, #4]
 8014908:	f002 ff4a 	bl	80177a0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801490c:	8020      	strh	r0, [r4, #0]
 801490e:	b9d8      	cbnz	r0, 8014948 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 8014910:	8ba2      	ldrh	r2, [r4, #28]
 8014912:	2300      	movs	r3, #0
 8014914:	4611      	mov	r1, r2
 8014916:	4620      	mov	r0, r4
 8014918:	f7ff ff90 	bl	801483c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 801491c:	e06e      	b.n	80149fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 801491e:	2500      	movs	r5, #0
 8014920:	46a9      	mov	r9, r5
 8014922:	462e      	mov	r6, r5
 8014924:	2701      	movs	r7, #1
 8014926:	e7c9      	b.n	80148bc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8014928:	42b7      	cmp	r7, r6
 801492a:	f04f 0500 	mov.w	r5, #0
 801492e:	bfb4      	ite	lt
 8014930:	2700      	movlt	r7, #0
 8014932:	2701      	movge	r7, #1
 8014934:	462e      	mov	r6, r5
 8014936:	e7c1      	b.n	80148bc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8014938:	2500      	movs	r5, #0
 801493a:	46a9      	mov	r9, r5
 801493c:	2601      	movs	r6, #1
 801493e:	e7ad      	b.n	801489c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8014940:	9301      	str	r3, [sp, #4]
 8014942:	f04f 0a01 	mov.w	sl, #1
 8014946:	e7db      	b.n	8014900 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8014948:	8b63      	ldrh	r3, [r4, #26]
 801494a:	280a      	cmp	r0, #10
 801494c:	f103 0301 	add.w	r3, r3, #1
 8014950:	8363      	strh	r3, [r4, #26]
 8014952:	d0dd      	beq.n	8014910 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8014954:	9a03      	ldr	r2, [sp, #12]
 8014956:	bb62      	cbnz	r2, 80149b2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8014958:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801495c:	4298      	cmp	r0, r3
 801495e:	d003      	beq.n	8014968 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8014960:	f242 030b 	movw	r3, #8203	; 0x200b
 8014964:	4298      	cmp	r0, r3
 8014966:	d1b1      	bne.n	80148cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014968:	8823      	ldrh	r3, [r4, #0]
 801496a:	8ba1      	ldrh	r1, [r4, #28]
 801496c:	2b20      	cmp	r3, #32
 801496e:	d003      	beq.n	8014978 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8014970:	f242 000b 	movw	r0, #8203	; 0x200b
 8014974:	4283      	cmp	r3, r0
 8014976:	d131      	bne.n	80149dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8014978:	f1ba 0f00 	cmp.w	sl, #0
 801497c:	bf0a      	itet	eq
 801497e:	4688      	moveq	r8, r1
 8014980:	4650      	movne	r0, sl
 8014982:	2001      	moveq	r0, #1
 8014984:	440a      	add	r2, r1
 8014986:	8b23      	ldrh	r3, [r4, #24]
 8014988:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 801498c:	b292      	uxth	r2, r2
 801498e:	83a2      	strh	r2, [r4, #28]
 8014990:	4413      	add	r3, r2
 8014992:	f1b9 0f00 	cmp.w	r9, #0
 8014996:	d102      	bne.n	801499e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8014998:	2d00      	cmp	r5, #0
 801499a:	d042      	beq.n	8014a22 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 801499c:	b300      	cbz	r0, 80149e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 801499e:	8c21      	ldrh	r1, [r4, #32]
 80149a0:	4419      	add	r1, r3
 80149a2:	458c      	cmp	ip, r1
 80149a4:	da37      	bge.n	8014a16 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 80149a6:	8ae1      	ldrh	r1, [r4, #22]
 80149a8:	2900      	cmp	r1, #0
 80149aa:	d034      	beq.n	8014a16 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 80149ac:	4563      	cmp	r3, ip
 80149ae:	dd8d      	ble.n	80148cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80149b0:	e01d      	b.n	80149ee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 80149b2:	8893      	ldrh	r3, [r2, #4]
 80149b4:	8023      	strh	r3, [r4, #0]
 80149b6:	f892 b00d 	ldrb.w	fp, [r2, #13]
 80149ba:	9901      	ldr	r1, [sp, #4]
 80149bc:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 80149c0:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 80149c4:	f892 b00a 	ldrb.w	fp, [r2, #10]
 80149c8:	ea4b 0b00 	orr.w	fp, fp, r0
 80149cc:	68e0      	ldr	r0, [r4, #12]
 80149ce:	6803      	ldr	r3, [r0, #0]
 80149d0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80149d2:	4798      	blx	r3
 80149d4:	eb0b 0200 	add.w	r2, fp, r0
 80149d8:	b292      	uxth	r2, r2
 80149da:	e7c5      	b.n	8014968 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 80149dc:	2000      	movs	r0, #0
 80149de:	e7d1      	b.n	8014984 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 80149e0:	4563      	cmp	r3, ip
 80149e2:	f77f af73 	ble.w	80148cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80149e6:	8ae3      	ldrh	r3, [r4, #22]
 80149e8:	2b00      	cmp	r3, #0
 80149ea:	f43f af6f 	beq.w	80148cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80149ee:	2301      	movs	r3, #1
 80149f0:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 80149f4:	8c22      	ldrh	r2, [r4, #32]
 80149f6:	8be3      	ldrh	r3, [r4, #30]
 80149f8:	4413      	add	r3, r2
 80149fa:	83e3      	strh	r3, [r4, #30]
 80149fc:	68e0      	ldr	r0, [r4, #12]
 80149fe:	6803      	ldr	r3, [r0, #0]
 8014a00:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014a02:	4798      	blx	r3
 8014a04:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8014a08:	4418      	add	r0, r3
 8014a0a:	8a63      	ldrh	r3, [r4, #18]
 8014a0c:	1a18      	subs	r0, r3, r0
 8014a0e:	8260      	strh	r0, [r4, #18]
 8014a10:	b005      	add	sp, #20
 8014a12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014a16:	2300      	movs	r3, #0
 8014a18:	4611      	mov	r1, r2
 8014a1a:	4620      	mov	r0, r4
 8014a1c:	f7ff ff0e 	bl	801483c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8014a20:	e754      	b.n	80148cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014a22:	4563      	cmp	r3, ip
 8014a24:	dd14      	ble.n	8014a50 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8014a26:	b117      	cbz	r7, 8014a2e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8014a28:	2301      	movs	r3, #1
 8014a2a:	460a      	mov	r2, r1
 8014a2c:	e772      	b.n	8014914 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 8014a2e:	2e00      	cmp	r6, #0
 8014a30:	f43f af4c 	beq.w	80148cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014a34:	2800      	cmp	r0, #0
 8014a36:	f47f af49 	bne.w	80148cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014a3a:	f1ba 0f00 	cmp.w	sl, #0
 8014a3e:	d002      	beq.n	8014a46 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8014a40:	2301      	movs	r3, #1
 8014a42:	4642      	mov	r2, r8
 8014a44:	e767      	b.n	8014916 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8014a46:	8ae3      	ldrh	r3, [r4, #22]
 8014a48:	2b00      	cmp	r3, #0
 8014a4a:	f43f af3f 	beq.w	80148cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014a4e:	e7d5      	b.n	80149fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8014a50:	2800      	cmp	r0, #0
 8014a52:	f47f af3b 	bne.w	80148cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014a56:	f1ba 0f00 	cmp.w	sl, #0
 8014a5a:	f43f af37 	beq.w	80148cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014a5e:	2301      	movs	r3, #1
 8014a60:	4642      	mov	r2, r8
 8014a62:	e7da      	b.n	8014a1a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08014a64 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8014a64:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014a66:	4605      	mov	r5, r0
 8014a68:	b08f      	sub	sp, #60	; 0x3c
 8014a6a:	4617      	mov	r7, r2
 8014a6c:	461c      	mov	r4, r3
 8014a6e:	460e      	mov	r6, r1
 8014a70:	b1d1      	cbz	r1, 8014aa8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8014a72:	681b      	ldr	r3, [r3, #0]
 8014a74:	4620      	mov	r0, r4
 8014a76:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014a78:	4798      	blx	r3
 8014a7a:	4240      	negs	r0, r0
 8014a7c:	b200      	sxth	r0, r0
 8014a7e:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8014a82:	9603      	str	r6, [sp, #12]
 8014a84:	9700      	str	r7, [sp, #0]
 8014a86:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8014a8a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8014a8e:	4629      	mov	r1, r5
 8014a90:	a805      	add	r0, sp, #20
 8014a92:	f7ff fcbf 	bl	8014414 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8014a96:	2401      	movs	r4, #1
 8014a98:	a805      	add	r0, sp, #20
 8014a9a:	f7ff fedf 	bl	801485c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8014a9e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8014aa2:	b163      	cbz	r3, 8014abe <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8014aa4:	3401      	adds	r4, #1
 8014aa6:	e7f7      	b.n	8014a98 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8014aa8:	f002 ff48 	bl	801793c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8014aac:	2401      	movs	r4, #1
 8014aae:	280a      	cmp	r0, #10
 8014ab0:	4628      	mov	r0, r5
 8014ab2:	bf08      	it	eq
 8014ab4:	3401      	addeq	r4, #1
 8014ab6:	f002 ff41 	bl	801793c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8014aba:	2800      	cmp	r0, #0
 8014abc:	d1f7      	bne.n	8014aae <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 8014abe:	b2a0      	uxth	r0, r4
 8014ac0:	b00f      	add	sp, #60	; 0x3c
 8014ac2:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014ac4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8014ac4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014ac8:	b0e3      	sub	sp, #396	; 0x18c
 8014aca:	461c      	mov	r4, r3
 8014acc:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 8014ace:	4683      	mov	fp, r0
 8014ad0:	4688      	mov	r8, r1
 8014ad2:	2b00      	cmp	r3, #0
 8014ad4:	f000 8112 	beq.w	8014cfc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014ad8:	6823      	ldr	r3, [r4, #0]
 8014ada:	2b00      	cmp	r3, #0
 8014adc:	f000 810e 	beq.w	8014cfc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014ae0:	7ba3      	ldrb	r3, [r4, #14]
 8014ae2:	2b00      	cmp	r3, #0
 8014ae4:	f000 810a 	beq.w	8014cfc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014ae8:	6810      	ldr	r0, [r2, #0]
 8014aea:	6851      	ldr	r1, [r2, #4]
 8014aec:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8014af0:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8014af4:	ad0a      	add	r5, sp, #40	; 0x28
 8014af6:	462b      	mov	r3, r5
 8014af8:	c303      	stmia	r3!, {r0, r1}
 8014afa:	2100      	movs	r1, #0
 8014afc:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8014b00:	910c      	str	r1, [sp, #48]	; 0x30
 8014b02:	79a2      	ldrb	r2, [r4, #6]
 8014b04:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8014b08:	a90c      	add	r1, sp, #48	; 0x30
 8014b0a:	4628      	mov	r0, r5
 8014b0c:	f7ff fd01 	bl	8014512 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8014b10:	a90c      	add	r1, sp, #48	; 0x30
 8014b12:	4608      	mov	r0, r1
 8014b14:	79a2      	ldrb	r2, [r4, #6]
 8014b16:	f7ff fcfc 	bl	8014512 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8014b1a:	a817      	add	r0, sp, #92	; 0x5c
 8014b1c:	f002 fae2 	bl	80170e4 <_ZN8touchgfx12TextProviderC1Ev>
 8014b20:	6820      	ldr	r0, [r4, #0]
 8014b22:	6803      	ldr	r3, [r0, #0]
 8014b24:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014b26:	4798      	blx	r3
 8014b28:	4606      	mov	r6, r0
 8014b2a:	6820      	ldr	r0, [r4, #0]
 8014b2c:	6803      	ldr	r3, [r0, #0]
 8014b2e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014b30:	4798      	blx	r3
 8014b32:	4633      	mov	r3, r6
 8014b34:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8014b36:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8014b38:	9000      	str	r0, [sp, #0]
 8014b3a:	a817      	add	r0, sp, #92	; 0x5c
 8014b3c:	f002 fb2d 	bl	801719a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014b40:	6820      	ldr	r0, [r4, #0]
 8014b42:	f894 a004 	ldrb.w	sl, [r4, #4]
 8014b46:	6803      	ldr	r3, [r0, #0]
 8014b48:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014b4a:	4798      	blx	r3
 8014b4c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8014b50:	6823      	ldr	r3, [r4, #0]
 8014b52:	4607      	mov	r7, r0
 8014b54:	4406      	add	r6, r0
 8014b56:	a830      	add	r0, sp, #192	; 0xc0
 8014b58:	f893 9009 	ldrb.w	r9, [r3, #9]
 8014b5c:	f002 fac2 	bl	80170e4 <_ZN8touchgfx12TextProviderC1Ev>
 8014b60:	7c23      	ldrb	r3, [r4, #16]
 8014b62:	b17b      	cbz	r3, 8014b84 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8014b64:	6820      	ldr	r0, [r4, #0]
 8014b66:	6803      	ldr	r3, [r0, #0]
 8014b68:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014b6a:	4798      	blx	r3
 8014b6c:	9009      	str	r0, [sp, #36]	; 0x24
 8014b6e:	6820      	ldr	r0, [r4, #0]
 8014b70:	6802      	ldr	r2, [r0, #0]
 8014b72:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8014b74:	4790      	blx	r2
 8014b76:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014b78:	9000      	str	r0, [sp, #0]
 8014b7a:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8014b7c:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8014b7e:	a830      	add	r0, sp, #192	; 0xc0
 8014b80:	f002 fb0b 	bl	801719a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014b84:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8014b88:	7be2      	ldrb	r2, [r4, #15]
 8014b8a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8014b8e:	1a8a      	subs	r2, r1, r2
 8014b90:	7c21      	ldrb	r1, [r4, #16]
 8014b92:	9103      	str	r1, [sp, #12]
 8014b94:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8014b98:	9102      	str	r1, [sp, #8]
 8014b9a:	6821      	ldr	r1, [r4, #0]
 8014b9c:	9101      	str	r1, [sp, #4]
 8014b9e:	7961      	ldrb	r1, [r4, #5]
 8014ba0:	9100      	str	r1, [sp, #0]
 8014ba2:	b292      	uxth	r2, r2
 8014ba4:	a930      	add	r1, sp, #192	; 0xc0
 8014ba6:	a80e      	add	r0, sp, #56	; 0x38
 8014ba8:	f7ff fc34 	bl	8014414 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8014bac:	2e00      	cmp	r6, #0
 8014bae:	dc5b      	bgt.n	8014c68 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8014bb0:	af17      	add	r7, sp, #92	; 0x5c
 8014bb2:	f04f 0900 	mov.w	r9, #0
 8014bb6:	7c23      	ldrb	r3, [r4, #16]
 8014bb8:	2b00      	cmp	r3, #0
 8014bba:	f000 80b1 	beq.w	8014d20 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 8014bbe:	a80e      	add	r0, sp, #56	; 0x38
 8014bc0:	f7ff fe4c 	bl	801485c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8014bc4:	f1ba 0f00 	cmp.w	sl, #0
 8014bc8:	f000 80a5 	beq.w	8014d16 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8014bcc:	7c23      	ldrb	r3, [r4, #16]
 8014bce:	9309      	str	r3, [sp, #36]	; 0x24
 8014bd0:	2264      	movs	r2, #100	; 0x64
 8014bd2:	4639      	mov	r1, r7
 8014bd4:	a849      	add	r0, sp, #292	; 0x124
 8014bd6:	f015 fda8 	bl	802a72a <memcpy>
 8014bda:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014bdc:	2b00      	cmp	r3, #0
 8014bde:	f000 80a7 	beq.w	8014d30 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 8014be2:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8014be6:	7922      	ldrb	r2, [r4, #4]
 8014be8:	2a01      	cmp	r2, #1
 8014bea:	f040 808a 	bne.w	8014d02 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 8014bee:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 8014bf2:	1ac0      	subs	r0, r0, r3
 8014bf4:	2302      	movs	r3, #2
 8014bf6:	fb90 f0f3 	sdiv	r0, r0, r3
 8014bfa:	b200      	sxth	r0, r0
 8014bfc:	7c23      	ldrb	r3, [r4, #16]
 8014bfe:	2b00      	cmp	r3, #0
 8014c00:	f000 808b 	beq.w	8014d1a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8014c04:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 8014c08:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 8014c0c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8014c10:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8014c14:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8014c18:	4410      	add	r0, r2
 8014c1a:	b200      	sxth	r0, r0
 8014c1c:	9000      	str	r0, [sp, #0]
 8014c1e:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8014c22:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8014c26:	4642      	mov	r2, r8
 8014c28:	2100      	movs	r1, #0
 8014c2a:	4658      	mov	r0, fp
 8014c2c:	f7ff fca2 	bl	8014574 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8014c30:	2800      	cmp	r0, #0
 8014c32:	d163      	bne.n	8014cfc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014c34:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8014c38:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8014c3c:	b2b2      	uxth	r2, r6
 8014c3e:	4413      	add	r3, r2
 8014c40:	1a8a      	subs	r2, r1, r2
 8014c42:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 8014c46:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 8014c4a:	b21b      	sxth	r3, r3
 8014c4c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8014c50:	2a00      	cmp	r2, #0
 8014c52:	d153      	bne.n	8014cfc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014c54:	6822      	ldr	r2, [r4, #0]
 8014c56:	8869      	ldrh	r1, [r5, #2]
 8014c58:	7a12      	ldrb	r2, [r2, #8]
 8014c5a:	1a9b      	subs	r3, r3, r2
 8014c5c:	88ea      	ldrh	r2, [r5, #6]
 8014c5e:	440a      	add	r2, r1
 8014c60:	b212      	sxth	r2, r2
 8014c62:	4293      	cmp	r3, r2
 8014c64:	dda7      	ble.n	8014bb6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8014c66:	e049      	b.n	8014cfc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014c68:	7c23      	ldrb	r3, [r4, #16]
 8014c6a:	444f      	add	r7, r9
 8014c6c:	b1c3      	cbz	r3, 8014ca0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 8014c6e:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8014c72:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8014c76:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8014c7a:	443b      	add	r3, r7
 8014c7c:	4293      	cmp	r3, r2
 8014c7e:	da97      	bge.n	8014bb0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8014c80:	a80e      	add	r0, sp, #56	; 0x38
 8014c82:	f7ff fdeb 	bl	801485c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8014c86:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 8014c8a:	3b01      	subs	r3, #1
 8014c8c:	b29b      	uxth	r3, r3
 8014c8e:	454b      	cmp	r3, r9
 8014c90:	9309      	str	r3, [sp, #36]	; 0x24
 8014c92:	d021      	beq.n	8014cd8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8014c94:	7961      	ldrb	r1, [r4, #5]
 8014c96:	a817      	add	r0, sp, #92	; 0x5c
 8014c98:	f7f3 fa1e 	bl	80080d8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8014c9c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014c9e:	e7f4      	b.n	8014c8a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8014ca0:	fa1f f986 	uxth.w	r9, r6
 8014ca4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8014ca8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8014cac:	443b      	add	r3, r7
 8014cae:	4293      	cmp	r3, r2
 8014cb0:	f6bf af7e 	bge.w	8014bb0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8014cb4:	a817      	add	r0, sp, #92	; 0x5c
 8014cb6:	f002 fe41 	bl	801793c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8014cba:	b1f8      	cbz	r0, 8014cfc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014cbc:	280a      	cmp	r0, #10
 8014cbe:	d1f1      	bne.n	8014ca4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8014cc0:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8014cc4:	444b      	add	r3, r9
 8014cc6:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8014cca:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8014cce:	eba3 0309 	sub.w	r3, r3, r9
 8014cd2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8014cd6:	e7e5      	b.n	8014ca4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8014cd8:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8014cdc:	b2b3      	uxth	r3, r6
 8014cde:	441a      	add	r2, r3
 8014ce0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8014ce4:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 8014ce8:	1ad3      	subs	r3, r2, r3
 8014cea:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8014cee:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8014cf2:	b11b      	cbz	r3, 8014cfc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014cf4:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 8014cf8:	2b00      	cmp	r3, #0
 8014cfa:	d0ba      	beq.n	8014c72 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 8014cfc:	b063      	add	sp, #396	; 0x18c
 8014cfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014d02:	2a02      	cmp	r2, #2
 8014d04:	d105      	bne.n	8014d12 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8014d06:	7be2      	ldrb	r2, [r4, #15]
 8014d08:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8014d0c:	1a80      	subs	r0, r0, r2
 8014d0e:	1ac0      	subs	r0, r0, r3
 8014d10:	e773      	b.n	8014bfa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8014d12:	2000      	movs	r0, #0
 8014d14:	e772      	b.n	8014bfc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8014d16:	7be0      	ldrb	r0, [r4, #15]
 8014d18:	e770      	b.n	8014bfc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8014d1a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8014d1e:	e773      	b.n	8014c08 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8014d20:	f1ba 0f00 	cmp.w	sl, #0
 8014d24:	d0f7      	beq.n	8014d16 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8014d26:	2264      	movs	r2, #100	; 0x64
 8014d28:	4639      	mov	r1, r7
 8014d2a:	a849      	add	r0, sp, #292	; 0x124
 8014d2c:	f015 fcfd 	bl	802a72a <memcpy>
 8014d30:	2300      	movs	r3, #0
 8014d32:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8014d36:	6821      	ldr	r1, [r4, #0]
 8014d38:	a849      	add	r0, sp, #292	; 0x124
 8014d3a:	f7ff fbae 	bl	801449a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8014d3e:	b203      	sxth	r3, r0
 8014d40:	e751      	b.n	8014be6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08014d42 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8014d42:	2b03      	cmp	r3, #3
 8014d44:	d818      	bhi.n	8014d78 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8014d46:	e8df f003 	tbb	[pc, r3]
 8014d4a:	0602      	.short	0x0602
 8014d4c:	130d      	.short	0x130d
 8014d4e:	f9b0 2000 	ldrsh.w	r2, [r0]
 8014d52:	1850      	adds	r0, r2, r1
 8014d54:	4770      	bx	lr
 8014d56:	8803      	ldrh	r3, [r0, #0]
 8014d58:	8880      	ldrh	r0, [r0, #4]
 8014d5a:	4418      	add	r0, r3
 8014d5c:	b200      	sxth	r0, r0
 8014d5e:	1a80      	subs	r0, r0, r2
 8014d60:	3801      	subs	r0, #1
 8014d62:	4770      	bx	lr
 8014d64:	8803      	ldrh	r3, [r0, #0]
 8014d66:	8880      	ldrh	r0, [r0, #4]
 8014d68:	4418      	add	r0, r3
 8014d6a:	b200      	sxth	r0, r0
 8014d6c:	1a40      	subs	r0, r0, r1
 8014d6e:	e7f7      	b.n	8014d60 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8014d70:	f9b0 0000 	ldrsh.w	r0, [r0]
 8014d74:	4410      	add	r0, r2
 8014d76:	4770      	bx	lr
 8014d78:	2000      	movs	r0, #0
 8014d7a:	4770      	bx	lr

08014d7c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8014d7c:	2b03      	cmp	r3, #3
 8014d7e:	d817      	bhi.n	8014db0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8014d80:	e8df f003 	tbb	[pc, r3]
 8014d84:	10090602 	.word	0x10090602
 8014d88:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8014d8c:	1850      	adds	r0, r2, r1
 8014d8e:	4770      	bx	lr
 8014d90:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8014d94:	e7fa      	b.n	8014d8c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8014d96:	8843      	ldrh	r3, [r0, #2]
 8014d98:	88c0      	ldrh	r0, [r0, #6]
 8014d9a:	4418      	add	r0, r3
 8014d9c:	b200      	sxth	r0, r0
 8014d9e:	1a80      	subs	r0, r0, r2
 8014da0:	3801      	subs	r0, #1
 8014da2:	4770      	bx	lr
 8014da4:	8843      	ldrh	r3, [r0, #2]
 8014da6:	88c0      	ldrh	r0, [r0, #6]
 8014da8:	4418      	add	r0, r3
 8014daa:	b200      	sxth	r0, r0
 8014dac:	1a40      	subs	r0, r0, r1
 8014dae:	e7f7      	b.n	8014da0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8014db0:	2000      	movs	r0, #0
 8014db2:	4770      	bx	lr

08014db4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8014db4:	4b01      	ldr	r3, [pc, #4]	; (8014dbc <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8014db6:	2200      	movs	r2, #0
 8014db8:	601a      	str	r2, [r3, #0]
 8014dba:	4770      	bx	lr
 8014dbc:	20012f34 	.word	0x20012f34

08014dc0 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8014dc0:	4603      	mov	r3, r0
 8014dc2:	b1c8      	cbz	r0, 8014df8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8014dc4:	0c02      	lsrs	r2, r0, #16
 8014dc6:	0412      	lsls	r2, r2, #16
 8014dc8:	b9a2      	cbnz	r2, 8014df4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8014dca:	0403      	lsls	r3, r0, #16
 8014dcc:	2010      	movs	r0, #16
 8014dce:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8014dd2:	bf04      	itt	eq
 8014dd4:	021b      	lsleq	r3, r3, #8
 8014dd6:	3008      	addeq	r0, #8
 8014dd8:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8014ddc:	bf04      	itt	eq
 8014dde:	011b      	lsleq	r3, r3, #4
 8014de0:	3004      	addeq	r0, #4
 8014de2:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8014de6:	bf04      	itt	eq
 8014de8:	009b      	lsleq	r3, r3, #2
 8014dea:	3002      	addeq	r0, #2
 8014dec:	2b00      	cmp	r3, #0
 8014dee:	db04      	blt.n	8014dfa <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8014df0:	3001      	adds	r0, #1
 8014df2:	4770      	bx	lr
 8014df4:	2000      	movs	r0, #0
 8014df6:	e7ea      	b.n	8014dce <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8014df8:	2020      	movs	r0, #32
 8014dfa:	4770      	bx	lr

08014dfc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8014dfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014e00:	b087      	sub	sp, #28
 8014e02:	460d      	mov	r5, r1
 8014e04:	4616      	mov	r6, r2
 8014e06:	4698      	mov	r8, r3
 8014e08:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 8014e0c:	4601      	mov	r1, r0
 8014e0e:	b120      	cbz	r0, 8014e1a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8014e10:	b11a      	cbz	r2, 8014e1a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8014e12:	2d1f      	cmp	r5, #31
 8014e14:	d801      	bhi.n	8014e1a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8014e16:	2b1f      	cmp	r3, #31
 8014e18:	d904      	bls.n	8014e24 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 8014e1a:	2000      	movs	r0, #0
 8014e1c:	6038      	str	r0, [r7, #0]
 8014e1e:	b007      	add	sp, #28
 8014e20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014e24:	b97d      	cbnz	r5, 8014e46 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8014e26:	b143      	cbz	r3, 8014e3a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8014e28:	4602      	mov	r2, r0
 8014e2a:	e9cd 4700 	strd	r4, r7, [sp]
 8014e2e:	462b      	mov	r3, r5
 8014e30:	4641      	mov	r1, r8
 8014e32:	4630      	mov	r0, r6
 8014e34:	f7ff ffe2 	bl	8014dfc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014e38:	e7f1      	b.n	8014e1e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8014e3a:	f04f 33ff 	mov.w	r3, #4294967295
 8014e3e:	603b      	str	r3, [r7, #0]
 8014e40:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8014e44:	e7eb      	b.n	8014e1e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8014e46:	fa32 fa05 	lsrs.w	sl, r2, r5
 8014e4a:	d106      	bne.n	8014e5a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 8014e4c:	4346      	muls	r6, r0
 8014e4e:	fbb6 f0f4 	udiv	r0, r6, r4
 8014e52:	fb04 6610 	mls	r6, r4, r0, r6
 8014e56:	603e      	str	r6, [r7, #0]
 8014e58:	e7e1      	b.n	8014e1e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8014e5a:	2201      	movs	r2, #1
 8014e5c:	40aa      	lsls	r2, r5
 8014e5e:	3a01      	subs	r2, #1
 8014e60:	4016      	ands	r6, r2
 8014e62:	fa00 fb05 	lsl.w	fp, r0, r5
 8014e66:	4630      	mov	r0, r6
 8014e68:	fbbb f9f4 	udiv	r9, fp, r4
 8014e6c:	fb0a f309 	mul.w	r3, sl, r9
 8014e70:	9303      	str	r3, [sp, #12]
 8014e72:	f7ff ffa5 	bl	8014dc0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014e76:	462b      	mov	r3, r5
 8014e78:	460a      	mov	r2, r1
 8014e7a:	e9cd 4700 	strd	r4, r7, [sp]
 8014e7e:	4601      	mov	r1, r0
 8014e80:	4630      	mov	r0, r6
 8014e82:	f7ff ffbb 	bl	8014dfc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014e86:	fb04 b919 	mls	r9, r4, r9, fp
 8014e8a:	4606      	mov	r6, r0
 8014e8c:	4648      	mov	r0, r9
 8014e8e:	eb05 0108 	add.w	r1, r5, r8
 8014e92:	f7ff ff95 	bl	8014dc0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014e96:	ab05      	add	r3, sp, #20
 8014e98:	e9cd 4300 	strd	r4, r3, [sp]
 8014e9c:	464a      	mov	r2, r9
 8014e9e:	4603      	mov	r3, r0
 8014ea0:	4650      	mov	r0, sl
 8014ea2:	f7ff ffab 	bl	8014dfc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014ea6:	6839      	ldr	r1, [r7, #0]
 8014ea8:	9a05      	ldr	r2, [sp, #20]
 8014eaa:	9b03      	ldr	r3, [sp, #12]
 8014eac:	4411      	add	r1, r2
 8014eae:	fbb1 f2f4 	udiv	r2, r1, r4
 8014eb2:	18d3      	adds	r3, r2, r3
 8014eb4:	441e      	add	r6, r3
 8014eb6:	fb04 1412 	mls	r4, r4, r2, r1
 8014eba:	4430      	add	r0, r6
 8014ebc:	603c      	str	r4, [r7, #0]
 8014ebe:	e7ae      	b.n	8014e1e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08014ec0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8014ec0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014ec4:	b085      	sub	sp, #20
 8014ec6:	f1b0 0900 	subs.w	r9, r0, #0
 8014eca:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8014ecc:	461d      	mov	r5, r3
 8014ece:	bfbf      	itttt	lt
 8014ed0:	6823      	ldrlt	r3, [r4, #0]
 8014ed2:	425b      	neglt	r3, r3
 8014ed4:	f1c9 0900 	rsblt	r9, r9, #0
 8014ed8:	6023      	strlt	r3, [r4, #0]
 8014eda:	bfb4      	ite	lt
 8014edc:	f04f 36ff 	movlt.w	r6, #4294967295
 8014ee0:	2601      	movge	r6, #1
 8014ee2:	2a00      	cmp	r2, #0
 8014ee4:	4617      	mov	r7, r2
 8014ee6:	da04      	bge.n	8014ef2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8014ee8:	6823      	ldr	r3, [r4, #0]
 8014eea:	425b      	negs	r3, r3
 8014eec:	4257      	negs	r7, r2
 8014eee:	4276      	negs	r6, r6
 8014ef0:	6023      	str	r3, [r4, #0]
 8014ef2:	2d00      	cmp	r5, #0
 8014ef4:	4638      	mov	r0, r7
 8014ef6:	bfba      	itte	lt
 8014ef8:	426d      	neglt	r5, r5
 8014efa:	f04f 38ff 	movlt.w	r8, #4294967295
 8014efe:	f04f 0801 	movge.w	r8, #1
 8014f02:	f7ff ff5d 	bl	8014dc0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014f06:	ab03      	add	r3, sp, #12
 8014f08:	e9cd 5300 	strd	r5, r3, [sp]
 8014f0c:	463a      	mov	r2, r7
 8014f0e:	4603      	mov	r3, r0
 8014f10:	4648      	mov	r0, r9
 8014f12:	f7ff ff73 	bl	8014dfc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014f16:	6823      	ldr	r3, [r4, #0]
 8014f18:	9a03      	ldr	r2, [sp, #12]
 8014f1a:	4546      	cmp	r6, r8
 8014f1c:	441a      	add	r2, r3
 8014f1e:	fb92 f3f5 	sdiv	r3, r2, r5
 8014f22:	4418      	add	r0, r3
 8014f24:	bf18      	it	ne
 8014f26:	4240      	negne	r0, r0
 8014f28:	fb05 2313 	mls	r3, r5, r3, r2
 8014f2c:	1c72      	adds	r2, r6, #1
 8014f2e:	6023      	str	r3, [r4, #0]
 8014f30:	d105      	bne.n	8014f3e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8014f32:	2b00      	cmp	r3, #0
 8014f34:	f1c3 0200 	rsb	r2, r3, #0
 8014f38:	db0b      	blt.n	8014f52 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8014f3a:	6022      	str	r2, [r4, #0]
 8014f3c:	e006      	b.n	8014f4c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8014f3e:	2e01      	cmp	r6, #1
 8014f40:	d104      	bne.n	8014f4c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8014f42:	2b00      	cmp	r3, #0
 8014f44:	da02      	bge.n	8014f4c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8014f46:	442b      	add	r3, r5
 8014f48:	3801      	subs	r0, #1
 8014f4a:	6023      	str	r3, [r4, #0]
 8014f4c:	b005      	add	sp, #20
 8014f4e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014f52:	3801      	subs	r0, #1
 8014f54:	1b52      	subs	r2, r2, r5
 8014f56:	e7f0      	b.n	8014f3a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08014f58 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8014f58:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8014f5c:	4c1c      	ldr	r4, [pc, #112]	; (8014fd0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8014f5e:	6807      	ldr	r7, [r0, #0]
 8014f60:	69a3      	ldr	r3, [r4, #24]
 8014f62:	4605      	mov	r5, r0
 8014f64:	b92b      	cbnz	r3, 8014f72 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8014f66:	6840      	ldr	r0, [r0, #4]
 8014f68:	e9c5 7000 	strd	r7, r0, [r5]
 8014f6c:	b004      	add	sp, #16
 8014f6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014f72:	68a2      	ldr	r2, [r4, #8]
 8014f74:	6820      	ldr	r0, [r4, #0]
 8014f76:	ae04      	add	r6, sp, #16
 8014f78:	f04f 0802 	mov.w	r8, #2
 8014f7c:	fb93 f1f8 	sdiv	r1, r3, r8
 8014f80:	440a      	add	r2, r1
 8014f82:	f846 2d04 	str.w	r2, [r6, #-4]!
 8014f86:	69e1      	ldr	r1, [r4, #28]
 8014f88:	9600      	str	r6, [sp, #0]
 8014f8a:	463a      	mov	r2, r7
 8014f8c:	f7ff ff98 	bl	8014ec0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014f90:	69a3      	ldr	r3, [r4, #24]
 8014f92:	686a      	ldr	r2, [r5, #4]
 8014f94:	6a21      	ldr	r1, [r4, #32]
 8014f96:	9600      	str	r6, [sp, #0]
 8014f98:	4607      	mov	r7, r0
 8014f9a:	6860      	ldr	r0, [r4, #4]
 8014f9c:	f7ff ff90 	bl	8014ec0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014fa0:	6962      	ldr	r2, [r4, #20]
 8014fa2:	69a3      	ldr	r3, [r4, #24]
 8014fa4:	fb93 f8f8 	sdiv	r8, r3, r8
 8014fa8:	4442      	add	r2, r8
 8014faa:	9203      	str	r2, [sp, #12]
 8014fac:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8014fae:	682a      	ldr	r2, [r5, #0]
 8014fb0:	9600      	str	r6, [sp, #0]
 8014fb2:	4407      	add	r7, r0
 8014fb4:	68e0      	ldr	r0, [r4, #12]
 8014fb6:	f7ff ff83 	bl	8014ec0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014fba:	9600      	str	r6, [sp, #0]
 8014fbc:	4680      	mov	r8, r0
 8014fbe:	69a3      	ldr	r3, [r4, #24]
 8014fc0:	686a      	ldr	r2, [r5, #4]
 8014fc2:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8014fc4:	6920      	ldr	r0, [r4, #16]
 8014fc6:	f7ff ff7b 	bl	8014ec0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014fca:	4440      	add	r0, r8
 8014fcc:	e7cc      	b.n	8014f68 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8014fce:	bf00      	nop
 8014fd0:	20012f38 	.word	0x20012f38

08014fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8014fd4:	4b07      	ldr	r3, [pc, #28]	; (8014ff4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8014fd6:	781b      	ldrb	r3, [r3, #0]
 8014fd8:	2b01      	cmp	r3, #1
 8014fda:	d109      	bne.n	8014ff0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8014fdc:	f9b1 3000 	ldrsh.w	r3, [r1]
 8014fe0:	f9b0 2000 	ldrsh.w	r2, [r0]
 8014fe4:	8003      	strh	r3, [r0, #0]
 8014fe6:	4b04      	ldr	r3, [pc, #16]	; (8014ff8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8014fe8:	881b      	ldrh	r3, [r3, #0]
 8014fea:	3b01      	subs	r3, #1
 8014fec:	1a9b      	subs	r3, r3, r2
 8014fee:	800b      	strh	r3, [r1, #0]
 8014ff0:	4770      	bx	lr
 8014ff2:	bf00      	nop
 8014ff4:	20012f1c 	.word	0x20012f1c
 8014ff8:	20012f18 	.word	0x20012f18

08014ffc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8014ffc:	b510      	push	{r4, lr}
 8014ffe:	4b07      	ldr	r3, [pc, #28]	; (801501c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8015000:	781b      	ldrb	r3, [r3, #0]
 8015002:	2b01      	cmp	r3, #1
 8015004:	d108      	bne.n	8015018 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8015006:	4b06      	ldr	r3, [pc, #24]	; (8015020 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8015008:	880c      	ldrh	r4, [r1, #0]
 801500a:	881b      	ldrh	r3, [r3, #0]
 801500c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8015010:	3b01      	subs	r3, #1
 8015012:	1b1b      	subs	r3, r3, r4
 8015014:	8003      	strh	r3, [r0, #0]
 8015016:	800a      	strh	r2, [r1, #0]
 8015018:	bd10      	pop	{r4, pc}
 801501a:	bf00      	nop
 801501c:	20012f1c 	.word	0x20012f1c
 8015020:	20012f18 	.word	0x20012f18

08015024 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8015024:	b510      	push	{r4, lr}
 8015026:	4b0a      	ldr	r3, [pc, #40]	; (8015050 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8015028:	781b      	ldrb	r3, [r3, #0]
 801502a:	2b01      	cmp	r3, #1
 801502c:	d10e      	bne.n	801504c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 801502e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8015032:	8843      	ldrh	r3, [r0, #2]
 8015034:	f9b0 4000 	ldrsh.w	r4, [r0]
 8015038:	8044      	strh	r4, [r0, #2]
 801503a:	18ca      	adds	r2, r1, r3
 801503c:	4b05      	ldr	r3, [pc, #20]	; (8015054 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 801503e:	881b      	ldrh	r3, [r3, #0]
 8015040:	1a9b      	subs	r3, r3, r2
 8015042:	8003      	strh	r3, [r0, #0]
 8015044:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015048:	80c3      	strh	r3, [r0, #6]
 801504a:	8081      	strh	r1, [r0, #4]
 801504c:	bd10      	pop	{r4, pc}
 801504e:	bf00      	nop
 8015050:	20012f1c 	.word	0x20012f1c
 8015054:	20012f18 	.word	0x20012f18

08015058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8015058:	4b08      	ldr	r3, [pc, #32]	; (801507c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 801505a:	781b      	ldrb	r3, [r3, #0]
 801505c:	2b01      	cmp	r3, #1
 801505e:	d10c      	bne.n	801507a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8015060:	8803      	ldrh	r3, [r0, #0]
 8015062:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8015066:	8842      	ldrh	r2, [r0, #2]
 8015068:	8002      	strh	r2, [r0, #0]
 801506a:	185a      	adds	r2, r3, r1
 801506c:	4b04      	ldr	r3, [pc, #16]	; (8015080 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 801506e:	881b      	ldrh	r3, [r3, #0]
 8015070:	1a9b      	subs	r3, r3, r2
 8015072:	8043      	strh	r3, [r0, #2]
 8015074:	88c3      	ldrh	r3, [r0, #6]
 8015076:	8083      	strh	r3, [r0, #4]
 8015078:	80c1      	strh	r1, [r0, #6]
 801507a:	4770      	bx	lr
 801507c:	20012f1c 	.word	0x20012f1c
 8015080:	20012f18 	.word	0x20012f18

08015084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8015084:	b510      	push	{r4, lr}
 8015086:	4b07      	ldr	r3, [pc, #28]	; (80150a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8015088:	781b      	ldrb	r3, [r3, #0]
 801508a:	2b01      	cmp	r3, #1
 801508c:	d108      	bne.n	80150a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801508e:	f9b1 3000 	ldrsh.w	r3, [r1]
 8015092:	f9b0 4000 	ldrsh.w	r4, [r0]
 8015096:	8003      	strh	r3, [r0, #0]
 8015098:	8893      	ldrh	r3, [r2, #4]
 801509a:	3b01      	subs	r3, #1
 801509c:	1b1b      	subs	r3, r3, r4
 801509e:	800b      	strh	r3, [r1, #0]
 80150a0:	bd10      	pop	{r4, pc}
 80150a2:	bf00      	nop
 80150a4:	20012f1c 	.word	0x20012f1c

080150a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 80150a8:	4b0b      	ldr	r3, [pc, #44]	; (80150d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 80150aa:	781b      	ldrb	r3, [r3, #0]
 80150ac:	2b01      	cmp	r3, #1
 80150ae:	d111      	bne.n	80150d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 80150b0:	680b      	ldr	r3, [r1, #0]
 80150b2:	ed90 7a00 	vldr	s14, [r0]
 80150b6:	6003      	str	r3, [r0, #0]
 80150b8:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 80150bc:	eddf 6a07 	vldr	s13, [pc, #28]	; 80150dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 80150c0:	ee07 3a90 	vmov	s15, r3
 80150c4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80150c8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80150cc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80150d0:	edc1 7a00 	vstr	s15, [r1]
 80150d4:	4770      	bx	lr
 80150d6:	bf00      	nop
 80150d8:	20012f1c 	.word	0x20012f1c
 80150dc:	38d1b717 	.word	0x38d1b717

080150e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 80150e0:	b510      	push	{r4, lr}
 80150e2:	4b0a      	ldr	r3, [pc, #40]	; (801510c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 80150e4:	781b      	ldrb	r3, [r3, #0]
 80150e6:	2b01      	cmp	r3, #1
 80150e8:	460a      	mov	r2, r1
 80150ea:	d10d      	bne.n	8015108 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 80150ec:	8881      	ldrh	r1, [r0, #4]
 80150ee:	8803      	ldrh	r3, [r0, #0]
 80150f0:	440b      	add	r3, r1
 80150f2:	4601      	mov	r1, r0
 80150f4:	3b01      	subs	r3, #1
 80150f6:	f821 3b02 	strh.w	r3, [r1], #2
 80150fa:	f7ff ffc3 	bl	8015084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 80150fe:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015102:	88c2      	ldrh	r2, [r0, #6]
 8015104:	8082      	strh	r2, [r0, #4]
 8015106:	80c3      	strh	r3, [r0, #6]
 8015108:	bd10      	pop	{r4, pc}
 801510a:	bf00      	nop
 801510c:	20012f1c 	.word	0x20012f1c

08015110 <_ZN8touchgfx11Application13requestRedrawEv>:
 8015110:	4b06      	ldr	r3, [pc, #24]	; (801512c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8015112:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015116:	4b06      	ldr	r3, [pc, #24]	; (8015130 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8015118:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 801511c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015120:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 8015124:	2100      	movs	r1, #0
 8015126:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 801512a:	4770      	bx	lr
 801512c:	20012f18 	.word	0x20012f18
 8015130:	20012f1a 	.word	0x20012f1a

08015134 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8015134:	4b03      	ldr	r3, [pc, #12]	; (8015144 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8015136:	6818      	ldr	r0, [r3, #0]
 8015138:	b110      	cbz	r0, 8015140 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 801513a:	6803      	ldr	r3, [r0, #0]
 801513c:	699b      	ldr	r3, [r3, #24]
 801513e:	4718      	bx	r3
 8015140:	4770      	bx	lr
 8015142:	bf00      	nop
 8015144:	20012f68 	.word	0x20012f68

08015148 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8015148:	4770      	bx	lr
	...

0801514c <_ZN8touchgfx11Application4drawEv>:
 801514c:	b507      	push	{r0, r1, r2, lr}
 801514e:	4b09      	ldr	r3, [pc, #36]	; (8015174 <_ZN8touchgfx11Application4drawEv+0x28>)
 8015150:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015154:	4b08      	ldr	r3, [pc, #32]	; (8015178 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8015156:	f8ad 2004 	strh.w	r2, [sp, #4]
 801515a:	f9b3 3000 	ldrsh.w	r3, [r3]
 801515e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015162:	6803      	ldr	r3, [r0, #0]
 8015164:	2100      	movs	r1, #0
 8015166:	9100      	str	r1, [sp, #0]
 8015168:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801516a:	4669      	mov	r1, sp
 801516c:	4798      	blx	r3
 801516e:	b003      	add	sp, #12
 8015170:	f85d fb04 	ldr.w	pc, [sp], #4
 8015174:	20012f18 	.word	0x20012f18
 8015178:	20012f1a 	.word	0x20012f1a

0801517c <_ZN8touchgfx11Application10invalidateEv>:
 801517c:	4b09      	ldr	r3, [pc, #36]	; (80151a4 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 801517e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015182:	4b09      	ldr	r3, [pc, #36]	; (80151a8 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8015184:	b082      	sub	sp, #8
 8015186:	f9b3 3000 	ldrsh.w	r3, [r3]
 801518a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801518e:	2100      	movs	r1, #0
 8015190:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015194:	9100      	str	r1, [sp, #0]
 8015196:	6803      	ldr	r3, [r0, #0]
 8015198:	aa02      	add	r2, sp, #8
 801519a:	e912 0006 	ldmdb	r2, {r1, r2}
 801519e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80151a0:	b002      	add	sp, #8
 80151a2:	4718      	bx	r3
 80151a4:	20012f18 	.word	0x20012f18
 80151a8:	20012f1a 	.word	0x20012f1a

080151ac <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 80151ac:	4b03      	ldr	r3, [pc, #12]	; (80151bc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 80151ae:	6818      	ldr	r0, [r3, #0]
 80151b0:	b110      	cbz	r0, 80151b8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 80151b2:	6803      	ldr	r3, [r0, #0]
 80151b4:	69db      	ldr	r3, [r3, #28]
 80151b6:	4718      	bx	r3
 80151b8:	4770      	bx	lr
 80151ba:	bf00      	nop
 80151bc:	20012f68 	.word	0x20012f68

080151c0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 80151c0:	4b03      	ldr	r3, [pc, #12]	; (80151d0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 80151c2:	6818      	ldr	r0, [r3, #0]
 80151c4:	b110      	cbz	r0, 80151cc <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 80151c6:	6803      	ldr	r3, [r0, #0]
 80151c8:	6a1b      	ldr	r3, [r3, #32]
 80151ca:	4718      	bx	r3
 80151cc:	4770      	bx	lr
 80151ce:	bf00      	nop
 80151d0:	20012f68 	.word	0x20012f68

080151d4 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 80151d4:	2300      	movs	r3, #0
 80151d6:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 80151da:	4770      	bx	lr

080151dc <_ZN8touchgfx11Application14handleKeyEventEh>:
 80151dc:	4b03      	ldr	r3, [pc, #12]	; (80151ec <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 80151de:	6818      	ldr	r0, [r3, #0]
 80151e0:	b110      	cbz	r0, 80151e8 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 80151e2:	6803      	ldr	r3, [r0, #0]
 80151e4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80151e6:	4718      	bx	r3
 80151e8:	4770      	bx	lr
 80151ea:	bf00      	nop
 80151ec:	20012f68 	.word	0x20012f68

080151f0 <_ZN8touchgfx11ApplicationD1Ev>:
 80151f0:	4770      	bx	lr

080151f2 <_ZN8touchgfx11ApplicationD0Ev>:
 80151f2:	b510      	push	{r4, lr}
 80151f4:	f44f 719e 	mov.w	r1, #316	; 0x13c
 80151f8:	4604      	mov	r4, r0
 80151fa:	f014 f958 	bl	80294ae <_ZdlPvj>
 80151fe:	4620      	mov	r0, r4
 8015200:	bd10      	pop	{r4, pc}

08015202 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8015202:	b510      	push	{r4, lr}
 8015204:	f9b1 4000 	ldrsh.w	r4, [r1]
 8015208:	888a      	ldrh	r2, [r1, #4]
 801520a:	f9b0 3000 	ldrsh.w	r3, [r0]
 801520e:	4422      	add	r2, r4
 8015210:	b212      	sxth	r2, r2
 8015212:	4293      	cmp	r3, r2
 8015214:	da15      	bge.n	8015242 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8015216:	8882      	ldrh	r2, [r0, #4]
 8015218:	4413      	add	r3, r2
 801521a:	b21b      	sxth	r3, r3
 801521c:	429c      	cmp	r4, r3
 801521e:	da10      	bge.n	8015242 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8015220:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8015224:	88c9      	ldrh	r1, [r1, #6]
 8015226:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 801522a:	4419      	add	r1, r3
 801522c:	b209      	sxth	r1, r1
 801522e:	428a      	cmp	r2, r1
 8015230:	da07      	bge.n	8015242 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8015232:	88c0      	ldrh	r0, [r0, #6]
 8015234:	4410      	add	r0, r2
 8015236:	b200      	sxth	r0, r0
 8015238:	4283      	cmp	r3, r0
 801523a:	bfac      	ite	ge
 801523c:	2000      	movge	r0, #0
 801523e:	2001      	movlt	r0, #1
 8015240:	bd10      	pop	{r4, pc}
 8015242:	2000      	movs	r0, #0
 8015244:	e7fc      	b.n	8015240 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08015246 <_ZN8touchgfx4Rect10restrictToEss>:
 8015246:	f9b0 3000 	ldrsh.w	r3, [r0]
 801524a:	2b00      	cmp	r3, #0
 801524c:	b510      	push	{r4, lr}
 801524e:	da04      	bge.n	801525a <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8015250:	8884      	ldrh	r4, [r0, #4]
 8015252:	4423      	add	r3, r4
 8015254:	8083      	strh	r3, [r0, #4]
 8015256:	2300      	movs	r3, #0
 8015258:	8003      	strh	r3, [r0, #0]
 801525a:	f9b0 4000 	ldrsh.w	r4, [r0]
 801525e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015262:	1b09      	subs	r1, r1, r4
 8015264:	428b      	cmp	r3, r1
 8015266:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801526a:	bfc8      	it	gt
 801526c:	8081      	strhgt	r1, [r0, #4]
 801526e:	2b00      	cmp	r3, #0
 8015270:	da04      	bge.n	801527c <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8015272:	88c1      	ldrh	r1, [r0, #6]
 8015274:	440b      	add	r3, r1
 8015276:	80c3      	strh	r3, [r0, #6]
 8015278:	2300      	movs	r3, #0
 801527a:	8043      	strh	r3, [r0, #2]
 801527c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8015280:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8015284:	1a52      	subs	r2, r2, r1
 8015286:	4293      	cmp	r3, r2
 8015288:	bfc8      	it	gt
 801528a:	80c2      	strhgt	r2, [r0, #6]
 801528c:	bd10      	pop	{r4, pc}
	...

08015290 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8015290:	b510      	push	{r4, lr}
 8015292:	4b10      	ldr	r3, [pc, #64]	; (80152d4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8015294:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015298:	4b0f      	ldr	r3, [pc, #60]	; (80152d8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 801529a:	460c      	mov	r4, r1
 801529c:	4620      	mov	r0, r4
 801529e:	f9b3 1000 	ldrsh.w	r1, [r3]
 80152a2:	f7ff ffd0 	bl	8015246 <_ZN8touchgfx4Rect10restrictToEss>
 80152a6:	4b0d      	ldr	r3, [pc, #52]	; (80152dc <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 80152a8:	6818      	ldr	r0, [r3, #0]
 80152aa:	b190      	cbz	r0, 80152d2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 80152ac:	6803      	ldr	r3, [r0, #0]
 80152ae:	4621      	mov	r1, r4
 80152b0:	689b      	ldr	r3, [r3, #8]
 80152b2:	4798      	blx	r3
 80152b4:	4b0a      	ldr	r3, [pc, #40]	; (80152e0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 80152b6:	6818      	ldr	r0, [r3, #0]
 80152b8:	b118      	cbz	r0, 80152c2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 80152ba:	6803      	ldr	r3, [r0, #0]
 80152bc:	4621      	mov	r1, r4
 80152be:	689b      	ldr	r3, [r3, #8]
 80152c0:	4798      	blx	r3
 80152c2:	4b08      	ldr	r3, [pc, #32]	; (80152e4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 80152c4:	6818      	ldr	r0, [r3, #0]
 80152c6:	6803      	ldr	r3, [r0, #0]
 80152c8:	4621      	mov	r1, r4
 80152ca:	69db      	ldr	r3, [r3, #28]
 80152cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80152d0:	4718      	bx	r3
 80152d2:	bd10      	pop	{r4, pc}
 80152d4:	20012f1a 	.word	0x20012f1a
 80152d8:	20012f18 	.word	0x20012f18
 80152dc:	20012f68 	.word	0x20012f68
 80152e0:	20012f64 	.word	0x20012f64
 80152e4:	20012f24 	.word	0x20012f24

080152e8 <_ZNK8touchgfx4Rect8includesERKS0_>:
 80152e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80152ea:	4606      	mov	r6, r0
 80152ec:	4608      	mov	r0, r1
 80152ee:	460f      	mov	r7, r1
 80152f0:	f7fa ff97 	bl	8010222 <_ZNK8touchgfx4Rect7isEmptyEv>
 80152f4:	b9e8      	cbnz	r0, 8015332 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80152f6:	f9b7 5000 	ldrsh.w	r5, [r7]
 80152fa:	f9b6 4000 	ldrsh.w	r4, [r6]
 80152fe:	42a5      	cmp	r5, r4
 8015300:	db17      	blt.n	8015332 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015302:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8015306:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 801530a:	429a      	cmp	r2, r3
 801530c:	db11      	blt.n	8015332 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801530e:	88b9      	ldrh	r1, [r7, #4]
 8015310:	440d      	add	r5, r1
 8015312:	88b1      	ldrh	r1, [r6, #4]
 8015314:	440c      	add	r4, r1
 8015316:	b22d      	sxth	r5, r5
 8015318:	b224      	sxth	r4, r4
 801531a:	42a5      	cmp	r5, r4
 801531c:	dc09      	bgt.n	8015332 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801531e:	88f8      	ldrh	r0, [r7, #6]
 8015320:	4410      	add	r0, r2
 8015322:	88f2      	ldrh	r2, [r6, #6]
 8015324:	4413      	add	r3, r2
 8015326:	b200      	sxth	r0, r0
 8015328:	b21b      	sxth	r3, r3
 801532a:	4298      	cmp	r0, r3
 801532c:	bfcc      	ite	gt
 801532e:	2000      	movgt	r0, #0
 8015330:	2001      	movle	r0, #1
 8015332:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08015334 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8015334:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015336:	4604      	mov	r4, r0
 8015338:	4608      	mov	r0, r1
 801533a:	460d      	mov	r5, r1
 801533c:	f7fa ff71 	bl	8010222 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015340:	b978      	cbnz	r0, 8015362 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8015342:	4620      	mov	r0, r4
 8015344:	f7fa ff6d 	bl	8010222 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015348:	f9b5 6000 	ldrsh.w	r6, [r5]
 801534c:	b150      	cbz	r0, 8015364 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 801534e:	8026      	strh	r6, [r4, #0]
 8015350:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8015354:	8063      	strh	r3, [r4, #2]
 8015356:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 801535a:	80a3      	strh	r3, [r4, #4]
 801535c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8015360:	80e3      	strh	r3, [r4, #6]
 8015362:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015364:	f9b4 1000 	ldrsh.w	r1, [r4]
 8015368:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801536c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8015370:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8015374:	88ed      	ldrh	r5, [r5, #6]
 8015376:	42b1      	cmp	r1, r6
 8015378:	460f      	mov	r7, r1
 801537a:	bfa8      	it	ge
 801537c:	4637      	movge	r7, r6
 801537e:	4293      	cmp	r3, r2
 8015380:	4618      	mov	r0, r3
 8015382:	4466      	add	r6, ip
 8015384:	bfa8      	it	ge
 8015386:	4610      	movge	r0, r2
 8015388:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 801538c:	8027      	strh	r7, [r4, #0]
 801538e:	442a      	add	r2, r5
 8015390:	88e5      	ldrh	r5, [r4, #6]
 8015392:	8060      	strh	r0, [r4, #2]
 8015394:	4461      	add	r1, ip
 8015396:	442b      	add	r3, r5
 8015398:	b236      	sxth	r6, r6
 801539a:	b209      	sxth	r1, r1
 801539c:	b212      	sxth	r2, r2
 801539e:	b21b      	sxth	r3, r3
 80153a0:	428e      	cmp	r6, r1
 80153a2:	bfac      	ite	ge
 80153a4:	ebc7 0106 	rsbge	r1, r7, r6
 80153a8:	ebc7 0101 	rsblt	r1, r7, r1
 80153ac:	429a      	cmp	r2, r3
 80153ae:	bfac      	ite	ge
 80153b0:	ebc0 0202 	rsbge	r2, r0, r2
 80153b4:	ebc0 0203 	rsblt	r2, r0, r3
 80153b8:	80a1      	strh	r1, [r4, #4]
 80153ba:	80e2      	strh	r2, [r4, #6]
 80153bc:	e7d1      	b.n	8015362 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

080153c0 <_ZN8touchgfx11Application11getInstanceEv>:
 80153c0:	4b01      	ldr	r3, [pc, #4]	; (80153c8 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 80153c2:	6818      	ldr	r0, [r3, #0]
 80153c4:	4770      	bx	lr
 80153c6:	bf00      	nop
 80153c8:	20012f78 	.word	0x20012f78

080153cc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 80153cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80153ce:	4b10      	ldr	r3, [pc, #64]	; (8015410 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 80153d0:	781b      	ldrb	r3, [r3, #0]
 80153d2:	4605      	mov	r5, r0
 80153d4:	b1d3      	cbz	r3, 801540c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 80153d6:	4b0f      	ldr	r3, [pc, #60]	; (8015414 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 80153d8:	4f0f      	ldr	r7, [pc, #60]	; (8015418 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 80153da:	881c      	ldrh	r4, [r3, #0]
 80153dc:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 80153e0:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 80153e4:	42a3      	cmp	r3, r4
 80153e6:	d90e      	bls.n	8015406 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 80153e8:	683b      	ldr	r3, [r7, #0]
 80153ea:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80153ee:	b10a      	cbz	r2, 80153f4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 80153f0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80153f2:	b900      	cbnz	r0, 80153f6 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 80153f4:	6898      	ldr	r0, [r3, #8]
 80153f6:	6803      	ldr	r3, [r0, #0]
 80153f8:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 80153fc:	69db      	ldr	r3, [r3, #28]
 80153fe:	3401      	adds	r4, #1
 8015400:	4798      	blx	r3
 8015402:	b2a4      	uxth	r4, r4
 8015404:	e7ec      	b.n	80153e0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 8015406:	2300      	movs	r3, #0
 8015408:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 801540c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801540e:	bf00      	nop
 8015410:	20012f22 	.word	0x20012f22
 8015414:	20000088 	.word	0x20000088
 8015418:	20012f24 	.word	0x20012f24

0801541c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 801541c:	b510      	push	{r4, lr}
 801541e:	2300      	movs	r3, #0
 8015420:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8015424:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8015428:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 801542c:	4604      	mov	r4, r0
 801542e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8015432:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8015436:	429a      	cmp	r2, r3
 8015438:	d90e      	bls.n	8015458 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 801543a:	18e2      	adds	r2, r4, r3
 801543c:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8015440:	b122      	cbz	r2, 801544c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8015442:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8015446:	6803      	ldr	r3, [r0, #0]
 8015448:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801544a:	4798      	blx	r3
 801544c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8015450:	3301      	adds	r3, #1
 8015452:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8015456:	e7ea      	b.n	801542e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8015458:	bd10      	pop	{r4, pc}

0801545a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 801545a:	b530      	push	{r4, r5, lr}
 801545c:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8015460:	2200      	movs	r2, #0
 8015462:	b293      	uxth	r3, r2
 8015464:	429d      	cmp	r5, r3
 8015466:	d90e      	bls.n	8015486 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8015468:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 801546c:	428b      	cmp	r3, r1
 801546e:	d10b      	bne.n	8015488 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8015470:	1884      	adds	r4, r0, r2
 8015472:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8015476:	b13b      	cbz	r3, 8015488 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8015478:	3b01      	subs	r3, #1
 801547a:	b2db      	uxtb	r3, r3
 801547c:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8015480:	b90b      	cbnz	r3, 8015486 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8015482:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8015486:	bd30      	pop	{r4, r5, pc}
 8015488:	3201      	adds	r2, #1
 801548a:	e7ea      	b.n	8015462 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

0801548c <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 801548c:	2300      	movs	r3, #0
 801548e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8015492:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8015496:	30a4      	adds	r0, #164	; 0xa4
 8015498:	f802 3b01 	strb.w	r3, [r2], #1
 801549c:	4282      	cmp	r2, r0
 801549e:	d1fb      	bne.n	8015498 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 80154a0:	4770      	bx	lr
	...

080154a4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 80154a4:	b570      	push	{r4, r5, r6, lr}
 80154a6:	4c0b      	ldr	r4, [pc, #44]	; (80154d4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 80154a8:	4605      	mov	r5, r0
 80154aa:	6820      	ldr	r0, [r4, #0]
 80154ac:	460e      	mov	r6, r1
 80154ae:	b110      	cbz	r0, 80154b6 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 80154b0:	6803      	ldr	r3, [r0, #0]
 80154b2:	695b      	ldr	r3, [r3, #20]
 80154b4:	4798      	blx	r3
 80154b6:	1d28      	adds	r0, r5, #4
 80154b8:	f7ff ffe8 	bl	801548c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80154bc:	6026      	str	r6, [r4, #0]
 80154be:	6833      	ldr	r3, [r6, #0]
 80154c0:	4630      	mov	r0, r6
 80154c2:	68db      	ldr	r3, [r3, #12]
 80154c4:	4798      	blx	r3
 80154c6:	682b      	ldr	r3, [r5, #0]
 80154c8:	4628      	mov	r0, r5
 80154ca:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80154cc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80154d0:	4718      	bx	r3
 80154d2:	bf00      	nop
 80154d4:	20012f68 	.word	0x20012f68

080154d8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 80154d8:	2300      	movs	r3, #0
 80154da:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 80154de:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 80154e2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80154e4:	461a      	mov	r2, r3
 80154e6:	461c      	mov	r4, r3
 80154e8:	461d      	mov	r5, r3
 80154ea:	459c      	cmp	ip, r3
 80154ec:	dd1a      	ble.n	8015524 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 80154ee:	18c6      	adds	r6, r0, r3
 80154f0:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 80154f4:	b16e      	cbz	r6, 8015512 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 80154f6:	429a      	cmp	r2, r3
 80154f8:	d008      	beq.n	801550c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 80154fa:	fa1f fe82 	uxth.w	lr, r2
 80154fe:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8015502:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8015506:	1887      	adds	r7, r0, r2
 8015508:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 801550c:	3201      	adds	r2, #1
 801550e:	3301      	adds	r3, #1
 8015510:	e7eb      	b.n	80154ea <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8015512:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8015516:	4299      	cmp	r1, r3
 8015518:	bfa8      	it	ge
 801551a:	3501      	addge	r5, #1
 801551c:	429e      	cmp	r6, r3
 801551e:	bfc8      	it	gt
 8015520:	3401      	addgt	r4, #1
 8015522:	e7f4      	b.n	801550e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8015524:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8015528:	1b49      	subs	r1, r1, r5
 801552a:	1b1b      	subs	r3, r3, r4
 801552c:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8015530:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8015534:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8015538:	4293      	cmp	r3, r2
 801553a:	dd03      	ble.n	8015544 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 801553c:	3b01      	subs	r3, #1
 801553e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8015542:	e7f7      	b.n	8015534 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8015544:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08015548 <_ZN8touchgfx11Application15handleTickEventEv>:
 8015548:	b570      	push	{r4, r5, r6, lr}
 801554a:	4d16      	ldr	r5, [pc, #88]	; (80155a4 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 801554c:	4604      	mov	r4, r0
 801554e:	6828      	ldr	r0, [r5, #0]
 8015550:	b140      	cbz	r0, 8015564 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8015552:	7a03      	ldrb	r3, [r0, #8]
 8015554:	b933      	cbnz	r3, 8015564 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8015556:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 801555a:	6803      	ldr	r3, [r0, #0]
 801555c:	689b      	ldr	r3, [r3, #8]
 801555e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015562:	4718      	bx	r3
 8015564:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8015568:	4e0f      	ldr	r6, [pc, #60]	; (80155a8 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 801556a:	b973      	cbnz	r3, 801558a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801556c:	b168      	cbz	r0, 801558a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801556e:	7a03      	ldrb	r3, [r0, #8]
 8015570:	b15b      	cbz	r3, 801558a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8015572:	6830      	ldr	r0, [r6, #0]
 8015574:	b110      	cbz	r0, 801557c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8015576:	6803      	ldr	r3, [r0, #0]
 8015578:	691b      	ldr	r3, [r3, #16]
 801557a:	4798      	blx	r3
 801557c:	6828      	ldr	r0, [r5, #0]
 801557e:	6803      	ldr	r3, [r0, #0]
 8015580:	68db      	ldr	r3, [r3, #12]
 8015582:	4798      	blx	r3
 8015584:	2301      	movs	r3, #1
 8015586:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 801558a:	3404      	adds	r4, #4
 801558c:	4620      	mov	r0, r4
 801558e:	f7ff ff45 	bl	801541c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8015592:	4620      	mov	r0, r4
 8015594:	f7ff ffa0 	bl	80154d8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8015598:	6830      	ldr	r0, [r6, #0]
 801559a:	b110      	cbz	r0, 80155a2 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 801559c:	6803      	ldr	r3, [r0, #0]
 801559e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80155a0:	e7dd      	b.n	801555e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 80155a2:	bd70      	pop	{r4, r5, r6, pc}
 80155a4:	20012f6c 	.word	0x20012f6c
 80155a8:	20012f68 	.word	0x20012f68

080155ac <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 80155ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80155ae:	2300      	movs	r3, #0
 80155b0:	4604      	mov	r4, r0
 80155b2:	460d      	mov	r5, r1
 80155b4:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 80155b8:	4618      	mov	r0, r3
 80155ba:	b29a      	uxth	r2, r3
 80155bc:	4291      	cmp	r1, r2
 80155be:	d911      	bls.n	80155e4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 80155c0:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 80155c4:	18e6      	adds	r6, r4, r3
 80155c6:	42af      	cmp	r7, r5
 80155c8:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 80155cc:	d105      	bne.n	80155da <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 80155ce:	2aff      	cmp	r2, #255	; 0xff
 80155d0:	d002      	beq.n	80155d8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 80155d2:	3201      	adds	r2, #1
 80155d4:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 80155d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80155da:	2a00      	cmp	r2, #0
 80155dc:	bf08      	it	eq
 80155de:	2001      	moveq	r0, #1
 80155e0:	3301      	adds	r3, #1
 80155e2:	e7ea      	b.n	80155ba <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 80155e4:	b120      	cbz	r0, 80155f0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 80155e6:	2920      	cmp	r1, #32
 80155e8:	d102      	bne.n	80155f0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 80155ea:	4620      	mov	r0, r4
 80155ec:	f7ff ff74 	bl	80154d8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 80155f0:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 80155f4:	2b1f      	cmp	r3, #31
 80155f6:	d8ef      	bhi.n	80155d8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 80155f8:	18e2      	adds	r2, r4, r3
 80155fa:	2101      	movs	r1, #1
 80155fc:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8015600:	185a      	adds	r2, r3, r1
 8015602:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 8015606:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 801560a:	e7e5      	b.n	80155d8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

0801560c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 801560c:	4603      	mov	r3, r0
 801560e:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8015612:	2200      	movs	r2, #0
 8015614:	801a      	strh	r2, [r3, #0]
 8015616:	805a      	strh	r2, [r3, #2]
 8015618:	809a      	strh	r2, [r3, #4]
 801561a:	80da      	strh	r2, [r3, #6]
 801561c:	3308      	adds	r3, #8
 801561e:	428b      	cmp	r3, r1
 8015620:	d1f8      	bne.n	8015614 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8015622:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8015626:	4770      	bx	lr

08015628 <_ZN8touchgfx11ApplicationC1Ev>:
 8015628:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801562a:	4606      	mov	r6, r0
 801562c:	4b1c      	ldr	r3, [pc, #112]	; (80156a0 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 801562e:	f846 3b04 	str.w	r3, [r6], #4
 8015632:	4604      	mov	r4, r0
 8015634:	2500      	movs	r5, #0
 8015636:	22a8      	movs	r2, #168	; 0xa8
 8015638:	2100      	movs	r1, #0
 801563a:	4630      	mov	r0, r6
 801563c:	f014 ff4f 	bl	802a4de <memset>
 8015640:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8015644:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8015648:	f7ff ffe0 	bl	801560c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801564c:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8015650:	f7ff ffdc 	bl	801560c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8015654:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8015658:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 801565c:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8015660:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8015664:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8015668:	490e      	ldr	r1, [pc, #56]	; (80156a4 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 801566a:	480f      	ldr	r0, [pc, #60]	; (80156a8 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 801566c:	4f0f      	ldr	r7, [pc, #60]	; (80156ac <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 801566e:	f010 fde9 	bl	8026244 <CRC_Lock>
 8015672:	4b0f      	ldr	r3, [pc, #60]	; (80156b0 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8015674:	b158      	cbz	r0, 801568e <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8015676:	801d      	strh	r5, [r3, #0]
 8015678:	4a0e      	ldr	r2, [pc, #56]	; (80156b4 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 801567a:	2300      	movs	r3, #0
 801567c:	6013      	str	r3, [r2, #0]
 801567e:	4a0e      	ldr	r2, [pc, #56]	; (80156b8 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8015680:	603b      	str	r3, [r7, #0]
 8015682:	4630      	mov	r0, r6
 8015684:	6013      	str	r3, [r2, #0]
 8015686:	f7ff ff01 	bl	801548c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 801568a:	4620      	mov	r0, r4
 801568c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801568e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8015692:	2002      	movs	r0, #2
 8015694:	801a      	strh	r2, [r3, #0]
 8015696:	6038      	str	r0, [r7, #0]
 8015698:	f001 fb4a 	bl	8016d30 <_ZN8touchgfx6Screen4drawEv>
 801569c:	e7ec      	b.n	8015678 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 801569e:	bf00      	nop
 80156a0:	0802e888 	.word	0x0802e888
 80156a4:	b5e8b5cd 	.word	0xb5e8b5cd
 80156a8:	f407a5c2 	.word	0xf407a5c2
 80156ac:	20012f68 	.word	0x20012f68
 80156b0:	20000088 	.word	0x20000088
 80156b4:	20012f78 	.word	0x20012f78
 80156b8:	20012f6c 	.word	0x20012f6c

080156bc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 80156bc:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 80156c0:	3b01      	subs	r3, #1
 80156c2:	b29b      	uxth	r3, r3
 80156c4:	428b      	cmp	r3, r1
 80156c6:	b510      	push	{r4, lr}
 80156c8:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 80156cc:	d908      	bls.n	80156e0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 80156ce:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 80156d2:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 80156d6:	681a      	ldr	r2, [r3, #0]
 80156d8:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 80156dc:	685a      	ldr	r2, [r3, #4]
 80156de:	6062      	str	r2, [r4, #4]
 80156e0:	bd10      	pop	{r4, pc}
	...

080156e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 80156e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80156e8:	4b8f      	ldr	r3, [pc, #572]	; (8015928 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 80156ea:	b08f      	sub	sp, #60	; 0x3c
 80156ec:	ac0a      	add	r4, sp, #40	; 0x28
 80156ee:	e884 0006 	stmia.w	r4, {r1, r2}
 80156f2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80156f6:	4b8d      	ldr	r3, [pc, #564]	; (801592c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 80156f8:	4683      	mov	fp, r0
 80156fa:	f9b3 1000 	ldrsh.w	r1, [r3]
 80156fe:	4620      	mov	r0, r4
 8015700:	f7ff fda1 	bl	8015246 <_ZN8touchgfx4Rect10restrictToEss>
 8015704:	4620      	mov	r0, r4
 8015706:	f7fa fd8c 	bl	8010222 <_ZNK8touchgfx4Rect7isEmptyEv>
 801570a:	2800      	cmp	r0, #0
 801570c:	d16a      	bne.n	80157e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801570e:	9403      	str	r4, [sp, #12]
 8015710:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8015714:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8015718:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 801571c:	35a4      	adds	r5, #164	; 0xa4
 801571e:	9301      	str	r3, [sp, #4]
 8015720:	b15c      	cbz	r4, 801573a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8015722:	4629      	mov	r1, r5
 8015724:	9803      	ldr	r0, [sp, #12]
 8015726:	f7ff fddf 	bl	80152e8 <_ZNK8touchgfx4Rect8includesERKS0_>
 801572a:	3c01      	subs	r4, #1
 801572c:	b118      	cbz	r0, 8015736 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 801572e:	b2a1      	uxth	r1, r4
 8015730:	9801      	ldr	r0, [sp, #4]
 8015732:	f7ff ffc3 	bl	80156bc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015736:	3d08      	subs	r5, #8
 8015738:	e7f2      	b.n	8015720 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 801573a:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 801573e:	f8cd a010 	str.w	sl, [sp, #16]
 8015742:	f10a 33ff 	add.w	r3, sl, #4294967295
 8015746:	9302      	str	r3, [sp, #8]
 8015748:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 801574c:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8015750:	9306      	str	r3, [sp, #24]
 8015752:	445c      	add	r4, fp
 8015754:	2500      	movs	r5, #0
 8015756:	4626      	mov	r6, r4
 8015758:	f8cd a014 	str.w	sl, [sp, #20]
 801575c:	462f      	mov	r7, r5
 801575e:	9b05      	ldr	r3, [sp, #20]
 8015760:	2b00      	cmp	r3, #0
 8015762:	d073      	beq.n	801584c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8015764:	9903      	ldr	r1, [sp, #12]
 8015766:	4630      	mov	r0, r6
 8015768:	f7ff fd4b 	bl	8015202 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801576c:	b350      	cbz	r0, 80157c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801576e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8015772:	f9b6 c000 	ldrsh.w	ip, [r6]
 8015776:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 801577a:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 801577e:	45e6      	cmp	lr, ip
 8015780:	db33      	blt.n	80157ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8015782:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8015786:	88b3      	ldrh	r3, [r6, #4]
 8015788:	4472      	add	r2, lr
 801578a:	4463      	add	r3, ip
 801578c:	b212      	sxth	r2, r2
 801578e:	b21b      	sxth	r3, r3
 8015790:	429a      	cmp	r2, r3
 8015792:	dc2a      	bgt.n	80157ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8015794:	88f3      	ldrh	r3, [r6, #6]
 8015796:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801579a:	fa1f f289 	uxth.w	r2, r9
 801579e:	4413      	add	r3, r2
 80157a0:	b29b      	uxth	r3, r3
 80157a2:	45c8      	cmp	r8, r9
 80157a4:	fa1f fc88 	uxth.w	ip, r8
 80157a8:	fa0f fe83 	sxth.w	lr, r3
 80157ac:	db0f      	blt.n	80157ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 80157ae:	eba3 030c 	sub.w	r3, r3, ip
 80157b2:	1ac9      	subs	r1, r1, r3
 80157b4:	b209      	sxth	r1, r1
 80157b6:	2900      	cmp	r1, #0
 80157b8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80157bc:	dd12      	ble.n	80157e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80157be:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 80157c2:	4605      	mov	r5, r0
 80157c4:	9b05      	ldr	r3, [sp, #20]
 80157c6:	3b01      	subs	r3, #1
 80157c8:	9305      	str	r3, [sp, #20]
 80157ca:	3e08      	subs	r6, #8
 80157cc:	e7c7      	b.n	801575e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 80157ce:	4461      	add	r1, ip
 80157d0:	b209      	sxth	r1, r1
 80157d2:	4571      	cmp	r1, lr
 80157d4:	dc38      	bgt.n	8015848 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80157d6:	eba2 020c 	sub.w	r2, r2, ip
 80157da:	b212      	sxth	r2, r2
 80157dc:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 80157e0:	2a00      	cmp	r2, #0
 80157e2:	dcee      	bgt.n	80157c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80157e4:	b00f      	add	sp, #60	; 0x3c
 80157e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80157ea:	45c8      	cmp	r8, r9
 80157ec:	db2c      	blt.n	8015848 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80157ee:	88f3      	ldrh	r3, [r6, #6]
 80157f0:	4499      	add	r9, r3
 80157f2:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 80157f6:	4498      	add	r8, r3
 80157f8:	fa0f f989 	sxth.w	r9, r9
 80157fc:	fa0f f888 	sxth.w	r8, r8
 8015800:	45c1      	cmp	r9, r8
 8015802:	db21      	blt.n	8015848 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8015804:	88b3      	ldrh	r3, [r6, #4]
 8015806:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801580a:	fa1f f28c 	uxth.w	r2, ip
 801580e:	4413      	add	r3, r2
 8015810:	b29b      	uxth	r3, r3
 8015812:	45e6      	cmp	lr, ip
 8015814:	fa1f f88e 	uxth.w	r8, lr
 8015818:	fa0f f983 	sxth.w	r9, r3
 801581c:	db0a      	blt.n	8015834 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 801581e:	eba3 0308 	sub.w	r3, r3, r8
 8015822:	1ac9      	subs	r1, r1, r3
 8015824:	b209      	sxth	r1, r1
 8015826:	2900      	cmp	r1, #0
 8015828:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 801582c:	ddda      	ble.n	80157e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801582e:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8015832:	e7c6      	b.n	80157c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8015834:	4441      	add	r1, r8
 8015836:	b209      	sxth	r1, r1
 8015838:	4549      	cmp	r1, r9
 801583a:	dc05      	bgt.n	8015848 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801583c:	eba2 0208 	sub.w	r2, r2, r8
 8015840:	b212      	sxth	r2, r2
 8015842:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8015846:	e7cb      	b.n	80157e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8015848:	4607      	mov	r7, r0
 801584a:	e7bb      	b.n	80157c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801584c:	2d00      	cmp	r5, #0
 801584e:	d181      	bne.n	8015754 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8015850:	2f00      	cmp	r7, #0
 8015852:	f000 81dd 	beq.w	8015c10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8015856:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 801585a:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 801585e:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8015862:	b2b3      	uxth	r3, r6
 8015864:	9305      	str	r3, [sp, #20]
 8015866:	9a05      	ldr	r2, [sp, #20]
 8015868:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 801586c:	4413      	add	r3, r2
 801586e:	b2ba      	uxth	r2, r7
 8015870:	4492      	add	sl, r2
 8015872:	b29b      	uxth	r3, r3
 8015874:	fa1f fa8a 	uxth.w	sl, sl
 8015878:	fa0f f883 	sxth.w	r8, r3
 801587c:	fa0f f98a 	sxth.w	r9, sl
 8015880:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8015884:	9b04      	ldr	r3, [sp, #16]
 8015886:	2b00      	cmp	r3, #0
 8015888:	d052      	beq.n	8015930 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 801588a:	9903      	ldr	r1, [sp, #12]
 801588c:	4620      	mov	r0, r4
 801588e:	f7ff fcb8 	bl	8015202 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015892:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8015896:	b1c0      	cbz	r0, 80158ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8015898:	f9b4 e000 	ldrsh.w	lr, [r4]
 801589c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80158a0:	4576      	cmp	r6, lr
 80158a2:	dc22      	bgt.n	80158ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 80158a4:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 80158a8:	44f4      	add	ip, lr
 80158aa:	fa0f fc8c 	sxth.w	ip, ip
 80158ae:	45e0      	cmp	r8, ip
 80158b0:	db1b      	blt.n	80158ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 80158b2:	428f      	cmp	r7, r1
 80158b4:	fa1f fc81 	uxth.w	ip, r1
 80158b8:	88e1      	ldrh	r1, [r4, #6]
 80158ba:	dc0d      	bgt.n	80158d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 80158bc:	ebaa 0c0c 	sub.w	ip, sl, ip
 80158c0:	eba1 010c 	sub.w	r1, r1, ip
 80158c4:	f8a4 9002 	strh.w	r9, [r4, #2]
 80158c8:	80e1      	strh	r1, [r4, #6]
 80158ca:	4628      	mov	r0, r5
 80158cc:	9904      	ldr	r1, [sp, #16]
 80158ce:	3901      	subs	r1, #1
 80158d0:	9104      	str	r1, [sp, #16]
 80158d2:	3c08      	subs	r4, #8
 80158d4:	4605      	mov	r5, r0
 80158d6:	e7d3      	b.n	8015880 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 80158d8:	4461      	add	r1, ip
 80158da:	b209      	sxth	r1, r1
 80158dc:	4549      	cmp	r1, r9
 80158de:	dcf5      	bgt.n	80158cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80158e0:	eba2 0c0c 	sub.w	ip, r2, ip
 80158e4:	f8a4 c006 	strh.w	ip, [r4, #6]
 80158e8:	e7ef      	b.n	80158ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80158ea:	428f      	cmp	r7, r1
 80158ec:	dcee      	bgt.n	80158cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80158ee:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 80158f2:	4461      	add	r1, ip
 80158f4:	b209      	sxth	r1, r1
 80158f6:	4589      	cmp	r9, r1
 80158f8:	dbe8      	blt.n	80158cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80158fa:	4576      	cmp	r6, lr
 80158fc:	fa1f fc8e 	uxth.w	ip, lr
 8015900:	88a1      	ldrh	r1, [r4, #4]
 8015902:	dc07      	bgt.n	8015914 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8015904:	eba3 0c0c 	sub.w	ip, r3, ip
 8015908:	eba1 010c 	sub.w	r1, r1, ip
 801590c:	f8a4 8000 	strh.w	r8, [r4]
 8015910:	80a1      	strh	r1, [r4, #4]
 8015912:	e7da      	b.n	80158ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8015914:	4461      	add	r1, ip
 8015916:	b209      	sxth	r1, r1
 8015918:	4588      	cmp	r8, r1
 801591a:	dbd7      	blt.n	80158cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801591c:	9905      	ldr	r1, [sp, #20]
 801591e:	eba1 0c0c 	sub.w	ip, r1, ip
 8015922:	f8a4 c004 	strh.w	ip, [r4, #4]
 8015926:	e7d0      	b.n	80158ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8015928:	20012f1a 	.word	0x20012f1a
 801592c:	20012f18 	.word	0x20012f18
 8015930:	2d00      	cmp	r5, #0
 8015932:	f000 816d 	beq.w	8015c10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8015936:	9b06      	ldr	r3, [sp, #24]
 8015938:	445b      	add	r3, fp
 801593a:	461c      	mov	r4, r3
 801593c:	9b02      	ldr	r3, [sp, #8]
 801593e:	3301      	adds	r3, #1
 8015940:	f000 8166 	beq.w	8015c10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8015944:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8015948:	4629      	mov	r1, r5
 801594a:	9803      	ldr	r0, [sp, #12]
 801594c:	f7ff fccc 	bl	80152e8 <_ZNK8touchgfx4Rect8includesERKS0_>
 8015950:	b120      	cbz	r0, 801595c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8015952:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8015956:	9801      	ldr	r0, [sp, #4]
 8015958:	f7ff feb0 	bl	80156bc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801595c:	9903      	ldr	r1, [sp, #12]
 801595e:	4628      	mov	r0, r5
 8015960:	f7ff fc4f 	bl	8015202 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015964:	2800      	cmp	r0, #0
 8015966:	f000 809c 	beq.w	8015aa2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 801596a:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 801596e:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8015972:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8015976:	9309      	str	r3, [sp, #36]	; 0x24
 8015978:	fa1f f189 	uxth.w	r1, r9
 801597c:	eb01 0c03 	add.w	ip, r1, r3
 8015980:	fa1f fa8c 	uxth.w	sl, ip
 8015984:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8015988:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 801598c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8015990:	b283      	uxth	r3, r0
 8015992:	eb03 050c 	add.w	r5, r3, ip
 8015996:	b2ad      	uxth	r5, r5
 8015998:	9505      	str	r5, [sp, #20]
 801599a:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 801599e:	9504      	str	r5, [sp, #16]
 80159a0:	4548      	cmp	r0, r9
 80159a2:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 80159a6:	f340 8099 	ble.w	8015adc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 80159aa:	1a5b      	subs	r3, r3, r1
 80159ac:	b29b      	uxth	r3, r3
 80159ae:	4596      	cmp	lr, r2
 80159b0:	fa0f f08a 	sxth.w	r0, sl
 80159b4:	b21e      	sxth	r6, r3
 80159b6:	dd2e      	ble.n	8015a16 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 80159b8:	9f02      	ldr	r7, [sp, #8]
 80159ba:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 80159be:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 80159c2:	9f04      	ldr	r7, [sp, #16]
 80159c4:	1a3f      	subs	r7, r7, r0
 80159c6:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 80159ca:	fa1f fe8e 	uxth.w	lr, lr
 80159ce:	b292      	uxth	r2, r2
 80159d0:	ebae 0102 	sub.w	r1, lr, r2
 80159d4:	44a6      	add	lr, r4
 80159d6:	4402      	add	r2, r0
 80159d8:	b289      	uxth	r1, r1
 80159da:	fa0f fe8e 	sxth.w	lr, lr
 80159de:	b212      	sxth	r2, r2
 80159e0:	b20d      	sxth	r5, r1
 80159e2:	ebae 0202 	sub.w	r2, lr, r2
 80159e6:	436f      	muls	r7, r5
 80159e8:	4372      	muls	r2, r6
 80159ea:	4297      	cmp	r7, r2
 80159ec:	db09      	blt.n	8015a02 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 80159ee:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 80159f2:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 80159f6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80159fa:	449c      	add	ip, r3
 80159fc:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8015a00:	e686      	b.n	8015710 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015a02:	4421      	add	r1, r4
 8015a04:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8015a08:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 8015a0c:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8015a10:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8015a14:	e67c      	b.n	8015710 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015a16:	9f04      	ldr	r7, [sp, #16]
 8015a18:	42b8      	cmp	r0, r7
 8015a1a:	da27      	bge.n	8015a6c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8015a1c:	9902      	ldr	r1, [sp, #8]
 8015a1e:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8015a22:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8015a26:	eb05 010e 	add.w	r1, r5, lr
 8015a2a:	fa1f f881 	uxth.w	r8, r1
 8015a2e:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8015a32:	4411      	add	r1, r2
 8015a34:	eba1 0108 	sub.w	r1, r1, r8
 8015a38:	b289      	uxth	r1, r1
 8015a3a:	fa0f f988 	sxth.w	r9, r8
 8015a3e:	eba2 020e 	sub.w	r2, r2, lr
 8015a42:	fa0f f881 	sxth.w	r8, r1
 8015a46:	1a3f      	subs	r7, r7, r0
 8015a48:	4372      	muls	r2, r6
 8015a4a:	fb08 f707 	mul.w	r7, r8, r7
 8015a4e:	42ba      	cmp	r2, r7
 8015a50:	dc06      	bgt.n	8015a60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8015a52:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8015a56:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 8015a5a:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 8015a5e:	e7ca      	b.n	80159f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8015a60:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8015a64:	4429      	add	r1, r5
 8015a66:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8015a6a:	e651      	b.n	8015710 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015a6c:	9805      	ldr	r0, [sp, #20]
 8015a6e:	ebaa 0000 	sub.w	r0, sl, r0
 8015a72:	b280      	uxth	r0, r0
 8015a74:	2d06      	cmp	r5, #6
 8015a76:	fa0f fe80 	sxth.w	lr, r0
 8015a7a:	d817      	bhi.n	8015aac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 8015a7c:	9b04      	ldr	r3, [sp, #16]
 8015a7e:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8015a82:	1c6b      	adds	r3, r5, #1
 8015a84:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8015a88:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 8015a8c:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8015a90:	9b01      	ldr	r3, [sp, #4]
 8015a92:	9801      	ldr	r0, [sp, #4]
 8015a94:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8015a98:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8015a9c:	805a      	strh	r2, [r3, #2]
 8015a9e:	809e      	strh	r6, [r3, #4]
 8015aa0:	80d9      	strh	r1, [r3, #6]
 8015aa2:	9b02      	ldr	r3, [sp, #8]
 8015aa4:	3b01      	subs	r3, #1
 8015aa6:	9302      	str	r3, [sp, #8]
 8015aa8:	3c08      	subs	r4, #8
 8015aaa:	e747      	b.n	801593c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 8015aac:	9a02      	ldr	r2, [sp, #8]
 8015aae:	45b6      	cmp	lr, r6
 8015ab0:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8015ab4:	db0d      	blt.n	8015ad2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8015ab6:	449c      	add	ip, r3
 8015ab8:	fa1f fc8c 	uxth.w	ip, ip
 8015abc:	445a      	add	r2, fp
 8015abe:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8015ac2:	448c      	add	ip, r1
 8015ac4:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8015ac8:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 8015acc:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8015ad0:	e61e      	b.n	8015710 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015ad2:	445a      	add	r2, fp
 8015ad4:	4484      	add	ip, r0
 8015ad6:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 8015ada:	e78f      	b.n	80159fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8015adc:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8015ae0:	fa1f f18e 	uxth.w	r1, lr
 8015ae4:	eb01 0806 	add.w	r8, r1, r6
 8015ae8:	b293      	uxth	r3, r2
 8015aea:	fa1f f888 	uxth.w	r8, r8
 8015aee:	9306      	str	r3, [sp, #24]
 8015af0:	fa0f f388 	sxth.w	r3, r8
 8015af4:	9307      	str	r3, [sp, #28]
 8015af6:	9f06      	ldr	r7, [sp, #24]
 8015af8:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8015afc:	443b      	add	r3, r7
 8015afe:	b29b      	uxth	r3, r3
 8015b00:	4596      	cmp	lr, r2
 8015b02:	9308      	str	r3, [sp, #32]
 8015b04:	da24      	bge.n	8015b50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8015b06:	9905      	ldr	r1, [sp, #20]
 8015b08:	eba3 0308 	sub.w	r3, r3, r8
 8015b0c:	ebaa 0401 	sub.w	r4, sl, r1
 8015b10:	b2a4      	uxth	r4, r4
 8015b12:	b29b      	uxth	r3, r3
 8015b14:	b225      	sxth	r5, r4
 8015b16:	b219      	sxth	r1, r3
 8015b18:	eba2 020e 	sub.w	r2, r2, lr
 8015b1c:	eba9 0000 	sub.w	r0, r9, r0
 8015b20:	436a      	muls	r2, r5
 8015b22:	4348      	muls	r0, r1
 8015b24:	4282      	cmp	r2, r0
 8015b26:	9a02      	ldr	r2, [sp, #8]
 8015b28:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8015b2c:	445a      	add	r2, fp
 8015b2e:	dc06      	bgt.n	8015b3e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8015b30:	9b07      	ldr	r3, [sp, #28]
 8015b32:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8015b36:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 8015b3a:	44a4      	add	ip, r4
 8015b3c:	e75e      	b.n	80159fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8015b3e:	9904      	ldr	r1, [sp, #16]
 8015b40:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8015b44:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8015b48:	4433      	add	r3, r6
 8015b4a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8015b4e:	e5df      	b.n	8015710 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015b50:	9f06      	ldr	r7, [sp, #24]
 8015b52:	9b04      	ldr	r3, [sp, #16]
 8015b54:	1bc9      	subs	r1, r1, r7
 8015b56:	fa0f f78a 	sxth.w	r7, sl
 8015b5a:	b289      	uxth	r1, r1
 8015b5c:	429f      	cmp	r7, r3
 8015b5e:	fa0f fe81 	sxth.w	lr, r1
 8015b62:	dd23      	ble.n	8015bac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8015b64:	9a05      	ldr	r2, [sp, #20]
 8015b66:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8015b6a:	9d07      	ldr	r5, [sp, #28]
 8015b6c:	ebaa 0202 	sub.w	r2, sl, r2
 8015b70:	b292      	uxth	r2, r2
 8015b72:	eba5 0a03 	sub.w	sl, r5, r3
 8015b76:	b214      	sxth	r4, r2
 8015b78:	eba9 0000 	sub.w	r0, r9, r0
 8015b7c:	9b02      	ldr	r3, [sp, #8]
 8015b7e:	fb0e f000 	mul.w	r0, lr, r0
 8015b82:	fb04 fa0a 	mul.w	sl, r4, sl
 8015b86:	00db      	lsls	r3, r3, #3
 8015b88:	4550      	cmp	r0, sl
 8015b8a:	445b      	add	r3, fp
 8015b8c:	db03      	blt.n	8015b96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 8015b8e:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8015b92:	4494      	add	ip, r2
 8015b94:	e732      	b.n	80159fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8015b96:	9a04      	ldr	r2, [sp, #16]
 8015b98:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 8015b9c:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8015ba0:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8015ba4:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8015ba8:	4431      	add	r1, r6
 8015baa:	e75c      	b.n	8015a66 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 8015bac:	9b08      	ldr	r3, [sp, #32]
 8015bae:	eba3 0308 	sub.w	r3, r3, r8
 8015bb2:	b29b      	uxth	r3, r3
 8015bb4:	2d06      	cmp	r5, #6
 8015bb6:	b218      	sxth	r0, r3
 8015bb8:	d813      	bhi.n	8015be2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 8015bba:	9b07      	ldr	r3, [sp, #28]
 8015bbc:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8015bc0:	1c6b      	adds	r3, r5, #1
 8015bc2:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 8015bc6:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8015bca:	9b01      	ldr	r3, [sp, #4]
 8015bcc:	9901      	ldr	r1, [sp, #4]
 8015bce:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8015bd2:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8015bd6:	805a      	strh	r2, [r3, #2]
 8015bd8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8015bda:	809a      	strh	r2, [r3, #4]
 8015bdc:	f8a3 e006 	strh.w	lr, [r3, #6]
 8015be0:	e75f      	b.n	8015aa2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8015be2:	9c02      	ldr	r4, [sp, #8]
 8015be4:	4570      	cmp	r0, lr
 8015be6:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8015bea:	db0d      	blt.n	8015c08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 8015bec:	4431      	add	r1, r6
 8015bee:	9b06      	ldr	r3, [sp, #24]
 8015bf0:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8015bf4:	b289      	uxth	r1, r1
 8015bf6:	445c      	add	r4, fp
 8015bf8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8015bfc:	4419      	add	r1, r3
 8015bfe:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 8015c02:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 8015c06:	e583      	b.n	8015710 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015c08:	445c      	add	r4, fp
 8015c0a:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 8015c0e:	e79b      	b.n	8015b48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8015c10:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8015c14:	1e65      	subs	r5, r4, #1
 8015c16:	b2ad      	uxth	r5, r5
 8015c18:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 8015c1c:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8015c20:	42b5      	cmp	r5, r6
 8015c22:	d044      	beq.n	8015cae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8015c24:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8015c28:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 8015c2c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8015c30:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8015c34:	4282      	cmp	r2, r0
 8015c36:	d11f      	bne.n	8015c78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8015c38:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 8015c3c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8015c40:	459c      	cmp	ip, r3
 8015c42:	d119      	bne.n	8015c78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8015c44:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8015c48:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8015c4c:	19d8      	adds	r0, r3, r7
 8015c4e:	b200      	sxth	r0, r0
 8015c50:	4288      	cmp	r0, r1
 8015c52:	d109      	bne.n	8015c68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8015c54:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8015c58:	4413      	add	r3, r2
 8015c5a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8015c5e:	4629      	mov	r1, r5
 8015c60:	9801      	ldr	r0, [sp, #4]
 8015c62:	f7ff fd2b 	bl	80156bc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015c66:	e003      	b.n	8015c70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015c68:	4411      	add	r1, r2
 8015c6a:	b209      	sxth	r1, r1
 8015c6c:	42b9      	cmp	r1, r7
 8015c6e:	d0f3      	beq.n	8015c58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8015c70:	3d01      	subs	r5, #1
 8015c72:	b2ad      	uxth	r5, r5
 8015c74:	3c08      	subs	r4, #8
 8015c76:	e7d3      	b.n	8015c20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8015c78:	42b9      	cmp	r1, r7
 8015c7a:	d1f9      	bne.n	8015c70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015c7c:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8015c80:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8015c84:	4299      	cmp	r1, r3
 8015c86:	d1f3      	bne.n	8015c70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015c88:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8015c8c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8015c90:	181f      	adds	r7, r3, r0
 8015c92:	b23f      	sxth	r7, r7
 8015c94:	42ba      	cmp	r2, r7
 8015c96:	d105      	bne.n	8015ca4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8015c98:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 8015c9c:	440b      	add	r3, r1
 8015c9e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8015ca2:	e7dc      	b.n	8015c5e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8015ca4:	440a      	add	r2, r1
 8015ca6:	b212      	sxth	r2, r2
 8015ca8:	4290      	cmp	r0, r2
 8015caa:	d1e1      	bne.n	8015c70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015cac:	e7f6      	b.n	8015c9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 8015cae:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8015cb2:	2e07      	cmp	r6, #7
 8015cb4:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8015cb8:	d812      	bhi.n	8015ce0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 8015cba:	1c75      	adds	r5, r6, #1
 8015cbc:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8015cc0:	9d01      	ldr	r5, [sp, #4]
 8015cc2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8015cc6:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8015cca:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8015cce:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8015cd2:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8015cd6:	442c      	add	r4, r5
 8015cd8:	8061      	strh	r1, [r4, #2]
 8015cda:	80a2      	strh	r2, [r4, #4]
 8015cdc:	80e3      	strh	r3, [r4, #6]
 8015cde:	e581      	b.n	80157e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8015ce0:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8015ce4:	3e01      	subs	r6, #1
 8015ce6:	445c      	add	r4, fp
 8015ce8:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8015cec:	f04f 37ff 	mov.w	r7, #4294967295
 8015cf0:	2500      	movs	r5, #0
 8015cf2:	9305      	str	r3, [sp, #20]
 8015cf4:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8015cf8:	9302      	str	r3, [sp, #8]
 8015cfa:	1e72      	subs	r2, r6, #1
 8015cfc:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8015d00:	9304      	str	r3, [sp, #16]
 8015d02:	4691      	mov	r9, r2
 8015d04:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 8015d08:	f1b9 3fff 	cmp.w	r9, #4294967295
 8015d0c:	bf14      	ite	ne
 8015d0e:	9905      	ldrne	r1, [sp, #20]
 8015d10:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8015d14:	6818      	ldr	r0, [r3, #0]
 8015d16:	9207      	str	r2, [sp, #28]
 8015d18:	bf18      	it	ne
 8015d1a:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8015d1e:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8015d22:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8015d26:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8015d2a:	9306      	str	r3, [sp, #24]
 8015d2c:	fb18 f801 	smulbb	r8, r8, r1
 8015d30:	6859      	ldr	r1, [r3, #4]
 8015d32:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8015d36:	4671      	mov	r1, lr
 8015d38:	a80c      	add	r0, sp, #48	; 0x30
 8015d3a:	f7ff fafb 	bl	8015334 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8015d3e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8015d42:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8015d46:	9b04      	ldr	r3, [sp, #16]
 8015d48:	9a02      	ldr	r2, [sp, #8]
 8015d4a:	fb10 f001 	smulbb	r0, r0, r1
 8015d4e:	fb02 8803 	mla	r8, r2, r3, r8
 8015d52:	eba0 0108 	sub.w	r1, r0, r8
 8015d56:	f04f 0c08 	mov.w	ip, #8
 8015d5a:	fb90 f0fc 	sdiv	r0, r0, ip
 8015d5e:	4288      	cmp	r0, r1
 8015d60:	dc20      	bgt.n	8015da4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8015d62:	4551      	cmp	r1, sl
 8015d64:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8015d68:	da03      	bge.n	8015d72 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 8015d6a:	b1d9      	cbz	r1, 8015da4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8015d6c:	468a      	mov	sl, r1
 8015d6e:	464f      	mov	r7, r9
 8015d70:	4635      	mov	r5, r6
 8015d72:	f109 39ff 	add.w	r9, r9, #4294967295
 8015d76:	f119 0f02 	cmn.w	r9, #2
 8015d7a:	d1c5      	bne.n	8015d08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 8015d7c:	4616      	mov	r6, r2
 8015d7e:	3201      	adds	r2, #1
 8015d80:	f1a4 0408 	sub.w	r4, r4, #8
 8015d84:	d1b6      	bne.n	8015cf4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8015d86:	9b01      	ldr	r3, [sp, #4]
 8015d88:	b2ac      	uxth	r4, r5
 8015d8a:	00ed      	lsls	r5, r5, #3
 8015d8c:	1958      	adds	r0, r3, r5
 8015d8e:	1c7b      	adds	r3, r7, #1
 8015d90:	d10b      	bne.n	8015daa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8015d92:	4601      	mov	r1, r0
 8015d94:	9803      	ldr	r0, [sp, #12]
 8015d96:	f7ff facd 	bl	8015334 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8015d9a:	4621      	mov	r1, r4
 8015d9c:	9801      	ldr	r0, [sp, #4]
 8015d9e:	f7ff fc8d 	bl	80156bc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015da2:	e4b5      	b.n	8015710 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015da4:	464f      	mov	r7, r9
 8015da6:	4635      	mov	r5, r6
 8015da8:	e7ed      	b.n	8015d86 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 8015daa:	9b01      	ldr	r3, [sp, #4]
 8015dac:	00ff      	lsls	r7, r7, #3
 8015dae:	19d9      	adds	r1, r3, r7
 8015db0:	f7ff fac0 	bl	8015334 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8015db4:	9b03      	ldr	r3, [sp, #12]
 8015db6:	cb03      	ldmia	r3!, {r0, r1}
 8015db8:	445f      	add	r7, fp
 8015dba:	445d      	add	r5, fp
 8015dbc:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8015dc0:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8015dc4:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8015dc8:	9b03      	ldr	r3, [sp, #12]
 8015dca:	6869      	ldr	r1, [r5, #4]
 8015dcc:	c303      	stmia	r3!, {r0, r1}
 8015dce:	e7e4      	b.n	8015d9a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08015dd0 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8015dd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015dd4:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8015dd8:	b09b      	sub	sp, #108	; 0x6c
 8015dda:	4604      	mov	r4, r0
 8015ddc:	4630      	mov	r0, r6
 8015dde:	f7fa fa20 	bl	8010222 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015de2:	4605      	mov	r5, r0
 8015de4:	b948      	cbnz	r0, 8015dfa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8015de6:	6823      	ldr	r3, [r4, #0]
 8015de8:	e896 0006 	ldmia.w	r6, {r1, r2}
 8015dec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015dee:	4620      	mov	r0, r4
 8015df0:	4798      	blx	r3
 8015df2:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8015df6:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 8015dfa:	4bc6      	ldr	r3, [pc, #792]	; (8016114 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8015dfc:	681b      	ldr	r3, [r3, #0]
 8015dfe:	2b00      	cmp	r3, #0
 8015e00:	d03f      	beq.n	8015e82 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8015e02:	4dc5      	ldr	r5, [pc, #788]	; (8016118 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8015e04:	4628      	mov	r0, r5
 8015e06:	f7fa fa0c 	bl	8010222 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015e0a:	4606      	mov	r6, r0
 8015e0c:	2800      	cmp	r0, #0
 8015e0e:	d138      	bne.n	8015e82 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8015e10:	4628      	mov	r0, r5
 8015e12:	f7ff f907 	bl	8015024 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8015e16:	6823      	ldr	r3, [r4, #0]
 8015e18:	6829      	ldr	r1, [r5, #0]
 8015e1a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015e1c:	686a      	ldr	r2, [r5, #4]
 8015e1e:	4620      	mov	r0, r4
 8015e20:	4798      	blx	r3
 8015e22:	802e      	strh	r6, [r5, #0]
 8015e24:	806e      	strh	r6, [r5, #2]
 8015e26:	80ae      	strh	r6, [r5, #4]
 8015e28:	80ee      	strh	r6, [r5, #6]
 8015e2a:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 8015e2e:	4dbb      	ldr	r5, [pc, #748]	; (801611c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8015e30:	4640      	mov	r0, r8
 8015e32:	f7ff fbeb 	bl	801560c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8015e36:	882e      	ldrh	r6, [r5, #0]
 8015e38:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8015e3c:	4633      	mov	r3, r6
 8015e3e:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8015e42:	42bb      	cmp	r3, r7
 8015e44:	d224      	bcs.n	8015e90 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8015e46:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 8015e4a:	2907      	cmp	r1, #7
 8015e4c:	d816      	bhi.n	8015e7c <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 8015e4e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8015e52:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8015e56:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 8015e5a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8015e5e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8015e62:	1c4a      	adds	r2, r1, #1
 8015e64:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8015e68:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 8015e6c:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8015e70:	f8a2 a002 	strh.w	sl, [r2, #2]
 8015e74:	f8a2 e004 	strh.w	lr, [r2, #4]
 8015e78:	f8a2 c006 	strh.w	ip, [r2, #6]
 8015e7c:	3301      	adds	r3, #1
 8015e7e:	b29b      	uxth	r3, r3
 8015e80:	e7df      	b.n	8015e42 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8015e82:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8015e86:	2b00      	cmp	r3, #0
 8015e88:	d1cf      	bne.n	8015e2a <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 8015e8a:	b01b      	add	sp, #108	; 0x6c
 8015e8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015e90:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8015e94:	42b3      	cmp	r3, r6
 8015e96:	d90c      	bls.n	8015eb2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8015e98:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8015e9c:	6822      	ldr	r2, [r4, #0]
 8015e9e:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8015ea2:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8015ea4:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8015ea8:	4620      	mov	r0, r4
 8015eaa:	3601      	adds	r6, #1
 8015eac:	47b8      	blx	r7
 8015eae:	b2b6      	uxth	r6, r6
 8015eb0:	e7ee      	b.n	8015e90 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8015eb2:	4a9b      	ldr	r2, [pc, #620]	; (8016120 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8015eb4:	6813      	ldr	r3, [r2, #0]
 8015eb6:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8015eba:	2b01      	cmp	r3, #1
 8015ebc:	4691      	mov	r9, r2
 8015ebe:	f040 80e2 	bne.w	8016086 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 8015ec2:	8829      	ldrh	r1, [r5, #0]
 8015ec4:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8015ec8:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 8015ecc:	33ae      	adds	r3, #174	; 0xae
 8015ece:	2600      	movs	r6, #0
 8015ed0:	428f      	cmp	r7, r1
 8015ed2:	f103 0308 	add.w	r3, r3, #8
 8015ed6:	dd0a      	ble.n	8015eee <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8015ed8:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 8015edc:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8015ee0:	4402      	add	r2, r0
 8015ee2:	b212      	sxth	r2, r2
 8015ee4:	4296      	cmp	r6, r2
 8015ee6:	bfb8      	it	lt
 8015ee8:	4616      	movlt	r6, r2
 8015eea:	3101      	adds	r1, #1
 8015eec:	e7f0      	b.n	8015ed0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 8015eee:	4b8d      	ldr	r3, [pc, #564]	; (8016124 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8015ef0:	f8df 922c 	ldr.w	r9, [pc, #556]	; 8016120 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 8015ef4:	881b      	ldrh	r3, [r3, #0]
 8015ef6:	2b0f      	cmp	r3, #15
 8015ef8:	bf88      	it	hi
 8015efa:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 8015efe:	f04f 0300 	mov.w	r3, #0
 8015f02:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8015f06:	bf98      	it	ls
 8015f08:	f04f 0b01 	movls.w	fp, #1
 8015f0c:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8015f10:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8015f14:	4b82      	ldr	r3, [pc, #520]	; (8016120 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8015f16:	4438      	add	r0, r7
 8015f18:	b207      	sxth	r7, r0
 8015f1a:	6818      	ldr	r0, [r3, #0]
 8015f1c:	42b7      	cmp	r7, r6
 8015f1e:	6803      	ldr	r3, [r0, #0]
 8015f20:	f280 8083 	bge.w	801602a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8015f24:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8015f28:	4798      	blx	r3
 8015f2a:	eb07 030b 	add.w	r3, r7, fp
 8015f2e:	4298      	cmp	r0, r3
 8015f30:	da07      	bge.n	8015f42 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8015f32:	42b0      	cmp	r0, r6
 8015f34:	da05      	bge.n	8015f42 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8015f36:	4287      	cmp	r7, r0
 8015f38:	dd6c      	ble.n	8016014 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8015f3a:	2f00      	cmp	r7, #0
 8015f3c:	dd6a      	ble.n	8016014 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8015f3e:	4630      	mov	r0, r6
 8015f40:	e004      	b.n	8015f4c <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8015f42:	4287      	cmp	r7, r0
 8015f44:	dcfb      	bgt.n	8015f3e <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8015f46:	42b0      	cmp	r0, r6
 8015f48:	bfa8      	it	ge
 8015f4a:	4630      	movge	r0, r6
 8015f4c:	4b76      	ldr	r3, [pc, #472]	; (8016128 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8015f4e:	f8ad 7016 	strh.w	r7, [sp, #22]
 8015f52:	1bc0      	subs	r0, r0, r7
 8015f54:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015f58:	882f      	ldrh	r7, [r5, #0]
 8015f5a:	f8ad 3018 	strh.w	r3, [sp, #24]
 8015f5e:	2200      	movs	r2, #0
 8015f60:	f8ad 2014 	strh.w	r2, [sp, #20]
 8015f64:	f8ad 001a 	strh.w	r0, [sp, #26]
 8015f68:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8015f6c:	42bb      	cmp	r3, r7
 8015f6e:	d9cd      	bls.n	8015f0c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8015f70:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8015f74:	ab07      	add	r3, sp, #28
 8015f76:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8015f7a:	6851      	ldr	r1, [r2, #4]
 8015f7c:	c303      	stmia	r3!, {r0, r1}
 8015f7e:	a905      	add	r1, sp, #20
 8015f80:	a807      	add	r0, sp, #28
 8015f82:	f7ff f93e 	bl	8015202 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015f86:	2800      	cmp	r0, #0
 8015f88:	d04c      	beq.n	8016024 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 8015f8a:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8015f8e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8015f92:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8015f96:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8015f9a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8015f9e:	9302      	str	r3, [sp, #8]
 8015fa0:	4686      	mov	lr, r0
 8015fa2:	4290      	cmp	r0, r2
 8015fa4:	4450      	add	r0, sl
 8015fa6:	f8bd a018 	ldrh.w	sl, [sp, #24]
 8015faa:	bfb8      	it	lt
 8015fac:	4696      	movlt	lr, r2
 8015fae:	4452      	add	r2, sl
 8015fb0:	4299      	cmp	r1, r3
 8015fb2:	b280      	uxth	r0, r0
 8015fb4:	b292      	uxth	r2, r2
 8015fb6:	468c      	mov	ip, r1
 8015fb8:	fa0f fa82 	sxth.w	sl, r2
 8015fbc:	bfb8      	it	lt
 8015fbe:	469c      	movlt	ip, r3
 8015fc0:	b203      	sxth	r3, r0
 8015fc2:	4553      	cmp	r3, sl
 8015fc4:	bfb8      	it	lt
 8015fc6:	4602      	movlt	r2, r0
 8015fc8:	eba2 020e 	sub.w	r2, r2, lr
 8015fcc:	f8ad 2020 	strh.w	r2, [sp, #32]
 8015fd0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8015fd4:	9b02      	ldr	r3, [sp, #8]
 8015fd6:	f8ad e01c 	strh.w	lr, [sp, #28]
 8015fda:	4411      	add	r1, r2
 8015fdc:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8015fe0:	f8ad c01e 	strh.w	ip, [sp, #30]
 8015fe4:	4413      	add	r3, r2
 8015fe6:	b289      	uxth	r1, r1
 8015fe8:	b29b      	uxth	r3, r3
 8015fea:	b208      	sxth	r0, r1
 8015fec:	b21a      	sxth	r2, r3
 8015fee:	4290      	cmp	r0, r2
 8015ff0:	bfb8      	it	lt
 8015ff2:	460b      	movlt	r3, r1
 8015ff4:	eba3 030c 	sub.w	r3, r3, ip
 8015ff8:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8015ffc:	a807      	add	r0, sp, #28
 8015ffe:	f7fa f910 	bl	8010222 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016002:	b920      	cbnz	r0, 801600e <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8016004:	6823      	ldr	r3, [r4, #0]
 8016006:	a907      	add	r1, sp, #28
 8016008:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801600a:	4620      	mov	r0, r4
 801600c:	4798      	blx	r3
 801600e:	3701      	adds	r7, #1
 8016010:	b2bf      	uxth	r7, r7
 8016012:	e7a9      	b.n	8015f68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8016014:	f8d9 0000 	ldr.w	r0, [r9]
 8016018:	6803      	ldr	r3, [r0, #0]
 801601a:	2101      	movs	r1, #1
 801601c:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8016020:	4798      	blx	r3
 8016022:	e773      	b.n	8015f0c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8016024:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8016028:	e7e8      	b.n	8015ffc <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 801602a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801602c:	4798      	blx	r3
 801602e:	4b3f      	ldr	r3, [pc, #252]	; (801612c <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8016030:	781b      	ldrb	r3, [r3, #0]
 8016032:	2b00      	cmp	r3, #0
 8016034:	f43f af29 	beq.w	8015e8a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8016038:	2300      	movs	r3, #0
 801603a:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 801603e:	882b      	ldrh	r3, [r5, #0]
 8016040:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8016044:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8016048:	42ab      	cmp	r3, r5
 801604a:	f4bf af1e 	bcs.w	8015e8a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 801604e:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8016052:	2907      	cmp	r1, #7
 8016054:	d814      	bhi.n	8016080 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8016056:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 801605a:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 801605e:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8016062:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8016066:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 801606a:	1c4a      	adds	r2, r1, #1
 801606c:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8016070:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8016074:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8016078:	f8a2 c002 	strh.w	ip, [r2, #2]
 801607c:	8097      	strh	r7, [r2, #4]
 801607e:	80d6      	strh	r6, [r2, #6]
 8016080:	3301      	adds	r3, #1
 8016082:	b29b      	uxth	r3, r3
 8016084:	e7e0      	b.n	8016048 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8016086:	2b02      	cmp	r3, #2
 8016088:	f040 8133 	bne.w	80162f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 801608c:	4b28      	ldr	r3, [pc, #160]	; (8016130 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 801608e:	781b      	ldrb	r3, [r3, #0]
 8016090:	2b01      	cmp	r3, #1
 8016092:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 8016096:	f000 8098 	beq.w	80161ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801609a:	882a      	ldrh	r2, [r5, #0]
 801609c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 80160a0:	3201      	adds	r2, #1
 80160a2:	b292      	uxth	r2, r2
 80160a4:	2900      	cmp	r1, #0
 80160a6:	d0c2      	beq.n	801602e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80160a8:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 80160ac:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 80160b0:	441e      	add	r6, r3
 80160b2:	b236      	sxth	r6, r6
 80160b4:	4694      	mov	ip, r2
 80160b6:	f04f 0900 	mov.w	r9, #0
 80160ba:	fa1f f38c 	uxth.w	r3, ip
 80160be:	4299      	cmp	r1, r3
 80160c0:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 80160c4:	f240 80bf 	bls.w	8016246 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 80160c8:	4427      	add	r7, r4
 80160ca:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 80160ce:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 80160d2:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 80160d6:	4283      	cmp	r3, r0
 80160d8:	f340 80a1 	ble.w	801621e <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 80160dc:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 80160e0:	4406      	add	r6, r0
 80160e2:	b236      	sxth	r6, r6
 80160e4:	429e      	cmp	r6, r3
 80160e6:	bfa8      	it	ge
 80160e8:	461e      	movge	r6, r3
 80160ea:	46e1      	mov	r9, ip
 80160ec:	f10c 0c01 	add.w	ip, ip, #1
 80160f0:	e7e3      	b.n	80160ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 80160f2:	d10a      	bne.n	801610a <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 80160f4:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 80160f8:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 80160fc:	4562      	cmp	r2, ip
 80160fe:	bfb8      	it	lt
 8016100:	4662      	movlt	r2, ip
 8016102:	4288      	cmp	r0, r1
 8016104:	bfb8      	it	lt
 8016106:	461f      	movlt	r7, r3
 8016108:	e087      	b.n	801621a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 801610a:	428a      	cmp	r2, r1
 801610c:	bfb8      	it	lt
 801610e:	460a      	movlt	r2, r1
 8016110:	e083      	b.n	801621a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8016112:	bf00      	nop
 8016114:	20012f64 	.word	0x20012f64
 8016118:	20012f70 	.word	0x20012f70
 801611c:	20000088 	.word	0x20000088
 8016120:	20012f24 	.word	0x20012f24
 8016124:	20012f1a 	.word	0x20012f1a
 8016128:	20012f18 	.word	0x20012f18
 801612c:	20012f22 	.word	0x20012f22
 8016130:	20012f1c 	.word	0x20012f1c
 8016134:	19a1      	adds	r1, r4, r6
 8016136:	ab07      	add	r3, sp, #28
 8016138:	f851 0fac 	ldr.w	r0, [r1, #172]!
 801613c:	6849      	ldr	r1, [r1, #4]
 801613e:	c303      	stmia	r3!, {r0, r1}
 8016140:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8016144:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8016148:	2b13      	cmp	r3, #19
 801614a:	bfd8      	it	le
 801614c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8016150:	f8ad 201c 	strh.w	r2, [sp, #28]
 8016154:	440b      	add	r3, r1
 8016156:	1a9b      	subs	r3, r3, r2
 8016158:	a807      	add	r0, sp, #28
 801615a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801615e:	f7fe ff7b 	bl	8015058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016162:	a807      	add	r0, sp, #28
 8016164:	f7fa f85d 	bl	8010222 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016168:	bb78      	cbnz	r0, 80161ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801616a:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 801616e:	f8d9 0000 	ldr.w	r0, [r9]
 8016172:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8016176:	f8d0 e000 	ldr.w	lr, [r0]
 801617a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 801617e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8016182:	f1bc 0f14 	cmp.w	ip, #20
 8016186:	bfa8      	it	ge
 8016188:	f04f 0c14 	movge.w	ip, #20
 801618c:	fa1f fc8c 	uxth.w	ip, ip
 8016190:	f8cd c000 	str.w	ip, [sp]
 8016194:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8016198:	47d8      	blx	fp
 801619a:	4683      	mov	fp, r0
 801619c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80161a0:	a807      	add	r0, sp, #28
 80161a2:	f7fe ff3f 	bl	8015024 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80161a6:	6823      	ldr	r3, [r4, #0]
 80161a8:	4426      	add	r6, r4
 80161aa:	4620      	mov	r0, r4
 80161ac:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80161ae:	a907      	add	r1, sp, #28
 80161b0:	4798      	blx	r3
 80161b2:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 80161b6:	eba0 000b 	sub.w	r0, r0, fp
 80161ba:	b200      	sxth	r0, r0
 80161bc:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 80161c0:	b918      	cbnz	r0, 80161ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80161c2:	b2b9      	uxth	r1, r7
 80161c4:	4650      	mov	r0, sl
 80161c6:	f7ff fa79 	bl	80156bc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80161ca:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 80161ce:	f1bb 0f00 	cmp.w	fp, #0
 80161d2:	f43f af2c 	beq.w	801602e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80161d6:	882b      	ldrh	r3, [r5, #0]
 80161d8:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 80161dc:	3301      	adds	r3, #1
 80161de:	b29b      	uxth	r3, r3
 80161e0:	2700      	movs	r7, #0
 80161e2:	b299      	uxth	r1, r3
 80161e4:	458b      	cmp	fp, r1
 80161e6:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 80161ea:	d9a3      	bls.n	8016134 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 80161ec:	4426      	add	r6, r4
 80161ee:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 80161f2:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 80161f6:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 80161fa:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 80161fe:	4408      	add	r0, r1
 8016200:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 8016204:	4461      	add	r1, ip
 8016206:	b200      	sxth	r0, r0
 8016208:	b209      	sxth	r1, r1
 801620a:	4288      	cmp	r0, r1
 801620c:	f6bf af71 	bge.w	80160f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8016210:	4584      	cmp	ip, r0
 8016212:	4662      	mov	r2, ip
 8016214:	461f      	mov	r7, r3
 8016216:	bfb8      	it	lt
 8016218:	4602      	movlt	r2, r0
 801621a:	3301      	adds	r3, #1
 801621c:	e7e1      	b.n	80161e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 801621e:	d10e      	bne.n	801623e <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8016220:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8016224:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8016228:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 801622c:	4473      	add	r3, lr
 801622e:	b21b      	sxth	r3, r3
 8016230:	429e      	cmp	r6, r3
 8016232:	bfa8      	it	ge
 8016234:	461e      	movge	r6, r3
 8016236:	4287      	cmp	r7, r0
 8016238:	bfb8      	it	lt
 801623a:	46e1      	movlt	r9, ip
 801623c:	e756      	b.n	80160ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 801623e:	4286      	cmp	r6, r0
 8016240:	bfa8      	it	ge
 8016242:	4606      	movge	r6, r0
 8016244:	e752      	b.n	80160ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8016246:	eb0a 0007 	add.w	r0, sl, r7
 801624a:	4427      	add	r7, r4
 801624c:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8016250:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8016254:	f1bb 0f13 	cmp.w	fp, #19
 8016258:	bfde      	ittt	le
 801625a:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 801625e:	445e      	addle	r6, fp
 8016260:	b236      	sxthle	r6, r6
 8016262:	f7f9 ffde 	bl	8010222 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016266:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 801626a:	2800      	cmp	r0, #0
 801626c:	f47f af1a 	bne.w	80160a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8016270:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8016274:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8016278:	482a      	ldr	r0, [pc, #168]	; (8016324 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 801627a:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 801627e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8016282:	6800      	ldr	r0, [r0, #0]
 8016284:	f8ad 101c 	strh.w	r1, [sp, #28]
 8016288:	1ab6      	subs	r6, r6, r2
 801628a:	2e14      	cmp	r6, #20
 801628c:	f8ad 201e 	strh.w	r2, [sp, #30]
 8016290:	f8ad 3020 	strh.w	r3, [sp, #32]
 8016294:	bfa8      	it	ge
 8016296:	2614      	movge	r6, #20
 8016298:	f8d0 c000 	ldr.w	ip, [r0]
 801629c:	b2b6      	uxth	r6, r6
 801629e:	fa1f fb8b 	uxth.w	fp, fp
 80162a2:	455e      	cmp	r6, fp
 80162a4:	bf94      	ite	ls
 80162a6:	9600      	strls	r6, [sp, #0]
 80162a8:	f8cd b000 	strhi.w	fp, [sp]
 80162ac:	b292      	uxth	r2, r2
 80162ae:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 80162b2:	b29b      	uxth	r3, r3
 80162b4:	b289      	uxth	r1, r1
 80162b6:	47b0      	blx	r6
 80162b8:	6823      	ldr	r3, [r4, #0]
 80162ba:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80162be:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80162c0:	a907      	add	r1, sp, #28
 80162c2:	4620      	mov	r0, r4
 80162c4:	4798      	blx	r3
 80162c6:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 80162ca:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 80162ce:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 80162d2:	1a5b      	subs	r3, r3, r1
 80162d4:	440a      	add	r2, r1
 80162d6:	b21b      	sxth	r3, r3
 80162d8:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 80162dc:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 80162e0:	2b00      	cmp	r3, #0
 80162e2:	f47f aeda 	bne.w	801609a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 80162e6:	fa1f f189 	uxth.w	r1, r9
 80162ea:	4650      	mov	r0, sl
 80162ec:	f7ff f9e6 	bl	80156bc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80162f0:	e6d3      	b.n	801609a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 80162f2:	882e      	ldrh	r6, [r5, #0]
 80162f4:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80162f8:	42b3      	cmp	r3, r6
 80162fa:	f67f ae98 	bls.w	801602e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80162fe:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8016302:	ab07      	add	r3, sp, #28
 8016304:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8016308:	6851      	ldr	r1, [r2, #4]
 801630a:	c303      	stmia	r3!, {r0, r1}
 801630c:	a807      	add	r0, sp, #28
 801630e:	f7f9 ff88 	bl	8010222 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016312:	b920      	cbnz	r0, 801631e <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8016314:	6823      	ldr	r3, [r4, #0]
 8016316:	a907      	add	r1, sp, #28
 8016318:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801631a:	4620      	mov	r0, r4
 801631c:	4798      	blx	r3
 801631e:	3601      	adds	r6, #1
 8016320:	b2b6      	uxth	r6, r6
 8016322:	e7e7      	b.n	80162f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8016324:	20012f24 	.word	0x20012f24

08016328 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8016328:	4b03      	ldr	r3, [pc, #12]	; (8016338 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 801632a:	2200      	movs	r2, #0
 801632c:	801a      	strh	r2, [r3, #0]
 801632e:	805a      	strh	r2, [r3, #2]
 8016330:	809a      	strh	r2, [r3, #4]
 8016332:	80da      	strh	r2, [r3, #6]
 8016334:	4770      	bx	lr
 8016336:	bf00      	nop
 8016338:	20012f70 	.word	0x20012f70

0801633c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 801633c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016340:	4606      	mov	r6, r0
 8016342:	b09d      	sub	sp, #116	; 0x74
 8016344:	a803      	add	r0, sp, #12
 8016346:	4614      	mov	r4, r2
 8016348:	468a      	mov	sl, r1
 801634a:	461d      	mov	r5, r3
 801634c:	f000 feca 	bl	80170e4 <_ZN8touchgfx12TextProviderC1Ev>
 8016350:	6833      	ldr	r3, [r6, #0]
 8016352:	4630      	mov	r0, r6
 8016354:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016356:	4798      	blx	r3
 8016358:	6833      	ldr	r3, [r6, #0]
 801635a:	4607      	mov	r7, r0
 801635c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801635e:	4630      	mov	r0, r6
 8016360:	4798      	blx	r3
 8016362:	462a      	mov	r2, r5
 8016364:	9000      	str	r0, [sp, #0]
 8016366:	4621      	mov	r1, r4
 8016368:	463b      	mov	r3, r7
 801636a:	a803      	add	r0, sp, #12
 801636c:	f000 ff15 	bl	801719a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016370:	2500      	movs	r5, #0
 8016372:	462c      	mov	r4, r5
 8016374:	46a9      	mov	r9, r5
 8016376:	46a8      	mov	r8, r5
 8016378:	f242 0b0b 	movw	fp, #8203	; 0x200b
 801637c:	2300      	movs	r3, #0
 801637e:	9302      	str	r3, [sp, #8]
 8016380:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8016384:	429c      	cmp	r4, r3
 8016386:	d002      	beq.n	801638e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8016388:	455c      	cmp	r4, fp
 801638a:	bf18      	it	ne
 801638c:	4625      	movne	r5, r4
 801638e:	ab02      	add	r3, sp, #8
 8016390:	4632      	mov	r2, r6
 8016392:	4651      	mov	r1, sl
 8016394:	a803      	add	r0, sp, #12
 8016396:	f001 fa03 	bl	80177a0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801639a:	4604      	mov	r4, r0
 801639c:	b108      	cbz	r0, 80163a2 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 801639e:	280a      	cmp	r0, #10
 80163a0:	d10a      	bne.n	80163b8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 80163a2:	45c1      	cmp	r9, r8
 80163a4:	bf38      	it	cc
 80163a6:	46c1      	movcc	r9, r8
 80163a8:	f04f 0800 	mov.w	r8, #0
 80163ac:	2c00      	cmp	r4, #0
 80163ae:	d1e5      	bne.n	801637c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80163b0:	4648      	mov	r0, r9
 80163b2:	b01d      	add	sp, #116	; 0x74
 80163b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80163b8:	9a02      	ldr	r2, [sp, #8]
 80163ba:	2a00      	cmp	r2, #0
 80163bc:	d0de      	beq.n	801637c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80163be:	7b57      	ldrb	r7, [r2, #13]
 80163c0:	6833      	ldr	r3, [r6, #0]
 80163c2:	8894      	ldrh	r4, [r2, #4]
 80163c4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80163c6:	007f      	lsls	r7, r7, #1
 80163c8:	f407 7080 	and.w	r0, r7, #256	; 0x100
 80163cc:	7a97      	ldrb	r7, [r2, #10]
 80163ce:	4629      	mov	r1, r5
 80163d0:	4307      	orrs	r7, r0
 80163d2:	4630      	mov	r0, r6
 80163d4:	4798      	blx	r3
 80163d6:	4438      	add	r0, r7
 80163d8:	4480      	add	r8, r0
 80163da:	fa1f f888 	uxth.w	r8, r8
 80163de:	e7e5      	b.n	80163ac <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

080163e0 <_ZNK8touchgfx4Font12getCharWidthEt>:
 80163e0:	b508      	push	{r3, lr}
 80163e2:	6803      	ldr	r3, [r0, #0]
 80163e4:	68db      	ldr	r3, [r3, #12]
 80163e6:	4798      	blx	r3
 80163e8:	b128      	cbz	r0, 80163f6 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 80163ea:	7b43      	ldrb	r3, [r0, #13]
 80163ec:	7a80      	ldrb	r0, [r0, #10]
 80163ee:	005b      	lsls	r3, r3, #1
 80163f0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80163f4:	4318      	orrs	r0, r3
 80163f6:	bd08      	pop	{r3, pc}

080163f8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 80163f8:	b40e      	push	{r1, r2, r3}
 80163fa:	b5f0      	push	{r4, r5, r6, r7, lr}
 80163fc:	b09e      	sub	sp, #120	; 0x78
 80163fe:	ab23      	add	r3, sp, #140	; 0x8c
 8016400:	4605      	mov	r5, r0
 8016402:	f853 4b04 	ldr.w	r4, [r3], #4
 8016406:	9303      	str	r3, [sp, #12]
 8016408:	a805      	add	r0, sp, #20
 801640a:	f000 fe6b 	bl	80170e4 <_ZN8touchgfx12TextProviderC1Ev>
 801640e:	682b      	ldr	r3, [r5, #0]
 8016410:	4628      	mov	r0, r5
 8016412:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016414:	4798      	blx	r3
 8016416:	682b      	ldr	r3, [r5, #0]
 8016418:	4606      	mov	r6, r0
 801641a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801641c:	4628      	mov	r0, r5
 801641e:	4798      	blx	r3
 8016420:	4633      	mov	r3, r6
 8016422:	ae1e      	add	r6, sp, #120	; 0x78
 8016424:	4621      	mov	r1, r4
 8016426:	9000      	str	r0, [sp, #0]
 8016428:	9a03      	ldr	r2, [sp, #12]
 801642a:	2400      	movs	r4, #0
 801642c:	a805      	add	r0, sp, #20
 801642e:	f000 feb4 	bl	801719a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016432:	f846 4d68 	str.w	r4, [r6, #-104]!
 8016436:	462a      	mov	r2, r5
 8016438:	4633      	mov	r3, r6
 801643a:	4621      	mov	r1, r4
 801643c:	a805      	add	r0, sp, #20
 801643e:	f001 f9af 	bl	80177a0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016442:	b1f0      	cbz	r0, 8016482 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8016444:	280a      	cmp	r0, #10
 8016446:	d018      	beq.n	801647a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8016448:	9f04      	ldr	r7, [sp, #16]
 801644a:	b1b7      	cbz	r7, 801647a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 801644c:	7b78      	ldrb	r0, [r7, #13]
 801644e:	7a3b      	ldrb	r3, [r7, #8]
 8016450:	88ea      	ldrh	r2, [r5, #6]
 8016452:	00c1      	lsls	r1, r0, #3
 8016454:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8016458:	4319      	orrs	r1, r3
 801645a:	0643      	lsls	r3, r0, #25
 801645c:	bf44      	itt	mi
 801645e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8016462:	b219      	sxthmi	r1, r3
 8016464:	0100      	lsls	r0, r0, #4
 8016466:	79fb      	ldrb	r3, [r7, #7]
 8016468:	f400 7080 	and.w	r0, r0, #256	; 0x100
 801646c:	4303      	orrs	r3, r0
 801646e:	4413      	add	r3, r2
 8016470:	1a5b      	subs	r3, r3, r1
 8016472:	b21b      	sxth	r3, r3
 8016474:	429c      	cmp	r4, r3
 8016476:	bfb8      	it	lt
 8016478:	461c      	movlt	r4, r3
 801647a:	4633      	mov	r3, r6
 801647c:	462a      	mov	r2, r5
 801647e:	2100      	movs	r1, #0
 8016480:	e7dc      	b.n	801643c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8016482:	b2a0      	uxth	r0, r4
 8016484:	b01e      	add	sp, #120	; 0x78
 8016486:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801648a:	b003      	add	sp, #12
 801648c:	4770      	bx	lr

0801648e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 801648e:	7a43      	ldrb	r3, [r0, #9]
 8016490:	8880      	ldrh	r0, [r0, #4]
 8016492:	4418      	add	r0, r3
 8016494:	b280      	uxth	r0, r0
 8016496:	4770      	bx	lr

08016498 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8016498:	6803      	ldr	r3, [r0, #0]
 801649a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801649c:	4718      	bx	r3

0801649e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 801649e:	b40e      	push	{r1, r2, r3}
 80164a0:	b570      	push	{r4, r5, r6, lr}
 80164a2:	b09d      	sub	sp, #116	; 0x74
 80164a4:	ab21      	add	r3, sp, #132	; 0x84
 80164a6:	4604      	mov	r4, r0
 80164a8:	f853 5b04 	ldr.w	r5, [r3], #4
 80164ac:	9302      	str	r3, [sp, #8]
 80164ae:	a803      	add	r0, sp, #12
 80164b0:	f000 fe18 	bl	80170e4 <_ZN8touchgfx12TextProviderC1Ev>
 80164b4:	6823      	ldr	r3, [r4, #0]
 80164b6:	4620      	mov	r0, r4
 80164b8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80164ba:	4798      	blx	r3
 80164bc:	6823      	ldr	r3, [r4, #0]
 80164be:	4606      	mov	r6, r0
 80164c0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80164c2:	4620      	mov	r0, r4
 80164c4:	4798      	blx	r3
 80164c6:	4633      	mov	r3, r6
 80164c8:	9000      	str	r0, [sp, #0]
 80164ca:	9a02      	ldr	r2, [sp, #8]
 80164cc:	4629      	mov	r1, r5
 80164ce:	a803      	add	r0, sp, #12
 80164d0:	f000 fe63 	bl	801719a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80164d4:	a803      	add	r0, sp, #12
 80164d6:	f001 fa31 	bl	801793c <_ZN8touchgfx12TextProvider11getNextCharEv>
 80164da:	2401      	movs	r4, #1
 80164dc:	b2a3      	uxth	r3, r4
 80164de:	b140      	cbz	r0, 80164f2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 80164e0:	280a      	cmp	r0, #10
 80164e2:	bf08      	it	eq
 80164e4:	3301      	addeq	r3, #1
 80164e6:	a803      	add	r0, sp, #12
 80164e8:	bf08      	it	eq
 80164ea:	b21c      	sxtheq	r4, r3
 80164ec:	f001 fa26 	bl	801793c <_ZN8touchgfx12TextProvider11getNextCharEv>
 80164f0:	e7f4      	b.n	80164dc <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 80164f2:	4618      	mov	r0, r3
 80164f4:	b01d      	add	sp, #116	; 0x74
 80164f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80164fa:	b003      	add	sp, #12
 80164fc:	4770      	bx	lr

080164fe <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 80164fe:	b40e      	push	{r1, r2, r3}
 8016500:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016502:	b09e      	sub	sp, #120	; 0x78
 8016504:	ab23      	add	r3, sp, #140	; 0x8c
 8016506:	4604      	mov	r4, r0
 8016508:	f853 5b04 	ldr.w	r5, [r3], #4
 801650c:	9303      	str	r3, [sp, #12]
 801650e:	a805      	add	r0, sp, #20
 8016510:	f000 fde8 	bl	80170e4 <_ZN8touchgfx12TextProviderC1Ev>
 8016514:	6823      	ldr	r3, [r4, #0]
 8016516:	4620      	mov	r0, r4
 8016518:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801651a:	4798      	blx	r3
 801651c:	6823      	ldr	r3, [r4, #0]
 801651e:	4606      	mov	r6, r0
 8016520:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016522:	4620      	mov	r0, r4
 8016524:	4798      	blx	r3
 8016526:	4633      	mov	r3, r6
 8016528:	4629      	mov	r1, r5
 801652a:	9000      	str	r0, [sp, #0]
 801652c:	9a03      	ldr	r2, [sp, #12]
 801652e:	a805      	add	r0, sp, #20
 8016530:	ad1e      	add	r5, sp, #120	; 0x78
 8016532:	f000 fe32 	bl	801719a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016536:	2100      	movs	r1, #0
 8016538:	f845 1d68 	str.w	r1, [r5, #-104]!
 801653c:	4622      	mov	r2, r4
 801653e:	462b      	mov	r3, r5
 8016540:	a805      	add	r0, sp, #20
 8016542:	f001 f92d 	bl	80177a0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016546:	f647 76ff 	movw	r6, #32767	; 0x7fff
 801654a:	b1d8      	cbz	r0, 8016584 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 801654c:	280a      	cmp	r0, #10
 801654e:	d012      	beq.n	8016576 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8016550:	9804      	ldr	r0, [sp, #16]
 8016552:	b180      	cbz	r0, 8016576 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8016554:	7b47      	ldrb	r7, [r0, #13]
 8016556:	88e2      	ldrh	r2, [r4, #6]
 8016558:	00fb      	lsls	r3, r7, #3
 801655a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801655e:	7a03      	ldrb	r3, [r0, #8]
 8016560:	430b      	orrs	r3, r1
 8016562:	0679      	lsls	r1, r7, #25
 8016564:	bf44      	itt	mi
 8016566:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801656a:	b21b      	sxthmi	r3, r3
 801656c:	1ad3      	subs	r3, r2, r3
 801656e:	b21b      	sxth	r3, r3
 8016570:	429e      	cmp	r6, r3
 8016572:	bfa8      	it	ge
 8016574:	461e      	movge	r6, r3
 8016576:	462b      	mov	r3, r5
 8016578:	4622      	mov	r2, r4
 801657a:	2100      	movs	r1, #0
 801657c:	a805      	add	r0, sp, #20
 801657e:	f001 f90f 	bl	80177a0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016582:	e7e2      	b.n	801654a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8016584:	4630      	mov	r0, r6
 8016586:	b01e      	add	sp, #120	; 0x78
 8016588:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801658c:	b003      	add	sp, #12
 801658e:	4770      	bx	lr

08016590 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8016590:	b513      	push	{r0, r1, r4, lr}
 8016592:	6803      	ldr	r3, [r0, #0]
 8016594:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8016598:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801659c:	f8ad 1004 	strh.w	r1, [sp, #4]
 80165a0:	2400      	movs	r4, #0
 80165a2:	9400      	str	r4, [sp, #0]
 80165a4:	f8ad 2006 	strh.w	r2, [sp, #6]
 80165a8:	691b      	ldr	r3, [r3, #16]
 80165aa:	4669      	mov	r1, sp
 80165ac:	4798      	blx	r3
 80165ae:	b002      	add	sp, #8
 80165b0:	bd10      	pop	{r4, pc}

080165b2 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 80165b2:	b538      	push	{r3, r4, r5, lr}
 80165b4:	680b      	ldr	r3, [r1, #0]
 80165b6:	460c      	mov	r4, r1
 80165b8:	68db      	ldr	r3, [r3, #12]
 80165ba:	4605      	mov	r5, r0
 80165bc:	4798      	blx	r3
 80165be:	6823      	ldr	r3, [r4, #0]
 80165c0:	4620      	mov	r0, r4
 80165c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80165c4:	4629      	mov	r1, r5
 80165c6:	4798      	blx	r3
 80165c8:	4628      	mov	r0, r5
 80165ca:	bd38      	pop	{r3, r4, r5, pc}

080165cc <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 80165cc:	b410      	push	{r4}
 80165ce:	880a      	ldrh	r2, [r1, #0]
 80165d0:	8884      	ldrh	r4, [r0, #4]
 80165d2:	4422      	add	r2, r4
 80165d4:	800a      	strh	r2, [r1, #0]
 80165d6:	88c4      	ldrh	r4, [r0, #6]
 80165d8:	884a      	ldrh	r2, [r1, #2]
 80165da:	4422      	add	r2, r4
 80165dc:	804a      	strh	r2, [r1, #2]
 80165de:	6940      	ldr	r0, [r0, #20]
 80165e0:	b120      	cbz	r0, 80165ec <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 80165e2:	6803      	ldr	r3, [r0, #0]
 80165e4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80165e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80165ea:	4718      	bx	r3
 80165ec:	f85d 4b04 	ldr.w	r4, [sp], #4
 80165f0:	4770      	bx	lr

080165f2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 80165f2:	b570      	push	{r4, r5, r6, lr}
 80165f4:	8882      	ldrh	r2, [r0, #4]
 80165f6:	880b      	ldrh	r3, [r1, #0]
 80165f8:	4413      	add	r3, r2
 80165fa:	800b      	strh	r3, [r1, #0]
 80165fc:	88c2      	ldrh	r2, [r0, #6]
 80165fe:	884b      	ldrh	r3, [r1, #2]
 8016600:	460c      	mov	r4, r1
 8016602:	4413      	add	r3, r2
 8016604:	804b      	strh	r3, [r1, #2]
 8016606:	4605      	mov	r5, r0
 8016608:	1d01      	adds	r1, r0, #4
 801660a:	4620      	mov	r0, r4
 801660c:	f7f9 fdc6 	bl	801019c <_ZN8touchgfx4RectaNERKS0_>
 8016610:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8016614:	2b00      	cmp	r3, #0
 8016616:	dd0b      	ble.n	8016630 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8016618:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801661c:	2b00      	cmp	r3, #0
 801661e:	dd07      	ble.n	8016630 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8016620:	6968      	ldr	r0, [r5, #20]
 8016622:	b128      	cbz	r0, 8016630 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8016624:	6803      	ldr	r3, [r0, #0]
 8016626:	4621      	mov	r1, r4
 8016628:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801662a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801662e:	4718      	bx	r3
 8016630:	bd70      	pop	{r4, r5, r6, pc}
	...

08016634 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8016634:	b570      	push	{r4, r5, r6, lr}
 8016636:	8882      	ldrh	r2, [r0, #4]
 8016638:	880b      	ldrh	r3, [r1, #0]
 801663a:	4413      	add	r3, r2
 801663c:	800b      	strh	r3, [r1, #0]
 801663e:	88c2      	ldrh	r2, [r0, #6]
 8016640:	884b      	ldrh	r3, [r1, #2]
 8016642:	460c      	mov	r4, r1
 8016644:	4413      	add	r3, r2
 8016646:	804b      	strh	r3, [r1, #2]
 8016648:	4605      	mov	r5, r0
 801664a:	1d01      	adds	r1, r0, #4
 801664c:	4620      	mov	r0, r4
 801664e:	f7f9 fda5 	bl	801019c <_ZN8touchgfx4RectaNERKS0_>
 8016652:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8016656:	2b00      	cmp	r3, #0
 8016658:	dd19      	ble.n	801668e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801665a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801665e:	2b00      	cmp	r3, #0
 8016660:	dd15      	ble.n	801668e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8016662:	6968      	ldr	r0, [r5, #20]
 8016664:	b128      	cbz	r0, 8016672 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8016666:	6803      	ldr	r3, [r0, #0]
 8016668:	4621      	mov	r1, r4
 801666a:	691b      	ldr	r3, [r3, #16]
 801666c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016670:	4718      	bx	r3
 8016672:	4b07      	ldr	r3, [pc, #28]	; (8016690 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8016674:	681b      	ldr	r3, [r3, #0]
 8016676:	3304      	adds	r3, #4
 8016678:	429d      	cmp	r5, r3
 801667a:	d108      	bne.n	801668e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801667c:	f7fe fea0 	bl	80153c0 <_ZN8touchgfx11Application11getInstanceEv>
 8016680:	6803      	ldr	r3, [r0, #0]
 8016682:	6821      	ldr	r1, [r4, #0]
 8016684:	6862      	ldr	r2, [r4, #4]
 8016686:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016688:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801668c:	4718      	bx	r3
 801668e:	bd70      	pop	{r4, r5, r6, pc}
 8016690:	20012f68 	.word	0x20012f68

08016694 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8016694:	b570      	push	{r4, r5, r6, lr}
 8016696:	4604      	mov	r4, r0
 8016698:	4616      	mov	r6, r2
 801669a:	460d      	mov	r5, r1
 801669c:	b901      	cbnz	r1, 80166a0 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801669e:	b192      	cbz	r2, 80166c6 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 80166a0:	6823      	ldr	r3, [r4, #0]
 80166a2:	4620      	mov	r0, r4
 80166a4:	699b      	ldr	r3, [r3, #24]
 80166a6:	4798      	blx	r3
 80166a8:	88e2      	ldrh	r2, [r4, #6]
 80166aa:	88a1      	ldrh	r1, [r4, #4]
 80166ac:	4432      	add	r2, r6
 80166ae:	4429      	add	r1, r5
 80166b0:	4620      	mov	r0, r4
 80166b2:	b212      	sxth	r2, r2
 80166b4:	b209      	sxth	r1, r1
 80166b6:	f7ec f89e 	bl	80027f6 <_ZN8touchgfx8Drawable5setXYEss>
 80166ba:	6823      	ldr	r3, [r4, #0]
 80166bc:	4620      	mov	r0, r4
 80166be:	699b      	ldr	r3, [r3, #24]
 80166c0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80166c4:	4718      	bx	r3
 80166c6:	bd70      	pop	{r4, r5, r6, pc}

080166c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 80166c8:	b510      	push	{r4, lr}
 80166ca:	4604      	mov	r4, r0
 80166cc:	4608      	mov	r0, r1
 80166ce:	2300      	movs	r3, #0
 80166d0:	8023      	strh	r3, [r4, #0]
 80166d2:	8063      	strh	r3, [r4, #2]
 80166d4:	6803      	ldr	r3, [r0, #0]
 80166d6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80166da:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 80166de:	80a1      	strh	r1, [r4, #4]
 80166e0:	80e2      	strh	r2, [r4, #6]
 80166e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80166e4:	4621      	mov	r1, r4
 80166e6:	4798      	blx	r3
 80166e8:	4620      	mov	r0, r4
 80166ea:	bd10      	pop	{r4, pc}

080166ec <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 80166ec:	b530      	push	{r4, r5, lr}
 80166ee:	8083      	strh	r3, [r0, #4]
 80166f0:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 80166f4:	80c3      	strh	r3, [r0, #6]
 80166f6:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80166fa:	7203      	strb	r3, [r0, #8]
 80166fc:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8016700:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8016704:	7243      	strb	r3, [r0, #9]
 8016706:	7a83      	ldrb	r3, [r0, #10]
 8016708:	6141      	str	r1, [r0, #20]
 801670a:	f365 0306 	bfi	r3, r5, #0, #7
 801670e:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8016712:	8302      	strh	r2, [r0, #24]
 8016714:	f365 13c7 	bfi	r3, r5, #7, #1
 8016718:	7283      	strb	r3, [r0, #10]
 801671a:	f89d 3020 	ldrb.w	r3, [sp, #32]
 801671e:	72c3      	strb	r3, [r0, #11]
 8016720:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8016724:	7303      	strb	r3, [r0, #12]
 8016726:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801672a:	81c3      	strh	r3, [r0, #14]
 801672c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8016730:	8203      	strh	r3, [r0, #16]
 8016732:	4b01      	ldr	r3, [pc, #4]	; (8016738 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8016734:	6003      	str	r3, [r0, #0]
 8016736:	bd30      	pop	{r4, r5, pc}
 8016738:	0802e944 	.word	0x0802e944

0801673c <_ZNK8touchgfx9ConstFont4findEt>:
 801673c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801673e:	6944      	ldr	r4, [r0, #20]
 8016740:	b3bc      	cbz	r4, 80167b2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016742:	88a3      	ldrh	r3, [r4, #4]
 8016744:	8b02      	ldrh	r2, [r0, #24]
 8016746:	1acb      	subs	r3, r1, r3
 8016748:	f102 32ff 	add.w	r2, r2, #4294967295
 801674c:	d431      	bmi.n	80167b2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801674e:	4293      	cmp	r3, r2
 8016750:	dd0c      	ble.n	801676c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8016752:	230e      	movs	r3, #14
 8016754:	fb03 4302 	mla	r3, r3, r2, r4
 8016758:	889b      	ldrh	r3, [r3, #4]
 801675a:	1a5b      	subs	r3, r3, r1
 801675c:	1ad3      	subs	r3, r2, r3
 801675e:	429a      	cmp	r2, r3
 8016760:	db27      	blt.n	80167b2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016762:	2b00      	cmp	r3, #0
 8016764:	bfbc      	itt	lt
 8016766:	2302      	movlt	r3, #2
 8016768:	fb92 f3f3 	sdivlt	r3, r2, r3
 801676c:	2500      	movs	r5, #0
 801676e:	260e      	movs	r6, #14
 8016770:	4295      	cmp	r5, r2
 8016772:	dc1e      	bgt.n	80167b2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016774:	fb06 4003 	mla	r0, r6, r3, r4
 8016778:	8887      	ldrh	r7, [r0, #4]
 801677a:	42b9      	cmp	r1, r7
 801677c:	d01a      	beq.n	80167b4 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801677e:	d20d      	bcs.n	801679c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8016780:	1e5a      	subs	r2, r3, #1
 8016782:	4295      	cmp	r5, r2
 8016784:	dc15      	bgt.n	80167b2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016786:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801678a:	1a5b      	subs	r3, r3, r1
 801678c:	1ad3      	subs	r3, r2, r3
 801678e:	429a      	cmp	r2, r3
 8016790:	db0f      	blt.n	80167b2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016792:	429d      	cmp	r5, r3
 8016794:	ddec      	ble.n	8016770 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8016796:	1953      	adds	r3, r2, r5
 8016798:	105b      	asrs	r3, r3, #1
 801679a:	e7e9      	b.n	8016770 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801679c:	1c5d      	adds	r5, r3, #1
 801679e:	42aa      	cmp	r2, r5
 80167a0:	db07      	blt.n	80167b2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80167a2:	8a43      	ldrh	r3, [r0, #18]
 80167a4:	1acb      	subs	r3, r1, r3
 80167a6:	442b      	add	r3, r5
 80167a8:	429d      	cmp	r5, r3
 80167aa:	dc02      	bgt.n	80167b2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80167ac:	429a      	cmp	r2, r3
 80167ae:	dadf      	bge.n	8016770 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80167b0:	e7f1      	b.n	8016796 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 80167b2:	2000      	movs	r0, #0
 80167b4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080167b6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 80167b6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80167b8:	4604      	mov	r4, r0
 80167ba:	4617      	mov	r7, r2
 80167bc:	461e      	mov	r6, r3
 80167be:	b911      	cbnz	r1, 80167c6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 80167c0:	2500      	movs	r5, #0
 80167c2:	4628      	mov	r0, r5
 80167c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80167c6:	290a      	cmp	r1, #10
 80167c8:	d0fa      	beq.n	80167c0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80167ca:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80167ce:	4291      	cmp	r1, r2
 80167d0:	d0f6      	beq.n	80167c0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80167d2:	f242 020b 	movw	r2, #8203	; 0x200b
 80167d6:	4291      	cmp	r1, r2
 80167d8:	d0f2      	beq.n	80167c0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80167da:	f7ff ffaf 	bl	801673c <_ZNK8touchgfx9ConstFont4findEt>
 80167de:	4605      	mov	r5, r0
 80167e0:	b950      	cbnz	r0, 80167f8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 80167e2:	6823      	ldr	r3, [r4, #0]
 80167e4:	4620      	mov	r0, r4
 80167e6:	691b      	ldr	r3, [r3, #16]
 80167e8:	4798      	blx	r3
 80167ea:	4601      	mov	r1, r0
 80167ec:	4620      	mov	r0, r4
 80167ee:	f7ff ffa5 	bl	801673c <_ZNK8touchgfx9ConstFont4findEt>
 80167f2:	4605      	mov	r5, r0
 80167f4:	2800      	cmp	r0, #0
 80167f6:	d0e3      	beq.n	80167c0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80167f8:	6823      	ldr	r3, [r4, #0]
 80167fa:	4629      	mov	r1, r5
 80167fc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80167fe:	4620      	mov	r0, r4
 8016800:	4798      	blx	r3
 8016802:	6038      	str	r0, [r7, #0]
 8016804:	6823      	ldr	r3, [r4, #0]
 8016806:	4620      	mov	r0, r4
 8016808:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801680a:	4798      	blx	r3
 801680c:	7030      	strb	r0, [r6, #0]
 801680e:	e7d8      	b.n	80167c2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08016810 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 8016810:	b538      	push	{r3, r4, r5, lr}
 8016812:	4605      	mov	r5, r0
 8016814:	f002 fb56 	bl	8018ec4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8016818:	4604      	mov	r4, r0
 801681a:	4628      	mov	r0, r5
 801681c:	f002 fa96 	bl	8018d4c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8016820:	2800      	cmp	r0, #0
 8016822:	bf14      	ite	ne
 8016824:	2002      	movne	r0, #2
 8016826:	2000      	moveq	r0, #0
 8016828:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801682c:	b280      	uxth	r0, r0
 801682e:	bd38      	pop	{r3, r4, r5, pc}

08016830 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8016830:	b538      	push	{r3, r4, r5, lr}
 8016832:	4605      	mov	r5, r0
 8016834:	f002 fb46 	bl	8018ec4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8016838:	4604      	mov	r4, r0
 801683a:	4628      	mov	r0, r5
 801683c:	f002 fa86 	bl	8018d4c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8016840:	2800      	cmp	r0, #0
 8016842:	bf14      	ite	ne
 8016844:	2002      	movne	r0, #2
 8016846:	2000      	moveq	r0, #0
 8016848:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801684c:	f040 0001 	orr.w	r0, r0, #1
 8016850:	b280      	uxth	r0, r0
 8016852:	bd38      	pop	{r3, r4, r5, pc}

08016854 <_ZN8touchgfx4clzuEm>:
 8016854:	4603      	mov	r3, r0
 8016856:	b1c8      	cbz	r0, 801688c <_ZN8touchgfx4clzuEm+0x38>
 8016858:	0c02      	lsrs	r2, r0, #16
 801685a:	0412      	lsls	r2, r2, #16
 801685c:	b9a2      	cbnz	r2, 8016888 <_ZN8touchgfx4clzuEm+0x34>
 801685e:	0403      	lsls	r3, r0, #16
 8016860:	2010      	movs	r0, #16
 8016862:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8016866:	bf04      	itt	eq
 8016868:	021b      	lsleq	r3, r3, #8
 801686a:	3008      	addeq	r0, #8
 801686c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8016870:	bf04      	itt	eq
 8016872:	011b      	lsleq	r3, r3, #4
 8016874:	3004      	addeq	r0, #4
 8016876:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801687a:	bf04      	itt	eq
 801687c:	009b      	lsleq	r3, r3, #2
 801687e:	3002      	addeq	r0, #2
 8016880:	2b00      	cmp	r3, #0
 8016882:	db04      	blt.n	801688e <_ZN8touchgfx4clzuEm+0x3a>
 8016884:	3001      	adds	r0, #1
 8016886:	4770      	bx	lr
 8016888:	2000      	movs	r0, #0
 801688a:	e7ea      	b.n	8016862 <_ZN8touchgfx4clzuEm+0xe>
 801688c:	2020      	movs	r0, #32
 801688e:	4770      	bx	lr

08016890 <_ZN8touchgfx7muldivuEmmmRm>:
 8016890:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8016894:	460f      	mov	r7, r1
 8016896:	4615      	mov	r5, r2
 8016898:	461e      	mov	r6, r3
 801689a:	4601      	mov	r1, r0
 801689c:	b100      	cbz	r0, 80168a0 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 801689e:	b927      	cbnz	r7, 80168aa <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 80168a0:	2000      	movs	r0, #0
 80168a2:	6030      	str	r0, [r6, #0]
 80168a4:	b002      	add	sp, #8
 80168a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80168aa:	f7ff ffd3 	bl	8016854 <_ZN8touchgfx4clzuEm>
 80168ae:	b980      	cbnz	r0, 80168d2 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 80168b0:	4638      	mov	r0, r7
 80168b2:	f7ff ffcf 	bl	8016854 <_ZN8touchgfx4clzuEm>
 80168b6:	2800      	cmp	r0, #0
 80168b8:	dd05      	ble.n	80168c6 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 80168ba:	4633      	mov	r3, r6
 80168bc:	462a      	mov	r2, r5
 80168be:	4638      	mov	r0, r7
 80168c0:	f7ff ffe6 	bl	8016890 <_ZN8touchgfx7muldivuEmmmRm>
 80168c4:	e7ee      	b.n	80168a4 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80168c6:	f04f 33ff 	mov.w	r3, #4294967295
 80168ca:	6033      	str	r3, [r6, #0]
 80168cc:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80168d0:	e7e8      	b.n	80168a4 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80168d2:	fa37 f800 	lsrs.w	r8, r7, r0
 80168d6:	fb07 f301 	mul.w	r3, r7, r1
 80168da:	d105      	bne.n	80168e8 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 80168dc:	fbb3 f0f5 	udiv	r0, r3, r5
 80168e0:	fb05 3510 	mls	r5, r5, r0, r3
 80168e4:	6035      	str	r5, [r6, #0]
 80168e6:	e7dd      	b.n	80168a4 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80168e8:	2301      	movs	r3, #1
 80168ea:	fa01 fa00 	lsl.w	sl, r1, r0
 80168ee:	fa03 f000 	lsl.w	r0, r3, r0
 80168f2:	3801      	subs	r0, #1
 80168f4:	462a      	mov	r2, r5
 80168f6:	4633      	mov	r3, r6
 80168f8:	4038      	ands	r0, r7
 80168fa:	f7ff ffc9 	bl	8016890 <_ZN8touchgfx7muldivuEmmmRm>
 80168fe:	fbba f9f5 	udiv	r9, sl, r5
 8016902:	462a      	mov	r2, r5
 8016904:	4607      	mov	r7, r0
 8016906:	ab01      	add	r3, sp, #4
 8016908:	fb05 a119 	mls	r1, r5, r9, sl
 801690c:	4640      	mov	r0, r8
 801690e:	f7ff ffbf 	bl	8016890 <_ZN8touchgfx7muldivuEmmmRm>
 8016912:	9b01      	ldr	r3, [sp, #4]
 8016914:	6832      	ldr	r2, [r6, #0]
 8016916:	fb08 f409 	mul.w	r4, r8, r9
 801691a:	441a      	add	r2, r3
 801691c:	fbb2 f3f5 	udiv	r3, r2, r5
 8016920:	441c      	add	r4, r3
 8016922:	443c      	add	r4, r7
 8016924:	4420      	add	r0, r4
 8016926:	fb05 2513 	mls	r5, r5, r3, r2
 801692a:	e7db      	b.n	80168e4 <_ZN8touchgfx7muldivuEmmmRm+0x54>

0801692c <_ZN8touchgfx6muldivElllRl>:
 801692c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801692e:	2800      	cmp	r0, #0
 8016930:	bfba      	itte	lt
 8016932:	4240      	neglt	r0, r0
 8016934:	f04f 34ff 	movlt.w	r4, #4294967295
 8016938:	2401      	movge	r4, #1
 801693a:	2900      	cmp	r1, #0
 801693c:	bfbc      	itt	lt
 801693e:	4249      	neglt	r1, r1
 8016940:	4264      	neglt	r4, r4
 8016942:	2a00      	cmp	r2, #0
 8016944:	bfb6      	itet	lt
 8016946:	4265      	neglt	r5, r4
 8016948:	4625      	movge	r5, r4
 801694a:	4252      	neglt	r2, r2
 801694c:	4288      	cmp	r0, r1
 801694e:	461e      	mov	r6, r3
 8016950:	bfc2      	ittt	gt
 8016952:	4603      	movgt	r3, r0
 8016954:	4608      	movgt	r0, r1
 8016956:	4619      	movgt	r1, r3
 8016958:	ab01      	add	r3, sp, #4
 801695a:	f7ff ff99 	bl	8016890 <_ZN8touchgfx7muldivuEmmmRm>
 801695e:	9b01      	ldr	r3, [sp, #4]
 8016960:	4368      	muls	r0, r5
 8016962:	435c      	muls	r4, r3
 8016964:	6034      	str	r4, [r6, #0]
 8016966:	b002      	add	sp, #8
 8016968:	bd70      	pop	{r4, r5, r6, pc}

0801696a <_ZN8touchgfx6muldivElll>:
 801696a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801696c:	4606      	mov	r6, r0
 801696e:	ab01      	add	r3, sp, #4
 8016970:	460d      	mov	r5, r1
 8016972:	4614      	mov	r4, r2
 8016974:	f7ff ffda 	bl	801692c <_ZN8touchgfx6muldivElllRl>
 8016978:	2e00      	cmp	r6, #0
 801697a:	db20      	blt.n	80169be <_ZN8touchgfx6muldivElll+0x54>
 801697c:	bf14      	ite	ne
 801697e:	2301      	movne	r3, #1
 8016980:	2300      	moveq	r3, #0
 8016982:	2d00      	cmp	r5, #0
 8016984:	db1e      	blt.n	80169c4 <_ZN8touchgfx6muldivElll+0x5a>
 8016986:	bf14      	ite	ne
 8016988:	2201      	movne	r2, #1
 801698a:	2200      	moveq	r2, #0
 801698c:	2c00      	cmp	r4, #0
 801698e:	fb03 f202 	mul.w	r2, r3, r2
 8016992:	db1a      	blt.n	80169ca <_ZN8touchgfx6muldivElll+0x60>
 8016994:	bf14      	ite	ne
 8016996:	2301      	movne	r3, #1
 8016998:	2300      	moveq	r3, #0
 801699a:	4353      	muls	r3, r2
 801699c:	2b01      	cmp	r3, #1
 801699e:	d117      	bne.n	80169d0 <_ZN8touchgfx6muldivElll+0x66>
 80169a0:	9b01      	ldr	r3, [sp, #4]
 80169a2:	2c00      	cmp	r4, #0
 80169a4:	bfb8      	it	lt
 80169a6:	4264      	neglt	r4, r4
 80169a8:	2b00      	cmp	r3, #0
 80169aa:	f104 0401 	add.w	r4, r4, #1
 80169ae:	bfb8      	it	lt
 80169b0:	425b      	neglt	r3, r3
 80169b2:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 80169b6:	db00      	blt.n	80169ba <_ZN8touchgfx6muldivElll+0x50>
 80169b8:	3001      	adds	r0, #1
 80169ba:	b002      	add	sp, #8
 80169bc:	bd70      	pop	{r4, r5, r6, pc}
 80169be:	f04f 33ff 	mov.w	r3, #4294967295
 80169c2:	e7de      	b.n	8016982 <_ZN8touchgfx6muldivElll+0x18>
 80169c4:	f04f 32ff 	mov.w	r2, #4294967295
 80169c8:	e7e0      	b.n	801698c <_ZN8touchgfx6muldivElll+0x22>
 80169ca:	f04f 33ff 	mov.w	r3, #4294967295
 80169ce:	e7e4      	b.n	801699a <_ZN8touchgfx6muldivElll+0x30>
 80169d0:	3301      	adds	r3, #1
 80169d2:	d1f2      	bne.n	80169ba <_ZN8touchgfx6muldivElll+0x50>
 80169d4:	9b01      	ldr	r3, [sp, #4]
 80169d6:	2c00      	cmp	r4, #0
 80169d8:	bfb8      	it	lt
 80169da:	4264      	neglt	r4, r4
 80169dc:	2b00      	cmp	r3, #0
 80169de:	bfb8      	it	lt
 80169e0:	425b      	neglt	r3, r3
 80169e2:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 80169e6:	bfc8      	it	gt
 80169e8:	f100 30ff 	addgt.w	r0, r0, #4294967295
 80169ec:	e7e5      	b.n	80169ba <_ZN8touchgfx6muldivElll+0x50>

080169ee <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 80169ee:	2000      	movs	r0, #0
 80169f0:	4770      	bx	lr

080169f2 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 80169f2:	2001      	movs	r0, #1
 80169f4:	4770      	bx	lr

080169f6 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 80169f6:	2002      	movs	r0, #2
 80169f8:	4770      	bx	lr

080169fa <_ZN8touchgfx6ScreenD1Ev>:
 80169fa:	4770      	bx	lr

080169fc <_ZN8touchgfx12GestureEventD1Ev>:
 80169fc:	4770      	bx	lr

080169fe <_ZN8touchgfx9DragEventD1Ev>:
 80169fe:	4770      	bx	lr

08016a00 <_ZN8touchgfx10ClickEventD1Ev>:
 8016a00:	4770      	bx	lr

08016a02 <_ZN8touchgfx10ClickEventD0Ev>:
 8016a02:	b510      	push	{r4, lr}
 8016a04:	210c      	movs	r1, #12
 8016a06:	4604      	mov	r4, r0
 8016a08:	f012 fd51 	bl	80294ae <_ZdlPvj>
 8016a0c:	4620      	mov	r0, r4
 8016a0e:	bd10      	pop	{r4, pc}

08016a10 <_ZN8touchgfx9DragEventD0Ev>:
 8016a10:	b510      	push	{r4, lr}
 8016a12:	2110      	movs	r1, #16
 8016a14:	4604      	mov	r4, r0
 8016a16:	f012 fd4a 	bl	80294ae <_ZdlPvj>
 8016a1a:	4620      	mov	r0, r4
 8016a1c:	bd10      	pop	{r4, pc}

08016a1e <_ZN8touchgfx12GestureEventD0Ev>:
 8016a1e:	b510      	push	{r4, lr}
 8016a20:	210c      	movs	r1, #12
 8016a22:	4604      	mov	r4, r0
 8016a24:	f012 fd43 	bl	80294ae <_ZdlPvj>
 8016a28:	4620      	mov	r0, r4
 8016a2a:	bd10      	pop	{r4, pc}

08016a2c <_ZN8touchgfx6ScreenD0Ev>:
 8016a2c:	b510      	push	{r4, lr}
 8016a2e:	213c      	movs	r1, #60	; 0x3c
 8016a30:	4604      	mov	r4, r0
 8016a32:	f012 fd3c 	bl	80294ae <_ZdlPvj>
 8016a36:	4620      	mov	r0, r4
 8016a38:	bd10      	pop	{r4, pc}
	...

08016a3c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8016a3c:	b530      	push	{r4, r5, lr}
 8016a3e:	460d      	mov	r5, r1
 8016a40:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8016a42:	b087      	sub	sp, #28
 8016a44:	4604      	mov	r4, r0
 8016a46:	b301      	cbz	r1, 8016a8a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8016a48:	a801      	add	r0, sp, #4
 8016a4a:	f7ff fe3d 	bl	80166c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016a4e:	892a      	ldrh	r2, [r5, #8]
 8016a50:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8016a54:	7928      	ldrb	r0, [r5, #4]
 8016a56:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8016a5a:	f88d 0010 	strb.w	r0, [sp, #16]
 8016a5e:	1ad2      	subs	r2, r2, r3
 8016a60:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8016a62:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8016a64:	f8ad 1012 	strh.w	r1, [sp, #18]
 8016a68:	441a      	add	r2, r3
 8016a6a:	896b      	ldrh	r3, [r5, #10]
 8016a6c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8016a70:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016a74:	1b5b      	subs	r3, r3, r5
 8016a76:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8016a78:	442b      	add	r3, r5
 8016a7a:	4d05      	ldr	r5, [pc, #20]	; (8016a90 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8016a7c:	9503      	str	r5, [sp, #12]
 8016a7e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016a82:	6803      	ldr	r3, [r0, #0]
 8016a84:	a903      	add	r1, sp, #12
 8016a86:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016a88:	4798      	blx	r3
 8016a8a:	b007      	add	sp, #28
 8016a8c:	bd30      	pop	{r4, r5, pc}
 8016a8e:	bf00      	nop
 8016a90:	0802e9cc 	.word	0x0802e9cc

08016a94 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8016a94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016a98:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8016a9a:	b08a      	sub	sp, #40	; 0x28
 8016a9c:	4604      	mov	r4, r0
 8016a9e:	460d      	mov	r5, r1
 8016aa0:	b113      	cbz	r3, 8016aa8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8016aa2:	790b      	ldrb	r3, [r1, #4]
 8016aa4:	2b00      	cmp	r3, #0
 8016aa6:	d044      	beq.n	8016b32 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8016aa8:	f104 0804 	add.w	r8, r4, #4
 8016aac:	4641      	mov	r1, r8
 8016aae:	a803      	add	r0, sp, #12
 8016ab0:	f7ff fe0a 	bl	80166c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016ab4:	792b      	ldrb	r3, [r5, #4]
 8016ab6:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8016aba:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8016abe:	b983      	cbnz	r3, 8016ae2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8016ac0:	892a      	ldrh	r2, [r5, #8]
 8016ac2:	88e9      	ldrh	r1, [r5, #6]
 8016ac4:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8016ac8:	1b92      	subs	r2, r2, r6
 8016aca:	1bc9      	subs	r1, r1, r7
 8016acc:	9301      	str	r3, [sp, #4]
 8016ace:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8016ad2:	9300      	str	r3, [sp, #0]
 8016ad4:	b212      	sxth	r2, r2
 8016ad6:	f104 0330 	add.w	r3, r4, #48	; 0x30
 8016ada:	b209      	sxth	r1, r1
 8016adc:	4640      	mov	r0, r8
 8016ade:	f7f9 fa79 	bl	800ffd4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8016ae2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8016ae4:	b329      	cbz	r1, 8016b32 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8016ae6:	a805      	add	r0, sp, #20
 8016ae8:	f7ff fdee 	bl	80166c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016aec:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8016af0:	792b      	ldrb	r3, [r5, #4]
 8016af2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8016af4:	f88d 3020 	strb.w	r3, [sp, #32]
 8016af8:	1abf      	subs	r7, r7, r2
 8016afa:	88ea      	ldrh	r2, [r5, #6]
 8016afc:	4417      	add	r7, r2
 8016afe:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8016b00:	4417      	add	r7, r2
 8016b02:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8016b06:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8016b0a:	1ab6      	subs	r6, r6, r2
 8016b0c:	892a      	ldrh	r2, [r5, #8]
 8016b0e:	4416      	add	r6, r2
 8016b10:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8016b12:	4416      	add	r6, r2
 8016b14:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8016b18:	4a07      	ldr	r2, [pc, #28]	; (8016b38 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8016b1a:	9207      	str	r2, [sp, #28]
 8016b1c:	2600      	movs	r6, #0
 8016b1e:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8016b22:	6803      	ldr	r3, [r0, #0]
 8016b24:	a907      	add	r1, sp, #28
 8016b26:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016b28:	4798      	blx	r3
 8016b2a:	792b      	ldrb	r3, [r5, #4]
 8016b2c:	b10b      	cbz	r3, 8016b32 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8016b2e:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8016b32:	b00a      	add	sp, #40	; 0x28
 8016b34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016b38:	0802e9a4 	.word	0x0802e9a4

08016b3c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8016b3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016b40:	460c      	mov	r4, r1
 8016b42:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8016b44:	b088      	sub	sp, #32
 8016b46:	4605      	mov	r5, r0
 8016b48:	2900      	cmp	r1, #0
 8016b4a:	d06d      	beq.n	8016c28 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8016b4c:	4668      	mov	r0, sp
 8016b4e:	f7ff fdbb 	bl	80166c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016b52:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8016b54:	88e3      	ldrh	r3, [r4, #6]
 8016b56:	f9bd 8000 	ldrsh.w	r8, [sp]
 8016b5a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8016b5e:	440b      	add	r3, r1
 8016b60:	b21b      	sxth	r3, r3
 8016b62:	4543      	cmp	r3, r8
 8016b64:	db31      	blt.n	8016bca <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016b66:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8016b6a:	44c4      	add	ip, r8
 8016b6c:	fa0f fc8c 	sxth.w	ip, ip
 8016b70:	4563      	cmp	r3, ip
 8016b72:	da2a      	bge.n	8016bca <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016b74:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8016b76:	8926      	ldrh	r6, [r4, #8]
 8016b78:	4416      	add	r6, r2
 8016b7a:	b236      	sxth	r6, r6
 8016b7c:	42be      	cmp	r6, r7
 8016b7e:	db24      	blt.n	8016bca <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016b80:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8016b84:	4438      	add	r0, r7
 8016b86:	b200      	sxth	r0, r0
 8016b88:	4286      	cmp	r6, r0
 8016b8a:	da1e      	bge.n	8016bca <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016b8c:	8963      	ldrh	r3, [r4, #10]
 8016b8e:	4419      	add	r1, r3
 8016b90:	b209      	sxth	r1, r1
 8016b92:	4541      	cmp	r1, r8
 8016b94:	db08      	blt.n	8016ba8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8016b96:	4561      	cmp	r1, ip
 8016b98:	da06      	bge.n	8016ba8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8016b9a:	89a3      	ldrh	r3, [r4, #12]
 8016b9c:	441a      	add	r2, r3
 8016b9e:	b212      	sxth	r2, r2
 8016ba0:	42ba      	cmp	r2, r7
 8016ba2:	db01      	blt.n	8016ba8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8016ba4:	4282      	cmp	r2, r0
 8016ba6:	db10      	blt.n	8016bca <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016ba8:	4b21      	ldr	r3, [pc, #132]	; (8016c30 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8016baa:	9304      	str	r3, [sp, #16]
 8016bac:	2302      	movs	r3, #2
 8016bae:	f88d 3014 	strb.w	r3, [sp, #20]
 8016bb2:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8016bb4:	2300      	movs	r3, #0
 8016bb6:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016bba:	f8ad 3018 	strh.w	r3, [sp, #24]
 8016bbe:	f8ad 301a 	strh.w	r3, [sp, #26]
 8016bc2:	6803      	ldr	r3, [r0, #0]
 8016bc4:	a904      	add	r1, sp, #16
 8016bc6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016bc8:	4798      	blx	r3
 8016bca:	1d29      	adds	r1, r5, #4
 8016bcc:	a802      	add	r0, sp, #8
 8016bce:	f7ff fd7b 	bl	80166c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016bd2:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016bd6:	88e0      	ldrh	r0, [r4, #6]
 8016bd8:	7921      	ldrb	r1, [r4, #4]
 8016bda:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8016bde:	8922      	ldrh	r2, [r4, #8]
 8016be0:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8016be2:	f88d 1014 	strb.w	r1, [sp, #20]
 8016be6:	eba3 0808 	sub.w	r8, r3, r8
 8016bea:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8016bee:	1bdf      	subs	r7, r3, r7
 8016bf0:	b2bb      	uxth	r3, r7
 8016bf2:	fa1f f888 	uxth.w	r8, r8
 8016bf6:	8967      	ldrh	r7, [r4, #10]
 8016bf8:	89a4      	ldrh	r4, [r4, #12]
 8016bfa:	4440      	add	r0, r8
 8016bfc:	4460      	add	r0, ip
 8016bfe:	441a      	add	r2, r3
 8016c00:	44b8      	add	r8, r7
 8016c02:	4423      	add	r3, r4
 8016c04:	f8ad 0016 	strh.w	r0, [sp, #22]
 8016c08:	4433      	add	r3, r6
 8016c0a:	4432      	add	r2, r6
 8016c0c:	44e0      	add	r8, ip
 8016c0e:	4c09      	ldr	r4, [pc, #36]	; (8016c34 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8016c10:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8016c12:	9404      	str	r4, [sp, #16]
 8016c14:	f8ad 2018 	strh.w	r2, [sp, #24]
 8016c18:	f8ad 801a 	strh.w	r8, [sp, #26]
 8016c1c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8016c20:	6803      	ldr	r3, [r0, #0]
 8016c22:	a904      	add	r1, sp, #16
 8016c24:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016c26:	4798      	blx	r3
 8016c28:	b008      	add	sp, #32
 8016c2a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016c2e:	bf00      	nop
 8016c30:	0802e9a4 	.word	0x0802e9a4
 8016c34:	0802e9b8 	.word	0x0802e9b8

08016c38 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8016c38:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8016c3a:	4604      	mov	r4, r0
 8016c3c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8016c40:	3201      	adds	r2, #1
 8016c42:	d112      	bne.n	8016c6a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8016c44:	6803      	ldr	r3, [r0, #0]
 8016c46:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8016c4a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8016c4e:	f8ad 1004 	strh.w	r1, [sp, #4]
 8016c52:	2500      	movs	r5, #0
 8016c54:	9500      	str	r5, [sp, #0]
 8016c56:	466d      	mov	r5, sp
 8016c58:	4629      	mov	r1, r5
 8016c5a:	f8ad 2006 	strh.w	r2, [sp, #6]
 8016c5e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016c60:	4798      	blx	r3
 8016c62:	e895 0003 	ldmia.w	r5, {r0, r1}
 8016c66:	e884 0003 	stmia.w	r4, {r0, r1}
 8016c6a:	4620      	mov	r0, r4
 8016c6c:	b003      	add	sp, #12
 8016c6e:	bd30      	pop	{r4, r5, pc}

08016c70 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8016c70:	b513      	push	{r0, r1, r4, lr}
 8016c72:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8016c76:	3301      	adds	r3, #1
 8016c78:	4604      	mov	r4, r0
 8016c7a:	d109      	bne.n	8016c90 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8016c7c:	4601      	mov	r1, r0
 8016c7e:	4668      	mov	r0, sp
 8016c80:	f7ff fd22 	bl	80166c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016c84:	f8bd 3000 	ldrh.w	r3, [sp]
 8016c88:	8423      	strh	r3, [r4, #32]
 8016c8a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016c8e:	8463      	strh	r3, [r4, #34]	; 0x22
 8016c90:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8016c94:	b002      	add	sp, #8
 8016c96:	bd10      	pop	{r4, pc}

08016c98 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8016c98:	b513      	push	{r0, r1, r4, lr}
 8016c9a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8016c9e:	3301      	adds	r3, #1
 8016ca0:	4604      	mov	r4, r0
 8016ca2:	d109      	bne.n	8016cb8 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8016ca4:	4601      	mov	r1, r0
 8016ca6:	4668      	mov	r0, sp
 8016ca8:	f7ff fd0e 	bl	80166c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016cac:	f8bd 3000 	ldrh.w	r3, [sp]
 8016cb0:	8423      	strh	r3, [r4, #32]
 8016cb2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016cb6:	8463      	strh	r3, [r4, #34]	; 0x22
 8016cb8:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8016cbc:	b002      	add	sp, #8
 8016cbe:	bd10      	pop	{r4, pc}

08016cc0 <_ZN8touchgfx6ScreenC1Ev>:
 8016cc0:	b570      	push	{r4, r5, r6, lr}
 8016cc2:	4605      	mov	r5, r0
 8016cc4:	4b16      	ldr	r3, [pc, #88]	; (8016d20 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8016cc6:	f845 3b04 	str.w	r3, [r5], #4
 8016cca:	2300      	movs	r3, #0
 8016ccc:	8103      	strh	r3, [r0, #8]
 8016cce:	8143      	strh	r3, [r0, #10]
 8016cd0:	8183      	strh	r3, [r0, #12]
 8016cd2:	81c3      	strh	r3, [r0, #14]
 8016cd4:	8203      	strh	r3, [r0, #16]
 8016cd6:	8243      	strh	r3, [r0, #18]
 8016cd8:	8283      	strh	r3, [r0, #20]
 8016cda:	82c3      	strh	r3, [r0, #22]
 8016cdc:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8016ce0:	6203      	str	r3, [r0, #32]
 8016ce2:	8483      	strh	r3, [r0, #36]	; 0x24
 8016ce4:	84c3      	strh	r3, [r0, #38]	; 0x26
 8016ce6:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8016cea:	4a0e      	ldr	r2, [pc, #56]	; (8016d24 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8016cec:	6343      	str	r3, [r0, #52]	; 0x34
 8016cee:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8016cf2:	4b0d      	ldr	r3, [pc, #52]	; (8016d28 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8016cf4:	6042      	str	r2, [r0, #4]
 8016cf6:	f9b3 6000 	ldrsh.w	r6, [r3]
 8016cfa:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8016cfc:	4a0b      	ldr	r2, [pc, #44]	; (8016d2c <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8016cfe:	4604      	mov	r4, r0
 8016d00:	2101      	movs	r1, #1
 8016d02:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8016d06:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 8016d0a:	f9b2 1000 	ldrsh.w	r1, [r2]
 8016d0e:	4628      	mov	r0, r5
 8016d10:	4798      	blx	r3
 8016d12:	6863      	ldr	r3, [r4, #4]
 8016d14:	4628      	mov	r0, r5
 8016d16:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8016d18:	4631      	mov	r1, r6
 8016d1a:	4798      	blx	r3
 8016d1c:	4620      	mov	r0, r4
 8016d1e:	bd70      	pop	{r4, r5, r6, pc}
 8016d20:	0802e9e0 	.word	0x0802e9e0
 8016d24:	0802e244 	.word	0x0802e244
 8016d28:	20012f1a 	.word	0x20012f1a
 8016d2c:	20012f18 	.word	0x20012f18

08016d30 <_ZN8touchgfx6Screen4drawEv>:
 8016d30:	b507      	push	{r0, r1, r2, lr}
 8016d32:	4b09      	ldr	r3, [pc, #36]	; (8016d58 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8016d34:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016d38:	4b08      	ldr	r3, [pc, #32]	; (8016d5c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8016d3a:	f8ad 2004 	strh.w	r2, [sp, #4]
 8016d3e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016d42:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016d46:	6803      	ldr	r3, [r0, #0]
 8016d48:	2100      	movs	r1, #0
 8016d4a:	9100      	str	r1, [sp, #0]
 8016d4c:	689b      	ldr	r3, [r3, #8]
 8016d4e:	4669      	mov	r1, sp
 8016d50:	4798      	blx	r3
 8016d52:	b003      	add	sp, #12
 8016d54:	f85d fb04 	ldr.w	pc, [sp], #4
 8016d58:	20012f18 	.word	0x20012f18
 8016d5c:	20012f1a 	.word	0x20012f1a

08016d60 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8016d60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016d64:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8016d68:	2b00      	cmp	r3, #0
 8016d6a:	b089      	sub	sp, #36	; 0x24
 8016d6c:	4680      	mov	r8, r0
 8016d6e:	460c      	mov	r4, r1
 8016d70:	4615      	mov	r5, r2
 8016d72:	dd0e      	ble.n	8016d92 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016d74:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8016d78:	2b00      	cmp	r3, #0
 8016d7a:	dd0a      	ble.n	8016d92 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016d7c:	4628      	mov	r0, r5
 8016d7e:	f7ff ff5b 	bl	8016c38 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8016d82:	4621      	mov	r1, r4
 8016d84:	f7fe fa3d 	bl	8015202 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016d88:	69eb      	ldr	r3, [r5, #28]
 8016d8a:	b928      	cbnz	r0, 8016d98 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8016d8c:	461d      	mov	r5, r3
 8016d8e:	2b00      	cmp	r3, #0
 8016d90:	d1f4      	bne.n	8016d7c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8016d92:	b009      	add	sp, #36	; 0x24
 8016d94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016d98:	ae04      	add	r6, sp, #16
 8016d9a:	2b00      	cmp	r3, #0
 8016d9c:	f000 80b5 	beq.w	8016f0a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8016da0:	682b      	ldr	r3, [r5, #0]
 8016da2:	4629      	mov	r1, r5
 8016da4:	68db      	ldr	r3, [r3, #12]
 8016da6:	a802      	add	r0, sp, #8
 8016da8:	4798      	blx	r3
 8016daa:	4628      	mov	r0, r5
 8016dac:	f7ff ff60 	bl	8016c70 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8016db0:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8016db4:	4407      	add	r7, r0
 8016db6:	4628      	mov	r0, r5
 8016db8:	f7ff ff6e 	bl	8016c98 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8016dbc:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8016dc0:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8016dc4:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016dc8:	4418      	add	r0, r3
 8016dca:	4621      	mov	r1, r4
 8016dcc:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8016dd0:	f8ad 0012 	strh.w	r0, [sp, #18]
 8016dd4:	b23f      	sxth	r7, r7
 8016dd6:	4630      	mov	r0, r6
 8016dd8:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016ddc:	f8ad 7010 	strh.w	r7, [sp, #16]
 8016de0:	f7f9 f9dc 	bl	801019c <_ZN8touchgfx4RectaNERKS0_>
 8016de4:	4628      	mov	r0, r5
 8016de6:	f7ff ff27 	bl	8016c38 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8016dea:	4602      	mov	r2, r0
 8016dec:	e896 0003 	ldmia.w	r6, {r0, r1}
 8016df0:	ab06      	add	r3, sp, #24
 8016df2:	e883 0003 	stmia.w	r3, {r0, r1}
 8016df6:	4611      	mov	r1, r2
 8016df8:	4618      	mov	r0, r3
 8016dfa:	f7f9 f9cf 	bl	801019c <_ZN8touchgfx4RectaNERKS0_>
 8016dfe:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8016e02:	f9b4 1000 	ldrsh.w	r1, [r4]
 8016e06:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8016e0a:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8016e0e:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8016e12:	4299      	cmp	r1, r3
 8016e14:	d10b      	bne.n	8016e2e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8016e16:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8016e1a:	4552      	cmp	r2, sl
 8016e1c:	d107      	bne.n	8016e2e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8016e1e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8016e22:	455a      	cmp	r2, fp
 8016e24:	d103      	bne.n	8016e2e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8016e26:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8016e2a:	454a      	cmp	r2, r9
 8016e2c:	d06d      	beq.n	8016f0a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8016e2e:	f1bb 0f00 	cmp.w	fp, #0
 8016e32:	dd65      	ble.n	8016f00 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8016e34:	f1b9 0f00 	cmp.w	r9, #0
 8016e38:	dd62      	ble.n	8016f00 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8016e3a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8016e3e:	fa1f f08a 	uxth.w	r0, sl
 8016e42:	4552      	cmp	r2, sl
 8016e44:	9000      	str	r0, [sp, #0]
 8016e46:	da12      	bge.n	8016e6e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8016e48:	9301      	str	r3, [sp, #4]
 8016e4a:	9b00      	ldr	r3, [sp, #0]
 8016e4c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8016e50:	f8ad 2012 	strh.w	r2, [sp, #18]
 8016e54:	1a9a      	subs	r2, r3, r2
 8016e56:	f8ad 1010 	strh.w	r1, [sp, #16]
 8016e5a:	f8ad 0014 	strh.w	r0, [sp, #20]
 8016e5e:	f8ad 2016 	strh.w	r2, [sp, #22]
 8016e62:	69ea      	ldr	r2, [r5, #28]
 8016e64:	4631      	mov	r1, r6
 8016e66:	4640      	mov	r0, r8
 8016e68:	f7ff ff7a 	bl	8016d60 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016e6c:	9b01      	ldr	r3, [sp, #4]
 8016e6e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8016e72:	429a      	cmp	r2, r3
 8016e74:	b29f      	uxth	r7, r3
 8016e76:	da0d      	bge.n	8016e94 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8016e78:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016e7c:	1aba      	subs	r2, r7, r2
 8016e7e:	f8ad a012 	strh.w	sl, [sp, #18]
 8016e82:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016e86:	f8ad 9016 	strh.w	r9, [sp, #22]
 8016e8a:	69ea      	ldr	r2, [r5, #28]
 8016e8c:	4631      	mov	r1, r6
 8016e8e:	4640      	mov	r0, r8
 8016e90:	f7ff ff66 	bl	8016d60 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016e94:	8822      	ldrh	r2, [r4, #0]
 8016e96:	88a3      	ldrh	r3, [r4, #4]
 8016e98:	445f      	add	r7, fp
 8016e9a:	4413      	add	r3, r2
 8016e9c:	b29b      	uxth	r3, r3
 8016e9e:	b2bf      	uxth	r7, r7
 8016ea0:	b23a      	sxth	r2, r7
 8016ea2:	b219      	sxth	r1, r3
 8016ea4:	4291      	cmp	r1, r2
 8016ea6:	dd0d      	ble.n	8016ec4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8016ea8:	1bdb      	subs	r3, r3, r7
 8016eaa:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016eae:	f8ad a012 	strh.w	sl, [sp, #18]
 8016eb2:	f8ad 3014 	strh.w	r3, [sp, #20]
 8016eb6:	f8ad 9016 	strh.w	r9, [sp, #22]
 8016eba:	69ea      	ldr	r2, [r5, #28]
 8016ebc:	4631      	mov	r1, r6
 8016ebe:	4640      	mov	r0, r8
 8016ec0:	f7ff ff4e 	bl	8016d60 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016ec4:	88e2      	ldrh	r2, [r4, #6]
 8016ec6:	8863      	ldrh	r3, [r4, #2]
 8016ec8:	4413      	add	r3, r2
 8016eca:	9a00      	ldr	r2, [sp, #0]
 8016ecc:	444a      	add	r2, r9
 8016ece:	b29b      	uxth	r3, r3
 8016ed0:	fa1f f982 	uxth.w	r9, r2
 8016ed4:	fa0f f289 	sxth.w	r2, r9
 8016ed8:	b219      	sxth	r1, r3
 8016eda:	428a      	cmp	r2, r1
 8016edc:	da15      	bge.n	8016f0a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8016ede:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8016ee2:	f9b4 0000 	ldrsh.w	r0, [r4]
 8016ee6:	f8ad 1014 	strh.w	r1, [sp, #20]
 8016eea:	eba3 0309 	sub.w	r3, r3, r9
 8016eee:	f8ad 0010 	strh.w	r0, [sp, #16]
 8016ef2:	f8ad 2012 	strh.w	r2, [sp, #18]
 8016ef6:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016efa:	69ea      	ldr	r2, [r5, #28]
 8016efc:	4631      	mov	r1, r6
 8016efe:	e001      	b.n	8016f04 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8016f00:	69ea      	ldr	r2, [r5, #28]
 8016f02:	4621      	mov	r1, r4
 8016f04:	4640      	mov	r0, r8
 8016f06:	f7ff ff2b 	bl	8016d60 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016f0a:	4628      	mov	r0, r5
 8016f0c:	f7ff fe94 	bl	8016c38 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8016f10:	6861      	ldr	r1, [r4, #4]
 8016f12:	4602      	mov	r2, r0
 8016f14:	6820      	ldr	r0, [r4, #0]
 8016f16:	4633      	mov	r3, r6
 8016f18:	c303      	stmia	r3!, {r0, r1}
 8016f1a:	4611      	mov	r1, r2
 8016f1c:	4630      	mov	r0, r6
 8016f1e:	f7f9 f93d 	bl	801019c <_ZN8touchgfx4RectaNERKS0_>
 8016f22:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8016f26:	2b00      	cmp	r3, #0
 8016f28:	f77f af33 	ble.w	8016d92 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016f2c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8016f30:	2b00      	cmp	r3, #0
 8016f32:	f77f af2e 	ble.w	8016d92 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016f36:	4628      	mov	r0, r5
 8016f38:	f7ff fe9a 	bl	8016c70 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8016f3c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8016f40:	1a18      	subs	r0, r3, r0
 8016f42:	f8ad 0010 	strh.w	r0, [sp, #16]
 8016f46:	4628      	mov	r0, r5
 8016f48:	f7ff fea6 	bl	8016c98 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8016f4c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8016f50:	1a18      	subs	r0, r3, r0
 8016f52:	f8ad 0012 	strh.w	r0, [sp, #18]
 8016f56:	682b      	ldr	r3, [r5, #0]
 8016f58:	4631      	mov	r1, r6
 8016f5a:	689b      	ldr	r3, [r3, #8]
 8016f5c:	4628      	mov	r0, r5
 8016f5e:	4798      	blx	r3
 8016f60:	e717      	b.n	8016d92 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08016f62 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8016f62:	b570      	push	{r4, r5, r6, lr}
 8016f64:	460c      	mov	r4, r1
 8016f66:	b086      	sub	sp, #24
 8016f68:	1d06      	adds	r6, r0, #4
 8016f6a:	2300      	movs	r3, #0
 8016f6c:	4631      	mov	r1, r6
 8016f6e:	4605      	mov	r5, r0
 8016f70:	a802      	add	r0, sp, #8
 8016f72:	9301      	str	r3, [sp, #4]
 8016f74:	f7ff fba8 	bl	80166c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016f78:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016f7c:	8822      	ldrh	r2, [r4, #0]
 8016f7e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8016f82:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8016f86:	f8ad 0014 	strh.w	r0, [sp, #20]
 8016f8a:	1ad2      	subs	r2, r2, r3
 8016f8c:	8863      	ldrh	r3, [r4, #2]
 8016f8e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016f92:	1a5b      	subs	r3, r3, r1
 8016f94:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8016f98:	f8ad 1016 	strh.w	r1, [sp, #22]
 8016f9c:	aa01      	add	r2, sp, #4
 8016f9e:	a904      	add	r1, sp, #16
 8016fa0:	4630      	mov	r0, r6
 8016fa2:	f8ad 3012 	strh.w	r3, [sp, #18]
 8016fa6:	f7f9 f9d1 	bl	801034c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8016faa:	9a01      	ldr	r2, [sp, #4]
 8016fac:	b11a      	cbz	r2, 8016fb6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8016fae:	4621      	mov	r1, r4
 8016fb0:	4628      	mov	r0, r5
 8016fb2:	f7ff fed5 	bl	8016d60 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016fb6:	b006      	add	sp, #24
 8016fb8:	bd70      	pop	{r4, r5, r6, pc}

08016fba <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8016fba:	b530      	push	{r4, r5, lr}
 8016fbc:	4602      	mov	r2, r0
 8016fbe:	4604      	mov	r4, r0
 8016fc0:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8016fc4:	b085      	sub	sp, #20
 8016fc6:	460d      	mov	r5, r1
 8016fc8:	6851      	ldr	r1, [r2, #4]
 8016fca:	466b      	mov	r3, sp
 8016fcc:	c303      	stmia	r3!, {r0, r1}
 8016fce:	4629      	mov	r1, r5
 8016fd0:	4668      	mov	r0, sp
 8016fd2:	f7f9 f8e3 	bl	801019c <_ZN8touchgfx4RectaNERKS0_>
 8016fd6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8016fda:	b12b      	cbz	r3, 8016fe8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8016fdc:	4669      	mov	r1, sp
 8016fde:	4620      	mov	r0, r4
 8016fe0:	f7ff ffbf 	bl	8016f62 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8016fe4:	b005      	add	sp, #20
 8016fe6:	bd30      	pop	{r4, r5, pc}
 8016fe8:	3404      	adds	r4, #4
 8016fea:	4621      	mov	r1, r4
 8016fec:	a802      	add	r0, sp, #8
 8016fee:	f7ff fb6b 	bl	80166c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016ff2:	f8bd 3000 	ldrh.w	r3, [sp]
 8016ff6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8016ffa:	1a9b      	subs	r3, r3, r2
 8016ffc:	f8ad 3000 	strh.w	r3, [sp]
 8017000:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8017004:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8017008:	4669      	mov	r1, sp
 801700a:	1a9b      	subs	r3, r3, r2
 801700c:	4620      	mov	r0, r4
 801700e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8017012:	f7f9 f962 	bl	80102da <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8017016:	e7e5      	b.n	8016fe4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08017018 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8017018:	680a      	ldr	r2, [r1, #0]
 801701a:	460b      	mov	r3, r1
 801701c:	6992      	ldr	r2, [r2, #24]
 801701e:	1d01      	adds	r1, r0, #4
 8017020:	4618      	mov	r0, r3
 8017022:	4710      	bx	r2

08017024 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8017024:	4298      	cmp	r0, r3
 8017026:	d200      	bcs.n	801702a <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8017028:	b913      	cbnz	r3, 8017030 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 801702a:	440a      	add	r2, r1
 801702c:	b210      	sxth	r0, r2
 801702e:	4770      	bx	lr
 8017030:	ee07 0a90 	vmov	s15, r0
 8017034:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8017038:	ee07 3a90 	vmov	s15, r3
 801703c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017040:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8017044:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8017048:	ee37 7a66 	vsub.f32	s14, s14, s13
 801704c:	ee07 2a90 	vmov	s15, r2
 8017050:	ee67 5a07 	vmul.f32	s11, s14, s14
 8017054:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8017058:	eee5 6a87 	vfma.f32	s13, s11, s14
 801705c:	ee07 1a90 	vmov	s15, r1
 8017060:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017064:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8017068:	eee6 7a26 	vfma.f32	s15, s12, s13
 801706c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017070:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017074:	bfcc      	ite	gt
 8017076:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801707a:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801707e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8017082:	ee17 3a90 	vmov	r3, s15
 8017086:	b218      	sxth	r0, r3
 8017088:	4770      	bx	lr

0801708a <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 801708a:	4298      	cmp	r0, r3
 801708c:	d200      	bcs.n	8017090 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 801708e:	b913      	cbnz	r3, 8017096 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 8017090:	440a      	add	r2, r1
 8017092:	b210      	sxth	r0, r2
 8017094:	4770      	bx	lr
 8017096:	ee07 2a90 	vmov	s15, r2
 801709a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801709e:	ee07 0a90 	vmov	s15, r0
 80170a2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80170a6:	ee67 7a27 	vmul.f32	s15, s14, s15
 80170aa:	ee07 3a10 	vmov	s14, r3
 80170ae:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80170b2:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80170b6:	ee07 1a90 	vmov	s15, r1
 80170ba:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80170be:	ee77 7a27 	vadd.f32	s15, s14, s15
 80170c2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80170c6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80170ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80170ce:	bfcc      	ite	gt
 80170d0:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 80170d4:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 80170d8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80170dc:	ee17 3a90 	vmov	r3, s15
 80170e0:	b218      	sxth	r0, r3
 80170e2:	4770      	bx	lr

080170e4 <_ZN8touchgfx12TextProviderC1Ev>:
 80170e4:	b538      	push	{r3, r4, r5, lr}
 80170e6:	2500      	movs	r5, #0
 80170e8:	2302      	movs	r3, #2
 80170ea:	4604      	mov	r4, r0
 80170ec:	e9c0 5500 	strd	r5, r5, [r0]
 80170f0:	7403      	strb	r3, [r0, #16]
 80170f2:	6145      	str	r5, [r0, #20]
 80170f4:	7605      	strb	r5, [r0, #24]
 80170f6:	83c5      	strh	r5, [r0, #30]
 80170f8:	8405      	strh	r5, [r0, #32]
 80170fa:	86c5      	strh	r5, [r0, #54]	; 0x36
 80170fc:	8705      	strh	r5, [r0, #56]	; 0x38
 80170fe:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8017100:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8017104:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8017108:	220e      	movs	r2, #14
 801710a:	4629      	mov	r1, r5
 801710c:	304c      	adds	r0, #76	; 0x4c
 801710e:	f013 f9e6 	bl	802a4de <memset>
 8017112:	2301      	movs	r3, #1
 8017114:	4620      	mov	r0, r4
 8017116:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 801711a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801711e:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8017122:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8017126:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 801712a:	f7f1 f817 	bl	800815c <_ZN8touchgfx12TextProvider18initializeInternalEv>
 801712e:	4620      	mov	r0, r4
 8017130:	bd38      	pop	{r3, r4, r5, pc}

08017132 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8017132:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017134:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017138:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 801713a:	fab0 f080 	clz	r0, r0
 801713e:	0940      	lsrs	r0, r0, #5
 8017140:	4770      	bx	lr

08017142 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8017142:	b530      	push	{r4, r5, lr}
 8017144:	2500      	movs	r5, #0
 8017146:	2401      	movs	r4, #1
 8017148:	6843      	ldr	r3, [r0, #4]
 801714a:	b913      	cbnz	r3, 8017152 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 801714c:	6803      	ldr	r3, [r0, #0]
 801714e:	b313      	cbz	r3, 8017196 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8017150:	6043      	str	r3, [r0, #4]
 8017152:	7e03      	ldrb	r3, [r0, #24]
 8017154:	b143      	cbz	r3, 8017168 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8017156:	6943      	ldr	r3, [r0, #20]
 8017158:	b12b      	cbz	r3, 8017166 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801715a:	881a      	ldrh	r2, [r3, #0]
 801715c:	b11a      	cbz	r2, 8017166 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801715e:	1c9a      	adds	r2, r3, #2
 8017160:	6142      	str	r2, [r0, #20]
 8017162:	8818      	ldrh	r0, [r3, #0]
 8017164:	bd30      	pop	{r4, r5, pc}
 8017166:	7605      	strb	r5, [r0, #24]
 8017168:	6843      	ldr	r3, [r0, #4]
 801716a:	8819      	ldrh	r1, [r3, #0]
 801716c:	b199      	cbz	r1, 8017196 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801716e:	1c9a      	adds	r2, r3, #2
 8017170:	2902      	cmp	r1, #2
 8017172:	6042      	str	r2, [r0, #4]
 8017174:	d1f5      	bne.n	8017162 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8017176:	7c03      	ldrb	r3, [r0, #16]
 8017178:	2b01      	cmp	r3, #1
 801717a:	d8e5      	bhi.n	8017148 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801717c:	1c5a      	adds	r2, r3, #1
 801717e:	3302      	adds	r3, #2
 8017180:	7402      	strb	r2, [r0, #16]
 8017182:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8017186:	6143      	str	r3, [r0, #20]
 8017188:	2b00      	cmp	r3, #0
 801718a:	d0dd      	beq.n	8017148 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801718c:	881b      	ldrh	r3, [r3, #0]
 801718e:	2b00      	cmp	r3, #0
 8017190:	d0da      	beq.n	8017148 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8017192:	7604      	strb	r4, [r0, #24]
 8017194:	e7d8      	b.n	8017148 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8017196:	2000      	movs	r0, #0
 8017198:	e7e4      	b.n	8017164 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0801719a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 801719a:	b430      	push	{r4, r5}
 801719c:	6001      	str	r1, [r0, #0]
 801719e:	2100      	movs	r1, #0
 80171a0:	6041      	str	r1, [r0, #4]
 80171a2:	6815      	ldr	r5, [r2, #0]
 80171a4:	6085      	str	r5, [r0, #8]
 80171a6:	6852      	ldr	r2, [r2, #4]
 80171a8:	6443      	str	r3, [r0, #68]	; 0x44
 80171aa:	9b02      	ldr	r3, [sp, #8]
 80171ac:	60c2      	str	r2, [r0, #12]
 80171ae:	7401      	strb	r1, [r0, #16]
 80171b0:	6141      	str	r1, [r0, #20]
 80171b2:	7601      	strb	r1, [r0, #24]
 80171b4:	8701      	strh	r1, [r0, #56]	; 0x38
 80171b6:	8401      	strh	r1, [r0, #32]
 80171b8:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 80171bc:	6483      	str	r3, [r0, #72]	; 0x48
 80171be:	bc30      	pop	{r4, r5}
 80171c0:	f7f0 bfcc 	b.w	800815c <_ZN8touchgfx12TextProvider18initializeInternalEv>

080171c4 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 80171c4:	b408      	push	{r3}
 80171c6:	b510      	push	{r4, lr}
 80171c8:	b085      	sub	sp, #20
 80171ca:	ac07      	add	r4, sp, #28
 80171cc:	f854 3b04 	ldr.w	r3, [r4], #4
 80171d0:	9300      	str	r3, [sp, #0]
 80171d2:	4613      	mov	r3, r2
 80171d4:	4622      	mov	r2, r4
 80171d6:	9403      	str	r4, [sp, #12]
 80171d8:	f7ff ffdf 	bl	801719a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80171dc:	b005      	add	sp, #20
 80171de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80171e2:	b001      	add	sp, #4
 80171e4:	4770      	bx	lr

080171e6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 80171e6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80171e8:	4605      	mov	r5, r0
 80171ea:	4608      	mov	r0, r1
 80171ec:	b1e9      	cbz	r1, 801722a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 80171ee:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 80171f2:	460b      	mov	r3, r1
 80171f4:	f101 0708 	add.w	r7, r1, #8
 80171f8:	4622      	mov	r2, r4
 80171fa:	6818      	ldr	r0, [r3, #0]
 80171fc:	6859      	ldr	r1, [r3, #4]
 80171fe:	4626      	mov	r6, r4
 8017200:	c603      	stmia	r6!, {r0, r1}
 8017202:	3308      	adds	r3, #8
 8017204:	42bb      	cmp	r3, r7
 8017206:	4634      	mov	r4, r6
 8017208:	d1f7      	bne.n	80171fa <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 801720a:	6818      	ldr	r0, [r3, #0]
 801720c:	6030      	str	r0, [r6, #0]
 801720e:	889b      	ldrh	r3, [r3, #4]
 8017210:	80b3      	strh	r3, [r6, #4]
 8017212:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8017216:	015b      	lsls	r3, r3, #5
 8017218:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801721c:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8017220:	430b      	orrs	r3, r1
 8017222:	425b      	negs	r3, r3
 8017224:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8017228:	4610      	mov	r0, r2
 801722a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801722c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 801722c:	b538      	push	{r3, r4, r5, lr}
 801722e:	460c      	mov	r4, r1
 8017230:	6811      	ldr	r1, [r2, #0]
 8017232:	4610      	mov	r0, r2
 8017234:	68cd      	ldr	r5, [r1, #12]
 8017236:	4619      	mov	r1, r3
 8017238:	47a8      	blx	r5
 801723a:	2800      	cmp	r0, #0
 801723c:	bf08      	it	eq
 801723e:	4620      	moveq	r0, r4
 8017240:	bd38      	pop	{r3, r4, r5, pc}
	...

08017244 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8017244:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017246:	4604      	mov	r4, r0
 8017248:	4615      	mov	r5, r2
 801724a:	4608      	mov	r0, r1
 801724c:	b93a      	cbnz	r2, 801725e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 801724e:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8017252:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8017256:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 801725a:	4628      	mov	r0, r5
 801725c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801725e:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8017262:	8893      	ldrh	r3, [r2, #4]
 8017264:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8017268:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801726c:	79ee      	ldrb	r6, [r5, #7]
 801726e:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8017272:	4316      	orrs	r6, r2
 8017274:	19da      	adds	r2, r3, r7
 8017276:	b291      	uxth	r1, r2
 8017278:	291d      	cmp	r1, #29
 801727a:	b2b7      	uxth	r7, r6
 801727c:	d87a      	bhi.n	8017374 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801727e:	2201      	movs	r2, #1
 8017280:	408a      	lsls	r2, r1
 8017282:	4975      	ldr	r1, [pc, #468]	; (8017458 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8017284:	420a      	tst	r2, r1
 8017286:	ea4f 06e6 	mov.w	r6, r6, asr #3
 801728a:	d12d      	bne.n	80172e8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 801728c:	f412 7f60 	tst.w	r2, #896	; 0x380
 8017290:	d070      	beq.n	8017374 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8017292:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8017296:	462b      	mov	r3, r5
 8017298:	f105 0e08 	add.w	lr, r5, #8
 801729c:	4615      	mov	r5, r2
 801729e:	6818      	ldr	r0, [r3, #0]
 80172a0:	6859      	ldr	r1, [r3, #4]
 80172a2:	4694      	mov	ip, r2
 80172a4:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80172a8:	3308      	adds	r3, #8
 80172aa:	4573      	cmp	r3, lr
 80172ac:	4662      	mov	r2, ip
 80172ae:	d1f6      	bne.n	801729e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 80172b0:	6818      	ldr	r0, [r3, #0]
 80172b2:	f8cc 0000 	str.w	r0, [ip]
 80172b6:	889b      	ldrh	r3, [r3, #4]
 80172b8:	f8ac 3004 	strh.w	r3, [ip, #4]
 80172bc:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 80172c0:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 80172c4:	b2b3      	uxth	r3, r6
 80172c6:	1aca      	subs	r2, r1, r3
 80172c8:	b292      	uxth	r2, r2
 80172ca:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 80172ce:	10d2      	asrs	r2, r2, #3
 80172d0:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 80172d4:	f002 0260 	and.w	r2, r2, #96	; 0x60
 80172d8:	4302      	orrs	r2, r0
 80172da:	1bcf      	subs	r7, r1, r7
 80172dc:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 80172e0:	1afb      	subs	r3, r7, r3
 80172e2:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 80172e6:	e7b8      	b.n	801725a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 80172e8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80172ea:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80172ee:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 80172f0:	f640 6333 	movw	r3, #3635	; 0xe33
 80172f4:	4299      	cmp	r1, r3
 80172f6:	d110      	bne.n	801731a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 80172f8:	6803      	ldr	r3, [r0, #0]
 80172fa:	68db      	ldr	r3, [r3, #12]
 80172fc:	4798      	blx	r3
 80172fe:	7b41      	ldrb	r1, [r0, #13]
 8017300:	00cb      	lsls	r3, r1, #3
 8017302:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017306:	7a03      	ldrb	r3, [r0, #8]
 8017308:	0648      	lsls	r0, r1, #25
 801730a:	ea43 0302 	orr.w	r3, r3, r2
 801730e:	bf44      	itt	mi
 8017310:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017314:	b21b      	sxthmi	r3, r3
 8017316:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801731a:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 801731e:	443b      	add	r3, r7
 8017320:	4433      	add	r3, r6
 8017322:	b29b      	uxth	r3, r3
 8017324:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8017328:	462a      	mov	r2, r5
 801732a:	f105 0c08 	add.w	ip, r5, #8
 801732e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017332:	4635      	mov	r5, r6
 8017334:	6810      	ldr	r0, [r2, #0]
 8017336:	6851      	ldr	r1, [r2, #4]
 8017338:	4637      	mov	r7, r6
 801733a:	c703      	stmia	r7!, {r0, r1}
 801733c:	3208      	adds	r2, #8
 801733e:	4562      	cmp	r2, ip
 8017340:	463e      	mov	r6, r7
 8017342:	d1f7      	bne.n	8017334 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8017344:	6810      	ldr	r0, [r2, #0]
 8017346:	6038      	str	r0, [r7, #0]
 8017348:	8892      	ldrh	r2, [r2, #4]
 801734a:	80ba      	strh	r2, [r7, #4]
 801734c:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8017350:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8017354:	10db      	asrs	r3, r3, #3
 8017356:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801735a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801735e:	4313      	orrs	r3, r2
 8017360:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8017364:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8017368:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 801736c:	1a9b      	subs	r3, r3, r2
 801736e:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8017372:	e772      	b.n	801725a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8017374:	f023 0204 	bic.w	r2, r3, #4
 8017378:	f640 611b 	movw	r1, #3611	; 0xe1b
 801737c:	428a      	cmp	r2, r1
 801737e:	d003      	beq.n	8017388 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8017380:	f640 621d 	movw	r2, #3613	; 0xe1d
 8017384:	4293      	cmp	r3, r2
 8017386:	d120      	bne.n	80173ca <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8017388:	3b01      	subs	r3, #1
 801738a:	4602      	mov	r2, r0
 801738c:	b29b      	uxth	r3, r3
 801738e:	4629      	mov	r1, r5
 8017390:	4620      	mov	r0, r4
 8017392:	f7ff ff4b 	bl	801722c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8017396:	7b41      	ldrb	r1, [r0, #13]
 8017398:	00cb      	lsls	r3, r1, #3
 801739a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801739e:	7a03      	ldrb	r3, [r0, #8]
 80173a0:	0649      	lsls	r1, r1, #25
 80173a2:	ea43 0302 	orr.w	r3, r3, r2
 80173a6:	bf44      	itt	mi
 80173a8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80173ac:	b21b      	sxthmi	r3, r3
 80173ae:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80173b2:	7b6b      	ldrb	r3, [r5, #13]
 80173b4:	7aaa      	ldrb	r2, [r5, #10]
 80173b6:	005b      	lsls	r3, r3, #1
 80173b8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80173bc:	4313      	orrs	r3, r2
 80173be:	115a      	asrs	r2, r3, #5
 80173c0:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 80173c4:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 80173c8:	e036      	b.n	8017438 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 80173ca:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 80173ce:	f402 7180 	and.w	r1, r2, #256	; 0x100
 80173d2:	7a2a      	ldrb	r2, [r5, #8]
 80173d4:	f01c 0f40 	tst.w	ip, #64	; 0x40
 80173d8:	ea42 0201 	orr.w	r2, r2, r1
 80173dc:	bf1c      	itt	ne
 80173de:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 80173e2:	b212      	sxthne	r2, r2
 80173e4:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 80173e8:	f640 6109 	movw	r1, #3593	; 0xe09
 80173ec:	f023 0210 	bic.w	r2, r3, #16
 80173f0:	428a      	cmp	r2, r1
 80173f2:	d003      	beq.n	80173fc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 80173f4:	f640 6213 	movw	r2, #3603	; 0xe13
 80173f8:	4293      	cmp	r3, r2
 80173fa:	d12a      	bne.n	8017452 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 80173fc:	7b6e      	ldrb	r6, [r5, #13]
 80173fe:	0076      	lsls	r6, r6, #1
 8017400:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8017404:	7aae      	ldrb	r6, [r5, #10]
 8017406:	4316      	orrs	r6, r2
 8017408:	f640 6213 	movw	r2, #3603	; 0xe13
 801740c:	4293      	cmp	r3, r2
 801740e:	bf18      	it	ne
 8017410:	f103 33ff 	addne.w	r3, r3, #4294967295
 8017414:	4602      	mov	r2, r0
 8017416:	bf14      	ite	ne
 8017418:	b29b      	uxthne	r3, r3
 801741a:	f640 630c 	movweq	r3, #3596	; 0xe0c
 801741e:	4629      	mov	r1, r5
 8017420:	4620      	mov	r0, r4
 8017422:	f7ff ff03 	bl	801722c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8017426:	7b43      	ldrb	r3, [r0, #13]
 8017428:	7a82      	ldrb	r2, [r0, #10]
 801742a:	005b      	lsls	r3, r3, #1
 801742c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8017430:	4313      	orrs	r3, r2
 8017432:	1af6      	subs	r6, r6, r3
 8017434:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8017438:	7b69      	ldrb	r1, [r5, #13]
 801743a:	00cb      	lsls	r3, r1, #3
 801743c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017440:	7a2b      	ldrb	r3, [r5, #8]
 8017442:	4313      	orrs	r3, r2
 8017444:	064a      	lsls	r2, r1, #25
 8017446:	bf44      	itt	mi
 8017448:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801744c:	b21b      	sxthmi	r3, r3
 801744e:	1bdb      	subs	r3, r3, r7
 8017450:	e747      	b.n	80172e2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8017452:	2300      	movs	r3, #0
 8017454:	e7b6      	b.n	80173c4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8017456:	bf00      	nop
 8017458:	3fc00079 	.word	0x3fc00079

0801745c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 801745c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017460:	4604      	mov	r4, r0
 8017462:	b942      	cbnz	r2, 8017476 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8017464:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8017468:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 801746c:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8017470:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8017474:	e047      	b.n	8017506 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8017476:	7b51      	ldrb	r1, [r2, #13]
 8017478:	8893      	ldrh	r3, [r2, #4]
 801747a:	010d      	lsls	r5, r1, #4
 801747c:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8017480:	79d5      	ldrb	r5, [r2, #7]
 8017482:	4305      	orrs	r5, r0
 8017484:	2d04      	cmp	r5, #4
 8017486:	bfcc      	ite	gt
 8017488:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 801748c:	f04f 0e01 	movle.w	lr, #1
 8017490:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8017494:	f200 80ab 	bhi.w	80175ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8017498:	f240 60e7 	movw	r0, #1767	; 0x6e7
 801749c:	4283      	cmp	r3, r0
 801749e:	d216      	bcs.n	80174ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80174a0:	f240 605b 	movw	r0, #1627	; 0x65b
 80174a4:	4283      	cmp	r3, r0
 80174a6:	d859      	bhi.n	801755c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 80174a8:	f240 6057 	movw	r0, #1623	; 0x657
 80174ac:	4283      	cmp	r3, r0
 80174ae:	d20e      	bcs.n	80174ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80174b0:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 80174b4:	d24a      	bcs.n	801754c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 80174b6:	f240 604e 	movw	r0, #1614	; 0x64e
 80174ba:	4283      	cmp	r3, r0
 80174bc:	d207      	bcs.n	80174ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80174be:	f240 601a 	movw	r0, #1562	; 0x61a
 80174c2:	4283      	cmp	r3, r0
 80174c4:	d02a      	beq.n	801751c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80174c6:	d821      	bhi.n	801750c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 80174c8:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 80174cc:	d35b      	bcc.n	8017586 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80174ce:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 80174d2:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80174d6:	f040 80d0 	bne.w	801767a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 80174da:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 80174de:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80174e2:	f040 80ca 	bne.w	801767a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 80174e6:	00cb      	lsls	r3, r1, #3
 80174e8:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80174ec:	7a13      	ldrb	r3, [r2, #8]
 80174ee:	0649      	lsls	r1, r1, #25
 80174f0:	ea43 0300 	orr.w	r3, r3, r0
 80174f4:	bf44      	itt	mi
 80174f6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80174fa:	b21b      	sxthmi	r3, r3
 80174fc:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017500:	1b5d      	subs	r5, r3, r5
 8017502:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017506:	4610      	mov	r0, r2
 8017508:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801750c:	f240 604b 	movw	r0, #1611	; 0x64b
 8017510:	4283      	cmp	r3, r0
 8017512:	d338      	bcc.n	8017586 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8017514:	f240 604c 	movw	r0, #1612	; 0x64c
 8017518:	4283      	cmp	r3, r0
 801751a:	d9d8      	bls.n	80174ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801751c:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8017520:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8017524:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017528:	f040 80f2 	bne.w	8017710 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801752c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017530:	f040 80ee 	bne.w	8017710 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8017534:	00cb      	lsls	r3, r1, #3
 8017536:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801753a:	7a13      	ldrb	r3, [r2, #8]
 801753c:	064e      	lsls	r6, r1, #25
 801753e:	ea43 0300 	orr.w	r3, r3, r0
 8017542:	bf44      	itt	mi
 8017544:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017548:	b21b      	sxthmi	r3, r3
 801754a:	e7d9      	b.n	8017500 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 801754c:	f240 6054 	movw	r0, #1620	; 0x654
 8017550:	4283      	cmp	r3, r0
 8017552:	d8e3      	bhi.n	801751c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017554:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8017558:	d9e0      	bls.n	801751c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801755a:	e7b8      	b.n	80174ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801755c:	f240 6074 	movw	r0, #1652	; 0x674
 8017560:	4283      	cmp	r3, r0
 8017562:	d0b4      	beq.n	80174ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017564:	d82d      	bhi.n	80175c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8017566:	f240 605e 	movw	r0, #1630	; 0x65e
 801756a:	4283      	cmp	r3, r0
 801756c:	d804      	bhi.n	8017578 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 801756e:	f240 605d 	movw	r0, #1629	; 0x65d
 8017572:	4283      	cmp	r3, r0
 8017574:	d3d2      	bcc.n	801751c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017576:	e7aa      	b.n	80174ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017578:	f240 605f 	movw	r0, #1631	; 0x65f
 801757c:	4283      	cmp	r3, r0
 801757e:	d0cd      	beq.n	801751c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017580:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8017584:	d0a3      	beq.n	80174ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017586:	00cb      	lsls	r3, r1, #3
 8017588:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801758c:	7a13      	ldrb	r3, [r2, #8]
 801758e:	0649      	lsls	r1, r1, #25
 8017590:	ea43 0300 	orr.w	r3, r3, r0
 8017594:	bf44      	itt	mi
 8017596:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801759a:	b21b      	sxthmi	r3, r3
 801759c:	1b5d      	subs	r5, r3, r5
 801759e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80175a2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80175a6:	7b53      	ldrb	r3, [r2, #13]
 80175a8:	015b      	lsls	r3, r3, #5
 80175aa:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80175ae:	7993      	ldrb	r3, [r2, #6]
 80175b0:	430b      	orrs	r3, r1
 80175b2:	005b      	lsls	r3, r3, #1
 80175b4:	2105      	movs	r1, #5
 80175b6:	fb93 f3f1 	sdiv	r3, r3, r1
 80175ba:	f992 1009 	ldrsb.w	r1, [r2, #9]
 80175be:	440b      	add	r3, r1
 80175c0:	e756      	b.n	8017470 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 80175c2:	f240 60e2 	movw	r0, #1762	; 0x6e2
 80175c6:	4283      	cmp	r3, r0
 80175c8:	d809      	bhi.n	80175de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 80175ca:	f240 60df 	movw	r0, #1759	; 0x6df
 80175ce:	4283      	cmp	r3, r0
 80175d0:	f4bf af7d 	bcs.w	80174ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80175d4:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 80175d8:	2b05      	cmp	r3, #5
 80175da:	d8d4      	bhi.n	8017586 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80175dc:	e777      	b.n	80174ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80175de:	f240 60e3 	movw	r0, #1763	; 0x6e3
 80175e2:	4283      	cmp	r3, r0
 80175e4:	d09a      	beq.n	801751c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80175e6:	f240 60e4 	movw	r0, #1764	; 0x6e4
 80175ea:	4283      	cmp	r3, r0
 80175ec:	e7ca      	b.n	8017584 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 80175ee:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 80175f2:	d22b      	bcs.n	801764c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 80175f4:	f640 00ed 	movw	r0, #2285	; 0x8ed
 80175f8:	4283      	cmp	r3, r0
 80175fa:	d28f      	bcs.n	801751c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80175fc:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8017600:	4283      	cmp	r3, r0
 8017602:	d816      	bhi.n	8017632 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8017604:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8017608:	4283      	cmp	r3, r0
 801760a:	f4bf af60 	bcs.w	80174ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801760e:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8017612:	4283      	cmp	r3, r0
 8017614:	d80a      	bhi.n	801762c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8017616:	f240 60eb 	movw	r0, #1771	; 0x6eb
 801761a:	4283      	cmp	r3, r0
 801761c:	f4bf af57 	bcs.w	80174ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017620:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8017624:	4283      	cmp	r3, r0
 8017626:	f43f af79 	beq.w	801751c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801762a:	e7ac      	b.n	8017586 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801762c:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8017630:	e7f8      	b.n	8017624 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8017632:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8017636:	4283      	cmp	r3, r0
 8017638:	d802      	bhi.n	8017640 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 801763a:	f640 00e7 	movw	r0, #2279	; 0x8e7
 801763e:	e798      	b.n	8017572 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8017640:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8017644:	4283      	cmp	r3, r0
 8017646:	f47f af42 	bne.w	80174ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801764a:	e767      	b.n	801751c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801764c:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8017650:	4283      	cmp	r3, r0
 8017652:	f43f af63 	beq.w	801751c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017656:	d802      	bhi.n	801765e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8017658:	f640 00f2 	movw	r0, #2290	; 0x8f2
 801765c:	e7f2      	b.n	8017644 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 801765e:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8017662:	4283      	cmp	r3, r0
 8017664:	d805      	bhi.n	8017672 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8017666:	f640 00f9 	movw	r0, #2297	; 0x8f9
 801766a:	4283      	cmp	r3, r0
 801766c:	f4ff af2f 	bcc.w	80174ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017670:	e754      	b.n	801751c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017672:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8017676:	4283      	cmp	r3, r0
 8017678:	e7af      	b.n	80175da <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 801767a:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801767e:	4617      	mov	r7, r2
 8017680:	f102 0808 	add.w	r8, r2, #8
 8017684:	4666      	mov	r6, ip
 8017686:	6838      	ldr	r0, [r7, #0]
 8017688:	6879      	ldr	r1, [r7, #4]
 801768a:	46e6      	mov	lr, ip
 801768c:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8017690:	3708      	adds	r7, #8
 8017692:	4547      	cmp	r7, r8
 8017694:	46f4      	mov	ip, lr
 8017696:	d1f6      	bne.n	8017686 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8017698:	6838      	ldr	r0, [r7, #0]
 801769a:	f8ce 0000 	str.w	r0, [lr]
 801769e:	88b9      	ldrh	r1, [r7, #4]
 80176a0:	f8ae 1004 	strh.w	r1, [lr, #4]
 80176a4:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 80176a8:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80176ac:	d009      	beq.n	80176c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 80176ae:	7b51      	ldrb	r1, [r2, #13]
 80176b0:	7992      	ldrb	r2, [r2, #6]
 80176b2:	0149      	lsls	r1, r1, #5
 80176b4:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80176b8:	4311      	orrs	r1, r2
 80176ba:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80176be:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 80176c2:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80176c6:	b2ad      	uxth	r5, r5
 80176c8:	d00d      	beq.n	80176e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 80176ca:	442b      	add	r3, r5
 80176cc:	b29b      	uxth	r3, r3
 80176ce:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80176d2:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80176d6:	10db      	asrs	r3, r3, #3
 80176d8:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80176dc:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80176e0:	4313      	orrs	r3, r2
 80176e2:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80176e6:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 80176ea:	00cb      	lsls	r3, r1, #3
 80176ec:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80176f0:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 80176f4:	064f      	lsls	r7, r1, #25
 80176f6:	ea43 0302 	orr.w	r3, r3, r2
 80176fa:	bf44      	itt	mi
 80176fc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017700:	b21b      	sxthmi	r3, r3
 8017702:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017706:	1b5b      	subs	r3, r3, r5
 8017708:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801770c:	4632      	mov	r2, r6
 801770e:	e6fa      	b.n	8017506 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8017710:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8017714:	4617      	mov	r7, r2
 8017716:	f102 0908 	add.w	r9, r2, #8
 801771a:	4666      	mov	r6, ip
 801771c:	6838      	ldr	r0, [r7, #0]
 801771e:	6879      	ldr	r1, [r7, #4]
 8017720:	46e0      	mov	r8, ip
 8017722:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8017726:	3708      	adds	r7, #8
 8017728:	454f      	cmp	r7, r9
 801772a:	46c4      	mov	ip, r8
 801772c:	d1f6      	bne.n	801771c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 801772e:	6838      	ldr	r0, [r7, #0]
 8017730:	f8c8 0000 	str.w	r0, [r8]
 8017734:	88b9      	ldrh	r1, [r7, #4]
 8017736:	f8a8 1004 	strh.w	r1, [r8, #4]
 801773a:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801773e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017742:	d009      	beq.n	8017758 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8017744:	7b51      	ldrb	r1, [r2, #13]
 8017746:	7992      	ldrb	r2, [r2, #6]
 8017748:	0149      	lsls	r1, r1, #5
 801774a:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801774e:	4311      	orrs	r1, r2
 8017750:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8017754:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8017758:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801775c:	d00e      	beq.n	801777c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 801775e:	eba3 030e 	sub.w	r3, r3, lr
 8017762:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8017766:	b29b      	uxth	r3, r3
 8017768:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801776c:	10db      	asrs	r3, r3, #3
 801776e:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8017772:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8017776:	4313      	orrs	r3, r2
 8017778:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801777c:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8017780:	00cb      	lsls	r3, r1, #3
 8017782:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017786:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801778a:	0648      	lsls	r0, r1, #25
 801778c:	ea43 0302 	orr.w	r3, r3, r2
 8017790:	bf44      	itt	mi
 8017792:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017796:	b21b      	sxthmi	r3, r3
 8017798:	1b5d      	subs	r5, r3, r5
 801779a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801779e:	e7b5      	b.n	801770c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

080177a0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 80177a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80177a4:	461e      	mov	r6, r3
 80177a6:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80177a8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80177ac:	4604      	mov	r4, r0
 80177ae:	4617      	mov	r7, r2
 80177b0:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80177b4:	f7f0 fc90 	bl	80080d8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80177b8:	4605      	mov	r5, r0
 80177ba:	b918      	cbnz	r0, 80177c4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 80177bc:	6030      	str	r0, [r6, #0]
 80177be:	4628      	mov	r0, r5
 80177c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80177c4:	683b      	ldr	r3, [r7, #0]
 80177c6:	4601      	mov	r1, r0
 80177c8:	68db      	ldr	r3, [r3, #12]
 80177ca:	4638      	mov	r0, r7
 80177cc:	4798      	blx	r3
 80177ce:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80177d2:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80177d6:	4602      	mov	r2, r0
 80177d8:	6030      	str	r0, [r6, #0]
 80177da:	d213      	bcs.n	8017804 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 80177dc:	4643      	mov	r3, r8
 80177de:	4639      	mov	r1, r7
 80177e0:	4620      	mov	r0, r4
 80177e2:	f7ff fe3b 	bl	801745c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80177e6:	6030      	str	r0, [r6, #0]
 80177e8:	6833      	ldr	r3, [r6, #0]
 80177ea:	b143      	cbz	r3, 80177fe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 80177ec:	7b5a      	ldrb	r2, [r3, #13]
 80177ee:	7a9b      	ldrb	r3, [r3, #10]
 80177f0:	0052      	lsls	r2, r2, #1
 80177f2:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80177f6:	4313      	orrs	r3, r2
 80177f8:	bf0c      	ite	eq
 80177fa:	2301      	moveq	r3, #1
 80177fc:	2300      	movne	r3, #0
 80177fe:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8017802:	e7dc      	b.n	80177be <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8017804:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8017808:	b29b      	uxth	r3, r3
 801780a:	2b7f      	cmp	r3, #127	; 0x7f
 801780c:	d804      	bhi.n	8017818 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801780e:	4639      	mov	r1, r7
 8017810:	4620      	mov	r0, r4
 8017812:	f7ff fd17 	bl	8017244 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8017816:	e7e6      	b.n	80177e6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8017818:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801781c:	2b00      	cmp	r3, #0
 801781e:	d0e3      	beq.n	80177e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8017820:	f640 1302 	movw	r3, #2306	; 0x902
 8017824:	429d      	cmp	r5, r3
 8017826:	d1df      	bne.n	80177e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8017828:	4601      	mov	r1, r0
 801782a:	4620      	mov	r0, r4
 801782c:	f7ff fcdb 	bl	80171e6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8017830:	e7d9      	b.n	80177e6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08017832 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8017832:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8017836:	461e      	mov	r6, r3
 8017838:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801783a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801783e:	4604      	mov	r4, r0
 8017840:	4617      	mov	r7, r2
 8017842:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8017846:	f7f0 fc47 	bl	80080d8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801784a:	4605      	mov	r5, r0
 801784c:	b918      	cbnz	r0, 8017856 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801784e:	6030      	str	r0, [r6, #0]
 8017850:	4628      	mov	r0, r5
 8017852:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8017856:	683b      	ldr	r3, [r7, #0]
 8017858:	4601      	mov	r1, r0
 801785a:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801785e:	4638      	mov	r0, r7
 8017860:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8017864:	47c8      	blx	r9
 8017866:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801786a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801786e:	4602      	mov	r2, r0
 8017870:	6030      	str	r0, [r6, #0]
 8017872:	d213      	bcs.n	801789c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8017874:	4643      	mov	r3, r8
 8017876:	4639      	mov	r1, r7
 8017878:	4620      	mov	r0, r4
 801787a:	f7ff fdef 	bl	801745c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801787e:	6030      	str	r0, [r6, #0]
 8017880:	6833      	ldr	r3, [r6, #0]
 8017882:	b143      	cbz	r3, 8017896 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8017884:	7b5a      	ldrb	r2, [r3, #13]
 8017886:	7a9b      	ldrb	r3, [r3, #10]
 8017888:	0052      	lsls	r2, r2, #1
 801788a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801788e:	4313      	orrs	r3, r2
 8017890:	bf0c      	ite	eq
 8017892:	2301      	moveq	r3, #1
 8017894:	2300      	movne	r3, #0
 8017896:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801789a:	e7d9      	b.n	8017850 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 801789c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80178a0:	b29b      	uxth	r3, r3
 80178a2:	2b7f      	cmp	r3, #127	; 0x7f
 80178a4:	d804      	bhi.n	80178b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 80178a6:	4639      	mov	r1, r7
 80178a8:	4620      	mov	r0, r4
 80178aa:	f7ff fccb 	bl	8017244 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80178ae:	e7e6      	b.n	801787e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 80178b0:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80178b4:	2b00      	cmp	r3, #0
 80178b6:	d0e3      	beq.n	8017880 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80178b8:	f640 1302 	movw	r3, #2306	; 0x902
 80178bc:	429d      	cmp	r5, r3
 80178be:	d1df      	bne.n	8017880 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80178c0:	4601      	mov	r1, r0
 80178c2:	4620      	mov	r0, r4
 80178c4:	f7ff fc8f 	bl	80171e6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80178c8:	e7d9      	b.n	801787e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

080178ca <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 80178ca:	b510      	push	{r4, lr}
 80178cc:	4604      	mov	r4, r0
 80178ce:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 80178d2:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80178d4:	b1f1      	cbz	r1, 8017914 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80178d6:	2b0a      	cmp	r3, #10
 80178d8:	d02f      	beq.n	801793a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80178da:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 80178dc:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 80178e0:	3901      	subs	r1, #1
 80178e2:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 80178e4:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 80178e8:	1c51      	adds	r1, r2, #1
 80178ea:	b289      	uxth	r1, r1
 80178ec:	2901      	cmp	r1, #1
 80178ee:	bf84      	itt	hi
 80178f0:	f102 32ff 	addhi.w	r2, r2, #4294967295
 80178f4:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 80178f6:	f103 0201 	add.w	r2, r3, #1
 80178fa:	8722      	strh	r2, [r4, #56]	; 0x38
 80178fc:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80178fe:	bf98      	it	ls
 8017900:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 8017902:	4413      	add	r3, r2
 8017904:	b29b      	uxth	r3, r3
 8017906:	2b09      	cmp	r3, #9
 8017908:	bf88      	it	hi
 801790a:	3b0a      	subhi	r3, #10
 801790c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8017910:	8458      	strh	r0, [r3, #34]	; 0x22
 8017912:	e7dc      	b.n	80178ce <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8017914:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8017916:	2b0a      	cmp	r3, #10
 8017918:	d00f      	beq.n	801793a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801791a:	4620      	mov	r0, r4
 801791c:	f7ff fc11 	bl	8017142 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8017920:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8017922:	1c5a      	adds	r2, r3, #1
 8017924:	8722      	strh	r2, [r4, #56]	; 0x38
 8017926:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8017928:	4413      	add	r3, r2
 801792a:	b29b      	uxth	r3, r3
 801792c:	2b09      	cmp	r3, #9
 801792e:	bf88      	it	hi
 8017930:	3b0a      	subhi	r3, #10
 8017932:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8017936:	8458      	strh	r0, [r3, #34]	; 0x22
 8017938:	e7ec      	b.n	8017914 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801793a:	bd10      	pop	{r4, pc}

0801793c <_ZN8touchgfx12TextProvider11getNextCharEv>:
 801793c:	b538      	push	{r3, r4, r5, lr}
 801793e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017940:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8017944:	4604      	mov	r4, r0
 8017946:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8017948:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 801794a:	3a01      	subs	r2, #1
 801794c:	8702      	strh	r2, [r0, #56]	; 0x38
 801794e:	1c5a      	adds	r2, r3, #1
 8017950:	b292      	uxth	r2, r2
 8017952:	2a09      	cmp	r2, #9
 8017954:	bf86      	itte	hi
 8017956:	3b09      	subhi	r3, #9
 8017958:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 801795a:	86c2      	strhls	r2, [r0, #54]	; 0x36
 801795c:	f7ff ffb5 	bl	80178ca <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8017960:	8c23      	ldrh	r3, [r4, #32]
 8017962:	2b01      	cmp	r3, #1
 8017964:	bf9c      	itt	ls
 8017966:	3301      	addls	r3, #1
 8017968:	8423      	strhls	r3, [r4, #32]
 801796a:	8be3      	ldrh	r3, [r4, #30]
 801796c:	b90b      	cbnz	r3, 8017972 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801796e:	2302      	movs	r3, #2
 8017970:	83e3      	strh	r3, [r4, #30]
 8017972:	8be3      	ldrh	r3, [r4, #30]
 8017974:	3b01      	subs	r3, #1
 8017976:	b29b      	uxth	r3, r3
 8017978:	83e3      	strh	r3, [r4, #30]
 801797a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801797e:	4628      	mov	r0, r5
 8017980:	8365      	strh	r5, [r4, #26]
 8017982:	bd38      	pop	{r3, r4, r5, pc}

08017984 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8017984:	428a      	cmp	r2, r1
 8017986:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801798a:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 801798c:	d931      	bls.n	80179f2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 801798e:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8017990:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 8017994:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8017998:	19ee      	adds	r6, r5, r7
 801799a:	1a54      	subs	r4, r2, r1
 801799c:	3e01      	subs	r6, #1
 801799e:	fa1f fe84 	uxth.w	lr, r4
 80179a2:	b2b4      	uxth	r4, r6
 80179a4:	eba4 090e 	sub.w	r9, r4, lr
 80179a8:	fa1f f989 	uxth.w	r9, r9
 80179ac:	2c09      	cmp	r4, #9
 80179ae:	4626      	mov	r6, r4
 80179b0:	bf88      	it	hi
 80179b2:	f1a4 060a 	subhi.w	r6, r4, #10
 80179b6:	f1bc 0f00 	cmp.w	ip, #0
 80179ba:	bf08      	it	eq
 80179bc:	f04f 0c02 	moveq.w	ip, #2
 80179c0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80179c4:	f10c 3cff 	add.w	ip, ip, #4294967295
 80179c8:	fa1f fc8c 	uxth.w	ip, ip
 80179cc:	3c01      	subs	r4, #1
 80179ce:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 80179d2:	b2a4      	uxth	r4, r4
 80179d4:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 80179d8:	454c      	cmp	r4, r9
 80179da:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 80179de:	d1e5      	bne.n	80179ac <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 80179e0:	eba5 050e 	sub.w	r5, r5, lr
 80179e4:	eb0e 0408 	add.w	r4, lr, r8
 80179e8:	8705      	strh	r5, [r0, #56]	; 0x38
 80179ea:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 80179ee:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 80179f2:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 80179f4:	1a64      	subs	r4, r4, r1
 80179f6:	4439      	add	r1, r7
 80179f8:	b289      	uxth	r1, r1
 80179fa:	2909      	cmp	r1, #9
 80179fc:	bf88      	it	hi
 80179fe:	390a      	subhi	r1, #10
 8017a00:	8704      	strh	r4, [r0, #56]	; 0x38
 8017a02:	86c1      	strh	r1, [r0, #54]	; 0x36
 8017a04:	250a      	movs	r5, #10
 8017a06:	b18a      	cbz	r2, 8017a2c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8017a08:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8017a0a:	3a01      	subs	r2, #1
 8017a0c:	b292      	uxth	r2, r2
 8017a0e:	3101      	adds	r1, #1
 8017a10:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8017a14:	8701      	strh	r1, [r0, #56]	; 0x38
 8017a16:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8017a18:	b901      	cbnz	r1, 8017a1c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 8017a1a:	86c5      	strh	r5, [r0, #54]	; 0x36
 8017a1c:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8017a1e:	3901      	subs	r1, #1
 8017a20:	b289      	uxth	r1, r1
 8017a22:	86c1      	strh	r1, [r0, #54]	; 0x36
 8017a24:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8017a28:	844c      	strh	r4, [r1, #34]	; 0x22
 8017a2a:	e7ec      	b.n	8017a06 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8017a2c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017a30:	f7ff bf4b 	b.w	80178ca <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08017a34 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8017a34:	b570      	push	{r4, r5, r6, lr}
 8017a36:	2500      	movs	r5, #0
 8017a38:	4295      	cmp	r5, r2
 8017a3a:	d011      	beq.n	8017a60 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8017a3c:	8bc4      	ldrh	r4, [r0, #30]
 8017a3e:	f831 6b02 	ldrh.w	r6, [r1], #2
 8017a42:	4414      	add	r4, r2
 8017a44:	3c01      	subs	r4, #1
 8017a46:	1b64      	subs	r4, r4, r5
 8017a48:	b2a4      	uxth	r4, r4
 8017a4a:	2c01      	cmp	r4, #1
 8017a4c:	bf88      	it	hi
 8017a4e:	3c02      	subhi	r4, #2
 8017a50:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8017a54:	8b64      	ldrh	r4, [r4, #26]
 8017a56:	42b4      	cmp	r4, r6
 8017a58:	d117      	bne.n	8017a8a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8017a5a:	3501      	adds	r5, #1
 8017a5c:	b2ad      	uxth	r5, r5
 8017a5e:	e7eb      	b.n	8017a38 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8017a60:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8017a64:	2400      	movs	r4, #0
 8017a66:	4413      	add	r3, r2
 8017a68:	b2a2      	uxth	r2, r4
 8017a6a:	429a      	cmp	r2, r3
 8017a6c:	da0f      	bge.n	8017a8e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8017a6e:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8017a70:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8017a74:	4432      	add	r2, r6
 8017a76:	b292      	uxth	r2, r2
 8017a78:	2a09      	cmp	r2, #9
 8017a7a:	bf88      	it	hi
 8017a7c:	3a0a      	subhi	r2, #10
 8017a7e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017a82:	3401      	adds	r4, #1
 8017a84:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8017a86:	42aa      	cmp	r2, r5
 8017a88:	d0ee      	beq.n	8017a68 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8017a8a:	2000      	movs	r0, #0
 8017a8c:	bd70      	pop	{r4, r5, r6, pc}
 8017a8e:	2001      	movs	r0, #1
 8017a90:	e7fc      	b.n	8017a8c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08017a92 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8017a92:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017a96:	4605      	mov	r5, r0
 8017a98:	4616      	mov	r6, r2
 8017a9a:	1c8c      	adds	r4, r1, #2
 8017a9c:	8809      	ldrh	r1, [r1, #0]
 8017a9e:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8017aa2:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8017aa6:	42b3      	cmp	r3, r6
 8017aa8:	d124      	bne.n	8017af4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8017aaa:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8017aae:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8017ab2:	f001 070f 	and.w	r7, r1, #15
 8017ab6:	f8cd 8000 	str.w	r8, [sp]
 8017aba:	464b      	mov	r3, r9
 8017abc:	4652      	mov	r2, sl
 8017abe:	4621      	mov	r1, r4
 8017ac0:	4628      	mov	r0, r5
 8017ac2:	f7ff ffb7 	bl	8017a34 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8017ac6:	4683      	mov	fp, r0
 8017ac8:	b168      	cbz	r0, 8017ae6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8017aca:	eb0a 0109 	add.w	r1, sl, r9
 8017ace:	4441      	add	r1, r8
 8017ad0:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8017ad4:	463a      	mov	r2, r7
 8017ad6:	4649      	mov	r1, r9
 8017ad8:	4628      	mov	r0, r5
 8017ada:	f7ff ff53 	bl	8017984 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8017ade:	4658      	mov	r0, fp
 8017ae0:	b003      	add	sp, #12
 8017ae2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017ae6:	eb07 010a 	add.w	r1, r7, sl
 8017aea:	4449      	add	r1, r9
 8017aec:	4441      	add	r1, r8
 8017aee:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8017af2:	e7d2      	b.n	8017a9a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8017af4:	f04f 0b00 	mov.w	fp, #0
 8017af8:	e7f1      	b.n	8017ade <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08017afa <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8017afa:	b570      	push	{r4, r5, r6, lr}
 8017afc:	8810      	ldrh	r0, [r2, #0]
 8017afe:	4298      	cmp	r0, r3
 8017b00:	d817      	bhi.n	8017b32 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8017b02:	1e48      	subs	r0, r1, #1
 8017b04:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8017b08:	4298      	cmp	r0, r3
 8017b0a:	d312      	bcc.n	8017b32 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8017b0c:	2400      	movs	r4, #0
 8017b0e:	428c      	cmp	r4, r1
 8017b10:	d20f      	bcs.n	8017b32 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8017b12:	1860      	adds	r0, r4, r1
 8017b14:	1040      	asrs	r0, r0, #1
 8017b16:	0085      	lsls	r5, r0, #2
 8017b18:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8017b1c:	42b3      	cmp	r3, r6
 8017b1e:	d902      	bls.n	8017b26 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8017b20:	3001      	adds	r0, #1
 8017b22:	b284      	uxth	r4, r0
 8017b24:	e7f3      	b.n	8017b0e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8017b26:	d201      	bcs.n	8017b2c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8017b28:	b281      	uxth	r1, r0
 8017b2a:	e7f0      	b.n	8017b0e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8017b2c:	442a      	add	r2, r5
 8017b2e:	8850      	ldrh	r0, [r2, #2]
 8017b30:	bd70      	pop	{r4, r5, r6, pc}
 8017b32:	2000      	movs	r0, #0
 8017b34:	e7fc      	b.n	8017b30 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08017b36 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8017b36:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017b3a:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8017b3c:	886f      	ldrh	r7, [r5, #2]
 8017b3e:	4604      	mov	r4, r0
 8017b40:	087f      	lsrs	r7, r7, #1
 8017b42:	260b      	movs	r6, #11
 8017b44:	3e01      	subs	r6, #1
 8017b46:	d013      	beq.n	8017b70 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8017b48:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8017b4a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8017b4e:	462a      	mov	r2, r5
 8017b50:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8017b54:	4639      	mov	r1, r7
 8017b56:	4643      	mov	r3, r8
 8017b58:	4620      	mov	r0, r4
 8017b5a:	f7ff ffce 	bl	8017afa <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8017b5e:	b138      	cbz	r0, 8017b70 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8017b60:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8017b64:	4642      	mov	r2, r8
 8017b66:	4620      	mov	r0, r4
 8017b68:	f7ff ff93 	bl	8017a92 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8017b6c:	2800      	cmp	r0, #0
 8017b6e:	d1e9      	bne.n	8017b44 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8017b70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08017b74 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8017b74:	b570      	push	{r4, r5, r6, lr}
 8017b76:	694a      	ldr	r2, [r1, #20]
 8017b78:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8017b7a:	684b      	ldr	r3, [r1, #4]
 8017b7c:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8017b7e:	1b54      	subs	r4, r2, r5
 8017b80:	f000 8106 	beq.w	8017d90 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8017b84:	1b9b      	subs	r3, r3, r6
 8017b86:	d003      	beq.n	8017b90 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8017b88:	4363      	muls	r3, r4
 8017b8a:	2210      	movs	r2, #16
 8017b8c:	fb93 f3f2 	sdiv	r3, r3, r2
 8017b90:	680c      	ldr	r4, [r1, #0]
 8017b92:	698a      	ldr	r2, [r1, #24]
 8017b94:	1b65      	subs	r5, r4, r5
 8017b96:	f000 80fd 	beq.w	8017d94 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8017b9a:	1b92      	subs	r2, r2, r6
 8017b9c:	d003      	beq.n	8017ba6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8017b9e:	436a      	muls	r2, r5
 8017ba0:	2410      	movs	r4, #16
 8017ba2:	fb92 f2f4 	sdiv	r2, r2, r4
 8017ba6:	1a9b      	subs	r3, r3, r2
 8017ba8:	ee07 3a90 	vmov	s15, r3
 8017bac:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8017dd0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8017bb0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017bb4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017bb8:	ee67 7a84 	vmul.f32	s15, s15, s8
 8017bbc:	460a      	mov	r2, r1
 8017bbe:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8017bc2:	4603      	mov	r3, r0
 8017bc4:	f100 040c 	add.w	r4, r0, #12
 8017bc8:	eeb1 6a43 	vneg.f32	s12, s6
 8017bcc:	edd2 7a02 	vldr	s15, [r2, #8]
 8017bd0:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8017bd4:	3214      	adds	r2, #20
 8017bd6:	ece3 6a01 	vstmia	r3!, {s13}
 8017bda:	ed52 7a02 	vldr	s15, [r2, #-8]
 8017bde:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8017be2:	429c      	cmp	r4, r3
 8017be4:	edc3 7a02 	vstr	s15, [r3, #8]
 8017be8:	ed52 7a01 	vldr	s15, [r2, #-4]
 8017bec:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8017bf0:	edc3 7a05 	vstr	s15, [r3, #20]
 8017bf4:	d1ea      	bne.n	8017bcc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8017bf6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017bf8:	698b      	ldr	r3, [r1, #24]
 8017bfa:	edd0 4a02 	vldr	s9, [r0, #8]
 8017bfe:	edd0 3a00 	vldr	s7, [r0]
 8017c02:	edd0 6a01 	vldr	s13, [r0, #4]
 8017c06:	ed90 5a05 	vldr	s10, [r0, #20]
 8017c0a:	ed90 2a03 	vldr	s4, [r0, #12]
 8017c0e:	edd0 5a04 	vldr	s11, [r0, #16]
 8017c12:	ed90 1a07 	vldr	s2, [r0, #28]
 8017c16:	edd0 2a06 	vldr	s5, [r0, #24]
 8017c1a:	1a9b      	subs	r3, r3, r2
 8017c1c:	ee07 3a90 	vmov	s15, r3
 8017c20:	684b      	ldr	r3, [r1, #4]
 8017c22:	1a9b      	subs	r3, r3, r2
 8017c24:	ee07 3a10 	vmov	s14, r3
 8017c28:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017c2c:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8017c30:	ee67 7a84 	vmul.f32	s15, s15, s8
 8017c34:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8017c38:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017c3c:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8017c40:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017c44:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8017c48:	eee6 7a87 	vfma.f32	s15, s13, s14
 8017c4c:	ee32 5a45 	vsub.f32	s10, s4, s10
 8017c50:	ee67 7a83 	vmul.f32	s15, s15, s6
 8017c54:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8017c58:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8017c5a:	694a      	ldr	r2, [r1, #20]
 8017c5c:	1b13      	subs	r3, r2, r4
 8017c5e:	ee07 3a10 	vmov	s14, r3
 8017c62:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017c66:	680b      	ldr	r3, [r1, #0]
 8017c68:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017c6c:	1b1b      	subs	r3, r3, r4
 8017c6e:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8017c72:	ee07 3a10 	vmov	s14, r3
 8017c76:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017c7a:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017c7e:	eee6 4a87 	vfma.f32	s9, s13, s14
 8017c82:	ee64 4a86 	vmul.f32	s9, s9, s12
 8017c86:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8017c8a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017c8c:	698b      	ldr	r3, [r1, #24]
 8017c8e:	1a9b      	subs	r3, r3, r2
 8017c90:	ee06 3a90 	vmov	s13, r3
 8017c94:	684b      	ldr	r3, [r1, #4]
 8017c96:	1a9b      	subs	r3, r3, r2
 8017c98:	ee07 3a10 	vmov	s14, r3
 8017c9c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8017ca0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017ca4:	ee66 6a84 	vmul.f32	s13, s13, s8
 8017ca8:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017cac:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8017cb0:	eee5 6a87 	vfma.f32	s13, s11, s14
 8017cb4:	ee66 6a83 	vmul.f32	s13, s13, s6
 8017cb8:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8017cbc:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8017cbe:	694a      	ldr	r2, [r1, #20]
 8017cc0:	1b13      	subs	r3, r2, r4
 8017cc2:	ee07 3a10 	vmov	s14, r3
 8017cc6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017cca:	680b      	ldr	r3, [r1, #0]
 8017ccc:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017cd0:	1b1b      	subs	r3, r3, r4
 8017cd2:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8017cd6:	ee07 3a10 	vmov	s14, r3
 8017cda:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017cde:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017ce2:	eea5 5a87 	vfma.f32	s10, s11, s14
 8017ce6:	edd0 5a08 	vldr	s11, [r0, #32]
 8017cea:	ee25 5a06 	vmul.f32	s10, s10, s12
 8017cee:	ee31 1a65 	vsub.f32	s2, s2, s11
 8017cf2:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8017cf6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017cf8:	698b      	ldr	r3, [r1, #24]
 8017cfa:	1a9b      	subs	r3, r3, r2
 8017cfc:	ee07 3a10 	vmov	s14, r3
 8017d00:	684b      	ldr	r3, [r1, #4]
 8017d02:	1a9b      	subs	r3, r3, r2
 8017d04:	ee01 3a90 	vmov	s3, r3
 8017d08:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017d0c:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8017d10:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017d14:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8017d18:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8017d1c:	ee61 1a84 	vmul.f32	s3, s3, s8
 8017d20:	eea1 7a21 	vfma.f32	s14, s2, s3
 8017d24:	ee27 7a03 	vmul.f32	s14, s14, s6
 8017d28:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8017d2c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8017d2e:	694a      	ldr	r2, [r1, #20]
 8017d30:	1b13      	subs	r3, r2, r4
 8017d32:	ee03 3a10 	vmov	s6, r3
 8017d36:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8017d3a:	680b      	ldr	r3, [r1, #0]
 8017d3c:	ee23 3a04 	vmul.f32	s6, s6, s8
 8017d40:	1b1b      	subs	r3, r3, r4
 8017d42:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8017d46:	ee03 3a10 	vmov	s6, r3
 8017d4a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8017d4e:	ee23 4a04 	vmul.f32	s8, s6, s8
 8017d52:	eee1 5a04 	vfma.f32	s11, s2, s8
 8017d56:	ee25 6a86 	vmul.f32	s12, s11, s12
 8017d5a:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8017d5e:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8017d62:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8017d66:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8017d6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017d6e:	dd13      	ble.n	8017d98 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8017d70:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8017d74:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8017d78:	63c3      	str	r3, [r0, #60]	; 0x3c
 8017d7a:	eee3 7a87 	vfma.f32	s15, s7, s14
 8017d7e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017d82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017d86:	dd15      	ble.n	8017db4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8017d88:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8017d8c:	6403      	str	r3, [r0, #64]	; 0x40
 8017d8e:	bd70      	pop	{r4, r5, r6, pc}
 8017d90:	4623      	mov	r3, r4
 8017d92:	e6fd      	b.n	8017b90 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8017d94:	462a      	mov	r2, r5
 8017d96:	e706      	b.n	8017ba6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8017d98:	d502      	bpl.n	8017da0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8017d9a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8017d9e:	e7e9      	b.n	8017d74 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8017da0:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8017da4:	eea3 2a85 	vfma.f32	s4, s7, s10
 8017da8:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8017dac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017db0:	dade      	bge.n	8017d70 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8017db2:	e7f2      	b.n	8017d9a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8017db4:	d502      	bpl.n	8017dbc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8017db6:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8017dba:	e7e7      	b.n	8017d8c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8017dbc:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8017dc0:	eee3 4a86 	vfma.f32	s9, s7, s12
 8017dc4:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8017dc8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017dcc:	dadc      	bge.n	8017d88 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8017dce:	e7f2      	b.n	8017db6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8017dd0:	3d800000 	.word	0x3d800000

08017dd4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8017dd4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017dd8:	2714      	movs	r7, #20
 8017dda:	435f      	muls	r7, r3
 8017ddc:	eb02 0c07 	add.w	ip, r2, r7
 8017de0:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8017de4:	f115 0e0f 	adds.w	lr, r5, #15
 8017de8:	f100 80a2 	bmi.w	8017f30 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8017dec:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8017df0:	9c08      	ldr	r4, [sp, #32]
 8017df2:	f8c0 e014 	str.w	lr, [r0, #20]
 8017df6:	2614      	movs	r6, #20
 8017df8:	4366      	muls	r6, r4
 8017dfa:	eb02 0806 	add.w	r8, r2, r6
 8017dfe:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8017e02:	f115 040f 	adds.w	r4, r5, #15
 8017e06:	f100 809f 	bmi.w	8017f48 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8017e0a:	1124      	asrs	r4, r4, #4
 8017e0c:	eba4 040e 	sub.w	r4, r4, lr
 8017e10:	6184      	str	r4, [r0, #24]
 8017e12:	2c00      	cmp	r4, #0
 8017e14:	f000 808a 	beq.w	8017f2c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8017e18:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8017e1c:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8017e20:	5995      	ldr	r5, [r2, r6]
 8017e22:	eba4 0809 	sub.w	r8, r4, r9
 8017e26:	59d4      	ldr	r4, [r2, r7]
 8017e28:	eba5 0a04 	sub.w	sl, r5, r4
 8017e2c:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8017e30:	fb0e fe05 	mul.w	lr, lr, r5
 8017e34:	fb0a ee19 	mls	lr, sl, r9, lr
 8017e38:	fb08 e404 	mla	r4, r8, r4, lr
 8017e3c:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8017e40:	3c01      	subs	r4, #1
 8017e42:	19a4      	adds	r4, r4, r6
 8017e44:	f100 808c 	bmi.w	8017f60 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8017e48:	fb94 fef6 	sdiv	lr, r4, r6
 8017e4c:	f8c0 e000 	str.w	lr, [r0]
 8017e50:	fb06 441e 	mls	r4, r6, lr, r4
 8017e54:	6104      	str	r4, [r0, #16]
 8017e56:	2d00      	cmp	r5, #0
 8017e58:	f2c0 8095 	blt.w	8017f86 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8017e5c:	fb95 f4f6 	sdiv	r4, r5, r6
 8017e60:	6044      	str	r4, [r0, #4]
 8017e62:	fb06 5514 	mls	r5, r6, r4, r5
 8017e66:	6085      	str	r5, [r0, #8]
 8017e68:	60c6      	str	r6, [r0, #12]
 8017e6a:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8017e6e:	6945      	ldr	r5, [r0, #20]
 8017e70:	59d2      	ldr	r2, [r2, r7]
 8017e72:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8017fa8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8017e76:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8017e7a:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8017e7e:	ee07 4a10 	vmov	s14, r4
 8017e82:	6804      	ldr	r4, [r0, #0]
 8017e84:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8017e88:	ee07 2a90 	vmov	s15, r2
 8017e8c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017e90:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017e94:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8017e98:	ee27 7a26 	vmul.f32	s14, s14, s13
 8017e9c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8017ea0:	edd3 6a00 	vldr	s13, [r3]
 8017ea4:	eee6 6a07 	vfma.f32	s13, s12, s14
 8017ea8:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8017eac:	eee6 6a27 	vfma.f32	s13, s12, s15
 8017eb0:	edc0 6a07 	vstr	s13, [r0, #28]
 8017eb4:	edd0 6a01 	vldr	s13, [r0, #4]
 8017eb8:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8017ebc:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8017ec0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8017ec4:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8017ec8:	ed80 6a08 	vstr	s12, [r0, #32]
 8017ecc:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8017ece:	6242      	str	r2, [r0, #36]	; 0x24
 8017ed0:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8017ed4:	ed93 6a03 	vldr	s12, [r3, #12]
 8017ed8:	eea5 6a87 	vfma.f32	s12, s11, s14
 8017edc:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8017ee0:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8017ee4:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8017ee8:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8017eec:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8017ef0:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8017ef4:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8017ef8:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017efa:	6302      	str	r2, [r0, #48]	; 0x30
 8017efc:	ed93 6a06 	vldr	s12, [r3, #24]
 8017f00:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8017f04:	eea5 6a87 	vfma.f32	s12, s11, s14
 8017f08:	eeb0 7a46 	vmov.f32	s14, s12
 8017f0c:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8017f10:	eea6 7a27 	vfma.f32	s14, s12, s15
 8017f14:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8017f18:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8017f1c:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8017f20:	eee6 7a87 	vfma.f32	s15, s13, s14
 8017f24:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8017f28:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8017f2a:	63c3      	str	r3, [r0, #60]	; 0x3c
 8017f2c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017f30:	f1c5 0501 	rsb	r5, r5, #1
 8017f34:	f015 050f 	ands.w	r5, r5, #15
 8017f38:	bf18      	it	ne
 8017f3a:	2501      	movne	r5, #1
 8017f3c:	2410      	movs	r4, #16
 8017f3e:	fb9e fef4 	sdiv	lr, lr, r4
 8017f42:	ebae 0e05 	sub.w	lr, lr, r5
 8017f46:	e753      	b.n	8017df0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8017f48:	f1c5 0501 	rsb	r5, r5, #1
 8017f4c:	f015 050f 	ands.w	r5, r5, #15
 8017f50:	bf18      	it	ne
 8017f52:	2501      	movne	r5, #1
 8017f54:	f04f 0910 	mov.w	r9, #16
 8017f58:	fb94 f4f9 	sdiv	r4, r4, r9
 8017f5c:	1b64      	subs	r4, r4, r5
 8017f5e:	e755      	b.n	8017e0c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8017f60:	4264      	negs	r4, r4
 8017f62:	fb94 fef6 	sdiv	lr, r4, r6
 8017f66:	f1ce 0800 	rsb	r8, lr, #0
 8017f6a:	fb06 441e 	mls	r4, r6, lr, r4
 8017f6e:	f8c0 8000 	str.w	r8, [r0]
 8017f72:	6104      	str	r4, [r0, #16]
 8017f74:	2c00      	cmp	r4, #0
 8017f76:	f43f af6e 	beq.w	8017e56 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8017f7a:	ea6f 0e0e 	mvn.w	lr, lr
 8017f7e:	f8c0 e000 	str.w	lr, [r0]
 8017f82:	1b34      	subs	r4, r6, r4
 8017f84:	e766      	b.n	8017e54 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8017f86:	426d      	negs	r5, r5
 8017f88:	fb95 f4f6 	sdiv	r4, r5, r6
 8017f8c:	f1c4 0e00 	rsb	lr, r4, #0
 8017f90:	fb06 5514 	mls	r5, r6, r4, r5
 8017f94:	f8c0 e004 	str.w	lr, [r0, #4]
 8017f98:	6085      	str	r5, [r0, #8]
 8017f9a:	2d00      	cmp	r5, #0
 8017f9c:	f43f af64 	beq.w	8017e68 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8017fa0:	43e4      	mvns	r4, r4
 8017fa2:	6044      	str	r4, [r0, #4]
 8017fa4:	1b75      	subs	r5, r6, r5
 8017fa6:	e75e      	b.n	8017e66 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8017fa8:	3d800000 	.word	0x3d800000

08017fac <_ZN8touchgfx7Unicode6strlenEPKt>:
 8017fac:	4602      	mov	r2, r0
 8017fae:	b148      	cbz	r0, 8017fc4 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8017fb0:	2300      	movs	r3, #0
 8017fb2:	b298      	uxth	r0, r3
 8017fb4:	3301      	adds	r3, #1
 8017fb6:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8017fba:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8017fbe:	2900      	cmp	r1, #0
 8017fc0:	d1f7      	bne.n	8017fb2 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8017fc2:	4770      	bx	lr
 8017fc4:	4770      	bx	lr

08017fc6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8017fc6:	b530      	push	{r4, r5, lr}
 8017fc8:	4604      	mov	r4, r0
 8017fca:	b159      	cbz	r1, 8017fe4 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8017fcc:	b148      	cbz	r0, 8017fe2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8017fce:	2300      	movs	r3, #0
 8017fd0:	b298      	uxth	r0, r3
 8017fd2:	4282      	cmp	r2, r0
 8017fd4:	d905      	bls.n	8017fe2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8017fd6:	5ccd      	ldrb	r5, [r1, r3]
 8017fd8:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8017fdc:	3301      	adds	r3, #1
 8017fde:	2d00      	cmp	r5, #0
 8017fe0:	d1f6      	bne.n	8017fd0 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8017fe2:	bd30      	pop	{r4, r5, pc}
 8017fe4:	4608      	mov	r0, r1
 8017fe6:	e7fc      	b.n	8017fe2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08017fe8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8017fe8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017fea:	b08b      	sub	sp, #44	; 0x2c
 8017fec:	468c      	mov	ip, r1
 8017fee:	2100      	movs	r1, #0
 8017ff0:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8017ff4:	4604      	mov	r4, r0
 8017ff6:	261f      	movs	r6, #31
 8017ff8:	af01      	add	r7, sp, #4
 8017ffa:	fb94 fef3 	sdiv	lr, r4, r3
 8017ffe:	fb03 441e 	mls	r4, r3, lr, r4
 8018002:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8018006:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 801800a:	b2ec      	uxtb	r4, r5
 801800c:	2d09      	cmp	r5, #9
 801800e:	bfd4      	ite	le
 8018010:	3430      	addle	r4, #48	; 0x30
 8018012:	3457      	addgt	r4, #87	; 0x57
 8018014:	b2e4      	uxtb	r4, r4
 8018016:	55bc      	strb	r4, [r7, r6]
 8018018:	4674      	mov	r4, lr
 801801a:	1e71      	subs	r1, r6, #1
 801801c:	b974      	cbnz	r4, 801803c <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 801801e:	2800      	cmp	r0, #0
 8018020:	da05      	bge.n	801802e <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 8018022:	ab0a      	add	r3, sp, #40	; 0x28
 8018024:	4419      	add	r1, r3
 8018026:	232d      	movs	r3, #45	; 0x2d
 8018028:	f801 3c24 	strb.w	r3, [r1, #-36]
 801802c:	1eb1      	subs	r1, r6, #2
 801802e:	3101      	adds	r1, #1
 8018030:	4439      	add	r1, r7
 8018032:	4660      	mov	r0, ip
 8018034:	f7ff ffc7 	bl	8017fc6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8018038:	b00b      	add	sp, #44	; 0x2c
 801803a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801803c:	460e      	mov	r6, r1
 801803e:	e7dc      	b.n	8017ffa <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08018040 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8018040:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018042:	b08b      	sub	sp, #44	; 0x2c
 8018044:	468c      	mov	ip, r1
 8018046:	2100      	movs	r1, #0
 8018048:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801804c:	ae01      	add	r6, sp, #4
 801804e:	211f      	movs	r1, #31
 8018050:	fbb0 f7f3 	udiv	r7, r0, r3
 8018054:	fb03 0517 	mls	r5, r3, r7, r0
 8018058:	b2ec      	uxtb	r4, r5
 801805a:	2d09      	cmp	r5, #9
 801805c:	bfd4      	ite	le
 801805e:	3430      	addle	r4, #48	; 0x30
 8018060:	3457      	addgt	r4, #87	; 0x57
 8018062:	b2e4      	uxtb	r4, r4
 8018064:	558c      	strb	r4, [r1, r6]
 8018066:	4638      	mov	r0, r7
 8018068:	1e4c      	subs	r4, r1, #1
 801806a:	b92f      	cbnz	r7, 8018078 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 801806c:	4431      	add	r1, r6
 801806e:	4660      	mov	r0, ip
 8018070:	f7ff ffa9 	bl	8017fc6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8018074:	b00b      	add	sp, #44	; 0x2c
 8018076:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8018078:	4621      	mov	r1, r4
 801807a:	e7e9      	b.n	8018050 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

0801807c <_ZN8touchgfx7Unicode4itoaElPtti>:
 801807c:	b410      	push	{r4}
 801807e:	b131      	cbz	r1, 801808e <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8018080:	1e9c      	subs	r4, r3, #2
 8018082:	2c22      	cmp	r4, #34	; 0x22
 8018084:	d803      	bhi.n	801808e <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8018086:	f85d 4b04 	ldr.w	r4, [sp], #4
 801808a:	f7ff bfad 	b.w	8017fe8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 801808e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8018092:	4770      	bx	lr

08018094 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8018094:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018098:	4691      	mov	r9, r2
 801809a:	b085      	sub	sp, #20
 801809c:	6802      	ldr	r2, [r0, #0]
 801809e:	9201      	str	r2, [sp, #4]
 80180a0:	4688      	mov	r8, r1
 80180a2:	4683      	mov	fp, r0
 80180a4:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 80180a8:	9103      	str	r1, [sp, #12]
 80180aa:	4610      	mov	r0, r2
 80180ac:	461c      	mov	r4, r3
 80180ae:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 80180b2:	9302      	str	r3, [sp, #8]
 80180b4:	f7ff ff7a 	bl	8017fac <_ZN8touchgfx7Unicode6strlenEPKt>
 80180b8:	f1b8 0f00 	cmp.w	r8, #0
 80180bc:	bf0c      	ite	eq
 80180be:	4684      	moveq	ip, r0
 80180c0:	f100 0c01 	addne.w	ip, r0, #1
 80180c4:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 80180c8:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 80180cc:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80180ce:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80180d0:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 80180d4:	9903      	ldr	r1, [sp, #12]
 80180d6:	fa1f fc8c 	uxth.w	ip, ip
 80180da:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 80180de:	d041      	beq.n	8018164 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 80180e0:	d834      	bhi.n	801814c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 80180e2:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 80180e6:	d059      	beq.n	801819c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 80180e8:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 80180ec:	d03a      	beq.n	8018164 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 80180ee:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 80180f2:	d034      	beq.n	801815e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 80180f4:	2400      	movs	r4, #0
 80180f6:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 80180fa:	3a01      	subs	r2, #1
 80180fc:	b169      	cbz	r1, 801811a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80180fe:	9911      	ldr	r1, [sp, #68]	; 0x44
 8018100:	458c      	cmp	ip, r1
 8018102:	da09      	bge.n	8018118 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8018104:	eba1 010c 	sub.w	r1, r1, ip
 8018108:	b289      	uxth	r1, r1
 801810a:	b933      	cbnz	r3, 801811a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801810c:	2e00      	cmp	r6, #0
 801810e:	d051      	beq.n	80181b4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8018110:	2800      	cmp	r0, #0
 8018112:	d04f      	beq.n	80181b4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8018114:	440c      	add	r4, r1
 8018116:	b2a4      	uxth	r4, r4
 8018118:	2100      	movs	r1, #0
 801811a:	682b      	ldr	r3, [r5, #0]
 801811c:	4293      	cmp	r3, r2
 801811e:	da07      	bge.n	8018130 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8018120:	f1b8 0f00 	cmp.w	r8, #0
 8018124:	d004      	beq.n	8018130 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8018126:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 801812a:	682b      	ldr	r3, [r5, #0]
 801812c:	3301      	adds	r3, #1
 801812e:	602b      	str	r3, [r5, #0]
 8018130:	2730      	movs	r7, #48	; 0x30
 8018132:	2c00      	cmp	r4, #0
 8018134:	d04e      	beq.n	80181d4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8018136:	682e      	ldr	r6, [r5, #0]
 8018138:	3c01      	subs	r4, #1
 801813a:	42b2      	cmp	r2, r6
 801813c:	b2a4      	uxth	r4, r4
 801813e:	dd49      	ble.n	80181d4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8018140:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8018144:	682b      	ldr	r3, [r5, #0]
 8018146:	3301      	adds	r3, #1
 8018148:	602b      	str	r3, [r5, #0]
 801814a:	e7f2      	b.n	8018132 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 801814c:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8018150:	d01d      	beq.n	801818e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8018152:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8018156:	d002      	beq.n	801815e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8018158:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 801815c:	e7c9      	b.n	80180f2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 801815e:	4684      	mov	ip, r0
 8018160:	f04f 0800 	mov.w	r8, #0
 8018164:	2c00      	cmp	r4, #0
 8018166:	d0c6      	beq.n	80180f6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018168:	b947      	cbnz	r7, 801817c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801816a:	2801      	cmp	r0, #1
 801816c:	d106      	bne.n	801817c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801816e:	8814      	ldrh	r4, [r2, #0]
 8018170:	2c30      	cmp	r4, #48	; 0x30
 8018172:	bf02      	ittt	eq
 8018174:	3202      	addeq	r2, #2
 8018176:	f8cb 2000 	streq.w	r2, [fp]
 801817a:	4638      	moveq	r0, r7
 801817c:	45bc      	cmp	ip, r7
 801817e:	da14      	bge.n	80181aa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8018180:	b2bf      	uxth	r7, r7
 8018182:	eba7 040c 	sub.w	r4, r7, ip
 8018186:	b2a4      	uxth	r4, r4
 8018188:	46bc      	mov	ip, r7
 801818a:	2600      	movs	r6, #0
 801818c:	e7b3      	b.n	80180f6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801818e:	4684      	mov	ip, r0
 8018190:	b16c      	cbz	r4, 80181ae <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8018192:	42b8      	cmp	r0, r7
 8018194:	dd00      	ble.n	8018198 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8018196:	b2b8      	uxth	r0, r7
 8018198:	2400      	movs	r4, #0
 801819a:	e003      	b.n	80181a4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 801819c:	f04f 0c01 	mov.w	ip, #1
 80181a0:	2400      	movs	r4, #0
 80181a2:	4660      	mov	r0, ip
 80181a4:	4626      	mov	r6, r4
 80181a6:	46a0      	mov	r8, r4
 80181a8:	e7a5      	b.n	80180f6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80181aa:	2400      	movs	r4, #0
 80181ac:	e7ed      	b.n	801818a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 80181ae:	4626      	mov	r6, r4
 80181b0:	46a0      	mov	r8, r4
 80181b2:	e7a0      	b.n	80180f6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80181b4:	2900      	cmp	r1, #0
 80181b6:	d0b0      	beq.n	801811a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80181b8:	2720      	movs	r7, #32
 80181ba:	682e      	ldr	r6, [r5, #0]
 80181bc:	2900      	cmp	r1, #0
 80181be:	d0ac      	beq.n	801811a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80181c0:	3901      	subs	r1, #1
 80181c2:	4296      	cmp	r6, r2
 80181c4:	b289      	uxth	r1, r1
 80181c6:	daa7      	bge.n	8018118 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 80181c8:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80181cc:	682b      	ldr	r3, [r5, #0]
 80181ce:	3301      	adds	r3, #1
 80181d0:	602b      	str	r3, [r5, #0]
 80181d2:	e7f2      	b.n	80181ba <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 80181d4:	b188      	cbz	r0, 80181fa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 80181d6:	682b      	ldr	r3, [r5, #0]
 80181d8:	3801      	subs	r0, #1
 80181da:	429a      	cmp	r2, r3
 80181dc:	b280      	uxth	r0, r0
 80181de:	dd0c      	ble.n	80181fa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 80181e0:	f8db 3000 	ldr.w	r3, [fp]
 80181e4:	1c9c      	adds	r4, r3, #2
 80181e6:	f8cb 4000 	str.w	r4, [fp]
 80181ea:	881c      	ldrh	r4, [r3, #0]
 80181ec:	682b      	ldr	r3, [r5, #0]
 80181ee:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 80181f2:	682b      	ldr	r3, [r5, #0]
 80181f4:	3301      	adds	r3, #1
 80181f6:	602b      	str	r3, [r5, #0]
 80181f8:	e7ec      	b.n	80181d4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80181fa:	2620      	movs	r6, #32
 80181fc:	b151      	cbz	r1, 8018214 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 80181fe:	6828      	ldr	r0, [r5, #0]
 8018200:	3901      	subs	r1, #1
 8018202:	4282      	cmp	r2, r0
 8018204:	b289      	uxth	r1, r1
 8018206:	dd05      	ble.n	8018214 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8018208:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 801820c:	682b      	ldr	r3, [r5, #0]
 801820e:	3301      	adds	r3, #1
 8018210:	602b      	str	r3, [r5, #0]
 8018212:	e7f3      	b.n	80181fc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8018214:	b005      	add	sp, #20
 8018216:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801821a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 801821a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801821e:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8018222:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8018226:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 801822a:	2400      	movs	r4, #0
 801822c:	8014      	strh	r4, [r2, #0]
 801822e:	701c      	strb	r4, [r3, #0]
 8018230:	f888 4000 	strb.w	r4, [r8]
 8018234:	f88c 4000 	strb.w	r4, [ip]
 8018238:	f88e 4000 	strb.w	r4, [lr]
 801823c:	703c      	strb	r4, [r7, #0]
 801823e:	6804      	ldr	r4, [r0, #0]
 8018240:	b1a4      	cbz	r4, 801826c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8018242:	8824      	ldrh	r4, [r4, #0]
 8018244:	f04f 0901 	mov.w	r9, #1
 8018248:	b314      	cbz	r4, 8018290 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801824a:	2c2b      	cmp	r4, #43	; 0x2b
 801824c:	d001      	beq.n	8018252 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 801824e:	2c20      	cmp	r4, #32
 8018250:	d110      	bne.n	8018274 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8018252:	8014      	strh	r4, [r2, #0]
 8018254:	6804      	ldr	r4, [r0, #0]
 8018256:	b10c      	cbz	r4, 801825c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8018258:	3402      	adds	r4, #2
 801825a:	6004      	str	r4, [r0, #0]
 801825c:	680c      	ldr	r4, [r1, #0]
 801825e:	b10c      	cbz	r4, 8018264 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8018260:	3401      	adds	r4, #1
 8018262:	600c      	str	r4, [r1, #0]
 8018264:	6804      	ldr	r4, [r0, #0]
 8018266:	b17c      	cbz	r4, 8018288 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8018268:	8824      	ldrh	r4, [r4, #0]
 801826a:	e7ed      	b.n	8018248 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801826c:	680c      	ldr	r4, [r1, #0]
 801826e:	b17c      	cbz	r4, 8018290 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8018270:	7824      	ldrb	r4, [r4, #0]
 8018272:	e7e7      	b.n	8018244 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8018274:	2c2d      	cmp	r4, #45	; 0x2d
 8018276:	d102      	bne.n	801827e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8018278:	f883 9000 	strb.w	r9, [r3]
 801827c:	e7ea      	b.n	8018254 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801827e:	2c23      	cmp	r4, #35	; 0x23
 8018280:	d107      	bne.n	8018292 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8018282:	f888 9000 	strb.w	r9, [r8]
 8018286:	e7e5      	b.n	8018254 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8018288:	680c      	ldr	r4, [r1, #0]
 801828a:	b10c      	cbz	r4, 8018290 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801828c:	7824      	ldrb	r4, [r4, #0]
 801828e:	e7db      	b.n	8018248 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8018290:	2400      	movs	r4, #0
 8018292:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8018296:	2b09      	cmp	r3, #9
 8018298:	d901      	bls.n	801829e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 801829a:	2c2a      	cmp	r4, #42	; 0x2a
 801829c:	d122      	bne.n	80182e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801829e:	2301      	movs	r3, #1
 80182a0:	2c30      	cmp	r4, #48	; 0x30
 80182a2:	f88e 3000 	strb.w	r3, [lr]
 80182a6:	d10d      	bne.n	80182c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 80182a8:	f88c 3000 	strb.w	r3, [ip]
 80182ac:	6803      	ldr	r3, [r0, #0]
 80182ae:	b10b      	cbz	r3, 80182b4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 80182b0:	3302      	adds	r3, #2
 80182b2:	6003      	str	r3, [r0, #0]
 80182b4:	680b      	ldr	r3, [r1, #0]
 80182b6:	b10b      	cbz	r3, 80182bc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 80182b8:	3301      	adds	r3, #1
 80182ba:	600b      	str	r3, [r1, #0]
 80182bc:	6803      	ldr	r3, [r0, #0]
 80182be:	2b00      	cmp	r3, #0
 80182c0:	d02f      	beq.n	8018322 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 80182c2:	881c      	ldrh	r4, [r3, #0]
 80182c4:	2c2a      	cmp	r4, #42	; 0x2a
 80182c6:	d135      	bne.n	8018334 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 80182c8:	f04f 33ff 	mov.w	r3, #4294967295
 80182cc:	6033      	str	r3, [r6, #0]
 80182ce:	6803      	ldr	r3, [r0, #0]
 80182d0:	b10b      	cbz	r3, 80182d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 80182d2:	3302      	adds	r3, #2
 80182d4:	6003      	str	r3, [r0, #0]
 80182d6:	680b      	ldr	r3, [r1, #0]
 80182d8:	b10b      	cbz	r3, 80182de <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 80182da:	3301      	adds	r3, #1
 80182dc:	600b      	str	r3, [r1, #0]
 80182de:	6803      	ldr	r3, [r0, #0]
 80182e0:	b31b      	cbz	r3, 801832a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 80182e2:	881c      	ldrh	r4, [r3, #0]
 80182e4:	2c2e      	cmp	r4, #46	; 0x2e
 80182e6:	d11a      	bne.n	801831e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 80182e8:	2301      	movs	r3, #1
 80182ea:	703b      	strb	r3, [r7, #0]
 80182ec:	6803      	ldr	r3, [r0, #0]
 80182ee:	b10b      	cbz	r3, 80182f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 80182f0:	3302      	adds	r3, #2
 80182f2:	6003      	str	r3, [r0, #0]
 80182f4:	680b      	ldr	r3, [r1, #0]
 80182f6:	b10b      	cbz	r3, 80182fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 80182f8:	3301      	adds	r3, #1
 80182fa:	600b      	str	r3, [r1, #0]
 80182fc:	6803      	ldr	r3, [r0, #0]
 80182fe:	2b00      	cmp	r3, #0
 8018300:	d036      	beq.n	8018370 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8018302:	881b      	ldrh	r3, [r3, #0]
 8018304:	2b2a      	cmp	r3, #42	; 0x2a
 8018306:	d137      	bne.n	8018378 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8018308:	f04f 33ff 	mov.w	r3, #4294967295
 801830c:	602b      	str	r3, [r5, #0]
 801830e:	6803      	ldr	r3, [r0, #0]
 8018310:	b10b      	cbz	r3, 8018316 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8018312:	3302      	adds	r3, #2
 8018314:	6003      	str	r3, [r0, #0]
 8018316:	680b      	ldr	r3, [r1, #0]
 8018318:	b10b      	cbz	r3, 801831e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801831a:	3301      	adds	r3, #1
 801831c:	600b      	str	r3, [r1, #0]
 801831e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018322:	680c      	ldr	r4, [r1, #0]
 8018324:	b134      	cbz	r4, 8018334 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8018326:	7824      	ldrb	r4, [r4, #0]
 8018328:	e7cc      	b.n	80182c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801832a:	680b      	ldr	r3, [r1, #0]
 801832c:	2b00      	cmp	r3, #0
 801832e:	d0f6      	beq.n	801831e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8018330:	781c      	ldrb	r4, [r3, #0]
 8018332:	e7d7      	b.n	80182e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8018334:	2300      	movs	r3, #0
 8018336:	6033      	str	r3, [r6, #0]
 8018338:	220a      	movs	r2, #10
 801833a:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 801833e:	fa1f f38c 	uxth.w	r3, ip
 8018342:	2b09      	cmp	r3, #9
 8018344:	d8ce      	bhi.n	80182e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8018346:	6833      	ldr	r3, [r6, #0]
 8018348:	fb02 c303 	mla	r3, r2, r3, ip
 801834c:	6033      	str	r3, [r6, #0]
 801834e:	6803      	ldr	r3, [r0, #0]
 8018350:	b10b      	cbz	r3, 8018356 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8018352:	3302      	adds	r3, #2
 8018354:	6003      	str	r3, [r0, #0]
 8018356:	680b      	ldr	r3, [r1, #0]
 8018358:	b10b      	cbz	r3, 801835e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 801835a:	3301      	adds	r3, #1
 801835c:	600b      	str	r3, [r1, #0]
 801835e:	6803      	ldr	r3, [r0, #0]
 8018360:	b10b      	cbz	r3, 8018366 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8018362:	881c      	ldrh	r4, [r3, #0]
 8018364:	e7e9      	b.n	801833a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8018366:	680c      	ldr	r4, [r1, #0]
 8018368:	2c00      	cmp	r4, #0
 801836a:	d0e6      	beq.n	801833a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801836c:	7824      	ldrb	r4, [r4, #0]
 801836e:	e7e4      	b.n	801833a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8018370:	680b      	ldr	r3, [r1, #0]
 8018372:	b10b      	cbz	r3, 8018378 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8018374:	781b      	ldrb	r3, [r3, #0]
 8018376:	e7c5      	b.n	8018304 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8018378:	2200      	movs	r2, #0
 801837a:	602a      	str	r2, [r5, #0]
 801837c:	240a      	movs	r4, #10
 801837e:	3b30      	subs	r3, #48	; 0x30
 8018380:	b29e      	uxth	r6, r3
 8018382:	2e09      	cmp	r6, #9
 8018384:	682a      	ldr	r2, [r5, #0]
 8018386:	d813      	bhi.n	80183b0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8018388:	fb04 3302 	mla	r3, r4, r2, r3
 801838c:	602b      	str	r3, [r5, #0]
 801838e:	6803      	ldr	r3, [r0, #0]
 8018390:	b10b      	cbz	r3, 8018396 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8018392:	3302      	adds	r3, #2
 8018394:	6003      	str	r3, [r0, #0]
 8018396:	680b      	ldr	r3, [r1, #0]
 8018398:	b10b      	cbz	r3, 801839e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 801839a:	3301      	adds	r3, #1
 801839c:	600b      	str	r3, [r1, #0]
 801839e:	6803      	ldr	r3, [r0, #0]
 80183a0:	b10b      	cbz	r3, 80183a6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 80183a2:	881b      	ldrh	r3, [r3, #0]
 80183a4:	e7eb      	b.n	801837e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80183a6:	680b      	ldr	r3, [r1, #0]
 80183a8:	2b00      	cmp	r3, #0
 80183aa:	d0e8      	beq.n	801837e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80183ac:	781b      	ldrb	r3, [r3, #0]
 80183ae:	e7e6      	b.n	801837e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80183b0:	2a06      	cmp	r2, #6
 80183b2:	bfa8      	it	ge
 80183b4:	2206      	movge	r2, #6
 80183b6:	602a      	str	r2, [r5, #0]
 80183b8:	e7b1      	b.n	801831e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

080183ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 80183ba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80183be:	b0a3      	sub	sp, #140	; 0x8c
 80183c0:	2600      	movs	r6, #0
 80183c2:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 80183c6:	4607      	mov	r7, r0
 80183c8:	4688      	mov	r8, r1
 80183ca:	e9cd 3208 	strd	r3, r2, [sp, #32]
 80183ce:	4631      	mov	r1, r6
 80183d0:	2242      	movs	r2, #66	; 0x42
 80183d2:	4648      	mov	r0, r9
 80183d4:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 80183d6:	960d      	str	r6, [sp, #52]	; 0x34
 80183d8:	f012 f881 	bl	802a4de <memset>
 80183dc:	b15f      	cbz	r7, 80183f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 80183de:	f108 3aff 	add.w	sl, r8, #4294967295
 80183e2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80183e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80183e6:	b152      	cbz	r2, 80183fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 80183e8:	8812      	ldrh	r2, [r2, #0]
 80183ea:	b10a      	cbz	r2, 80183f0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 80183ec:	459a      	cmp	sl, r3
 80183ee:	dc2e      	bgt.n	801844e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 80183f0:	2200      	movs	r2, #0
 80183f2:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80183f6:	4638      	mov	r0, r7
 80183f8:	b023      	add	sp, #140	; 0x8c
 80183fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80183fe:	9a08      	ldr	r2, [sp, #32]
 8018400:	2a00      	cmp	r2, #0
 8018402:	d0f5      	beq.n	80183f0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8018404:	7812      	ldrb	r2, [r2, #0]
 8018406:	e7f0      	b.n	80183ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8018408:	2d00      	cmp	r5, #0
 801840a:	d0ea      	beq.n	80183e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801840c:	782a      	ldrb	r2, [r5, #0]
 801840e:	b142      	cbz	r2, 8018422 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8018410:	2a25      	cmp	r2, #37	; 0x25
 8018412:	d001      	beq.n	8018418 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8018414:	459a      	cmp	sl, r3
 8018416:	dc08      	bgt.n	801842a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8018418:	f1bb 0f00 	cmp.w	fp, #0
 801841c:	d121      	bne.n	8018462 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 801841e:	2d00      	cmp	r5, #0
 8018420:	d0df      	beq.n	80183e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018422:	782a      	ldrb	r2, [r5, #0]
 8018424:	f04f 0b00 	mov.w	fp, #0
 8018428:	e01d      	b.n	8018466 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 801842a:	f1bb 0f00 	cmp.w	fp, #0
 801842e:	d078      	beq.n	8018522 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8018430:	f8bb 2000 	ldrh.w	r2, [fp]
 8018434:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8018438:	f1bb 0f00 	cmp.w	fp, #0
 801843c:	d002      	beq.n	8018444 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 801843e:	f10b 0202 	add.w	r2, fp, #2
 8018442:	9209      	str	r2, [sp, #36]	; 0x24
 8018444:	b10d      	cbz	r5, 801844a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8018446:	3501      	adds	r5, #1
 8018448:	9508      	str	r5, [sp, #32]
 801844a:	3301      	adds	r3, #1
 801844c:	930d      	str	r3, [sp, #52]	; 0x34
 801844e:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8018452:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018454:	f1bb 0f00 	cmp.w	fp, #0
 8018458:	d0d6      	beq.n	8018408 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 801845a:	f8bb 2000 	ldrh.w	r2, [fp]
 801845e:	2a00      	cmp	r2, #0
 8018460:	d1d6      	bne.n	8018410 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8018462:	f8bb 2000 	ldrh.w	r2, [fp]
 8018466:	2a00      	cmp	r2, #0
 8018468:	d0bb      	beq.n	80183e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801846a:	459a      	cmp	sl, r3
 801846c:	ddb9      	ble.n	80183e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801846e:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8018472:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8018476:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 801847a:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 801847e:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8018482:	960e      	str	r6, [sp, #56]	; 0x38
 8018484:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8018488:	960f      	str	r6, [sp, #60]	; 0x3c
 801848a:	f1bb 0f00 	cmp.w	fp, #0
 801848e:	d002      	beq.n	8018496 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8018490:	f10b 0302 	add.w	r3, fp, #2
 8018494:	9309      	str	r3, [sp, #36]	; 0x24
 8018496:	b10d      	cbz	r5, 801849c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8018498:	1c6b      	adds	r3, r5, #1
 801849a:	9308      	str	r3, [sp, #32]
 801849c:	ab0f      	add	r3, sp, #60	; 0x3c
 801849e:	9305      	str	r3, [sp, #20]
 80184a0:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 80184a4:	9304      	str	r3, [sp, #16]
 80184a6:	ab0e      	add	r3, sp, #56	; 0x38
 80184a8:	9303      	str	r3, [sp, #12]
 80184aa:	ab0c      	add	r3, sp, #48	; 0x30
 80184ac:	9302      	str	r3, [sp, #8]
 80184ae:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 80184b2:	9301      	str	r3, [sp, #4]
 80184b4:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 80184b8:	9300      	str	r3, [sp, #0]
 80184ba:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 80184be:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 80184c2:	a908      	add	r1, sp, #32
 80184c4:	a809      	add	r0, sp, #36	; 0x24
 80184c6:	f7ff fea8 	bl	801821a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 80184ca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80184cc:	2b00      	cmp	r3, #0
 80184ce:	bfbe      	ittt	lt
 80184d0:	6823      	ldrlt	r3, [r4, #0]
 80184d2:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 80184d6:	930e      	strlt	r3, [sp, #56]	; 0x38
 80184d8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80184da:	bfb8      	it	lt
 80184dc:	3404      	addlt	r4, #4
 80184de:	2b00      	cmp	r3, #0
 80184e0:	bfb8      	it	lt
 80184e2:	6823      	ldrlt	r3, [r4, #0]
 80184e4:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80184e8:	bfbe      	ittt	lt
 80184ea:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 80184ee:	930f      	strlt	r3, [sp, #60]	; 0x3c
 80184f0:	3404      	addlt	r4, #4
 80184f2:	b1d9      	cbz	r1, 801852c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 80184f4:	880b      	ldrh	r3, [r1, #0]
 80184f6:	2b69      	cmp	r3, #105	; 0x69
 80184f8:	d01f      	beq.n	801853a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80184fa:	d82f      	bhi.n	801855c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 80184fc:	2b58      	cmp	r3, #88	; 0x58
 80184fe:	d01c      	beq.n	801853a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018500:	d818      	bhi.n	8018534 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8018502:	2b25      	cmp	r3, #37	; 0x25
 8018504:	d034      	beq.n	8018570 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8018506:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 801850a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801850c:	f1bb 0f00 	cmp.w	fp, #0
 8018510:	f000 80b8 	beq.w	8018684 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8018514:	f8bb 5000 	ldrh.w	r5, [fp]
 8018518:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 801851c:	3301      	adds	r3, #1
 801851e:	930d      	str	r3, [sp, #52]	; 0x34
 8018520:	e029      	b.n	8018576 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8018522:	b10d      	cbz	r5, 8018528 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8018524:	782a      	ldrb	r2, [r5, #0]
 8018526:	e785      	b.n	8018434 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8018528:	462a      	mov	r2, r5
 801852a:	e783      	b.n	8018434 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801852c:	2a00      	cmp	r2, #0
 801852e:	d0ea      	beq.n	8018506 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8018530:	7813      	ldrb	r3, [r2, #0]
 8018532:	e7e0      	b.n	80184f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8018534:	3b63      	subs	r3, #99	; 0x63
 8018536:	2b01      	cmp	r3, #1
 8018538:	d8e5      	bhi.n	8018506 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801853a:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 801853e:	b329      	cbz	r1, 801858c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8018540:	880b      	ldrh	r3, [r1, #0]
 8018542:	2b69      	cmp	r3, #105	; 0x69
 8018544:	d063      	beq.n	801860e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8018546:	d825      	bhi.n	8018594 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8018548:	2b63      	cmp	r3, #99	; 0x63
 801854a:	d038      	beq.n	80185be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 801854c:	2b64      	cmp	r3, #100	; 0x64
 801854e:	d05e      	beq.n	801860e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8018550:	2b58      	cmp	r3, #88	; 0x58
 8018552:	d07b      	beq.n	801864c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8018554:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8018558:	4625      	mov	r5, r4
 801855a:	e036      	b.n	80185ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801855c:	2b73      	cmp	r3, #115	; 0x73
 801855e:	d0ec      	beq.n	801853a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018560:	d802      	bhi.n	8018568 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8018562:	2b6f      	cmp	r3, #111	; 0x6f
 8018564:	d1cf      	bne.n	8018506 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8018566:	e7e8      	b.n	801853a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018568:	2b75      	cmp	r3, #117	; 0x75
 801856a:	d0e6      	beq.n	801853a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801856c:	2b78      	cmp	r3, #120	; 0x78
 801856e:	e7f9      	b.n	8018564 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8018570:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018572:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8018576:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018578:	b10b      	cbz	r3, 801857e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 801857a:	3302      	adds	r3, #2
 801857c:	9309      	str	r3, [sp, #36]	; 0x24
 801857e:	9b08      	ldr	r3, [sp, #32]
 8018580:	2b00      	cmp	r3, #0
 8018582:	f43f af2e 	beq.w	80183e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018586:	3301      	adds	r3, #1
 8018588:	9308      	str	r3, [sp, #32]
 801858a:	e72a      	b.n	80183e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801858c:	2a00      	cmp	r2, #0
 801858e:	d0e1      	beq.n	8018554 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018590:	7813      	ldrb	r3, [r2, #0]
 8018592:	e7d6      	b.n	8018542 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8018594:	2b73      	cmp	r3, #115	; 0x73
 8018596:	d036      	beq.n	8018606 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8018598:	d807      	bhi.n	80185aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 801859a:	2b6f      	cmp	r3, #111	; 0x6f
 801859c:	d1da      	bne.n	8018554 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801859e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80185a0:	1d25      	adds	r5, r4, #4
 80185a2:	eba8 0202 	sub.w	r2, r8, r2
 80185a6:	2308      	movs	r3, #8
 80185a8:	e04a      	b.n	8018640 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 80185aa:	2b75      	cmp	r3, #117	; 0x75
 80185ac:	d043      	beq.n	8018636 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 80185ae:	2b78      	cmp	r3, #120	; 0x78
 80185b0:	d1d0      	bne.n	8018554 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80185b2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80185b4:	1d25      	adds	r5, r4, #4
 80185b6:	eba8 0202 	sub.w	r2, r8, r2
 80185ba:	2310      	movs	r3, #16
 80185bc:	e040      	b.n	8018640 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 80185be:	6823      	ldr	r3, [r4, #0]
 80185c0:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 80185c4:	1d25      	adds	r5, r4, #4
 80185c6:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 80185ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80185cc:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 80185d0:	2b00      	cmp	r3, #0
 80185d2:	d052      	beq.n	801867a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 80185d4:	881a      	ldrh	r2, [r3, #0]
 80185d6:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 80185da:	a80d      	add	r0, sp, #52	; 0x34
 80185dc:	9005      	str	r0, [sp, #20]
 80185de:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 80185e2:	9004      	str	r0, [sp, #16]
 80185e4:	980e      	ldr	r0, [sp, #56]	; 0x38
 80185e6:	9003      	str	r0, [sp, #12]
 80185e8:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 80185ec:	9002      	str	r0, [sp, #8]
 80185ee:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80185f0:	9001      	str	r0, [sp, #4]
 80185f2:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 80185f6:	9000      	str	r0, [sp, #0]
 80185f8:	e9cd 8706 	strd	r8, r7, [sp, #24]
 80185fc:	a810      	add	r0, sp, #64	; 0x40
 80185fe:	f7ff fd49 	bl	8018094 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8018602:	462c      	mov	r4, r5
 8018604:	e7b7      	b.n	8018576 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8018606:	6823      	ldr	r3, [r4, #0]
 8018608:	1d25      	adds	r5, r4, #4
 801860a:	9310      	str	r3, [sp, #64]	; 0x40
 801860c:	e7dd      	b.n	80185ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801860e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018610:	6820      	ldr	r0, [r4, #0]
 8018612:	eba8 0202 	sub.w	r2, r8, r2
 8018616:	230a      	movs	r3, #10
 8018618:	b292      	uxth	r2, r2
 801861a:	4649      	mov	r1, r9
 801861c:	f7ff fce4 	bl	8017fe8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8018620:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8018624:	2b2d      	cmp	r3, #45	; 0x2d
 8018626:	f104 0504 	add.w	r5, r4, #4
 801862a:	d1ce      	bne.n	80185ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801862c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8018630:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018632:	3302      	adds	r3, #2
 8018634:	e7e9      	b.n	801860a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8018636:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018638:	1d25      	adds	r5, r4, #4
 801863a:	eba8 0202 	sub.w	r2, r8, r2
 801863e:	230a      	movs	r3, #10
 8018640:	b292      	uxth	r2, r2
 8018642:	4649      	mov	r1, r9
 8018644:	6820      	ldr	r0, [r4, #0]
 8018646:	f7ff fcfb 	bl	8018040 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801864a:	e7be      	b.n	80185ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801864c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801864e:	6820      	ldr	r0, [r4, #0]
 8018650:	eba8 0202 	sub.w	r2, r8, r2
 8018654:	b292      	uxth	r2, r2
 8018656:	2310      	movs	r3, #16
 8018658:	4649      	mov	r1, r9
 801865a:	f7ff fcf1 	bl	8018040 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801865e:	1d25      	adds	r5, r4, #4
 8018660:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8018664:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8018668:	2b00      	cmp	r3, #0
 801866a:	d0ae      	beq.n	80185ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801866c:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8018670:	2919      	cmp	r1, #25
 8018672:	d8f7      	bhi.n	8018664 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8018674:	3b20      	subs	r3, #32
 8018676:	8013      	strh	r3, [r2, #0]
 8018678:	e7f4      	b.n	8018664 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801867a:	9a08      	ldr	r2, [sp, #32]
 801867c:	2a00      	cmp	r2, #0
 801867e:	d0aa      	beq.n	80185d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8018680:	7812      	ldrb	r2, [r2, #0]
 8018682:	e7a8      	b.n	80185d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8018684:	2d00      	cmp	r5, #0
 8018686:	f43f af47 	beq.w	8018518 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 801868a:	782d      	ldrb	r5, [r5, #0]
 801868c:	e744      	b.n	8018518 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0801868e <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 801868e:	b507      	push	{r0, r1, r2, lr}
 8018690:	9300      	str	r3, [sp, #0]
 8018692:	4613      	mov	r3, r2
 8018694:	2200      	movs	r2, #0
 8018696:	f7ff fe90 	bl	80183ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 801869a:	b003      	add	sp, #12
 801869c:	f85d fb04 	ldr.w	pc, [sp], #4

080186a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 80186a0:	b40c      	push	{r2, r3}
 80186a2:	b507      	push	{r0, r1, r2, lr}
 80186a4:	ab04      	add	r3, sp, #16
 80186a6:	f853 2b04 	ldr.w	r2, [r3], #4
 80186aa:	9301      	str	r3, [sp, #4]
 80186ac:	f7ff ffef 	bl	801868e <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 80186b0:	b003      	add	sp, #12
 80186b2:	f85d eb04 	ldr.w	lr, [sp], #4
 80186b6:	b002      	add	sp, #8
 80186b8:	4770      	bx	lr
	...

080186bc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 80186bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80186c0:	b0c5      	sub	sp, #276	; 0x114
 80186c2:	2400      	movs	r4, #0
 80186c4:	af11      	add	r7, sp, #68	; 0x44
 80186c6:	4606      	mov	r6, r0
 80186c8:	468a      	mov	sl, r1
 80186ca:	e9cd 3208 	strd	r3, r2, [sp, #32]
 80186ce:	4621      	mov	r1, r4
 80186d0:	22c8      	movs	r2, #200	; 0xc8
 80186d2:	4638      	mov	r0, r7
 80186d4:	f8dd b138 	ldr.w	fp, [sp, #312]	; 0x138
 80186d8:	940d      	str	r4, [sp, #52]	; 0x34
 80186da:	f011 ff00 	bl	802a4de <memset>
 80186de:	b16e      	cbz	r6, 80186fc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 80186e0:	ed9f 5aa8 	vldr	s10, [pc, #672]	; 8018984 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 80186e4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80186e6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80186e8:	b162      	cbz	r2, 8018704 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 80186ea:	8812      	ldrh	r2, [r2, #0]
 80186ec:	b11a      	cbz	r2, 80186f6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 80186ee:	f10a 31ff 	add.w	r1, sl, #4294967295
 80186f2:	4299      	cmp	r1, r3
 80186f4:	dc2e      	bgt.n	8018754 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 80186f6:	2200      	movs	r2, #0
 80186f8:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 80186fc:	4630      	mov	r0, r6
 80186fe:	b045      	add	sp, #276	; 0x114
 8018700:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018704:	9a08      	ldr	r2, [sp, #32]
 8018706:	2a00      	cmp	r2, #0
 8018708:	d0f5      	beq.n	80186f6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801870a:	7812      	ldrb	r2, [r2, #0]
 801870c:	e7ee      	b.n	80186ec <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 801870e:	2d00      	cmp	r5, #0
 8018710:	d0e8      	beq.n	80186e4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8018712:	782a      	ldrb	r2, [r5, #0]
 8018714:	b142      	cbz	r2, 8018728 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 8018716:	2a25      	cmp	r2, #37	; 0x25
 8018718:	d001      	beq.n	801871e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 801871a:	4299      	cmp	r1, r3
 801871c:	dc08      	bgt.n	8018730 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 801871e:	f1b8 0f00 	cmp.w	r8, #0
 8018722:	d121      	bne.n	8018768 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 8018724:	2d00      	cmp	r5, #0
 8018726:	d0dd      	beq.n	80186e4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8018728:	782a      	ldrb	r2, [r5, #0]
 801872a:	f04f 0800 	mov.w	r8, #0
 801872e:	e01d      	b.n	801876c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 8018730:	f1b8 0f00 	cmp.w	r8, #0
 8018734:	d07f      	beq.n	8018836 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 8018736:	f8b8 2000 	ldrh.w	r2, [r8]
 801873a:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801873e:	f1b8 0f00 	cmp.w	r8, #0
 8018742:	d002      	beq.n	801874a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 8018744:	f108 0202 	add.w	r2, r8, #2
 8018748:	9209      	str	r2, [sp, #36]	; 0x24
 801874a:	b10d      	cbz	r5, 8018750 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 801874c:	3501      	adds	r5, #1
 801874e:	9508      	str	r5, [sp, #32]
 8018750:	3301      	adds	r3, #1
 8018752:	930d      	str	r3, [sp, #52]	; 0x34
 8018754:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 8018758:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801875a:	f1b8 0f00 	cmp.w	r8, #0
 801875e:	d0d6      	beq.n	801870e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 8018760:	f8b8 2000 	ldrh.w	r2, [r8]
 8018764:	2a00      	cmp	r2, #0
 8018766:	d1d6      	bne.n	8018716 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 8018768:	f8b8 2000 	ldrh.w	r2, [r8]
 801876c:	2a00      	cmp	r2, #0
 801876e:	d0b9      	beq.n	80186e4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8018770:	4299      	cmp	r1, r3
 8018772:	ddb7      	ble.n	80186e4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8018774:	2300      	movs	r3, #0
 8018776:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801877a:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 801877e:	f88d 302e 	strb.w	r3, [sp, #46]	; 0x2e
 8018782:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
 8018786:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
 801878a:	930e      	str	r3, [sp, #56]	; 0x38
 801878c:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 8018790:	930f      	str	r3, [sp, #60]	; 0x3c
 8018792:	f1b8 0f00 	cmp.w	r8, #0
 8018796:	d002      	beq.n	801879e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 8018798:	f108 0302 	add.w	r3, r8, #2
 801879c:	9309      	str	r3, [sp, #36]	; 0x24
 801879e:	b10d      	cbz	r5, 80187a4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 80187a0:	1c6b      	adds	r3, r5, #1
 80187a2:	9308      	str	r3, [sp, #32]
 80187a4:	ab0f      	add	r3, sp, #60	; 0x3c
 80187a6:	9305      	str	r3, [sp, #20]
 80187a8:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 80187ac:	9304      	str	r3, [sp, #16]
 80187ae:	ab0e      	add	r3, sp, #56	; 0x38
 80187b0:	9303      	str	r3, [sp, #12]
 80187b2:	ab0c      	add	r3, sp, #48	; 0x30
 80187b4:	9302      	str	r3, [sp, #8]
 80187b6:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 80187ba:	9301      	str	r3, [sp, #4]
 80187bc:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 80187c0:	9300      	str	r3, [sp, #0]
 80187c2:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 80187c6:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 80187ca:	a908      	add	r1, sp, #32
 80187cc:	a809      	add	r0, sp, #36	; 0x24
 80187ce:	f7ff fd24 	bl	801821a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 80187d2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80187d4:	2b00      	cmp	r3, #0
 80187d6:	da0b      	bge.n	80187f0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 80187d8:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 80187dc:	edd3 7a00 	vldr	s15, [r3]
 80187e0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80187e4:	3401      	adds	r4, #1
 80187e6:	ee17 3a90 	vmov	r3, s15
 80187ea:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80187ee:	930e      	str	r3, [sp, #56]	; 0x38
 80187f0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80187f2:	2b00      	cmp	r3, #0
 80187f4:	da0b      	bge.n	801880e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 80187f6:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 80187fa:	edd3 7a00 	vldr	s15, [r3]
 80187fe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8018802:	3401      	adds	r4, #1
 8018804:	ee17 3a90 	vmov	r3, s15
 8018808:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801880c:	930f      	str	r3, [sp, #60]	; 0x3c
 801880e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018810:	b1b3      	cbz	r3, 8018840 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 8018812:	881a      	ldrh	r2, [r3, #0]
 8018814:	2a25      	cmp	r2, #37	; 0x25
 8018816:	d018      	beq.n	801884a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 8018818:	2a66      	cmp	r2, #102	; 0x66
 801881a:	d01c      	beq.n	8018856 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 801881c:	e9cd 5808 	strd	r5, r8, [sp, #32]
 8018820:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018822:	f1b8 0f00 	cmp.w	r8, #0
 8018826:	f000 8121 	beq.w	8018a6c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3b0>
 801882a:	f8b8 5000 	ldrh.w	r5, [r8]
 801882e:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 8018832:	3301      	adds	r3, #1
 8018834:	e00d      	b.n	8018852 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 8018836:	b10d      	cbz	r5, 801883c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 8018838:	782a      	ldrb	r2, [r5, #0]
 801883a:	e77e      	b.n	801873a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 801883c:	462a      	mov	r2, r5
 801883e:	e77c      	b.n	801873a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 8018840:	9b08      	ldr	r3, [sp, #32]
 8018842:	2b00      	cmp	r3, #0
 8018844:	d0ea      	beq.n	801881c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 8018846:	781a      	ldrb	r2, [r3, #0]
 8018848:	e7e4      	b.n	8018814 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 801884a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801884c:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8018850:	3302      	adds	r3, #2
 8018852:	930d      	str	r3, [sp, #52]	; 0x34
 8018854:	e041      	b.n	80188da <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 8018856:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801885a:	edd3 7a00 	vldr	s15, [r3]
 801885e:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8018862:	9710      	str	r7, [sp, #64]	; 0x40
 8018864:	3401      	adds	r4, #1
 8018866:	b923      	cbnz	r3, 8018872 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 8018868:	2301      	movs	r3, #1
 801886a:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 801886e:	2306      	movs	r3, #6
 8018870:	930f      	str	r3, [sp, #60]	; 0x3c
 8018872:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018876:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801887a:	bf48      	it	mi
 801887c:	eef1 7a67 	vnegmi.f32	s15, s15
 8018880:	eeb0 7ae7 	vabs.f32	s14, s15
 8018884:	bf48      	it	mi
 8018886:	232d      	movmi	r3, #45	; 0x2d
 8018888:	eeb4 7a45 	vcmp.f32	s14, s10
 801888c:	bf48      	it	mi
 801888e:	f8ad 3032 	strhmi.w	r3, [sp, #50]	; 0x32
 8018892:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018896:	dd2b      	ble.n	80188f0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 8018898:	4b3b      	ldr	r3, [pc, #236]	; (8018988 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 801889a:	9311      	str	r3, [sp, #68]	; 0x44
 801889c:	2366      	movs	r3, #102	; 0x66
 801889e:	9312      	str	r3, [sp, #72]	; 0x48
 80188a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80188a2:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 80188a6:	2b00      	cmp	r3, #0
 80188a8:	f000 80da 	beq.w	8018a60 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 80188ac:	881a      	ldrh	r2, [r3, #0]
 80188ae:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 80188b2:	a80d      	add	r0, sp, #52	; 0x34
 80188b4:	9005      	str	r0, [sp, #20]
 80188b6:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 80188ba:	9004      	str	r0, [sp, #16]
 80188bc:	980e      	ldr	r0, [sp, #56]	; 0x38
 80188be:	9003      	str	r0, [sp, #12]
 80188c0:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 80188c4:	9002      	str	r0, [sp, #8]
 80188c6:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80188c8:	9001      	str	r0, [sp, #4]
 80188ca:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 80188ce:	9000      	str	r0, [sp, #0]
 80188d0:	e9cd a606 	strd	sl, r6, [sp, #24]
 80188d4:	a810      	add	r0, sp, #64	; 0x40
 80188d6:	f7ff fbdd 	bl	8018094 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 80188da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80188dc:	b10b      	cbz	r3, 80188e2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 80188de:	3302      	adds	r3, #2
 80188e0:	9309      	str	r3, [sp, #36]	; 0x24
 80188e2:	9b08      	ldr	r3, [sp, #32]
 80188e4:	2b00      	cmp	r3, #0
 80188e6:	f43f aefd 	beq.w	80186e4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80188ea:	3301      	adds	r3, #1
 80188ec:	9308      	str	r3, [sp, #32]
 80188ee:	e6f9      	b.n	80186e4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80188f0:	eef4 7a67 	vcmp.f32	s15, s15
 80188f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188f8:	d63a      	bvs.n	8018970 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 80188fa:	f10d 0846 	add.w	r8, sp, #70	; 0x46
 80188fe:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8018902:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 8018906:	eeb0 6a67 	vmov.f32	s12, s15
 801890a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801890e:	eef0 5a47 	vmov.f32	s11, s14
 8018912:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8018916:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801891a:	da2d      	bge.n	8018978 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 801891c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801891e:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8018922:	2100      	movs	r1, #0
 8018924:	eef0 4a46 	vmov.f32	s9, s12
 8018928:	ebaa 0202 	sub.w	r2, sl, r2
 801892c:	eef4 6ac6 	vcmpe.f32	s13, s12
 8018930:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018934:	b28d      	uxth	r5, r1
 8018936:	db2c      	blt.n	8018992 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 8018938:	1a53      	subs	r3, r2, r1
 801893a:	2b00      	cmp	r3, #0
 801893c:	dd29      	ble.n	8018992 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 801893e:	3101      	adds	r1, #1
 8018940:	2964      	cmp	r1, #100	; 0x64
 8018942:	d025      	beq.n	8018990 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 8018944:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8018948:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 801894c:	ee17 3a10 	vmov	r3, s14
 8018950:	2b09      	cmp	r3, #9
 8018952:	bfa8      	it	ge
 8018954:	2309      	movge	r3, #9
 8018956:	ee07 3a10 	vmov	s14, r3
 801895a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801895e:	f103 0030 	add.w	r0, r3, #48	; 0x30
 8018962:	eee7 7a66 	vfms.f32	s15, s14, s13
 8018966:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 801896a:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 801896e:	e7dd      	b.n	801892c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 8018970:	4b06      	ldr	r3, [pc, #24]	; (801898c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 8018972:	9311      	str	r3, [sp, #68]	; 0x44
 8018974:	236e      	movs	r3, #110	; 0x6e
 8018976:	e792      	b.n	801889e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 8018978:	ee66 6a87 	vmul.f32	s13, s13, s14
 801897c:	ee86 6a07 	vdiv.f32	s12, s12, s14
 8018980:	e7c7      	b.n	8018912 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 8018982:	bf00      	nop
 8018984:	7f7fffff 	.word	0x7f7fffff
 8018988:	006e0069 	.word	0x006e0069
 801898c:	0061006e 	.word	0x0061006e
 8018990:	2563      	movs	r5, #99	; 0x63
 8018992:	2a63      	cmp	r2, #99	; 0x63
 8018994:	bfd4      	ite	le
 8018996:	ebc5 0202 	rsble	r2, r5, r2
 801899a:	f1c5 0263 	rsbgt	r2, r5, #99	; 0x63
 801899e:	2a00      	cmp	r2, #0
 80189a0:	dd43      	ble.n	8018a2a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 80189a2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80189a4:	2b00      	cmp	r3, #0
 80189a6:	dd40      	ble.n	8018a2a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 80189a8:	f04f 0901 	mov.w	r9, #1
 80189ac:	210a      	movs	r1, #10
 80189ae:	f113 33ff 	adds.w	r3, r3, #4294967295
 80189b2:	d30c      	bcc.n	80189ce <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x312>
 80189b4:	ee67 7aa5 	vmul.f32	s15, s15, s11
 80189b8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80189bc:	ee17 0a10 	vmov	r0, s14
 80189c0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80189c4:	fb01 0909 	mla	r9, r1, r9, r0
 80189c8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80189cc:	e7ef      	b.n	80189ae <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f2>
 80189ce:	3501      	adds	r5, #1
 80189d0:	930f      	str	r3, [sp, #60]	; 0x3c
 80189d2:	b292      	uxth	r2, r2
 80189d4:	230a      	movs	r3, #10
 80189d6:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 80189da:	4648      	mov	r0, r9
 80189dc:	f7ff fb4e 	bl	801807c <_ZN8touchgfx7Unicode4itoaElPtti>
 80189e0:	f1b9 0f01 	cmp.w	r9, #1
 80189e4:	dc1f      	bgt.n	8018a26 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36a>
 80189e6:	f89d 302e 	ldrb.w	r3, [sp, #46]	; 0x2e
 80189ea:	2b00      	cmp	r3, #0
 80189ec:	bf0c      	ite	eq
 80189ee:	2300      	moveq	r3, #0
 80189f0:	232e      	movne	r3, #46	; 0x2e
 80189f2:	aa44      	add	r2, sp, #272	; 0x110
 80189f4:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 80189f8:	eef4 7ae4 	vcmpe.f32	s15, s9
 80189fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018a00:	f825 3ccc 	strh.w	r3, [r5, #-204]
 8018a04:	f6ff af4c 	blt.w	80188a0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8018a08:	2300      	movs	r3, #0
 8018a0a:	f838 2b02 	ldrh.w	r2, [r8], #2
 8018a0e:	1c59      	adds	r1, r3, #1
 8018a10:	b98a      	cbnz	r2, 8018a36 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37a>
 8018a12:	b29b      	uxth	r3, r3
 8018a14:	2130      	movs	r1, #48	; 0x30
 8018a16:	b983      	cbnz	r3, 8018a3a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 8018a18:	2331      	movs	r3, #49	; 0x31
 8018a1a:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8018a1e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018a20:	3b02      	subs	r3, #2
 8018a22:	9310      	str	r3, [sp, #64]	; 0x40
 8018a24:	e73c      	b.n	80188a0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8018a26:	232e      	movs	r3, #46	; 0x2e
 8018a28:	e7e3      	b.n	80189f2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x336>
 8018a2a:	ab44      	add	r3, sp, #272	; 0x110
 8018a2c:	3501      	adds	r5, #1
 8018a2e:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8018a32:	2300      	movs	r3, #0
 8018a34:	e7e0      	b.n	80189f8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 8018a36:	460b      	mov	r3, r1
 8018a38:	e7e7      	b.n	8018a0a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x34e>
 8018a3a:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 8018a3e:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
 8018a42:	2808      	cmp	r0, #8
 8018a44:	d806      	bhi.n	8018a54 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x398>
 8018a46:	a944      	add	r1, sp, #272	; 0x110
 8018a48:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8018a4c:	3201      	adds	r2, #1
 8018a4e:	f823 2ccc 	strh.w	r2, [r3, #-204]
 8018a52:	e725      	b.n	80188a0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8018a54:	2a39      	cmp	r2, #57	; 0x39
 8018a56:	bf08      	it	eq
 8018a58:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 8018a5c:	3b01      	subs	r3, #1
 8018a5e:	e7da      	b.n	8018a16 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x35a>
 8018a60:	9a08      	ldr	r2, [sp, #32]
 8018a62:	2a00      	cmp	r2, #0
 8018a64:	f43f af23 	beq.w	80188ae <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 8018a68:	7812      	ldrb	r2, [r2, #0]
 8018a6a:	e720      	b.n	80188ae <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 8018a6c:	2d00      	cmp	r5, #0
 8018a6e:	f43f aede 	beq.w	801882e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 8018a72:	782d      	ldrb	r5, [r5, #0]
 8018a74:	e6db      	b.n	801882e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 8018a76:	bf00      	nop

08018a78 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 8018a78:	b507      	push	{r0, r1, r2, lr}
 8018a7a:	9300      	str	r3, [sp, #0]
 8018a7c:	4613      	mov	r3, r2
 8018a7e:	2200      	movs	r2, #0
 8018a80:	f7ff fe1c 	bl	80186bc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 8018a84:	b003      	add	sp, #12
 8018a86:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08018a8c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8018a8c:	4b01      	ldr	r3, [pc, #4]	; (8018a94 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8018a8e:	6018      	str	r0, [r3, #0]
 8018a90:	4770      	bx	lr
 8018a92:	bf00      	nop
 8018a94:	20012f8c 	.word	0x20012f8c

08018a98 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8018a98:	4b06      	ldr	r3, [pc, #24]	; (8018ab4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8018a9a:	881a      	ldrh	r2, [r3, #0]
 8018a9c:	4282      	cmp	r2, r0
 8018a9e:	d807      	bhi.n	8018ab0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8018aa0:	4b05      	ldr	r3, [pc, #20]	; (8018ab8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8018aa2:	881b      	ldrh	r3, [r3, #0]
 8018aa4:	4413      	add	r3, r2
 8018aa6:	4298      	cmp	r0, r3
 8018aa8:	bfac      	ite	ge
 8018aaa:	2000      	movge	r0, #0
 8018aac:	2001      	movlt	r0, #1
 8018aae:	4770      	bx	lr
 8018ab0:	2000      	movs	r0, #0
 8018ab2:	4770      	bx	lr
 8018ab4:	20012fac 	.word	0x20012fac
 8018ab8:	20012fb0 	.word	0x20012fb0

08018abc <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8018abc:	b508      	push	{r3, lr}
 8018abe:	4601      	mov	r1, r0
 8018ac0:	f7ff ffea 	bl	8018a98 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8018ac4:	b118      	cbz	r0, 8018ace <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8018ac6:	4b02      	ldr	r3, [pc, #8]	; (8018ad0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8018ac8:	681b      	ldr	r3, [r3, #0]
 8018aca:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8018ace:	bd08      	pop	{r3, pc}
 8018ad0:	20012f90 	.word	0x20012f90

08018ad4 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8018ad4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018ad6:	4c24      	ldr	r4, [pc, #144]	; (8018b68 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8018ad8:	6823      	ldr	r3, [r4, #0]
 8018ada:	2b00      	cmp	r3, #0
 8018adc:	d042      	beq.n	8018b64 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8018ade:	4a23      	ldr	r2, [pc, #140]	; (8018b6c <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8018ae0:	4d23      	ldr	r5, [pc, #140]	; (8018b70 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8018ae2:	8811      	ldrh	r1, [r2, #0]
 8018ae4:	f8b5 c000 	ldrh.w	ip, [r5]
 8018ae8:	4822      	ldr	r0, [pc, #136]	; (8018b74 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8018aea:	4461      	add	r1, ip
 8018aec:	1c4a      	adds	r2, r1, #1
 8018aee:	f022 0201 	bic.w	r2, r2, #1
 8018af2:	008f      	lsls	r7, r1, #2
 8018af4:	0412      	lsls	r2, r2, #16
 8018af6:	19de      	adds	r6, r3, r7
 8018af8:	0c12      	lsrs	r2, r2, #16
 8018afa:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8018afe:	6006      	str	r6, [r0, #0]
 8018b00:	4e1d      	ldr	r6, [pc, #116]	; (8018b78 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8018b02:	19da      	adds	r2, r3, r7
 8018b04:	6032      	str	r2, [r6, #0]
 8018b06:	220e      	movs	r2, #14
 8018b08:	fb02 f20c 	mul.w	r2, r2, ip
 8018b0c:	3203      	adds	r2, #3
 8018b0e:	f022 0203 	bic.w	r2, r2, #3
 8018b12:	443a      	add	r2, r7
 8018b14:	4f19      	ldr	r7, [pc, #100]	; (8018b7c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8018b16:	4413      	add	r3, r2
 8018b18:	603b      	str	r3, [r7, #0]
 8018b1a:	4f19      	ldr	r7, [pc, #100]	; (8018b80 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8018b1c:	2300      	movs	r3, #0
 8018b1e:	803b      	strh	r3, [r7, #0]
 8018b20:	4f18      	ldr	r7, [pc, #96]	; (8018b84 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8018b22:	683f      	ldr	r7, [r7, #0]
 8018b24:	1aba      	subs	r2, r7, r2
 8018b26:	4f18      	ldr	r7, [pc, #96]	; (8018b88 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8018b28:	603a      	str	r2, [r7, #0]
 8018b2a:	4a18      	ldr	r2, [pc, #96]	; (8018b8c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8018b2c:	469c      	mov	ip, r3
 8018b2e:	8013      	strh	r3, [r2, #0]
 8018b30:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8018b34:	428b      	cmp	r3, r1
 8018b36:	d10d      	bne.n	8018b54 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8018b38:	882d      	ldrh	r5, [r5, #0]
 8018b3a:	6830      	ldr	r0, [r6, #0]
 8018b3c:	2300      	movs	r3, #0
 8018b3e:	240e      	movs	r4, #14
 8018b40:	429d      	cmp	r5, r3
 8018b42:	d90f      	bls.n	8018b64 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8018b44:	fb04 0203 	mla	r2, r4, r3, r0
 8018b48:	3301      	adds	r3, #1
 8018b4a:	7b11      	ldrb	r1, [r2, #12]
 8018b4c:	f36f 1145 	bfc	r1, #5, #1
 8018b50:	7311      	strb	r1, [r2, #12]
 8018b52:	e7f5      	b.n	8018b40 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8018b54:	6822      	ldr	r2, [r4, #0]
 8018b56:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8018b5a:	6802      	ldr	r2, [r0, #0]
 8018b5c:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8018b60:	3301      	adds	r3, #1
 8018b62:	e7e7      	b.n	8018b34 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8018b64:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8018b66:	bf00      	nop
 8018b68:	20012f90 	.word	0x20012f90
 8018b6c:	20012fac 	.word	0x20012fac
 8018b70:	20012fb0 	.word	0x20012fb0
 8018b74:	20012fa4 	.word	0x20012fa4
 8018b78:	20012f94 	.word	0x20012f94
 8018b7c:	20012f9c 	.word	0x20012f9c
 8018b80:	20012fae 	.word	0x20012fae
 8018b84:	20012f98 	.word	0x20012f98
 8018b88:	20012fa8 	.word	0x20012fa8
 8018b8c:	20012fa0 	.word	0x20012fa0

08018b90 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8018b90:	4b06      	ldr	r3, [pc, #24]	; (8018bac <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8018b92:	681b      	ldr	r3, [r3, #0]
 8018b94:	b943      	cbnz	r3, 8018ba8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8018b96:	b139      	cbz	r1, 8018ba8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8018b98:	4b05      	ldr	r3, [pc, #20]	; (8018bb0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8018b9a:	801a      	strh	r2, [r3, #0]
 8018b9c:	4b05      	ldr	r3, [pc, #20]	; (8018bb4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8018b9e:	6019      	str	r1, [r3, #0]
 8018ba0:	4b05      	ldr	r3, [pc, #20]	; (8018bb8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8018ba2:	6018      	str	r0, [r3, #0]
 8018ba4:	f7ff bf96 	b.w	8018ad4 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8018ba8:	4770      	bx	lr
 8018baa:	bf00      	nop
 8018bac:	20012f9c 	.word	0x20012f9c
 8018bb0:	20012fb0 	.word	0x20012fb0
 8018bb4:	20012f98 	.word	0x20012f98
 8018bb8:	20012f90 	.word	0x20012f90

08018bbc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8018bbc:	b470      	push	{r4, r5, r6}
 8018bbe:	4c07      	ldr	r4, [pc, #28]	; (8018bdc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8018bc0:	6826      	ldr	r6, [r4, #0]
 8018bc2:	4605      	mov	r5, r0
 8018bc4:	4610      	mov	r0, r2
 8018bc6:	9a03      	ldr	r2, [sp, #12]
 8018bc8:	b936      	cbnz	r6, 8018bd8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8018bca:	6025      	str	r5, [r4, #0]
 8018bcc:	4c04      	ldr	r4, [pc, #16]	; (8018be0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8018bce:	8021      	strh	r1, [r4, #0]
 8018bd0:	bc70      	pop	{r4, r5, r6}
 8018bd2:	4619      	mov	r1, r3
 8018bd4:	f7ff bfdc 	b.w	8018b90 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8018bd8:	bc70      	pop	{r4, r5, r6}
 8018bda:	4770      	bx	lr
 8018bdc:	20012fb4 	.word	0x20012fb4
 8018be0:	20012fac 	.word	0x20012fac

08018be4 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8018be4:	4a12      	ldr	r2, [pc, #72]	; (8018c30 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8018be6:	8803      	ldrh	r3, [r0, #0]
 8018be8:	8812      	ldrh	r2, [r2, #0]
 8018bea:	4293      	cmp	r3, r2
 8018bec:	d207      	bcs.n	8018bfe <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8018bee:	4a11      	ldr	r2, [pc, #68]	; (8018c34 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8018bf0:	6812      	ldr	r2, [r2, #0]
 8018bf2:	2114      	movs	r1, #20
 8018bf4:	fb01 2303 	mla	r3, r1, r3, r2
 8018bf8:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8018bfc:	4770      	bx	lr
 8018bfe:	490e      	ldr	r1, [pc, #56]	; (8018c38 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8018c00:	8809      	ldrh	r1, [r1, #0]
 8018c02:	4411      	add	r1, r2
 8018c04:	428b      	cmp	r3, r1
 8018c06:	da04      	bge.n	8018c12 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8018c08:	1a9b      	subs	r3, r3, r2
 8018c0a:	4a0c      	ldr	r2, [pc, #48]	; (8018c3c <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8018c0c:	210e      	movs	r1, #14
 8018c0e:	6812      	ldr	r2, [r2, #0]
 8018c10:	e7f0      	b.n	8018bf4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8018c12:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8018c16:	4293      	cmp	r3, r2
 8018c18:	d108      	bne.n	8018c2c <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8018c1a:	4b09      	ldr	r3, [pc, #36]	; (8018c40 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8018c1c:	781b      	ldrb	r3, [r3, #0]
 8018c1e:	b91b      	cbnz	r3, 8018c28 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8018c20:	4b08      	ldr	r3, [pc, #32]	; (8018c44 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8018c22:	f9b3 0000 	ldrsh.w	r0, [r3]
 8018c26:	4770      	bx	lr
 8018c28:	4b07      	ldr	r3, [pc, #28]	; (8018c48 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8018c2a:	e7fa      	b.n	8018c22 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8018c2c:	2000      	movs	r0, #0
 8018c2e:	4770      	bx	lr
 8018c30:	20012fac 	.word	0x20012fac
 8018c34:	20012fb4 	.word	0x20012fb4
 8018c38:	20012fb0 	.word	0x20012fb0
 8018c3c:	20012f94 	.word	0x20012f94
 8018c40:	20012f1c 	.word	0x20012f1c
 8018c44:	20012f1e 	.word	0x20012f1e
 8018c48:	20012f20 	.word	0x20012f20

08018c4c <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8018c4c:	4a12      	ldr	r2, [pc, #72]	; (8018c98 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8018c4e:	8803      	ldrh	r3, [r0, #0]
 8018c50:	8812      	ldrh	r2, [r2, #0]
 8018c52:	4293      	cmp	r3, r2
 8018c54:	d207      	bcs.n	8018c66 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8018c56:	4a11      	ldr	r2, [pc, #68]	; (8018c9c <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8018c58:	6812      	ldr	r2, [r2, #0]
 8018c5a:	2114      	movs	r1, #20
 8018c5c:	fb01 2303 	mla	r3, r1, r3, r2
 8018c60:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8018c64:	4770      	bx	lr
 8018c66:	490e      	ldr	r1, [pc, #56]	; (8018ca0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8018c68:	8809      	ldrh	r1, [r1, #0]
 8018c6a:	4411      	add	r1, r2
 8018c6c:	428b      	cmp	r3, r1
 8018c6e:	da04      	bge.n	8018c7a <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8018c70:	1a9b      	subs	r3, r3, r2
 8018c72:	4a0c      	ldr	r2, [pc, #48]	; (8018ca4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8018c74:	210e      	movs	r1, #14
 8018c76:	6812      	ldr	r2, [r2, #0]
 8018c78:	e7f0      	b.n	8018c5c <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8018c7a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8018c7e:	4293      	cmp	r3, r2
 8018c80:	d108      	bne.n	8018c94 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8018c82:	4b09      	ldr	r3, [pc, #36]	; (8018ca8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8018c84:	781b      	ldrb	r3, [r3, #0]
 8018c86:	b91b      	cbnz	r3, 8018c90 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8018c88:	4b08      	ldr	r3, [pc, #32]	; (8018cac <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8018c8a:	f9b3 0000 	ldrsh.w	r0, [r3]
 8018c8e:	4770      	bx	lr
 8018c90:	4b07      	ldr	r3, [pc, #28]	; (8018cb0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8018c92:	e7fa      	b.n	8018c8a <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8018c94:	2000      	movs	r0, #0
 8018c96:	4770      	bx	lr
 8018c98:	20012fac 	.word	0x20012fac
 8018c9c:	20012fb4 	.word	0x20012fb4
 8018ca0:	20012fb0 	.word	0x20012fb0
 8018ca4:	20012f94 	.word	0x20012f94
 8018ca8:	20012f1c 	.word	0x20012f1c
 8018cac:	20012f20 	.word	0x20012f20
 8018cb0:	20012f1e 	.word	0x20012f1e

08018cb4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8018cb4:	b510      	push	{r4, lr}
 8018cb6:	4a1f      	ldr	r2, [pc, #124]	; (8018d34 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8018cb8:	880b      	ldrh	r3, [r1, #0]
 8018cba:	8812      	ldrh	r2, [r2, #0]
 8018cbc:	4293      	cmp	r3, r2
 8018cbe:	d213      	bcs.n	8018ce8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8018cc0:	4a1d      	ldr	r2, [pc, #116]	; (8018d38 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 8018cc2:	6812      	ldr	r2, [r2, #0]
 8018cc4:	2114      	movs	r1, #20
 8018cc6:	fb01 2303 	mla	r3, r1, r3, r2
 8018cca:	8a1a      	ldrh	r2, [r3, #16]
 8018ccc:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8018cd0:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8018cd4:	8a5b      	ldrh	r3, [r3, #18]
 8018cd6:	8004      	strh	r4, [r0, #0]
 8018cd8:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8018cdc:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8018ce0:	8041      	strh	r1, [r0, #2]
 8018ce2:	8082      	strh	r2, [r0, #4]
 8018ce4:	80c3      	strh	r3, [r0, #6]
 8018ce6:	e00e      	b.n	8018d06 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8018ce8:	4914      	ldr	r1, [pc, #80]	; (8018d3c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 8018cea:	8809      	ldrh	r1, [r1, #0]
 8018cec:	4411      	add	r1, r2
 8018cee:	428b      	cmp	r3, r1
 8018cf0:	da0a      	bge.n	8018d08 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 8018cf2:	1a9b      	subs	r3, r3, r2
 8018cf4:	4a12      	ldr	r2, [pc, #72]	; (8018d40 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8018cf6:	6812      	ldr	r2, [r2, #0]
 8018cf8:	210e      	movs	r1, #14
 8018cfa:	fb01 2303 	mla	r3, r1, r3, r2
 8018cfe:	681a      	ldr	r2, [r3, #0]
 8018d00:	6002      	str	r2, [r0, #0]
 8018d02:	685a      	ldr	r2, [r3, #4]
 8018d04:	6042      	str	r2, [r0, #4]
 8018d06:	bd10      	pop	{r4, pc}
 8018d08:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8018d0c:	4293      	cmp	r3, r2
 8018d0e:	d10b      	bne.n	8018d28 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 8018d10:	4b0c      	ldr	r3, [pc, #48]	; (8018d44 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8018d12:	f9b3 1000 	ldrsh.w	r1, [r3]
 8018d16:	4b0c      	ldr	r3, [pc, #48]	; (8018d48 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8018d18:	8081      	strh	r1, [r0, #4]
 8018d1a:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018d1e:	80c2      	strh	r2, [r0, #6]
 8018d20:	2300      	movs	r3, #0
 8018d22:	8003      	strh	r3, [r0, #0]
 8018d24:	8043      	strh	r3, [r0, #2]
 8018d26:	e7ee      	b.n	8018d06 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8018d28:	2300      	movs	r3, #0
 8018d2a:	8003      	strh	r3, [r0, #0]
 8018d2c:	8043      	strh	r3, [r0, #2]
 8018d2e:	8083      	strh	r3, [r0, #4]
 8018d30:	e7d8      	b.n	8018ce4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8018d32:	bf00      	nop
 8018d34:	20012fac 	.word	0x20012fac
 8018d38:	20012fb4 	.word	0x20012fb4
 8018d3c:	20012fb0 	.word	0x20012fb0
 8018d40:	20012f94 	.word	0x20012f94
 8018d44:	20012f18 	.word	0x20012f18
 8018d48:	20012f1a 	.word	0x20012f1a

08018d4c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8018d4c:	4a17      	ldr	r2, [pc, #92]	; (8018dac <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8018d4e:	8803      	ldrh	r3, [r0, #0]
 8018d50:	8812      	ldrh	r2, [r2, #0]
 8018d52:	4293      	cmp	r3, r2
 8018d54:	d213      	bcs.n	8018d7e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8018d56:	4a16      	ldr	r2, [pc, #88]	; (8018db0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8018d58:	6812      	ldr	r2, [r2, #0]
 8018d5a:	2114      	movs	r1, #20
 8018d5c:	fb01 2303 	mla	r3, r1, r3, r2
 8018d60:	8a1a      	ldrh	r2, [r3, #16]
 8018d62:	8919      	ldrh	r1, [r3, #8]
 8018d64:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8018d68:	428a      	cmp	r2, r1
 8018d6a:	db1d      	blt.n	8018da8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8018d6c:	8a58      	ldrh	r0, [r3, #18]
 8018d6e:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8018d72:	895b      	ldrh	r3, [r3, #10]
 8018d74:	4298      	cmp	r0, r3
 8018d76:	bfac      	ite	ge
 8018d78:	2000      	movge	r0, #0
 8018d7a:	2001      	movlt	r0, #1
 8018d7c:	4770      	bx	lr
 8018d7e:	490d      	ldr	r1, [pc, #52]	; (8018db4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8018d80:	8809      	ldrh	r1, [r1, #0]
 8018d82:	4411      	add	r1, r2
 8018d84:	428b      	cmp	r3, r1
 8018d86:	da0d      	bge.n	8018da4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8018d88:	1a9b      	subs	r3, r3, r2
 8018d8a:	4a0b      	ldr	r2, [pc, #44]	; (8018db8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8018d8c:	6812      	ldr	r2, [r2, #0]
 8018d8e:	210e      	movs	r1, #14
 8018d90:	fb01 2303 	mla	r3, r1, r3, r2
 8018d94:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8018d98:	891a      	ldrh	r2, [r3, #8]
 8018d9a:	4291      	cmp	r1, r2
 8018d9c:	db04      	blt.n	8018da8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8018d9e:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8018da2:	e7e6      	b.n	8018d72 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8018da4:	2000      	movs	r0, #0
 8018da6:	4770      	bx	lr
 8018da8:	2001      	movs	r0, #1
 8018daa:	4770      	bx	lr
 8018dac:	20012fac 	.word	0x20012fac
 8018db0:	20012fb4 	.word	0x20012fb4
 8018db4:	20012fb0 	.word	0x20012fb0
 8018db8:	20012f94 	.word	0x20012f94

08018dbc <_ZNK8touchgfx6Bitmap7getDataEv>:
 8018dbc:	4a12      	ldr	r2, [pc, #72]	; (8018e08 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8018dbe:	8803      	ldrh	r3, [r0, #0]
 8018dc0:	8811      	ldrh	r1, [r2, #0]
 8018dc2:	428b      	cmp	r3, r1
 8018dc4:	d20b      	bcs.n	8018dde <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8018dc6:	4a11      	ldr	r2, [pc, #68]	; (8018e0c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8018dc8:	6812      	ldr	r2, [r2, #0]
 8018dca:	b112      	cbz	r2, 8018dd2 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8018dcc:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8018dd0:	b9c0      	cbnz	r0, 8018e04 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8018dd2:	4a0f      	ldr	r2, [pc, #60]	; (8018e10 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8018dd4:	6811      	ldr	r1, [r2, #0]
 8018dd6:	2214      	movs	r2, #20
 8018dd8:	4353      	muls	r3, r2
 8018dda:	58c8      	ldr	r0, [r1, r3]
 8018ddc:	4770      	bx	lr
 8018dde:	4a0d      	ldr	r2, [pc, #52]	; (8018e14 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8018de0:	8812      	ldrh	r2, [r2, #0]
 8018de2:	440a      	add	r2, r1
 8018de4:	4293      	cmp	r3, r2
 8018de6:	da04      	bge.n	8018df2 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8018de8:	4a08      	ldr	r2, [pc, #32]	; (8018e0c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8018dea:	6812      	ldr	r2, [r2, #0]
 8018dec:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8018df0:	4770      	bx	lr
 8018df2:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8018df6:	4293      	cmp	r3, r2
 8018df8:	d103      	bne.n	8018e02 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8018dfa:	4b07      	ldr	r3, [pc, #28]	; (8018e18 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8018dfc:	681b      	ldr	r3, [r3, #0]
 8018dfe:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8018e00:	4770      	bx	lr
 8018e02:	2000      	movs	r0, #0
 8018e04:	4770      	bx	lr
 8018e06:	bf00      	nop
 8018e08:	20012fac 	.word	0x20012fac
 8018e0c:	20012f90 	.word	0x20012f90
 8018e10:	20012fb4 	.word	0x20012fb4
 8018e14:	20012fb0 	.word	0x20012fb0
 8018e18:	20012f24 	.word	0x20012f24

08018e1c <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8018e1c:	4b24      	ldr	r3, [pc, #144]	; (8018eb0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8018e1e:	8802      	ldrh	r2, [r0, #0]
 8018e20:	8818      	ldrh	r0, [r3, #0]
 8018e22:	4282      	cmp	r2, r0
 8018e24:	d221      	bcs.n	8018e6a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8018e26:	4b23      	ldr	r3, [pc, #140]	; (8018eb4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8018e28:	6819      	ldr	r1, [r3, #0]
 8018e2a:	2314      	movs	r3, #20
 8018e2c:	fb03 1302 	mla	r3, r3, r2, r1
 8018e30:	6858      	ldr	r0, [r3, #4]
 8018e32:	2800      	cmp	r0, #0
 8018e34:	d03a      	beq.n	8018eac <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8018e36:	4920      	ldr	r1, [pc, #128]	; (8018eb8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8018e38:	6809      	ldr	r1, [r1, #0]
 8018e3a:	2900      	cmp	r1, #0
 8018e3c:	d036      	beq.n	8018eac <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8018e3e:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8018e42:	2900      	cmp	r1, #0
 8018e44:	d032      	beq.n	8018eac <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8018e46:	891a      	ldrh	r2, [r3, #8]
 8018e48:	8958      	ldrh	r0, [r3, #10]
 8018e4a:	4350      	muls	r0, r2
 8018e4c:	7c5a      	ldrb	r2, [r3, #17]
 8018e4e:	7cdb      	ldrb	r3, [r3, #19]
 8018e50:	0952      	lsrs	r2, r2, #5
 8018e52:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8018e56:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8018e5a:	2b0b      	cmp	r3, #11
 8018e5c:	bf18      	it	ne
 8018e5e:	0040      	lslne	r0, r0, #1
 8018e60:	3003      	adds	r0, #3
 8018e62:	f020 0003 	bic.w	r0, r0, #3
 8018e66:	4408      	add	r0, r1
 8018e68:	4770      	bx	lr
 8018e6a:	4b14      	ldr	r3, [pc, #80]	; (8018ebc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8018e6c:	881b      	ldrh	r3, [r3, #0]
 8018e6e:	4403      	add	r3, r0
 8018e70:	429a      	cmp	r2, r3
 8018e72:	da1a      	bge.n	8018eaa <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8018e74:	4b12      	ldr	r3, [pc, #72]	; (8018ec0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8018e76:	681b      	ldr	r3, [r3, #0]
 8018e78:	1a10      	subs	r0, r2, r0
 8018e7a:	210e      	movs	r1, #14
 8018e7c:	fb01 3000 	mla	r0, r1, r0, r3
 8018e80:	7b03      	ldrb	r3, [r0, #12]
 8018e82:	f003 031f 	and.w	r3, r3, #31
 8018e86:	2b0b      	cmp	r3, #11
 8018e88:	d10b      	bne.n	8018ea2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8018e8a:	8903      	ldrh	r3, [r0, #8]
 8018e8c:	8940      	ldrh	r0, [r0, #10]
 8018e8e:	4358      	muls	r0, r3
 8018e90:	4b09      	ldr	r3, [pc, #36]	; (8018eb8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8018e92:	6819      	ldr	r1, [r3, #0]
 8018e94:	3003      	adds	r0, #3
 8018e96:	f020 0303 	bic.w	r3, r0, #3
 8018e9a:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8018e9e:	4418      	add	r0, r3
 8018ea0:	4770      	bx	lr
 8018ea2:	2b0d      	cmp	r3, #13
 8018ea4:	d101      	bne.n	8018eaa <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8018ea6:	300d      	adds	r0, #13
 8018ea8:	4770      	bx	lr
 8018eaa:	2000      	movs	r0, #0
 8018eac:	4770      	bx	lr
 8018eae:	bf00      	nop
 8018eb0:	20012fac 	.word	0x20012fac
 8018eb4:	20012fb4 	.word	0x20012fb4
 8018eb8:	20012f90 	.word	0x20012f90
 8018ebc:	20012fb0 	.word	0x20012fb0
 8018ec0:	20012f94 	.word	0x20012f94

08018ec4 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8018ec4:	b510      	push	{r4, lr}
 8018ec6:	4a17      	ldr	r2, [pc, #92]	; (8018f24 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8018ec8:	8803      	ldrh	r3, [r0, #0]
 8018eca:	8812      	ldrh	r2, [r2, #0]
 8018ecc:	4293      	cmp	r3, r2
 8018ece:	d20c      	bcs.n	8018eea <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8018ed0:	4a15      	ldr	r2, [pc, #84]	; (8018f28 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8018ed2:	6812      	ldr	r2, [r2, #0]
 8018ed4:	2114      	movs	r1, #20
 8018ed6:	fb01 2303 	mla	r3, r1, r3, r2
 8018eda:	7c58      	ldrb	r0, [r3, #17]
 8018edc:	0942      	lsrs	r2, r0, #5
 8018ede:	7cd8      	ldrb	r0, [r3, #19]
 8018ee0:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8018ee4:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8018ee8:	bd10      	pop	{r4, pc}
 8018eea:	4910      	ldr	r1, [pc, #64]	; (8018f2c <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8018eec:	8809      	ldrh	r1, [r1, #0]
 8018eee:	4411      	add	r1, r2
 8018ef0:	428b      	cmp	r3, r1
 8018ef2:	da09      	bge.n	8018f08 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8018ef4:	1a9b      	subs	r3, r3, r2
 8018ef6:	4a0e      	ldr	r2, [pc, #56]	; (8018f30 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8018ef8:	6812      	ldr	r2, [r2, #0]
 8018efa:	210e      	movs	r1, #14
 8018efc:	fb01 2303 	mla	r3, r1, r3, r2
 8018f00:	7b18      	ldrb	r0, [r3, #12]
 8018f02:	f000 001f 	and.w	r0, r0, #31
 8018f06:	e7ef      	b.n	8018ee8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8018f08:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8018f0c:	4293      	cmp	r3, r2
 8018f0e:	d106      	bne.n	8018f1e <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8018f10:	f7ea fd2c 	bl	800396c <_ZN8touchgfx3HAL3lcdEv>
 8018f14:	6803      	ldr	r3, [r0, #0]
 8018f16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018f1a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018f1c:	4718      	bx	r3
 8018f1e:	2000      	movs	r0, #0
 8018f20:	e7e2      	b.n	8018ee8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8018f22:	bf00      	nop
 8018f24:	20012fac 	.word	0x20012fac
 8018f28:	20012fb4 	.word	0x20012fb4
 8018f2c:	20012fb0 	.word	0x20012fb0
 8018f30:	20012f94 	.word	0x20012f94

08018f34 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8018f34:	2010      	movs	r0, #16
 8018f36:	4770      	bx	lr

08018f38 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8018f38:	2000      	movs	r0, #0
 8018f3a:	4770      	bx	lr

08018f3c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8018f3c:	4b02      	ldr	r3, [pc, #8]	; (8018f48 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8018f3e:	8818      	ldrh	r0, [r3, #0]
 8018f40:	0040      	lsls	r0, r0, #1
 8018f42:	b280      	uxth	r0, r0
 8018f44:	4770      	bx	lr
 8018f46:	bf00      	nop
 8018f48:	20012f1e 	.word	0x20012f1e

08018f4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8018f4c:	2bff      	cmp	r3, #255	; 0xff
 8018f4e:	d050      	beq.n	8018ff2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8018f50:	2a0b      	cmp	r2, #11
 8018f52:	d04a      	beq.n	8018fea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8018f54:	d80e      	bhi.n	8018f74 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8018f56:	2a03      	cmp	r2, #3
 8018f58:	d03f      	beq.n	8018fda <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8018f5a:	d804      	bhi.n	8018f66 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8018f5c:	2a01      	cmp	r2, #1
 8018f5e:	d03e      	beq.n	8018fde <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8018f60:	d93f      	bls.n	8018fe2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8018f62:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8018f64:	4770      	bx	lr
 8018f66:	2a09      	cmp	r2, #9
 8018f68:	d03f      	beq.n	8018fea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8018f6a:	d83c      	bhi.n	8018fe6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8018f6c:	2a08      	cmp	r2, #8
 8018f6e:	d03a      	beq.n	8018fe6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8018f70:	2000      	movs	r0, #0
 8018f72:	4770      	bx	lr
 8018f74:	2a2f      	cmp	r2, #47	; 0x2f
 8018f76:	d024      	beq.n	8018fc2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8018f78:	d80d      	bhi.n	8018f96 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8018f7a:	2a2d      	cmp	r2, #45	; 0x2d
 8018f7c:	d014      	beq.n	8018fa8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8018f7e:	d826      	bhi.n	8018fce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8018f80:	2a2c      	cmp	r2, #44	; 0x2c
 8018f82:	d1f5      	bne.n	8018f70 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018f84:	684b      	ldr	r3, [r1, #4]
 8018f86:	781b      	ldrb	r3, [r3, #0]
 8018f88:	2b01      	cmp	r3, #1
 8018f8a:	d018      	beq.n	8018fbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8018f8c:	d323      	bcc.n	8018fd6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8018f8e:	2b02      	cmp	r3, #2
 8018f90:	d1ee      	bne.n	8018f70 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018f92:	6880      	ldr	r0, [r0, #8]
 8018f94:	4770      	bx	lr
 8018f96:	2a31      	cmp	r2, #49	; 0x31
 8018f98:	d004      	beq.n	8018fa4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8018f9a:	d328      	bcc.n	8018fee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8018f9c:	2a32      	cmp	r2, #50	; 0x32
 8018f9e:	d026      	beq.n	8018fee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8018fa0:	2a33      	cmp	r2, #51	; 0x33
 8018fa2:	d1e5      	bne.n	8018f70 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018fa4:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8018fa6:	4770      	bx	lr
 8018fa8:	684b      	ldr	r3, [r1, #4]
 8018faa:	781b      	ldrb	r3, [r3, #0]
 8018fac:	2b01      	cmp	r3, #1
 8018fae:	d004      	beq.n	8018fba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8018fb0:	d30b      	bcc.n	8018fca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8018fb2:	2b02      	cmp	r3, #2
 8018fb4:	d1dc      	bne.n	8018f70 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018fb6:	6900      	ldr	r0, [r0, #16]
 8018fb8:	4770      	bx	lr
 8018fba:	6a00      	ldr	r0, [r0, #32]
 8018fbc:	4770      	bx	lr
 8018fbe:	6980      	ldr	r0, [r0, #24]
 8018fc0:	4770      	bx	lr
 8018fc2:	684b      	ldr	r3, [r1, #4]
 8018fc4:	781b      	ldrb	r3, [r3, #0]
 8018fc6:	2b00      	cmp	r3, #0
 8018fc8:	d1d2      	bne.n	8018f70 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018fca:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8018fcc:	4770      	bx	lr
 8018fce:	684b      	ldr	r3, [r1, #4]
 8018fd0:	781b      	ldrb	r3, [r3, #0]
 8018fd2:	2b00      	cmp	r3, #0
 8018fd4:	d1cc      	bne.n	8018f70 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018fd6:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8018fd8:	4770      	bx	lr
 8018fda:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8018fdc:	4770      	bx	lr
 8018fde:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8018fe0:	4770      	bx	lr
 8018fe2:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8018fe4:	4770      	bx	lr
 8018fe6:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8018fe8:	4770      	bx	lr
 8018fea:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8018fec:	4770      	bx	lr
 8018fee:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8018ff0:	4770      	bx	lr
 8018ff2:	2a0b      	cmp	r2, #11
 8018ff4:	d049      	beq.n	801908a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8018ff6:	d80e      	bhi.n	8019016 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8018ff8:	2a03      	cmp	r2, #3
 8018ffa:	d040      	beq.n	801907e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8018ffc:	d804      	bhi.n	8019008 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8018ffe:	2a01      	cmp	r2, #1
 8019000:	d03f      	beq.n	8019082 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8019002:	d940      	bls.n	8019086 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8019004:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8019006:	4770      	bx	lr
 8019008:	2a09      	cmp	r2, #9
 801900a:	d03e      	beq.n	801908a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801900c:	d801      	bhi.n	8019012 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 801900e:	2a08      	cmp	r2, #8
 8019010:	d1ae      	bne.n	8018f70 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019012:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8019014:	4770      	bx	lr
 8019016:	2a2f      	cmp	r2, #47	; 0x2f
 8019018:	d024      	beq.n	8019064 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 801901a:	d80d      	bhi.n	8019038 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 801901c:	2a2d      	cmp	r2, #45	; 0x2d
 801901e:	d014      	beq.n	801904a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8019020:	d826      	bhi.n	8019070 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8019022:	2a2c      	cmp	r2, #44	; 0x2c
 8019024:	d1a4      	bne.n	8018f70 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019026:	684b      	ldr	r3, [r1, #4]
 8019028:	781b      	ldrb	r3, [r3, #0]
 801902a:	2b01      	cmp	r3, #1
 801902c:	d018      	beq.n	8019060 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801902e:	d324      	bcc.n	801907a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8019030:	2b02      	cmp	r3, #2
 8019032:	d19d      	bne.n	8018f70 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019034:	68c0      	ldr	r0, [r0, #12]
 8019036:	4770      	bx	lr
 8019038:	2a31      	cmp	r2, #49	; 0x31
 801903a:	d004      	beq.n	8019046 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 801903c:	d327      	bcc.n	801908e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801903e:	2a32      	cmp	r2, #50	; 0x32
 8019040:	d025      	beq.n	801908e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8019042:	2a33      	cmp	r2, #51	; 0x33
 8019044:	d194      	bne.n	8018f70 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019046:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8019048:	4770      	bx	lr
 801904a:	684b      	ldr	r3, [r1, #4]
 801904c:	781b      	ldrb	r3, [r3, #0]
 801904e:	2b01      	cmp	r3, #1
 8019050:	d004      	beq.n	801905c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8019052:	d30b      	bcc.n	801906c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8019054:	2b02      	cmp	r3, #2
 8019056:	d18b      	bne.n	8018f70 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019058:	6940      	ldr	r0, [r0, #20]
 801905a:	4770      	bx	lr
 801905c:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801905e:	4770      	bx	lr
 8019060:	69c0      	ldr	r0, [r0, #28]
 8019062:	4770      	bx	lr
 8019064:	684b      	ldr	r3, [r1, #4]
 8019066:	781b      	ldrb	r3, [r3, #0]
 8019068:	2b00      	cmp	r3, #0
 801906a:	d181      	bne.n	8018f70 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801906c:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801906e:	4770      	bx	lr
 8019070:	684b      	ldr	r3, [r1, #4]
 8019072:	781b      	ldrb	r3, [r3, #0]
 8019074:	2b00      	cmp	r3, #0
 8019076:	f47f af7b 	bne.w	8018f70 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801907a:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 801907c:	4770      	bx	lr
 801907e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8019080:	4770      	bx	lr
 8019082:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8019084:	4770      	bx	lr
 8019086:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8019088:	4770      	bx	lr
 801908a:	6e40      	ldr	r0, [r0, #100]	; 0x64
 801908c:	4770      	bx	lr
 801908e:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8019090:	4770      	bx	lr

08019092 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019092:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019096:	b087      	sub	sp, #28
 8019098:	9815      	ldr	r0, [sp, #84]	; 0x54
 801909a:	9205      	str	r2, [sp, #20]
 801909c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80190a0:	9202      	str	r2, [sp, #8]
 80190a2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80190a6:	9101      	str	r1, [sp, #4]
 80190a8:	6841      	ldr	r1, [r0, #4]
 80190aa:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 80190ae:	fb01 2404 	mla	r4, r1, r4, r2
 80190b2:	6802      	ldr	r2, [r0, #0]
 80190b4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80190b8:	f8de 2000 	ldr.w	r2, [lr]
 80190bc:	9203      	str	r2, [sp, #12]
 80190be:	f8de 2004 	ldr.w	r2, [lr, #4]
 80190c2:	3204      	adds	r2, #4
 80190c4:	9204      	str	r2, [sp, #16]
 80190c6:	9a02      	ldr	r2, [sp, #8]
 80190c8:	43d6      	mvns	r6, r2
 80190ca:	b2f6      	uxtb	r6, r6
 80190cc:	9a01      	ldr	r2, [sp, #4]
 80190ce:	2a00      	cmp	r2, #0
 80190d0:	dc03      	bgt.n	80190da <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80190d2:	9a05      	ldr	r2, [sp, #20]
 80190d4:	2a00      	cmp	r2, #0
 80190d6:	f340 8129 	ble.w	801932c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80190da:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80190dc:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80190e0:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80190e4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80190e8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80190ea:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80190ee:	2b00      	cmp	r3, #0
 80190f0:	dd0e      	ble.n	8019110 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80190f2:	1408      	asrs	r0, r1, #16
 80190f4:	d405      	bmi.n	8019102 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80190f6:	4560      	cmp	r0, ip
 80190f8:	da03      	bge.n	8019102 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80190fa:	1410      	asrs	r0, r2, #16
 80190fc:	d401      	bmi.n	8019102 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80190fe:	42b8      	cmp	r0, r7
 8019100:	db07      	blt.n	8019112 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8019102:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019104:	4401      	add	r1, r0
 8019106:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019108:	3b01      	subs	r3, #1
 801910a:	4402      	add	r2, r0
 801910c:	3402      	adds	r4, #2
 801910e:	e7ee      	b.n	80190ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8019110:	d071      	beq.n	80191f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019112:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019114:	1e58      	subs	r0, r3, #1
 8019116:	fb05 1500 	mla	r5, r5, r0, r1
 801911a:	142d      	asrs	r5, r5, #16
 801911c:	d45f      	bmi.n	80191de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801911e:	4565      	cmp	r5, ip
 8019120:	da5d      	bge.n	80191de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019122:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019124:	fb05 2000 	mla	r0, r5, r0, r2
 8019128:	1400      	asrs	r0, r0, #16
 801912a:	d458      	bmi.n	80191de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801912c:	42b8      	cmp	r0, r7
 801912e:	da56      	bge.n	80191de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019130:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8019134:	4699      	mov	r9, r3
 8019136:	46a2      	mov	sl, r4
 8019138:	f1b9 0f00 	cmp.w	r9, #0
 801913c:	dd57      	ble.n	80191ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801913e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8019142:	9803      	ldr	r0, [sp, #12]
 8019144:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8019148:	140d      	asrs	r5, r1, #16
 801914a:	fb07 000c 	mla	r0, r7, ip, r0
 801914e:	f109 39ff 	add.w	r9, r9, #4294967295
 8019152:	5d40      	ldrb	r0, [r0, r5]
 8019154:	9d04      	ldr	r5, [sp, #16]
 8019156:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801915a:	f8ba 5000 	ldrh.w	r5, [sl]
 801915e:	122f      	asrs	r7, r5, #8
 8019160:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019164:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019168:	fb17 f706 	smulbb	r7, r7, r6
 801916c:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8019170:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019174:	00ed      	lsls	r5, r5, #3
 8019176:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801917a:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801917e:	10c7      	asrs	r7, r0, #3
 8019180:	b2ed      	uxtb	r5, r5
 8019182:	00c0      	lsls	r0, r0, #3
 8019184:	fb18 f806 	smulbb	r8, r8, r6
 8019188:	fb15 f506 	smulbb	r5, r5, r6
 801918c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019190:	b2c0      	uxtb	r0, r0
 8019192:	fa1f fc8c 	uxth.w	ip, ip
 8019196:	fb07 870b 	mla	r7, r7, fp, r8
 801919a:	fb00 500b 	mla	r0, r0, fp, r5
 801919e:	b280      	uxth	r0, r0
 80191a0:	b2bf      	uxth	r7, r7
 80191a2:	f10c 0501 	add.w	r5, ip, #1
 80191a6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80191aa:	f107 0801 	add.w	r8, r7, #1
 80191ae:	1c45      	adds	r5, r0, #1
 80191b0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80191b4:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80191b8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80191ba:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80191be:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80191c2:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80191c6:	ea45 0c0c 	orr.w	ip, r5, ip
 80191ca:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80191ce:	4401      	add	r1, r0
 80191d0:	9814      	ldr	r0, [sp, #80]	; 0x50
 80191d2:	ea4c 0c08 	orr.w	ip, ip, r8
 80191d6:	f82a cb02 	strh.w	ip, [sl], #2
 80191da:	4402      	add	r2, r0
 80191dc:	e7ac      	b.n	8019138 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80191de:	f8bd a008 	ldrh.w	sl, [sp, #8]
 80191e2:	f04f 0800 	mov.w	r8, #0
 80191e6:	eb03 0008 	add.w	r0, r3, r8
 80191ea:	2800      	cmp	r0, #0
 80191ec:	dc41      	bgt.n	8019272 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80191ee:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80191f2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80191f6:	9b01      	ldr	r3, [sp, #4]
 80191f8:	2b00      	cmp	r3, #0
 80191fa:	f340 8097 	ble.w	801932c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80191fe:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019202:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019206:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801920a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801920c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019210:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019214:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019218:	eef0 6a62 	vmov.f32	s13, s5
 801921c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019220:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019224:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019228:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801922c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019230:	eef0 6a43 	vmov.f32	s13, s6
 8019234:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019238:	ee12 2a90 	vmov	r2, s5
 801923c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019240:	fb92 f3f3 	sdiv	r3, r2, r3
 8019244:	ee13 2a10 	vmov	r2, s6
 8019248:	9313      	str	r3, [sp, #76]	; 0x4c
 801924a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801924c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019250:	9314      	str	r3, [sp, #80]	; 0x50
 8019252:	9b01      	ldr	r3, [sp, #4]
 8019254:	9a05      	ldr	r2, [sp, #20]
 8019256:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801925a:	3b01      	subs	r3, #1
 801925c:	9301      	str	r3, [sp, #4]
 801925e:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8019262:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019264:	eeb0 3a67 	vmov.f32	s6, s15
 8019268:	bf08      	it	eq
 801926a:	4613      	moveq	r3, r2
 801926c:	eef0 2a47 	vmov.f32	s5, s14
 8019270:	e72c      	b.n	80190cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8019272:	140f      	asrs	r7, r1, #16
 8019274:	d453      	bmi.n	801931e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019276:	f8de 5008 	ldr.w	r5, [lr, #8]
 801927a:	42bd      	cmp	r5, r7
 801927c:	dd4f      	ble.n	801931e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801927e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019282:	d44c      	bmi.n	801931e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019284:	f8de 000c 	ldr.w	r0, [lr, #12]
 8019288:	4560      	cmp	r0, ip
 801928a:	dd48      	ble.n	801931e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801928c:	9803      	ldr	r0, [sp, #12]
 801928e:	b22d      	sxth	r5, r5
 8019290:	fb0c 0505 	mla	r5, ip, r5, r0
 8019294:	5de8      	ldrb	r0, [r5, r7]
 8019296:	9d04      	ldr	r5, [sp, #16]
 8019298:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801929c:	f06f 0501 	mvn.w	r5, #1
 80192a0:	fb05 fb08 	mul.w	fp, r5, r8
 80192a4:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80192a8:	f834 500b 	ldrh.w	r5, [r4, fp]
 80192ac:	122f      	asrs	r7, r5, #8
 80192ae:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80192b2:	fb17 f706 	smulbb	r7, r7, r6
 80192b6:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80192ba:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80192be:	00ed      	lsls	r5, r5, #3
 80192c0:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80192c4:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80192c8:	10c7      	asrs	r7, r0, #3
 80192ca:	b2ed      	uxtb	r5, r5
 80192cc:	00c0      	lsls	r0, r0, #3
 80192ce:	fb19 f906 	smulbb	r9, r9, r6
 80192d2:	fb15 f506 	smulbb	r5, r5, r6
 80192d6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80192da:	b2c0      	uxtb	r0, r0
 80192dc:	fa1f fc8c 	uxth.w	ip, ip
 80192e0:	fb07 970a 	mla	r7, r7, sl, r9
 80192e4:	fb00 500a 	mla	r0, r0, sl, r5
 80192e8:	b2bf      	uxth	r7, r7
 80192ea:	b280      	uxth	r0, r0
 80192ec:	f10c 0501 	add.w	r5, ip, #1
 80192f0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80192f4:	f107 0901 	add.w	r9, r7, #1
 80192f8:	1c45      	adds	r5, r0, #1
 80192fa:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80192fe:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8019302:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019306:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801930a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801930e:	ea45 0c0c 	orr.w	ip, r5, ip
 8019312:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8019316:	ea4c 0c09 	orr.w	ip, ip, r9
 801931a:	f824 c00b 	strh.w	ip, [r4, fp]
 801931e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019320:	4401      	add	r1, r0
 8019322:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019324:	f108 38ff 	add.w	r8, r8, #4294967295
 8019328:	4402      	add	r2, r0
 801932a:	e75c      	b.n	80191e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801932c:	b007      	add	sp, #28
 801932e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019332 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019332:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019336:	b085      	sub	sp, #20
 8019338:	4693      	mov	fp, r2
 801933a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801933c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801933e:	6870      	ldr	r0, [r6, #4]
 8019340:	9100      	str	r1, [sp, #0]
 8019342:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019346:	fb00 2404 	mla	r4, r0, r4, r2
 801934a:	6832      	ldr	r2, [r6, #0]
 801934c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019350:	682a      	ldr	r2, [r5, #0]
 8019352:	9201      	str	r2, [sp, #4]
 8019354:	686a      	ldr	r2, [r5, #4]
 8019356:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801935a:	3204      	adds	r2, #4
 801935c:	9202      	str	r2, [sp, #8]
 801935e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019362:	9a00      	ldr	r2, [sp, #0]
 8019364:	2a00      	cmp	r2, #0
 8019366:	dc03      	bgt.n	8019370 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019368:	f1bb 0f00 	cmp.w	fp, #0
 801936c:	f340 80a0 	ble.w	80194b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8019370:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019372:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019376:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801937a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801937e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019380:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019384:	2b00      	cmp	r3, #0
 8019386:	dd0c      	ble.n	80193a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019388:	1406      	asrs	r6, r0, #16
 801938a:	d405      	bmi.n	8019398 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801938c:	454e      	cmp	r6, r9
 801938e:	da03      	bge.n	8019398 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019390:	1416      	asrs	r6, r2, #16
 8019392:	d401      	bmi.n	8019398 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019394:	4546      	cmp	r6, r8
 8019396:	db05      	blt.n	80193a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019398:	4470      	add	r0, lr
 801939a:	4462      	add	r2, ip
 801939c:	3b01      	subs	r3, #1
 801939e:	3402      	adds	r4, #2
 80193a0:	e7f0      	b.n	8019384 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80193a2:	d00f      	beq.n	80193c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80193a4:	1e5e      	subs	r6, r3, #1
 80193a6:	fb0e 0706 	mla	r7, lr, r6, r0
 80193aa:	143f      	asrs	r7, r7, #16
 80193ac:	d541      	bpl.n	8019432 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 80193ae:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80193b2:	4698      	mov	r8, r3
 80193b4:	9603      	str	r6, [sp, #12]
 80193b6:	f1b8 0f00 	cmp.w	r8, #0
 80193ba:	dc59      	bgt.n	8019470 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80193bc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80193c0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80193c4:	9b00      	ldr	r3, [sp, #0]
 80193c6:	2b00      	cmp	r3, #0
 80193c8:	dd72      	ble.n	80194b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80193ca:	ee30 0a04 	vadd.f32	s0, s0, s8
 80193ce:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80193d2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80193d6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80193d8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80193dc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80193e0:	eeb0 6a62 	vmov.f32	s12, s5
 80193e4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80193e8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80193ec:	ee77 2a62 	vsub.f32	s5, s14, s5
 80193f0:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80193f4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80193f8:	eeb0 6a43 	vmov.f32	s12, s6
 80193fc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019400:	ee12 2a90 	vmov	r2, s5
 8019404:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019408:	fb92 fef3 	sdiv	lr, r2, r3
 801940c:	ee13 2a10 	vmov	r2, s6
 8019410:	fb92 fcf3 	sdiv	ip, r2, r3
 8019414:	9b00      	ldr	r3, [sp, #0]
 8019416:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801941a:	3b01      	subs	r3, #1
 801941c:	9300      	str	r3, [sp, #0]
 801941e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019422:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019424:	eeb0 3a67 	vmov.f32	s6, s15
 8019428:	bf08      	it	eq
 801942a:	465b      	moveq	r3, fp
 801942c:	eef0 2a47 	vmov.f32	s5, s14
 8019430:	e797      	b.n	8019362 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8019432:	454f      	cmp	r7, r9
 8019434:	dabb      	bge.n	80193ae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019436:	fb0c 2606 	mla	r6, ip, r6, r2
 801943a:	1436      	asrs	r6, r6, #16
 801943c:	d4b7      	bmi.n	80193ae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801943e:	4546      	cmp	r6, r8
 8019440:	dab5      	bge.n	80193ae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019442:	461e      	mov	r6, r3
 8019444:	46a0      	mov	r8, r4
 8019446:	2e00      	cmp	r6, #0
 8019448:	ddb8      	ble.n	80193bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801944a:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801944e:	9901      	ldr	r1, [sp, #4]
 8019450:	1417      	asrs	r7, r2, #16
 8019452:	ea4f 4920 	mov.w	r9, r0, asr #16
 8019456:	fb0a 1707 	mla	r7, sl, r7, r1
 801945a:	9902      	ldr	r1, [sp, #8]
 801945c:	f817 7009 	ldrb.w	r7, [r7, r9]
 8019460:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8019464:	f828 7b02 	strh.w	r7, [r8], #2
 8019468:	4470      	add	r0, lr
 801946a:	4462      	add	r2, ip
 801946c:	3e01      	subs	r6, #1
 801946e:	e7ea      	b.n	8019446 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8019470:	ea5f 4920 	movs.w	r9, r0, asr #16
 8019474:	d417      	bmi.n	80194a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019476:	68ae      	ldr	r6, [r5, #8]
 8019478:	454e      	cmp	r6, r9
 801947a:	dd14      	ble.n	80194a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801947c:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8019480:	d411      	bmi.n	80194a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019482:	68ef      	ldr	r7, [r5, #12]
 8019484:	4557      	cmp	r7, sl
 8019486:	dd0e      	ble.n	80194a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019488:	9f01      	ldr	r7, [sp, #4]
 801948a:	b236      	sxth	r6, r6
 801948c:	fb0a 7606 	mla	r6, sl, r6, r7
 8019490:	9f02      	ldr	r7, [sp, #8]
 8019492:	f816 6009 	ldrb.w	r6, [r6, r9]
 8019496:	f06f 0101 	mvn.w	r1, #1
 801949a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801949e:	fb01 f608 	mul.w	r6, r1, r8
 80194a2:	9903      	ldr	r1, [sp, #12]
 80194a4:	538f      	strh	r7, [r1, r6]
 80194a6:	4470      	add	r0, lr
 80194a8:	4462      	add	r2, ip
 80194aa:	f108 38ff 	add.w	r8, r8, #4294967295
 80194ae:	e782      	b.n	80193b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80194b0:	b005      	add	sp, #20
 80194b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080194b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80194b6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80194ba:	b087      	sub	sp, #28
 80194bc:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80194be:	9205      	str	r2, [sp, #20]
 80194c0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80194c4:	9203      	str	r2, [sp, #12]
 80194c6:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80194ca:	9102      	str	r1, [sp, #8]
 80194cc:	6861      	ldr	r1, [r4, #4]
 80194ce:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 80194d2:	fb01 2000 	mla	r0, r1, r0, r2
 80194d6:	6822      	ldr	r2, [r4, #0]
 80194d8:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 80194dc:	9200      	str	r2, [sp, #0]
 80194de:	f8dc 2000 	ldr.w	r2, [ip]
 80194e2:	9204      	str	r2, [sp, #16]
 80194e4:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80194e8:	3204      	adds	r2, #4
 80194ea:	9201      	str	r2, [sp, #4]
 80194ec:	9a03      	ldr	r2, [sp, #12]
 80194ee:	43d5      	mvns	r5, r2
 80194f0:	b2ed      	uxtb	r5, r5
 80194f2:	9a02      	ldr	r2, [sp, #8]
 80194f4:	2a00      	cmp	r2, #0
 80194f6:	dc03      	bgt.n	8019500 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80194f8:	9a05      	ldr	r2, [sp, #20]
 80194fa:	2a00      	cmp	r2, #0
 80194fc:	f340 812c 	ble.w	8019758 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8019500:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019502:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8019506:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801950a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801950e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019510:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019514:	2b00      	cmp	r3, #0
 8019516:	dd10      	ble.n	801953a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019518:	140c      	asrs	r4, r1, #16
 801951a:	d405      	bmi.n	8019528 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801951c:	4574      	cmp	r4, lr
 801951e:	da03      	bge.n	8019528 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019520:	1414      	asrs	r4, r2, #16
 8019522:	d401      	bmi.n	8019528 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019524:	42bc      	cmp	r4, r7
 8019526:	db09      	blt.n	801953c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8019528:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801952a:	9800      	ldr	r0, [sp, #0]
 801952c:	4421      	add	r1, r4
 801952e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019530:	3002      	adds	r0, #2
 8019532:	4422      	add	r2, r4
 8019534:	3b01      	subs	r3, #1
 8019536:	9000      	str	r0, [sp, #0]
 8019538:	e7ec      	b.n	8019514 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801953a:	d071      	beq.n	8019620 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801953c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801953e:	1e5c      	subs	r4, r3, #1
 8019540:	fb06 1604 	mla	r6, r6, r4, r1
 8019544:	1436      	asrs	r6, r6, #16
 8019546:	d45d      	bmi.n	8019604 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019548:	4576      	cmp	r6, lr
 801954a:	da5b      	bge.n	8019604 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801954c:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801954e:	fb06 2404 	mla	r4, r6, r4, r2
 8019552:	1424      	asrs	r4, r4, #16
 8019554:	d456      	bmi.n	8019604 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019556:	42bc      	cmp	r4, r7
 8019558:	da54      	bge.n	8019604 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801955a:	f8dd 9000 	ldr.w	r9, [sp]
 801955e:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8019562:	4698      	mov	r8, r3
 8019564:	f1b8 0f00 	cmp.w	r8, #0
 8019568:	dd54      	ble.n	8019614 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801956a:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801956e:	9804      	ldr	r0, [sp, #16]
 8019570:	1414      	asrs	r4, r2, #16
 8019572:	fb07 0404 	mla	r4, r7, r4, r0
 8019576:	140e      	asrs	r6, r1, #16
 8019578:	9801      	ldr	r0, [sp, #4]
 801957a:	f814 e006 	ldrb.w	lr, [r4, r6]
 801957e:	f8b9 4000 	ldrh.w	r4, [r9]
 8019582:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8019586:	eb00 0b0e 	add.w	fp, r0, lr
 801958a:	1227      	asrs	r7, r4, #8
 801958c:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8019590:	f89b b001 	ldrb.w	fp, [fp, #1]
 8019594:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8019598:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801959a:	fb16 f60a 	smulbb	r6, r6, sl
 801959e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80195a2:	fb07 6705 	mla	r7, r7, r5, r6
 80195a6:	10e6      	asrs	r6, r4, #3
 80195a8:	00e4      	lsls	r4, r4, #3
 80195aa:	b2e4      	uxtb	r4, r4
 80195ac:	fb1b fb0a 	smulbb	fp, fp, sl
 80195b0:	fb14 f405 	smulbb	r4, r4, r5
 80195b4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80195b8:	b2bf      	uxth	r7, r7
 80195ba:	fb06 b605 	mla	r6, r6, r5, fp
 80195be:	fb0e 4e0a 	mla	lr, lr, sl, r4
 80195c2:	b2b6      	uxth	r6, r6
 80195c4:	fa1f fe8e 	uxth.w	lr, lr
 80195c8:	1c7c      	adds	r4, r7, #1
 80195ca:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80195ce:	f106 0b01 	add.w	fp, r6, #1
 80195d2:	f10e 0401 	add.w	r4, lr, #1
 80195d6:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 80195da:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80195de:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80195e2:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80195e6:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80195ea:	4327      	orrs	r7, r4
 80195ec:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80195f0:	4401      	add	r1, r0
 80195f2:	9814      	ldr	r0, [sp, #80]	; 0x50
 80195f4:	ea47 070b 	orr.w	r7, r7, fp
 80195f8:	f829 7b02 	strh.w	r7, [r9], #2
 80195fc:	4402      	add	r2, r0
 80195fe:	f108 38ff 	add.w	r8, r8, #4294967295
 8019602:	e7af      	b.n	8019564 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8019604:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8019608:	f04f 0e00 	mov.w	lr, #0
 801960c:	eb03 040e 	add.w	r4, r3, lr
 8019610:	2c00      	cmp	r4, #0
 8019612:	dc43      	bgt.n	801969c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8019614:	9a00      	ldr	r2, [sp, #0]
 8019616:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801961a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801961e:	9300      	str	r3, [sp, #0]
 8019620:	9b02      	ldr	r3, [sp, #8]
 8019622:	2b00      	cmp	r3, #0
 8019624:	f340 8098 	ble.w	8019758 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8019628:	ee30 0a04 	vadd.f32	s0, s0, s8
 801962c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019630:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019634:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019636:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801963a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801963e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019642:	eef0 6a62 	vmov.f32	s13, s5
 8019646:	ee61 7a27 	vmul.f32	s15, s2, s15
 801964a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801964e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019652:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8019656:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801965a:	eef0 6a43 	vmov.f32	s13, s6
 801965e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019662:	ee12 2a90 	vmov	r2, s5
 8019666:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801966a:	fb92 f3f3 	sdiv	r3, r2, r3
 801966e:	ee13 2a10 	vmov	r2, s6
 8019672:	9313      	str	r3, [sp, #76]	; 0x4c
 8019674:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019676:	fb92 f3f3 	sdiv	r3, r2, r3
 801967a:	9314      	str	r3, [sp, #80]	; 0x50
 801967c:	9b02      	ldr	r3, [sp, #8]
 801967e:	9a05      	ldr	r2, [sp, #20]
 8019680:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019684:	3b01      	subs	r3, #1
 8019686:	9302      	str	r3, [sp, #8]
 8019688:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801968c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801968e:	eeb0 3a67 	vmov.f32	s6, s15
 8019692:	bf08      	it	eq
 8019694:	4613      	moveq	r3, r2
 8019696:	eef0 2a47 	vmov.f32	s5, s14
 801969a:	e72a      	b.n	80194f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801969c:	140f      	asrs	r7, r1, #16
 801969e:	d454      	bmi.n	801974a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80196a0:	f8dc 6008 	ldr.w	r6, [ip, #8]
 80196a4:	42be      	cmp	r6, r7
 80196a6:	dd50      	ble.n	801974a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80196a8:	ea5f 4822 	movs.w	r8, r2, asr #16
 80196ac:	d44d      	bmi.n	801974a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80196ae:	f8dc 400c 	ldr.w	r4, [ip, #12]
 80196b2:	4544      	cmp	r4, r8
 80196b4:	dd49      	ble.n	801974a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80196b6:	9c04      	ldr	r4, [sp, #16]
 80196b8:	b236      	sxth	r6, r6
 80196ba:	fb08 4606 	mla	r6, r8, r6, r4
 80196be:	f06f 0001 	mvn.w	r0, #1
 80196c2:	f816 8007 	ldrb.w	r8, [r6, r7]
 80196c6:	9c01      	ldr	r4, [sp, #4]
 80196c8:	fb00 fa0e 	mul.w	sl, r0, lr
 80196cc:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80196d0:	9800      	ldr	r0, [sp, #0]
 80196d2:	eb04 0b08 	add.w	fp, r4, r8
 80196d6:	f830 400a 	ldrh.w	r4, [r0, sl]
 80196da:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80196de:	9801      	ldr	r0, [sp, #4]
 80196e0:	f89b b001 	ldrb.w	fp, [fp, #1]
 80196e4:	f810 8008 	ldrb.w	r8, [r0, r8]
 80196e8:	9800      	ldr	r0, [sp, #0]
 80196ea:	1227      	asrs	r7, r4, #8
 80196ec:	fb16 f609 	smulbb	r6, r6, r9
 80196f0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80196f4:	fb07 6705 	mla	r7, r7, r5, r6
 80196f8:	10e6      	asrs	r6, r4, #3
 80196fa:	00e4      	lsls	r4, r4, #3
 80196fc:	b2e4      	uxtb	r4, r4
 80196fe:	fb1b fb09 	smulbb	fp, fp, r9
 8019702:	fb14 f405 	smulbb	r4, r4, r5
 8019706:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801970a:	b2bf      	uxth	r7, r7
 801970c:	fb06 b605 	mla	r6, r6, r5, fp
 8019710:	fb08 4809 	mla	r8, r8, r9, r4
 8019714:	b2b6      	uxth	r6, r6
 8019716:	fa1f f888 	uxth.w	r8, r8
 801971a:	1c7c      	adds	r4, r7, #1
 801971c:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8019720:	f106 0b01 	add.w	fp, r6, #1
 8019724:	f108 0401 	add.w	r4, r8, #1
 8019728:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801972c:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8019730:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019734:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8019738:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801973c:	4327      	orrs	r7, r4
 801973e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8019742:	ea47 070b 	orr.w	r7, r7, fp
 8019746:	f820 700a 	strh.w	r7, [r0, sl]
 801974a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801974c:	4401      	add	r1, r0
 801974e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019750:	f10e 3eff 	add.w	lr, lr, #4294967295
 8019754:	4402      	add	r2, r0
 8019756:	e759      	b.n	801960c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8019758:	b007      	add	sp, #28
 801975a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08019760 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019760:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019764:	b085      	sub	sp, #20
 8019766:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801976a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801976c:	9203      	str	r2, [sp, #12]
 801976e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019772:	6870      	ldr	r0, [r6, #4]
 8019774:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019776:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801977a:	686f      	ldr	r7, [r5, #4]
 801977c:	9101      	str	r1, [sp, #4]
 801977e:	fb00 2404 	mla	r4, r0, r4, r2
 8019782:	6832      	ldr	r2, [r6, #0]
 8019784:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019788:	682a      	ldr	r2, [r5, #0]
 801978a:	9202      	str	r2, [sp, #8]
 801978c:	3704      	adds	r7, #4
 801978e:	9a01      	ldr	r2, [sp, #4]
 8019790:	2a00      	cmp	r2, #0
 8019792:	dc03      	bgt.n	801979c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8019794:	9a03      	ldr	r2, [sp, #12]
 8019796:	2a00      	cmp	r2, #0
 8019798:	f340 80cc 	ble.w	8019934 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801979c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801979e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80197a2:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80197a6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80197aa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80197ac:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80197b0:	2b00      	cmp	r3, #0
 80197b2:	dd0d      	ble.n	80197d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80197b4:	1406      	asrs	r6, r0, #16
 80197b6:	d405      	bmi.n	80197c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80197b8:	454e      	cmp	r6, r9
 80197ba:	da03      	bge.n	80197c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80197bc:	1416      	asrs	r6, r2, #16
 80197be:	d401      	bmi.n	80197c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80197c0:	4546      	cmp	r6, r8
 80197c2:	db06      	blt.n	80197d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80197c4:	9e12      	ldr	r6, [sp, #72]	; 0x48
 80197c6:	4460      	add	r0, ip
 80197c8:	4432      	add	r2, r6
 80197ca:	3b01      	subs	r3, #1
 80197cc:	3402      	adds	r4, #2
 80197ce:	e7ef      	b.n	80197b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 80197d0:	d00f      	beq.n	80197f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80197d2:	1e5e      	subs	r6, r3, #1
 80197d4:	fb0c 0e06 	mla	lr, ip, r6, r0
 80197d8:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 80197dc:	d543      	bpl.n	8019866 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80197de:	4698      	mov	r8, r3
 80197e0:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 80197e4:	f1b8 0f00 	cmp.w	r8, #0
 80197e8:	dc71      	bgt.n	80198ce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 80197ea:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80197ee:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80197f2:	9b01      	ldr	r3, [sp, #4]
 80197f4:	2b00      	cmp	r3, #0
 80197f6:	f340 809d 	ble.w	8019934 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80197fa:	ee30 0a04 	vadd.f32	s0, s0, s8
 80197fe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019802:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019806:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019808:	ee31 1a05 	vadd.f32	s2, s2, s10
 801980c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019810:	eeb0 6a62 	vmov.f32	s12, s5
 8019814:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019818:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801981c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019820:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019824:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019828:	eeb0 6a43 	vmov.f32	s12, s6
 801982c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019830:	ee12 2a90 	vmov	r2, s5
 8019834:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019838:	fb92 fcf3 	sdiv	ip, r2, r3
 801983c:	ee13 2a10 	vmov	r2, s6
 8019840:	fb92 f3f3 	sdiv	r3, r2, r3
 8019844:	9312      	str	r3, [sp, #72]	; 0x48
 8019846:	9b01      	ldr	r3, [sp, #4]
 8019848:	9a03      	ldr	r2, [sp, #12]
 801984a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801984e:	3b01      	subs	r3, #1
 8019850:	9301      	str	r3, [sp, #4]
 8019852:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019856:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019858:	eeb0 3a67 	vmov.f32	s6, s15
 801985c:	bf08      	it	eq
 801985e:	4613      	moveq	r3, r2
 8019860:	eef0 2a47 	vmov.f32	s5, s14
 8019864:	e793      	b.n	801978e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8019866:	45ce      	cmp	lr, r9
 8019868:	dab9      	bge.n	80197de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801986a:	9912      	ldr	r1, [sp, #72]	; 0x48
 801986c:	fb01 2606 	mla	r6, r1, r6, r2
 8019870:	1436      	asrs	r6, r6, #16
 8019872:	d4b4      	bmi.n	80197de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019874:	4546      	cmp	r6, r8
 8019876:	dab2      	bge.n	80197de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019878:	4698      	mov	r8, r3
 801987a:	46a2      	mov	sl, r4
 801987c:	f1b8 0f00 	cmp.w	r8, #0
 8019880:	ddb3      	ble.n	80197ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8019882:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019886:	9902      	ldr	r1, [sp, #8]
 8019888:	1416      	asrs	r6, r2, #16
 801988a:	fb09 1606 	mla	r6, r9, r6, r1
 801988e:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8019892:	492a      	ldr	r1, [pc, #168]	; (801993c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8019894:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8019898:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801989c:	eb07 0b0e 	add.w	fp, r7, lr
 80198a0:	4460      	add	r0, ip
 80198a2:	f89b 6001 	ldrb.w	r6, [fp, #1]
 80198a6:	f89b 9002 	ldrb.w	r9, [fp, #2]
 80198aa:	00f6      	lsls	r6, r6, #3
 80198ac:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 80198b0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80198b4:	ea49 0606 	orr.w	r6, r9, r6
 80198b8:	f817 900e 	ldrb.w	r9, [r7, lr]
 80198bc:	9912      	ldr	r1, [sp, #72]	; 0x48
 80198be:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 80198c2:	f82a 6b02 	strh.w	r6, [sl], #2
 80198c6:	440a      	add	r2, r1
 80198c8:	f108 38ff 	add.w	r8, r8, #4294967295
 80198cc:	e7d6      	b.n	801987c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80198ce:	ea5f 4920 	movs.w	r9, r0, asr #16
 80198d2:	d429      	bmi.n	8019928 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80198d4:	68ae      	ldr	r6, [r5, #8]
 80198d6:	454e      	cmp	r6, r9
 80198d8:	dd26      	ble.n	8019928 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80198da:	ea5f 4b22 	movs.w	fp, r2, asr #16
 80198de:	d423      	bmi.n	8019928 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80198e0:	68e9      	ldr	r1, [r5, #12]
 80198e2:	4559      	cmp	r1, fp
 80198e4:	dd20      	ble.n	8019928 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80198e6:	9902      	ldr	r1, [sp, #8]
 80198e8:	fa0f fe86 	sxth.w	lr, r6
 80198ec:	fb0b 1e0e 	mla	lr, fp, lr, r1
 80198f0:	f06f 0101 	mvn.w	r1, #1
 80198f4:	f81e e009 	ldrb.w	lr, [lr, r9]
 80198f8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80198fc:	eb07 060e 	add.w	r6, r7, lr
 8019900:	fb01 f908 	mul.w	r9, r1, r8
 8019904:	f896 b002 	ldrb.w	fp, [r6, #2]
 8019908:	7876      	ldrb	r6, [r6, #1]
 801990a:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801990e:	00f6      	lsls	r6, r6, #3
 8019910:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8019914:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8019918:	ea4b 0606 	orr.w	r6, fp, r6
 801991c:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8019920:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8019924:	f82a 6009 	strh.w	r6, [sl, r9]
 8019928:	9912      	ldr	r1, [sp, #72]	; 0x48
 801992a:	4460      	add	r0, ip
 801992c:	440a      	add	r2, r1
 801992e:	f108 38ff 	add.w	r8, r8, #4294967295
 8019932:	e757      	b.n	80197e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019934:	b005      	add	sp, #20
 8019936:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801993a:	bf00      	nop
 801993c:	fffff800 	.word	0xfffff800

08019940 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019940:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019944:	b087      	sub	sp, #28
 8019946:	468b      	mov	fp, r1
 8019948:	9815      	ldr	r0, [sp, #84]	; 0x54
 801994a:	9204      	str	r2, [sp, #16]
 801994c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019950:	9205      	str	r2, [sp, #20]
 8019952:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8019956:	6841      	ldr	r1, [r0, #4]
 8019958:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801995c:	fb01 2404 	mla	r4, r1, r4, r2
 8019960:	6802      	ldr	r2, [r0, #0]
 8019962:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019966:	f8dc 2000 	ldr.w	r2, [ip]
 801996a:	9201      	str	r2, [sp, #4]
 801996c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8019970:	3204      	adds	r2, #4
 8019972:	9202      	str	r2, [sp, #8]
 8019974:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019978:	f1bb 0f00 	cmp.w	fp, #0
 801997c:	dc03      	bgt.n	8019986 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801997e:	9a04      	ldr	r2, [sp, #16]
 8019980:	2a00      	cmp	r2, #0
 8019982:	f340 8138 	ble.w	8019bf6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8019986:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019988:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801998c:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8019990:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019994:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019996:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801999a:	2b00      	cmp	r3, #0
 801999c:	dd0e      	ble.n	80199bc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801999e:	1402      	asrs	r2, r0, #16
 80199a0:	d405      	bmi.n	80199ae <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80199a2:	42ba      	cmp	r2, r7
 80199a4:	da03      	bge.n	80199ae <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80199a6:	140a      	asrs	r2, r1, #16
 80199a8:	d401      	bmi.n	80199ae <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80199aa:	42b2      	cmp	r2, r6
 80199ac:	db07      	blt.n	80199be <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80199ae:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80199b0:	4410      	add	r0, r2
 80199b2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80199b4:	3b01      	subs	r3, #1
 80199b6:	4411      	add	r1, r2
 80199b8:	3402      	adds	r4, #2
 80199ba:	e7ee      	b.n	801999a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80199bc:	d019      	beq.n	80199f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80199be:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80199c0:	1e5a      	subs	r2, r3, #1
 80199c2:	fb05 0502 	mla	r5, r5, r2, r0
 80199c6:	142d      	asrs	r5, r5, #16
 80199c8:	d409      	bmi.n	80199de <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80199ca:	42bd      	cmp	r5, r7
 80199cc:	da07      	bge.n	80199de <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80199ce:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80199d0:	fb05 1202 	mla	r2, r5, r2, r1
 80199d4:	1412      	asrs	r2, r2, #16
 80199d6:	d402      	bmi.n	80199de <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80199d8:	42b2      	cmp	r2, r6
 80199da:	f2c0 80ac 	blt.w	8019b36 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 80199de:	f04f 0e00 	mov.w	lr, #0
 80199e2:	eb03 020e 	add.w	r2, r3, lr
 80199e6:	2a00      	cmp	r2, #0
 80199e8:	dc3e      	bgt.n	8019a68 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80199ea:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80199ee:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80199f2:	f1bb 0f00 	cmp.w	fp, #0
 80199f6:	f340 80fe 	ble.w	8019bf6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80199fa:	ee30 0a04 	vadd.f32	s0, s0, s8
 80199fe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019a02:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019a06:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019a08:	f1bb 0b01 	subs.w	fp, fp, #1
 8019a0c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019a10:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019a14:	eeb0 6a62 	vmov.f32	s12, s5
 8019a18:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019a1c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019a20:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019a24:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8019a28:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019a2c:	eeb0 6a43 	vmov.f32	s12, s6
 8019a30:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019a34:	ee12 2a90 	vmov	r2, s5
 8019a38:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019a3c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019a40:	ee13 2a10 	vmov	r2, s6
 8019a44:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019a48:	9313      	str	r3, [sp, #76]	; 0x4c
 8019a4a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019a4c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019a50:	9a04      	ldr	r2, [sp, #16]
 8019a52:	9314      	str	r3, [sp, #80]	; 0x50
 8019a54:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8019a58:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019a5a:	eeb0 3a67 	vmov.f32	s6, s15
 8019a5e:	bf08      	it	eq
 8019a60:	4613      	moveq	r3, r2
 8019a62:	eef0 2a47 	vmov.f32	s5, s14
 8019a66:	e787      	b.n	8019978 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8019a68:	1406      	asrs	r6, r0, #16
 8019a6a:	d45d      	bmi.n	8019b28 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019a6c:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8019a70:	42b5      	cmp	r5, r6
 8019a72:	dd59      	ble.n	8019b28 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019a74:	140f      	asrs	r7, r1, #16
 8019a76:	d457      	bmi.n	8019b28 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019a78:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8019a7c:	42ba      	cmp	r2, r7
 8019a7e:	dd53      	ble.n	8019b28 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019a80:	9a01      	ldr	r2, [sp, #4]
 8019a82:	b22d      	sxth	r5, r5
 8019a84:	fb07 2505 	mla	r5, r7, r5, r2
 8019a88:	5daa      	ldrb	r2, [r5, r6]
 8019a8a:	9d02      	ldr	r5, [sp, #8]
 8019a8c:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8019a90:	0e2e      	lsrs	r6, r5, #24
 8019a92:	d049      	beq.n	8019b28 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019a94:	f06f 0201 	mvn.w	r2, #1
 8019a98:	fb02 f20e 	mul.w	r2, r2, lr
 8019a9c:	9203      	str	r2, [sp, #12]
 8019a9e:	f834 8002 	ldrh.w	r8, [r4, r2]
 8019aa2:	9a05      	ldr	r2, [sp, #20]
 8019aa4:	4356      	muls	r6, r2
 8019aa6:	1c72      	adds	r2, r6, #1
 8019aa8:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8019aac:	1212      	asrs	r2, r2, #8
 8019aae:	fa1f f982 	uxth.w	r9, r2
 8019ab2:	ea4f 2728 	mov.w	r7, r8, asr #8
 8019ab6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8019aba:	43d2      	mvns	r2, r2
 8019abc:	b2d2      	uxtb	r2, r2
 8019abe:	fb16 f609 	smulbb	r6, r6, r9
 8019ac2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019ac6:	fb07 6702 	mla	r7, r7, r2, r6
 8019aca:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8019ace:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8019ad2:	b2ed      	uxtb	r5, r5
 8019ad4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019ad8:	fa5f f888 	uxtb.w	r8, r8
 8019adc:	fb15 f509 	smulbb	r5, r5, r9
 8019ae0:	fb08 5502 	mla	r5, r8, r2, r5
 8019ae4:	b2bf      	uxth	r7, r7
 8019ae6:	fb1a fa09 	smulbb	sl, sl, r9
 8019aea:	b2ad      	uxth	r5, r5
 8019aec:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019af0:	fb06 a602 	mla	r6, r6, r2, sl
 8019af4:	1c7a      	adds	r2, r7, #1
 8019af6:	f105 0a01 	add.w	sl, r5, #1
 8019afa:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8019afe:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019b02:	b2b6      	uxth	r6, r6
 8019b04:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019b08:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019b0c:	ea4a 0707 	orr.w	r7, sl, r7
 8019b10:	f106 0a01 	add.w	sl, r6, #1
 8019b14:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019b18:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019b1c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019b20:	9a03      	ldr	r2, [sp, #12]
 8019b22:	ea47 070a 	orr.w	r7, r7, sl
 8019b26:	52a7      	strh	r7, [r4, r2]
 8019b28:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019b2a:	4410      	add	r0, r2
 8019b2c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019b2e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8019b32:	4411      	add	r1, r2
 8019b34:	e755      	b.n	80199e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8019b36:	f04f 0800 	mov.w	r8, #0
 8019b3a:	eba3 0208 	sub.w	r2, r3, r8
 8019b3e:	2a00      	cmp	r2, #0
 8019b40:	f77f af53 	ble.w	80199ea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8019b44:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8019b48:	9f01      	ldr	r7, [sp, #4]
 8019b4a:	140a      	asrs	r2, r1, #16
 8019b4c:	1405      	asrs	r5, r0, #16
 8019b4e:	fb06 7202 	mla	r2, r6, r2, r7
 8019b52:	5d52      	ldrb	r2, [r2, r5]
 8019b54:	9d02      	ldr	r5, [sp, #8]
 8019b56:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8019b5a:	0e2e      	lsrs	r6, r5, #24
 8019b5c:	d044      	beq.n	8019be8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8019b5e:	9a05      	ldr	r2, [sp, #20]
 8019b60:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8019b64:	4356      	muls	r6, r2
 8019b66:	1c72      	adds	r2, r6, #1
 8019b68:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8019b6c:	1212      	asrs	r2, r2, #8
 8019b6e:	fa1f f982 	uxth.w	r9, r2
 8019b72:	ea4f 272e 	mov.w	r7, lr, asr #8
 8019b76:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8019b7a:	43d2      	mvns	r2, r2
 8019b7c:	b2d2      	uxtb	r2, r2
 8019b7e:	fb16 f609 	smulbb	r6, r6, r9
 8019b82:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019b86:	fb07 6702 	mla	r7, r7, r2, r6
 8019b8a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8019b8e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8019b92:	b2ed      	uxtb	r5, r5
 8019b94:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019b98:	fa5f fe8e 	uxtb.w	lr, lr
 8019b9c:	fb15 f509 	smulbb	r5, r5, r9
 8019ba0:	fb0e 5502 	mla	r5, lr, r2, r5
 8019ba4:	b2bf      	uxth	r7, r7
 8019ba6:	fb1a fa09 	smulbb	sl, sl, r9
 8019baa:	b2ad      	uxth	r5, r5
 8019bac:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019bb0:	fb06 a602 	mla	r6, r6, r2, sl
 8019bb4:	1c7a      	adds	r2, r7, #1
 8019bb6:	f105 0a01 	add.w	sl, r5, #1
 8019bba:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8019bbe:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019bc2:	b2b6      	uxth	r6, r6
 8019bc4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019bc8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019bcc:	ea4a 0707 	orr.w	r7, sl, r7
 8019bd0:	f106 0a01 	add.w	sl, r6, #1
 8019bd4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019bd8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019bdc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019be0:	ea47 070a 	orr.w	r7, r7, sl
 8019be4:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8019be8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019bea:	4410      	add	r0, r2
 8019bec:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019bee:	f108 0801 	add.w	r8, r8, #1
 8019bf2:	4411      	add	r1, r2
 8019bf4:	e7a1      	b.n	8019b3a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8019bf6:	b007      	add	sp, #28
 8019bf8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019bfc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019bfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019c00:	b085      	sub	sp, #20
 8019c02:	468b      	mov	fp, r1
 8019c04:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019c06:	9203      	str	r2, [sp, #12]
 8019c08:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019c0c:	6841      	ldr	r1, [r0, #4]
 8019c0e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8019c12:	fb01 2404 	mla	r4, r1, r4, r2
 8019c16:	6802      	ldr	r2, [r0, #0]
 8019c18:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019c1c:	f8de 2000 	ldr.w	r2, [lr]
 8019c20:	9200      	str	r2, [sp, #0]
 8019c22:	f8de 2004 	ldr.w	r2, [lr, #4]
 8019c26:	3204      	adds	r2, #4
 8019c28:	9201      	str	r2, [sp, #4]
 8019c2a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019c2e:	f1bb 0f00 	cmp.w	fp, #0
 8019c32:	dc03      	bgt.n	8019c3c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8019c34:	9a03      	ldr	r2, [sp, #12]
 8019c36:	2a00      	cmp	r2, #0
 8019c38:	f340 8153 	ble.w	8019ee2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8019c3c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019c3e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8019c42:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8019c46:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019c4a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019c4c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019c50:	2b00      	cmp	r3, #0
 8019c52:	dd0e      	ble.n	8019c72 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019c54:	1408      	asrs	r0, r1, #16
 8019c56:	d405      	bmi.n	8019c64 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019c58:	42b8      	cmp	r0, r7
 8019c5a:	da03      	bge.n	8019c64 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019c5c:	1410      	asrs	r0, r2, #16
 8019c5e:	d401      	bmi.n	8019c64 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019c60:	42b0      	cmp	r0, r6
 8019c62:	db07      	blt.n	8019c74 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8019c64:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019c66:	4401      	add	r1, r0
 8019c68:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019c6a:	3b01      	subs	r3, #1
 8019c6c:	4402      	add	r2, r0
 8019c6e:	3402      	adds	r4, #2
 8019c70:	e7ee      	b.n	8019c50 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8019c72:	d017      	beq.n	8019ca4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8019c74:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019c76:	1e58      	subs	r0, r3, #1
 8019c78:	fb05 1500 	mla	r5, r5, r0, r1
 8019c7c:	142d      	asrs	r5, r5, #16
 8019c7e:	d409      	bmi.n	8019c94 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019c80:	42bd      	cmp	r5, r7
 8019c82:	da07      	bge.n	8019c94 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019c84:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019c86:	fb05 2000 	mla	r0, r5, r0, r2
 8019c8a:	1400      	asrs	r0, r0, #16
 8019c8c:	d402      	bmi.n	8019c94 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019c8e:	42b0      	cmp	r0, r6
 8019c90:	f2c0 80bc 	blt.w	8019e0c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8019c94:	2600      	movs	r6, #0
 8019c96:	1998      	adds	r0, r3, r6
 8019c98:	2800      	cmp	r0, #0
 8019c9a:	dc3e      	bgt.n	8019d1a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8019c9c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019ca0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019ca4:	f1bb 0f00 	cmp.w	fp, #0
 8019ca8:	f340 811b 	ble.w	8019ee2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8019cac:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019cb0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019cb4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019cb8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019cba:	f1bb 0b01 	subs.w	fp, fp, #1
 8019cbe:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019cc2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019cc6:	eeb0 6a62 	vmov.f32	s12, s5
 8019cca:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019cce:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019cd2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019cd6:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019cda:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019cde:	eeb0 6a43 	vmov.f32	s12, s6
 8019ce2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019ce6:	ee12 2a90 	vmov	r2, s5
 8019cea:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019cee:	fb92 f3f3 	sdiv	r3, r2, r3
 8019cf2:	ee13 2a10 	vmov	r2, s6
 8019cf6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019cfa:	9311      	str	r3, [sp, #68]	; 0x44
 8019cfc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019cfe:	fb92 f3f3 	sdiv	r3, r2, r3
 8019d02:	9a03      	ldr	r2, [sp, #12]
 8019d04:	9312      	str	r3, [sp, #72]	; 0x48
 8019d06:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019d0a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019d0c:	eeb0 3a67 	vmov.f32	s6, s15
 8019d10:	bf08      	it	eq
 8019d12:	4613      	moveq	r3, r2
 8019d14:	eef0 2a47 	vmov.f32	s5, s14
 8019d18:	e789      	b.n	8019c2e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8019d1a:	140f      	asrs	r7, r1, #16
 8019d1c:	d426      	bmi.n	8019d6c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019d1e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8019d22:	42bd      	cmp	r5, r7
 8019d24:	dd22      	ble.n	8019d6c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019d26:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019d2a:	d41f      	bmi.n	8019d6c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019d2c:	f8de 000c 	ldr.w	r0, [lr, #12]
 8019d30:	4560      	cmp	r0, ip
 8019d32:	dd1b      	ble.n	8019d6c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019d34:	9800      	ldr	r0, [sp, #0]
 8019d36:	b22d      	sxth	r5, r5
 8019d38:	fb0c 0505 	mla	r5, ip, r5, r0
 8019d3c:	5de8      	ldrb	r0, [r5, r7]
 8019d3e:	9d01      	ldr	r5, [sp, #4]
 8019d40:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8019d44:	0e07      	lsrs	r7, r0, #24
 8019d46:	2fff      	cmp	r7, #255	; 0xff
 8019d48:	d116      	bne.n	8019d78 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019d4a:	f06f 0501 	mvn.w	r5, #1
 8019d4e:	fb05 f706 	mul.w	r7, r5, r6
 8019d52:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8019d56:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8019d5a:	0945      	lsrs	r5, r0, #5
 8019d5c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019d60:	ea4c 0505 	orr.w	r5, ip, r5
 8019d64:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8019d68:	4305      	orrs	r5, r0
 8019d6a:	53e5      	strh	r5, [r4, r7]
 8019d6c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019d6e:	4401      	add	r1, r0
 8019d70:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019d72:	3e01      	subs	r6, #1
 8019d74:	4402      	add	r2, r0
 8019d76:	e78e      	b.n	8019c96 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019d78:	b2fd      	uxtb	r5, r7
 8019d7a:	2f00      	cmp	r7, #0
 8019d7c:	d0f6      	beq.n	8019d6c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019d7e:	f06f 0701 	mvn.w	r7, #1
 8019d82:	4377      	muls	r7, r6
 8019d84:	fa1f f985 	uxth.w	r9, r5
 8019d88:	f834 8007 	ldrh.w	r8, [r4, r7]
 8019d8c:	9702      	str	r7, [sp, #8]
 8019d8e:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8019d92:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8019d96:	43ed      	mvns	r5, r5
 8019d98:	b2ed      	uxtb	r5, r5
 8019d9a:	fb17 f709 	smulbb	r7, r7, r9
 8019d9e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019da2:	fb0c 7c05 	mla	ip, ip, r5, r7
 8019da6:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8019daa:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8019dae:	b2c0      	uxtb	r0, r0
 8019db0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019db4:	fa5f f888 	uxtb.w	r8, r8
 8019db8:	fb10 f009 	smulbb	r0, r0, r9
 8019dbc:	fb08 0005 	mla	r0, r8, r5, r0
 8019dc0:	b280      	uxth	r0, r0
 8019dc2:	fa1f fc8c 	uxth.w	ip, ip
 8019dc6:	fb1a fa09 	smulbb	sl, sl, r9
 8019dca:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019dce:	fb07 a705 	mla	r7, r7, r5, sl
 8019dd2:	f100 0a01 	add.w	sl, r0, #1
 8019dd6:	f10c 0501 	add.w	r5, ip, #1
 8019dda:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8019dde:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019de2:	b2bf      	uxth	r7, r7
 8019de4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019de8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019dec:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019df0:	f107 0a01 	add.w	sl, r7, #1
 8019df4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8019df8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019dfc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019e00:	9802      	ldr	r0, [sp, #8]
 8019e02:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019e06:	f824 c000 	strh.w	ip, [r4, r0]
 8019e0a:	e7af      	b.n	8019d6c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019e0c:	f04f 0800 	mov.w	r8, #0
 8019e10:	eba3 0008 	sub.w	r0, r3, r8
 8019e14:	2800      	cmp	r0, #0
 8019e16:	f77f af41 	ble.w	8019c9c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019e1a:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8019e1e:	9f00      	ldr	r7, [sp, #0]
 8019e20:	1410      	asrs	r0, r2, #16
 8019e22:	140d      	asrs	r5, r1, #16
 8019e24:	fb06 7000 	mla	r0, r6, r0, r7
 8019e28:	5d40      	ldrb	r0, [r0, r5]
 8019e2a:	9d01      	ldr	r5, [sp, #4]
 8019e2c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8019e30:	0e2e      	lsrs	r6, r5, #24
 8019e32:	2eff      	cmp	r6, #255	; 0xff
 8019e34:	d112      	bne.n	8019e5c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8019e36:	482c      	ldr	r0, [pc, #176]	; (8019ee8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8019e38:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8019e3c:	0968      	lsrs	r0, r5, #5
 8019e3e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019e42:	4330      	orrs	r0, r6
 8019e44:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8019e48:	4328      	orrs	r0, r5
 8019e4a:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8019e4e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019e50:	4401      	add	r1, r0
 8019e52:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019e54:	f108 0801 	add.w	r8, r8, #1
 8019e58:	4402      	add	r2, r0
 8019e5a:	e7d9      	b.n	8019e10 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019e5c:	b2f0      	uxtb	r0, r6
 8019e5e:	2e00      	cmp	r6, #0
 8019e60:	d0f5      	beq.n	8019e4e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8019e62:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8019e66:	fa1f f980 	uxth.w	r9, r0
 8019e6a:	ea4f 272c 	mov.w	r7, ip, asr #8
 8019e6e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8019e72:	43c0      	mvns	r0, r0
 8019e74:	b2c0      	uxtb	r0, r0
 8019e76:	fb16 f609 	smulbb	r6, r6, r9
 8019e7a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019e7e:	fb07 6700 	mla	r7, r7, r0, r6
 8019e82:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8019e86:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8019e8a:	b2ed      	uxtb	r5, r5
 8019e8c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019e90:	fa5f fc8c 	uxtb.w	ip, ip
 8019e94:	fb15 f509 	smulbb	r5, r5, r9
 8019e98:	fb0c 5500 	mla	r5, ip, r0, r5
 8019e9c:	b2bf      	uxth	r7, r7
 8019e9e:	fb1a fa09 	smulbb	sl, sl, r9
 8019ea2:	b2ad      	uxth	r5, r5
 8019ea4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019ea8:	fb06 a600 	mla	r6, r6, r0, sl
 8019eac:	1c78      	adds	r0, r7, #1
 8019eae:	f105 0a01 	add.w	sl, r5, #1
 8019eb2:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8019eb6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019eba:	b2b6      	uxth	r6, r6
 8019ebc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019ec0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019ec4:	ea4a 0707 	orr.w	r7, sl, r7
 8019ec8:	f106 0a01 	add.w	sl, r6, #1
 8019ecc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019ed0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019ed4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019ed8:	ea47 070a 	orr.w	r7, r7, sl
 8019edc:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8019ee0:	e7b5      	b.n	8019e4e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8019ee2:	b005      	add	sp, #20
 8019ee4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019ee8:	fffff800 	.word	0xfffff800

08019eec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019eec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019ef0:	b087      	sub	sp, #28
 8019ef2:	468b      	mov	fp, r1
 8019ef4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8019ef6:	9204      	str	r2, [sp, #16]
 8019ef8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019efc:	9205      	str	r2, [sp, #20]
 8019efe:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8019f02:	6861      	ldr	r1, [r4, #4]
 8019f04:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8019f08:	fb01 2000 	mla	r0, r1, r0, r2
 8019f0c:	6822      	ldr	r2, [r4, #0]
 8019f0e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8019f12:	f8de 2000 	ldr.w	r2, [lr]
 8019f16:	9201      	str	r2, [sp, #4]
 8019f18:	f8de 2004 	ldr.w	r2, [lr, #4]
 8019f1c:	9202      	str	r2, [sp, #8]
 8019f1e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019f22:	f1bb 0f00 	cmp.w	fp, #0
 8019f26:	dc03      	bgt.n	8019f30 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8019f28:	9a04      	ldr	r2, [sp, #16]
 8019f2a:	2a00      	cmp	r2, #0
 8019f2c:	f340 8142 	ble.w	801a1b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8019f30:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019f32:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8019f36:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8019f3a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019f3e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019f40:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019f44:	2b00      	cmp	r3, #0
 8019f46:	dd0e      	ble.n	8019f66 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019f48:	140c      	asrs	r4, r1, #16
 8019f4a:	d405      	bmi.n	8019f58 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019f4c:	42bc      	cmp	r4, r7
 8019f4e:	da03      	bge.n	8019f58 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019f50:	1414      	asrs	r4, r2, #16
 8019f52:	d401      	bmi.n	8019f58 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019f54:	42b4      	cmp	r4, r6
 8019f56:	db07      	blt.n	8019f68 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019f58:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019f5a:	4421      	add	r1, r4
 8019f5c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019f5e:	3b01      	subs	r3, #1
 8019f60:	4422      	add	r2, r4
 8019f62:	3002      	adds	r0, #2
 8019f64:	e7ee      	b.n	8019f44 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8019f66:	d019      	beq.n	8019f9c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8019f68:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019f6a:	1e5c      	subs	r4, r3, #1
 8019f6c:	fb05 1504 	mla	r5, r5, r4, r1
 8019f70:	142d      	asrs	r5, r5, #16
 8019f72:	d409      	bmi.n	8019f88 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019f74:	42bd      	cmp	r5, r7
 8019f76:	da07      	bge.n	8019f88 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019f78:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019f7a:	fb05 2404 	mla	r4, r5, r4, r2
 8019f7e:	1424      	asrs	r4, r4, #16
 8019f80:	d402      	bmi.n	8019f88 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019f82:	42b4      	cmp	r4, r6
 8019f84:	f2c0 80b1 	blt.w	801a0ea <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8019f88:	f04f 0800 	mov.w	r8, #0
 8019f8c:	eb03 0408 	add.w	r4, r3, r8
 8019f90:	2c00      	cmp	r4, #0
 8019f92:	dc3e      	bgt.n	801a012 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8019f94:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019f98:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019f9c:	f1bb 0f00 	cmp.w	fp, #0
 8019fa0:	f340 8108 	ble.w	801a1b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8019fa4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019fa8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019fac:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019fb0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019fb2:	f1bb 0b01 	subs.w	fp, fp, #1
 8019fb6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019fba:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019fbe:	eeb0 6a62 	vmov.f32	s12, s5
 8019fc2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019fc6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019fca:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019fce:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8019fd2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019fd6:	eeb0 6a43 	vmov.f32	s12, s6
 8019fda:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019fde:	ee12 2a90 	vmov	r2, s5
 8019fe2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019fe6:	fb92 f3f3 	sdiv	r3, r2, r3
 8019fea:	ee13 2a10 	vmov	r2, s6
 8019fee:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019ff2:	9313      	str	r3, [sp, #76]	; 0x4c
 8019ff4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019ff6:	fb92 f3f3 	sdiv	r3, r2, r3
 8019ffa:	9a04      	ldr	r2, [sp, #16]
 8019ffc:	9314      	str	r3, [sp, #80]	; 0x50
 8019ffe:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a002:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a004:	eeb0 3a67 	vmov.f32	s6, s15
 801a008:	bf08      	it	eq
 801a00a:	4613      	moveq	r3, r2
 801a00c:	eef0 2a47 	vmov.f32	s5, s14
 801a010:	e787      	b.n	8019f22 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801a012:	140e      	asrs	r6, r1, #16
 801a014:	d462      	bmi.n	801a0dc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a016:	f8de 5008 	ldr.w	r5, [lr, #8]
 801a01a:	42b5      	cmp	r5, r6
 801a01c:	dd5e      	ble.n	801a0dc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a01e:	1417      	asrs	r7, r2, #16
 801a020:	d45c      	bmi.n	801a0dc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a022:	f8de 400c 	ldr.w	r4, [lr, #12]
 801a026:	42bc      	cmp	r4, r7
 801a028:	dd58      	ble.n	801a0dc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a02a:	b22d      	sxth	r5, r5
 801a02c:	fb07 6505 	mla	r5, r7, r5, r6
 801a030:	9c02      	ldr	r4, [sp, #8]
 801a032:	5d66      	ldrb	r6, [r4, r5]
 801a034:	2e00      	cmp	r6, #0
 801a036:	d051      	beq.n	801a0dc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a038:	9c01      	ldr	r4, [sp, #4]
 801a03a:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801a03e:	f06f 0401 	mvn.w	r4, #1
 801a042:	fb04 f408 	mul.w	r4, r4, r8
 801a046:	9403      	str	r4, [sp, #12]
 801a048:	5b05      	ldrh	r5, [r0, r4]
 801a04a:	9c05      	ldr	r4, [sp, #20]
 801a04c:	4366      	muls	r6, r4
 801a04e:	1c74      	adds	r4, r6, #1
 801a050:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801a054:	1224      	asrs	r4, r4, #8
 801a056:	b2a7      	uxth	r7, r4
 801a058:	122e      	asrs	r6, r5, #8
 801a05a:	43e4      	mvns	r4, r4
 801a05c:	b2e4      	uxtb	r4, r4
 801a05e:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801a062:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a066:	fb16 f604 	smulbb	r6, r6, r4
 801a06a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801a06e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a072:	00ed      	lsls	r5, r5, #3
 801a074:	fb0c 6c07 	mla	ip, ip, r7, r6
 801a078:	b2ed      	uxtb	r5, r5
 801a07a:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801a07e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801a082:	fb15 f504 	smulbb	r5, r5, r4
 801a086:	fa5f f989 	uxtb.w	r9, r9
 801a08a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801a08e:	fb09 5507 	mla	r5, r9, r7, r5
 801a092:	fb1a fa04 	smulbb	sl, sl, r4
 801a096:	fa1f fc8c 	uxth.w	ip, ip
 801a09a:	b2ad      	uxth	r5, r5
 801a09c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a0a0:	fb06 a607 	mla	r6, r6, r7, sl
 801a0a4:	f10c 0401 	add.w	r4, ip, #1
 801a0a8:	f105 0a01 	add.w	sl, r5, #1
 801a0ac:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801a0b0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a0b4:	b2b6      	uxth	r6, r6
 801a0b6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a0ba:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a0be:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a0c2:	f106 0a01 	add.w	sl, r6, #1
 801a0c6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a0ca:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a0ce:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a0d2:	9c03      	ldr	r4, [sp, #12]
 801a0d4:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a0d8:	f820 c004 	strh.w	ip, [r0, r4]
 801a0dc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a0de:	4421      	add	r1, r4
 801a0e0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a0e2:	f108 38ff 	add.w	r8, r8, #4294967295
 801a0e6:	4422      	add	r2, r4
 801a0e8:	e750      	b.n	8019f8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a0ea:	f04f 0900 	mov.w	r9, #0
 801a0ee:	eba3 0409 	sub.w	r4, r3, r9
 801a0f2:	2c00      	cmp	r4, #0
 801a0f4:	f77f af4e 	ble.w	8019f94 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801a0f8:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801a0fc:	140d      	asrs	r5, r1, #16
 801a0fe:	1414      	asrs	r4, r2, #16
 801a100:	fb06 5404 	mla	r4, r6, r4, r5
 801a104:	9d02      	ldr	r5, [sp, #8]
 801a106:	5d2e      	ldrb	r6, [r5, r4]
 801a108:	2e00      	cmp	r6, #0
 801a10a:	d04c      	beq.n	801a1a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801a10c:	9d01      	ldr	r5, [sp, #4]
 801a10e:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801a112:	9c05      	ldr	r4, [sp, #20]
 801a114:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801a118:	4366      	muls	r6, r4
 801a11a:	1c74      	adds	r4, r6, #1
 801a11c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801a120:	1224      	asrs	r4, r4, #8
 801a122:	b2a7      	uxth	r7, r4
 801a124:	122e      	asrs	r6, r5, #8
 801a126:	43e4      	mvns	r4, r4
 801a128:	b2e4      	uxtb	r4, r4
 801a12a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801a12e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a132:	fb16 f604 	smulbb	r6, r6, r4
 801a136:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801a13a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a13e:	00ed      	lsls	r5, r5, #3
 801a140:	fb0c 6c07 	mla	ip, ip, r7, r6
 801a144:	b2ed      	uxtb	r5, r5
 801a146:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801a14a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a14e:	fb15 f504 	smulbb	r5, r5, r4
 801a152:	fa5f f888 	uxtb.w	r8, r8
 801a156:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801a15a:	fb08 5507 	mla	r5, r8, r7, r5
 801a15e:	fb1a fa04 	smulbb	sl, sl, r4
 801a162:	fa1f fc8c 	uxth.w	ip, ip
 801a166:	b2ad      	uxth	r5, r5
 801a168:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a16c:	fb06 a607 	mla	r6, r6, r7, sl
 801a170:	f10c 0401 	add.w	r4, ip, #1
 801a174:	f105 0a01 	add.w	sl, r5, #1
 801a178:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801a17c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a180:	b2b6      	uxth	r6, r6
 801a182:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a186:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a18a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a18e:	f106 0a01 	add.w	sl, r6, #1
 801a192:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a196:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a19a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a19e:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a1a2:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801a1a6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a1a8:	4421      	add	r1, r4
 801a1aa:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a1ac:	f109 0901 	add.w	r9, r9, #1
 801a1b0:	4422      	add	r2, r4
 801a1b2:	e79c      	b.n	801a0ee <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801a1b4:	b007      	add	sp, #28
 801a1b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a1ba <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a1ba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a1be:	b085      	sub	sp, #20
 801a1c0:	468b      	mov	fp, r1
 801a1c2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a1c4:	9203      	str	r2, [sp, #12]
 801a1c6:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801a1ca:	6861      	ldr	r1, [r4, #4]
 801a1cc:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801a1d0:	fb01 2000 	mla	r0, r1, r0, r2
 801a1d4:	6822      	ldr	r2, [r4, #0]
 801a1d6:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801a1da:	f8d8 2000 	ldr.w	r2, [r8]
 801a1de:	9200      	str	r2, [sp, #0]
 801a1e0:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801a1e4:	9201      	str	r2, [sp, #4]
 801a1e6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a1ea:	f1bb 0f00 	cmp.w	fp, #0
 801a1ee:	dc03      	bgt.n	801a1f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801a1f0:	9a03      	ldr	r2, [sp, #12]
 801a1f2:	2a00      	cmp	r2, #0
 801a1f4:	f340 8146 	ble.w	801a484 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801a1f8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a1fa:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801a1fe:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801a202:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a206:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a208:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a20c:	2b00      	cmp	r3, #0
 801a20e:	dd0e      	ble.n	801a22e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801a210:	140c      	asrs	r4, r1, #16
 801a212:	d405      	bmi.n	801a220 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a214:	42bc      	cmp	r4, r7
 801a216:	da03      	bge.n	801a220 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a218:	1414      	asrs	r4, r2, #16
 801a21a:	d401      	bmi.n	801a220 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a21c:	42b4      	cmp	r4, r6
 801a21e:	db07      	blt.n	801a230 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a220:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a222:	4421      	add	r1, r4
 801a224:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801a226:	3b01      	subs	r3, #1
 801a228:	4422      	add	r2, r4
 801a22a:	3002      	adds	r0, #2
 801a22c:	e7ee      	b.n	801a20c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801a22e:	d017      	beq.n	801a260 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a230:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a232:	1e5c      	subs	r4, r3, #1
 801a234:	fb05 1504 	mla	r5, r5, r4, r1
 801a238:	142d      	asrs	r5, r5, #16
 801a23a:	d409      	bmi.n	801a250 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a23c:	42bd      	cmp	r5, r7
 801a23e:	da07      	bge.n	801a250 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a240:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a242:	fb05 2404 	mla	r4, r5, r4, r2
 801a246:	1424      	asrs	r4, r4, #16
 801a248:	d402      	bmi.n	801a250 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a24a:	42b4      	cmp	r4, r6
 801a24c:	f2c0 80b3 	blt.w	801a3b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801a250:	2600      	movs	r6, #0
 801a252:	199c      	adds	r4, r3, r6
 801a254:	2c00      	cmp	r4, #0
 801a256:	dc3e      	bgt.n	801a2d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801a258:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a25c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a260:	f1bb 0f00 	cmp.w	fp, #0
 801a264:	f340 810e 	ble.w	801a484 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801a268:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a26c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a270:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a274:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a276:	f1bb 0b01 	subs.w	fp, fp, #1
 801a27a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a27e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a282:	eeb0 6a62 	vmov.f32	s12, s5
 801a286:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a28a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a28e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a292:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a296:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a29a:	eeb0 6a43 	vmov.f32	s12, s6
 801a29e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a2a2:	ee12 2a90 	vmov	r2, s5
 801a2a6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a2aa:	fb92 f3f3 	sdiv	r3, r2, r3
 801a2ae:	ee13 2a10 	vmov	r2, s6
 801a2b2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a2b6:	9311      	str	r3, [sp, #68]	; 0x44
 801a2b8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a2ba:	fb92 f3f3 	sdiv	r3, r2, r3
 801a2be:	9a03      	ldr	r2, [sp, #12]
 801a2c0:	9312      	str	r3, [sp, #72]	; 0x48
 801a2c2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a2c6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a2c8:	eeb0 3a67 	vmov.f32	s6, s15
 801a2cc:	bf08      	it	eq
 801a2ce:	4613      	moveq	r3, r2
 801a2d0:	eef0 2a47 	vmov.f32	s5, s14
 801a2d4:	e789      	b.n	801a1ea <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801a2d6:	140f      	asrs	r7, r1, #16
 801a2d8:	d418      	bmi.n	801a30c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801a2da:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801a2de:	42bd      	cmp	r5, r7
 801a2e0:	dd14      	ble.n	801a30c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801a2e2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a2e6:	d411      	bmi.n	801a30c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801a2e8:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801a2ec:	4564      	cmp	r4, ip
 801a2ee:	dd0d      	ble.n	801a30c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801a2f0:	b22d      	sxth	r5, r5
 801a2f2:	fb0c 7505 	mla	r5, ip, r5, r7
 801a2f6:	9c01      	ldr	r4, [sp, #4]
 801a2f8:	5d64      	ldrb	r4, [r4, r5]
 801a2fa:	2cff      	cmp	r4, #255	; 0xff
 801a2fc:	d10c      	bne.n	801a318 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801a2fe:	9c00      	ldr	r4, [sp, #0]
 801a300:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801a304:	f06f 0401 	mvn.w	r4, #1
 801a308:	4374      	muls	r4, r6
 801a30a:	5305      	strh	r5, [r0, r4]
 801a30c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a30e:	4421      	add	r1, r4
 801a310:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801a312:	3e01      	subs	r6, #1
 801a314:	4422      	add	r2, r4
 801a316:	e79c      	b.n	801a252 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a318:	2c00      	cmp	r4, #0
 801a31a:	d0f7      	beq.n	801a30c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801a31c:	9f00      	ldr	r7, [sp, #0]
 801a31e:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801a322:	f06f 0501 	mvn.w	r5, #1
 801a326:	4375      	muls	r5, r6
 801a328:	9502      	str	r5, [sp, #8]
 801a32a:	5b45      	ldrh	r5, [r0, r5]
 801a32c:	fa1f fc84 	uxth.w	ip, r4
 801a330:	122f      	asrs	r7, r5, #8
 801a332:	43e4      	mvns	r4, r4
 801a334:	b2e4      	uxtb	r4, r4
 801a336:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801a33a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a33e:	fb17 f704 	smulbb	r7, r7, r4
 801a342:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801a346:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a34a:	00ed      	lsls	r5, r5, #3
 801a34c:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801a350:	b2ed      	uxtb	r5, r5
 801a352:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801a356:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801a35a:	fb15 f504 	smulbb	r5, r5, r4
 801a35e:	fa5f f989 	uxtb.w	r9, r9
 801a362:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801a366:	fb09 550c 	mla	r5, r9, ip, r5
 801a36a:	fb1a fa04 	smulbb	sl, sl, r4
 801a36e:	fa1f fe8e 	uxth.w	lr, lr
 801a372:	b2ad      	uxth	r5, r5
 801a374:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a378:	fb07 a70c 	mla	r7, r7, ip, sl
 801a37c:	f10e 0401 	add.w	r4, lr, #1
 801a380:	f105 0a01 	add.w	sl, r5, #1
 801a384:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801a388:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a38c:	b2bf      	uxth	r7, r7
 801a38e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a392:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801a396:	ea4a 0e0e 	orr.w	lr, sl, lr
 801a39a:	f107 0a01 	add.w	sl, r7, #1
 801a39e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801a3a2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a3a6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a3aa:	9c02      	ldr	r4, [sp, #8]
 801a3ac:	ea4e 0e0a 	orr.w	lr, lr, sl
 801a3b0:	f820 e004 	strh.w	lr, [r0, r4]
 801a3b4:	e7aa      	b.n	801a30c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801a3b6:	f04f 0900 	mov.w	r9, #0
 801a3ba:	eba3 0409 	sub.w	r4, r3, r9
 801a3be:	2c00      	cmp	r4, #0
 801a3c0:	f77f af4a 	ble.w	801a258 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a3c4:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801a3c8:	1414      	asrs	r4, r2, #16
 801a3ca:	140d      	asrs	r5, r1, #16
 801a3cc:	fb06 5504 	mla	r5, r6, r4, r5
 801a3d0:	9c01      	ldr	r4, [sp, #4]
 801a3d2:	5d64      	ldrb	r4, [r4, r5]
 801a3d4:	2cff      	cmp	r4, #255	; 0xff
 801a3d6:	d10b      	bne.n	801a3f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801a3d8:	9c00      	ldr	r4, [sp, #0]
 801a3da:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801a3de:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801a3e2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a3e4:	4421      	add	r1, r4
 801a3e6:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801a3e8:	f109 0901 	add.w	r9, r9, #1
 801a3ec:	4422      	add	r2, r4
 801a3ee:	e7e4      	b.n	801a3ba <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801a3f0:	2c00      	cmp	r4, #0
 801a3f2:	d0f6      	beq.n	801a3e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801a3f4:	9e00      	ldr	r6, [sp, #0]
 801a3f6:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801a3fa:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801a3fe:	b2a7      	uxth	r7, r4
 801a400:	122e      	asrs	r6, r5, #8
 801a402:	43e4      	mvns	r4, r4
 801a404:	b2e4      	uxtb	r4, r4
 801a406:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a40a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a40e:	fb16 f604 	smulbb	r6, r6, r4
 801a412:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801a416:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a41a:	00ed      	lsls	r5, r5, #3
 801a41c:	fb0c 6c07 	mla	ip, ip, r7, r6
 801a420:	b2ed      	uxtb	r5, r5
 801a422:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801a426:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a42a:	fb15 f504 	smulbb	r5, r5, r4
 801a42e:	fa5f fe8e 	uxtb.w	lr, lr
 801a432:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801a436:	fb0e 5507 	mla	r5, lr, r7, r5
 801a43a:	fb1a fa04 	smulbb	sl, sl, r4
 801a43e:	fa1f fc8c 	uxth.w	ip, ip
 801a442:	b2ad      	uxth	r5, r5
 801a444:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a448:	fb06 a607 	mla	r6, r6, r7, sl
 801a44c:	f10c 0401 	add.w	r4, ip, #1
 801a450:	f105 0a01 	add.w	sl, r5, #1
 801a454:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801a458:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a45c:	b2b6      	uxth	r6, r6
 801a45e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a462:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a466:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a46a:	f106 0a01 	add.w	sl, r6, #1
 801a46e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a472:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a476:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a47a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a47e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801a482:	e7ae      	b.n	801a3e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801a484:	b005      	add	sp, #20
 801a486:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a48a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a48a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a48e:	b085      	sub	sp, #20
 801a490:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a492:	9203      	str	r2, [sp, #12]
 801a494:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801a498:	9201      	str	r2, [sp, #4]
 801a49a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a49e:	9100      	str	r1, [sp, #0]
 801a4a0:	6841      	ldr	r1, [r0, #4]
 801a4a2:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801a4a6:	fb01 2404 	mla	r4, r1, r4, r2
 801a4aa:	6802      	ldr	r2, [r0, #0]
 801a4ac:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a4b0:	f8de 2000 	ldr.w	r2, [lr]
 801a4b4:	9202      	str	r2, [sp, #8]
 801a4b6:	9a01      	ldr	r2, [sp, #4]
 801a4b8:	43d6      	mvns	r6, r2
 801a4ba:	b2f6      	uxtb	r6, r6
 801a4bc:	9a00      	ldr	r2, [sp, #0]
 801a4be:	2a00      	cmp	r2, #0
 801a4c0:	dc03      	bgt.n	801a4ca <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801a4c2:	9a03      	ldr	r2, [sp, #12]
 801a4c4:	2a00      	cmp	r2, #0
 801a4c6:	f340 8124 	ble.w	801a712 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801a4ca:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a4cc:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801a4d0:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801a4d4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a4d8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a4da:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a4de:	2b00      	cmp	r3, #0
 801a4e0:	dd0e      	ble.n	801a500 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a4e2:	1408      	asrs	r0, r1, #16
 801a4e4:	d405      	bmi.n	801a4f2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a4e6:	4560      	cmp	r0, ip
 801a4e8:	da03      	bge.n	801a4f2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a4ea:	1410      	asrs	r0, r2, #16
 801a4ec:	d401      	bmi.n	801a4f2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a4ee:	42b8      	cmp	r0, r7
 801a4f0:	db07      	blt.n	801a502 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801a4f2:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a4f4:	4401      	add	r1, r0
 801a4f6:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a4f8:	3b01      	subs	r3, #1
 801a4fa:	4402      	add	r2, r0
 801a4fc:	3402      	adds	r4, #2
 801a4fe:	e7ee      	b.n	801a4de <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801a500:	d06e      	beq.n	801a5e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801a502:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a504:	1e58      	subs	r0, r3, #1
 801a506:	fb05 1500 	mla	r5, r5, r0, r1
 801a50a:	142d      	asrs	r5, r5, #16
 801a50c:	d45c      	bmi.n	801a5c8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801a50e:	4565      	cmp	r5, ip
 801a510:	da5a      	bge.n	801a5c8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801a512:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a514:	fb05 2000 	mla	r0, r5, r0, r2
 801a518:	1400      	asrs	r0, r0, #16
 801a51a:	d455      	bmi.n	801a5c8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801a51c:	42b8      	cmp	r0, r7
 801a51e:	da53      	bge.n	801a5c8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801a520:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801a524:	4699      	mov	r9, r3
 801a526:	46a2      	mov	sl, r4
 801a528:	f1b9 0f00 	cmp.w	r9, #0
 801a52c:	dd54      	ble.n	801a5d8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a52e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801a532:	140d      	asrs	r5, r1, #16
 801a534:	1410      	asrs	r0, r2, #16
 801a536:	fb07 5000 	mla	r0, r7, r0, r5
 801a53a:	9d02      	ldr	r5, [sp, #8]
 801a53c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801a540:	f8ba 5000 	ldrh.w	r5, [sl]
 801a544:	122f      	asrs	r7, r5, #8
 801a546:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801a54a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a54e:	fb17 f706 	smulbb	r7, r7, r6
 801a552:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801a556:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a55a:	00ed      	lsls	r5, r5, #3
 801a55c:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801a560:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801a564:	10c7      	asrs	r7, r0, #3
 801a566:	b2ed      	uxtb	r5, r5
 801a568:	00c0      	lsls	r0, r0, #3
 801a56a:	fb18 f806 	smulbb	r8, r8, r6
 801a56e:	fb15 f506 	smulbb	r5, r5, r6
 801a572:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a576:	b2c0      	uxtb	r0, r0
 801a578:	fa1f fc8c 	uxth.w	ip, ip
 801a57c:	fb07 870b 	mla	r7, r7, fp, r8
 801a580:	fb00 500b 	mla	r0, r0, fp, r5
 801a584:	b280      	uxth	r0, r0
 801a586:	b2bf      	uxth	r7, r7
 801a588:	f10c 0501 	add.w	r5, ip, #1
 801a58c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a590:	f107 0801 	add.w	r8, r7, #1
 801a594:	1c45      	adds	r5, r0, #1
 801a596:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801a59a:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801a59e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a5a0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a5a4:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a5a8:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801a5ac:	ea45 0c0c 	orr.w	ip, r5, ip
 801a5b0:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801a5b4:	4401      	add	r1, r0
 801a5b6:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a5b8:	ea4c 0c08 	orr.w	ip, ip, r8
 801a5bc:	f82a cb02 	strh.w	ip, [sl], #2
 801a5c0:	4402      	add	r2, r0
 801a5c2:	f109 39ff 	add.w	r9, r9, #4294967295
 801a5c6:	e7af      	b.n	801a528 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a5c8:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801a5cc:	f04f 0800 	mov.w	r8, #0
 801a5d0:	eb03 0008 	add.w	r0, r3, r8
 801a5d4:	2800      	cmp	r0, #0
 801a5d6:	dc41      	bgt.n	801a65c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801a5d8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a5dc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a5e0:	9b00      	ldr	r3, [sp, #0]
 801a5e2:	2b00      	cmp	r3, #0
 801a5e4:	f340 8095 	ble.w	801a712 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801a5e8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a5ec:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a5f0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a5f4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a5f6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a5fa:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a5fe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a602:	eef0 6a62 	vmov.f32	s13, s5
 801a606:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a60a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a60e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a612:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801a616:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a61a:	eef0 6a43 	vmov.f32	s13, s6
 801a61e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a622:	ee12 2a90 	vmov	r2, s5
 801a626:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a62a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a62e:	ee13 2a10 	vmov	r2, s6
 801a632:	9311      	str	r3, [sp, #68]	; 0x44
 801a634:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a636:	fb92 f3f3 	sdiv	r3, r2, r3
 801a63a:	9312      	str	r3, [sp, #72]	; 0x48
 801a63c:	9b00      	ldr	r3, [sp, #0]
 801a63e:	9a03      	ldr	r2, [sp, #12]
 801a640:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a644:	3b01      	subs	r3, #1
 801a646:	9300      	str	r3, [sp, #0]
 801a648:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801a64c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a64e:	eeb0 3a67 	vmov.f32	s6, s15
 801a652:	bf08      	it	eq
 801a654:	4613      	moveq	r3, r2
 801a656:	eef0 2a47 	vmov.f32	s5, s14
 801a65a:	e72f      	b.n	801a4bc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801a65c:	140f      	asrs	r7, r1, #16
 801a65e:	d451      	bmi.n	801a704 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a660:	f8de 5008 	ldr.w	r5, [lr, #8]
 801a664:	42bd      	cmp	r5, r7
 801a666:	dd4d      	ble.n	801a704 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a668:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a66c:	d44a      	bmi.n	801a704 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a66e:	f8de 000c 	ldr.w	r0, [lr, #12]
 801a672:	4560      	cmp	r0, ip
 801a674:	dd46      	ble.n	801a704 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a676:	b22d      	sxth	r5, r5
 801a678:	fb0c 7505 	mla	r5, ip, r5, r7
 801a67c:	9802      	ldr	r0, [sp, #8]
 801a67e:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801a682:	f06f 0501 	mvn.w	r5, #1
 801a686:	fb05 fb08 	mul.w	fp, r5, r8
 801a68a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801a68e:	f834 500b 	ldrh.w	r5, [r4, fp]
 801a692:	122f      	asrs	r7, r5, #8
 801a694:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a698:	fb17 f706 	smulbb	r7, r7, r6
 801a69c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801a6a0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a6a4:	00ed      	lsls	r5, r5, #3
 801a6a6:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801a6aa:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801a6ae:	10c7      	asrs	r7, r0, #3
 801a6b0:	b2ed      	uxtb	r5, r5
 801a6b2:	00c0      	lsls	r0, r0, #3
 801a6b4:	fb19 f906 	smulbb	r9, r9, r6
 801a6b8:	fb15 f506 	smulbb	r5, r5, r6
 801a6bc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a6c0:	b2c0      	uxtb	r0, r0
 801a6c2:	fa1f fc8c 	uxth.w	ip, ip
 801a6c6:	fb07 970a 	mla	r7, r7, sl, r9
 801a6ca:	fb00 500a 	mla	r0, r0, sl, r5
 801a6ce:	b2bf      	uxth	r7, r7
 801a6d0:	b280      	uxth	r0, r0
 801a6d2:	f10c 0501 	add.w	r5, ip, #1
 801a6d6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a6da:	f107 0901 	add.w	r9, r7, #1
 801a6de:	1c45      	adds	r5, r0, #1
 801a6e0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801a6e4:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801a6e8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a6ec:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a6f0:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801a6f4:	ea45 0c0c 	orr.w	ip, r5, ip
 801a6f8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801a6fc:	ea4c 0c09 	orr.w	ip, ip, r9
 801a700:	f824 c00b 	strh.w	ip, [r4, fp]
 801a704:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a706:	4401      	add	r1, r0
 801a708:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a70a:	f108 38ff 	add.w	r8, r8, #4294967295
 801a70e:	4402      	add	r2, r0
 801a710:	e75e      	b.n	801a5d0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801a712:	b005      	add	sp, #20
 801a714:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a718 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a718:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a71c:	b085      	sub	sp, #20
 801a71e:	4693      	mov	fp, r2
 801a720:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801a722:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801a724:	6870      	ldr	r0, [r6, #4]
 801a726:	9101      	str	r1, [sp, #4]
 801a728:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a72c:	fb00 2404 	mla	r4, r0, r4, r2
 801a730:	6832      	ldr	r2, [r6, #0]
 801a732:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801a736:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a73a:	682a      	ldr	r2, [r5, #0]
 801a73c:	9202      	str	r2, [sp, #8]
 801a73e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a742:	9a01      	ldr	r2, [sp, #4]
 801a744:	2a00      	cmp	r2, #0
 801a746:	dc03      	bgt.n	801a750 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801a748:	f1bb 0f00 	cmp.w	fp, #0
 801a74c:	f340 809a 	ble.w	801a884 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801a750:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a752:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a756:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801a75a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a75e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a760:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a764:	2b00      	cmp	r3, #0
 801a766:	dd0c      	ble.n	801a782 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801a768:	1406      	asrs	r6, r0, #16
 801a76a:	d405      	bmi.n	801a778 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a76c:	454e      	cmp	r6, r9
 801a76e:	da03      	bge.n	801a778 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a770:	1416      	asrs	r6, r2, #16
 801a772:	d401      	bmi.n	801a778 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a774:	4546      	cmp	r6, r8
 801a776:	db05      	blt.n	801a784 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a778:	4470      	add	r0, lr
 801a77a:	4462      	add	r2, ip
 801a77c:	3b01      	subs	r3, #1
 801a77e:	3402      	adds	r4, #2
 801a780:	e7f0      	b.n	801a764 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801a782:	d00f      	beq.n	801a7a4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a784:	1e5e      	subs	r6, r3, #1
 801a786:	fb0e 0706 	mla	r7, lr, r6, r0
 801a78a:	143f      	asrs	r7, r7, #16
 801a78c:	d541      	bpl.n	801a812 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801a78e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801a792:	4698      	mov	r8, r3
 801a794:	9603      	str	r6, [sp, #12]
 801a796:	f1b8 0f00 	cmp.w	r8, #0
 801a79a:	dc56      	bgt.n	801a84a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801a79c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a7a0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a7a4:	9b01      	ldr	r3, [sp, #4]
 801a7a6:	2b00      	cmp	r3, #0
 801a7a8:	dd6c      	ble.n	801a884 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801a7aa:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a7ae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a7b2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a7b6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a7b8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a7bc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a7c0:	eeb0 6a62 	vmov.f32	s12, s5
 801a7c4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a7c8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a7cc:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a7d0:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a7d4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a7d8:	eeb0 6a43 	vmov.f32	s12, s6
 801a7dc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a7e0:	ee12 2a90 	vmov	r2, s5
 801a7e4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a7e8:	fb92 fef3 	sdiv	lr, r2, r3
 801a7ec:	ee13 2a10 	vmov	r2, s6
 801a7f0:	fb92 fcf3 	sdiv	ip, r2, r3
 801a7f4:	9b01      	ldr	r3, [sp, #4]
 801a7f6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a7fa:	3b01      	subs	r3, #1
 801a7fc:	9301      	str	r3, [sp, #4]
 801a7fe:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a802:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a804:	eeb0 3a67 	vmov.f32	s6, s15
 801a808:	bf08      	it	eq
 801a80a:	465b      	moveq	r3, fp
 801a80c:	eef0 2a47 	vmov.f32	s5, s14
 801a810:	e797      	b.n	801a742 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801a812:	454f      	cmp	r7, r9
 801a814:	dabb      	bge.n	801a78e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a816:	fb0c 2606 	mla	r6, ip, r6, r2
 801a81a:	1436      	asrs	r6, r6, #16
 801a81c:	d4b7      	bmi.n	801a78e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a81e:	4546      	cmp	r6, r8
 801a820:	dab5      	bge.n	801a78e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a822:	461e      	mov	r6, r3
 801a824:	46a0      	mov	r8, r4
 801a826:	2e00      	cmp	r6, #0
 801a828:	ddb8      	ble.n	801a79c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a82a:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801a82e:	9902      	ldr	r1, [sp, #8]
 801a830:	1417      	asrs	r7, r2, #16
 801a832:	ea4f 4920 	mov.w	r9, r0, asr #16
 801a836:	fb0a 9707 	mla	r7, sl, r7, r9
 801a83a:	4470      	add	r0, lr
 801a83c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801a840:	f828 7b02 	strh.w	r7, [r8], #2
 801a844:	4462      	add	r2, ip
 801a846:	3e01      	subs	r6, #1
 801a848:	e7ed      	b.n	801a826 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801a84a:	ea5f 4920 	movs.w	r9, r0, asr #16
 801a84e:	d414      	bmi.n	801a87a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a850:	68ae      	ldr	r6, [r5, #8]
 801a852:	454e      	cmp	r6, r9
 801a854:	dd11      	ble.n	801a87a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a856:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801a85a:	d40e      	bmi.n	801a87a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a85c:	68ef      	ldr	r7, [r5, #12]
 801a85e:	4557      	cmp	r7, sl
 801a860:	dd0b      	ble.n	801a87a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a862:	b236      	sxth	r6, r6
 801a864:	fb0a 9606 	mla	r6, sl, r6, r9
 801a868:	9f02      	ldr	r7, [sp, #8]
 801a86a:	f06f 0101 	mvn.w	r1, #1
 801a86e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801a872:	fb01 f608 	mul.w	r6, r1, r8
 801a876:	9903      	ldr	r1, [sp, #12]
 801a878:	538f      	strh	r7, [r1, r6]
 801a87a:	4470      	add	r0, lr
 801a87c:	4462      	add	r2, ip
 801a87e:	f108 38ff 	add.w	r8, r8, #4294967295
 801a882:	e788      	b.n	801a796 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a884:	b005      	add	sp, #20
 801a886:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a88a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a88a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a88e:	b087      	sub	sp, #28
 801a890:	468b      	mov	fp, r1
 801a892:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a894:	9203      	str	r2, [sp, #12]
 801a896:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a89a:	9204      	str	r2, [sp, #16]
 801a89c:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801a8a0:	6841      	ldr	r1, [r0, #4]
 801a8a2:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801a8a6:	fb01 2505 	mla	r5, r1, r5, r2
 801a8aa:	6802      	ldr	r2, [r0, #0]
 801a8ac:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801a8b0:	f8d9 2000 	ldr.w	r2, [r9]
 801a8b4:	9201      	str	r2, [sp, #4]
 801a8b6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a8ba:	f1bb 0f00 	cmp.w	fp, #0
 801a8be:	dc03      	bgt.n	801a8c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801a8c0:	9a03      	ldr	r2, [sp, #12]
 801a8c2:	2a00      	cmp	r2, #0
 801a8c4:	f340 8159 	ble.w	801ab7a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801a8c8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a8ca:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801a8ce:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801a8d2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a8d6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a8d8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a8dc:	2b00      	cmp	r3, #0
 801a8de:	dd0e      	ble.n	801a8fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801a8e0:	1402      	asrs	r2, r0, #16
 801a8e2:	d405      	bmi.n	801a8f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a8e4:	42ba      	cmp	r2, r7
 801a8e6:	da03      	bge.n	801a8f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a8e8:	140a      	asrs	r2, r1, #16
 801a8ea:	d401      	bmi.n	801a8f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a8ec:	42b2      	cmp	r2, r6
 801a8ee:	db07      	blt.n	801a900 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a8f0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a8f2:	4410      	add	r0, r2
 801a8f4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a8f6:	3b01      	subs	r3, #1
 801a8f8:	4411      	add	r1, r2
 801a8fa:	3502      	adds	r5, #2
 801a8fc:	e7ee      	b.n	801a8dc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801a8fe:	d017      	beq.n	801a930 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a900:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a902:	1e5a      	subs	r2, r3, #1
 801a904:	fb04 0402 	mla	r4, r4, r2, r0
 801a908:	1424      	asrs	r4, r4, #16
 801a90a:	d409      	bmi.n	801a920 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a90c:	42bc      	cmp	r4, r7
 801a90e:	da07      	bge.n	801a920 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a910:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a912:	fb04 1202 	mla	r2, r4, r2, r1
 801a916:	1412      	asrs	r2, r2, #16
 801a918:	d402      	bmi.n	801a920 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a91a:	42b2      	cmp	r2, r6
 801a91c:	f2c0 80bf 	blt.w	801aa9e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a920:	2700      	movs	r7, #0
 801a922:	19da      	adds	r2, r3, r7
 801a924:	2a00      	cmp	r2, #0
 801a926:	dc3e      	bgt.n	801a9a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801a928:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a92c:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801a930:	f1bb 0f00 	cmp.w	fp, #0
 801a934:	f340 8121 	ble.w	801ab7a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801a938:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a93c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a940:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a944:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a946:	f1bb 0b01 	subs.w	fp, fp, #1
 801a94a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a94e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a952:	eeb0 6a62 	vmov.f32	s12, s5
 801a956:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a95a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a95e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a962:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a966:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a96a:	eeb0 6a43 	vmov.f32	s12, s6
 801a96e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a972:	ee12 2a90 	vmov	r2, s5
 801a976:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a97a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a97e:	ee13 2a10 	vmov	r2, s6
 801a982:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a986:	9313      	str	r3, [sp, #76]	; 0x4c
 801a988:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a98a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a98e:	9a03      	ldr	r2, [sp, #12]
 801a990:	9314      	str	r3, [sp, #80]	; 0x50
 801a992:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a996:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a998:	eeb0 3a67 	vmov.f32	s6, s15
 801a99c:	bf08      	it	eq
 801a99e:	4613      	moveq	r3, r2
 801a9a0:	eef0 2a47 	vmov.f32	s5, s14
 801a9a4:	e789      	b.n	801a8ba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801a9a6:	1406      	asrs	r6, r0, #16
 801a9a8:	d42d      	bmi.n	801aa06 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a9aa:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801a9ae:	42b4      	cmp	r4, r6
 801a9b0:	dd29      	ble.n	801aa06 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a9b2:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801a9b6:	d426      	bmi.n	801aa06 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a9b8:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801a9bc:	4562      	cmp	r2, ip
 801a9be:	dd22      	ble.n	801aa06 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a9c0:	b224      	sxth	r4, r4
 801a9c2:	9a01      	ldr	r2, [sp, #4]
 801a9c4:	fb0c 6404 	mla	r4, ip, r4, r6
 801a9c8:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801a9cc:	0e22      	lsrs	r2, r4, #24
 801a9ce:	d01a      	beq.n	801aa06 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a9d0:	9e04      	ldr	r6, [sp, #16]
 801a9d2:	4372      	muls	r2, r6
 801a9d4:	1c56      	adds	r6, r2, #1
 801a9d6:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801a9da:	1212      	asrs	r2, r2, #8
 801a9dc:	0a26      	lsrs	r6, r4, #8
 801a9de:	2aff      	cmp	r2, #255	; 0xff
 801a9e0:	9605      	str	r6, [sp, #20]
 801a9e2:	d116      	bne.n	801aa12 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801a9e4:	f06f 0201 	mvn.w	r2, #1
 801a9e8:	fb02 fc07 	mul.w	ip, r2, r7
 801a9ec:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801a9f0:	0962      	lsrs	r2, r4, #5
 801a9f2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a9f6:	f026 0607 	bic.w	r6, r6, #7
 801a9fa:	4316      	orrs	r6, r2
 801a9fc:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801aa00:	4326      	orrs	r6, r4
 801aa02:	f825 600c 	strh.w	r6, [r5, ip]
 801aa06:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801aa08:	4410      	add	r0, r2
 801aa0a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801aa0c:	3f01      	subs	r7, #1
 801aa0e:	4411      	add	r1, r2
 801aa10:	e787      	b.n	801a922 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801aa12:	f06f 0601 	mvn.w	r6, #1
 801aa16:	437e      	muls	r6, r7
 801aa18:	fa1f fa82 	uxth.w	sl, r2
 801aa1c:	f835 8006 	ldrh.w	r8, [r5, r6]
 801aa20:	9602      	str	r6, [sp, #8]
 801aa22:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801aa26:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801aa2a:	43d2      	mvns	r2, r2
 801aa2c:	b2d2      	uxtb	r2, r2
 801aa2e:	fb1c fc0a 	smulbb	ip, ip, sl
 801aa32:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801aa36:	fb0e ce02 	mla	lr, lr, r2, ip
 801aa3a:	b2e4      	uxtb	r4, r4
 801aa3c:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801aa40:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801aa44:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801aa48:	fa5f f888 	uxtb.w	r8, r8
 801aa4c:	fb14 f40a 	smulbb	r4, r4, sl
 801aa50:	fb08 4402 	mla	r4, r8, r2, r4
 801aa54:	fa1f fe8e 	uxth.w	lr, lr
 801aa58:	fb16 f60a 	smulbb	r6, r6, sl
 801aa5c:	b2a4      	uxth	r4, r4
 801aa5e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801aa62:	fb0c 6c02 	mla	ip, ip, r2, r6
 801aa66:	f10e 0201 	add.w	r2, lr, #1
 801aa6a:	1c66      	adds	r6, r4, #1
 801aa6c:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801aa70:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801aa74:	fa1f fc8c 	uxth.w	ip, ip
 801aa78:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801aa7c:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801aa80:	ea46 0e0e 	orr.w	lr, r6, lr
 801aa84:	f10c 0601 	add.w	r6, ip, #1
 801aa88:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801aa8c:	0976      	lsrs	r6, r6, #5
 801aa8e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801aa92:	9a02      	ldr	r2, [sp, #8]
 801aa94:	ea4e 0e06 	orr.w	lr, lr, r6
 801aa98:	f825 e002 	strh.w	lr, [r5, r2]
 801aa9c:	e7b3      	b.n	801aa06 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801aa9e:	f04f 0800 	mov.w	r8, #0
 801aaa2:	eba3 0208 	sub.w	r2, r3, r8
 801aaa6:	2a00      	cmp	r2, #0
 801aaa8:	f77f af3e 	ble.w	801a928 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801aaac:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801aab0:	1404      	asrs	r4, r0, #16
 801aab2:	140a      	asrs	r2, r1, #16
 801aab4:	fb06 4202 	mla	r2, r6, r2, r4
 801aab8:	9c01      	ldr	r4, [sp, #4]
 801aaba:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801aabe:	0e22      	lsrs	r2, r4, #24
 801aac0:	d016      	beq.n	801aaf0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801aac2:	9e04      	ldr	r6, [sp, #16]
 801aac4:	4372      	muls	r2, r6
 801aac6:	1c56      	adds	r6, r2, #1
 801aac8:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801aacc:	1212      	asrs	r2, r2, #8
 801aace:	2aff      	cmp	r2, #255	; 0xff
 801aad0:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801aad4:	d113      	bne.n	801aafe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801aad6:	0962      	lsrs	r2, r4, #5
 801aad8:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801aadc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801aae0:	f026 0607 	bic.w	r6, r6, #7
 801aae4:	4316      	orrs	r6, r2
 801aae6:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801aaea:	4326      	orrs	r6, r4
 801aaec:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801aaf0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801aaf2:	4410      	add	r0, r2
 801aaf4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801aaf6:	f108 0801 	add.w	r8, r8, #1
 801aafa:	4411      	add	r1, r2
 801aafc:	e7d1      	b.n	801aaa2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801aafe:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801ab02:	fa1f fa82 	uxth.w	sl, r2
 801ab06:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801ab0a:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801ab0e:	43d2      	mvns	r2, r2
 801ab10:	b2d2      	uxtb	r2, r2
 801ab12:	fb17 f70a 	smulbb	r7, r7, sl
 801ab16:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ab1a:	fb0c 7c02 	mla	ip, ip, r2, r7
 801ab1e:	b2e4      	uxtb	r4, r4
 801ab20:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801ab24:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ab28:	fa5f fe8e 	uxtb.w	lr, lr
 801ab2c:	fb14 f40a 	smulbb	r4, r4, sl
 801ab30:	fb0e 4402 	mla	r4, lr, r2, r4
 801ab34:	b2f6      	uxtb	r6, r6
 801ab36:	fa1f fc8c 	uxth.w	ip, ip
 801ab3a:	fb16 f60a 	smulbb	r6, r6, sl
 801ab3e:	b2a4      	uxth	r4, r4
 801ab40:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ab44:	fb07 6702 	mla	r7, r7, r2, r6
 801ab48:	f10c 0201 	add.w	r2, ip, #1
 801ab4c:	1c66      	adds	r6, r4, #1
 801ab4e:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801ab52:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801ab56:	b2bf      	uxth	r7, r7
 801ab58:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801ab5c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ab60:	ea46 0c0c 	orr.w	ip, r6, ip
 801ab64:	1c7e      	adds	r6, r7, #1
 801ab66:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801ab6a:	0976      	lsrs	r6, r6, #5
 801ab6c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ab70:	ea4c 0c06 	orr.w	ip, ip, r6
 801ab74:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801ab78:	e7ba      	b.n	801aaf0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801ab7a:	b007      	add	sp, #28
 801ab7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ab80 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ab80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ab84:	b085      	sub	sp, #20
 801ab86:	468b      	mov	fp, r1
 801ab88:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ab8a:	9203      	str	r2, [sp, #12]
 801ab8c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801ab90:	6841      	ldr	r1, [r0, #4]
 801ab92:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801ab96:	fb01 2404 	mla	r4, r1, r4, r2
 801ab9a:	6802      	ldr	r2, [r0, #0]
 801ab9c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801aba0:	f8d8 2000 	ldr.w	r2, [r8]
 801aba4:	9201      	str	r2, [sp, #4]
 801aba6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801abaa:	f1bb 0f00 	cmp.w	fp, #0
 801abae:	dc03      	bgt.n	801abb8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801abb0:	9a03      	ldr	r2, [sp, #12]
 801abb2:	2a00      	cmp	r2, #0
 801abb4:	f340 814f 	ble.w	801ae56 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801abb8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801abba:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801abbe:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801abc2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801abc6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801abc8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801abcc:	2b00      	cmp	r3, #0
 801abce:	dd0e      	ble.n	801abee <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801abd0:	1408      	asrs	r0, r1, #16
 801abd2:	d405      	bmi.n	801abe0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801abd4:	42b8      	cmp	r0, r7
 801abd6:	da03      	bge.n	801abe0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801abd8:	1410      	asrs	r0, r2, #16
 801abda:	d401      	bmi.n	801abe0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801abdc:	42b0      	cmp	r0, r6
 801abde:	db07      	blt.n	801abf0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801abe0:	9811      	ldr	r0, [sp, #68]	; 0x44
 801abe2:	4401      	add	r1, r0
 801abe4:	9812      	ldr	r0, [sp, #72]	; 0x48
 801abe6:	3b01      	subs	r3, #1
 801abe8:	4402      	add	r2, r0
 801abea:	3402      	adds	r4, #2
 801abec:	e7ee      	b.n	801abcc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801abee:	d017      	beq.n	801ac20 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801abf0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801abf2:	1e58      	subs	r0, r3, #1
 801abf4:	fb05 1500 	mla	r5, r5, r0, r1
 801abf8:	142d      	asrs	r5, r5, #16
 801abfa:	d409      	bmi.n	801ac10 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801abfc:	42bd      	cmp	r5, r7
 801abfe:	da07      	bge.n	801ac10 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ac00:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ac02:	fb05 2000 	mla	r0, r5, r0, r2
 801ac06:	1400      	asrs	r0, r0, #16
 801ac08:	d402      	bmi.n	801ac10 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ac0a:	42b0      	cmp	r0, r6
 801ac0c:	f2c0 80ba 	blt.w	801ad84 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ac10:	2600      	movs	r6, #0
 801ac12:	1998      	adds	r0, r3, r6
 801ac14:	2800      	cmp	r0, #0
 801ac16:	dc3e      	bgt.n	801ac96 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801ac18:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ac1c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ac20:	f1bb 0f00 	cmp.w	fp, #0
 801ac24:	f340 8117 	ble.w	801ae56 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801ac28:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ac2c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ac30:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ac34:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ac36:	f1bb 0b01 	subs.w	fp, fp, #1
 801ac3a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ac3e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ac42:	eeb0 6a62 	vmov.f32	s12, s5
 801ac46:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ac4a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ac4e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ac52:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801ac56:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ac5a:	eeb0 6a43 	vmov.f32	s12, s6
 801ac5e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ac62:	ee12 2a90 	vmov	r2, s5
 801ac66:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ac6a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ac6e:	ee13 2a10 	vmov	r2, s6
 801ac72:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ac76:	9311      	str	r3, [sp, #68]	; 0x44
 801ac78:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ac7a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ac7e:	9a03      	ldr	r2, [sp, #12]
 801ac80:	9312      	str	r3, [sp, #72]	; 0x48
 801ac82:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801ac86:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ac88:	eeb0 3a67 	vmov.f32	s6, s15
 801ac8c:	bf08      	it	eq
 801ac8e:	4613      	moveq	r3, r2
 801ac90:	eef0 2a47 	vmov.f32	s5, s14
 801ac94:	e789      	b.n	801abaa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801ac96:	140f      	asrs	r7, r1, #16
 801ac98:	d424      	bmi.n	801ace4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ac9a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801ac9e:	42bd      	cmp	r5, r7
 801aca0:	dd20      	ble.n	801ace4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801aca2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801aca6:	d41d      	bmi.n	801ace4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801aca8:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801acac:	4560      	cmp	r0, ip
 801acae:	dd19      	ble.n	801ace4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801acb0:	b22d      	sxth	r5, r5
 801acb2:	fb0c 7505 	mla	r5, ip, r5, r7
 801acb6:	9801      	ldr	r0, [sp, #4]
 801acb8:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801acbc:	0e07      	lsrs	r7, r0, #24
 801acbe:	2fff      	cmp	r7, #255	; 0xff
 801acc0:	d116      	bne.n	801acf0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801acc2:	f06f 0501 	mvn.w	r5, #1
 801acc6:	fb05 f706 	mul.w	r7, r5, r6
 801acca:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801acce:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801acd2:	0945      	lsrs	r5, r0, #5
 801acd4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801acd8:	ea4c 0505 	orr.w	r5, ip, r5
 801acdc:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801ace0:	4305      	orrs	r5, r0
 801ace2:	53e5      	strh	r5, [r4, r7]
 801ace4:	9811      	ldr	r0, [sp, #68]	; 0x44
 801ace6:	4401      	add	r1, r0
 801ace8:	9812      	ldr	r0, [sp, #72]	; 0x48
 801acea:	3e01      	subs	r6, #1
 801acec:	4402      	add	r2, r0
 801acee:	e790      	b.n	801ac12 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801acf0:	b2fd      	uxtb	r5, r7
 801acf2:	2f00      	cmp	r7, #0
 801acf4:	d0f6      	beq.n	801ace4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801acf6:	f06f 0701 	mvn.w	r7, #1
 801acfa:	4377      	muls	r7, r6
 801acfc:	fa1f f985 	uxth.w	r9, r5
 801ad00:	f834 e007 	ldrh.w	lr, [r4, r7]
 801ad04:	9702      	str	r7, [sp, #8]
 801ad06:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801ad0a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801ad0e:	43ed      	mvns	r5, r5
 801ad10:	b2ed      	uxtb	r5, r5
 801ad12:	fb17 f709 	smulbb	r7, r7, r9
 801ad16:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ad1a:	fb0c 7c05 	mla	ip, ip, r5, r7
 801ad1e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801ad22:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801ad26:	b2c0      	uxtb	r0, r0
 801ad28:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ad2c:	fa5f fe8e 	uxtb.w	lr, lr
 801ad30:	fb10 f009 	smulbb	r0, r0, r9
 801ad34:	fb0e 0005 	mla	r0, lr, r5, r0
 801ad38:	b280      	uxth	r0, r0
 801ad3a:	fa1f fc8c 	uxth.w	ip, ip
 801ad3e:	fb1a fa09 	smulbb	sl, sl, r9
 801ad42:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ad46:	fb07 a705 	mla	r7, r7, r5, sl
 801ad4a:	f100 0a01 	add.w	sl, r0, #1
 801ad4e:	f10c 0501 	add.w	r5, ip, #1
 801ad52:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801ad56:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801ad5a:	b2bf      	uxth	r7, r7
 801ad5c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ad60:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ad64:	ea4a 0c0c 	orr.w	ip, sl, ip
 801ad68:	f107 0a01 	add.w	sl, r7, #1
 801ad6c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801ad70:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ad74:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ad78:	9802      	ldr	r0, [sp, #8]
 801ad7a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801ad7e:	f824 c000 	strh.w	ip, [r4, r0]
 801ad82:	e7af      	b.n	801ace4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ad84:	f04f 0e00 	mov.w	lr, #0
 801ad88:	eba3 000e 	sub.w	r0, r3, lr
 801ad8c:	2800      	cmp	r0, #0
 801ad8e:	f77f af43 	ble.w	801ac18 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801ad92:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801ad96:	140d      	asrs	r5, r1, #16
 801ad98:	1410      	asrs	r0, r2, #16
 801ad9a:	fb06 5000 	mla	r0, r6, r0, r5
 801ad9e:	9d01      	ldr	r5, [sp, #4]
 801ada0:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801ada4:	0e2e      	lsrs	r6, r5, #24
 801ada6:	2eff      	cmp	r6, #255	; 0xff
 801ada8:	d112      	bne.n	801add0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801adaa:	482c      	ldr	r0, [pc, #176]	; (801ae5c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801adac:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801adb0:	0968      	lsrs	r0, r5, #5
 801adb2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801adb6:	4330      	orrs	r0, r6
 801adb8:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801adbc:	4328      	orrs	r0, r5
 801adbe:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801adc2:	9811      	ldr	r0, [sp, #68]	; 0x44
 801adc4:	4401      	add	r1, r0
 801adc6:	9812      	ldr	r0, [sp, #72]	; 0x48
 801adc8:	f10e 0e01 	add.w	lr, lr, #1
 801adcc:	4402      	add	r2, r0
 801adce:	e7db      	b.n	801ad88 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801add0:	b2f0      	uxtb	r0, r6
 801add2:	2e00      	cmp	r6, #0
 801add4:	d0f5      	beq.n	801adc2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801add6:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801adda:	fa1f f980 	uxth.w	r9, r0
 801adde:	ea4f 272c 	mov.w	r7, ip, asr #8
 801ade2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801ade6:	43c0      	mvns	r0, r0
 801ade8:	b2c0      	uxtb	r0, r0
 801adea:	fb16 f609 	smulbb	r6, r6, r9
 801adee:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801adf2:	fb07 6700 	mla	r7, r7, r0, r6
 801adf6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801adfa:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801adfe:	b2ed      	uxtb	r5, r5
 801ae00:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ae04:	fa5f fc8c 	uxtb.w	ip, ip
 801ae08:	fb15 f509 	smulbb	r5, r5, r9
 801ae0c:	fb0c 5500 	mla	r5, ip, r0, r5
 801ae10:	b2bf      	uxth	r7, r7
 801ae12:	fb1a fa09 	smulbb	sl, sl, r9
 801ae16:	b2ad      	uxth	r5, r5
 801ae18:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ae1c:	fb06 a600 	mla	r6, r6, r0, sl
 801ae20:	1c78      	adds	r0, r7, #1
 801ae22:	f105 0a01 	add.w	sl, r5, #1
 801ae26:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801ae2a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ae2e:	b2b6      	uxth	r6, r6
 801ae30:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ae34:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801ae38:	ea4a 0707 	orr.w	r7, sl, r7
 801ae3c:	f106 0a01 	add.w	sl, r6, #1
 801ae40:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801ae44:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ae48:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ae4c:	ea47 070a 	orr.w	r7, r7, sl
 801ae50:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801ae54:	e7b5      	b.n	801adc2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801ae56:	b005      	add	sp, #20
 801ae58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ae5c:	fffff800 	.word	0xfffff800

0801ae60 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ae60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ae64:	b087      	sub	sp, #28
 801ae66:	468b      	mov	fp, r1
 801ae68:	9815      	ldr	r0, [sp, #84]	; 0x54
 801ae6a:	9203      	str	r2, [sp, #12]
 801ae6c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801ae70:	9204      	str	r2, [sp, #16]
 801ae72:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801ae76:	6841      	ldr	r1, [r0, #4]
 801ae78:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801ae7c:	fb01 2404 	mla	r4, r1, r4, r2
 801ae80:	6802      	ldr	r2, [r0, #0]
 801ae82:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ae86:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801ae8a:	3201      	adds	r2, #1
 801ae8c:	f022 0201 	bic.w	r2, r2, #1
 801ae90:	9200      	str	r2, [sp, #0]
 801ae92:	f8d9 2000 	ldr.w	r2, [r9]
 801ae96:	9201      	str	r2, [sp, #4]
 801ae98:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ae9c:	f1bb 0f00 	cmp.w	fp, #0
 801aea0:	dc03      	bgt.n	801aeaa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801aea2:	9a03      	ldr	r2, [sp, #12]
 801aea4:	2a00      	cmp	r2, #0
 801aea6:	f340 8169 	ble.w	801b17c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801aeaa:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801aeac:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801aeb0:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801aeb4:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801aeb8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801aeba:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801aebe:	2b00      	cmp	r3, #0
 801aec0:	dd0e      	ble.n	801aee0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801aec2:	1402      	asrs	r2, r0, #16
 801aec4:	d405      	bmi.n	801aed2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801aec6:	42ba      	cmp	r2, r7
 801aec8:	da03      	bge.n	801aed2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801aeca:	140a      	asrs	r2, r1, #16
 801aecc:	d401      	bmi.n	801aed2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801aece:	42b2      	cmp	r2, r6
 801aed0:	db07      	blt.n	801aee2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801aed2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801aed4:	4410      	add	r0, r2
 801aed6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801aed8:	3b01      	subs	r3, #1
 801aeda:	4411      	add	r1, r2
 801aedc:	3402      	adds	r4, #2
 801aede:	e7ee      	b.n	801aebe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801aee0:	d017      	beq.n	801af12 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801aee2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801aee4:	1e5a      	subs	r2, r3, #1
 801aee6:	fb05 0502 	mla	r5, r5, r2, r0
 801aeea:	142d      	asrs	r5, r5, #16
 801aeec:	d409      	bmi.n	801af02 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801aeee:	42bd      	cmp	r5, r7
 801aef0:	da07      	bge.n	801af02 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801aef2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801aef4:	fb05 1202 	mla	r2, r5, r2, r1
 801aef8:	1412      	asrs	r2, r2, #16
 801aefa:	d402      	bmi.n	801af02 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801aefc:	42b2      	cmp	r2, r6
 801aefe:	f2c0 80c7 	blt.w	801b090 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801af02:	2700      	movs	r7, #0
 801af04:	19da      	adds	r2, r3, r7
 801af06:	2a00      	cmp	r2, #0
 801af08:	dc3e      	bgt.n	801af88 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801af0a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801af0e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801af12:	f1bb 0f00 	cmp.w	fp, #0
 801af16:	f340 8131 	ble.w	801b17c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801af1a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801af1e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801af22:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801af26:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801af28:	f1bb 0b01 	subs.w	fp, fp, #1
 801af2c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801af30:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801af34:	eeb0 6a62 	vmov.f32	s12, s5
 801af38:	ee61 7a27 	vmul.f32	s15, s2, s15
 801af3c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801af40:	ee77 2a62 	vsub.f32	s5, s14, s5
 801af44:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801af48:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801af4c:	eeb0 6a43 	vmov.f32	s12, s6
 801af50:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801af54:	ee12 2a90 	vmov	r2, s5
 801af58:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801af5c:	fb92 f3f3 	sdiv	r3, r2, r3
 801af60:	ee13 2a10 	vmov	r2, s6
 801af64:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801af68:	9313      	str	r3, [sp, #76]	; 0x4c
 801af6a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801af6c:	fb92 f3f3 	sdiv	r3, r2, r3
 801af70:	9a03      	ldr	r2, [sp, #12]
 801af72:	9314      	str	r3, [sp, #80]	; 0x50
 801af74:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801af78:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801af7a:	eeb0 3a67 	vmov.f32	s6, s15
 801af7e:	bf08      	it	eq
 801af80:	4613      	moveq	r3, r2
 801af82:	eef0 2a47 	vmov.f32	s5, s14
 801af86:	e789      	b.n	801ae9c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801af88:	1405      	asrs	r5, r0, #16
 801af8a:	d435      	bmi.n	801aff8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801af8c:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801af90:	42aa      	cmp	r2, r5
 801af92:	dd31      	ble.n	801aff8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801af94:	140e      	asrs	r6, r1, #16
 801af96:	d42f      	bmi.n	801aff8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801af98:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801af9c:	42b2      	cmp	r2, r6
 801af9e:	dd2b      	ble.n	801aff8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801afa0:	9a00      	ldr	r2, [sp, #0]
 801afa2:	fb06 5502 	mla	r5, r6, r2, r5
 801afa6:	086a      	lsrs	r2, r5, #1
 801afa8:	9e01      	ldr	r6, [sp, #4]
 801afaa:	5cb2      	ldrb	r2, [r6, r2]
 801afac:	07ee      	lsls	r6, r5, #31
 801afae:	bf54      	ite	pl
 801afb0:	f002 020f 	andpl.w	r2, r2, #15
 801afb4:	1112      	asrmi	r2, r2, #4
 801afb6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801afba:	b2d2      	uxtb	r2, r2
 801afbc:	b1e2      	cbz	r2, 801aff8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801afbe:	9d04      	ldr	r5, [sp, #16]
 801afc0:	436a      	muls	r2, r5
 801afc2:	1c55      	adds	r5, r2, #1
 801afc4:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801afc8:	4d6e      	ldr	r5, [pc, #440]	; (801b184 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801afca:	682d      	ldr	r5, [r5, #0]
 801afcc:	1212      	asrs	r2, r2, #8
 801afce:	0a2e      	lsrs	r6, r5, #8
 801afd0:	2aff      	cmp	r2, #255	; 0xff
 801afd2:	9605      	str	r6, [sp, #20]
 801afd4:	d116      	bne.n	801b004 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801afd6:	f06f 0201 	mvn.w	r2, #1
 801afda:	fb02 fc07 	mul.w	ip, r2, r7
 801afde:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801afe2:	096a      	lsrs	r2, r5, #5
 801afe4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801afe8:	f026 0607 	bic.w	r6, r6, #7
 801afec:	4316      	orrs	r6, r2
 801afee:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801aff2:	432e      	orrs	r6, r5
 801aff4:	f824 600c 	strh.w	r6, [r4, ip]
 801aff8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801affa:	4410      	add	r0, r2
 801affc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801affe:	3f01      	subs	r7, #1
 801b000:	4411      	add	r1, r2
 801b002:	e77f      	b.n	801af04 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801b004:	f06f 0601 	mvn.w	r6, #1
 801b008:	437e      	muls	r6, r7
 801b00a:	fa1f fa82 	uxth.w	sl, r2
 801b00e:	f834 8006 	ldrh.w	r8, [r4, r6]
 801b012:	9602      	str	r6, [sp, #8]
 801b014:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801b018:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801b01c:	43d2      	mvns	r2, r2
 801b01e:	b2d2      	uxtb	r2, r2
 801b020:	fb1c fc0a 	smulbb	ip, ip, sl
 801b024:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b028:	fb0e ce02 	mla	lr, lr, r2, ip
 801b02c:	b2ed      	uxtb	r5, r5
 801b02e:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801b032:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b036:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801b03a:	fa5f f888 	uxtb.w	r8, r8
 801b03e:	fb15 f50a 	smulbb	r5, r5, sl
 801b042:	fb08 5502 	mla	r5, r8, r2, r5
 801b046:	fa1f fe8e 	uxth.w	lr, lr
 801b04a:	fb16 f60a 	smulbb	r6, r6, sl
 801b04e:	b2ad      	uxth	r5, r5
 801b050:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801b054:	fb0c 6c02 	mla	ip, ip, r2, r6
 801b058:	f10e 0201 	add.w	r2, lr, #1
 801b05c:	1c6e      	adds	r6, r5, #1
 801b05e:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801b062:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801b066:	fa1f fc8c 	uxth.w	ip, ip
 801b06a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801b06e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801b072:	ea46 0e0e 	orr.w	lr, r6, lr
 801b076:	f10c 0601 	add.w	r6, ip, #1
 801b07a:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801b07e:	0976      	lsrs	r6, r6, #5
 801b080:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b084:	9a02      	ldr	r2, [sp, #8]
 801b086:	ea4e 0e06 	orr.w	lr, lr, r6
 801b08a:	f824 e002 	strh.w	lr, [r4, r2]
 801b08e:	e7b3      	b.n	801aff8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b090:	f04f 0800 	mov.w	r8, #0
 801b094:	eba3 0208 	sub.w	r2, r3, r8
 801b098:	2a00      	cmp	r2, #0
 801b09a:	f77f af36 	ble.w	801af0a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801b09e:	9e00      	ldr	r6, [sp, #0]
 801b0a0:	1402      	asrs	r2, r0, #16
 801b0a2:	140d      	asrs	r5, r1, #16
 801b0a4:	fb06 2505 	mla	r5, r6, r5, r2
 801b0a8:	086a      	lsrs	r2, r5, #1
 801b0aa:	9e01      	ldr	r6, [sp, #4]
 801b0ac:	5cb2      	ldrb	r2, [r6, r2]
 801b0ae:	07ed      	lsls	r5, r5, #31
 801b0b0:	bf54      	ite	pl
 801b0b2:	f002 020f 	andpl.w	r2, r2, #15
 801b0b6:	1112      	asrmi	r2, r2, #4
 801b0b8:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b0bc:	b2d2      	uxtb	r2, r2
 801b0be:	b1c2      	cbz	r2, 801b0f2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801b0c0:	9d04      	ldr	r5, [sp, #16]
 801b0c2:	436a      	muls	r2, r5
 801b0c4:	1c55      	adds	r5, r2, #1
 801b0c6:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801b0ca:	4d2e      	ldr	r5, [pc, #184]	; (801b184 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801b0cc:	1212      	asrs	r2, r2, #8
 801b0ce:	682e      	ldr	r6, [r5, #0]
 801b0d0:	2aff      	cmp	r2, #255	; 0xff
 801b0d2:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801b0d6:	d113      	bne.n	801b100 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801b0d8:	0972      	lsrs	r2, r6, #5
 801b0da:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801b0de:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b0e2:	f025 0507 	bic.w	r5, r5, #7
 801b0e6:	4315      	orrs	r5, r2
 801b0e8:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801b0ec:	4335      	orrs	r5, r6
 801b0ee:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801b0f2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b0f4:	4410      	add	r0, r2
 801b0f6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b0f8:	f108 0801 	add.w	r8, r8, #1
 801b0fc:	4411      	add	r1, r2
 801b0fe:	e7c9      	b.n	801b094 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801b100:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801b104:	fa1f fa82 	uxth.w	sl, r2
 801b108:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b10c:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801b110:	43d2      	mvns	r2, r2
 801b112:	b2d2      	uxtb	r2, r2
 801b114:	fb17 f70a 	smulbb	r7, r7, sl
 801b118:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b11c:	fb0c 7c02 	mla	ip, ip, r2, r7
 801b120:	b2f6      	uxtb	r6, r6
 801b122:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801b126:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b12a:	fa5f fe8e 	uxtb.w	lr, lr
 801b12e:	fb16 f60a 	smulbb	r6, r6, sl
 801b132:	fb0e 6602 	mla	r6, lr, r2, r6
 801b136:	b2ed      	uxtb	r5, r5
 801b138:	fa1f fc8c 	uxth.w	ip, ip
 801b13c:	fb15 f50a 	smulbb	r5, r5, sl
 801b140:	b2b6      	uxth	r6, r6
 801b142:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b146:	fb07 5702 	mla	r7, r7, r2, r5
 801b14a:	f10c 0201 	add.w	r2, ip, #1
 801b14e:	1c75      	adds	r5, r6, #1
 801b150:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801b154:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801b158:	b2bf      	uxth	r7, r7
 801b15a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801b15e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b162:	ea45 0c0c 	orr.w	ip, r5, ip
 801b166:	1c7d      	adds	r5, r7, #1
 801b168:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801b16c:	096d      	lsrs	r5, r5, #5
 801b16e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b172:	ea4c 0c05 	orr.w	ip, ip, r5
 801b176:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801b17a:	e7ba      	b.n	801b0f2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801b17c:	b007      	add	sp, #28
 801b17e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b182:	bf00      	nop
 801b184:	20012f34 	.word	0x20012f34

0801b188 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b188:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b18c:	b087      	sub	sp, #28
 801b18e:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801b49c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801b192:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b194:	9205      	str	r2, [sp, #20]
 801b196:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801b19a:	9101      	str	r1, [sp, #4]
 801b19c:	6841      	ldr	r1, [r0, #4]
 801b19e:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801b1a2:	fb01 2404 	mla	r4, r1, r4, r2
 801b1a6:	6802      	ldr	r2, [r0, #0]
 801b1a8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b1ac:	f8db 2008 	ldr.w	r2, [fp, #8]
 801b1b0:	3201      	adds	r2, #1
 801b1b2:	f022 0201 	bic.w	r2, r2, #1
 801b1b6:	9202      	str	r2, [sp, #8]
 801b1b8:	f8db 2000 	ldr.w	r2, [fp]
 801b1bc:	9203      	str	r2, [sp, #12]
 801b1be:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b1c2:	9a01      	ldr	r2, [sp, #4]
 801b1c4:	2a00      	cmp	r2, #0
 801b1c6:	dc03      	bgt.n	801b1d0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801b1c8:	9a05      	ldr	r2, [sp, #20]
 801b1ca:	2a00      	cmp	r2, #0
 801b1cc:	f340 8162 	ble.w	801b494 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801b1d0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b1d2:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801b1d6:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801b1da:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b1de:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b1e0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b1e4:	2b00      	cmp	r3, #0
 801b1e6:	dd0e      	ble.n	801b206 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b1e8:	1402      	asrs	r2, r0, #16
 801b1ea:	d405      	bmi.n	801b1f8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b1ec:	42ba      	cmp	r2, r7
 801b1ee:	da03      	bge.n	801b1f8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b1f0:	140a      	asrs	r2, r1, #16
 801b1f2:	d401      	bmi.n	801b1f8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b1f4:	42b2      	cmp	r2, r6
 801b1f6:	db07      	blt.n	801b208 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801b1f8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b1fa:	4410      	add	r0, r2
 801b1fc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b1fe:	3b01      	subs	r3, #1
 801b200:	4411      	add	r1, r2
 801b202:	3402      	adds	r4, #2
 801b204:	e7ee      	b.n	801b1e4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801b206:	d017      	beq.n	801b238 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801b208:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b20a:	1e5a      	subs	r2, r3, #1
 801b20c:	fb05 0502 	mla	r5, r5, r2, r0
 801b210:	142d      	asrs	r5, r5, #16
 801b212:	d409      	bmi.n	801b228 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b214:	42bd      	cmp	r5, r7
 801b216:	da07      	bge.n	801b228 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b218:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b21a:	fb05 1202 	mla	r2, r5, r2, r1
 801b21e:	1412      	asrs	r2, r2, #16
 801b220:	d402      	bmi.n	801b228 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b222:	42b2      	cmp	r2, r6
 801b224:	f2c0 80c3 	blt.w	801b3ae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801b228:	2500      	movs	r5, #0
 801b22a:	195a      	adds	r2, r3, r5
 801b22c:	2a00      	cmp	r2, #0
 801b22e:	dc3f      	bgt.n	801b2b0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801b230:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b234:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b238:	9b01      	ldr	r3, [sp, #4]
 801b23a:	2b00      	cmp	r3, #0
 801b23c:	f340 812a 	ble.w	801b494 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801b240:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b244:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b248:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b24c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b24e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b252:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b256:	eeb0 6a62 	vmov.f32	s12, s5
 801b25a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b25e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b262:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b266:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801b26a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b26e:	eeb0 6a43 	vmov.f32	s12, s6
 801b272:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b276:	ee12 2a90 	vmov	r2, s5
 801b27a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b27e:	fb92 f3f3 	sdiv	r3, r2, r3
 801b282:	ee13 2a10 	vmov	r2, s6
 801b286:	9313      	str	r3, [sp, #76]	; 0x4c
 801b288:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b28a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b28e:	9314      	str	r3, [sp, #80]	; 0x50
 801b290:	9b01      	ldr	r3, [sp, #4]
 801b292:	9a05      	ldr	r2, [sp, #20]
 801b294:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b298:	3b01      	subs	r3, #1
 801b29a:	9301      	str	r3, [sp, #4]
 801b29c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801b2a0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b2a2:	eeb0 3a67 	vmov.f32	s6, s15
 801b2a6:	bf08      	it	eq
 801b2a8:	4613      	moveq	r3, r2
 801b2aa:	eef0 2a47 	vmov.f32	s5, s14
 801b2ae:	e788      	b.n	801b1c2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801b2b0:	1406      	asrs	r6, r0, #16
 801b2b2:	d42c      	bmi.n	801b30e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b2b4:	f8db 2008 	ldr.w	r2, [fp, #8]
 801b2b8:	42b2      	cmp	r2, r6
 801b2ba:	dd28      	ble.n	801b30e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b2bc:	140f      	asrs	r7, r1, #16
 801b2be:	d426      	bmi.n	801b30e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b2c0:	f8db 200c 	ldr.w	r2, [fp, #12]
 801b2c4:	42ba      	cmp	r2, r7
 801b2c6:	dd22      	ble.n	801b30e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b2c8:	9a02      	ldr	r2, [sp, #8]
 801b2ca:	fb07 6602 	mla	r6, r7, r2, r6
 801b2ce:	0872      	lsrs	r2, r6, #1
 801b2d0:	9f03      	ldr	r7, [sp, #12]
 801b2d2:	5cba      	ldrb	r2, [r7, r2]
 801b2d4:	07f6      	lsls	r6, r6, #31
 801b2d6:	bf54      	ite	pl
 801b2d8:	f002 020f 	andpl.w	r2, r2, #15
 801b2dc:	1112      	asrmi	r2, r2, #4
 801b2de:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b2e2:	b2d2      	uxtb	r2, r2
 801b2e4:	2aff      	cmp	r2, #255	; 0xff
 801b2e6:	d118      	bne.n	801b31a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801b2e8:	f8d8 2000 	ldr.w	r2, [r8]
 801b2ec:	f06f 0601 	mvn.w	r6, #1
 801b2f0:	fb06 f705 	mul.w	r7, r6, r5
 801b2f4:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801b2f8:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801b2fc:	0956      	lsrs	r6, r2, #5
 801b2fe:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b302:	ea4c 0606 	orr.w	r6, ip, r6
 801b306:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b30a:	4316      	orrs	r6, r2
 801b30c:	53e6      	strh	r6, [r4, r7]
 801b30e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b310:	4410      	add	r0, r2
 801b312:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b314:	3d01      	subs	r5, #1
 801b316:	4411      	add	r1, r2
 801b318:	e787      	b.n	801b22a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b31a:	2a00      	cmp	r2, #0
 801b31c:	d0f7      	beq.n	801b30e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b31e:	f06f 0601 	mvn.w	r6, #1
 801b322:	436e      	muls	r6, r5
 801b324:	f8d8 c000 	ldr.w	ip, [r8]
 801b328:	f834 e006 	ldrh.w	lr, [r4, r6]
 801b32c:	9604      	str	r6, [sp, #16]
 801b32e:	fa1f f982 	uxth.w	r9, r2
 801b332:	ea4f 272e 	mov.w	r7, lr, asr #8
 801b336:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801b33a:	43d2      	mvns	r2, r2
 801b33c:	b2d2      	uxtb	r2, r2
 801b33e:	fb16 f609 	smulbb	r6, r6, r9
 801b342:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b346:	fb07 6702 	mla	r7, r7, r2, r6
 801b34a:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801b34e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801b352:	fa5f fc8c 	uxtb.w	ip, ip
 801b356:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b35a:	fa5f fe8e 	uxtb.w	lr, lr
 801b35e:	fb1c fc09 	smulbb	ip, ip, r9
 801b362:	fb0e cc02 	mla	ip, lr, r2, ip
 801b366:	b2bf      	uxth	r7, r7
 801b368:	fb1a fa09 	smulbb	sl, sl, r9
 801b36c:	fa1f fc8c 	uxth.w	ip, ip
 801b370:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b374:	fb06 a602 	mla	r6, r6, r2, sl
 801b378:	1c7a      	adds	r2, r7, #1
 801b37a:	f10c 0a01 	add.w	sl, ip, #1
 801b37e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801b382:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801b386:	b2b6      	uxth	r6, r6
 801b388:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b38c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b390:	ea4a 0707 	orr.w	r7, sl, r7
 801b394:	f106 0a01 	add.w	sl, r6, #1
 801b398:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b39c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b3a0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b3a4:	9a04      	ldr	r2, [sp, #16]
 801b3a6:	ea47 070a 	orr.w	r7, r7, sl
 801b3aa:	52a7      	strh	r7, [r4, r2]
 801b3ac:	e7af      	b.n	801b30e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b3ae:	f04f 0e00 	mov.w	lr, #0
 801b3b2:	eba3 020e 	sub.w	r2, r3, lr
 801b3b6:	2a00      	cmp	r2, #0
 801b3b8:	f77f af3a 	ble.w	801b230 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801b3bc:	9e02      	ldr	r6, [sp, #8]
 801b3be:	1402      	asrs	r2, r0, #16
 801b3c0:	140d      	asrs	r5, r1, #16
 801b3c2:	fb06 2505 	mla	r5, r6, r5, r2
 801b3c6:	086a      	lsrs	r2, r5, #1
 801b3c8:	9e03      	ldr	r6, [sp, #12]
 801b3ca:	5cb2      	ldrb	r2, [r6, r2]
 801b3cc:	07ed      	lsls	r5, r5, #31
 801b3ce:	bf54      	ite	pl
 801b3d0:	f002 020f 	andpl.w	r2, r2, #15
 801b3d4:	1112      	asrmi	r2, r2, #4
 801b3d6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b3da:	b2d2      	uxtb	r2, r2
 801b3dc:	2aff      	cmp	r2, #255	; 0xff
 801b3de:	d115      	bne.n	801b40c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801b3e0:	f8d8 5000 	ldr.w	r5, [r8]
 801b3e4:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801b3e8:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801b3ec:	096a      	lsrs	r2, r5, #5
 801b3ee:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b3f2:	4332      	orrs	r2, r6
 801b3f4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b3f8:	432a      	orrs	r2, r5
 801b3fa:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801b3fe:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b400:	4410      	add	r0, r2
 801b402:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b404:	f10e 0e01 	add.w	lr, lr, #1
 801b408:	4411      	add	r1, r2
 801b40a:	e7d2      	b.n	801b3b2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801b40c:	2a00      	cmp	r2, #0
 801b40e:	d0f6      	beq.n	801b3fe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801b410:	f8d8 7000 	ldr.w	r7, [r8]
 801b414:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801b418:	fa1f f982 	uxth.w	r9, r2
 801b41c:	ea4f 262c 	mov.w	r6, ip, asr #8
 801b420:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801b424:	43d2      	mvns	r2, r2
 801b426:	b2d2      	uxtb	r2, r2
 801b428:	fb15 f509 	smulbb	r5, r5, r9
 801b42c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b430:	fb06 5602 	mla	r6, r6, r2, r5
 801b434:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801b438:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801b43c:	b2ff      	uxtb	r7, r7
 801b43e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b442:	fa5f fc8c 	uxtb.w	ip, ip
 801b446:	fb17 f709 	smulbb	r7, r7, r9
 801b44a:	fb0c 7702 	mla	r7, ip, r2, r7
 801b44e:	b2b6      	uxth	r6, r6
 801b450:	fb1a fa09 	smulbb	sl, sl, r9
 801b454:	b2bf      	uxth	r7, r7
 801b456:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801b45a:	fb05 a502 	mla	r5, r5, r2, sl
 801b45e:	1c72      	adds	r2, r6, #1
 801b460:	f107 0a01 	add.w	sl, r7, #1
 801b464:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801b468:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801b46c:	b2ad      	uxth	r5, r5
 801b46e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b472:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801b476:	ea4a 0606 	orr.w	r6, sl, r6
 801b47a:	f105 0a01 	add.w	sl, r5, #1
 801b47e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b482:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b486:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b48a:	ea46 060a 	orr.w	r6, r6, sl
 801b48e:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801b492:	e7b4      	b.n	801b3fe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801b494:	b007      	add	sp, #28
 801b496:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b49a:	bf00      	nop
 801b49c:	20012f34 	.word	0x20012f34

0801b4a0 <_ZN8touchgfx8LCD16bppD1Ev>:
 801b4a0:	4770      	bx	lr

0801b4a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801b4a2:	4770      	bx	lr

0801b4a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801b4a4:	4770      	bx	lr

0801b4a6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801b4a6:	4770      	bx	lr

0801b4a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801b4a8:	4770      	bx	lr

0801b4aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801b4aa:	4770      	bx	lr

0801b4ac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801b4ac:	4770      	bx	lr

0801b4ae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801b4ae:	4770      	bx	lr

0801b4b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801b4b0:	4770      	bx	lr

0801b4b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801b4b2:	4770      	bx	lr

0801b4b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801b4b4:	4770      	bx	lr

0801b4b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801b4b6:	4770      	bx	lr

0801b4b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801b4b8:	4770      	bx	lr

0801b4ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801b4ba:	4770      	bx	lr

0801b4bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801b4bc:	4770      	bx	lr

0801b4be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801b4be:	4770      	bx	lr

0801b4c0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801b4c0:	4770      	bx	lr

0801b4c2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801b4c2:	4770      	bx	lr

0801b4c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801b4c4:	4770      	bx	lr

0801b4c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801b4c6:	4770      	bx	lr

0801b4c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801b4c8:	4770      	bx	lr

0801b4ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801b4ca:	4770      	bx	lr

0801b4cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801b4cc:	4770      	bx	lr

0801b4ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801b4ce:	4770      	bx	lr

0801b4d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801b4d0:	4770      	bx	lr

0801b4d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801b4d2:	4770      	bx	lr

0801b4d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801b4d4:	4770      	bx	lr

0801b4d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801b4d6:	4770      	bx	lr

0801b4d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801b4d8:	4770      	bx	lr

0801b4da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801b4da:	4770      	bx	lr

0801b4dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801b4dc:	4770      	bx	lr

0801b4de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801b4de:	4770      	bx	lr

0801b4e0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801b4e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b4e4:	b088      	sub	sp, #32
 801b4e6:	ac08      	add	r4, sp, #32
 801b4e8:	4606      	mov	r6, r0
 801b4ea:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801b4ee:	4620      	mov	r0, r4
 801b4f0:	4688      	mov	r8, r1
 801b4f2:	4691      	mov	r9, r2
 801b4f4:	f7fd fc62 	bl	8018dbc <_ZNK8touchgfx6Bitmap7getDataEv>
 801b4f8:	6833      	ldr	r3, [r6, #0]
 801b4fa:	4605      	mov	r5, r0
 801b4fc:	4620      	mov	r0, r4
 801b4fe:	699f      	ldr	r7, [r3, #24]
 801b500:	f7fd fb70 	bl	8018be4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801b504:	4682      	mov	sl, r0
 801b506:	4620      	mov	r0, r4
 801b508:	f7fd fba0 	bl	8018c4c <_ZNK8touchgfx6Bitmap9getHeightEv>
 801b50c:	9500      	str	r5, [sp, #0]
 801b50e:	e9cd a001 	strd	sl, r0, [sp, #4]
 801b512:	464b      	mov	r3, r9
 801b514:	a806      	add	r0, sp, #24
 801b516:	4642      	mov	r2, r8
 801b518:	4631      	mov	r1, r6
 801b51a:	47b8      	blx	r7
 801b51c:	4628      	mov	r0, r5
 801b51e:	b008      	add	sp, #32
 801b520:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801b524 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801b524:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801b528:	2300      	movs	r3, #0
 801b52a:	9300      	str	r3, [sp, #0]
 801b52c:	4b3d      	ldr	r3, [pc, #244]	; (801b624 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801b52e:	781b      	ldrb	r3, [r3, #0]
 801b530:	2b00      	cmp	r3, #0
 801b532:	d137      	bne.n	801b5a4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801b534:	4a3c      	ldr	r2, [pc, #240]	; (801b628 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801b536:	f9b2 2000 	ldrsh.w	r2, [r2]
 801b53a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801b53e:	2b00      	cmp	r3, #0
 801b540:	d132      	bne.n	801b5a8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801b542:	4b3a      	ldr	r3, [pc, #232]	; (801b62c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801b544:	f9b3 3000 	ldrsh.w	r3, [r3]
 801b548:	6808      	ldr	r0, [r1, #0]
 801b54a:	6849      	ldr	r1, [r1, #4]
 801b54c:	f8ad 3006 	strh.w	r3, [sp, #6]
 801b550:	ac02      	add	r4, sp, #8
 801b552:	ab02      	add	r3, sp, #8
 801b554:	c303      	stmia	r3!, {r0, r1}
 801b556:	4669      	mov	r1, sp
 801b558:	4620      	mov	r0, r4
 801b55a:	f7f9 fdc1 	bl	80150e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b55e:	4668      	mov	r0, sp
 801b560:	f7f9 fd7a 	bl	8015058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b564:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801b568:	f8bd 2000 	ldrh.w	r2, [sp]
 801b56c:	4d30      	ldr	r5, [pc, #192]	; (801b630 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801b56e:	4413      	add	r3, r2
 801b570:	f8ad 3008 	strh.w	r3, [sp, #8]
 801b574:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801b578:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801b57c:	6828      	ldr	r0, [r5, #0]
 801b57e:	4413      	add	r3, r2
 801b580:	f8ad 300a 	strh.w	r3, [sp, #10]
 801b584:	6803      	ldr	r3, [r0, #0]
 801b586:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801b588:	4798      	blx	r3
 801b58a:	f010 0f01 	tst.w	r0, #1
 801b58e:	462f      	mov	r7, r5
 801b590:	d00c      	beq.n	801b5ac <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801b592:	6828      	ldr	r0, [r5, #0]
 801b594:	6803      	ldr	r3, [r0, #0]
 801b596:	e894 0006 	ldmia.w	r4, {r1, r2}
 801b59a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801b59c:	4798      	blx	r3
 801b59e:	b004      	add	sp, #16
 801b5a0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b5a4:	4a21      	ldr	r2, [pc, #132]	; (801b62c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801b5a6:	e7c6      	b.n	801b536 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801b5a8:	4b1f      	ldr	r3, [pc, #124]	; (801b628 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801b5aa:	e7cb      	b.n	801b544 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801b5ac:	6838      	ldr	r0, [r7, #0]
 801b5ae:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801b5b2:	6803      	ldr	r3, [r0, #0]
 801b5b4:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801b5b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801b5ba:	4798      	blx	r3
 801b5bc:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801b5c0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801b5c4:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801b5c8:	fb16 3602 	smlabb	r6, r6, r2, r3
 801b5cc:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801b5d0:	6838      	ldr	r0, [r7, #0]
 801b5d2:	6803      	ldr	r3, [r0, #0]
 801b5d4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b5d6:	4798      	blx	r3
 801b5d8:	4a13      	ldr	r2, [pc, #76]	; (801b628 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801b5da:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801b5de:	8813      	ldrh	r3, [r2, #0]
 801b5e0:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801b5e4:	fb03 1404 	mla	r4, r3, r4, r1
 801b5e8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801b5ec:	435d      	muls	r5, r3
 801b5ee:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801b5f2:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801b5f6:	4691      	mov	r9, r2
 801b5f8:	6838      	ldr	r0, [r7, #0]
 801b5fa:	42ac      	cmp	r4, r5
 801b5fc:	6803      	ldr	r3, [r0, #0]
 801b5fe:	d20e      	bcs.n	801b61e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801b600:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801b604:	4632      	mov	r2, r6
 801b606:	4643      	mov	r3, r8
 801b608:	4621      	mov	r1, r4
 801b60a:	47d0      	blx	sl
 801b60c:	f8b9 3000 	ldrh.w	r3, [r9]
 801b610:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b614:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801b618:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801b61c:	e7ec      	b.n	801b5f8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801b61e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b620:	4798      	blx	r3
 801b622:	e7bc      	b.n	801b59e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801b624:	20012f1c 	.word	0x20012f1c
 801b628:	20012f1e 	.word	0x20012f1e
 801b62c:	20012f20 	.word	0x20012f20
 801b630:	20012f24 	.word	0x20012f24

0801b634 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801b634:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b638:	b08b      	sub	sp, #44	; 0x2c
 801b63a:	460f      	mov	r7, r1
 801b63c:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801b640:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801b644:	4616      	mov	r6, r2
 801b646:	f1bb 0f00 	cmp.w	fp, #0
 801b64a:	d04a      	beq.n	801b6e2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801b64c:	6810      	ldr	r0, [r2, #0]
 801b64e:	6851      	ldr	r1, [r2, #4]
 801b650:	ad06      	add	r5, sp, #24
 801b652:	c503      	stmia	r5!, {r0, r1}
 801b654:	6818      	ldr	r0, [r3, #0]
 801b656:	6859      	ldr	r1, [r3, #4]
 801b658:	ad08      	add	r5, sp, #32
 801b65a:	c503      	stmia	r5!, {r0, r1}
 801b65c:	a806      	add	r0, sp, #24
 801b65e:	f7f9 fcfb 	bl	8015058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b662:	4631      	mov	r1, r6
 801b664:	a808      	add	r0, sp, #32
 801b666:	f7f9 fd3b 	bl	80150e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b66a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801b66e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801b672:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801b676:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801b67a:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801b67e:	fb16 2103 	smlabb	r1, r6, r3, r2
 801b682:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801b686:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801b68a:	4f5f      	ldr	r7, [pc, #380]	; (801b808 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801b68c:	440a      	add	r2, r1
 801b68e:	f8ad 2020 	strh.w	r2, [sp, #32]
 801b692:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801b696:	6838      	ldr	r0, [r7, #0]
 801b698:	4413      	add	r3, r2
 801b69a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801b69e:	6803      	ldr	r3, [r0, #0]
 801b6a0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801b6a2:	4798      	blx	r3
 801b6a4:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801b6a8:	46b9      	mov	r9, r7
 801b6aa:	d11d      	bne.n	801b6e8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801b6ac:	b9fc      	cbnz	r4, 801b6ee <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801b6ae:	f010 0f01 	tst.w	r0, #1
 801b6b2:	d01c      	beq.n	801b6ee <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801b6b4:	f8d9 0000 	ldr.w	r0, [r9]
 801b6b8:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801b6bc:	6801      	ldr	r1, [r0, #0]
 801b6be:	f8cd b00c 	str.w	fp, [sp, #12]
 801b6c2:	2700      	movs	r7, #0
 801b6c4:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801b6c8:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801b6cc:	9402      	str	r4, [sp, #8]
 801b6ce:	b2ad      	uxth	r5, r5
 801b6d0:	fa1f f488 	uxth.w	r4, r8
 801b6d4:	9501      	str	r5, [sp, #4]
 801b6d6:	9400      	str	r4, [sp, #0]
 801b6d8:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801b6da:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801b6de:	4631      	mov	r1, r6
 801b6e0:	47a0      	blx	r4
 801b6e2:	b00b      	add	sp, #44	; 0x2c
 801b6e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b6e8:	f010 0f04 	tst.w	r0, #4
 801b6ec:	e7e1      	b.n	801b6b2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801b6ee:	f8d9 0000 	ldr.w	r0, [r9]
 801b6f2:	6803      	ldr	r3, [r0, #0]
 801b6f4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b6f6:	4798      	blx	r3
 801b6f8:	4b44      	ldr	r3, [pc, #272]	; (801b80c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801b6fa:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801b6fe:	881a      	ldrh	r2, [r3, #0]
 801b700:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801b704:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801b708:	fb02 1404 	mla	r4, r2, r4, r1
 801b70c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801b710:	469a      	mov	sl, r3
 801b712:	fb05 f502 	mul.w	r5, r5, r2
 801b716:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801b71a:	d059      	beq.n	801b7d0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801b71c:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801b720:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801b724:	fa1f f28b 	uxth.w	r2, fp
 801b728:	fa1f f989 	uxth.w	r9, r9
 801b72c:	469e      	mov	lr, r3
 801b72e:	42ac      	cmp	r4, r5
 801b730:	d264      	bcs.n	801b7fc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801b732:	eb04 0a07 	add.w	sl, r4, r7
 801b736:	4554      	cmp	r4, sl
 801b738:	d23d      	bcs.n	801b7b6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801b73a:	8821      	ldrh	r1, [r4, #0]
 801b73c:	f836 3b02 	ldrh.w	r3, [r6], #2
 801b740:	1208      	asrs	r0, r1, #8
 801b742:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801b746:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801b74a:	fb10 f009 	smulbb	r0, r0, r9
 801b74e:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801b752:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b756:	00c9      	lsls	r1, r1, #3
 801b758:	fb0c 0c02 	mla	ip, ip, r2, r0
 801b75c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801b760:	10d8      	asrs	r0, r3, #3
 801b762:	b2c9      	uxtb	r1, r1
 801b764:	00db      	lsls	r3, r3, #3
 801b766:	fa1f fc8c 	uxth.w	ip, ip
 801b76a:	fb1b fb09 	smulbb	fp, fp, r9
 801b76e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b772:	b2db      	uxtb	r3, r3
 801b774:	fb11 f109 	smulbb	r1, r1, r9
 801b778:	fb00 b002 	mla	r0, r0, r2, fp
 801b77c:	fb03 1302 	mla	r3, r3, r2, r1
 801b780:	f10c 0b01 	add.w	fp, ip, #1
 801b784:	b29b      	uxth	r3, r3
 801b786:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801b78a:	b280      	uxth	r0, r0
 801b78c:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801b790:	f103 0c01 	add.w	ip, r3, #1
 801b794:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801b798:	1c43      	adds	r3, r0, #1
 801b79a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801b79e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b7a2:	0940      	lsrs	r0, r0, #5
 801b7a4:	ea4c 0c0b 	orr.w	ip, ip, fp
 801b7a8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b7ac:	ea4c 0c00 	orr.w	ip, ip, r0
 801b7b0:	f824 cb02 	strh.w	ip, [r4], #2
 801b7b4:	e7bf      	b.n	801b736 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801b7b6:	f8be 3000 	ldrh.w	r3, [lr]
 801b7ba:	eba3 0308 	sub.w	r3, r3, r8
 801b7be:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b7c2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801b7c6:	eba3 0308 	sub.w	r3, r3, r8
 801b7ca:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801b7ce:	e7ae      	b.n	801b72e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801b7d0:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801b7d4:	f8d9 0000 	ldr.w	r0, [r9]
 801b7d8:	42ac      	cmp	r4, r5
 801b7da:	6803      	ldr	r3, [r0, #0]
 801b7dc:	d20e      	bcs.n	801b7fc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801b7de:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801b7e2:	4632      	mov	r2, r6
 801b7e4:	463b      	mov	r3, r7
 801b7e6:	4621      	mov	r1, r4
 801b7e8:	47c0      	blx	r8
 801b7ea:	f8ba 3000 	ldrh.w	r3, [sl]
 801b7ee:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b7f2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801b7f6:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801b7fa:	e7eb      	b.n	801b7d4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801b7fc:	4b02      	ldr	r3, [pc, #8]	; (801b808 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801b7fe:	6818      	ldr	r0, [r3, #0]
 801b800:	6803      	ldr	r3, [r0, #0]
 801b802:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b804:	4798      	blx	r3
 801b806:	e76c      	b.n	801b6e2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801b808:	20012f24 	.word	0x20012f24
 801b80c:	20012f1e 	.word	0x20012f1e

0801b810 <_ZN8touchgfx8LCD16bppD0Ev>:
 801b810:	b510      	push	{r4, lr}
 801b812:	2184      	movs	r1, #132	; 0x84
 801b814:	4604      	mov	r4, r0
 801b816:	f00d fe4a 	bl	80294ae <_ZdlPvj>
 801b81a:	4620      	mov	r0, r4
 801b81c:	bd10      	pop	{r4, pc}

0801b81e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801b81e:	b510      	push	{r4, lr}
 801b820:	2104      	movs	r1, #4
 801b822:	4604      	mov	r4, r0
 801b824:	f00d fe43 	bl	80294ae <_ZdlPvj>
 801b828:	4620      	mov	r0, r4
 801b82a:	bd10      	pop	{r4, pc}

0801b82c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801b82c:	b510      	push	{r4, lr}
 801b82e:	2104      	movs	r1, #4
 801b830:	4604      	mov	r4, r0
 801b832:	f00d fe3c 	bl	80294ae <_ZdlPvj>
 801b836:	4620      	mov	r0, r4
 801b838:	bd10      	pop	{r4, pc}

0801b83a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801b83a:	b510      	push	{r4, lr}
 801b83c:	f640 0144 	movw	r1, #2116	; 0x844
 801b840:	4604      	mov	r4, r0
 801b842:	f00d fe34 	bl	80294ae <_ZdlPvj>
 801b846:	4620      	mov	r0, r4
 801b848:	bd10      	pop	{r4, pc}

0801b84a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801b84a:	b510      	push	{r4, lr}
 801b84c:	2104      	movs	r1, #4
 801b84e:	4604      	mov	r4, r0
 801b850:	f00d fe2d 	bl	80294ae <_ZdlPvj>
 801b854:	4620      	mov	r0, r4
 801b856:	bd10      	pop	{r4, pc}

0801b858 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801b858:	b510      	push	{r4, lr}
 801b85a:	2104      	movs	r1, #4
 801b85c:	4604      	mov	r4, r0
 801b85e:	f00d fe26 	bl	80294ae <_ZdlPvj>
 801b862:	4620      	mov	r0, r4
 801b864:	bd10      	pop	{r4, pc}

0801b866 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801b866:	b510      	push	{r4, lr}
 801b868:	2104      	movs	r1, #4
 801b86a:	4604      	mov	r4, r0
 801b86c:	f00d fe1f 	bl	80294ae <_ZdlPvj>
 801b870:	4620      	mov	r0, r4
 801b872:	bd10      	pop	{r4, pc}

0801b874 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801b874:	b510      	push	{r4, lr}
 801b876:	2104      	movs	r1, #4
 801b878:	4604      	mov	r4, r0
 801b87a:	f00d fe18 	bl	80294ae <_ZdlPvj>
 801b87e:	4620      	mov	r0, r4
 801b880:	bd10      	pop	{r4, pc}

0801b882 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801b882:	b510      	push	{r4, lr}
 801b884:	2104      	movs	r1, #4
 801b886:	4604      	mov	r4, r0
 801b888:	f00d fe11 	bl	80294ae <_ZdlPvj>
 801b88c:	4620      	mov	r0, r4
 801b88e:	bd10      	pop	{r4, pc}

0801b890 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801b890:	b510      	push	{r4, lr}
 801b892:	2104      	movs	r1, #4
 801b894:	4604      	mov	r4, r0
 801b896:	f00d fe0a 	bl	80294ae <_ZdlPvj>
 801b89a:	4620      	mov	r0, r4
 801b89c:	bd10      	pop	{r4, pc}

0801b89e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801b89e:	b510      	push	{r4, lr}
 801b8a0:	2104      	movs	r1, #4
 801b8a2:	4604      	mov	r4, r0
 801b8a4:	f00d fe03 	bl	80294ae <_ZdlPvj>
 801b8a8:	4620      	mov	r0, r4
 801b8aa:	bd10      	pop	{r4, pc}

0801b8ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801b8ac:	b510      	push	{r4, lr}
 801b8ae:	2104      	movs	r1, #4
 801b8b0:	4604      	mov	r4, r0
 801b8b2:	f00d fdfc 	bl	80294ae <_ZdlPvj>
 801b8b6:	4620      	mov	r0, r4
 801b8b8:	bd10      	pop	{r4, pc}

0801b8ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801b8ba:	b510      	push	{r4, lr}
 801b8bc:	2104      	movs	r1, #4
 801b8be:	4604      	mov	r4, r0
 801b8c0:	f00d fdf5 	bl	80294ae <_ZdlPvj>
 801b8c4:	4620      	mov	r0, r4
 801b8c6:	bd10      	pop	{r4, pc}

0801b8c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b8c8:	b510      	push	{r4, lr}
 801b8ca:	2104      	movs	r1, #4
 801b8cc:	4604      	mov	r4, r0
 801b8ce:	f00d fdee 	bl	80294ae <_ZdlPvj>
 801b8d2:	4620      	mov	r0, r4
 801b8d4:	bd10      	pop	{r4, pc}

0801b8d6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801b8d6:	b510      	push	{r4, lr}
 801b8d8:	2104      	movs	r1, #4
 801b8da:	4604      	mov	r4, r0
 801b8dc:	f00d fde7 	bl	80294ae <_ZdlPvj>
 801b8e0:	4620      	mov	r0, r4
 801b8e2:	bd10      	pop	{r4, pc}

0801b8e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801b8e4:	b510      	push	{r4, lr}
 801b8e6:	2104      	movs	r1, #4
 801b8e8:	4604      	mov	r4, r0
 801b8ea:	f00d fde0 	bl	80294ae <_ZdlPvj>
 801b8ee:	4620      	mov	r0, r4
 801b8f0:	bd10      	pop	{r4, pc}

0801b8f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801b8f2:	b510      	push	{r4, lr}
 801b8f4:	2104      	movs	r1, #4
 801b8f6:	4604      	mov	r4, r0
 801b8f8:	f00d fdd9 	bl	80294ae <_ZdlPvj>
 801b8fc:	4620      	mov	r0, r4
 801b8fe:	bd10      	pop	{r4, pc}

0801b900 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801b900:	b510      	push	{r4, lr}
 801b902:	2104      	movs	r1, #4
 801b904:	4604      	mov	r4, r0
 801b906:	f00d fdd2 	bl	80294ae <_ZdlPvj>
 801b90a:	4620      	mov	r0, r4
 801b90c:	bd10      	pop	{r4, pc}

0801b90e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801b90e:	b510      	push	{r4, lr}
 801b910:	2104      	movs	r1, #4
 801b912:	4604      	mov	r4, r0
 801b914:	f00d fdcb 	bl	80294ae <_ZdlPvj>
 801b918:	4620      	mov	r0, r4
 801b91a:	bd10      	pop	{r4, pc}

0801b91c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b91c:	b510      	push	{r4, lr}
 801b91e:	2104      	movs	r1, #4
 801b920:	4604      	mov	r4, r0
 801b922:	f00d fdc4 	bl	80294ae <_ZdlPvj>
 801b926:	4620      	mov	r0, r4
 801b928:	bd10      	pop	{r4, pc}

0801b92a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801b92a:	b510      	push	{r4, lr}
 801b92c:	2104      	movs	r1, #4
 801b92e:	4604      	mov	r4, r0
 801b930:	f00d fdbd 	bl	80294ae <_ZdlPvj>
 801b934:	4620      	mov	r0, r4
 801b936:	bd10      	pop	{r4, pc}

0801b938 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801b938:	b510      	push	{r4, lr}
 801b93a:	2104      	movs	r1, #4
 801b93c:	4604      	mov	r4, r0
 801b93e:	f00d fdb6 	bl	80294ae <_ZdlPvj>
 801b942:	4620      	mov	r0, r4
 801b944:	bd10      	pop	{r4, pc}

0801b946 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801b946:	b510      	push	{r4, lr}
 801b948:	2104      	movs	r1, #4
 801b94a:	4604      	mov	r4, r0
 801b94c:	f00d fdaf 	bl	80294ae <_ZdlPvj>
 801b950:	4620      	mov	r0, r4
 801b952:	bd10      	pop	{r4, pc}

0801b954 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801b954:	b510      	push	{r4, lr}
 801b956:	2104      	movs	r1, #4
 801b958:	4604      	mov	r4, r0
 801b95a:	f00d fda8 	bl	80294ae <_ZdlPvj>
 801b95e:	4620      	mov	r0, r4
 801b960:	bd10      	pop	{r4, pc}

0801b962 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801b962:	b510      	push	{r4, lr}
 801b964:	2104      	movs	r1, #4
 801b966:	4604      	mov	r4, r0
 801b968:	f00d fda1 	bl	80294ae <_ZdlPvj>
 801b96c:	4620      	mov	r0, r4
 801b96e:	bd10      	pop	{r4, pc}

0801b970 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b970:	b510      	push	{r4, lr}
 801b972:	2104      	movs	r1, #4
 801b974:	4604      	mov	r4, r0
 801b976:	f00d fd9a 	bl	80294ae <_ZdlPvj>
 801b97a:	4620      	mov	r0, r4
 801b97c:	bd10      	pop	{r4, pc}

0801b97e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801b97e:	b510      	push	{r4, lr}
 801b980:	2104      	movs	r1, #4
 801b982:	4604      	mov	r4, r0
 801b984:	f00d fd93 	bl	80294ae <_ZdlPvj>
 801b988:	4620      	mov	r0, r4
 801b98a:	bd10      	pop	{r4, pc}

0801b98c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801b98c:	b510      	push	{r4, lr}
 801b98e:	2104      	movs	r1, #4
 801b990:	4604      	mov	r4, r0
 801b992:	f00d fd8c 	bl	80294ae <_ZdlPvj>
 801b996:	4620      	mov	r0, r4
 801b998:	bd10      	pop	{r4, pc}

0801b99a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801b99a:	b510      	push	{r4, lr}
 801b99c:	2104      	movs	r1, #4
 801b99e:	4604      	mov	r4, r0
 801b9a0:	f00d fd85 	bl	80294ae <_ZdlPvj>
 801b9a4:	4620      	mov	r0, r4
 801b9a6:	bd10      	pop	{r4, pc}

0801b9a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801b9a8:	b510      	push	{r4, lr}
 801b9aa:	2104      	movs	r1, #4
 801b9ac:	4604      	mov	r4, r0
 801b9ae:	f00d fd7e 	bl	80294ae <_ZdlPvj>
 801b9b2:	4620      	mov	r0, r4
 801b9b4:	bd10      	pop	{r4, pc}

0801b9b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801b9b6:	b510      	push	{r4, lr}
 801b9b8:	2104      	movs	r1, #4
 801b9ba:	4604      	mov	r4, r0
 801b9bc:	f00d fd77 	bl	80294ae <_ZdlPvj>
 801b9c0:	4620      	mov	r0, r4
 801b9c2:	bd10      	pop	{r4, pc}

0801b9c4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801b9c4:	b510      	push	{r4, lr}
 801b9c6:	2104      	movs	r1, #4
 801b9c8:	4604      	mov	r4, r0
 801b9ca:	f00d fd70 	bl	80294ae <_ZdlPvj>
 801b9ce:	4620      	mov	r0, r4
 801b9d0:	bd10      	pop	{r4, pc}
	...

0801b9d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801b9d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b9d8:	b08f      	sub	sp, #60	; 0x3c
 801b9da:	461c      	mov	r4, r3
 801b9dc:	9205      	str	r2, [sp, #20]
 801b9de:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b9e2:	9100      	str	r1, [sp, #0]
 801b9e4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b9e6:	9201      	str	r2, [sp, #4]
 801b9e8:	2a00      	cmp	r2, #0
 801b9ea:	f000 8115 	beq.w	801bc18 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801b9ee:	6820      	ldr	r0, [r4, #0]
 801b9f0:	6861      	ldr	r1, [r4, #4]
 801b9f2:	aa0a      	add	r2, sp, #40	; 0x28
 801b9f4:	c203      	stmia	r2!, {r0, r1}
 801b9f6:	6818      	ldr	r0, [r3, #0]
 801b9f8:	6859      	ldr	r1, [r3, #4]
 801b9fa:	aa0c      	add	r2, sp, #48	; 0x30
 801b9fc:	c203      	stmia	r2!, {r0, r1}
 801b9fe:	a80a      	add	r0, sp, #40	; 0x28
 801ba00:	f7f9 fb2a 	bl	8015058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ba04:	4621      	mov	r1, r4
 801ba06:	a80c      	add	r0, sp, #48	; 0x30
 801ba08:	f7f9 fb6a 	bl	80150e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ba0c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801ba10:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801ba14:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801ba18:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801ba1c:	bfde      	ittt	le
 801ba1e:	b2b3      	uxthle	r3, r6
 801ba20:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801ba24:	fb92 f3f3 	sdivle	r3, r2, r3
 801ba28:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801ba2c:	bfc8      	it	gt
 801ba2e:	2301      	movgt	r3, #1
 801ba30:	fb92 f1f3 	sdiv	r1, r2, r3
 801ba34:	fa1f fc81 	uxth.w	ip, r1
 801ba38:	fb0c 2413 	mls	r4, ip, r3, r2
 801ba3c:	fb14 f406 	smulbb	r4, r4, r6
 801ba40:	441d      	add	r5, r3
 801ba42:	4404      	add	r4, r0
 801ba44:	4661      	mov	r1, ip
 801ba46:	3d01      	subs	r5, #1
 801ba48:	b2a4      	uxth	r4, r4
 801ba4a:	fb95 f5f3 	sdiv	r5, r5, r3
 801ba4e:	b131      	cbz	r1, 801ba5e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801ba50:	9b05      	ldr	r3, [sp, #20]
 801ba52:	9900      	ldr	r1, [sp, #0]
 801ba54:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801ba58:	ba1b      	rev	r3, r3
 801ba5a:	4419      	add	r1, r3
 801ba5c:	9100      	str	r1, [sp, #0]
 801ba5e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801ba62:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801ba66:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801ba6a:	4418      	add	r0, r3
 801ba6c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801ba70:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801ba74:	441a      	add	r2, r3
 801ba76:	4b6a      	ldr	r3, [pc, #424]	; (801bc20 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801ba78:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801ba7c:	6818      	ldr	r0, [r3, #0]
 801ba7e:	6803      	ldr	r3, [r0, #0]
 801ba80:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ba82:	4798      	blx	r3
 801ba84:	4967      	ldr	r1, [pc, #412]	; (801bc24 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801ba86:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801ba8a:	880b      	ldrh	r3, [r1, #0]
 801ba8c:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801ba90:	9109      	str	r1, [sp, #36]	; 0x24
 801ba92:	fb03 c202 	mla	r2, r3, r2, ip
 801ba96:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ba9a:	4373      	muls	r3, r6
 801ba9c:	b2ad      	uxth	r5, r5
 801ba9e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801baa2:	00ad      	lsls	r5, r5, #2
 801baa4:	9306      	str	r3, [sp, #24]
 801baa6:	1d2b      	adds	r3, r5, #4
 801baa8:	9307      	str	r3, [sp, #28]
 801baaa:	9b01      	ldr	r3, [sp, #4]
 801baac:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801bab0:	9103      	str	r1, [sp, #12]
 801bab2:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801bab6:	2c00      	cmp	r4, #0
 801bab8:	bf0c      	ite	eq
 801baba:	46c6      	moveq	lr, r8
 801babc:	f04f 0e00 	movne.w	lr, #0
 801bac0:	2300      	movs	r3, #0
 801bac2:	b292      	uxth	r2, r2
 801bac4:	fa1f fe8e 	uxth.w	lr, lr
 801bac8:	9302      	str	r3, [sp, #8]
 801baca:	9204      	str	r2, [sp, #16]
 801bacc:	9a06      	ldr	r2, [sp, #24]
 801bace:	4282      	cmp	r2, r0
 801bad0:	f240 809d 	bls.w	801bc0e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801bad4:	b963      	cbnz	r3, 801baf0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801bad6:	9b00      	ldr	r3, [sp, #0]
 801bad8:	781a      	ldrb	r2, [r3, #0]
 801bada:	0993      	lsrs	r3, r2, #6
 801badc:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801bae0:	9202      	str	r2, [sp, #8]
 801bae2:	1e5a      	subs	r2, r3, #1
 801bae4:	2a02      	cmp	r2, #2
 801bae6:	d815      	bhi.n	801bb14 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801bae8:	9a00      	ldr	r2, [sp, #0]
 801baea:	3201      	adds	r2, #1
 801baec:	9200      	str	r2, [sp, #0]
 801baee:	b29b      	uxth	r3, r3
 801baf0:	b1b4      	cbz	r4, 801bb20 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801baf2:	429c      	cmp	r4, r3
 801baf4:	bf95      	itete	ls
 801baf6:	1b1c      	subls	r4, r3, r4
 801baf8:	1ae4      	subhi	r4, r4, r3
 801bafa:	fa1f fa84 	uxthls.w	sl, r4
 801bafe:	b2a4      	uxthhi	r4, r4
 801bb00:	bf87      	ittee	hi
 801bb02:	4671      	movhi	r1, lr
 801bb04:	f04f 0a00 	movhi.w	sl, #0
 801bb08:	fa1f f188 	uxthls.w	r1, r8
 801bb0c:	2400      	movls	r4, #0
 801bb0e:	4653      	mov	r3, sl
 801bb10:	468e      	mov	lr, r1
 801bb12:	e7db      	b.n	801bacc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801bb14:	9a00      	ldr	r2, [sp, #0]
 801bb16:	9b00      	ldr	r3, [sp, #0]
 801bb18:	3202      	adds	r2, #2
 801bb1a:	785b      	ldrb	r3, [r3, #1]
 801bb1c:	9200      	str	r2, [sp, #0]
 801bb1e:	e7e7      	b.n	801baf0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801bb20:	2202      	movs	r2, #2
 801bb22:	4615      	mov	r5, r2
 801bb24:	9907      	ldr	r1, [sp, #28]
 801bb26:	9a02      	ldr	r2, [sp, #8]
 801bb28:	fb15 1202 	smlabb	r2, r5, r2, r1
 801bb2c:	9905      	ldr	r1, [sp, #20]
 801bb2e:	4573      	cmp	r3, lr
 801bb30:	f831 c002 	ldrh.w	ip, [r1, r2]
 801bb34:	9a01      	ldr	r2, [sp, #4]
 801bb36:	bf2b      	itete	cs
 801bb38:	eba3 0a0e 	subcs.w	sl, r3, lr
 801bb3c:	ebae 0103 	subcc.w	r1, lr, r3
 801bb40:	46f1      	movcs	r9, lr
 801bb42:	4699      	movcc	r9, r3
 801bb44:	bf27      	ittee	cs
 801bb46:	fa1f fa8a 	uxthcs.w	sl, sl
 801bb4a:	4621      	movcs	r1, r4
 801bb4c:	b289      	uxthcc	r1, r1
 801bb4e:	46a2      	movcc	sl, r4
 801bb50:	2aff      	cmp	r2, #255	; 0xff
 801bb52:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801bb56:	d105      	bne.n	801bb64 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801bb58:	4481      	add	r9, r0
 801bb5a:	4581      	cmp	r9, r0
 801bb5c:	d045      	beq.n	801bbea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801bb5e:	f820 cb02 	strh.w	ip, [r0], #2
 801bb62:	e7fa      	b.n	801bb5a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801bb64:	9d03      	ldr	r5, [sp, #12]
 801bb66:	ea4f 222c 	mov.w	r2, ip, asr #8
 801bb6a:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801bb6e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801bb72:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801bb76:	436a      	muls	r2, r5
 801bb78:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801bb7c:	fa5f fc8c 	uxtb.w	ip, ip
 801bb80:	9208      	str	r2, [sp, #32]
 801bb82:	fb0b fb05 	mul.w	fp, fp, r5
 801bb86:	fb0c fc05 	mul.w	ip, ip, r5
 801bb8a:	4481      	add	r9, r0
 801bb8c:	4581      	cmp	r9, r0
 801bb8e:	d02c      	beq.n	801bbea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801bb90:	8802      	ldrh	r2, [r0, #0]
 801bb92:	9d04      	ldr	r5, [sp, #16]
 801bb94:	9f04      	ldr	r7, [sp, #16]
 801bb96:	1216      	asrs	r6, r2, #8
 801bb98:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801bb9c:	fb16 f605 	smulbb	r6, r6, r5
 801bba0:	9d08      	ldr	r5, [sp, #32]
 801bba2:	442e      	add	r6, r5
 801bba4:	10d5      	asrs	r5, r2, #3
 801bba6:	00d2      	lsls	r2, r2, #3
 801bba8:	b2d2      	uxtb	r2, r2
 801bbaa:	fb12 f207 	smulbb	r2, r2, r7
 801bbae:	b2b6      	uxth	r6, r6
 801bbb0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801bbb4:	4462      	add	r2, ip
 801bbb6:	fb15 f507 	smulbb	r5, r5, r7
 801bbba:	b292      	uxth	r2, r2
 801bbbc:	1c77      	adds	r7, r6, #1
 801bbbe:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801bbc2:	1c57      	adds	r7, r2, #1
 801bbc4:	445d      	add	r5, fp
 801bbc6:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801bbca:	b2ad      	uxth	r5, r5
 801bbcc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801bbd0:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801bbd4:	4316      	orrs	r6, r2
 801bbd6:	1c6a      	adds	r2, r5, #1
 801bbd8:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801bbdc:	096d      	lsrs	r5, r5, #5
 801bbde:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bbe2:	432e      	orrs	r6, r5
 801bbe4:	f820 6b02 	strh.w	r6, [r0], #2
 801bbe8:	e7d0      	b.n	801bb8c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801bbea:	4573      	cmp	r3, lr
 801bbec:	d38f      	bcc.n	801bb0e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801bbee:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801bbf2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bbf4:	fa1f f188 	uxth.w	r1, r8
 801bbf8:	1a64      	subs	r4, r4, r1
 801bbfa:	881b      	ldrh	r3, [r3, #0]
 801bbfc:	b2a4      	uxth	r4, r4
 801bbfe:	2c00      	cmp	r4, #0
 801bc00:	eba3 0308 	sub.w	r3, r3, r8
 801bc04:	bf18      	it	ne
 801bc06:	2100      	movne	r1, #0
 801bc08:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801bc0c:	e77f      	b.n	801bb0e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801bc0e:	4b04      	ldr	r3, [pc, #16]	; (801bc20 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801bc10:	6818      	ldr	r0, [r3, #0]
 801bc12:	6803      	ldr	r3, [r0, #0]
 801bc14:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bc16:	4798      	blx	r3
 801bc18:	b00f      	add	sp, #60	; 0x3c
 801bc1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bc1e:	bf00      	nop
 801bc20:	20012f24 	.word	0x20012f24
 801bc24:	20012f1e 	.word	0x20012f1e

0801bc28 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801bc28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bc2c:	b09f      	sub	sp, #124	; 0x7c
 801bc2e:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801bc32:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801bc36:	9209      	str	r2, [sp, #36]	; 0x24
 801bc38:	461d      	mov	r5, r3
 801bc3a:	4604      	mov	r4, r0
 801bc3c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bc3e:	2a00      	cmp	r2, #0
 801bc40:	f000 81eb 	beq.w	801c01a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801bc44:	6828      	ldr	r0, [r5, #0]
 801bc46:	6869      	ldr	r1, [r5, #4]
 801bc48:	aa1a      	add	r2, sp, #104	; 0x68
 801bc4a:	c203      	stmia	r2!, {r0, r1}
 801bc4c:	6818      	ldr	r0, [r3, #0]
 801bc4e:	6859      	ldr	r1, [r3, #4]
 801bc50:	aa1c      	add	r2, sp, #112	; 0x70
 801bc52:	c203      	stmia	r2!, {r0, r1}
 801bc54:	a81a      	add	r0, sp, #104	; 0x68
 801bc56:	f7f9 f9ff 	bl	8015058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bc5a:	4629      	mov	r1, r5
 801bc5c:	a81c      	add	r0, sp, #112	; 0x70
 801bc5e:	f7f9 fa3f 	bl	80150e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bc62:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801bc66:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801bc6a:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801bc6e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801bc72:	bfd7      	itett	le
 801bc74:	b29a      	uxthle	r2, r3
 801bc76:	2201      	movgt	r2, #1
 801bc78:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801bc7c:	fb91 f2f2 	sdivle	r2, r1, r2
 801bc80:	9202      	str	r2, [sp, #8]
 801bc82:	9802      	ldr	r0, [sp, #8]
 801bc84:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801bc88:	fb92 f0f0 	sdiv	r0, r2, r0
 801bc8c:	b280      	uxth	r0, r0
 801bc8e:	9010      	str	r0, [sp, #64]	; 0x40
 801bc90:	9902      	ldr	r1, [sp, #8]
 801bc92:	9802      	ldr	r0, [sp, #8]
 801bc94:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801bc96:	4488      	add	r8, r1
 801bc98:	fb05 2510 	mls	r5, r5, r0, r2
 801bc9c:	fb15 f503 	smulbb	r5, r5, r3
 801bca0:	f108 38ff 	add.w	r8, r8, #4294967295
 801bca4:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801bca8:	fb98 f8f1 	sdiv	r8, r8, r1
 801bcac:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801bcb0:	440d      	add	r5, r1
 801bcb2:	4419      	add	r1, r3
 801bcb4:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801bcb8:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801bcbc:	441a      	add	r2, r3
 801bcbe:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801bcc2:	9304      	str	r3, [sp, #16]
 801bcc4:	4b95      	ldr	r3, [pc, #596]	; (801bf1c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801bcc6:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801bcca:	6818      	ldr	r0, [r3, #0]
 801bccc:	6803      	ldr	r3, [r0, #0]
 801bcce:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801bcd0:	4798      	blx	r3
 801bcd2:	4b93      	ldr	r3, [pc, #588]	; (801bf20 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801bcd4:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801bcd8:	881a      	ldrh	r2, [r3, #0]
 801bcda:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801bcde:	9318      	str	r3, [sp, #96]	; 0x60
 801bce0:	fb02 7101 	mla	r1, r2, r1, r7
 801bce4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801bce8:	4356      	muls	r6, r2
 801bcea:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801bcee:	f108 0801 	add.w	r8, r8, #1
 801bcf2:	920a      	str	r2, [sp, #40]	; 0x28
 801bcf4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bcf6:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801bcfa:	930f      	str	r3, [sp, #60]	; 0x3c
 801bcfc:	fa1f f888 	uxth.w	r8, r8
 801bd00:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801bd04:	f108 0204 	add.w	r2, r8, #4
 801bd08:	9211      	str	r2, [sp, #68]	; 0x44
 801bd0a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801bd0c:	4b85      	ldr	r3, [pc, #532]	; (801bf24 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801bd0e:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801bd12:	b2ad      	uxth	r5, r5
 801bd14:	9215      	str	r2, [sp, #84]	; 0x54
 801bd16:	2d00      	cmp	r5, #0
 801bd18:	9a04      	ldr	r2, [sp, #16]
 801bd1a:	f04f 0100 	mov.w	r1, #0
 801bd1e:	bf18      	it	ne
 801bd20:	2200      	movne	r2, #0
 801bd22:	1b1b      	subs	r3, r3, r4
 801bd24:	b292      	uxth	r2, r2
 801bd26:	910d      	str	r1, [sp, #52]	; 0x34
 801bd28:	9319      	str	r3, [sp, #100]	; 0x64
 801bd2a:	9910      	ldr	r1, [sp, #64]	; 0x40
 801bd2c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bd2e:	fa11 f383 	uxtah	r3, r1, r3
 801bd32:	9914      	ldr	r1, [sp, #80]	; 0x50
 801bd34:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801bd38:	3304      	adds	r3, #4
 801bd3a:	9306      	str	r3, [sp, #24]
 801bd3c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801bd3e:	4283      	cmp	r3, r0
 801bd40:	f240 8166 	bls.w	801c010 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801bd44:	9902      	ldr	r1, [sp, #8]
 801bd46:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801bd4a:	fbb5 f3f3 	udiv	r3, r5, r3
 801bd4e:	1acb      	subs	r3, r1, r3
 801bd50:	b29b      	uxth	r3, r3
 801bd52:	9316      	str	r3, [sp, #88]	; 0x58
 801bd54:	9b06      	ldr	r3, [sp, #24]
 801bd56:	9e06      	ldr	r6, [sp, #24]
 801bd58:	7859      	ldrb	r1, [r3, #1]
 801bd5a:	789b      	ldrb	r3, [r3, #2]
 801bd5c:	7836      	ldrb	r6, [r6, #0]
 801bd5e:	9612      	str	r6, [sp, #72]	; 0x48
 801bd60:	021b      	lsls	r3, r3, #8
 801bd62:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801bd66:	9906      	ldr	r1, [sp, #24]
 801bd68:	78c9      	ldrb	r1, [r1, #3]
 801bd6a:	430b      	orrs	r3, r1
 801bd6c:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801bd6e:	3601      	adds	r6, #1
 801bd70:	4419      	add	r1, r3
 801bd72:	9605      	str	r6, [sp, #20]
 801bd74:	1c4e      	adds	r6, r1, #1
 801bd76:	9603      	str	r6, [sp, #12]
 801bd78:	7849      	ldrb	r1, [r1, #1]
 801bd7a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801bd7c:	0209      	lsls	r1, r1, #8
 801bd7e:	5cf3      	ldrb	r3, [r6, r3]
 801bd80:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801bd84:	4319      	orrs	r1, r3
 801bd86:	b28b      	uxth	r3, r1
 801bd88:	930c      	str	r3, [sp, #48]	; 0x30
 801bd8a:	2300      	movs	r3, #0
 801bd8c:	f04f 0a01 	mov.w	sl, #1
 801bd90:	9307      	str	r3, [sp, #28]
 801bd92:	469c      	mov	ip, r3
 801bd94:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801bd98:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801bd9c:	46d3      	mov	fp, sl
 801bd9e:	4657      	mov	r7, sl
 801bda0:	930e      	str	r3, [sp, #56]	; 0x38
 801bda2:	2d00      	cmp	r5, #0
 801bda4:	d07e      	beq.n	801bea4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801bda6:	42af      	cmp	r7, r5
 801bda8:	d26e      	bcs.n	801be88 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801bdaa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801bdac:	9201      	str	r2, [sp, #4]
 801bdae:	1bed      	subs	r5, r5, r7
 801bdb0:	4283      	cmp	r3, r0
 801bdb2:	b2ad      	uxth	r5, r5
 801bdb4:	d802      	bhi.n	801bdbc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801bdb6:	e073      	b.n	801bea0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801bdb8:	2b00      	cmp	r3, #0
 801bdba:	d15f      	bne.n	801be7c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801bdbc:	9b03      	ldr	r3, [sp, #12]
 801bdbe:	785b      	ldrb	r3, [r3, #1]
 801bdc0:	f1cb 0207 	rsb	r2, fp, #7
 801bdc4:	4093      	lsls	r3, r2
 801bdc6:	005b      	lsls	r3, r3, #1
 801bdc8:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801bdcc:	9b03      	ldr	r3, [sp, #12]
 801bdce:	781b      	ldrb	r3, [r3, #0]
 801bdd0:	fa43 f30b 	asr.w	r3, r3, fp
 801bdd4:	b2db      	uxtb	r3, r3
 801bdd6:	4313      	orrs	r3, r2
 801bdd8:	f10b 0201 	add.w	r2, fp, #1
 801bddc:	fa5f fb82 	uxtb.w	fp, r2
 801bde0:	9a03      	ldr	r2, [sp, #12]
 801bde2:	f1bb 0f08 	cmp.w	fp, #8
 801bde6:	bf15      	itete	ne
 801bde8:	3201      	addne	r2, #1
 801bdea:	3202      	addeq	r2, #2
 801bdec:	9203      	strne	r2, [sp, #12]
 801bdee:	9203      	streq	r2, [sp, #12]
 801bdf0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801bdf2:	b29f      	uxth	r7, r3
 801bdf4:	bf08      	it	eq
 801bdf6:	f04f 0b00 	moveq.w	fp, #0
 801bdfa:	42ba      	cmp	r2, r7
 801bdfc:	d309      	bcc.n	801be12 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801bdfe:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801be02:	2301      	movs	r3, #1
 801be04:	9a05      	ldr	r2, [sp, #20]
 801be06:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801be0a:	d30e      	bcc.n	801be2a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801be0c:	469a      	mov	sl, r3
 801be0e:	2600      	movs	r6, #0
 801be10:	e035      	b.n	801be7e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801be12:	9b05      	ldr	r3, [sp, #20]
 801be14:	429f      	cmp	r7, r3
 801be16:	d318      	bcc.n	801be4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801be18:	eb04 030a 	add.w	r3, r4, sl
 801be1c:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801be20:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801be24:	f10a 0301 	add.w	r3, sl, #1
 801be28:	b29b      	uxth	r3, r3
 801be2a:	9a05      	ldr	r2, [sp, #20]
 801be2c:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801be30:	990c      	ldr	r1, [sp, #48]	; 0x30
 801be32:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801be36:	7116      	strb	r6, [r2, #4]
 801be38:	f10a 0601 	add.w	r6, sl, #1
 801be3c:	80d1      	strh	r1, [r2, #6]
 801be3e:	7156      	strb	r6, [r2, #5]
 801be40:	9a05      	ldr	r2, [sp, #20]
 801be42:	3201      	adds	r2, #1
 801be44:	b292      	uxth	r2, r2
 801be46:	9205      	str	r2, [sp, #20]
 801be48:	e7e0      	b.n	801be0c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801be4a:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801be4e:	463a      	mov	r2, r7
 801be50:	795b      	ldrb	r3, [r3, #5]
 801be52:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801be56:	4426      	add	r6, r4
 801be58:	9919      	ldr	r1, [sp, #100]	; 0x64
 801be5a:	eb01 0c06 	add.w	ip, r1, r6
 801be5e:	f1bc 0f00 	cmp.w	ip, #0
 801be62:	dd07      	ble.n	801be74 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801be64:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801be68:	f892 c004 	ldrb.w	ip, [r2, #4]
 801be6c:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801be70:	88d2      	ldrh	r2, [r2, #6]
 801be72:	e7f1      	b.n	801be58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801be74:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801be78:	b29b      	uxth	r3, r3
 801be7a:	e7c3      	b.n	801be04 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801be7c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801be7e:	970c      	str	r7, [sp, #48]	; 0x30
 801be80:	9a01      	ldr	r2, [sp, #4]
 801be82:	46b4      	mov	ip, r6
 801be84:	461f      	mov	r7, r3
 801be86:	e78c      	b.n	801bda2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801be88:	1b7b      	subs	r3, r7, r5
 801be8a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801be8e:	9201      	str	r2, [sp, #4]
 801be90:	eb0c 0605 	add.w	r6, ip, r5
 801be94:	b29b      	uxth	r3, r3
 801be96:	b2b6      	uxth	r6, r6
 801be98:	2500      	movs	r5, #0
 801be9a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801be9c:	4282      	cmp	r2, r0
 801be9e:	d88b      	bhi.n	801bdb8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801bea0:	9a01      	ldr	r2, [sp, #4]
 801bea2:	e74b      	b.n	801bd3c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801bea4:	4297      	cmp	r7, r2
 801bea6:	d332      	bcc.n	801bf0e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801bea8:	1abb      	subs	r3, r7, r2
 801beaa:	b29b      	uxth	r3, r3
 801beac:	9208      	str	r2, [sp, #32]
 801beae:	9501      	str	r5, [sp, #4]
 801beb0:	9909      	ldr	r1, [sp, #36]	; 0x24
 801beb2:	29ff      	cmp	r1, #255	; 0xff
 801beb4:	9908      	ldr	r1, [sp, #32]
 801beb6:	eb0c 0601 	add.w	r6, ip, r1
 801beba:	d135      	bne.n	801bf28 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801bebc:	f1a0 0e02 	sub.w	lr, r0, #2
 801bec0:	b2b6      	uxth	r6, r6
 801bec2:	45b4      	cmp	ip, r6
 801bec4:	f040 808c 	bne.w	801bfe0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801bec8:	9908      	ldr	r1, [sp, #32]
 801beca:	4297      	cmp	r7, r2
 801becc:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801bed0:	d3e2      	bcc.n	801be98 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801bed2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801bed4:	9904      	ldr	r1, [sp, #16]
 801bed6:	8812      	ldrh	r2, [r2, #0]
 801bed8:	1a52      	subs	r2, r2, r1
 801beda:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801bede:	9a07      	ldr	r2, [sp, #28]
 801bee0:	9916      	ldr	r1, [sp, #88]	; 0x58
 801bee2:	3201      	adds	r2, #1
 801bee4:	428a      	cmp	r2, r1
 801bee6:	9207      	str	r2, [sp, #28]
 801bee8:	f040 8087 	bne.w	801bffa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801beec:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801bef0:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801bef4:	9b04      	ldr	r3, [sp, #16]
 801bef6:	1bed      	subs	r5, r5, r7
 801bef8:	b2ad      	uxth	r5, r5
 801befa:	2d00      	cmp	r5, #0
 801befc:	bf08      	it	eq
 801befe:	461a      	moveq	r2, r3
 801bf00:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bf02:	bf18      	it	ne
 801bf04:	2200      	movne	r2, #0
 801bf06:	3301      	adds	r3, #1
 801bf08:	930d      	str	r3, [sp, #52]	; 0x34
 801bf0a:	b292      	uxth	r2, r2
 801bf0c:	e70d      	b.n	801bd2a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801bf0e:	1bd1      	subs	r1, r2, r7
 801bf10:	b28b      	uxth	r3, r1
 801bf12:	9301      	str	r3, [sp, #4]
 801bf14:	9708      	str	r7, [sp, #32]
 801bf16:	462b      	mov	r3, r5
 801bf18:	e7ca      	b.n	801beb0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801bf1a:	bf00      	nop
 801bf1c:	20012f24 	.word	0x20012f24
 801bf20:	20012f1e 	.word	0x20012f1e
 801bf24:	fffff7fb 	.word	0xfffff7fb
 801bf28:	b2b6      	uxth	r6, r6
 801bf2a:	900b      	str	r0, [sp, #44]	; 0x2c
 801bf2c:	45b4      	cmp	ip, r6
 801bf2e:	d0cb      	beq.n	801bec8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801bf30:	f10c 0101 	add.w	r1, ip, #1
 801bf34:	44a4      	add	ip, r4
 801bf36:	9117      	str	r1, [sp, #92]	; 0x5c
 801bf38:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801bf3c:	9911      	ldr	r1, [sp, #68]	; 0x44
 801bf3e:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801bf42:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801bf44:	f8b1 c000 	ldrh.w	ip, [r1]
 801bf48:	990e      	ldr	r1, [sp, #56]	; 0x38
 801bf4a:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801bf4e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801bf52:	fb1e fe01 	smulbb	lr, lr, r1
 801bf56:	ea4f 2825 	mov.w	r8, r5, asr #8
 801bf5a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801bf5c:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801bf60:	fb08 e801 	mla	r8, r8, r1, lr
 801bf64:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801bf68:	990e      	ldr	r1, [sp, #56]	; 0x38
 801bf6a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801bf6e:	fb19 f901 	smulbb	r9, r9, r1
 801bf72:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801bf76:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801bf78:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801bf7c:	fb0e 9e01 	mla	lr, lr, r1, r9
 801bf80:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801bf84:	990e      	ldr	r1, [sp, #56]	; 0x38
 801bf86:	fa5f fc8c 	uxtb.w	ip, ip
 801bf8a:	fb1c fc01 	smulbb	ip, ip, r1
 801bf8e:	00ed      	lsls	r5, r5, #3
 801bf90:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801bf92:	b2ed      	uxtb	r5, r5
 801bf94:	fb05 c501 	mla	r5, r5, r1, ip
 801bf98:	fa1f f888 	uxth.w	r8, r8
 801bf9c:	fa1f fe8e 	uxth.w	lr, lr
 801bfa0:	b2ad      	uxth	r5, r5
 801bfa2:	f108 0c01 	add.w	ip, r8, #1
 801bfa6:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801bfaa:	f10e 0901 	add.w	r9, lr, #1
 801bfae:	f105 0c01 	add.w	ip, r5, #1
 801bfb2:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801bfb6:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801bfba:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801bfbe:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801bfc2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801bfc6:	ea4c 0808 	orr.w	r8, ip, r8
 801bfca:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801bfcc:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801bfd0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801bfd4:	ea48 0809 	orr.w	r8, r8, r9
 801bfd8:	f821 8b02 	strh.w	r8, [r1], #2
 801bfdc:	910b      	str	r1, [sp, #44]	; 0x2c
 801bfde:	e7a5      	b.n	801bf2c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801bfe0:	f10c 0801 	add.w	r8, ip, #1
 801bfe4:	44a4      	add	ip, r4
 801bfe6:	9911      	ldr	r1, [sp, #68]	; 0x44
 801bfe8:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801bfec:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801bff0:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801bff4:	fa1f fc88 	uxth.w	ip, r8
 801bff8:	e763      	b.n	801bec2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801bffa:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801bffe:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801c002:	1aad      	subs	r5, r5, r2
 801c004:	b2ad      	uxth	r5, r5
 801c006:	2d00      	cmp	r5, #0
 801c008:	bf18      	it	ne
 801c00a:	2200      	movne	r2, #0
 801c00c:	9201      	str	r2, [sp, #4]
 801c00e:	e744      	b.n	801be9a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801c010:	4b03      	ldr	r3, [pc, #12]	; (801c020 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801c012:	6818      	ldr	r0, [r3, #0]
 801c014:	6803      	ldr	r3, [r0, #0]
 801c016:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c018:	4798      	blx	r3
 801c01a:	b01f      	add	sp, #124	; 0x7c
 801c01c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c020:	20012f24 	.word	0x20012f24

0801c024 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801c024:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c028:	b08f      	sub	sp, #60	; 0x3c
 801c02a:	461c      	mov	r4, r3
 801c02c:	9203      	str	r2, [sp, #12]
 801c02e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c032:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801c034:	9202      	str	r2, [sp, #8]
 801c036:	460f      	mov	r7, r1
 801c038:	2a00      	cmp	r2, #0
 801c03a:	f000 8128 	beq.w	801c28e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801c03e:	6820      	ldr	r0, [r4, #0]
 801c040:	6861      	ldr	r1, [r4, #4]
 801c042:	aa0a      	add	r2, sp, #40	; 0x28
 801c044:	c203      	stmia	r2!, {r0, r1}
 801c046:	6818      	ldr	r0, [r3, #0]
 801c048:	6859      	ldr	r1, [r3, #4]
 801c04a:	aa0c      	add	r2, sp, #48	; 0x30
 801c04c:	c203      	stmia	r2!, {r0, r1}
 801c04e:	a80a      	add	r0, sp, #40	; 0x28
 801c050:	f7f9 f802 	bl	8015058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c054:	4621      	mov	r1, r4
 801c056:	a80c      	add	r0, sp, #48	; 0x30
 801c058:	f7f9 f842 	bl	80150e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c05c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801c060:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801c064:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801c068:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801c06c:	bfde      	ittt	le
 801c06e:	b2b3      	uxthle	r3, r6
 801c070:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801c074:	fb92 f3f3 	sdivle	r3, r2, r3
 801c078:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801c07c:	bfc8      	it	gt
 801c07e:	2301      	movgt	r3, #1
 801c080:	fb92 f1f3 	sdiv	r1, r2, r3
 801c084:	fa1f fc81 	uxth.w	ip, r1
 801c088:	fb0c 2413 	mls	r4, ip, r3, r2
 801c08c:	fb14 f406 	smulbb	r4, r4, r6
 801c090:	441d      	add	r5, r3
 801c092:	4404      	add	r4, r0
 801c094:	4661      	mov	r1, ip
 801c096:	3d01      	subs	r5, #1
 801c098:	b2a4      	uxth	r4, r4
 801c09a:	fb95 f5f3 	sdiv	r5, r5, r3
 801c09e:	b121      	cbz	r1, 801c0aa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801c0a0:	9b03      	ldr	r3, [sp, #12]
 801c0a2:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801c0a6:	ba1b      	rev	r3, r3
 801c0a8:	441f      	add	r7, r3
 801c0aa:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801c0ae:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801c0b2:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801c0b6:	4418      	add	r0, r3
 801c0b8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801c0bc:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801c0c0:	441a      	add	r2, r3
 801c0c2:	4b74      	ldr	r3, [pc, #464]	; (801c294 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801c0c4:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801c0c8:	6818      	ldr	r0, [r3, #0]
 801c0ca:	6803      	ldr	r3, [r0, #0]
 801c0cc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c0ce:	4798      	blx	r3
 801c0d0:	4a71      	ldr	r2, [pc, #452]	; (801c298 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801c0d2:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801c0d6:	8813      	ldrh	r3, [r2, #0]
 801c0d8:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801c0dc:	9209      	str	r2, [sp, #36]	; 0x24
 801c0de:	fb03 c101 	mla	r1, r3, r1, ip
 801c0e2:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801c0e6:	4373      	muls	r3, r6
 801c0e8:	b2ad      	uxth	r5, r5
 801c0ea:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c0ee:	00ad      	lsls	r5, r5, #2
 801c0f0:	2c00      	cmp	r4, #0
 801c0f2:	9304      	str	r3, [sp, #16]
 801c0f4:	f105 0304 	add.w	r3, r5, #4
 801c0f8:	9305      	str	r3, [sp, #20]
 801c0fa:	bf0c      	ite	eq
 801c0fc:	46c8      	moveq	r8, r9
 801c0fe:	f04f 0800 	movne.w	r8, #0
 801c102:	2300      	movs	r3, #0
 801c104:	fa1f f888 	uxth.w	r8, r8
 801c108:	9301      	str	r3, [sp, #4]
 801c10a:	9a04      	ldr	r2, [sp, #16]
 801c10c:	4282      	cmp	r2, r0
 801c10e:	f240 80b9 	bls.w	801c284 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801c112:	b95b      	cbnz	r3, 801c12c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801c114:	783a      	ldrb	r2, [r7, #0]
 801c116:	0993      	lsrs	r3, r2, #6
 801c118:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801c11c:	9201      	str	r2, [sp, #4]
 801c11e:	1e5a      	subs	r2, r3, #1
 801c120:	2a02      	cmp	r2, #2
 801c122:	bf8d      	iteet	hi
 801c124:	787b      	ldrbhi	r3, [r7, #1]
 801c126:	3701      	addls	r7, #1
 801c128:	b29b      	uxthls	r3, r3
 801c12a:	3702      	addhi	r7, #2
 801c12c:	b184      	cbz	r4, 801c150 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801c12e:	429c      	cmp	r4, r3
 801c130:	bf95      	itete	ls
 801c132:	1b1c      	subls	r4, r3, r4
 801c134:	1ae4      	subhi	r4, r4, r3
 801c136:	fa1f fa84 	uxthls.w	sl, r4
 801c13a:	b2a4      	uxthhi	r4, r4
 801c13c:	bf87      	ittee	hi
 801c13e:	46c4      	movhi	ip, r8
 801c140:	f04f 0a00 	movhi.w	sl, #0
 801c144:	fa1f fc89 	uxthls.w	ip, r9
 801c148:	2400      	movls	r4, #0
 801c14a:	4653      	mov	r3, sl
 801c14c:	46e0      	mov	r8, ip
 801c14e:	e7dc      	b.n	801c10a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801c150:	2204      	movs	r2, #4
 801c152:	4615      	mov	r5, r2
 801c154:	9905      	ldr	r1, [sp, #20]
 801c156:	9a01      	ldr	r2, [sp, #4]
 801c158:	fb15 1202 	smlabb	r2, r5, r2, r1
 801c15c:	9903      	ldr	r1, [sp, #12]
 801c15e:	588a      	ldr	r2, [r1, r2]
 801c160:	4543      	cmp	r3, r8
 801c162:	bf27      	ittee	cs
 801c164:	eba3 0a08 	subcs.w	sl, r3, r8
 801c168:	46c6      	movcs	lr, r8
 801c16a:	eba8 0c03 	subcc.w	ip, r8, r3
 801c16e:	469e      	movcc	lr, r3
 801c170:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801c174:	bf27      	ittee	cs
 801c176:	fa1f fa8a 	uxthcs.w	sl, sl
 801c17a:	46a4      	movcs	ip, r4
 801c17c:	fa1f fc8c 	uxthcc.w	ip, ip
 801c180:	46a2      	movcc	sl, r4
 801c182:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801c186:	2900      	cmp	r1, #0
 801c188:	d066      	beq.n	801c258 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801c18a:	29ff      	cmp	r1, #255	; 0xff
 801c18c:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801c190:	d114      	bne.n	801c1bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801c192:	9d02      	ldr	r5, [sp, #8]
 801c194:	2dff      	cmp	r5, #255	; 0xff
 801c196:	d111      	bne.n	801c1bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801c198:	0951      	lsrs	r1, r2, #5
 801c19a:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801c19e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c1a2:	f026 0607 	bic.w	r6, r6, #7
 801c1a6:	430e      	orrs	r6, r1
 801c1a8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c1ac:	4316      	orrs	r6, r2
 801c1ae:	b2b6      	uxth	r6, r6
 801c1b0:	4486      	add	lr, r0
 801c1b2:	4586      	cmp	lr, r0
 801c1b4:	d051      	beq.n	801c25a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801c1b6:	f820 6b02 	strh.w	r6, [r0], #2
 801c1ba:	e7fa      	b.n	801c1b2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801c1bc:	9d02      	ldr	r5, [sp, #8]
 801c1be:	4369      	muls	r1, r5
 801c1c0:	1c4d      	adds	r5, r1, #1
 801c1c2:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801c1c6:	122d      	asrs	r5, r5, #8
 801c1c8:	ea6f 0b05 	mvn.w	fp, r5
 801c1cc:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801c1d0:	b2ad      	uxth	r5, r5
 801c1d2:	b2f6      	uxtb	r6, r6
 801c1d4:	b2d2      	uxtb	r2, r2
 801c1d6:	fb11 f105 	smulbb	r1, r1, r5
 801c1da:	fb16 f605 	smulbb	r6, r6, r5
 801c1de:	fb12 f205 	smulbb	r2, r2, r5
 801c1e2:	b289      	uxth	r1, r1
 801c1e4:	b2b6      	uxth	r6, r6
 801c1e6:	b292      	uxth	r2, r2
 801c1e8:	9106      	str	r1, [sp, #24]
 801c1ea:	9607      	str	r6, [sp, #28]
 801c1ec:	9208      	str	r2, [sp, #32]
 801c1ee:	4486      	add	lr, r0
 801c1f0:	fa5f fb8b 	uxtb.w	fp, fp
 801c1f4:	4586      	cmp	lr, r0
 801c1f6:	d030      	beq.n	801c25a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801c1f8:	8802      	ldrh	r2, [r0, #0]
 801c1fa:	9906      	ldr	r1, [sp, #24]
 801c1fc:	1216      	asrs	r6, r2, #8
 801c1fe:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c202:	10d5      	asrs	r5, r2, #3
 801c204:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801c208:	fb06 160b 	mla	r6, r6, fp, r1
 801c20c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c210:	9907      	ldr	r1, [sp, #28]
 801c212:	00d2      	lsls	r2, r2, #3
 801c214:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801c218:	fb05 150b 	mla	r5, r5, fp, r1
 801c21c:	b2d2      	uxtb	r2, r2
 801c21e:	9908      	ldr	r1, [sp, #32]
 801c220:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c224:	b2b6      	uxth	r6, r6
 801c226:	fb02 120b 	mla	r2, r2, fp, r1
 801c22a:	b292      	uxth	r2, r2
 801c22c:	1c71      	adds	r1, r6, #1
 801c22e:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801c232:	1c51      	adds	r1, r2, #1
 801c234:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801c238:	b2ad      	uxth	r5, r5
 801c23a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c23e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801c242:	4316      	orrs	r6, r2
 801c244:	1c6a      	adds	r2, r5, #1
 801c246:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801c24a:	096d      	lsrs	r5, r5, #5
 801c24c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c250:	432e      	orrs	r6, r5
 801c252:	f820 6b02 	strh.w	r6, [r0], #2
 801c256:	e7cd      	b.n	801c1f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801c258:	4470      	add	r0, lr
 801c25a:	4543      	cmp	r3, r8
 801c25c:	f4ff af75 	bcc.w	801c14a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801c260:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801c264:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c266:	fa1f fc89 	uxth.w	ip, r9
 801c26a:	eba4 040c 	sub.w	r4, r4, ip
 801c26e:	881b      	ldrh	r3, [r3, #0]
 801c270:	b2a4      	uxth	r4, r4
 801c272:	2c00      	cmp	r4, #0
 801c274:	eba3 0309 	sub.w	r3, r3, r9
 801c278:	bf18      	it	ne
 801c27a:	f04f 0c00 	movne.w	ip, #0
 801c27e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c282:	e762      	b.n	801c14a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801c284:	4b03      	ldr	r3, [pc, #12]	; (801c294 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801c286:	6818      	ldr	r0, [r3, #0]
 801c288:	6803      	ldr	r3, [r0, #0]
 801c28a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c28c:	4798      	blx	r3
 801c28e:	b00f      	add	sp, #60	; 0x3c
 801c290:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c294:	20012f24 	.word	0x20012f24
 801c298:	20012f1e 	.word	0x20012f1e

0801c29c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801c29c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c2a0:	b093      	sub	sp, #76	; 0x4c
 801c2a2:	461c      	mov	r4, r3
 801c2a4:	9205      	str	r2, [sp, #20]
 801c2a6:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801c2aa:	9101      	str	r1, [sp, #4]
 801c2ac:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801c2ae:	9202      	str	r2, [sp, #8]
 801c2b0:	2a00      	cmp	r2, #0
 801c2b2:	f000 812c 	beq.w	801c50e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801c2b6:	6820      	ldr	r0, [r4, #0]
 801c2b8:	6861      	ldr	r1, [r4, #4]
 801c2ba:	aa0e      	add	r2, sp, #56	; 0x38
 801c2bc:	c203      	stmia	r2!, {r0, r1}
 801c2be:	6818      	ldr	r0, [r3, #0]
 801c2c0:	6859      	ldr	r1, [r3, #4]
 801c2c2:	aa10      	add	r2, sp, #64	; 0x40
 801c2c4:	c203      	stmia	r2!, {r0, r1}
 801c2c6:	a80e      	add	r0, sp, #56	; 0x38
 801c2c8:	f7f8 fec6 	bl	8015058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c2cc:	4621      	mov	r1, r4
 801c2ce:	a810      	add	r0, sp, #64	; 0x40
 801c2d0:	f7f8 ff06 	bl	80150e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c2d4:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801c2d8:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801c2dc:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801c2e0:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801c2e4:	bfde      	ittt	le
 801c2e6:	b2b3      	uxthle	r3, r6
 801c2e8:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801c2ec:	fb92 f3f3 	sdivle	r3, r2, r3
 801c2f0:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801c2f4:	bfc8      	it	gt
 801c2f6:	2301      	movgt	r3, #1
 801c2f8:	fb92 f1f3 	sdiv	r1, r2, r3
 801c2fc:	fa1f fc81 	uxth.w	ip, r1
 801c300:	fb0c 2413 	mls	r4, ip, r3, r2
 801c304:	fb14 f406 	smulbb	r4, r4, r6
 801c308:	441d      	add	r5, r3
 801c30a:	4404      	add	r4, r0
 801c30c:	4661      	mov	r1, ip
 801c30e:	3d01      	subs	r5, #1
 801c310:	b2a4      	uxth	r4, r4
 801c312:	fb95 f5f3 	sdiv	r5, r5, r3
 801c316:	b131      	cbz	r1, 801c326 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801c318:	9b05      	ldr	r3, [sp, #20]
 801c31a:	9901      	ldr	r1, [sp, #4]
 801c31c:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801c320:	ba1b      	rev	r3, r3
 801c322:	4419      	add	r1, r3
 801c324:	9101      	str	r1, [sp, #4]
 801c326:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801c32a:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801c32e:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801c332:	4418      	add	r0, r3
 801c334:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801c338:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801c33c:	441a      	add	r2, r3
 801c33e:	4b75      	ldr	r3, [pc, #468]	; (801c514 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801c340:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801c344:	6818      	ldr	r0, [r3, #0]
 801c346:	6803      	ldr	r3, [r0, #0]
 801c348:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c34a:	4798      	blx	r3
 801c34c:	4972      	ldr	r1, [pc, #456]	; (801c518 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801c34e:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801c352:	880b      	ldrh	r3, [r1, #0]
 801c354:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801c358:	910d      	str	r1, [sp, #52]	; 0x34
 801c35a:	fb03 c202 	mla	r2, r3, r2, ip
 801c35e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c362:	4373      	muls	r3, r6
 801c364:	b2ad      	uxth	r5, r5
 801c366:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c36a:	00ad      	lsls	r5, r5, #2
 801c36c:	9308      	str	r3, [sp, #32]
 801c36e:	1d2b      	adds	r3, r5, #4
 801c370:	9309      	str	r3, [sp, #36]	; 0x24
 801c372:	9b02      	ldr	r3, [sp, #8]
 801c374:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801c378:	9106      	str	r1, [sp, #24]
 801c37a:	43da      	mvns	r2, r3
 801c37c:	2c00      	cmp	r4, #0
 801c37e:	bf0c      	ite	eq
 801c380:	46dc      	moveq	ip, fp
 801c382:	f04f 0c00 	movne.w	ip, #0
 801c386:	2300      	movs	r3, #0
 801c388:	b2d2      	uxtb	r2, r2
 801c38a:	fa1f fc8c 	uxth.w	ip, ip
 801c38e:	9303      	str	r3, [sp, #12]
 801c390:	9207      	str	r2, [sp, #28]
 801c392:	9a08      	ldr	r2, [sp, #32]
 801c394:	4282      	cmp	r2, r0
 801c396:	f240 80b5 	bls.w	801c504 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801c39a:	b963      	cbnz	r3, 801c3b6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801c39c:	9b01      	ldr	r3, [sp, #4]
 801c39e:	781a      	ldrb	r2, [r3, #0]
 801c3a0:	0993      	lsrs	r3, r2, #6
 801c3a2:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801c3a6:	9203      	str	r2, [sp, #12]
 801c3a8:	1e5a      	subs	r2, r3, #1
 801c3aa:	2a02      	cmp	r2, #2
 801c3ac:	d815      	bhi.n	801c3da <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801c3ae:	9a01      	ldr	r2, [sp, #4]
 801c3b0:	3201      	adds	r2, #1
 801c3b2:	9201      	str	r2, [sp, #4]
 801c3b4:	b29b      	uxth	r3, r3
 801c3b6:	b1b4      	cbz	r4, 801c3e6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801c3b8:	429c      	cmp	r4, r3
 801c3ba:	bf95      	itete	ls
 801c3bc:	1b1c      	subls	r4, r3, r4
 801c3be:	1ae4      	subhi	r4, r4, r3
 801c3c0:	fa1f f884 	uxthls.w	r8, r4
 801c3c4:	b2a4      	uxthhi	r4, r4
 801c3c6:	bf87      	ittee	hi
 801c3c8:	4666      	movhi	r6, ip
 801c3ca:	f04f 0800 	movhi.w	r8, #0
 801c3ce:	fa1f f68b 	uxthls.w	r6, fp
 801c3d2:	2400      	movls	r4, #0
 801c3d4:	4643      	mov	r3, r8
 801c3d6:	46b4      	mov	ip, r6
 801c3d8:	e7db      	b.n	801c392 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801c3da:	9a01      	ldr	r2, [sp, #4]
 801c3dc:	9b01      	ldr	r3, [sp, #4]
 801c3de:	3202      	adds	r2, #2
 801c3e0:	785b      	ldrb	r3, [r3, #1]
 801c3e2:	9201      	str	r2, [sp, #4]
 801c3e4:	e7e7      	b.n	801c3b6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801c3e6:	2203      	movs	r2, #3
 801c3e8:	4615      	mov	r5, r2
 801c3ea:	9909      	ldr	r1, [sp, #36]	; 0x24
 801c3ec:	9a03      	ldr	r2, [sp, #12]
 801c3ee:	fb15 1202 	smlabb	r2, r5, r2, r1
 801c3f2:	9905      	ldr	r1, [sp, #20]
 801c3f4:	4563      	cmp	r3, ip
 801c3f6:	eb01 0502 	add.w	r5, r1, r2
 801c3fa:	9902      	ldr	r1, [sp, #8]
 801c3fc:	bf29      	itett	cs
 801c3fe:	eba3 080c 	subcs.w	r8, r3, ip
 801c402:	ebac 0603 	subcc.w	r6, ip, r3
 801c406:	fa1f f888 	uxthcs.w	r8, r8
 801c40a:	46e1      	movcs	r9, ip
 801c40c:	bf2f      	iteee	cs
 801c40e:	4626      	movcs	r6, r4
 801c410:	b2b6      	uxthcc	r6, r6
 801c412:	4699      	movcc	r9, r3
 801c414:	46a0      	movcc	r8, r4
 801c416:	29ff      	cmp	r1, #255	; 0xff
 801c418:	d04a      	beq.n	801c4b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801c41a:	9f06      	ldr	r7, [sp, #24]
 801c41c:	78a9      	ldrb	r1, [r5, #2]
 801c41e:	9004      	str	r0, [sp, #16]
 801c420:	4379      	muls	r1, r7
 801c422:	910a      	str	r1, [sp, #40]	; 0x28
 801c424:	7869      	ldrb	r1, [r5, #1]
 801c426:	4379      	muls	r1, r7
 801c428:	910b      	str	r1, [sp, #44]	; 0x2c
 801c42a:	9905      	ldr	r1, [sp, #20]
 801c42c:	5c8a      	ldrb	r2, [r1, r2]
 801c42e:	437a      	muls	r2, r7
 801c430:	920c      	str	r2, [sp, #48]	; 0x30
 801c432:	46ca      	mov	sl, r9
 801c434:	f1ba 0f00 	cmp.w	sl, #0
 801c438:	d03d      	beq.n	801c4b6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801c43a:	9a04      	ldr	r2, [sp, #16]
 801c43c:	9f07      	ldr	r7, [sp, #28]
 801c43e:	8812      	ldrh	r2, [r2, #0]
 801c440:	1215      	asrs	r5, r2, #8
 801c442:	46be      	mov	lr, r7
 801c444:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c448:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801c44a:	10d1      	asrs	r1, r2, #3
 801c44c:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801c450:	fb05 750e 	mla	r5, r5, lr, r7
 801c454:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c458:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801c45a:	00d2      	lsls	r2, r2, #3
 801c45c:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801c460:	fb01 710e 	mla	r1, r1, lr, r7
 801c464:	b2d2      	uxtb	r2, r2
 801c466:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801c468:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c46c:	b2ad      	uxth	r5, r5
 801c46e:	fb02 720e 	mla	r2, r2, lr, r7
 801c472:	b292      	uxth	r2, r2
 801c474:	f105 0e01 	add.w	lr, r5, #1
 801c478:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801c47c:	f102 0e01 	add.w	lr, r2, #1
 801c480:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801c484:	b289      	uxth	r1, r1
 801c486:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c48a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c48e:	4315      	orrs	r5, r2
 801c490:	1c4a      	adds	r2, r1, #1
 801c492:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c496:	0949      	lsrs	r1, r1, #5
 801c498:	9a04      	ldr	r2, [sp, #16]
 801c49a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c49e:	430d      	orrs	r5, r1
 801c4a0:	f822 5b02 	strh.w	r5, [r2], #2
 801c4a4:	f10a 3aff 	add.w	sl, sl, #4294967295
 801c4a8:	9204      	str	r2, [sp, #16]
 801c4aa:	fa1f fa8a 	uxth.w	sl, sl
 801c4ae:	e7c1      	b.n	801c434 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801c4b0:	4649      	mov	r1, r9
 801c4b2:	4686      	mov	lr, r0
 801c4b4:	b999      	cbnz	r1, 801c4de <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801c4b6:	4563      	cmp	r3, ip
 801c4b8:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801c4bc:	d38a      	bcc.n	801c3d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801c4be:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801c4c2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c4c4:	fa1f f68b 	uxth.w	r6, fp
 801c4c8:	1ba4      	subs	r4, r4, r6
 801c4ca:	881b      	ldrh	r3, [r3, #0]
 801c4cc:	b2a4      	uxth	r4, r4
 801c4ce:	2c00      	cmp	r4, #0
 801c4d0:	eba3 030b 	sub.w	r3, r3, fp
 801c4d4:	bf18      	it	ne
 801c4d6:	2600      	movne	r6, #0
 801c4d8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c4dc:	e77a      	b.n	801c3d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801c4de:	78aa      	ldrb	r2, [r5, #2]
 801c4e0:	4f0e      	ldr	r7, [pc, #56]	; (801c51c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801c4e2:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801c4e6:	786a      	ldrb	r2, [r5, #1]
 801c4e8:	00d2      	lsls	r2, r2, #3
 801c4ea:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c4ee:	ea4a 0202 	orr.w	r2, sl, r2
 801c4f2:	f895 a000 	ldrb.w	sl, [r5]
 801c4f6:	3901      	subs	r1, #1
 801c4f8:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801c4fc:	f82e 2b02 	strh.w	r2, [lr], #2
 801c500:	b289      	uxth	r1, r1
 801c502:	e7d7      	b.n	801c4b4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801c504:	4b03      	ldr	r3, [pc, #12]	; (801c514 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801c506:	6818      	ldr	r0, [r3, #0]
 801c508:	6803      	ldr	r3, [r0, #0]
 801c50a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c50c:	4798      	blx	r3
 801c50e:	b013      	add	sp, #76	; 0x4c
 801c510:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c514:	20012f24 	.word	0x20012f24
 801c518:	20012f1e 	.word	0x20012f1e
 801c51c:	fffff800 	.word	0xfffff800

0801c520 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801c520:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c524:	b09d      	sub	sp, #116	; 0x74
 801c526:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801c52a:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801c52e:	920e      	str	r2, [sp, #56]	; 0x38
 801c530:	461c      	mov	r4, r3
 801c532:	4683      	mov	fp, r0
 801c534:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801c536:	2a00      	cmp	r2, #0
 801c538:	f000 81e0 	beq.w	801c8fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801c53c:	6820      	ldr	r0, [r4, #0]
 801c53e:	6861      	ldr	r1, [r4, #4]
 801c540:	aa18      	add	r2, sp, #96	; 0x60
 801c542:	c203      	stmia	r2!, {r0, r1}
 801c544:	6818      	ldr	r0, [r3, #0]
 801c546:	6859      	ldr	r1, [r3, #4]
 801c548:	aa1a      	add	r2, sp, #104	; 0x68
 801c54a:	c203      	stmia	r2!, {r0, r1}
 801c54c:	a818      	add	r0, sp, #96	; 0x60
 801c54e:	f7f8 fd83 	bl	8015058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c552:	4621      	mov	r1, r4
 801c554:	a81a      	add	r0, sp, #104	; 0x68
 801c556:	f7f8 fdc3 	bl	80150e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c55a:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801c55e:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801c562:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801c566:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801c56a:	bfd7      	itett	le
 801c56c:	b29a      	uxthle	r2, r3
 801c56e:	2201      	movgt	r2, #1
 801c570:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801c574:	fb91 f2f2 	sdivle	r2, r1, r2
 801c578:	9202      	str	r2, [sp, #8]
 801c57a:	9802      	ldr	r0, [sp, #8]
 801c57c:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801c580:	fb92 f0f0 	sdiv	r0, r2, r0
 801c584:	b280      	uxth	r0, r0
 801c586:	900f      	str	r0, [sp, #60]	; 0x3c
 801c588:	9902      	ldr	r1, [sp, #8]
 801c58a:	9802      	ldr	r0, [sp, #8]
 801c58c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801c58e:	440c      	add	r4, r1
 801c590:	fb05 2510 	mls	r5, r5, r0, r2
 801c594:	fb15 f503 	smulbb	r5, r5, r3
 801c598:	3c01      	subs	r4, #1
 801c59a:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801c59e:	fb94 f4f1 	sdiv	r4, r4, r1
 801c5a2:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801c5a6:	440d      	add	r5, r1
 801c5a8:	4419      	add	r1, r3
 801c5aa:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801c5ae:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801c5b2:	441a      	add	r2, r3
 801c5b4:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801c5b8:	9306      	str	r3, [sp, #24]
 801c5ba:	4bb3      	ldr	r3, [pc, #716]	; (801c888 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801c5bc:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801c5c0:	6818      	ldr	r0, [r3, #0]
 801c5c2:	6803      	ldr	r3, [r0, #0]
 801c5c4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c5c6:	4798      	blx	r3
 801c5c8:	4bb0      	ldr	r3, [pc, #704]	; (801c88c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801c5ca:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801c5ce:	881a      	ldrh	r2, [r3, #0]
 801c5d0:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801c5d4:	9316      	str	r3, [sp, #88]	; 0x58
 801c5d6:	fb02 7101 	mla	r1, r2, r1, r7
 801c5da:	3401      	adds	r4, #1
 801c5dc:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801c5e0:	b2a4      	uxth	r4, r4
 801c5e2:	4356      	muls	r6, r2
 801c5e4:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801c5e8:	00a4      	lsls	r4, r4, #2
 801c5ea:	920a      	str	r2, [sp, #40]	; 0x28
 801c5ec:	1d22      	adds	r2, r4, #4
 801c5ee:	b2ad      	uxth	r5, r5
 801c5f0:	9213      	str	r2, [sp, #76]	; 0x4c
 801c5f2:	4ba7      	ldr	r3, [pc, #668]	; (801c890 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801c5f4:	9a06      	ldr	r2, [sp, #24]
 801c5f6:	2d00      	cmp	r5, #0
 801c5f8:	bf0c      	ite	eq
 801c5fa:	4611      	moveq	r1, r2
 801c5fc:	2100      	movne	r1, #0
 801c5fe:	2200      	movs	r2, #0
 801c600:	eba3 030b 	sub.w	r3, r3, fp
 801c604:	b289      	uxth	r1, r1
 801c606:	920d      	str	r2, [sp, #52]	; 0x34
 801c608:	9317      	str	r3, [sp, #92]	; 0x5c
 801c60a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c60c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c60e:	fa12 f383 	uxtah	r3, r2, r3
 801c612:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c614:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801c618:	3304      	adds	r3, #4
 801c61a:	9308      	str	r3, [sp, #32]
 801c61c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c61e:	4543      	cmp	r3, r8
 801c620:	f240 8167 	bls.w	801c8f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801c624:	9a02      	ldr	r2, [sp, #8]
 801c626:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801c62a:	fbb5 f3f3 	udiv	r3, r5, r3
 801c62e:	1ad3      	subs	r3, r2, r3
 801c630:	b29b      	uxth	r3, r3
 801c632:	9314      	str	r3, [sp, #80]	; 0x50
 801c634:	9b08      	ldr	r3, [sp, #32]
 801c636:	9808      	ldr	r0, [sp, #32]
 801c638:	785a      	ldrb	r2, [r3, #1]
 801c63a:	789b      	ldrb	r3, [r3, #2]
 801c63c:	7800      	ldrb	r0, [r0, #0]
 801c63e:	9010      	str	r0, [sp, #64]	; 0x40
 801c640:	021b      	lsls	r3, r3, #8
 801c642:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801c646:	9a08      	ldr	r2, [sp, #32]
 801c648:	78d2      	ldrb	r2, [r2, #3]
 801c64a:	4313      	orrs	r3, r2
 801c64c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c64e:	3001      	adds	r0, #1
 801c650:	441a      	add	r2, r3
 801c652:	9007      	str	r0, [sp, #28]
 801c654:	1c50      	adds	r0, r2, #1
 801c656:	9005      	str	r0, [sp, #20]
 801c658:	7852      	ldrb	r2, [r2, #1]
 801c65a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c65c:	0212      	lsls	r2, r2, #8
 801c65e:	5cc3      	ldrb	r3, [r0, r3]
 801c660:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801c664:	431a      	orrs	r2, r3
 801c666:	b293      	uxth	r3, r2
 801c668:	930b      	str	r3, [sp, #44]	; 0x2c
 801c66a:	2300      	movs	r3, #0
 801c66c:	9309      	str	r3, [sp, #36]	; 0x24
 801c66e:	2301      	movs	r3, #1
 801c670:	9301      	str	r3, [sp, #4]
 801c672:	9304      	str	r3, [sp, #16]
 801c674:	2300      	movs	r3, #0
 801c676:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801c67a:	9303      	str	r3, [sp, #12]
 801c67c:	f04f 0e01 	mov.w	lr, #1
 801c680:	2d00      	cmp	r5, #0
 801c682:	d07c      	beq.n	801c77e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801c684:	45ae      	cmp	lr, r5
 801c686:	d26b      	bcs.n	801c760 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801c688:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c68a:	eba5 050e 	sub.w	r5, r5, lr
 801c68e:	4543      	cmp	r3, r8
 801c690:	b2ad      	uxth	r5, r5
 801c692:	460c      	mov	r4, r1
 801c694:	d802      	bhi.n	801c69c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801c696:	e070      	b.n	801c77a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801c698:	2b00      	cmp	r3, #0
 801c69a:	d15c      	bne.n	801c756 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801c69c:	9b05      	ldr	r3, [sp, #20]
 801c69e:	9a04      	ldr	r2, [sp, #16]
 801c6a0:	785b      	ldrb	r3, [r3, #1]
 801c6a2:	9904      	ldr	r1, [sp, #16]
 801c6a4:	f1c2 0207 	rsb	r2, r2, #7
 801c6a8:	4093      	lsls	r3, r2
 801c6aa:	005b      	lsls	r3, r3, #1
 801c6ac:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801c6b0:	9b05      	ldr	r3, [sp, #20]
 801c6b2:	781b      	ldrb	r3, [r3, #0]
 801c6b4:	410b      	asrs	r3, r1
 801c6b6:	3101      	adds	r1, #1
 801c6b8:	b2c9      	uxtb	r1, r1
 801c6ba:	2908      	cmp	r1, #8
 801c6bc:	9104      	str	r1, [sp, #16]
 801c6be:	9905      	ldr	r1, [sp, #20]
 801c6c0:	bf0a      	itet	eq
 801c6c2:	3102      	addeq	r1, #2
 801c6c4:	3101      	addne	r1, #1
 801c6c6:	9105      	streq	r1, [sp, #20]
 801c6c8:	b2db      	uxtb	r3, r3
 801c6ca:	bf0a      	itet	eq
 801c6cc:	2100      	moveq	r1, #0
 801c6ce:	9105      	strne	r1, [sp, #20]
 801c6d0:	9104      	streq	r1, [sp, #16]
 801c6d2:	4313      	orrs	r3, r2
 801c6d4:	9910      	ldr	r1, [sp, #64]	; 0x40
 801c6d6:	b29a      	uxth	r2, r3
 801c6d8:	4291      	cmp	r1, r2
 801c6da:	d30a      	bcc.n	801c6f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801c6dc:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801c6e0:	2301      	movs	r3, #1
 801c6e2:	9907      	ldr	r1, [sp, #28]
 801c6e4:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801c6e8:	d30f      	bcc.n	801c70a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801c6ea:	2100      	movs	r1, #0
 801c6ec:	9301      	str	r3, [sp, #4]
 801c6ee:	9103      	str	r1, [sp, #12]
 801c6f0:	e032      	b.n	801c758 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801c6f2:	9b07      	ldr	r3, [sp, #28]
 801c6f4:	429a      	cmp	r2, r3
 801c6f6:	d318      	bcc.n	801c72a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801c6f8:	9b01      	ldr	r3, [sp, #4]
 801c6fa:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801c6fe:	445b      	add	r3, fp
 801c700:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801c704:	9b01      	ldr	r3, [sp, #4]
 801c706:	3301      	adds	r3, #1
 801c708:	b29b      	uxth	r3, r3
 801c70a:	9907      	ldr	r1, [sp, #28]
 801c70c:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801c710:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801c714:	7108      	strb	r0, [r1, #4]
 801c716:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801c718:	80c8      	strh	r0, [r1, #6]
 801c71a:	9801      	ldr	r0, [sp, #4]
 801c71c:	3001      	adds	r0, #1
 801c71e:	7148      	strb	r0, [r1, #5]
 801c720:	9907      	ldr	r1, [sp, #28]
 801c722:	3101      	adds	r1, #1
 801c724:	b289      	uxth	r1, r1
 801c726:	9107      	str	r1, [sp, #28]
 801c728:	e7df      	b.n	801c6ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801c72a:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801c72e:	4611      	mov	r1, r2
 801c730:	795b      	ldrb	r3, [r3, #5]
 801c732:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801c736:	4458      	add	r0, fp
 801c738:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801c73a:	4406      	add	r6, r0
 801c73c:	2e00      	cmp	r6, #0
 801c73e:	dd06      	ble.n	801c74e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801c740:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801c744:	790e      	ldrb	r6, [r1, #4]
 801c746:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801c74a:	88c9      	ldrh	r1, [r1, #6]
 801c74c:	e7f4      	b.n	801c738 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801c74e:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801c752:	b29b      	uxth	r3, r3
 801c754:	e7c5      	b.n	801c6e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801c756:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801c758:	920b      	str	r2, [sp, #44]	; 0x2c
 801c75a:	4621      	mov	r1, r4
 801c75c:	469e      	mov	lr, r3
 801c75e:	e78f      	b.n	801c680 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801c760:	9a03      	ldr	r2, [sp, #12]
 801c762:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801c766:	442a      	add	r2, r5
 801c768:	ebae 0305 	sub.w	r3, lr, r5
 801c76c:	b292      	uxth	r2, r2
 801c76e:	b29b      	uxth	r3, r3
 801c770:	9203      	str	r2, [sp, #12]
 801c772:	2500      	movs	r5, #0
 801c774:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c776:	4542      	cmp	r2, r8
 801c778:	d88e      	bhi.n	801c698 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801c77a:	4621      	mov	r1, r4
 801c77c:	e74e      	b.n	801c61c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801c77e:	458e      	cmp	lr, r1
 801c780:	bf29      	itett	cs
 801c782:	ebae 0301 	subcs.w	r3, lr, r1
 801c786:	eba1 040e 	subcc.w	r4, r1, lr
 801c78a:	b29b      	uxthcs	r3, r3
 801c78c:	910c      	strcs	r1, [sp, #48]	; 0x30
 801c78e:	bf2f      	iteee	cs
 801c790:	462c      	movcs	r4, r5
 801c792:	b2a4      	uxthcc	r4, r4
 801c794:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801c798:	462b      	movcc	r3, r5
 801c79a:	f04f 0900 	mov.w	r9, #0
 801c79e:	9a03      	ldr	r2, [sp, #12]
 801c7a0:	980c      	ldr	r0, [sp, #48]	; 0x30
 801c7a2:	444a      	add	r2, r9
 801c7a4:	4548      	cmp	r0, r9
 801c7a6:	b292      	uxth	r2, r2
 801c7a8:	d074      	beq.n	801c894 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801c7aa:	445a      	add	r2, fp
 801c7ac:	2004      	movs	r0, #4
 801c7ae:	4605      	mov	r5, r0
 801c7b0:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801c7b4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c7b6:	fb15 0202 	smlabb	r2, r5, r2, r0
 801c7ba:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c7bc:	5880      	ldr	r0, [r0, r2]
 801c7be:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801c7c2:	d014      	beq.n	801c7ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801c7c4:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801c7c8:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801c7cc:	d112      	bne.n	801c7f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801c7ce:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801c7d0:	2aff      	cmp	r2, #255	; 0xff
 801c7d2:	d10f      	bne.n	801c7f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801c7d4:	0942      	lsrs	r2, r0, #5
 801c7d6:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801c7da:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c7de:	f025 0507 	bic.w	r5, r5, #7
 801c7e2:	4315      	orrs	r5, r2
 801c7e4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801c7e8:	4305      	orrs	r5, r0
 801c7ea:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801c7ee:	f109 0901 	add.w	r9, r9, #1
 801c7f2:	e7d4      	b.n	801c79e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801c7f4:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801c7f8:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801c7fc:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801c800:	9215      	str	r2, [sp, #84]	; 0x54
 801c802:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801c804:	fb02 fa0a 	mul.w	sl, r2, sl
 801c808:	f10a 0201 	add.w	r2, sl, #1
 801c80c:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801c810:	ea4f 272c 	mov.w	r7, ip, asr #8
 801c814:	1212      	asrs	r2, r2, #8
 801c816:	fa1f fa82 	uxth.w	sl, r2
 801c81a:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801c81e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c822:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c826:	43d2      	mvns	r2, r2
 801c828:	b2d2      	uxtb	r2, r2
 801c82a:	fb16 f60a 	smulbb	r6, r6, sl
 801c82e:	fa5f fc8c 	uxtb.w	ip, ip
 801c832:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801c836:	b2c0      	uxtb	r0, r0
 801c838:	fb07 6702 	mla	r7, r7, r2, r6
 801c83c:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801c840:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801c842:	fb10 f00a 	smulbb	r0, r0, sl
 801c846:	fb0c 0002 	mla	r0, ip, r2, r0
 801c84a:	b2ed      	uxtb	r5, r5
 801c84c:	b2bf      	uxth	r7, r7
 801c84e:	fb15 f50a 	smulbb	r5, r5, sl
 801c852:	b280      	uxth	r0, r0
 801c854:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801c858:	fb06 5602 	mla	r6, r6, r2, r5
 801c85c:	1c7a      	adds	r2, r7, #1
 801c85e:	1c45      	adds	r5, r0, #1
 801c860:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801c864:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801c868:	b2b6      	uxth	r6, r6
 801c86a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c86e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801c872:	432f      	orrs	r7, r5
 801c874:	1c75      	adds	r5, r6, #1
 801c876:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801c87a:	096d      	lsrs	r5, r5, #5
 801c87c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c880:	432f      	orrs	r7, r5
 801c882:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801c886:	e7b2      	b.n	801c7ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801c888:	20012f24 	.word	0x20012f24
 801c88c:	20012f1e 	.word	0x20012f1e
 801c890:	fffff7fb 	.word	0xfffff7fb
 801c894:	9203      	str	r2, [sp, #12]
 801c896:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c898:	458e      	cmp	lr, r1
 801c89a:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801c89e:	f4ff af68 	bcc.w	801c772 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801c8a2:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801c8a4:	9906      	ldr	r1, [sp, #24]
 801c8a6:	8812      	ldrh	r2, [r2, #0]
 801c8a8:	1a52      	subs	r2, r2, r1
 801c8aa:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801c8ae:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c8b0:	9914      	ldr	r1, [sp, #80]	; 0x50
 801c8b2:	3201      	adds	r2, #1
 801c8b4:	428a      	cmp	r2, r1
 801c8b6:	9209      	str	r2, [sp, #36]	; 0x24
 801c8b8:	d111      	bne.n	801c8de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801c8ba:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801c8be:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801c8c2:	9b06      	ldr	r3, [sp, #24]
 801c8c4:	eba5 0509 	sub.w	r5, r5, r9
 801c8c8:	b2ad      	uxth	r5, r5
 801c8ca:	2d00      	cmp	r5, #0
 801c8cc:	bf08      	it	eq
 801c8ce:	4619      	moveq	r1, r3
 801c8d0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c8d2:	bf18      	it	ne
 801c8d4:	2100      	movne	r1, #0
 801c8d6:	3301      	adds	r3, #1
 801c8d8:	930d      	str	r3, [sp, #52]	; 0x34
 801c8da:	b289      	uxth	r1, r1
 801c8dc:	e695      	b.n	801c60a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801c8de:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801c8e2:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801c8e6:	1b2d      	subs	r5, r5, r4
 801c8e8:	b2ad      	uxth	r5, r5
 801c8ea:	2d00      	cmp	r5, #0
 801c8ec:	bf18      	it	ne
 801c8ee:	2400      	movne	r4, #0
 801c8f0:	e740      	b.n	801c774 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801c8f2:	4b04      	ldr	r3, [pc, #16]	; (801c904 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801c8f4:	6818      	ldr	r0, [r3, #0]
 801c8f6:	6803      	ldr	r3, [r0, #0]
 801c8f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c8fa:	4798      	blx	r3
 801c8fc:	b01d      	add	sp, #116	; 0x74
 801c8fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c902:	bf00      	nop
 801c904:	20012f24 	.word	0x20012f24

0801c908 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801c908:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c90c:	b09f      	sub	sp, #124	; 0x7c
 801c90e:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801c912:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801c916:	920a      	str	r2, [sp, #40]	; 0x28
 801c918:	461d      	mov	r5, r3
 801c91a:	4604      	mov	r4, r0
 801c91c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c91e:	2a00      	cmp	r2, #0
 801c920:	f000 81fa 	beq.w	801cd18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801c924:	6828      	ldr	r0, [r5, #0]
 801c926:	6869      	ldr	r1, [r5, #4]
 801c928:	aa1a      	add	r2, sp, #104	; 0x68
 801c92a:	c203      	stmia	r2!, {r0, r1}
 801c92c:	6818      	ldr	r0, [r3, #0]
 801c92e:	6859      	ldr	r1, [r3, #4]
 801c930:	aa1c      	add	r2, sp, #112	; 0x70
 801c932:	c203      	stmia	r2!, {r0, r1}
 801c934:	a81a      	add	r0, sp, #104	; 0x68
 801c936:	f7f8 fb8f 	bl	8015058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c93a:	4629      	mov	r1, r5
 801c93c:	a81c      	add	r0, sp, #112	; 0x70
 801c93e:	f7f8 fbcf 	bl	80150e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c942:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801c946:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801c94a:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801c94e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801c952:	bfd7      	itett	le
 801c954:	b29a      	uxthle	r2, r3
 801c956:	2201      	movgt	r2, #1
 801c958:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801c95c:	fb91 f2f2 	sdivle	r2, r1, r2
 801c960:	9201      	str	r2, [sp, #4]
 801c962:	9801      	ldr	r0, [sp, #4]
 801c964:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801c968:	fb92 f0f0 	sdiv	r0, r2, r0
 801c96c:	b280      	uxth	r0, r0
 801c96e:	9010      	str	r0, [sp, #64]	; 0x40
 801c970:	9901      	ldr	r1, [sp, #4]
 801c972:	9801      	ldr	r0, [sp, #4]
 801c974:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801c976:	440e      	add	r6, r1
 801c978:	fb05 2510 	mls	r5, r5, r0, r2
 801c97c:	fb15 f503 	smulbb	r5, r5, r3
 801c980:	3e01      	subs	r6, #1
 801c982:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801c986:	fb96 f6f1 	sdiv	r6, r6, r1
 801c98a:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801c98e:	440d      	add	r5, r1
 801c990:	4419      	add	r1, r3
 801c992:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801c996:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801c99a:	441a      	add	r2, r3
 801c99c:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801c9a0:	9304      	str	r3, [sp, #16]
 801c9a2:	4b96      	ldr	r3, [pc, #600]	; (801cbfc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801c9a4:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801c9a8:	6818      	ldr	r0, [r3, #0]
 801c9aa:	6803      	ldr	r3, [r0, #0]
 801c9ac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c9ae:	4798      	blx	r3
 801c9b0:	4b93      	ldr	r3, [pc, #588]	; (801cc00 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801c9b2:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801c9b6:	881a      	ldrh	r2, [r3, #0]
 801c9b8:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801c9bc:	9318      	str	r3, [sp, #96]	; 0x60
 801c9be:	fb02 c101 	mla	r1, r2, r1, ip
 801c9c2:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801c9c6:	4357      	muls	r7, r2
 801c9c8:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801c9cc:	3601      	adds	r6, #1
 801c9ce:	920b      	str	r2, [sp, #44]	; 0x2c
 801c9d0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c9d2:	4b8c      	ldr	r3, [pc, #560]	; (801cc04 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801c9d4:	b2b6      	uxth	r6, r6
 801c9d6:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801c9da:	1d32      	adds	r2, r6, #4
 801c9dc:	9206      	str	r2, [sp, #24]
 801c9de:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c9e0:	43d2      	mvns	r2, r2
 801c9e2:	b2d2      	uxtb	r2, r2
 801c9e4:	b2ad      	uxth	r5, r5
 801c9e6:	9215      	str	r2, [sp, #84]	; 0x54
 801c9e8:	9a04      	ldr	r2, [sp, #16]
 801c9ea:	2d00      	cmp	r5, #0
 801c9ec:	bf0c      	ite	eq
 801c9ee:	4611      	moveq	r1, r2
 801c9f0:	2100      	movne	r1, #0
 801c9f2:	2200      	movs	r2, #0
 801c9f4:	1b1b      	subs	r3, r3, r4
 801c9f6:	b289      	uxth	r1, r1
 801c9f8:	920d      	str	r2, [sp, #52]	; 0x34
 801c9fa:	9319      	str	r3, [sp, #100]	; 0x64
 801c9fc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c9fe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ca00:	fa12 f383 	uxtah	r3, r2, r3
 801ca04:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ca06:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801ca0a:	3304      	adds	r3, #4
 801ca0c:	9307      	str	r3, [sp, #28]
 801ca0e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ca10:	455b      	cmp	r3, fp
 801ca12:	f240 817c 	bls.w	801cd0e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801ca16:	9a01      	ldr	r2, [sp, #4]
 801ca18:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801ca1c:	fbb5 f3f3 	udiv	r3, r5, r3
 801ca20:	1ad3      	subs	r3, r2, r3
 801ca22:	b29b      	uxth	r3, r3
 801ca24:	9316      	str	r3, [sp, #88]	; 0x58
 801ca26:	9b07      	ldr	r3, [sp, #28]
 801ca28:	9807      	ldr	r0, [sp, #28]
 801ca2a:	785a      	ldrb	r2, [r3, #1]
 801ca2c:	789b      	ldrb	r3, [r3, #2]
 801ca2e:	7800      	ldrb	r0, [r0, #0]
 801ca30:	9011      	str	r0, [sp, #68]	; 0x44
 801ca32:	021b      	lsls	r3, r3, #8
 801ca34:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801ca38:	9a07      	ldr	r2, [sp, #28]
 801ca3a:	78d2      	ldrb	r2, [r2, #3]
 801ca3c:	4313      	orrs	r3, r2
 801ca3e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ca40:	3001      	adds	r0, #1
 801ca42:	441a      	add	r2, r3
 801ca44:	9005      	str	r0, [sp, #20]
 801ca46:	1c50      	adds	r0, r2, #1
 801ca48:	9003      	str	r0, [sp, #12]
 801ca4a:	7852      	ldrb	r2, [r2, #1]
 801ca4c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ca4e:	0212      	lsls	r2, r2, #8
 801ca50:	5cc3      	ldrb	r3, [r0, r3]
 801ca52:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801ca56:	431a      	orrs	r2, r3
 801ca58:	b293      	uxth	r3, r2
 801ca5a:	930c      	str	r3, [sp, #48]	; 0x30
 801ca5c:	2300      	movs	r3, #0
 801ca5e:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801ca62:	9308      	str	r3, [sp, #32]
 801ca64:	461a      	mov	r2, r3
 801ca66:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801ca6a:	930e      	str	r3, [sp, #56]	; 0x38
 801ca6c:	f04f 0801 	mov.w	r8, #1
 801ca70:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801ca74:	f8cd 8008 	str.w	r8, [sp, #8]
 801ca78:	46c4      	mov	ip, r8
 801ca7a:	930f      	str	r3, [sp, #60]	; 0x3c
 801ca7c:	2d00      	cmp	r5, #0
 801ca7e:	d07c      	beq.n	801cb7a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801ca80:	45ac      	cmp	ip, r5
 801ca82:	d26c      	bcs.n	801cb5e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801ca84:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ca86:	eba5 050c 	sub.w	r5, r5, ip
 801ca8a:	455b      	cmp	r3, fp
 801ca8c:	b2ad      	uxth	r5, r5
 801ca8e:	4608      	mov	r0, r1
 801ca90:	d802      	bhi.n	801ca98 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801ca92:	e070      	b.n	801cb76 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801ca94:	2b00      	cmp	r3, #0
 801ca96:	d15c      	bne.n	801cb52 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801ca98:	9b03      	ldr	r3, [sp, #12]
 801ca9a:	9a02      	ldr	r2, [sp, #8]
 801ca9c:	785b      	ldrb	r3, [r3, #1]
 801ca9e:	9902      	ldr	r1, [sp, #8]
 801caa0:	f1c2 0207 	rsb	r2, r2, #7
 801caa4:	4093      	lsls	r3, r2
 801caa6:	005b      	lsls	r3, r3, #1
 801caa8:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801caac:	9b03      	ldr	r3, [sp, #12]
 801caae:	781b      	ldrb	r3, [r3, #0]
 801cab0:	410b      	asrs	r3, r1
 801cab2:	3101      	adds	r1, #1
 801cab4:	b2c9      	uxtb	r1, r1
 801cab6:	2908      	cmp	r1, #8
 801cab8:	9102      	str	r1, [sp, #8]
 801caba:	9903      	ldr	r1, [sp, #12]
 801cabc:	bf0a      	itet	eq
 801cabe:	3102      	addeq	r1, #2
 801cac0:	3101      	addne	r1, #1
 801cac2:	9103      	streq	r1, [sp, #12]
 801cac4:	b2db      	uxtb	r3, r3
 801cac6:	bf0a      	itet	eq
 801cac8:	2100      	moveq	r1, #0
 801caca:	9103      	strne	r1, [sp, #12]
 801cacc:	9102      	streq	r1, [sp, #8]
 801cace:	4313      	orrs	r3, r2
 801cad0:	9911      	ldr	r1, [sp, #68]	; 0x44
 801cad2:	b29a      	uxth	r2, r3
 801cad4:	4291      	cmp	r1, r2
 801cad6:	d30a      	bcc.n	801caee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801cad8:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801cadc:	2301      	movs	r3, #1
 801cade:	9905      	ldr	r1, [sp, #20]
 801cae0:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801cae4:	d30f      	bcc.n	801cb06 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801cae6:	2100      	movs	r1, #0
 801cae8:	4698      	mov	r8, r3
 801caea:	9100      	str	r1, [sp, #0]
 801caec:	e032      	b.n	801cb54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801caee:	9b05      	ldr	r3, [sp, #20]
 801caf0:	429a      	cmp	r2, r3
 801caf2:	d318      	bcc.n	801cb26 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801caf4:	eb04 0308 	add.w	r3, r4, r8
 801caf8:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801cafc:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801cb00:	f108 0301 	add.w	r3, r8, #1
 801cb04:	b29b      	uxth	r3, r3
 801cb06:	9905      	ldr	r1, [sp, #20]
 801cb08:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801cb0c:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801cb10:	710e      	strb	r6, [r1, #4]
 801cb12:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801cb14:	80ce      	strh	r6, [r1, #6]
 801cb16:	f108 0601 	add.w	r6, r8, #1
 801cb1a:	714e      	strb	r6, [r1, #5]
 801cb1c:	9905      	ldr	r1, [sp, #20]
 801cb1e:	3101      	adds	r1, #1
 801cb20:	b289      	uxth	r1, r1
 801cb22:	9105      	str	r1, [sp, #20]
 801cb24:	e7df      	b.n	801cae6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801cb26:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801cb2a:	4611      	mov	r1, r2
 801cb2c:	795b      	ldrb	r3, [r3, #5]
 801cb2e:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801cb32:	4426      	add	r6, r4
 801cb34:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801cb36:	4437      	add	r7, r6
 801cb38:	2f00      	cmp	r7, #0
 801cb3a:	dd06      	ble.n	801cb4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801cb3c:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801cb40:	790f      	ldrb	r7, [r1, #4]
 801cb42:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801cb46:	88c9      	ldrh	r1, [r1, #6]
 801cb48:	e7f4      	b.n	801cb34 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801cb4a:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801cb4e:	b29b      	uxth	r3, r3
 801cb50:	e7c5      	b.n	801cade <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801cb52:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801cb54:	920c      	str	r2, [sp, #48]	; 0x30
 801cb56:	4601      	mov	r1, r0
 801cb58:	9a00      	ldr	r2, [sp, #0]
 801cb5a:	469c      	mov	ip, r3
 801cb5c:	e78e      	b.n	801ca7c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801cb5e:	1957      	adds	r7, r2, r5
 801cb60:	ebac 0305 	sub.w	r3, ip, r5
 801cb64:	b2ba      	uxth	r2, r7
 801cb66:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801cb6a:	9200      	str	r2, [sp, #0]
 801cb6c:	b29b      	uxth	r3, r3
 801cb6e:	2500      	movs	r5, #0
 801cb70:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801cb72:	455a      	cmp	r2, fp
 801cb74:	d88e      	bhi.n	801ca94 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801cb76:	4601      	mov	r1, r0
 801cb78:	e749      	b.n	801ca0e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801cb7a:	458c      	cmp	ip, r1
 801cb7c:	bf2c      	ite	cs
 801cb7e:	4628      	movcs	r0, r5
 801cb80:	462b      	movcc	r3, r5
 801cb82:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801cb84:	bf27      	ittee	cs
 801cb86:	9109      	strcs	r1, [sp, #36]	; 0x24
 801cb88:	ebac 0301 	subcs.w	r3, ip, r1
 801cb8c:	eba1 000c 	subcc.w	r0, r1, ip
 801cb90:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801cb94:	bf2c      	ite	cs
 801cb96:	b29b      	uxthcs	r3, r3
 801cb98:	b280      	uxthcc	r0, r0
 801cb9a:	2dff      	cmp	r5, #255	; 0xff
 801cb9c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801cb9e:	eb02 0705 	add.w	r7, r2, r5
 801cba2:	b2bd      	uxth	r5, r7
 801cba4:	9500      	str	r5, [sp, #0]
 801cba6:	d12f      	bne.n	801cc08 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801cba8:	465e      	mov	r6, fp
 801cbaa:	9d00      	ldr	r5, [sp, #0]
 801cbac:	42aa      	cmp	r2, r5
 801cbae:	f040 8084 	bne.w	801ccba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801cbb2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801cbb4:	458c      	cmp	ip, r1
 801cbb6:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801cbba:	d3d8      	bcc.n	801cb6e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801cbbc:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801cbbe:	9904      	ldr	r1, [sp, #16]
 801cbc0:	8812      	ldrh	r2, [r2, #0]
 801cbc2:	1a52      	subs	r2, r2, r1
 801cbc4:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801cbc8:	9a08      	ldr	r2, [sp, #32]
 801cbca:	9916      	ldr	r1, [sp, #88]	; 0x58
 801cbcc:	3201      	adds	r2, #1
 801cbce:	428a      	cmp	r2, r1
 801cbd0:	9208      	str	r2, [sp, #32]
 801cbd2:	f040 8092 	bne.w	801ccfa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801cbd6:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801cbda:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801cbde:	9b04      	ldr	r3, [sp, #16]
 801cbe0:	eba5 050c 	sub.w	r5, r5, ip
 801cbe4:	b2ad      	uxth	r5, r5
 801cbe6:	2d00      	cmp	r5, #0
 801cbe8:	bf08      	it	eq
 801cbea:	4619      	moveq	r1, r3
 801cbec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801cbee:	bf18      	it	ne
 801cbf0:	2100      	movne	r1, #0
 801cbf2:	3301      	adds	r3, #1
 801cbf4:	930d      	str	r3, [sp, #52]	; 0x34
 801cbf6:	b289      	uxth	r1, r1
 801cbf8:	e700      	b.n	801c9fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801cbfa:	bf00      	nop
 801cbfc:	20012f24 	.word	0x20012f24
 801cc00:	20012f1e 	.word	0x20012f1e
 801cc04:	fffff7fb 	.word	0xfffff7fb
 801cc08:	46d9      	mov	r9, fp
 801cc0a:	9d00      	ldr	r5, [sp, #0]
 801cc0c:	42aa      	cmp	r2, r5
 801cc0e:	d0d0      	beq.n	801cbb2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801cc10:	1c55      	adds	r5, r2, #1
 801cc12:	4422      	add	r2, r4
 801cc14:	9517      	str	r5, [sp, #92]	; 0x5c
 801cc16:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801cc1a:	9a06      	ldr	r2, [sp, #24]
 801cc1c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801cc20:	4472      	add	r2, lr
 801cc22:	9212      	str	r2, [sp, #72]	; 0x48
 801cc24:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801cc26:	f8b9 2000 	ldrh.w	r2, [r9]
 801cc2a:	f897 a002 	ldrb.w	sl, [r7, #2]
 801cc2e:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801cc30:	1216      	asrs	r6, r2, #8
 801cc32:	fb1a fa07 	smulbb	sl, sl, r7
 801cc36:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801cc3a:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801cc3c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801cc40:	fb06 a607 	mla	r6, r6, r7, sl
 801cc44:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801cc46:	f897 a001 	ldrb.w	sl, [r7, #1]
 801cc4a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801cc4c:	10d5      	asrs	r5, r2, #3
 801cc4e:	fb1a fa07 	smulbb	sl, sl, r7
 801cc52:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801cc56:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801cc58:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801cc5c:	fb05 a507 	mla	r5, r5, r7, sl
 801cc60:	9f06      	ldr	r7, [sp, #24]
 801cc62:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801cc66:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801cc68:	00d2      	lsls	r2, r2, #3
 801cc6a:	fb1e fe07 	smulbb	lr, lr, r7
 801cc6e:	b2d2      	uxtb	r2, r2
 801cc70:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801cc72:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801cc76:	b2b6      	uxth	r6, r6
 801cc78:	fb02 e207 	mla	r2, r2, r7, lr
 801cc7c:	b292      	uxth	r2, r2
 801cc7e:	b2ad      	uxth	r5, r5
 801cc80:	f106 0a01 	add.w	sl, r6, #1
 801cc84:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801cc88:	f102 0e01 	add.w	lr, r2, #1
 801cc8c:	f105 0a01 	add.w	sl, r5, #1
 801cc90:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801cc94:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801cc98:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801cc9c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801cca0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801cca4:	ea4e 0606 	orr.w	r6, lr, r6
 801cca8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ccac:	ea46 060a 	orr.w	r6, r6, sl
 801ccb0:	f829 6b02 	strh.w	r6, [r9], #2
 801ccb4:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801ccb8:	e7a7      	b.n	801cc0a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801ccba:	f102 0e01 	add.w	lr, r2, #1
 801ccbe:	4422      	add	r2, r4
 801ccc0:	9f06      	ldr	r7, [sp, #24]
 801ccc2:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801ccc6:	9a06      	ldr	r2, [sp, #24]
 801ccc8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801cccc:	eb02 0a05 	add.w	sl, r2, r5
 801ccd0:	4a13      	ldr	r2, [pc, #76]	; (801cd20 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801ccd2:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801ccd6:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801ccda:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801ccde:	00d2      	lsls	r2, r2, #3
 801cce0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cce4:	ea49 0202 	orr.w	r2, r9, r2
 801cce8:	f817 9005 	ldrb.w	r9, [r7, r5]
 801ccec:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801ccf0:	f826 2b02 	strh.w	r2, [r6], #2
 801ccf4:	fa1f f28e 	uxth.w	r2, lr
 801ccf8:	e757      	b.n	801cbaa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801ccfa:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801ccfe:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801cd02:	1a2d      	subs	r5, r5, r0
 801cd04:	b2ad      	uxth	r5, r5
 801cd06:	2d00      	cmp	r5, #0
 801cd08:	bf18      	it	ne
 801cd0a:	2000      	movne	r0, #0
 801cd0c:	e730      	b.n	801cb70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801cd0e:	4b05      	ldr	r3, [pc, #20]	; (801cd24 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801cd10:	6818      	ldr	r0, [r3, #0]
 801cd12:	6803      	ldr	r3, [r0, #0]
 801cd14:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cd16:	4798      	blx	r3
 801cd18:	b01f      	add	sp, #124	; 0x7c
 801cd1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cd1e:	bf00      	nop
 801cd20:	fffff800 	.word	0xfffff800
 801cd24:	20012f24 	.word	0x20012f24

0801cd28 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801cd28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cd2c:	b091      	sub	sp, #68	; 0x44
 801cd2e:	469b      	mov	fp, r3
 801cd30:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801cd34:	4616      	mov	r6, r2
 801cd36:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801cd3a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801cd3e:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801cd42:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801cd46:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801cd4a:	4604      	mov	r4, r0
 801cd4c:	460d      	mov	r5, r1
 801cd4e:	4640      	mov	r0, r8
 801cd50:	4659      	mov	r1, fp
 801cd52:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801cd56:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801cd5a:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801cd5e:	f7f3 fa1d 	bl	801019c <_ZN8touchgfx4RectaNERKS0_>
 801cd62:	4631      	mov	r1, r6
 801cd64:	4640      	mov	r0, r8
 801cd66:	f7f3 fa19 	bl	801019c <_ZN8touchgfx4RectaNERKS0_>
 801cd6a:	4b74      	ldr	r3, [pc, #464]	; (801cf3c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801cd6c:	8818      	ldrh	r0, [r3, #0]
 801cd6e:	4b74      	ldr	r3, [pc, #464]	; (801cf40 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801cd70:	8819      	ldrh	r1, [r3, #0]
 801cd72:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801cd76:	2b00      	cmp	r3, #0
 801cd78:	b202      	sxth	r2, r0
 801cd7a:	b20e      	sxth	r6, r1
 801cd7c:	da07      	bge.n	801cd8e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801cd7e:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801cd82:	4463      	add	r3, ip
 801cd84:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801cd88:	2300      	movs	r3, #0
 801cd8a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801cd8e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801cd92:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801cd96:	1ad2      	subs	r2, r2, r3
 801cd98:	4594      	cmp	ip, r2
 801cd9a:	bfc4      	itt	gt
 801cd9c:	1ac2      	subgt	r2, r0, r3
 801cd9e:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801cda2:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801cda6:	2a00      	cmp	r2, #0
 801cda8:	da07      	bge.n	801cdba <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801cdaa:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801cdae:	4462      	add	r2, ip
 801cdb0:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801cdb4:	2200      	movs	r2, #0
 801cdb6:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801cdba:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801cdbe:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801cdc2:	eba6 060a 	sub.w	r6, r6, sl
 801cdc6:	42b2      	cmp	r2, r6
 801cdc8:	bfc4      	itt	gt
 801cdca:	eba1 020a 	subgt.w	r2, r1, sl
 801cdce:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801cdd2:	4a5c      	ldr	r2, [pc, #368]	; (801cf44 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801cdd4:	7812      	ldrb	r2, [r2, #0]
 801cdd6:	b9a2      	cbnz	r2, 801ce02 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801cdd8:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801cddc:	4286      	cmp	r6, r0
 801cdde:	4640      	mov	r0, r8
 801cde0:	9303      	str	r3, [sp, #12]
 801cde2:	bf14      	ite	ne
 801cde4:	2600      	movne	r6, #0
 801cde6:	2601      	moveq	r6, #1
 801cde8:	f7f3 fa1b 	bl	8010222 <_ZNK8touchgfx4Rect7isEmptyEv>
 801cdec:	9b03      	ldr	r3, [sp, #12]
 801cdee:	b160      	cbz	r0, 801ce0a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801cdf0:	2300      	movs	r3, #0
 801cdf2:	8023      	strh	r3, [r4, #0]
 801cdf4:	8063      	strh	r3, [r4, #2]
 801cdf6:	80a3      	strh	r3, [r4, #4]
 801cdf8:	4620      	mov	r0, r4
 801cdfa:	80e3      	strh	r3, [r4, #6]
 801cdfc:	b011      	add	sp, #68	; 0x44
 801cdfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ce02:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801ce06:	428e      	cmp	r6, r1
 801ce08:	e7e9      	b.n	801cdde <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801ce0a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801ce0e:	9205      	str	r2, [sp, #20]
 801ce10:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801ce14:	9206      	str	r2, [sp, #24]
 801ce16:	f8bb 2000 	ldrh.w	r2, [fp]
 801ce1a:	900e      	str	r0, [sp, #56]	; 0x38
 801ce1c:	1a9b      	subs	r3, r3, r2
 801ce1e:	b21b      	sxth	r3, r3
 801ce20:	9303      	str	r3, [sp, #12]
 801ce22:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801ce26:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801ce2a:	ebaa 0a03 	sub.w	sl, sl, r3
 801ce2e:	fa0f f38a 	sxth.w	r3, sl
 801ce32:	9304      	str	r3, [sp, #16]
 801ce34:	9b03      	ldr	r3, [sp, #12]
 801ce36:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801ce3a:	9b04      	ldr	r3, [sp, #16]
 801ce3c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801ce40:	9b05      	ldr	r3, [sp, #20]
 801ce42:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801ce46:	a90e      	add	r1, sp, #56	; 0x38
 801ce48:	9b06      	ldr	r3, [sp, #24]
 801ce4a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801ce4e:	a80c      	add	r0, sp, #48	; 0x30
 801ce50:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801ce54:	f7f8 f944 	bl	80150e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ce58:	4640      	mov	r0, r8
 801ce5a:	f7f8 f8fd 	bl	8015058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ce5e:	a80e      	add	r0, sp, #56	; 0x38
 801ce60:	f7f8 f8fa 	bl	8015058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ce64:	4b38      	ldr	r3, [pc, #224]	; (801cf48 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801ce66:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801ce6a:	881b      	ldrh	r3, [r3, #0]
 801ce6c:	9307      	str	r3, [sp, #28]
 801ce6e:	682b      	ldr	r3, [r5, #0]
 801ce70:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801cf4c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801ce74:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801ce76:	4628      	mov	r0, r5
 801ce78:	4798      	blx	r3
 801ce7a:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801ce7e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801ce82:	4681      	mov	r9, r0
 801ce84:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801ce88:	f8db 0000 	ldr.w	r0, [fp]
 801ce8c:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801ce8e:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801ce92:	6803      	ldr	r3, [r0, #0]
 801ce94:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801ce96:	4798      	blx	r3
 801ce98:	4607      	mov	r7, r0
 801ce9a:	f8db 0000 	ldr.w	r0, [fp]
 801ce9e:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801cea2:	6803      	ldr	r3, [r0, #0]
 801cea4:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801cea8:	9109      	str	r1, [sp, #36]	; 0x24
 801ceaa:	9208      	str	r2, [sp, #32]
 801ceac:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ceae:	4798      	blx	r3
 801ceb0:	f010 0f01 	tst.w	r0, #1
 801ceb4:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801ceb8:	d012      	beq.n	801cee0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801ceba:	f8db 0000 	ldr.w	r0, [fp]
 801cebe:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801cec2:	6803      	ldr	r3, [r0, #0]
 801cec4:	9200      	str	r2, [sp, #0]
 801cec6:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801cec8:	e898 0006 	ldmia.w	r8, {r1, r2}
 801cecc:	462b      	mov	r3, r5
 801cece:	47b0      	blx	r6
 801ced0:	9b03      	ldr	r3, [sp, #12]
 801ced2:	8023      	strh	r3, [r4, #0]
 801ced4:	9b04      	ldr	r3, [sp, #16]
 801ced6:	8063      	strh	r3, [r4, #2]
 801ced8:	9b05      	ldr	r3, [sp, #20]
 801ceda:	80a3      	strh	r3, [r4, #4]
 801cedc:	9b06      	ldr	r3, [sp, #24]
 801cede:	e78b      	b.n	801cdf8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801cee0:	fb09 f202 	mul.w	r2, r9, r2
 801cee4:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801cee8:	440f      	add	r7, r1
 801ceea:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801ceee:	b166      	cbz	r6, 801cf0a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801cef0:	9a07      	ldr	r2, [sp, #28]
 801cef2:	4592      	cmp	sl, r2
 801cef4:	d109      	bne.n	801cf0a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801cef6:	f8db 0000 	ldr.w	r0, [fp]
 801cefa:	6802      	ldr	r2, [r0, #0]
 801cefc:	fb09 f303 	mul.w	r3, r9, r3
 801cf00:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801cf02:	4629      	mov	r1, r5
 801cf04:	463a      	mov	r2, r7
 801cf06:	47b0      	blx	r6
 801cf08:	e7e2      	b.n	801ced0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801cf0a:	fb0a f303 	mul.w	r3, sl, r3
 801cf0e:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801cf4c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801cf12:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801cf16:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801cf1a:	4545      	cmp	r5, r8
 801cf1c:	d2d8      	bcs.n	801ced0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801cf1e:	f8db 0000 	ldr.w	r0, [fp]
 801cf22:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801cf26:	6802      	ldr	r2, [r0, #0]
 801cf28:	4629      	mov	r1, r5
 801cf2a:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801cf2e:	005b      	lsls	r3, r3, #1
 801cf30:	463a      	mov	r2, r7
 801cf32:	47d0      	blx	sl
 801cf34:	444f      	add	r7, r9
 801cf36:	4435      	add	r5, r6
 801cf38:	e7ef      	b.n	801cf1a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801cf3a:	bf00      	nop
 801cf3c:	20012f18 	.word	0x20012f18
 801cf40:	20012f1a 	.word	0x20012f1a
 801cf44:	20012f1c 	.word	0x20012f1c
 801cf48:	20012f1e 	.word	0x20012f1e
 801cf4c:	20012f24 	.word	0x20012f24

0801cf50 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801cf50:	b5f0      	push	{r4, r5, r6, r7, lr}
 801cf52:	4606      	mov	r6, r0
 801cf54:	b087      	sub	sp, #28
 801cf56:	460c      	mov	r4, r1
 801cf58:	4617      	mov	r7, r2
 801cf5a:	461d      	mov	r5, r3
 801cf5c:	b333      	cbz	r3, 801cfac <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801cf5e:	4608      	mov	r0, r1
 801cf60:	f7f3 f95f 	bl	8010222 <_ZNK8touchgfx4Rect7isEmptyEv>
 801cf64:	bb10      	cbnz	r0, 801cfac <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801cf66:	6820      	ldr	r0, [r4, #0]
 801cf68:	6861      	ldr	r1, [r4, #4]
 801cf6a:	4c1c      	ldr	r4, [pc, #112]	; (801cfdc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801cf6c:	ab04      	add	r3, sp, #16
 801cf6e:	c303      	stmia	r3!, {r0, r1}
 801cf70:	a804      	add	r0, sp, #16
 801cf72:	f7f8 f871 	bl	8015058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cf76:	6820      	ldr	r0, [r4, #0]
 801cf78:	6803      	ldr	r3, [r0, #0]
 801cf7a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801cf7c:	4798      	blx	r3
 801cf7e:	2dff      	cmp	r5, #255	; 0xff
 801cf80:	d016      	beq.n	801cfb0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801cf82:	f010 0f08 	tst.w	r0, #8
 801cf86:	6820      	ldr	r0, [r4, #0]
 801cf88:	d015      	beq.n	801cfb6 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801cf8a:	2400      	movs	r4, #0
 801cf8c:	6801      	ldr	r1, [r0, #0]
 801cf8e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801cf92:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801cf96:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801cf9a:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801cf9e:	9401      	str	r4, [sp, #4]
 801cfa0:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801cfa4:	9400      	str	r4, [sp, #0]
 801cfa6:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801cfa8:	4639      	mov	r1, r7
 801cfaa:	47a0      	blx	r4
 801cfac:	b007      	add	sp, #28
 801cfae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801cfb0:	f010 0f02 	tst.w	r0, #2
 801cfb4:	e7e7      	b.n	801cf86 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801cfb6:	6803      	ldr	r3, [r0, #0]
 801cfb8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cfba:	4798      	blx	r3
 801cfbc:	4b08      	ldr	r3, [pc, #32]	; (801cfe0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801cfbe:	881a      	ldrh	r2, [r3, #0]
 801cfc0:	6833      	ldr	r3, [r6, #0]
 801cfc2:	e9cd 7500 	strd	r7, r5, [sp]
 801cfc6:	4601      	mov	r1, r0
 801cfc8:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801cfca:	4630      	mov	r0, r6
 801cfcc:	ab04      	add	r3, sp, #16
 801cfce:	47a8      	blx	r5
 801cfd0:	6820      	ldr	r0, [r4, #0]
 801cfd2:	6803      	ldr	r3, [r0, #0]
 801cfd4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cfd6:	4798      	blx	r3
 801cfd8:	e7e8      	b.n	801cfac <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801cfda:	bf00      	nop
 801cfdc:	20012f24 	.word	0x20012f24
 801cfe0:	20012f1e 	.word	0x20012f1e

0801cfe4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801cfe4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801cfe8:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801cfec:	9e08      	ldr	r6, [sp, #32]
 801cfee:	4688      	mov	r8, r1
 801cff0:	4614      	mov	r4, r2
 801cff2:	461d      	mov	r5, r3
 801cff4:	2f00      	cmp	r7, #0
 801cff6:	f000 80a9 	beq.w	801d14c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801cffa:	4618      	mov	r0, r3
 801cffc:	f7f3 f911 	bl	8010222 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d000:	2800      	cmp	r0, #0
 801d002:	f040 80a3 	bne.w	801d14c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d006:	f9b5 1000 	ldrsh.w	r1, [r5]
 801d00a:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801d00e:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801d012:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801d016:	fb04 1303 	mla	r3, r4, r3, r1
 801d01a:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801d01e:	4365      	muls	r5, r4
 801d020:	2fff      	cmp	r7, #255	; 0xff
 801d022:	eba4 0200 	sub.w	r2, r4, r0
 801d026:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801d02a:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801d02e:	d04a      	beq.n	801d0c6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801d030:	b2bc      	uxth	r4, r7
 801d032:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801d036:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801d03a:	fa5f f788 	uxtb.w	r7, r8
 801d03e:	b2f3      	uxtb	r3, r6
 801d040:	0040      	lsls	r0, r0, #1
 801d042:	fb0e fe04 	mul.w	lr, lr, r4
 801d046:	4367      	muls	r7, r4
 801d048:	4363      	muls	r3, r4
 801d04a:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801d04e:	fa1f fc8c 	uxth.w	ip, ip
 801d052:	42a9      	cmp	r1, r5
 801d054:	d27a      	bcs.n	801d14c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d056:	eb01 0900 	add.w	r9, r1, r0
 801d05a:	4549      	cmp	r1, r9
 801d05c:	d231      	bcs.n	801d0c2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801d05e:	880a      	ldrh	r2, [r1, #0]
 801d060:	1214      	asrs	r4, r2, #8
 801d062:	10d6      	asrs	r6, r2, #3
 801d064:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801d068:	00d2      	lsls	r2, r2, #3
 801d06a:	b2d2      	uxtb	r2, r2
 801d06c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801d070:	fb14 f40c 	smulbb	r4, r4, ip
 801d074:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d078:	4474      	add	r4, lr
 801d07a:	fb12 f20c 	smulbb	r2, r2, ip
 801d07e:	b2a4      	uxth	r4, r4
 801d080:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d084:	441a      	add	r2, r3
 801d086:	b292      	uxth	r2, r2
 801d088:	f104 0a01 	add.w	sl, r4, #1
 801d08c:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801d090:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801d094:	fb16 f60c 	smulbb	r6, r6, ip
 801d098:	f102 0a01 	add.w	sl, r2, #1
 801d09c:	443e      	add	r6, r7
 801d09e:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801d0a2:	b2b6      	uxth	r6, r6
 801d0a4:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801d0a8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d0ac:	4322      	orrs	r2, r4
 801d0ae:	1c74      	adds	r4, r6, #1
 801d0b0:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801d0b4:	0976      	lsrs	r6, r6, #5
 801d0b6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801d0ba:	4332      	orrs	r2, r6
 801d0bc:	f821 2b02 	strh.w	r2, [r1], #2
 801d0c0:	e7cb      	b.n	801d05a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801d0c2:	4441      	add	r1, r8
 801d0c4:	e7c5      	b.n	801d052 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801d0c6:	4f22      	ldr	r7, [pc, #136]	; (801d150 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801d0c8:	0973      	lsrs	r3, r6, #5
 801d0ca:	ea08 0707 	and.w	r7, r8, r7
 801d0ce:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d0d2:	433b      	orrs	r3, r7
 801d0d4:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801d0d8:	4333      	orrs	r3, r6
 801d0da:	07e7      	lsls	r7, r4, #31
 801d0dc:	b29b      	uxth	r3, r3
 801d0de:	d50b      	bpl.n	801d0f8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801d0e0:	0040      	lsls	r0, r0, #1
 801d0e2:	0052      	lsls	r2, r2, #1
 801d0e4:	42a9      	cmp	r1, r5
 801d0e6:	d231      	bcs.n	801d14c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d0e8:	180c      	adds	r4, r1, r0
 801d0ea:	42a1      	cmp	r1, r4
 801d0ec:	d202      	bcs.n	801d0f4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801d0ee:	f821 3b02 	strh.w	r3, [r1], #2
 801d0f2:	e7fa      	b.n	801d0ea <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801d0f4:	4411      	add	r1, r2
 801d0f6:	e7f5      	b.n	801d0e4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801d0f8:	078e      	lsls	r6, r1, #30
 801d0fa:	d008      	beq.n	801d10e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801d0fc:	0066      	lsls	r6, r4, #1
 801d0fe:	460a      	mov	r2, r1
 801d100:	42aa      	cmp	r2, r5
 801d102:	d202      	bcs.n	801d10a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801d104:	8013      	strh	r3, [r2, #0]
 801d106:	4432      	add	r2, r6
 801d108:	e7fa      	b.n	801d100 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801d10a:	3102      	adds	r1, #2
 801d10c:	3801      	subs	r0, #1
 801d10e:	07c2      	lsls	r2, r0, #31
 801d110:	d50b      	bpl.n	801d12a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801d112:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801d116:	3a01      	subs	r2, #1
 801d118:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801d11c:	0066      	lsls	r6, r4, #1
 801d11e:	42aa      	cmp	r2, r5
 801d120:	d202      	bcs.n	801d128 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801d122:	8013      	strh	r3, [r2, #0]
 801d124:	4432      	add	r2, r6
 801d126:	e7fa      	b.n	801d11e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801d128:	3801      	subs	r0, #1
 801d12a:	b178      	cbz	r0, 801d14c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d12c:	1040      	asrs	r0, r0, #1
 801d12e:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801d132:	0080      	lsls	r0, r0, #2
 801d134:	0064      	lsls	r4, r4, #1
 801d136:	42a9      	cmp	r1, r5
 801d138:	d208      	bcs.n	801d14c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d13a:	180e      	adds	r6, r1, r0
 801d13c:	460a      	mov	r2, r1
 801d13e:	42b2      	cmp	r2, r6
 801d140:	d202      	bcs.n	801d148 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801d142:	f842 3b04 	str.w	r3, [r2], #4
 801d146:	e7fa      	b.n	801d13e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801d148:	4421      	add	r1, r4
 801d14a:	e7f4      	b.n	801d136 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801d14c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d150:	00fff800 	.word	0x00fff800

0801d154 <_ZN8touchgfx8LCD16bppC1Ev>:
 801d154:	2200      	movs	r2, #0
 801d156:	4912      	ldr	r1, [pc, #72]	; (801d1a0 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801d158:	6042      	str	r2, [r0, #4]
 801d15a:	6001      	str	r1, [r0, #0]
 801d15c:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801d160:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801d164:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801d168:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801d16c:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801d170:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801d174:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801d178:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801d17c:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801d180:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801d184:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801d188:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801d18c:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801d190:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801d194:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801d198:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801d19c:	4770      	bx	lr
 801d19e:	bf00      	nop
 801d1a0:	0802ec98 	.word	0x0802ec98

0801d1a4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801d1a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d1a8:	460d      	mov	r5, r1
 801d1aa:	b08d      	sub	sp, #52	; 0x34
 801d1ac:	4604      	mov	r4, r0
 801d1ae:	6808      	ldr	r0, [r1, #0]
 801d1b0:	6849      	ldr	r1, [r1, #4]
 801d1b2:	4699      	mov	r9, r3
 801d1b4:	ab08      	add	r3, sp, #32
 801d1b6:	c303      	stmia	r3!, {r0, r1}
 801d1b8:	6810      	ldr	r0, [r2, #0]
 801d1ba:	6851      	ldr	r1, [r2, #4]
 801d1bc:	ab0a      	add	r3, sp, #40	; 0x28
 801d1be:	c303      	stmia	r3!, {r0, r1}
 801d1c0:	a808      	add	r0, sp, #32
 801d1c2:	f7f7 ff49 	bl	8015058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d1c6:	4629      	mov	r1, r5
 801d1c8:	a80a      	add	r0, sp, #40	; 0x28
 801d1ca:	f7f7 ff89 	bl	80150e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d1ce:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801d1d2:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801d1d6:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801d1da:	4d63      	ldr	r5, [pc, #396]	; (801d368 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801d1dc:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801d1e0:	6828      	ldr	r0, [r5, #0]
 801d1e2:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801d1e6:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d1ea:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801d1ee:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801d1f2:	440a      	add	r2, r1
 801d1f4:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801d1f8:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801d1fc:	4413      	add	r3, r2
 801d1fe:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801d202:	6803      	ldr	r3, [r0, #0]
 801d204:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d206:	4798      	blx	r3
 801d208:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801d20c:	d119      	bne.n	801d242 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801d20e:	f010 0f20 	tst.w	r0, #32
 801d212:	6828      	ldr	r0, [r5, #0]
 801d214:	d018      	beq.n	801d248 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801d216:	2500      	movs	r5, #0
 801d218:	6801      	ldr	r1, [r0, #0]
 801d21a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801d21e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801d222:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801d226:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801d22a:	9502      	str	r5, [sp, #8]
 801d22c:	b2b6      	uxth	r6, r6
 801d22e:	fa1f f588 	uxth.w	r5, r8
 801d232:	9601      	str	r6, [sp, #4]
 801d234:	9500      	str	r5, [sp, #0]
 801d236:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801d238:	4621      	mov	r1, r4
 801d23a:	47a8      	blx	r5
 801d23c:	b00d      	add	sp, #52	; 0x34
 801d23e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d242:	f010 0f40 	tst.w	r0, #64	; 0x40
 801d246:	e7e4      	b.n	801d212 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801d248:	6803      	ldr	r3, [r0, #0]
 801d24a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d24c:	4798      	blx	r3
 801d24e:	4947      	ldr	r1, [pc, #284]	; (801d36c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801d250:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801d254:	880b      	ldrh	r3, [r1, #0]
 801d256:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801d25a:	fb03 5202 	mla	r2, r3, r2, r5
 801d25e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d262:	4373      	muls	r3, r6
 801d264:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d268:	9307      	str	r3, [sp, #28]
 801d26a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801d26e:	9306      	str	r3, [sp, #24]
 801d270:	468a      	mov	sl, r1
 801d272:	9b07      	ldr	r3, [sp, #28]
 801d274:	4298      	cmp	r0, r3
 801d276:	d270      	bcs.n	801d35a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801d278:	9b06      	ldr	r3, [sp, #24]
 801d27a:	4621      	mov	r1, r4
 801d27c:	eb00 0b03 	add.w	fp, r0, r3
 801d280:	4558      	cmp	r0, fp
 801d282:	d25d      	bcs.n	801d340 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801d284:	f851 4b04 	ldr.w	r4, [r1], #4
 801d288:	0e23      	lsrs	r3, r4, #24
 801d28a:	d014      	beq.n	801d2b6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801d28c:	2bff      	cmp	r3, #255	; 0xff
 801d28e:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801d292:	d112      	bne.n	801d2ba <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801d294:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801d298:	d10f      	bne.n	801d2ba <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801d29a:	0963      	lsrs	r3, r4, #5
 801d29c:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801d2a0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d2a4:	f02c 0c07 	bic.w	ip, ip, #7
 801d2a8:	ea43 0c0c 	orr.w	ip, r3, ip
 801d2ac:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801d2b0:	ea4c 0404 	orr.w	r4, ip, r4
 801d2b4:	8004      	strh	r4, [r0, #0]
 801d2b6:	3002      	adds	r0, #2
 801d2b8:	e7e2      	b.n	801d280 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801d2ba:	fb09 f303 	mul.w	r3, r9, r3
 801d2be:	8807      	ldrh	r7, [r0, #0]
 801d2c0:	1c5a      	adds	r2, r3, #1
 801d2c2:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801d2c6:	1212      	asrs	r2, r2, #8
 801d2c8:	123e      	asrs	r6, r7, #8
 801d2ca:	b293      	uxth	r3, r2
 801d2cc:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801d2d0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d2d4:	43d2      	mvns	r2, r2
 801d2d6:	b2d2      	uxtb	r2, r2
 801d2d8:	10fd      	asrs	r5, r7, #3
 801d2da:	fb1e fe03 	smulbb	lr, lr, r3
 801d2de:	00ff      	lsls	r7, r7, #3
 801d2e0:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801d2e4:	fb06 e602 	mla	r6, r6, r2, lr
 801d2e8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d2ec:	b2ff      	uxtb	r7, r7
 801d2ee:	fa5f fc8c 	uxtb.w	ip, ip
 801d2f2:	b2e4      	uxtb	r4, r4
 801d2f4:	b2b6      	uxth	r6, r6
 801d2f6:	fb1c fc03 	smulbb	ip, ip, r3
 801d2fa:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801d2fe:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801d302:	fb14 f403 	smulbb	r4, r4, r3
 801d306:	fb05 c502 	mla	r5, r5, r2, ip
 801d30a:	f106 0e01 	add.w	lr, r6, #1
 801d30e:	fb07 4702 	mla	r7, r7, r2, r4
 801d312:	b2ad      	uxth	r5, r5
 801d314:	b2bf      	uxth	r7, r7
 801d316:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801d31a:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801d31e:	f105 0c01 	add.w	ip, r5, #1
 801d322:	1c7e      	adds	r6, r7, #1
 801d324:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801d328:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801d32c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801d330:	096d      	lsrs	r5, r5, #5
 801d332:	ea46 060e 	orr.w	r6, r6, lr
 801d336:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d33a:	432e      	orrs	r6, r5
 801d33c:	8006      	strh	r6, [r0, #0]
 801d33e:	e7ba      	b.n	801d2b6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801d340:	f8ba 3000 	ldrh.w	r3, [sl]
 801d344:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801d348:	eba3 0308 	sub.w	r3, r3, r8
 801d34c:	eba4 0408 	sub.w	r4, r4, r8
 801d350:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d354:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801d358:	e78b      	b.n	801d272 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801d35a:	4b03      	ldr	r3, [pc, #12]	; (801d368 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801d35c:	6818      	ldr	r0, [r3, #0]
 801d35e:	6803      	ldr	r3, [r0, #0]
 801d360:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d362:	4798      	blx	r3
 801d364:	e76a      	b.n	801d23c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801d366:	bf00      	nop
 801d368:	20012f24 	.word	0x20012f24
 801d36c:	20012f1e 	.word	0x20012f1e

0801d370 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801d370:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801d374:	460c      	mov	r4, r1
 801d376:	b085      	sub	sp, #20
 801d378:	6810      	ldr	r0, [r2, #0]
 801d37a:	6851      	ldr	r1, [r2, #4]
 801d37c:	466d      	mov	r5, sp
 801d37e:	c503      	stmia	r5!, {r0, r1}
 801d380:	6818      	ldr	r0, [r3, #0]
 801d382:	6859      	ldr	r1, [r3, #4]
 801d384:	4616      	mov	r6, r2
 801d386:	c503      	stmia	r5!, {r0, r1}
 801d388:	4668      	mov	r0, sp
 801d38a:	f7f7 fe65 	bl	8015058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d38e:	4631      	mov	r1, r6
 801d390:	a802      	add	r0, sp, #8
 801d392:	f7f7 fea5 	bl	80150e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d396:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801d39a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801d39e:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801d3a2:	4d28      	ldr	r5, [pc, #160]	; (801d444 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801d3a4:	4e28      	ldr	r6, [pc, #160]	; (801d448 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801d3a6:	6828      	ldr	r0, [r5, #0]
 801d3a8:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801d3ac:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801d3b0:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d3b4:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801d3b8:	f8bd 1000 	ldrh.w	r1, [sp]
 801d3bc:	440a      	add	r2, r1
 801d3be:	f8ad 2008 	strh.w	r2, [sp, #8]
 801d3c2:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801d3c6:	4413      	add	r3, r2
 801d3c8:	f8ad 300a 	strh.w	r3, [sp, #10]
 801d3cc:	6803      	ldr	r3, [r0, #0]
 801d3ce:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d3d0:	4798      	blx	r3
 801d3d2:	8833      	ldrh	r3, [r6, #0]
 801d3d4:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801d3d8:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801d3dc:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801d44c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801d3e0:	fb03 1202 	mla	r2, r3, r2, r1
 801d3e4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d3e8:	fb08 f303 	mul.w	r3, r8, r3
 801d3ec:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d3f0:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801d3f4:	4298      	cmp	r0, r3
 801d3f6:	d21d      	bcs.n	801d434 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801d3f8:	eb00 080c 	add.w	r8, r0, ip
 801d3fc:	4540      	cmp	r0, r8
 801d3fe:	d20f      	bcs.n	801d420 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801d400:	f854 1b04 	ldr.w	r1, [r4], #4
 801d404:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801d408:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801d40c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801d410:	ea42 0209 	orr.w	r2, r2, r9
 801d414:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801d418:	430a      	orrs	r2, r1
 801d41a:	f820 2b02 	strh.w	r2, [r0], #2
 801d41e:	e7ed      	b.n	801d3fc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801d420:	8832      	ldrh	r2, [r6, #0]
 801d422:	1bd2      	subs	r2, r2, r7
 801d424:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d428:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801d42c:	1bd2      	subs	r2, r2, r7
 801d42e:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801d432:	e7df      	b.n	801d3f4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801d434:	6828      	ldr	r0, [r5, #0]
 801d436:	6803      	ldr	r3, [r0, #0]
 801d438:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d43a:	4798      	blx	r3
 801d43c:	b005      	add	sp, #20
 801d43e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801d442:	bf00      	nop
 801d444:	20012f24 	.word	0x20012f24
 801d448:	20012f1e 	.word	0x20012f1e
 801d44c:	fffff800 	.word	0xfffff800

0801d450 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801d450:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d454:	460e      	mov	r6, r1
 801d456:	b08e      	sub	sp, #56	; 0x38
 801d458:	4604      	mov	r4, r0
 801d45a:	6808      	ldr	r0, [r1, #0]
 801d45c:	6849      	ldr	r1, [r1, #4]
 801d45e:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801d638 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801d462:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801d63c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801d466:	461d      	mov	r5, r3
 801d468:	ab0a      	add	r3, sp, #40	; 0x28
 801d46a:	c303      	stmia	r3!, {r0, r1}
 801d46c:	6810      	ldr	r0, [r2, #0]
 801d46e:	6851      	ldr	r1, [r2, #4]
 801d470:	ab0c      	add	r3, sp, #48	; 0x30
 801d472:	c303      	stmia	r3!, {r0, r1}
 801d474:	a80a      	add	r0, sp, #40	; 0x28
 801d476:	f7f7 fdef 	bl	8015058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d47a:	4631      	mov	r1, r6
 801d47c:	a80c      	add	r0, sp, #48	; 0x30
 801d47e:	f7f7 fe2f 	bl	80150e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d482:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801d486:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801d48a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801d48e:	f8d8 0000 	ldr.w	r0, [r8]
 801d492:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801d496:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801d49a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d49e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801d4a2:	440c      	add	r4, r1
 801d4a4:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801d4a8:	440a      	add	r2, r1
 801d4aa:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801d4ae:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801d4b2:	4413      	add	r3, r2
 801d4b4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801d4b8:	6803      	ldr	r3, [r0, #0]
 801d4ba:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d4bc:	4798      	blx	r3
 801d4be:	2dff      	cmp	r5, #255	; 0xff
 801d4c0:	d124      	bne.n	801d50c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801d4c2:	f010 0f01 	tst.w	r0, #1
 801d4c6:	f8d8 0000 	ldr.w	r0, [r8]
 801d4ca:	d022      	beq.n	801d512 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801d4cc:	2100      	movs	r1, #0
 801d4ce:	f8d0 c000 	ldr.w	ip, [r0]
 801d4d2:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801d4d6:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801d4da:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801d4de:	f04f 0e01 	mov.w	lr, #1
 801d4e2:	f8cd e018 	str.w	lr, [sp, #24]
 801d4e6:	f8b9 e000 	ldrh.w	lr, [r9]
 801d4ea:	9503      	str	r5, [sp, #12]
 801d4ec:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801d4f0:	b2b6      	uxth	r6, r6
 801d4f2:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801d4f6:	9102      	str	r1, [sp, #8]
 801d4f8:	b2bf      	uxth	r7, r7
 801d4fa:	9601      	str	r6, [sp, #4]
 801d4fc:	9700      	str	r7, [sp, #0]
 801d4fe:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801d502:	4621      	mov	r1, r4
 801d504:	47a8      	blx	r5
 801d506:	b00e      	add	sp, #56	; 0x38
 801d508:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d50c:	f010 0f04 	tst.w	r0, #4
 801d510:	e7d9      	b.n	801d4c6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801d512:	6803      	ldr	r3, [r0, #0]
 801d514:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d516:	4798      	blx	r3
 801d518:	f8b9 3000 	ldrh.w	r3, [r9]
 801d51c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801d520:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801d524:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801d528:	fb03 1202 	mla	r2, r3, r2, r1
 801d52c:	ebac 0c07 	sub.w	ip, ip, r7
 801d530:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d534:	435e      	muls	r6, r3
 801d536:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801d53a:	2dff      	cmp	r5, #255	; 0xff
 801d53c:	eba3 0707 	sub.w	r7, r3, r7
 801d540:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801d544:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801d548:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801d54c:	d049      	beq.n	801d5e2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801d54e:	43eb      	mvns	r3, r5
 801d550:	fa1f f985 	uxth.w	r9, r5
 801d554:	b2db      	uxtb	r3, r3
 801d556:	42b0      	cmp	r0, r6
 801d558:	d266      	bcs.n	801d628 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801d55a:	eb00 0a0e 	add.w	sl, r0, lr
 801d55e:	4550      	cmp	r0, sl
 801d560:	4621      	mov	r1, r4
 801d562:	f104 0403 	add.w	r4, r4, #3
 801d566:	d25b      	bcs.n	801d620 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801d568:	8802      	ldrh	r2, [r0, #0]
 801d56a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801d56e:	ea4f 2822 	mov.w	r8, r2, asr #8
 801d572:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801d576:	fb11 f109 	smulbb	r1, r1, r9
 801d57a:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801d57e:	10d5      	asrs	r5, r2, #3
 801d580:	fb08 1803 	mla	r8, r8, r3, r1
 801d584:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801d588:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d58c:	fb11 f109 	smulbb	r1, r1, r9
 801d590:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801d594:	fb05 1503 	mla	r5, r5, r3, r1
 801d598:	00d2      	lsls	r2, r2, #3
 801d59a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801d59e:	b2d2      	uxtb	r2, r2
 801d5a0:	fb11 f109 	smulbb	r1, r1, r9
 801d5a4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d5a8:	fa1f f888 	uxth.w	r8, r8
 801d5ac:	fb02 1203 	mla	r2, r2, r3, r1
 801d5b0:	b292      	uxth	r2, r2
 801d5b2:	f108 0101 	add.w	r1, r8, #1
 801d5b6:	b2ad      	uxth	r5, r5
 801d5b8:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801d5bc:	1c51      	adds	r1, r2, #1
 801d5be:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801d5c2:	1c69      	adds	r1, r5, #1
 801d5c4:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801d5c8:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801d5cc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d5d0:	096d      	lsrs	r5, r5, #5
 801d5d2:	ea42 0208 	orr.w	r2, r2, r8
 801d5d6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d5da:	432a      	orrs	r2, r5
 801d5dc:	f820 2b02 	strh.w	r2, [r0], #2
 801d5e0:	e7bd      	b.n	801d55e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801d5e2:	4a14      	ldr	r2, [pc, #80]	; (801d634 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801d5e4:	42b0      	cmp	r0, r6
 801d5e6:	d21f      	bcs.n	801d628 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801d5e8:	eb00 050e 	add.w	r5, r0, lr
 801d5ec:	42a8      	cmp	r0, r5
 801d5ee:	4621      	mov	r1, r4
 801d5f0:	f104 0403 	add.w	r4, r4, #3
 801d5f4:	d210      	bcs.n	801d618 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801d5f6:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801d5fa:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801d5fe:	00db      	lsls	r3, r3, #3
 801d600:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801d604:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d608:	430b      	orrs	r3, r1
 801d60a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801d60e:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801d612:	f820 3b02 	strh.w	r3, [r0], #2
 801d616:	e7e9      	b.n	801d5ec <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801d618:	4438      	add	r0, r7
 801d61a:	eb01 040c 	add.w	r4, r1, ip
 801d61e:	e7e1      	b.n	801d5e4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801d620:	4438      	add	r0, r7
 801d622:	eb01 040c 	add.w	r4, r1, ip
 801d626:	e796      	b.n	801d556 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801d628:	4b03      	ldr	r3, [pc, #12]	; (801d638 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801d62a:	6818      	ldr	r0, [r3, #0]
 801d62c:	6803      	ldr	r3, [r0, #0]
 801d62e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d630:	4798      	blx	r3
 801d632:	e768      	b.n	801d506 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801d634:	fffff800 	.word	0xfffff800
 801d638:	20012f24 	.word	0x20012f24
 801d63c:	20012f1e 	.word	0x20012f1e

0801d640 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801d640:	b4f0      	push	{r4, r5, r6, r7}
 801d642:	4616      	mov	r6, r2
 801d644:	2e01      	cmp	r6, #1
 801d646:	461c      	mov	r4, r3
 801d648:	460d      	mov	r5, r1
 801d64a:	9a04      	ldr	r2, [sp, #16]
 801d64c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801d650:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801d654:	d012      	beq.n	801d67c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801d656:	d303      	bcc.n	801d660 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801d658:	2e02      	cmp	r6, #2
 801d65a:	d00a      	beq.n	801d672 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801d65c:	bcf0      	pop	{r4, r5, r6, r7}
 801d65e:	4770      	bx	lr
 801d660:	6805      	ldr	r5, [r0, #0]
 801d662:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801d666:	68ed      	ldr	r5, [r5, #12]
 801d668:	4613      	mov	r3, r2
 801d66a:	46ac      	mov	ip, r5
 801d66c:	4622      	mov	r2, r4
 801d66e:	bcf0      	pop	{r4, r5, r6, r7}
 801d670:	4760      	bx	ip
 801d672:	4621      	mov	r1, r4
 801d674:	4628      	mov	r0, r5
 801d676:	bcf0      	pop	{r4, r5, r6, r7}
 801d678:	f7ff bd94 	b.w	801d1a4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d67c:	4621      	mov	r1, r4
 801d67e:	4628      	mov	r0, r5
 801d680:	bcf0      	pop	{r4, r5, r6, r7}
 801d682:	f7ff bee5 	b.w	801d450 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801d688 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801d688:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d68c:	4681      	mov	r9, r0
 801d68e:	b093      	sub	sp, #76	; 0x4c
 801d690:	6810      	ldr	r0, [r2, #0]
 801d692:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801d696:	4f6d      	ldr	r7, [pc, #436]	; (801d84c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801d698:	4688      	mov	r8, r1
 801d69a:	6851      	ldr	r1, [r2, #4]
 801d69c:	ac0e      	add	r4, sp, #56	; 0x38
 801d69e:	c403      	stmia	r4!, {r0, r1}
 801d6a0:	6818      	ldr	r0, [r3, #0]
 801d6a2:	6859      	ldr	r1, [r3, #4]
 801d6a4:	ac10      	add	r4, sp, #64	; 0x40
 801d6a6:	4616      	mov	r6, r2
 801d6a8:	c403      	stmia	r4!, {r0, r1}
 801d6aa:	a80e      	add	r0, sp, #56	; 0x38
 801d6ac:	f7f7 fcd4 	bl	8015058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d6b0:	4631      	mov	r1, r6
 801d6b2:	a810      	add	r0, sp, #64	; 0x40
 801d6b4:	f7f7 fd14 	bl	80150e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d6b8:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801d6bc:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801d6c0:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801d6c4:	4e62      	ldr	r6, [pc, #392]	; (801d850 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801d6c6:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801d6ca:	6830      	ldr	r0, [r6, #0]
 801d6cc:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801d6d0:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d6d4:	4489      	add	r9, r1
 801d6d6:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801d6da:	440a      	add	r2, r1
 801d6dc:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801d6e0:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801d6e4:	4413      	add	r3, r2
 801d6e6:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801d6ea:	6803      	ldr	r3, [r0, #0]
 801d6ec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d6ee:	4798      	blx	r3
 801d6f0:	f010 0f80 	tst.w	r0, #128	; 0x80
 801d6f4:	6830      	ldr	r0, [r6, #0]
 801d6f6:	d01d      	beq.n	801d734 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801d6f8:	2200      	movs	r2, #0
 801d6fa:	6801      	ldr	r1, [r0, #0]
 801d6fc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801d700:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801d704:	220b      	movs	r2, #11
 801d706:	9207      	str	r2, [sp, #28]
 801d708:	883a      	ldrh	r2, [r7, #0]
 801d70a:	9206      	str	r2, [sp, #24]
 801d70c:	2201      	movs	r2, #1
 801d70e:	e9cd a204 	strd	sl, r2, [sp, #16]
 801d712:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801d716:	9203      	str	r2, [sp, #12]
 801d718:	b2a4      	uxth	r4, r4
 801d71a:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801d71e:	9200      	str	r2, [sp, #0]
 801d720:	b2ad      	uxth	r5, r5
 801d722:	9502      	str	r5, [sp, #8]
 801d724:	9401      	str	r4, [sp, #4]
 801d726:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801d728:	4642      	mov	r2, r8
 801d72a:	4649      	mov	r1, r9
 801d72c:	47a0      	blx	r4
 801d72e:	b013      	add	sp, #76	; 0x4c
 801d730:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d734:	6803      	ldr	r3, [r0, #0]
 801d736:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d738:	4798      	blx	r3
 801d73a:	883b      	ldrh	r3, [r7, #0]
 801d73c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801d740:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801d744:	fb03 1202 	mla	r2, r3, r2, r1
 801d748:	435d      	muls	r5, r3
 801d74a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d74e:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801d752:	920c      	str	r2, [sp, #48]	; 0x30
 801d754:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801d758:	1b12      	subs	r2, r2, r4
 801d75a:	920d      	str	r2, [sp, #52]	; 0x34
 801d75c:	0062      	lsls	r2, r4, #1
 801d75e:	1b1c      	subs	r4, r3, r4
 801d760:	0063      	lsls	r3, r4, #1
 801d762:	920a      	str	r2, [sp, #40]	; 0x28
 801d764:	930b      	str	r3, [sp, #44]	; 0x2c
 801d766:	f04f 0e04 	mov.w	lr, #4
 801d76a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d76c:	4298      	cmp	r0, r3
 801d76e:	d266      	bcs.n	801d83e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801d770:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d772:	eb00 0b03 	add.w	fp, r0, r3
 801d776:	4558      	cmp	r0, fp
 801d778:	d25c      	bcs.n	801d834 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801d77a:	f819 3b01 	ldrb.w	r3, [r9], #1
 801d77e:	fb1e e303 	smlabb	r3, lr, r3, lr
 801d782:	f858 2003 	ldr.w	r2, [r8, r3]
 801d786:	0e11      	lsrs	r1, r2, #24
 801d788:	d012      	beq.n	801d7b0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801d78a:	29ff      	cmp	r1, #255	; 0xff
 801d78c:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801d790:	d110      	bne.n	801d7b4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801d792:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801d796:	d10d      	bne.n	801d7b4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801d798:	0953      	lsrs	r3, r2, #5
 801d79a:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801d79e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d7a2:	f027 0707 	bic.w	r7, r7, #7
 801d7a6:	431f      	orrs	r7, r3
 801d7a8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d7ac:	433a      	orrs	r2, r7
 801d7ae:	8002      	strh	r2, [r0, #0]
 801d7b0:	3002      	adds	r0, #2
 801d7b2:	e7e0      	b.n	801d776 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801d7b4:	fb0a f101 	mul.w	r1, sl, r1
 801d7b8:	8806      	ldrh	r6, [r0, #0]
 801d7ba:	1c4b      	adds	r3, r1, #1
 801d7bc:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801d7c0:	1235      	asrs	r5, r6, #8
 801d7c2:	10f4      	asrs	r4, r6, #3
 801d7c4:	121b      	asrs	r3, r3, #8
 801d7c6:	00f6      	lsls	r6, r6, #3
 801d7c8:	b299      	uxth	r1, r3
 801d7ca:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801d7ce:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d7d2:	b2f6      	uxtb	r6, r6
 801d7d4:	43db      	mvns	r3, r3
 801d7d6:	b2d2      	uxtb	r2, r2
 801d7d8:	b2db      	uxtb	r3, r3
 801d7da:	fb1c fc01 	smulbb	ip, ip, r1
 801d7de:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801d7e2:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801d7e6:	fb12 f201 	smulbb	r2, r2, r1
 801d7ea:	fb05 c503 	mla	r5, r5, r3, ip
 801d7ee:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801d7f2:	b2ff      	uxtb	r7, r7
 801d7f4:	fb06 2203 	mla	r2, r6, r3, r2
 801d7f8:	b2ad      	uxth	r5, r5
 801d7fa:	fb17 f701 	smulbb	r7, r7, r1
 801d7fe:	b292      	uxth	r2, r2
 801d800:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801d804:	fb04 7403 	mla	r4, r4, r3, r7
 801d808:	f105 0c01 	add.w	ip, r5, #1
 801d80c:	1c57      	adds	r7, r2, #1
 801d80e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801d812:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801d816:	b2a4      	uxth	r4, r4
 801d818:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d81c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d820:	433d      	orrs	r5, r7
 801d822:	1c67      	adds	r7, r4, #1
 801d824:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801d828:	0964      	lsrs	r4, r4, #5
 801d82a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801d82e:	4325      	orrs	r5, r4
 801d830:	8005      	strh	r5, [r0, #0]
 801d832:	e7bd      	b.n	801d7b0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801d834:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d836:	4418      	add	r0, r3
 801d838:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d83a:	4499      	add	r9, r3
 801d83c:	e795      	b.n	801d76a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801d83e:	4b04      	ldr	r3, [pc, #16]	; (801d850 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801d840:	6818      	ldr	r0, [r3, #0]
 801d842:	6803      	ldr	r3, [r0, #0]
 801d844:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d846:	4798      	blx	r3
 801d848:	e771      	b.n	801d72e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801d84a:	bf00      	nop
 801d84c:	20012f1e 	.word	0x20012f1e
 801d850:	20012f24 	.word	0x20012f24

0801d854 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801d854:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d858:	b087      	sub	sp, #28
 801d85a:	4680      	mov	r8, r0
 801d85c:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801d860:	460d      	mov	r5, r1
 801d862:	4614      	mov	r4, r2
 801d864:	2e00      	cmp	r6, #0
 801d866:	f000 80b9 	beq.w	801d9dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801d86a:	6810      	ldr	r0, [r2, #0]
 801d86c:	6851      	ldr	r1, [r2, #4]
 801d86e:	af02      	add	r7, sp, #8
 801d870:	c703      	stmia	r7!, {r0, r1}
 801d872:	6818      	ldr	r0, [r3, #0]
 801d874:	6859      	ldr	r1, [r3, #4]
 801d876:	af04      	add	r7, sp, #16
 801d878:	c703      	stmia	r7!, {r0, r1}
 801d87a:	a802      	add	r0, sp, #8
 801d87c:	f7f7 fbec 	bl	8015058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d880:	4621      	mov	r1, r4
 801d882:	a804      	add	r0, sp, #16
 801d884:	f7f7 fc2c 	bl	80150e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d888:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d88c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d890:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801d894:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801d898:	fb14 2103 	smlabb	r1, r4, r3, r2
 801d89c:	eb08 0401 	add.w	r4, r8, r1
 801d8a0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d8a4:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801d8a8:	440a      	add	r2, r1
 801d8aa:	f8ad 2010 	strh.w	r2, [sp, #16]
 801d8ae:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d8b2:	4413      	add	r3, r2
 801d8b4:	f8ad 3012 	strh.w	r3, [sp, #18]
 801d8b8:	4b4a      	ldr	r3, [pc, #296]	; (801d9e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801d8ba:	6818      	ldr	r0, [r3, #0]
 801d8bc:	6803      	ldr	r3, [r0, #0]
 801d8be:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d8c0:	4798      	blx	r3
 801d8c2:	4b49      	ldr	r3, [pc, #292]	; (801d9e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801d8c4:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801d8c8:	881a      	ldrh	r2, [r3, #0]
 801d8ca:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801d8ce:	2eff      	cmp	r6, #255	; 0xff
 801d8d0:	fb02 c101 	mla	r1, r2, r1, ip
 801d8d4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801d8d8:	fb02 f207 	mul.w	r2, r2, r7
 801d8dc:	f105 0104 	add.w	r1, r5, #4
 801d8e0:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801d8e4:	461d      	mov	r5, r3
 801d8e6:	d05a      	beq.n	801d99e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801d8e8:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801d8ec:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801d8f0:	b2b6      	uxth	r6, r6
 801d8f2:	fa1f fe8e 	uxth.w	lr, lr
 801d8f6:	9301      	str	r3, [sp, #4]
 801d8f8:	4282      	cmp	r2, r0
 801d8fa:	d96a      	bls.n	801d9d2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801d8fc:	eb00 0b0a 	add.w	fp, r0, sl
 801d900:	4583      	cmp	fp, r0
 801d902:	d940      	bls.n	801d986 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801d904:	f814 3b01 	ldrb.w	r3, [r4], #1
 801d908:	8805      	ldrh	r5, [r0, #0]
 801d90a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801d90e:	122f      	asrs	r7, r5, #8
 801d910:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d914:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d918:	fb17 f70e 	smulbb	r7, r7, lr
 801d91c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801d920:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d924:	00ed      	lsls	r5, r5, #3
 801d926:	fb0c 7c06 	mla	ip, ip, r6, r7
 801d92a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801d92e:	10df      	asrs	r7, r3, #3
 801d930:	b2ed      	uxtb	r5, r5
 801d932:	00db      	lsls	r3, r3, #3
 801d934:	fa1f fc8c 	uxth.w	ip, ip
 801d938:	fb19 f90e 	smulbb	r9, r9, lr
 801d93c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d940:	b2db      	uxtb	r3, r3
 801d942:	fb15 f50e 	smulbb	r5, r5, lr
 801d946:	fb07 9706 	mla	r7, r7, r6, r9
 801d94a:	fb03 5306 	mla	r3, r3, r6, r5
 801d94e:	f10c 0901 	add.w	r9, ip, #1
 801d952:	b29b      	uxth	r3, r3
 801d954:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801d958:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801d95c:	f103 0c01 	add.w	ip, r3, #1
 801d960:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d964:	b2bf      	uxth	r7, r7
 801d966:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d96a:	ea4c 0c09 	orr.w	ip, ip, r9
 801d96e:	f107 0901 	add.w	r9, r7, #1
 801d972:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801d976:	097f      	lsrs	r7, r7, #5
 801d978:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d97c:	ea4c 0c07 	orr.w	ip, ip, r7
 801d980:	f820 cb02 	strh.w	ip, [r0], #2
 801d984:	e7bc      	b.n	801d900 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801d986:	9b01      	ldr	r3, [sp, #4]
 801d988:	881b      	ldrh	r3, [r3, #0]
 801d98a:	eba3 0308 	sub.w	r3, r3, r8
 801d98e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d992:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801d996:	eba3 0308 	sub.w	r3, r3, r8
 801d99a:	441c      	add	r4, r3
 801d99c:	e7ac      	b.n	801d8f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801d99e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801d9a2:	4282      	cmp	r2, r0
 801d9a4:	d915      	bls.n	801d9d2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801d9a6:	eb00 060a 	add.w	r6, r0, sl
 801d9aa:	4286      	cmp	r6, r0
 801d9ac:	d906      	bls.n	801d9bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801d9ae:	f814 3b01 	ldrb.w	r3, [r4], #1
 801d9b2:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801d9b6:	f820 3b02 	strh.w	r3, [r0], #2
 801d9ba:	e7f6      	b.n	801d9aa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801d9bc:	882b      	ldrh	r3, [r5, #0]
 801d9be:	eba3 0308 	sub.w	r3, r3, r8
 801d9c2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d9c6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801d9ca:	eba3 0308 	sub.w	r3, r3, r8
 801d9ce:	441c      	add	r4, r3
 801d9d0:	e7e7      	b.n	801d9a2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801d9d2:	4b04      	ldr	r3, [pc, #16]	; (801d9e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801d9d4:	6818      	ldr	r0, [r3, #0]
 801d9d6:	6803      	ldr	r3, [r0, #0]
 801d9d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d9da:	4798      	blx	r3
 801d9dc:	b007      	add	sp, #28
 801d9de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d9e2:	bf00      	nop
 801d9e4:	20012f24 	.word	0x20012f24
 801d9e8:	20012f1e 	.word	0x20012f1e

0801d9ec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801d9ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d9f0:	b091      	sub	sp, #68	; 0x44
 801d9f2:	4680      	mov	r8, r0
 801d9f4:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801d9f8:	460f      	mov	r7, r1
 801d9fa:	4614      	mov	r4, r2
 801d9fc:	2d00      	cmp	r5, #0
 801d9fe:	d051      	beq.n	801daa4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801da00:	6810      	ldr	r0, [r2, #0]
 801da02:	6851      	ldr	r1, [r2, #4]
 801da04:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801dc08 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801da08:	ae0c      	add	r6, sp, #48	; 0x30
 801da0a:	c603      	stmia	r6!, {r0, r1}
 801da0c:	6818      	ldr	r0, [r3, #0]
 801da0e:	6859      	ldr	r1, [r3, #4]
 801da10:	ae0e      	add	r6, sp, #56	; 0x38
 801da12:	c603      	stmia	r6!, {r0, r1}
 801da14:	a80c      	add	r0, sp, #48	; 0x30
 801da16:	f7f7 fb1f 	bl	8015058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801da1a:	4621      	mov	r1, r4
 801da1c:	a80e      	add	r0, sp, #56	; 0x38
 801da1e:	f7f7 fb5f 	bl	80150e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801da22:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801da26:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801da2a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801da2e:	f8d9 0000 	ldr.w	r0, [r9]
 801da32:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801da36:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801da3a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801da3e:	eb08 0401 	add.w	r4, r8, r1
 801da42:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801da46:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801dc0c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801da4a:	440a      	add	r2, r1
 801da4c:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801da50:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801da54:	4413      	add	r3, r2
 801da56:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801da5a:	6803      	ldr	r3, [r0, #0]
 801da5c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801da5e:	4798      	blx	r3
 801da60:	f010 0f80 	tst.w	r0, #128	; 0x80
 801da64:	f8d9 0000 	ldr.w	r0, [r9]
 801da68:	d01f      	beq.n	801daaa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801da6a:	2200      	movs	r2, #0
 801da6c:	6801      	ldr	r1, [r0, #0]
 801da6e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801da72:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801da76:	220b      	movs	r2, #11
 801da78:	9207      	str	r2, [sp, #28]
 801da7a:	f8b8 2000 	ldrh.w	r2, [r8]
 801da7e:	9206      	str	r2, [sp, #24]
 801da80:	2201      	movs	r2, #1
 801da82:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801da86:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801da8a:	9203      	str	r2, [sp, #12]
 801da8c:	fa1f f28a 	uxth.w	r2, sl
 801da90:	9202      	str	r2, [sp, #8]
 801da92:	b2b6      	uxth	r6, r6
 801da94:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801da98:	9200      	str	r2, [sp, #0]
 801da9a:	9601      	str	r6, [sp, #4]
 801da9c:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801da9e:	463a      	mov	r2, r7
 801daa0:	4621      	mov	r1, r4
 801daa2:	47a8      	blx	r5
 801daa4:	b011      	add	sp, #68	; 0x44
 801daa6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801daaa:	6803      	ldr	r3, [r0, #0]
 801daac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801daae:	4798      	blx	r3
 801dab0:	f8b8 2000 	ldrh.w	r2, [r8]
 801dab4:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801dab8:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801dabc:	2dff      	cmp	r5, #255	; 0xff
 801dabe:	fb02 1303 	mla	r3, r2, r3, r1
 801dac2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801dac6:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801daca:	fb0a fa02 	mul.w	sl, sl, r2
 801dace:	d062      	beq.n	801db96 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801dad0:	ea6f 0c05 	mvn.w	ip, r5
 801dad4:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801dad8:	930a      	str	r3, [sp, #40]	; 0x28
 801dada:	b2ad      	uxth	r5, r5
 801dadc:	fa5f fc8c 	uxtb.w	ip, ip
 801dae0:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801dae4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801dae6:	4298      	cmp	r0, r3
 801dae8:	f080 8085 	bcs.w	801dbf6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801daec:	eb00 0b09 	add.w	fp, r0, r9
 801daf0:	4558      	cmp	r0, fp
 801daf2:	d246      	bcs.n	801db82 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801daf4:	f814 eb01 	ldrb.w	lr, [r4], #1
 801daf8:	2303      	movs	r3, #3
 801dafa:	2204      	movs	r2, #4
 801dafc:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801db00:	eb07 0a0e 	add.w	sl, r7, lr
 801db04:	8803      	ldrh	r3, [r0, #0]
 801db06:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801db0a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801db0e:	1219      	asrs	r1, r3, #8
 801db10:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801db14:	fb18 f805 	smulbb	r8, r8, r5
 801db18:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801db1c:	10da      	asrs	r2, r3, #3
 801db1e:	fb01 810c 	mla	r1, r1, ip, r8
 801db22:	00db      	lsls	r3, r3, #3
 801db24:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801db28:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801db2c:	b2db      	uxtb	r3, r3
 801db2e:	fb18 f805 	smulbb	r8, r8, r5
 801db32:	fb1e fe05 	smulbb	lr, lr, r5
 801db36:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801db3a:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801db3e:	b289      	uxth	r1, r1
 801db40:	fb02 820c 	mla	r2, r2, ip, r8
 801db44:	fb03 e30c 	mla	r3, r3, ip, lr
 801db48:	b292      	uxth	r2, r2
 801db4a:	b29b      	uxth	r3, r3
 801db4c:	f101 0801 	add.w	r8, r1, #1
 801db50:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801db54:	f103 0e01 	add.w	lr, r3, #1
 801db58:	f102 0801 	add.w	r8, r2, #1
 801db5c:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801db60:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801db64:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801db68:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801db6c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801db70:	ea4e 0101 	orr.w	r1, lr, r1
 801db74:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801db78:	ea41 0108 	orr.w	r1, r1, r8
 801db7c:	f820 1b02 	strh.w	r1, [r0], #2
 801db80:	e7b6      	b.n	801daf0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801db82:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801db84:	881b      	ldrh	r3, [r3, #0]
 801db86:	1b9b      	subs	r3, r3, r6
 801db88:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801db8c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801db90:	1b9b      	subs	r3, r3, r6
 801db92:	441c      	add	r4, r3
 801db94:	e7a6      	b.n	801dae4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801db96:	491b      	ldr	r1, [pc, #108]	; (801dc04 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801db98:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801db9c:	2203      	movs	r2, #3
 801db9e:	2504      	movs	r5, #4
 801dba0:	4550      	cmp	r0, sl
 801dba2:	d228      	bcs.n	801dbf6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801dba4:	eb00 0c09 	add.w	ip, r0, r9
 801dba8:	4560      	cmp	r0, ip
 801dbaa:	4623      	mov	r3, r4
 801dbac:	d219      	bcs.n	801dbe2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801dbae:	f893 e000 	ldrb.w	lr, [r3]
 801dbb2:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801dbb6:	eb07 0b0e 	add.w	fp, r7, lr
 801dbba:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801dbbe:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801dbc2:	f89b b001 	ldrb.w	fp, [fp, #1]
 801dbc6:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801dbca:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801dbce:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801dbd2:	ea43 030b 	orr.w	r3, r3, fp
 801dbd6:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801dbda:	3401      	adds	r4, #1
 801dbdc:	f820 3b02 	strh.w	r3, [r0], #2
 801dbe0:	e7e2      	b.n	801dba8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801dbe2:	f8b8 3000 	ldrh.w	r3, [r8]
 801dbe6:	1b9b      	subs	r3, r3, r6
 801dbe8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801dbec:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801dbf0:	1b9b      	subs	r3, r3, r6
 801dbf2:	441c      	add	r4, r3
 801dbf4:	e7d4      	b.n	801dba0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801dbf6:	4b04      	ldr	r3, [pc, #16]	; (801dc08 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801dbf8:	6818      	ldr	r0, [r3, #0]
 801dbfa:	6803      	ldr	r3, [r0, #0]
 801dbfc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801dbfe:	4798      	blx	r3
 801dc00:	e750      	b.n	801daa4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801dc02:	bf00      	nop
 801dc04:	fffff800 	.word	0xfffff800
 801dc08:	20012f24 	.word	0x20012f24
 801dc0c:	20012f1e 	.word	0x20012f1e

0801dc10 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801dc10:	b4f0      	push	{r4, r5, r6, r7}
 801dc12:	460c      	mov	r4, r1
 801dc14:	4611      	mov	r1, r2
 801dc16:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801dc1a:	780f      	ldrb	r7, [r1, #0]
 801dc1c:	784e      	ldrb	r6, [r1, #1]
 801dc1e:	2f01      	cmp	r7, #1
 801dc20:	461a      	mov	r2, r3
 801dc22:	9b04      	ldr	r3, [sp, #16]
 801dc24:	d036      	beq.n	801dc94 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801dc26:	d31e      	bcc.n	801dc66 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801dc28:	2f02      	cmp	r7, #2
 801dc2a:	d14a      	bne.n	801dcc2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801dc2c:	2e03      	cmp	r6, #3
 801dc2e:	d848      	bhi.n	801dcc2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801dc30:	e8df f006 	tbb	[pc, r6]
 801dc34:	16140702 	.word	0x16140702
 801dc38:	9504      	str	r5, [sp, #16]
 801dc3a:	4620      	mov	r0, r4
 801dc3c:	bcf0      	pop	{r4, r5, r6, r7}
 801dc3e:	f7ff be09 	b.w	801d854 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801dc42:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801dc44:	2800      	cmp	r0, #0
 801dc46:	d03c      	beq.n	801dcc2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801dc48:	6806      	ldr	r6, [r0, #0]
 801dc4a:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801dc4e:	68b5      	ldr	r5, [r6, #8]
 801dc50:	4613      	mov	r3, r2
 801dc52:	46ac      	mov	ip, r5
 801dc54:	460a      	mov	r2, r1
 801dc56:	4621      	mov	r1, r4
 801dc58:	bcf0      	pop	{r4, r5, r6, r7}
 801dc5a:	4760      	bx	ip
 801dc5c:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801dc5e:	e7f1      	b.n	801dc44 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801dc60:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801dc64:	e7ee      	b.n	801dc44 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801dc66:	2e03      	cmp	r6, #3
 801dc68:	d82b      	bhi.n	801dcc2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801dc6a:	e8df f006 	tbb	[pc, r6]
 801dc6e:	0702      	.short	0x0702
 801dc70:	100e      	.short	0x100e
 801dc72:	9504      	str	r5, [sp, #16]
 801dc74:	4620      	mov	r0, r4
 801dc76:	bcf0      	pop	{r4, r5, r6, r7}
 801dc78:	f7ff bd06 	b.w	801d688 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801dc7c:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801dc7e:	b300      	cbz	r0, 801dcc2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801dc80:	6806      	ldr	r6, [r0, #0]
 801dc82:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801dc86:	68f5      	ldr	r5, [r6, #12]
 801dc88:	e7e2      	b.n	801dc50 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801dc8a:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801dc8c:	e7f7      	b.n	801dc7e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801dc8e:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801dc92:	e7f4      	b.n	801dc7e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801dc94:	2e03      	cmp	r6, #3
 801dc96:	d814      	bhi.n	801dcc2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801dc98:	e8df f006 	tbb	[pc, r6]
 801dc9c:	100e0702 	.word	0x100e0702
 801dca0:	9504      	str	r5, [sp, #16]
 801dca2:	4620      	mov	r0, r4
 801dca4:	bcf0      	pop	{r4, r5, r6, r7}
 801dca6:	f7ff bea1 	b.w	801d9ec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801dcaa:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801dcac:	b148      	cbz	r0, 801dcc2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801dcae:	6806      	ldr	r6, [r0, #0]
 801dcb0:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801dcb4:	6935      	ldr	r5, [r6, #16]
 801dcb6:	e7cb      	b.n	801dc50 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801dcb8:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801dcba:	e7f7      	b.n	801dcac <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801dcbc:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801dcc0:	e7f4      	b.n	801dcac <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801dcc2:	bcf0      	pop	{r4, r5, r6, r7}
 801dcc4:	4770      	bx	lr
	...

0801dcc8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801dcc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dccc:	4604      	mov	r4, r0
 801dcce:	b087      	sub	sp, #28
 801dcd0:	6810      	ldr	r0, [r2, #0]
 801dcd2:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801dcd6:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801df10 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801dcda:	460e      	mov	r6, r1
 801dcdc:	6851      	ldr	r1, [r2, #4]
 801dcde:	ad02      	add	r5, sp, #8
 801dce0:	c503      	stmia	r5!, {r0, r1}
 801dce2:	6818      	ldr	r0, [r3, #0]
 801dce4:	6859      	ldr	r1, [r3, #4]
 801dce6:	ad04      	add	r5, sp, #16
 801dce8:	4617      	mov	r7, r2
 801dcea:	c503      	stmia	r5!, {r0, r1}
 801dcec:	a802      	add	r0, sp, #8
 801dcee:	f7f7 f9b3 	bl	8015058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dcf2:	4639      	mov	r1, r7
 801dcf4:	a804      	add	r0, sp, #16
 801dcf6:	f7f7 f9f3 	bl	80150e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801dcfa:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801dcfe:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801dd02:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801dd06:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801dd0a:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801dd0e:	fb11 2103 	smlabb	r1, r1, r3, r2
 801dd12:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801dd16:	440e      	add	r6, r1
 801dd18:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801dd1c:	440a      	add	r2, r1
 801dd1e:	f8ad 2010 	strh.w	r2, [sp, #16]
 801dd22:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801dd26:	4413      	add	r3, r2
 801dd28:	f8ad 3012 	strh.w	r3, [sp, #18]
 801dd2c:	4b77      	ldr	r3, [pc, #476]	; (801df0c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801dd2e:	6818      	ldr	r0, [r3, #0]
 801dd30:	6803      	ldr	r3, [r0, #0]
 801dd32:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801dd34:	4798      	blx	r3
 801dd36:	f8b9 b000 	ldrh.w	fp, [r9]
 801dd3a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801dd3e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801dd42:	fb0b 2303 	mla	r3, fp, r3, r2
 801dd46:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801dd4a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801dd4e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801dd52:	fb05 f50b 	mul.w	r5, r5, fp
 801dd56:	9300      	str	r3, [sp, #0]
 801dd58:	d069      	beq.n	801de2e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801dd5a:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801dd5e:	4558      	cmp	r0, fp
 801dd60:	f080 80cc 	bcs.w	801defc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801dd64:	9b00      	ldr	r3, [sp, #0]
 801dd66:	18c3      	adds	r3, r0, r3
 801dd68:	9301      	str	r3, [sp, #4]
 801dd6a:	4631      	mov	r1, r6
 801dd6c:	9b01      	ldr	r3, [sp, #4]
 801dd6e:	4298      	cmp	r0, r3
 801dd70:	d24f      	bcs.n	801de12 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801dd72:	f811 2b01 	ldrb.w	r2, [r1], #1
 801dd76:	2a00      	cmp	r2, #0
 801dd78:	d048      	beq.n	801de0c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801dd7a:	fb0a f202 	mul.w	r2, sl, r2
 801dd7e:	1c53      	adds	r3, r2, #1
 801dd80:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801dd84:	121b      	asrs	r3, r3, #8
 801dd86:	d041      	beq.n	801de0c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801dd88:	8802      	ldrh	r2, [r0, #0]
 801dd8a:	f8b4 c000 	ldrh.w	ip, [r4]
 801dd8e:	b29e      	uxth	r6, r3
 801dd90:	1215      	asrs	r5, r2, #8
 801dd92:	43db      	mvns	r3, r3
 801dd94:	b2db      	uxtb	r3, r3
 801dd96:	ea4f 272c 	mov.w	r7, ip, asr #8
 801dd9a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801dd9e:	fb15 f503 	smulbb	r5, r5, r3
 801dda2:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801dda6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ddaa:	00d2      	lsls	r2, r2, #3
 801ddac:	fb07 5706 	mla	r7, r7, r6, r5
 801ddb0:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801ddb4:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801ddb8:	b2d2      	uxtb	r2, r2
 801ddba:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ddbe:	b2bf      	uxth	r7, r7
 801ddc0:	fb1e fe03 	smulbb	lr, lr, r3
 801ddc4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ddc8:	fa5f fc8c 	uxtb.w	ip, ip
 801ddcc:	fb12 f203 	smulbb	r2, r2, r3
 801ddd0:	fb05 e506 	mla	r5, r5, r6, lr
 801ddd4:	fb0c 2c06 	mla	ip, ip, r6, r2
 801ddd8:	f107 0e01 	add.w	lr, r7, #1
 801dddc:	fa1f fc8c 	uxth.w	ip, ip
 801dde0:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801dde4:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801dde8:	f10c 0701 	add.w	r7, ip, #1
 801ddec:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801ddf0:	b2ad      	uxth	r5, r5
 801ddf2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801ddf6:	ea47 070e 	orr.w	r7, r7, lr
 801ddfa:	f105 0e01 	add.w	lr, r5, #1
 801ddfe:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801de02:	096d      	lsrs	r5, r5, #5
 801de04:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801de08:	432f      	orrs	r7, r5
 801de0a:	8007      	strh	r7, [r0, #0]
 801de0c:	3002      	adds	r0, #2
 801de0e:	3402      	adds	r4, #2
 801de10:	e7ac      	b.n	801dd6c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801de12:	f8b9 3000 	ldrh.w	r3, [r9]
 801de16:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801de1a:	eba3 0308 	sub.w	r3, r3, r8
 801de1e:	eba6 0608 	sub.w	r6, r6, r8
 801de22:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801de26:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801de2a:	440e      	add	r6, r1
 801de2c:	e797      	b.n	801dd5e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801de2e:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801de32:	42a8      	cmp	r0, r5
 801de34:	d262      	bcs.n	801defc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801de36:	9b00      	ldr	r3, [sp, #0]
 801de38:	4631      	mov	r1, r6
 801de3a:	eb00 0b03 	add.w	fp, r0, r3
 801de3e:	4558      	cmp	r0, fp
 801de40:	d24e      	bcs.n	801dee0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801de42:	f811 3b01 	ldrb.w	r3, [r1], #1
 801de46:	b12b      	cbz	r3, 801de54 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801de48:	2bff      	cmp	r3, #255	; 0xff
 801de4a:	f8b4 e000 	ldrh.w	lr, [r4]
 801de4e:	d104      	bne.n	801de5a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801de50:	f8a0 e000 	strh.w	lr, [r0]
 801de54:	3002      	adds	r0, #2
 801de56:	3402      	adds	r4, #2
 801de58:	e7f1      	b.n	801de3e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801de5a:	8802      	ldrh	r2, [r0, #0]
 801de5c:	b29f      	uxth	r7, r3
 801de5e:	1216      	asrs	r6, r2, #8
 801de60:	43db      	mvns	r3, r3
 801de62:	b2db      	uxtb	r3, r3
 801de64:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801de68:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801de6c:	fb16 f603 	smulbb	r6, r6, r3
 801de70:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801de74:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801de78:	00d2      	lsls	r2, r2, #3
 801de7a:	fb0c 6c07 	mla	ip, ip, r7, r6
 801de7e:	b2d2      	uxtb	r2, r2
 801de80:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801de84:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801de88:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801de8c:	fb1a fa03 	smulbb	sl, sl, r3
 801de90:	fa1f fc8c 	uxth.w	ip, ip
 801de94:	fb12 f303 	smulbb	r3, r2, r3
 801de98:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801de9c:	fa5f fe8e 	uxtb.w	lr, lr
 801dea0:	fb06 a607 	mla	r6, r6, r7, sl
 801dea4:	f10c 0201 	add.w	r2, ip, #1
 801dea8:	fb0e 3307 	mla	r3, lr, r7, r3
 801deac:	b2b6      	uxth	r6, r6
 801deae:	b29b      	uxth	r3, r3
 801deb0:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801deb4:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801deb8:	f106 0a01 	add.w	sl, r6, #1
 801debc:	f103 0c01 	add.w	ip, r3, #1
 801dec0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801dec4:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801dec8:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801decc:	0976      	lsrs	r6, r6, #5
 801dece:	ea4c 0c02 	orr.w	ip, ip, r2
 801ded2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ded6:	ea4c 0c06 	orr.w	ip, ip, r6
 801deda:	f8a0 c000 	strh.w	ip, [r0]
 801dede:	e7b9      	b.n	801de54 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801dee0:	f8b9 3000 	ldrh.w	r3, [r9]
 801dee4:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801dee8:	eba3 0308 	sub.w	r3, r3, r8
 801deec:	eba6 0608 	sub.w	r6, r6, r8
 801def0:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801def4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801def8:	440e      	add	r6, r1
 801defa:	e79a      	b.n	801de32 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801defc:	4b03      	ldr	r3, [pc, #12]	; (801df0c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801defe:	6818      	ldr	r0, [r3, #0]
 801df00:	6803      	ldr	r3, [r0, #0]
 801df02:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801df04:	4798      	blx	r3
 801df06:	b007      	add	sp, #28
 801df08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801df0c:	20012f24 	.word	0x20012f24
 801df10:	20012f1e 	.word	0x20012f1e

0801df14 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801df14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801df18:	b089      	sub	sp, #36	; 0x24
 801df1a:	4682      	mov	sl, r0
 801df1c:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801df20:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801df22:	460f      	mov	r7, r1
 801df24:	4691      	mov	r9, r2
 801df26:	4698      	mov	r8, r3
 801df28:	2e00      	cmp	r6, #0
 801df2a:	d03d      	beq.n	801dfa8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801df2c:	4608      	mov	r0, r1
 801df2e:	f7fa fe59 	bl	8018be4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801df32:	4605      	mov	r5, r0
 801df34:	4638      	mov	r0, r7
 801df36:	f7fa fe89 	bl	8018c4c <_ZNK8touchgfx6Bitmap9getHeightEv>
 801df3a:	f8ad 000e 	strh.w	r0, [sp, #14]
 801df3e:	4638      	mov	r0, r7
 801df40:	f8ad 9008 	strh.w	r9, [sp, #8]
 801df44:	f8ad 500c 	strh.w	r5, [sp, #12]
 801df48:	f8ad 800a 	strh.w	r8, [sp, #10]
 801df4c:	f7fa ff36 	bl	8018dbc <_ZNK8touchgfx6Bitmap7getDataEv>
 801df50:	4605      	mov	r5, r0
 801df52:	4638      	mov	r0, r7
 801df54:	f7fa ff62 	bl	8018e1c <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801df58:	4681      	mov	r9, r0
 801df5a:	4638      	mov	r0, r7
 801df5c:	f7fa ffb2 	bl	8018ec4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801df60:	280b      	cmp	r0, #11
 801df62:	d821      	bhi.n	801dfa8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801df64:	e8df f000 	tbb	[pc, r0]
 801df68:	2006aebe 	.word	0x2006aebe
 801df6c:	20202020 	.word	0x20202020
 801df70:	b5202020 	.word	0xb5202020
 801df74:	4bb0      	ldr	r3, [pc, #704]	; (801e238 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801df76:	6818      	ldr	r0, [r3, #0]
 801df78:	6803      	ldr	r3, [r0, #0]
 801df7a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801df7c:	4798      	blx	r3
 801df7e:	2eff      	cmp	r6, #255	; 0xff
 801df80:	d101      	bne.n	801df86 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801df82:	0683      	lsls	r3, r0, #26
 801df84:	d506      	bpl.n	801df94 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801df86:	4633      	mov	r3, r6
 801df88:	4622      	mov	r2, r4
 801df8a:	a902      	add	r1, sp, #8
 801df8c:	4628      	mov	r0, r5
 801df8e:	f7ff f909 	bl	801d1a4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801df92:	e009      	b.n	801dfa8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801df94:	4638      	mov	r0, r7
 801df96:	f7fa fed9 	bl	8018d4c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801df9a:	b940      	cbnz	r0, 801dfae <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801df9c:	4623      	mov	r3, r4
 801df9e:	aa02      	add	r2, sp, #8
 801dfa0:	4629      	mov	r1, r5
 801dfa2:	4650      	mov	r0, sl
 801dfa4:	f7ff f9e4 	bl	801d370 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801dfa8:	b009      	add	sp, #36	; 0x24
 801dfaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dfae:	f10d 0818 	add.w	r8, sp, #24
 801dfb2:	4639      	mov	r1, r7
 801dfb4:	4640      	mov	r0, r8
 801dfb6:	f7fa fe7d 	bl	8018cb4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801dfba:	e898 0003 	ldmia.w	r8, {r0, r1}
 801dfbe:	af04      	add	r7, sp, #16
 801dfc0:	e887 0003 	stmia.w	r7, {r0, r1}
 801dfc4:	4638      	mov	r0, r7
 801dfc6:	4621      	mov	r1, r4
 801dfc8:	f7f2 f8e8 	bl	801019c <_ZN8touchgfx4RectaNERKS0_>
 801dfcc:	4638      	mov	r0, r7
 801dfce:	f7f2 f928 	bl	8010222 <_ZNK8touchgfx4Rect7isEmptyEv>
 801dfd2:	2800      	cmp	r0, #0
 801dfd4:	d1d7      	bne.n	801df86 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801dfd6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801dfda:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801dfde:	4293      	cmp	r3, r2
 801dfe0:	dd12      	ble.n	801e008 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801dfe2:	1a9b      	subs	r3, r3, r2
 801dfe4:	f9b4 0000 	ldrsh.w	r0, [r4]
 801dfe8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801dfec:	f8ad 0018 	strh.w	r0, [sp, #24]
 801dff0:	f8ad 201a 	strh.w	r2, [sp, #26]
 801dff4:	f8ad 101c 	strh.w	r1, [sp, #28]
 801dff8:	f8ad 301e 	strh.w	r3, [sp, #30]
 801dffc:	4642      	mov	r2, r8
 801dffe:	4633      	mov	r3, r6
 801e000:	a902      	add	r1, sp, #8
 801e002:	4628      	mov	r0, r5
 801e004:	f7ff f8ce 	bl	801d1a4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e008:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801e00c:	f9b4 2000 	ldrsh.w	r2, [r4]
 801e010:	4293      	cmp	r3, r2
 801e012:	dd12      	ble.n	801e03a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801e014:	1a9b      	subs	r3, r3, r2
 801e016:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801e01a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801e01e:	f8ad 2018 	strh.w	r2, [sp, #24]
 801e022:	f8ad 001a 	strh.w	r0, [sp, #26]
 801e026:	f8ad 301c 	strh.w	r3, [sp, #28]
 801e02a:	f8ad 101e 	strh.w	r1, [sp, #30]
 801e02e:	23ff      	movs	r3, #255	; 0xff
 801e030:	4642      	mov	r2, r8
 801e032:	a902      	add	r1, sp, #8
 801e034:	4628      	mov	r0, r5
 801e036:	f7ff f8b5 	bl	801d1a4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e03a:	463b      	mov	r3, r7
 801e03c:	aa02      	add	r2, sp, #8
 801e03e:	4629      	mov	r1, r5
 801e040:	4650      	mov	r0, sl
 801e042:	f7ff f995 	bl	801d370 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801e046:	88a2      	ldrh	r2, [r4, #4]
 801e048:	8823      	ldrh	r3, [r4, #0]
 801e04a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801e04e:	4413      	add	r3, r2
 801e050:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801e054:	440a      	add	r2, r1
 801e056:	b29b      	uxth	r3, r3
 801e058:	b292      	uxth	r2, r2
 801e05a:	b211      	sxth	r1, r2
 801e05c:	b218      	sxth	r0, r3
 801e05e:	4288      	cmp	r0, r1
 801e060:	dd12      	ble.n	801e088 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801e062:	1a9b      	subs	r3, r3, r2
 801e064:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801e068:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801e06c:	f8ad 1018 	strh.w	r1, [sp, #24]
 801e070:	f8ad 301c 	strh.w	r3, [sp, #28]
 801e074:	f8ad 001e 	strh.w	r0, [sp, #30]
 801e078:	23ff      	movs	r3, #255	; 0xff
 801e07a:	4642      	mov	r2, r8
 801e07c:	a902      	add	r1, sp, #8
 801e07e:	4628      	mov	r0, r5
 801e080:	f8ad 601a 	strh.w	r6, [sp, #26]
 801e084:	f7ff f88e 	bl	801d1a4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e088:	88e2      	ldrh	r2, [r4, #6]
 801e08a:	8863      	ldrh	r3, [r4, #2]
 801e08c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801e090:	4413      	add	r3, r2
 801e092:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801e096:	440a      	add	r2, r1
 801e098:	b29b      	uxth	r3, r3
 801e09a:	b292      	uxth	r2, r2
 801e09c:	b211      	sxth	r1, r2
 801e09e:	b218      	sxth	r0, r3
 801e0a0:	4288      	cmp	r0, r1
 801e0a2:	dd81      	ble.n	801dfa8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e0a4:	1a9b      	subs	r3, r3, r2
 801e0a6:	f9b4 6000 	ldrsh.w	r6, [r4]
 801e0aa:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801e0ae:	f8ad 301e 	strh.w	r3, [sp, #30]
 801e0b2:	f8ad 6018 	strh.w	r6, [sp, #24]
 801e0b6:	f8ad 101a 	strh.w	r1, [sp, #26]
 801e0ba:	f8ad 001c 	strh.w	r0, [sp, #28]
 801e0be:	23ff      	movs	r3, #255	; 0xff
 801e0c0:	4642      	mov	r2, r8
 801e0c2:	e762      	b.n	801df8a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801e0c4:	4633      	mov	r3, r6
 801e0c6:	4622      	mov	r2, r4
 801e0c8:	a902      	add	r1, sp, #8
 801e0ca:	4628      	mov	r0, r5
 801e0cc:	f7ff f9c0 	bl	801d450 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801e0d0:	e76a      	b.n	801dfa8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e0d2:	e9cd 4600 	strd	r4, r6, [sp]
 801e0d6:	ab02      	add	r3, sp, #8
 801e0d8:	464a      	mov	r2, r9
 801e0da:	4629      	mov	r1, r5
 801e0dc:	4650      	mov	r0, sl
 801e0de:	f7ff fd97 	bl	801dc10 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801e0e2:	e761      	b.n	801dfa8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e0e4:	4638      	mov	r0, r7
 801e0e6:	f7fa fe31 	bl	8018d4c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801e0ea:	b950      	cbnz	r0, 801e102 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801e0ec:	e9cd 6000 	strd	r6, r0, [sp]
 801e0f0:	f8da 3000 	ldr.w	r3, [sl]
 801e0f4:	aa02      	add	r2, sp, #8
 801e0f6:	68de      	ldr	r6, [r3, #12]
 801e0f8:	4629      	mov	r1, r5
 801e0fa:	4623      	mov	r3, r4
 801e0fc:	4650      	mov	r0, sl
 801e0fe:	47b0      	blx	r6
 801e100:	e752      	b.n	801dfa8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e102:	f10d 0818 	add.w	r8, sp, #24
 801e106:	4639      	mov	r1, r7
 801e108:	4640      	mov	r0, r8
 801e10a:	f7fa fdd3 	bl	8018cb4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801e10e:	e898 0003 	ldmia.w	r8, {r0, r1}
 801e112:	af04      	add	r7, sp, #16
 801e114:	e887 0003 	stmia.w	r7, {r0, r1}
 801e118:	4638      	mov	r0, r7
 801e11a:	4621      	mov	r1, r4
 801e11c:	f7f2 f83e 	bl	801019c <_ZN8touchgfx4RectaNERKS0_>
 801e120:	4638      	mov	r0, r7
 801e122:	f7f2 f87e 	bl	8010222 <_ZNK8touchgfx4Rect7isEmptyEv>
 801e126:	b138      	cbz	r0, 801e138 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801e128:	9600      	str	r6, [sp, #0]
 801e12a:	4623      	mov	r3, r4
 801e12c:	aa02      	add	r2, sp, #8
 801e12e:	4649      	mov	r1, r9
 801e130:	4628      	mov	r0, r5
 801e132:	f7ff fdc9 	bl	801dcc8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801e136:	e737      	b.n	801dfa8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e138:	e9cd 6000 	strd	r6, r0, [sp]
 801e13c:	f8da 3000 	ldr.w	r3, [sl]
 801e140:	aa02      	add	r2, sp, #8
 801e142:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801e146:	4629      	mov	r1, r5
 801e148:	463b      	mov	r3, r7
 801e14a:	4650      	mov	r0, sl
 801e14c:	47d8      	blx	fp
 801e14e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e152:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801e156:	4293      	cmp	r3, r2
 801e158:	dd13      	ble.n	801e182 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801e15a:	f9b4 0000 	ldrsh.w	r0, [r4]
 801e15e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801e162:	f8ad 0018 	strh.w	r0, [sp, #24]
 801e166:	1a9b      	subs	r3, r3, r2
 801e168:	f8ad 201a 	strh.w	r2, [sp, #26]
 801e16c:	f8ad 101c 	strh.w	r1, [sp, #28]
 801e170:	f8ad 301e 	strh.w	r3, [sp, #30]
 801e174:	9600      	str	r6, [sp, #0]
 801e176:	4643      	mov	r3, r8
 801e178:	aa02      	add	r2, sp, #8
 801e17a:	4649      	mov	r1, r9
 801e17c:	4628      	mov	r0, r5
 801e17e:	f7ff fda3 	bl	801dcc8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801e182:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801e186:	f9b4 2000 	ldrsh.w	r2, [r4]
 801e18a:	4293      	cmp	r3, r2
 801e18c:	dd13      	ble.n	801e1b6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801e18e:	1a9b      	subs	r3, r3, r2
 801e190:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801e194:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801e198:	f8ad 2018 	strh.w	r2, [sp, #24]
 801e19c:	f8ad 001a 	strh.w	r0, [sp, #26]
 801e1a0:	f8ad 301c 	strh.w	r3, [sp, #28]
 801e1a4:	f8ad 101e 	strh.w	r1, [sp, #30]
 801e1a8:	9600      	str	r6, [sp, #0]
 801e1aa:	4643      	mov	r3, r8
 801e1ac:	aa02      	add	r2, sp, #8
 801e1ae:	4649      	mov	r1, r9
 801e1b0:	4628      	mov	r0, r5
 801e1b2:	f7ff fd89 	bl	801dcc8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801e1b6:	88a2      	ldrh	r2, [r4, #4]
 801e1b8:	8823      	ldrh	r3, [r4, #0]
 801e1ba:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801e1be:	4413      	add	r3, r2
 801e1c0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801e1c4:	440a      	add	r2, r1
 801e1c6:	b29b      	uxth	r3, r3
 801e1c8:	b292      	uxth	r2, r2
 801e1ca:	b211      	sxth	r1, r2
 801e1cc:	b218      	sxth	r0, r3
 801e1ce:	4288      	cmp	r0, r1
 801e1d0:	dd13      	ble.n	801e1fa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801e1d2:	1a9b      	subs	r3, r3, r2
 801e1d4:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801e1d8:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801e1dc:	f8ad 1018 	strh.w	r1, [sp, #24]
 801e1e0:	f8ad 301c 	strh.w	r3, [sp, #28]
 801e1e4:	f8ad 001e 	strh.w	r0, [sp, #30]
 801e1e8:	9600      	str	r6, [sp, #0]
 801e1ea:	4643      	mov	r3, r8
 801e1ec:	aa02      	add	r2, sp, #8
 801e1ee:	4649      	mov	r1, r9
 801e1f0:	4628      	mov	r0, r5
 801e1f2:	f8ad 701a 	strh.w	r7, [sp, #26]
 801e1f6:	f7ff fd67 	bl	801dcc8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801e1fa:	88e2      	ldrh	r2, [r4, #6]
 801e1fc:	8863      	ldrh	r3, [r4, #2]
 801e1fe:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801e202:	4413      	add	r3, r2
 801e204:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801e208:	440a      	add	r2, r1
 801e20a:	b29b      	uxth	r3, r3
 801e20c:	b292      	uxth	r2, r2
 801e20e:	b211      	sxth	r1, r2
 801e210:	b218      	sxth	r0, r3
 801e212:	4288      	cmp	r0, r1
 801e214:	f77f aec8 	ble.w	801dfa8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e218:	f9b4 7000 	ldrsh.w	r7, [r4]
 801e21c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801e220:	f8ad 7018 	strh.w	r7, [sp, #24]
 801e224:	1a9b      	subs	r3, r3, r2
 801e226:	f8ad 301e 	strh.w	r3, [sp, #30]
 801e22a:	f8ad 101a 	strh.w	r1, [sp, #26]
 801e22e:	f8ad 001c 	strh.w	r0, [sp, #28]
 801e232:	9600      	str	r6, [sp, #0]
 801e234:	4643      	mov	r3, r8
 801e236:	e779      	b.n	801e12c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801e238:	20012f24 	.word	0x20012f24

0801e23c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801e23c:	b180      	cbz	r0, 801e260 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801e23e:	2903      	cmp	r1, #3
 801e240:	d81c      	bhi.n	801e27c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801e242:	e8df f001 	tbb	[pc, r1]
 801e246:	1d02      	.short	0x1d02
 801e248:	1f08      	.short	0x1f08
 801e24a:	4b10      	ldr	r3, [pc, #64]	; (801e28c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801e24c:	8818      	ldrh	r0, [r3, #0]
 801e24e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801e252:	4240      	negs	r0, r0
 801e254:	4770      	bx	lr
 801e256:	4b0d      	ldr	r3, [pc, #52]	; (801e28c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801e258:	8818      	ldrh	r0, [r3, #0]
 801e25a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801e25e:	4770      	bx	lr
 801e260:	2903      	cmp	r1, #3
 801e262:	d80b      	bhi.n	801e27c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801e264:	a301      	add	r3, pc, #4	; (adr r3, 801e26c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801e266:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801e26a:	bf00      	nop
 801e26c:	0801e281 	.word	0x0801e281
 801e270:	0801e257 	.word	0x0801e257
 801e274:	0801e285 	.word	0x0801e285
 801e278:	0801e24b 	.word	0x0801e24b
 801e27c:	2000      	movs	r0, #0
 801e27e:	4770      	bx	lr
 801e280:	2001      	movs	r0, #1
 801e282:	4770      	bx	lr
 801e284:	f04f 30ff 	mov.w	r0, #4294967295
 801e288:	4770      	bx	lr
 801e28a:	bf00      	nop
 801e28c:	20012f1e 	.word	0x20012f1e

0801e290 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801e290:	b180      	cbz	r0, 801e2b4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801e292:	2903      	cmp	r1, #3
 801e294:	d81c      	bhi.n	801e2d0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801e296:	e8df f001 	tbb	[pc, r1]
 801e29a:	021d      	.short	0x021d
 801e29c:	071f      	.short	0x071f
 801e29e:	4b10      	ldr	r3, [pc, #64]	; (801e2e0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801e2a0:	8818      	ldrh	r0, [r3, #0]
 801e2a2:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801e2a6:	4770      	bx	lr
 801e2a8:	4b0d      	ldr	r3, [pc, #52]	; (801e2e0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801e2aa:	8818      	ldrh	r0, [r3, #0]
 801e2ac:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801e2b0:	4240      	negs	r0, r0
 801e2b2:	4770      	bx	lr
 801e2b4:	2903      	cmp	r1, #3
 801e2b6:	d80b      	bhi.n	801e2d0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801e2b8:	a301      	add	r3, pc, #4	; (adr r3, 801e2c0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801e2ba:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801e2be:	bf00      	nop
 801e2c0:	0801e29f 	.word	0x0801e29f
 801e2c4:	0801e2d9 	.word	0x0801e2d9
 801e2c8:	0801e2a9 	.word	0x0801e2a9
 801e2cc:	0801e2d5 	.word	0x0801e2d5
 801e2d0:	2000      	movs	r0, #0
 801e2d2:	4770      	bx	lr
 801e2d4:	2001      	movs	r0, #1
 801e2d6:	4770      	bx	lr
 801e2d8:	f04f 30ff 	mov.w	r0, #4294967295
 801e2dc:	4770      	bx	lr
 801e2de:	bf00      	nop
 801e2e0:	20012f1e 	.word	0x20012f1e

0801e2e4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801e2e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e2e8:	b099      	sub	sp, #100	; 0x64
 801e2ea:	910b      	str	r1, [sp, #44]	; 0x2c
 801e2ec:	a914      	add	r1, sp, #80	; 0x50
 801e2ee:	e881 000c 	stmia.w	r1, {r2, r3}
 801e2f2:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801e2f6:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801e2fa:	f891 900d 	ldrb.w	r9, [r1, #13]
 801e2fe:	9309      	str	r3, [sp, #36]	; 0x24
 801e300:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801e304:	9310      	str	r3, [sp, #64]	; 0x40
 801e306:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801e30a:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801e30e:	930c      	str	r3, [sp, #48]	; 0x30
 801e310:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801e314:	798f      	ldrb	r7, [r1, #6]
 801e316:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801e31a:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801e31e:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801e322:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801e326:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801e32a:	431f      	orrs	r7, r3
 801e32c:	f000 8195 	beq.w	801e65a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e330:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801e334:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801e338:	f891 9007 	ldrb.w	r9, [r1, #7]
 801e33c:	ea59 0903 	orrs.w	r9, r9, r3
 801e340:	f000 818b 	beq.w	801e65a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e344:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801e348:	b29b      	uxth	r3, r3
 801e34a:	2d00      	cmp	r5, #0
 801e34c:	f000 812e 	beq.w	801e5ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801e350:	1aed      	subs	r5, r5, r3
 801e352:	b2ad      	uxth	r5, r5
 801e354:	042b      	lsls	r3, r5, #16
 801e356:	d502      	bpl.n	801e35e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801e358:	1b64      	subs	r4, r4, r5
 801e35a:	b224      	sxth	r4, r4
 801e35c:	2500      	movs	r5, #0
 801e35e:	f9b2 1000 	ldrsh.w	r1, [r2]
 801e362:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801e366:	428c      	cmp	r4, r1
 801e368:	b28b      	uxth	r3, r1
 801e36a:	bfbf      	itttt	lt
 801e36c:	18ed      	addlt	r5, r5, r3
 801e36e:	1b2c      	sublt	r4, r5, r4
 801e370:	b2a5      	uxthlt	r5, r4
 801e372:	460c      	movlt	r4, r1
 801e374:	8891      	ldrh	r1, [r2, #4]
 801e376:	440b      	add	r3, r1
 801e378:	b21b      	sxth	r3, r3
 801e37a:	930f      	str	r3, [sp, #60]	; 0x3c
 801e37c:	88d3      	ldrh	r3, [r2, #6]
 801e37e:	8852      	ldrh	r2, [r2, #2]
 801e380:	4413      	add	r3, r2
 801e382:	b21b      	sxth	r3, r3
 801e384:	930d      	str	r3, [sp, #52]	; 0x34
 801e386:	4bbe      	ldr	r3, [pc, #760]	; (801e680 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801e388:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e38a:	f893 b000 	ldrb.w	fp, [r3]
 801e38e:	f10b 3cff 	add.w	ip, fp, #4294967295
 801e392:	f1dc 0300 	rsbs	r3, ip, #0
 801e396:	eb43 030c 	adc.w	r3, r3, ip
 801e39a:	930e      	str	r3, [sp, #56]	; 0x38
 801e39c:	4621      	mov	r1, r4
 801e39e:	4653      	mov	r3, sl
 801e3a0:	a814      	add	r0, sp, #80	; 0x50
 801e3a2:	f7f6 fcce 	bl	8014d42 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801e3a6:	4621      	mov	r1, r4
 801e3a8:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801e3ac:	4653      	mov	r3, sl
 801e3ae:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e3b0:	a814      	add	r0, sp, #80	; 0x50
 801e3b2:	f7f6 fce3 	bl	8014d7c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801e3b6:	a918      	add	r1, sp, #96	; 0x60
 801e3b8:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801e3bc:	a817      	add	r0, sp, #92	; 0x5c
 801e3be:	f7f6 fe09 	bl	8014fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801e3c2:	f1ba 0f00 	cmp.w	sl, #0
 801e3c6:	f040 80f4 	bne.w	801e5b2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801e3ca:	f1bb 0f01 	cmp.w	fp, #1
 801e3ce:	f040 80f8 	bne.w	801e5c2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801e3d2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e3d4:	2b00      	cmp	r3, #0
 801e3d6:	f040 8145 	bne.w	801e664 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801e3da:	b2ba      	uxth	r2, r7
 801e3dc:	b905      	cbnz	r5, 801e3e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801e3de:	b16e      	cbz	r6, 801e3fc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801e3e0:	fb06 5302 	mla	r3, r6, r2, r5
 801e3e4:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801e3e6:	fb08 f303 	mul.w	r3, r8, r3
 801e3ea:	4631      	mov	r1, r6
 801e3ec:	f003 0607 	and.w	r6, r3, #7
 801e3f0:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801e3f4:	9328      	str	r3, [sp, #160]	; 0xa0
 801e3f6:	eba9 0301 	sub.w	r3, r9, r1
 801e3fa:	930a      	str	r3, [sp, #40]	; 0x28
 801e3fc:	4651      	mov	r1, sl
 801e3fe:	980e      	ldr	r0, [sp, #56]	; 0x38
 801e400:	f7ff ff1c 	bl	801e23c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801e404:	4681      	mov	r9, r0
 801e406:	980e      	ldr	r0, [sp, #56]	; 0x38
 801e408:	f7ff ff42 	bl	801e290 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801e40c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e40e:	9909      	ldr	r1, [sp, #36]	; 0x24
 801e410:	eba3 0a01 	sub.w	sl, r3, r1
 801e414:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e416:	459a      	cmp	sl, r3
 801e418:	bfa8      	it	ge
 801e41a:	469a      	movge	sl, r3
 801e41c:	f1ba 0f00 	cmp.w	sl, #0
 801e420:	4683      	mov	fp, r0
 801e422:	f340 811a 	ble.w	801e65a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e426:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801e428:	1b64      	subs	r4, r4, r5
 801e42a:	1b1c      	subs	r4, r3, r4
 801e42c:	42bc      	cmp	r4, r7
 801e42e:	bfd4      	ite	le
 801e430:	ebc5 0504 	rsble	r5, r5, r4
 801e434:	ebc5 0507 	rsbgt	r5, r5, r7
 801e438:	2d00      	cmp	r5, #0
 801e43a:	f340 810e 	ble.w	801e65a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e43e:	1b52      	subs	r2, r2, r5
 801e440:	fb08 f302 	mul.w	r3, r8, r2
 801e444:	930f      	str	r3, [sp, #60]	; 0x3c
 801e446:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e448:	2b00      	cmp	r3, #0
 801e44a:	f040 8116 	bne.w	801e67a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801e44e:	4b8d      	ldr	r3, [pc, #564]	; (801e684 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801e450:	6818      	ldr	r0, [r3, #0]
 801e452:	6803      	ldr	r3, [r0, #0]
 801e454:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e456:	4798      	blx	r3
 801e458:	2301      	movs	r3, #1
 801e45a:	fa03 f308 	lsl.w	r3, r3, r8
 801e45e:	4a8a      	ldr	r2, [pc, #552]	; (801e688 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801e460:	3b01      	subs	r3, #1
 801e462:	b2db      	uxtb	r3, r3
 801e464:	8811      	ldrh	r1, [r2, #0]
 801e466:	930e      	str	r3, [sp, #56]	; 0x38
 801e468:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801e46c:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801e470:	fb01 2303 	mla	r3, r1, r3, r2
 801e474:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801e478:	930a      	str	r3, [sp, #40]	; 0x28
 801e47a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e47c:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801e480:	9313      	str	r3, [sp, #76]	; 0x4c
 801e482:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e484:	0a19      	lsrs	r1, r3, #8
 801e486:	b2cb      	uxtb	r3, r1
 801e488:	9312      	str	r3, [sp, #72]	; 0x48
 801e48a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e48c:	b2db      	uxtb	r3, r3
 801e48e:	9311      	str	r3, [sp, #68]	; 0x44
 801e490:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e492:	095a      	lsrs	r2, r3, #5
 801e494:	4b7d      	ldr	r3, [pc, #500]	; (801e68c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801e496:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e49a:	400b      	ands	r3, r1
 801e49c:	4313      	orrs	r3, r2
 801e49e:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801e4a0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e4a4:	4313      	orrs	r3, r2
 801e4a6:	b29b      	uxth	r3, r3
 801e4a8:	9310      	str	r3, [sp, #64]	; 0x40
 801e4aa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e4ac:	781a      	ldrb	r2, [r3, #0]
 801e4ae:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801e4b2:	4132      	asrs	r2, r6
 801e4b4:	fb05 b919 	mls	r9, r5, r9, fp
 801e4b8:	fb03 fb05 	mul.w	fp, r3, r5
 801e4bc:	b2d2      	uxtb	r2, r2
 801e4be:	930d      	str	r3, [sp, #52]	; 0x34
 801e4c0:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801e4c4:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801e4c8:	f0c0 80f5 	bcc.w	801e6b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801e4cc:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801e4d0:	46ae      	mov	lr, r5
 801e4d2:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801e4d6:	f0c0 80dd 	bcc.w	801e694 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801e4da:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e4dc:	4013      	ands	r3, r2
 801e4de:	d055      	beq.n	801e58c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801e4e0:	20ff      	movs	r0, #255	; 0xff
 801e4e2:	990e      	ldr	r1, [sp, #56]	; 0x38
 801e4e4:	fb90 f1f1 	sdiv	r1, r0, r1
 801e4e8:	434b      	muls	r3, r1
 801e4ea:	2bfe      	cmp	r3, #254	; 0xfe
 801e4ec:	dd03      	ble.n	801e4f6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801e4ee:	990c      	ldr	r1, [sp, #48]	; 0x30
 801e4f0:	4281      	cmp	r1, r0
 801e4f2:	f000 80cd 	beq.w	801e690 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801e4f6:	990c      	ldr	r1, [sp, #48]	; 0x30
 801e4f8:	f8bc 4000 	ldrh.w	r4, [ip]
 801e4fc:	fb11 f303 	smulbb	r3, r1, r3
 801e500:	b29b      	uxth	r3, r3
 801e502:	1c59      	adds	r1, r3, #1
 801e504:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801e508:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e50c:	b29f      	uxth	r7, r3
 801e50e:	43db      	mvns	r3, r3
 801e510:	b2db      	uxtb	r3, r3
 801e512:	9309      	str	r3, [sp, #36]	; 0x24
 801e514:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801e516:	1220      	asrs	r0, r4, #8
 801e518:	fb13 f907 	smulbb	r9, r3, r7
 801e51c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801e520:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e522:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801e526:	fb00 9003 	mla	r0, r0, r3, r9
 801e52a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801e52c:	10e1      	asrs	r1, r4, #3
 801e52e:	fb13 f907 	smulbb	r9, r3, r7
 801e532:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801e536:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e538:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801e53c:	fb01 9103 	mla	r1, r1, r3, r9
 801e540:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e542:	00e4      	lsls	r4, r4, #3
 801e544:	fb13 f707 	smulbb	r7, r3, r7
 801e548:	b2e4      	uxtb	r4, r4
 801e54a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e54c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801e550:	fb04 7403 	mla	r4, r4, r3, r7
 801e554:	b280      	uxth	r0, r0
 801e556:	b2a4      	uxth	r4, r4
 801e558:	1c43      	adds	r3, r0, #1
 801e55a:	f104 0901 	add.w	r9, r4, #1
 801e55e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801e562:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801e566:	b289      	uxth	r1, r1
 801e568:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801e56c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801e570:	ea49 0000 	orr.w	r0, r9, r0
 801e574:	f101 0901 	add.w	r9, r1, #1
 801e578:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801e57c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801e580:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801e584:	ea40 0009 	orr.w	r0, r0, r9
 801e588:	f8ac 0000 	strh.w	r0, [ip]
 801e58c:	4446      	add	r6, r8
 801e58e:	b2b6      	uxth	r6, r6
 801e590:	2e07      	cmp	r6, #7
 801e592:	bf81      	itttt	hi
 801e594:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801e596:	785a      	ldrbhi	r2, [r3, #1]
 801e598:	3301      	addhi	r3, #1
 801e59a:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801e59c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e59e:	bf9a      	itte	ls
 801e5a0:	fa42 f208 	asrls.w	r2, r2, r8
 801e5a4:	b2d2      	uxtbls	r2, r2
 801e5a6:	2600      	movhi	r6, #0
 801e5a8:	449c      	add	ip, r3
 801e5aa:	e792      	b.n	801e4d2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801e5ac:	441c      	add	r4, r3
 801e5ae:	b224      	sxth	r4, r4
 801e5b0:	e6d5      	b.n	801e35e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801e5b2:	f1ba 0f01 	cmp.w	sl, #1
 801e5b6:	f47f af0c 	bne.w	801e3d2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e5ba:	f1bb 0f01 	cmp.w	fp, #1
 801e5be:	f47f af08 	bne.w	801e3d2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e5c2:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801e684 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801e5c6:	f8db 0000 	ldr.w	r0, [fp]
 801e5ca:	6803      	ldr	r3, [r0, #0]
 801e5cc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e5ce:	4798      	blx	r3
 801e5d0:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801e5d4:	465a      	mov	r2, fp
 801e5d6:	d006      	beq.n	801e5e6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801e5d8:	f1b8 0f04 	cmp.w	r8, #4
 801e5dc:	d140      	bne.n	801e660 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801e5de:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e5e0:	3300      	adds	r3, #0
 801e5e2:	bf18      	it	ne
 801e5e4:	2301      	movne	r3, #1
 801e5e6:	0580      	lsls	r0, r0, #22
 801e5e8:	d56e      	bpl.n	801e6c8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801e5ea:	f1b8 0f08 	cmp.w	r8, #8
 801e5ee:	d16b      	bne.n	801e6c8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801e5f0:	2b00      	cmp	r3, #0
 801e5f2:	bf0c      	ite	eq
 801e5f4:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801e5f8:	f44f 7180 	movne.w	r1, #256	; 0x100
 801e5fc:	2d00      	cmp	r5, #0
 801e5fe:	f47f aee8 	bne.w	801e3d2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e602:	2e00      	cmp	r6, #0
 801e604:	f47f aee5 	bne.w	801e3d2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e608:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801e60a:	19e3      	adds	r3, r4, r7
 801e60c:	4283      	cmp	r3, r0
 801e60e:	f73f aee0 	bgt.w	801e3d2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e612:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e614:	980d      	ldr	r0, [sp, #52]	; 0x34
 801e616:	444b      	add	r3, r9
 801e618:	4283      	cmp	r3, r0
 801e61a:	f73f aeda 	bgt.w	801e3d2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e61e:	6810      	ldr	r0, [r2, #0]
 801e620:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801e624:	6804      	ldr	r4, [r0, #0]
 801e626:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801e62a:	b2bf      	uxth	r7, r7
 801e62c:	f1b8 0f08 	cmp.w	r8, #8
 801e630:	f04f 0500 	mov.w	r5, #0
 801e634:	bf18      	it	ne
 801e636:	3701      	addne	r7, #1
 801e638:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801e63c:	990c      	ldr	r1, [sp, #48]	; 0x30
 801e63e:	9104      	str	r1, [sp, #16]
 801e640:	bf18      	it	ne
 801e642:	f027 0701 	bicne.w	r7, r7, #1
 801e646:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801e648:	bf18      	it	ne
 801e64a:	b2bf      	uxthne	r7, r7
 801e64c:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801e650:	e9cd 7900 	strd	r7, r9, [sp]
 801e654:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801e656:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801e658:	47a0      	blx	r4
 801e65a:	b019      	add	sp, #100	; 0x64
 801e65c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e660:	2300      	movs	r3, #0
 801e662:	e7c0      	b.n	801e5e6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801e664:	2208      	movs	r2, #8
 801e666:	fb92 f3f8 	sdiv	r3, r2, r8
 801e66a:	1e5a      	subs	r2, r3, #1
 801e66c:	443a      	add	r2, r7
 801e66e:	fb92 f2f3 	sdiv	r2, r2, r3
 801e672:	fb12 f203 	smulbb	r2, r2, r3
 801e676:	b292      	uxth	r2, r2
 801e678:	e6b0      	b.n	801e3dc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801e67a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801e67c:	e6ec      	b.n	801e458 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801e67e:	bf00      	nop
 801e680:	20012f1c 	.word	0x20012f1c
 801e684:	20012f24 	.word	0x20012f24
 801e688:	20012f1e 	.word	0x20012f1e
 801e68c:	00fff800 	.word	0x00fff800
 801e690:	9810      	ldr	r0, [sp, #64]	; 0x40
 801e692:	e779      	b.n	801e588 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801e694:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801e696:	b153      	cbz	r3, 801e6ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801e698:	441e      	add	r6, r3
 801e69a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e69c:	b2b6      	uxth	r6, r6
 801e69e:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801e6a2:	f006 0607 	and.w	r6, r6, #7
 801e6a6:	781a      	ldrb	r2, [r3, #0]
 801e6a8:	9328      	str	r3, [sp, #160]	; 0xa0
 801e6aa:	4132      	asrs	r2, r6
 801e6ac:	b2d2      	uxtb	r2, r2
 801e6ae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e6b0:	445b      	add	r3, fp
 801e6b2:	930a      	str	r3, [sp, #40]	; 0x28
 801e6b4:	e706      	b.n	801e4c4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801e6b6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e6b8:	2b00      	cmp	r3, #0
 801e6ba:	d1ce      	bne.n	801e65a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e6bc:	4b05      	ldr	r3, [pc, #20]	; (801e6d4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801e6be:	6818      	ldr	r0, [r3, #0]
 801e6c0:	6803      	ldr	r3, [r0, #0]
 801e6c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e6c4:	4798      	blx	r3
 801e6c6:	e7c8      	b.n	801e65a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e6c8:	2b00      	cmp	r3, #0
 801e6ca:	f43f ae82 	beq.w	801e3d2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e6ce:	f44f 7180 	mov.w	r1, #256	; 0x100
 801e6d2:	e793      	b.n	801e5fc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801e6d4:	20012f24 	.word	0x20012f24

0801e6d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801e6d8:	b538      	push	{r3, r4, r5, lr}
 801e6da:	4c15      	ldr	r4, [pc, #84]	; (801e730 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801e6dc:	7823      	ldrb	r3, [r4, #0]
 801e6de:	f3bf 8f5b 	dmb	ish
 801e6e2:	07da      	lsls	r2, r3, #31
 801e6e4:	4605      	mov	r5, r0
 801e6e6:	d40b      	bmi.n	801e700 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801e6e8:	4620      	mov	r0, r4
 801e6ea:	f00a fee2 	bl	80294b2 <__cxa_guard_acquire>
 801e6ee:	b138      	cbz	r0, 801e700 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801e6f0:	4620      	mov	r0, r4
 801e6f2:	f00a feea 	bl	80294ca <__cxa_guard_release>
 801e6f6:	4a0f      	ldr	r2, [pc, #60]	; (801e734 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801e6f8:	490f      	ldr	r1, [pc, #60]	; (801e738 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801e6fa:	4810      	ldr	r0, [pc, #64]	; (801e73c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801e6fc:	f00a fed2 	bl	80294a4 <__aeabi_atexit>
 801e700:	4c0f      	ldr	r4, [pc, #60]	; (801e740 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801e702:	7823      	ldrb	r3, [r4, #0]
 801e704:	f3bf 8f5b 	dmb	ish
 801e708:	07db      	lsls	r3, r3, #31
 801e70a:	d40b      	bmi.n	801e724 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801e70c:	4620      	mov	r0, r4
 801e70e:	f00a fed0 	bl	80294b2 <__cxa_guard_acquire>
 801e712:	b138      	cbz	r0, 801e724 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801e714:	4620      	mov	r0, r4
 801e716:	f00a fed8 	bl	80294ca <__cxa_guard_release>
 801e71a:	4a06      	ldr	r2, [pc, #24]	; (801e734 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801e71c:	4909      	ldr	r1, [pc, #36]	; (801e744 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801e71e:	480a      	ldr	r0, [pc, #40]	; (801e748 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801e720:	f00a fec0 	bl	80294a4 <__aeabi_atexit>
 801e724:	4b05      	ldr	r3, [pc, #20]	; (801e73c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801e726:	612b      	str	r3, [r5, #16]
 801e728:	4b07      	ldr	r3, [pc, #28]	; (801e748 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801e72a:	616b      	str	r3, [r5, #20]
 801e72c:	bd38      	pop	{r3, r4, r5, pc}
 801e72e:	bf00      	nop
 801e730:	20013004 	.word	0x20013004
 801e734:	20000000 	.word	0x20000000
 801e738:	0801b4db 	.word	0x0801b4db
 801e73c:	200000d4 	.word	0x200000d4
 801e740:	20013008 	.word	0x20013008
 801e744:	0801b4d9 	.word	0x0801b4d9
 801e748:	200000d8 	.word	0x200000d8

0801e74c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801e74c:	b538      	push	{r3, r4, r5, lr}
 801e74e:	4c15      	ldr	r4, [pc, #84]	; (801e7a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801e750:	7823      	ldrb	r3, [r4, #0]
 801e752:	f3bf 8f5b 	dmb	ish
 801e756:	07da      	lsls	r2, r3, #31
 801e758:	4605      	mov	r5, r0
 801e75a:	d40b      	bmi.n	801e774 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801e75c:	4620      	mov	r0, r4
 801e75e:	f00a fea8 	bl	80294b2 <__cxa_guard_acquire>
 801e762:	b138      	cbz	r0, 801e774 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801e764:	4620      	mov	r0, r4
 801e766:	f00a feb0 	bl	80294ca <__cxa_guard_release>
 801e76a:	4a0f      	ldr	r2, [pc, #60]	; (801e7a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801e76c:	490f      	ldr	r1, [pc, #60]	; (801e7ac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801e76e:	4810      	ldr	r0, [pc, #64]	; (801e7b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801e770:	f00a fe98 	bl	80294a4 <__aeabi_atexit>
 801e774:	4c0f      	ldr	r4, [pc, #60]	; (801e7b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801e776:	7823      	ldrb	r3, [r4, #0]
 801e778:	f3bf 8f5b 	dmb	ish
 801e77c:	07db      	lsls	r3, r3, #31
 801e77e:	d40b      	bmi.n	801e798 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801e780:	4620      	mov	r0, r4
 801e782:	f00a fe96 	bl	80294b2 <__cxa_guard_acquire>
 801e786:	b138      	cbz	r0, 801e798 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801e788:	4620      	mov	r0, r4
 801e78a:	f00a fe9e 	bl	80294ca <__cxa_guard_release>
 801e78e:	4a06      	ldr	r2, [pc, #24]	; (801e7a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801e790:	4909      	ldr	r1, [pc, #36]	; (801e7b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801e792:	480a      	ldr	r0, [pc, #40]	; (801e7bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801e794:	f00a fe86 	bl	80294a4 <__aeabi_atexit>
 801e798:	4b05      	ldr	r3, [pc, #20]	; (801e7b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801e79a:	60ab      	str	r3, [r5, #8]
 801e79c:	4b07      	ldr	r3, [pc, #28]	; (801e7bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801e79e:	60eb      	str	r3, [r5, #12]
 801e7a0:	bd38      	pop	{r3, r4, r5, pc}
 801e7a2:	bf00      	nop
 801e7a4:	20012fdc 	.word	0x20012fdc
 801e7a8:	20000000 	.word	0x20000000
 801e7ac:	0801b4df 	.word	0x0801b4df
 801e7b0:	200000ac 	.word	0x200000ac
 801e7b4:	20012fe0 	.word	0x20012fe0
 801e7b8:	0801b4dd 	.word	0x0801b4dd
 801e7bc:	200000b0 	.word	0x200000b0

0801e7c0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801e7c0:	b510      	push	{r4, lr}
 801e7c2:	4604      	mov	r4, r0
 801e7c4:	f7ff ff88 	bl	801e6d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801e7c8:	4620      	mov	r0, r4
 801e7ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e7ce:	f7ff bfbd 	b.w	801e74c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801e7d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801e7d4:	b538      	push	{r3, r4, r5, lr}
 801e7d6:	4c15      	ldr	r4, [pc, #84]	; (801e82c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801e7d8:	7823      	ldrb	r3, [r4, #0]
 801e7da:	f3bf 8f5b 	dmb	ish
 801e7de:	07da      	lsls	r2, r3, #31
 801e7e0:	4605      	mov	r5, r0
 801e7e2:	d40b      	bmi.n	801e7fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801e7e4:	4620      	mov	r0, r4
 801e7e6:	f00a fe64 	bl	80294b2 <__cxa_guard_acquire>
 801e7ea:	b138      	cbz	r0, 801e7fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801e7ec:	4620      	mov	r0, r4
 801e7ee:	f00a fe6c 	bl	80294ca <__cxa_guard_release>
 801e7f2:	4a0f      	ldr	r2, [pc, #60]	; (801e830 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801e7f4:	490f      	ldr	r1, [pc, #60]	; (801e834 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801e7f6:	4810      	ldr	r0, [pc, #64]	; (801e838 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801e7f8:	f00a fe54 	bl	80294a4 <__aeabi_atexit>
 801e7fc:	4c0f      	ldr	r4, [pc, #60]	; (801e83c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801e7fe:	7823      	ldrb	r3, [r4, #0]
 801e800:	f3bf 8f5b 	dmb	ish
 801e804:	07db      	lsls	r3, r3, #31
 801e806:	d40b      	bmi.n	801e820 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801e808:	4620      	mov	r0, r4
 801e80a:	f00a fe52 	bl	80294b2 <__cxa_guard_acquire>
 801e80e:	b138      	cbz	r0, 801e820 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801e810:	4620      	mov	r0, r4
 801e812:	f00a fe5a 	bl	80294ca <__cxa_guard_release>
 801e816:	4a06      	ldr	r2, [pc, #24]	; (801e830 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801e818:	4909      	ldr	r1, [pc, #36]	; (801e840 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801e81a:	480a      	ldr	r0, [pc, #40]	; (801e844 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801e81c:	f00a fe42 	bl	80294a4 <__aeabi_atexit>
 801e820:	4b05      	ldr	r3, [pc, #20]	; (801e838 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801e822:	622b      	str	r3, [r5, #32]
 801e824:	4b07      	ldr	r3, [pc, #28]	; (801e844 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801e826:	626b      	str	r3, [r5, #36]	; 0x24
 801e828:	bd38      	pop	{r3, r4, r5, pc}
 801e82a:	bf00      	nop
 801e82c:	2001300c 	.word	0x2001300c
 801e830:	20000000 	.word	0x20000000
 801e834:	0801b4d3 	.word	0x0801b4d3
 801e838:	200000dc 	.word	0x200000dc
 801e83c:	20013010 	.word	0x20013010
 801e840:	0801b4d1 	.word	0x0801b4d1
 801e844:	200000e0 	.word	0x200000e0

0801e848 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801e848:	b538      	push	{r3, r4, r5, lr}
 801e84a:	4c15      	ldr	r4, [pc, #84]	; (801e8a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801e84c:	7823      	ldrb	r3, [r4, #0]
 801e84e:	f3bf 8f5b 	dmb	ish
 801e852:	07da      	lsls	r2, r3, #31
 801e854:	4605      	mov	r5, r0
 801e856:	d40b      	bmi.n	801e870 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801e858:	4620      	mov	r0, r4
 801e85a:	f00a fe2a 	bl	80294b2 <__cxa_guard_acquire>
 801e85e:	b138      	cbz	r0, 801e870 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801e860:	4620      	mov	r0, r4
 801e862:	f00a fe32 	bl	80294ca <__cxa_guard_release>
 801e866:	4a0f      	ldr	r2, [pc, #60]	; (801e8a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801e868:	490f      	ldr	r1, [pc, #60]	; (801e8a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801e86a:	4810      	ldr	r0, [pc, #64]	; (801e8ac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801e86c:	f00a fe1a 	bl	80294a4 <__aeabi_atexit>
 801e870:	4c0f      	ldr	r4, [pc, #60]	; (801e8b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801e872:	7823      	ldrb	r3, [r4, #0]
 801e874:	f3bf 8f5b 	dmb	ish
 801e878:	07db      	lsls	r3, r3, #31
 801e87a:	d40b      	bmi.n	801e894 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801e87c:	4620      	mov	r0, r4
 801e87e:	f00a fe18 	bl	80294b2 <__cxa_guard_acquire>
 801e882:	b138      	cbz	r0, 801e894 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801e884:	4620      	mov	r0, r4
 801e886:	f00a fe20 	bl	80294ca <__cxa_guard_release>
 801e88a:	4a06      	ldr	r2, [pc, #24]	; (801e8a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801e88c:	4909      	ldr	r1, [pc, #36]	; (801e8b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801e88e:	480a      	ldr	r0, [pc, #40]	; (801e8b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801e890:	f00a fe08 	bl	80294a4 <__aeabi_atexit>
 801e894:	4b05      	ldr	r3, [pc, #20]	; (801e8ac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801e896:	61ab      	str	r3, [r5, #24]
 801e898:	4b07      	ldr	r3, [pc, #28]	; (801e8b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801e89a:	61eb      	str	r3, [r5, #28]
 801e89c:	bd38      	pop	{r3, r4, r5, pc}
 801e89e:	bf00      	nop
 801e8a0:	20012fe4 	.word	0x20012fe4
 801e8a4:	20000000 	.word	0x20000000
 801e8a8:	0801b4d7 	.word	0x0801b4d7
 801e8ac:	200000b4 	.word	0x200000b4
 801e8b0:	20012fe8 	.word	0x20012fe8
 801e8b4:	0801b4d5 	.word	0x0801b4d5
 801e8b8:	200000b8 	.word	0x200000b8

0801e8bc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801e8bc:	b510      	push	{r4, lr}
 801e8be:	4604      	mov	r4, r0
 801e8c0:	f7ff ff88 	bl	801e7d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801e8c4:	4620      	mov	r0, r4
 801e8c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e8ca:	f7ff bfbd 	b.w	801e848 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801e8d0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801e8d0:	b538      	push	{r3, r4, r5, lr}
 801e8d2:	4c15      	ldr	r4, [pc, #84]	; (801e928 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801e8d4:	7823      	ldrb	r3, [r4, #0]
 801e8d6:	f3bf 8f5b 	dmb	ish
 801e8da:	07da      	lsls	r2, r3, #31
 801e8dc:	4605      	mov	r5, r0
 801e8de:	d40b      	bmi.n	801e8f8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801e8e0:	4620      	mov	r0, r4
 801e8e2:	f00a fde6 	bl	80294b2 <__cxa_guard_acquire>
 801e8e6:	b138      	cbz	r0, 801e8f8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801e8e8:	4620      	mov	r0, r4
 801e8ea:	f00a fdee 	bl	80294ca <__cxa_guard_release>
 801e8ee:	4a0f      	ldr	r2, [pc, #60]	; (801e92c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801e8f0:	490f      	ldr	r1, [pc, #60]	; (801e930 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801e8f2:	4810      	ldr	r0, [pc, #64]	; (801e934 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801e8f4:	f00a fdd6 	bl	80294a4 <__aeabi_atexit>
 801e8f8:	4c0f      	ldr	r4, [pc, #60]	; (801e938 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801e8fa:	7823      	ldrb	r3, [r4, #0]
 801e8fc:	f3bf 8f5b 	dmb	ish
 801e900:	07db      	lsls	r3, r3, #31
 801e902:	d40b      	bmi.n	801e91c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801e904:	4620      	mov	r0, r4
 801e906:	f00a fdd4 	bl	80294b2 <__cxa_guard_acquire>
 801e90a:	b138      	cbz	r0, 801e91c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801e90c:	4620      	mov	r0, r4
 801e90e:	f00a fddc 	bl	80294ca <__cxa_guard_release>
 801e912:	4a06      	ldr	r2, [pc, #24]	; (801e92c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801e914:	4909      	ldr	r1, [pc, #36]	; (801e93c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801e916:	480a      	ldr	r0, [pc, #40]	; (801e940 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801e918:	f00a fdc4 	bl	80294a4 <__aeabi_atexit>
 801e91c:	4b05      	ldr	r3, [pc, #20]	; (801e934 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801e91e:	632b      	str	r3, [r5, #48]	; 0x30
 801e920:	4b07      	ldr	r3, [pc, #28]	; (801e940 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801e922:	636b      	str	r3, [r5, #52]	; 0x34
 801e924:	bd38      	pop	{r3, r4, r5, pc}
 801e926:	bf00      	nop
 801e928:	2001301c 	.word	0x2001301c
 801e92c:	20000000 	.word	0x20000000
 801e930:	0801b4cb 	.word	0x0801b4cb
 801e934:	200000ec 	.word	0x200000ec
 801e938:	20013020 	.word	0x20013020
 801e93c:	0801b4c9 	.word	0x0801b4c9
 801e940:	200000f0 	.word	0x200000f0

0801e944 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801e944:	b538      	push	{r3, r4, r5, lr}
 801e946:	4c15      	ldr	r4, [pc, #84]	; (801e99c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801e948:	7823      	ldrb	r3, [r4, #0]
 801e94a:	f3bf 8f5b 	dmb	ish
 801e94e:	07da      	lsls	r2, r3, #31
 801e950:	4605      	mov	r5, r0
 801e952:	d40b      	bmi.n	801e96c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801e954:	4620      	mov	r0, r4
 801e956:	f00a fdac 	bl	80294b2 <__cxa_guard_acquire>
 801e95a:	b138      	cbz	r0, 801e96c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801e95c:	4620      	mov	r0, r4
 801e95e:	f00a fdb4 	bl	80294ca <__cxa_guard_release>
 801e962:	4a0f      	ldr	r2, [pc, #60]	; (801e9a0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801e964:	490f      	ldr	r1, [pc, #60]	; (801e9a4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801e966:	4810      	ldr	r0, [pc, #64]	; (801e9a8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801e968:	f00a fd9c 	bl	80294a4 <__aeabi_atexit>
 801e96c:	4c0f      	ldr	r4, [pc, #60]	; (801e9ac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801e96e:	7823      	ldrb	r3, [r4, #0]
 801e970:	f3bf 8f5b 	dmb	ish
 801e974:	07db      	lsls	r3, r3, #31
 801e976:	d40b      	bmi.n	801e990 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801e978:	4620      	mov	r0, r4
 801e97a:	f00a fd9a 	bl	80294b2 <__cxa_guard_acquire>
 801e97e:	b138      	cbz	r0, 801e990 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801e980:	4620      	mov	r0, r4
 801e982:	f00a fda2 	bl	80294ca <__cxa_guard_release>
 801e986:	4a06      	ldr	r2, [pc, #24]	; (801e9a0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801e988:	4909      	ldr	r1, [pc, #36]	; (801e9b0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801e98a:	480a      	ldr	r0, [pc, #40]	; (801e9b4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801e98c:	f00a fd8a 	bl	80294a4 <__aeabi_atexit>
 801e990:	4b05      	ldr	r3, [pc, #20]	; (801e9a8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801e992:	62ab      	str	r3, [r5, #40]	; 0x28
 801e994:	4b07      	ldr	r3, [pc, #28]	; (801e9b4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801e996:	62eb      	str	r3, [r5, #44]	; 0x2c
 801e998:	bd38      	pop	{r3, r4, r5, pc}
 801e99a:	bf00      	nop
 801e99c:	20012fec 	.word	0x20012fec
 801e9a0:	20000000 	.word	0x20000000
 801e9a4:	0801b4cf 	.word	0x0801b4cf
 801e9a8:	200000bc 	.word	0x200000bc
 801e9ac:	20012ff0 	.word	0x20012ff0
 801e9b0:	0801b4cd 	.word	0x0801b4cd
 801e9b4:	200000c0 	.word	0x200000c0

0801e9b8 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801e9b8:	b510      	push	{r4, lr}
 801e9ba:	4604      	mov	r4, r0
 801e9bc:	f7ff ff88 	bl	801e8d0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801e9c0:	4620      	mov	r0, r4
 801e9c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e9c6:	f7ff bfbd 	b.w	801e944 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801e9cc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801e9cc:	b538      	push	{r3, r4, r5, lr}
 801e9ce:	4c15      	ldr	r4, [pc, #84]	; (801ea24 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801e9d0:	7823      	ldrb	r3, [r4, #0]
 801e9d2:	f3bf 8f5b 	dmb	ish
 801e9d6:	07da      	lsls	r2, r3, #31
 801e9d8:	4605      	mov	r5, r0
 801e9da:	d40b      	bmi.n	801e9f4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801e9dc:	4620      	mov	r0, r4
 801e9de:	f00a fd68 	bl	80294b2 <__cxa_guard_acquire>
 801e9e2:	b138      	cbz	r0, 801e9f4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801e9e4:	4620      	mov	r0, r4
 801e9e6:	f00a fd70 	bl	80294ca <__cxa_guard_release>
 801e9ea:	4a0f      	ldr	r2, [pc, #60]	; (801ea28 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801e9ec:	490f      	ldr	r1, [pc, #60]	; (801ea2c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801e9ee:	4810      	ldr	r0, [pc, #64]	; (801ea30 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801e9f0:	f00a fd58 	bl	80294a4 <__aeabi_atexit>
 801e9f4:	4c0f      	ldr	r4, [pc, #60]	; (801ea34 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801e9f6:	7823      	ldrb	r3, [r4, #0]
 801e9f8:	f3bf 8f5b 	dmb	ish
 801e9fc:	07db      	lsls	r3, r3, #31
 801e9fe:	d40b      	bmi.n	801ea18 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801ea00:	4620      	mov	r0, r4
 801ea02:	f00a fd56 	bl	80294b2 <__cxa_guard_acquire>
 801ea06:	b138      	cbz	r0, 801ea18 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801ea08:	4620      	mov	r0, r4
 801ea0a:	f00a fd5e 	bl	80294ca <__cxa_guard_release>
 801ea0e:	4a06      	ldr	r2, [pc, #24]	; (801ea28 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801ea10:	4909      	ldr	r1, [pc, #36]	; (801ea38 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801ea12:	480a      	ldr	r0, [pc, #40]	; (801ea3c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801ea14:	f00a fd46 	bl	80294a4 <__aeabi_atexit>
 801ea18:	4b05      	ldr	r3, [pc, #20]	; (801ea30 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801ea1a:	652b      	str	r3, [r5, #80]	; 0x50
 801ea1c:	4b07      	ldr	r3, [pc, #28]	; (801ea3c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801ea1e:	656b      	str	r3, [r5, #84]	; 0x54
 801ea20:	bd38      	pop	{r3, r4, r5, pc}
 801ea22:	bf00      	nop
 801ea24:	20013024 	.word	0x20013024
 801ea28:	20000000 	.word	0x20000000
 801ea2c:	0801b4bb 	.word	0x0801b4bb
 801ea30:	200000f4 	.word	0x200000f4
 801ea34:	20013028 	.word	0x20013028
 801ea38:	0801b4b9 	.word	0x0801b4b9
 801ea3c:	200000f8 	.word	0x200000f8

0801ea40 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801ea40:	b538      	push	{r3, r4, r5, lr}
 801ea42:	4c15      	ldr	r4, [pc, #84]	; (801ea98 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801ea44:	7823      	ldrb	r3, [r4, #0]
 801ea46:	f3bf 8f5b 	dmb	ish
 801ea4a:	07da      	lsls	r2, r3, #31
 801ea4c:	4605      	mov	r5, r0
 801ea4e:	d40b      	bmi.n	801ea68 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801ea50:	4620      	mov	r0, r4
 801ea52:	f00a fd2e 	bl	80294b2 <__cxa_guard_acquire>
 801ea56:	b138      	cbz	r0, 801ea68 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801ea58:	4620      	mov	r0, r4
 801ea5a:	f00a fd36 	bl	80294ca <__cxa_guard_release>
 801ea5e:	4a0f      	ldr	r2, [pc, #60]	; (801ea9c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801ea60:	490f      	ldr	r1, [pc, #60]	; (801eaa0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801ea62:	4810      	ldr	r0, [pc, #64]	; (801eaa4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801ea64:	f00a fd1e 	bl	80294a4 <__aeabi_atexit>
 801ea68:	4c0f      	ldr	r4, [pc, #60]	; (801eaa8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801ea6a:	7823      	ldrb	r3, [r4, #0]
 801ea6c:	f3bf 8f5b 	dmb	ish
 801ea70:	07db      	lsls	r3, r3, #31
 801ea72:	d40b      	bmi.n	801ea8c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801ea74:	4620      	mov	r0, r4
 801ea76:	f00a fd1c 	bl	80294b2 <__cxa_guard_acquire>
 801ea7a:	b138      	cbz	r0, 801ea8c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801ea7c:	4620      	mov	r0, r4
 801ea7e:	f00a fd24 	bl	80294ca <__cxa_guard_release>
 801ea82:	4a06      	ldr	r2, [pc, #24]	; (801ea9c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801ea84:	4909      	ldr	r1, [pc, #36]	; (801eaac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801ea86:	480a      	ldr	r0, [pc, #40]	; (801eab0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801ea88:	f00a fd0c 	bl	80294a4 <__aeabi_atexit>
 801ea8c:	4b05      	ldr	r3, [pc, #20]	; (801eaa4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801ea8e:	64ab      	str	r3, [r5, #72]	; 0x48
 801ea90:	4b07      	ldr	r3, [pc, #28]	; (801eab0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801ea92:	64eb      	str	r3, [r5, #76]	; 0x4c
 801ea94:	bd38      	pop	{r3, r4, r5, pc}
 801ea96:	bf00      	nop
 801ea98:	2001302c 	.word	0x2001302c
 801ea9c:	20000000 	.word	0x20000000
 801eaa0:	0801b4bf 	.word	0x0801b4bf
 801eaa4:	200000fc 	.word	0x200000fc
 801eaa8:	20013030 	.word	0x20013030
 801eaac:	0801b4bd 	.word	0x0801b4bd
 801eab0:	20000100 	.word	0x20000100

0801eab4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801eab4:	b538      	push	{r3, r4, r5, lr}
 801eab6:	4c15      	ldr	r4, [pc, #84]	; (801eb0c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801eab8:	7823      	ldrb	r3, [r4, #0]
 801eaba:	f3bf 8f5b 	dmb	ish
 801eabe:	07da      	lsls	r2, r3, #31
 801eac0:	4605      	mov	r5, r0
 801eac2:	d40b      	bmi.n	801eadc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801eac4:	4620      	mov	r0, r4
 801eac6:	f00a fcf4 	bl	80294b2 <__cxa_guard_acquire>
 801eaca:	b138      	cbz	r0, 801eadc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801eacc:	4620      	mov	r0, r4
 801eace:	f00a fcfc 	bl	80294ca <__cxa_guard_release>
 801ead2:	4a0f      	ldr	r2, [pc, #60]	; (801eb10 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801ead4:	490f      	ldr	r1, [pc, #60]	; (801eb14 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801ead6:	4810      	ldr	r0, [pc, #64]	; (801eb18 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801ead8:	f00a fce4 	bl	80294a4 <__aeabi_atexit>
 801eadc:	4c0f      	ldr	r4, [pc, #60]	; (801eb1c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801eade:	7823      	ldrb	r3, [r4, #0]
 801eae0:	f3bf 8f5b 	dmb	ish
 801eae4:	07db      	lsls	r3, r3, #31
 801eae6:	d40b      	bmi.n	801eb00 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801eae8:	4620      	mov	r0, r4
 801eaea:	f00a fce2 	bl	80294b2 <__cxa_guard_acquire>
 801eaee:	b138      	cbz	r0, 801eb00 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801eaf0:	4620      	mov	r0, r4
 801eaf2:	f00a fcea 	bl	80294ca <__cxa_guard_release>
 801eaf6:	4a06      	ldr	r2, [pc, #24]	; (801eb10 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801eaf8:	4909      	ldr	r1, [pc, #36]	; (801eb20 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801eafa:	480a      	ldr	r0, [pc, #40]	; (801eb24 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801eafc:	f00a fcd2 	bl	80294a4 <__aeabi_atexit>
 801eb00:	4b05      	ldr	r3, [pc, #20]	; (801eb18 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801eb02:	642b      	str	r3, [r5, #64]	; 0x40
 801eb04:	4b07      	ldr	r3, [pc, #28]	; (801eb24 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801eb06:	646b      	str	r3, [r5, #68]	; 0x44
 801eb08:	bd38      	pop	{r3, r4, r5, pc}
 801eb0a:	bf00      	nop
 801eb0c:	20012ff4 	.word	0x20012ff4
 801eb10:	20000000 	.word	0x20000000
 801eb14:	0801b4c3 	.word	0x0801b4c3
 801eb18:	200000c4 	.word	0x200000c4
 801eb1c:	20012ff8 	.word	0x20012ff8
 801eb20:	0801b4c1 	.word	0x0801b4c1
 801eb24:	200000c8 	.word	0x200000c8

0801eb28 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801eb28:	b538      	push	{r3, r4, r5, lr}
 801eb2a:	4c15      	ldr	r4, [pc, #84]	; (801eb80 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801eb2c:	7823      	ldrb	r3, [r4, #0]
 801eb2e:	f3bf 8f5b 	dmb	ish
 801eb32:	07da      	lsls	r2, r3, #31
 801eb34:	4605      	mov	r5, r0
 801eb36:	d40b      	bmi.n	801eb50 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801eb38:	4620      	mov	r0, r4
 801eb3a:	f00a fcba 	bl	80294b2 <__cxa_guard_acquire>
 801eb3e:	b138      	cbz	r0, 801eb50 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801eb40:	4620      	mov	r0, r4
 801eb42:	f00a fcc2 	bl	80294ca <__cxa_guard_release>
 801eb46:	4a0f      	ldr	r2, [pc, #60]	; (801eb84 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801eb48:	490f      	ldr	r1, [pc, #60]	; (801eb88 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801eb4a:	4810      	ldr	r0, [pc, #64]	; (801eb8c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801eb4c:	f00a fcaa 	bl	80294a4 <__aeabi_atexit>
 801eb50:	4c0f      	ldr	r4, [pc, #60]	; (801eb90 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801eb52:	7823      	ldrb	r3, [r4, #0]
 801eb54:	f3bf 8f5b 	dmb	ish
 801eb58:	07db      	lsls	r3, r3, #31
 801eb5a:	d40b      	bmi.n	801eb74 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801eb5c:	4620      	mov	r0, r4
 801eb5e:	f00a fca8 	bl	80294b2 <__cxa_guard_acquire>
 801eb62:	b138      	cbz	r0, 801eb74 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801eb64:	4620      	mov	r0, r4
 801eb66:	f00a fcb0 	bl	80294ca <__cxa_guard_release>
 801eb6a:	4a06      	ldr	r2, [pc, #24]	; (801eb84 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801eb6c:	4909      	ldr	r1, [pc, #36]	; (801eb94 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801eb6e:	480a      	ldr	r0, [pc, #40]	; (801eb98 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801eb70:	f00a fc98 	bl	80294a4 <__aeabi_atexit>
 801eb74:	4b05      	ldr	r3, [pc, #20]	; (801eb8c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801eb76:	63ab      	str	r3, [r5, #56]	; 0x38
 801eb78:	4b07      	ldr	r3, [pc, #28]	; (801eb98 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801eb7a:	63eb      	str	r3, [r5, #60]	; 0x3c
 801eb7c:	bd38      	pop	{r3, r4, r5, pc}
 801eb7e:	bf00      	nop
 801eb80:	20013014 	.word	0x20013014
 801eb84:	20000000 	.word	0x20000000
 801eb88:	0801b4c7 	.word	0x0801b4c7
 801eb8c:	200000e4 	.word	0x200000e4
 801eb90:	20013018 	.word	0x20013018
 801eb94:	0801b4c5 	.word	0x0801b4c5
 801eb98:	200000e8 	.word	0x200000e8

0801eb9c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801eb9c:	b510      	push	{r4, lr}
 801eb9e:	4604      	mov	r4, r0
 801eba0:	f7ff ff14 	bl	801e9cc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801eba4:	4620      	mov	r0, r4
 801eba6:	f7ff ff85 	bl	801eab4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801ebaa:	4620      	mov	r0, r4
 801ebac:	f7ff ff48 	bl	801ea40 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801ebb0:	4620      	mov	r0, r4
 801ebb2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ebb6:	f7ff bfb7 	b.w	801eb28 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801ebbc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801ebbc:	b538      	push	{r3, r4, r5, lr}
 801ebbe:	4c15      	ldr	r4, [pc, #84]	; (801ec14 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801ebc0:	7823      	ldrb	r3, [r4, #0]
 801ebc2:	f3bf 8f5b 	dmb	ish
 801ebc6:	07da      	lsls	r2, r3, #31
 801ebc8:	4605      	mov	r5, r0
 801ebca:	d40b      	bmi.n	801ebe4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801ebcc:	4620      	mov	r0, r4
 801ebce:	f00a fc70 	bl	80294b2 <__cxa_guard_acquire>
 801ebd2:	b138      	cbz	r0, 801ebe4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801ebd4:	4620      	mov	r0, r4
 801ebd6:	f00a fc78 	bl	80294ca <__cxa_guard_release>
 801ebda:	4a0f      	ldr	r2, [pc, #60]	; (801ec18 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801ebdc:	490f      	ldr	r1, [pc, #60]	; (801ec1c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801ebde:	4810      	ldr	r0, [pc, #64]	; (801ec20 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801ebe0:	f00a fc60 	bl	80294a4 <__aeabi_atexit>
 801ebe4:	4c0f      	ldr	r4, [pc, #60]	; (801ec24 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801ebe6:	7823      	ldrb	r3, [r4, #0]
 801ebe8:	f3bf 8f5b 	dmb	ish
 801ebec:	07db      	lsls	r3, r3, #31
 801ebee:	d40b      	bmi.n	801ec08 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801ebf0:	4620      	mov	r0, r4
 801ebf2:	f00a fc5e 	bl	80294b2 <__cxa_guard_acquire>
 801ebf6:	b138      	cbz	r0, 801ec08 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801ebf8:	4620      	mov	r0, r4
 801ebfa:	f00a fc66 	bl	80294ca <__cxa_guard_release>
 801ebfe:	4a06      	ldr	r2, [pc, #24]	; (801ec18 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801ec00:	4909      	ldr	r1, [pc, #36]	; (801ec28 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801ec02:	480a      	ldr	r0, [pc, #40]	; (801ec2c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801ec04:	f00a fc4e 	bl	80294a4 <__aeabi_atexit>
 801ec08:	4b05      	ldr	r3, [pc, #20]	; (801ec20 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801ec0a:	662b      	str	r3, [r5, #96]	; 0x60
 801ec0c:	4b07      	ldr	r3, [pc, #28]	; (801ec2c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801ec0e:	666b      	str	r3, [r5, #100]	; 0x64
 801ec10:	bd38      	pop	{r3, r4, r5, pc}
 801ec12:	bf00      	nop
 801ec14:	20012ffc 	.word	0x20012ffc
 801ec18:	20000000 	.word	0x20000000
 801ec1c:	0801b4b3 	.word	0x0801b4b3
 801ec20:	200000cc 	.word	0x200000cc
 801ec24:	20013000 	.word	0x20013000
 801ec28:	0801b4b1 	.word	0x0801b4b1
 801ec2c:	200000d0 	.word	0x200000d0

0801ec30 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801ec30:	b538      	push	{r3, r4, r5, lr}
 801ec32:	4c15      	ldr	r4, [pc, #84]	; (801ec88 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801ec34:	7823      	ldrb	r3, [r4, #0]
 801ec36:	f3bf 8f5b 	dmb	ish
 801ec3a:	07da      	lsls	r2, r3, #31
 801ec3c:	4605      	mov	r5, r0
 801ec3e:	d40b      	bmi.n	801ec58 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801ec40:	4620      	mov	r0, r4
 801ec42:	f00a fc36 	bl	80294b2 <__cxa_guard_acquire>
 801ec46:	b138      	cbz	r0, 801ec58 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801ec48:	4620      	mov	r0, r4
 801ec4a:	f00a fc3e 	bl	80294ca <__cxa_guard_release>
 801ec4e:	4a0f      	ldr	r2, [pc, #60]	; (801ec8c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801ec50:	490f      	ldr	r1, [pc, #60]	; (801ec90 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801ec52:	4810      	ldr	r0, [pc, #64]	; (801ec94 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801ec54:	f00a fc26 	bl	80294a4 <__aeabi_atexit>
 801ec58:	4c0f      	ldr	r4, [pc, #60]	; (801ec98 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801ec5a:	7823      	ldrb	r3, [r4, #0]
 801ec5c:	f3bf 8f5b 	dmb	ish
 801ec60:	07db      	lsls	r3, r3, #31
 801ec62:	d40b      	bmi.n	801ec7c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801ec64:	4620      	mov	r0, r4
 801ec66:	f00a fc24 	bl	80294b2 <__cxa_guard_acquire>
 801ec6a:	b138      	cbz	r0, 801ec7c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801ec6c:	4620      	mov	r0, r4
 801ec6e:	f00a fc2c 	bl	80294ca <__cxa_guard_release>
 801ec72:	4a06      	ldr	r2, [pc, #24]	; (801ec8c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801ec74:	4909      	ldr	r1, [pc, #36]	; (801ec9c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801ec76:	480a      	ldr	r0, [pc, #40]	; (801eca0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801ec78:	f00a fc14 	bl	80294a4 <__aeabi_atexit>
 801ec7c:	4b05      	ldr	r3, [pc, #20]	; (801ec94 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801ec7e:	65ab      	str	r3, [r5, #88]	; 0x58
 801ec80:	4b07      	ldr	r3, [pc, #28]	; (801eca0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801ec82:	65eb      	str	r3, [r5, #92]	; 0x5c
 801ec84:	bd38      	pop	{r3, r4, r5, pc}
 801ec86:	bf00      	nop
 801ec88:	20012fd4 	.word	0x20012fd4
 801ec8c:	20000000 	.word	0x20000000
 801ec90:	0801b4b7 	.word	0x0801b4b7
 801ec94:	200000a4 	.word	0x200000a4
 801ec98:	20012fd8 	.word	0x20012fd8
 801ec9c:	0801b4b5 	.word	0x0801b4b5
 801eca0:	200000a8 	.word	0x200000a8

0801eca4 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801eca4:	b510      	push	{r4, lr}
 801eca6:	4604      	mov	r4, r0
 801eca8:	f7ff ff88 	bl	801ebbc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801ecac:	4620      	mov	r0, r4
 801ecae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ecb2:	f7ff bfbd 	b.w	801ec30 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801ecb8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801ecb8:	b538      	push	{r3, r4, r5, lr}
 801ecba:	4c15      	ldr	r4, [pc, #84]	; (801ed10 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801ecbc:	7823      	ldrb	r3, [r4, #0]
 801ecbe:	f3bf 8f5b 	dmb	ish
 801ecc2:	07da      	lsls	r2, r3, #31
 801ecc4:	4605      	mov	r5, r0
 801ecc6:	d40b      	bmi.n	801ece0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801ecc8:	4620      	mov	r0, r4
 801ecca:	f00a fbf2 	bl	80294b2 <__cxa_guard_acquire>
 801ecce:	b138      	cbz	r0, 801ece0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801ecd0:	4620      	mov	r0, r4
 801ecd2:	f00a fbfa 	bl	80294ca <__cxa_guard_release>
 801ecd6:	4a0f      	ldr	r2, [pc, #60]	; (801ed14 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801ecd8:	490f      	ldr	r1, [pc, #60]	; (801ed18 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801ecda:	4810      	ldr	r0, [pc, #64]	; (801ed1c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801ecdc:	f00a fbe2 	bl	80294a4 <__aeabi_atexit>
 801ece0:	4c0f      	ldr	r4, [pc, #60]	; (801ed20 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801ece2:	7823      	ldrb	r3, [r4, #0]
 801ece4:	f3bf 8f5b 	dmb	ish
 801ece8:	07db      	lsls	r3, r3, #31
 801ecea:	d40b      	bmi.n	801ed04 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801ecec:	4620      	mov	r0, r4
 801ecee:	f00a fbe0 	bl	80294b2 <__cxa_guard_acquire>
 801ecf2:	b138      	cbz	r0, 801ed04 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801ecf4:	4620      	mov	r0, r4
 801ecf6:	f00a fbe8 	bl	80294ca <__cxa_guard_release>
 801ecfa:	4a06      	ldr	r2, [pc, #24]	; (801ed14 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801ecfc:	4909      	ldr	r1, [pc, #36]	; (801ed24 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801ecfe:	480a      	ldr	r0, [pc, #40]	; (801ed28 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801ed00:	f00a fbd0 	bl	80294a4 <__aeabi_atexit>
 801ed04:	4b05      	ldr	r3, [pc, #20]	; (801ed1c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801ed06:	672b      	str	r3, [r5, #112]	; 0x70
 801ed08:	4b07      	ldr	r3, [pc, #28]	; (801ed28 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801ed0a:	676b      	str	r3, [r5, #116]	; 0x74
 801ed0c:	bd38      	pop	{r3, r4, r5, pc}
 801ed0e:	bf00      	nop
 801ed10:	20012fcc 	.word	0x20012fcc
 801ed14:	20000000 	.word	0x20000000
 801ed18:	0801b4ab 	.word	0x0801b4ab
 801ed1c:	2000009c 	.word	0x2000009c
 801ed20:	20012fd0 	.word	0x20012fd0
 801ed24:	0801b4a9 	.word	0x0801b4a9
 801ed28:	200000a0 	.word	0x200000a0

0801ed2c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801ed2c:	b538      	push	{r3, r4, r5, lr}
 801ed2e:	4c15      	ldr	r4, [pc, #84]	; (801ed84 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801ed30:	7823      	ldrb	r3, [r4, #0]
 801ed32:	f3bf 8f5b 	dmb	ish
 801ed36:	07da      	lsls	r2, r3, #31
 801ed38:	4605      	mov	r5, r0
 801ed3a:	d40b      	bmi.n	801ed54 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801ed3c:	4620      	mov	r0, r4
 801ed3e:	f00a fbb8 	bl	80294b2 <__cxa_guard_acquire>
 801ed42:	b138      	cbz	r0, 801ed54 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801ed44:	4620      	mov	r0, r4
 801ed46:	f00a fbc0 	bl	80294ca <__cxa_guard_release>
 801ed4a:	4a0f      	ldr	r2, [pc, #60]	; (801ed88 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801ed4c:	490f      	ldr	r1, [pc, #60]	; (801ed8c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801ed4e:	4810      	ldr	r0, [pc, #64]	; (801ed90 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801ed50:	f00a fba8 	bl	80294a4 <__aeabi_atexit>
 801ed54:	4c0f      	ldr	r4, [pc, #60]	; (801ed94 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801ed56:	7823      	ldrb	r3, [r4, #0]
 801ed58:	f3bf 8f5b 	dmb	ish
 801ed5c:	07db      	lsls	r3, r3, #31
 801ed5e:	d40b      	bmi.n	801ed78 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801ed60:	4620      	mov	r0, r4
 801ed62:	f00a fba6 	bl	80294b2 <__cxa_guard_acquire>
 801ed66:	b138      	cbz	r0, 801ed78 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801ed68:	4620      	mov	r0, r4
 801ed6a:	f00a fbae 	bl	80294ca <__cxa_guard_release>
 801ed6e:	4a06      	ldr	r2, [pc, #24]	; (801ed88 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801ed70:	4909      	ldr	r1, [pc, #36]	; (801ed98 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801ed72:	480a      	ldr	r0, [pc, #40]	; (801ed9c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801ed74:	f00a fb96 	bl	80294a4 <__aeabi_atexit>
 801ed78:	4b05      	ldr	r3, [pc, #20]	; (801ed90 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801ed7a:	66ab      	str	r3, [r5, #104]	; 0x68
 801ed7c:	4b07      	ldr	r3, [pc, #28]	; (801ed9c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801ed7e:	66eb      	str	r3, [r5, #108]	; 0x6c
 801ed80:	bd38      	pop	{r3, r4, r5, pc}
 801ed82:	bf00      	nop
 801ed84:	20012fc4 	.word	0x20012fc4
 801ed88:	20000000 	.word	0x20000000
 801ed8c:	0801b4af 	.word	0x0801b4af
 801ed90:	20000094 	.word	0x20000094
 801ed94:	20012fc8 	.word	0x20012fc8
 801ed98:	0801b4ad 	.word	0x0801b4ad
 801ed9c:	20000098 	.word	0x20000098

0801eda0 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801eda0:	b510      	push	{r4, lr}
 801eda2:	4604      	mov	r4, r0
 801eda4:	f7ff ff88 	bl	801ecb8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801eda8:	4620      	mov	r0, r4
 801edaa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801edae:	f7ff bfbd 	b.w	801ed2c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801edb2 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801edb2:	b510      	push	{r4, lr}
 801edb4:	4604      	mov	r4, r0
 801edb6:	f7ff fff3 	bl	801eda0 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801edba:	4620      	mov	r0, r4
 801edbc:	f7ff ff72 	bl	801eca4 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801edc0:	4620      	mov	r0, r4
 801edc2:	f7ff fdf9 	bl	801e9b8 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801edc6:	4620      	mov	r0, r4
 801edc8:	f7ff fcfa 	bl	801e7c0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801edcc:	4620      	mov	r0, r4
 801edce:	f7ff fd75 	bl	801e8bc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801edd2:	4620      	mov	r0, r4
 801edd4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801edd8:	f7ff bee0 	b.w	801eb9c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801eddc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801eddc:	b538      	push	{r3, r4, r5, lr}
 801edde:	4c0b      	ldr	r4, [pc, #44]	; (801ee0c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801ede0:	7823      	ldrb	r3, [r4, #0]
 801ede2:	f3bf 8f5b 	dmb	ish
 801ede6:	07db      	lsls	r3, r3, #31
 801ede8:	4605      	mov	r5, r0
 801edea:	d40b      	bmi.n	801ee04 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801edec:	4620      	mov	r0, r4
 801edee:	f00a fb60 	bl	80294b2 <__cxa_guard_acquire>
 801edf2:	b138      	cbz	r0, 801ee04 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801edf4:	4620      	mov	r0, r4
 801edf6:	f00a fb68 	bl	80294ca <__cxa_guard_release>
 801edfa:	4a05      	ldr	r2, [pc, #20]	; (801ee10 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801edfc:	4905      	ldr	r1, [pc, #20]	; (801ee14 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801edfe:	4806      	ldr	r0, [pc, #24]	; (801ee18 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801ee00:	f00a fb50 	bl	80294a4 <__aeabi_atexit>
 801ee04:	4b04      	ldr	r3, [pc, #16]	; (801ee18 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801ee06:	67ab      	str	r3, [r5, #120]	; 0x78
 801ee08:	bd38      	pop	{r3, r4, r5, pc}
 801ee0a:	bf00      	nop
 801ee0c:	20012fb8 	.word	0x20012fb8
 801ee10:	20000000 	.word	0x20000000
 801ee14:	0801b4a7 	.word	0x0801b4a7
 801ee18:	2000008c 	.word	0x2000008c

0801ee1c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801ee1c:	b538      	push	{r3, r4, r5, lr}
 801ee1e:	4c0b      	ldr	r4, [pc, #44]	; (801ee4c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801ee20:	7823      	ldrb	r3, [r4, #0]
 801ee22:	f3bf 8f5b 	dmb	ish
 801ee26:	07db      	lsls	r3, r3, #31
 801ee28:	4605      	mov	r5, r0
 801ee2a:	d40b      	bmi.n	801ee44 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801ee2c:	4620      	mov	r0, r4
 801ee2e:	f00a fb40 	bl	80294b2 <__cxa_guard_acquire>
 801ee32:	b138      	cbz	r0, 801ee44 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801ee34:	4620      	mov	r0, r4
 801ee36:	f00a fb48 	bl	80294ca <__cxa_guard_release>
 801ee3a:	4a05      	ldr	r2, [pc, #20]	; (801ee50 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801ee3c:	4905      	ldr	r1, [pc, #20]	; (801ee54 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801ee3e:	4806      	ldr	r0, [pc, #24]	; (801ee58 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801ee40:	f00a fb30 	bl	80294a4 <__aeabi_atexit>
 801ee44:	4b04      	ldr	r3, [pc, #16]	; (801ee58 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801ee46:	67eb      	str	r3, [r5, #124]	; 0x7c
 801ee48:	bd38      	pop	{r3, r4, r5, pc}
 801ee4a:	bf00      	nop
 801ee4c:	20012fbc 	.word	0x20012fbc
 801ee50:	20000000 	.word	0x20000000
 801ee54:	0801b4a5 	.word	0x0801b4a5
 801ee58:	20000090 	.word	0x20000090

0801ee5c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801ee5c:	b570      	push	{r4, r5, r6, lr}
 801ee5e:	4d0d      	ldr	r5, [pc, #52]	; (801ee94 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801ee60:	4c0d      	ldr	r4, [pc, #52]	; (801ee98 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801ee62:	782b      	ldrb	r3, [r5, #0]
 801ee64:	f3bf 8f5b 	dmb	ish
 801ee68:	f013 0f01 	tst.w	r3, #1
 801ee6c:	4606      	mov	r6, r0
 801ee6e:	d10d      	bne.n	801ee8c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801ee70:	4628      	mov	r0, r5
 801ee72:	f00a fb1e 	bl	80294b2 <__cxa_guard_acquire>
 801ee76:	b148      	cbz	r0, 801ee8c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801ee78:	4b08      	ldr	r3, [pc, #32]	; (801ee9c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801ee7a:	6023      	str	r3, [r4, #0]
 801ee7c:	4628      	mov	r0, r5
 801ee7e:	f00a fb24 	bl	80294ca <__cxa_guard_release>
 801ee82:	4a07      	ldr	r2, [pc, #28]	; (801eea0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801ee84:	4907      	ldr	r1, [pc, #28]	; (801eea4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801ee86:	4620      	mov	r0, r4
 801ee88:	f00a fb0c 	bl	80294a4 <__aeabi_atexit>
 801ee8c:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 801ee90:	bd70      	pop	{r4, r5, r6, pc}
 801ee92:	bf00      	nop
 801ee94:	20012fc0 	.word	0x20012fc0
 801ee98:	20013034 	.word	0x20013034
 801ee9c:	0802ea4c 	.word	0x0802ea4c
 801eea0:	20000000 	.word	0x20000000
 801eea4:	0801b4a3 	.word	0x0801b4a3

0801eea8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801eea8:	b510      	push	{r4, lr}
 801eeaa:	4604      	mov	r4, r0
 801eeac:	f7ff ff96 	bl	801eddc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801eeb0:	4620      	mov	r0, r4
 801eeb2:	f7ff ffb3 	bl	801ee1c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801eeb6:	4620      	mov	r0, r4
 801eeb8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801eebc:	f7ff bfce 	b.w	801ee5c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801eec0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801eec0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801eec4:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801eec8:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801eecc:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801eed0:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801eed4:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801eed8:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801eedc:	8808      	ldrh	r0, [r1, #0]
 801eede:	fb05 4c0e 	mla	ip, r5, lr, r4
 801eee2:	2d00      	cmp	r5, #0
 801eee4:	eb02 0a0c 	add.w	sl, r2, ip
 801eee8:	f2c0 80b0 	blt.w	801f04c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801eeec:	45ab      	cmp	fp, r5
 801eeee:	f340 80ad 	ble.w	801f04c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801eef2:	2c00      	cmp	r4, #0
 801eef4:	f2c0 80a8 	blt.w	801f048 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801eef8:	45a6      	cmp	lr, r4
 801eefa:	f340 80a5 	ble.w	801f048 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801eefe:	f812 200c 	ldrb.w	r2, [r2, ip]
 801ef02:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801ef06:	1c62      	adds	r2, r4, #1
 801ef08:	f100 80a3 	bmi.w	801f052 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801ef0c:	4596      	cmp	lr, r2
 801ef0e:	f340 80a0 	ble.w	801f052 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801ef12:	f1b9 0f00 	cmp.w	r9, #0
 801ef16:	f000 809c 	beq.w	801f052 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801ef1a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801ef1e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801ef22:	3501      	adds	r5, #1
 801ef24:	f100 8099 	bmi.w	801f05a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801ef28:	45ab      	cmp	fp, r5
 801ef2a:	f340 8096 	ble.w	801f05a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801ef2e:	2f00      	cmp	r7, #0
 801ef30:	f000 8093 	beq.w	801f05a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801ef34:	2c00      	cmp	r4, #0
 801ef36:	f2c0 808e 	blt.w	801f056 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801ef3a:	45a6      	cmp	lr, r4
 801ef3c:	f340 808b 	ble.w	801f056 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801ef40:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801ef44:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801ef48:	3401      	adds	r4, #1
 801ef4a:	f100 8089 	bmi.w	801f060 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801ef4e:	45a6      	cmp	lr, r4
 801ef50:	f340 8086 	ble.w	801f060 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801ef54:	f1b9 0f00 	cmp.w	r9, #0
 801ef58:	f000 8082 	beq.w	801f060 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801ef5c:	44d6      	add	lr, sl
 801ef5e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801ef62:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801ef66:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801ef6a:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801ef6e:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801ef72:	fb19 fe07 	smulbb	lr, r9, r7
 801ef76:	ea44 0808 	orr.w	r8, r4, r8
 801ef7a:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801ef7e:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801ef82:	f1c7 0210 	rsb	r2, r7, #16
 801ef86:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801ef8a:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801ef8e:	ea44 0c0c 	orr.w	ip, r4, ip
 801ef92:	eba2 0209 	sub.w	r2, r2, r9
 801ef96:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801ef9a:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801ef9e:	fb04 f40c 	mul.w	r4, r4, ip
 801efa2:	fb02 4808 	mla	r8, r2, r8, r4
 801efa6:	041a      	lsls	r2, r3, #16
 801efa8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801efac:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801efb0:	4313      	orrs	r3, r2
 801efb2:	042a      	lsls	r2, r5, #16
 801efb4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801efb8:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801efbc:	fb0e 8303 	mla	r3, lr, r3, r8
 801efc0:	432a      	orrs	r2, r5
 801efc2:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801efc6:	fb07 3202 	mla	r2, r7, r2, r3
 801efca:	0d53      	lsrs	r3, r2, #21
 801efcc:	0952      	lsrs	r2, r2, #5
 801efce:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801efd2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801efd6:	431a      	orrs	r2, r3
 801efd8:	b293      	uxth	r3, r2
 801efda:	b2b4      	uxth	r4, r6
 801efdc:	1202      	asrs	r2, r0, #8
 801efde:	43f6      	mvns	r6, r6
 801efe0:	b2f6      	uxtb	r6, r6
 801efe2:	121d      	asrs	r5, r3, #8
 801efe4:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801efe8:	fb12 f206 	smulbb	r2, r2, r6
 801efec:	10c7      	asrs	r7, r0, #3
 801efee:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801eff2:	00c0      	lsls	r0, r0, #3
 801eff4:	fb05 2504 	mla	r5, r5, r4, r2
 801eff8:	b2c0      	uxtb	r0, r0
 801effa:	10da      	asrs	r2, r3, #3
 801effc:	00db      	lsls	r3, r3, #3
 801effe:	b2db      	uxtb	r3, r3
 801f000:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801f004:	fb10 f006 	smulbb	r0, r0, r6
 801f008:	b2ad      	uxth	r5, r5
 801f00a:	fb03 0004 	mla	r0, r3, r4, r0
 801f00e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801f012:	fb17 f706 	smulbb	r7, r7, r6
 801f016:	b280      	uxth	r0, r0
 801f018:	1c6b      	adds	r3, r5, #1
 801f01a:	fb02 7204 	mla	r2, r2, r4, r7
 801f01e:	b292      	uxth	r2, r2
 801f020:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801f024:	1c43      	adds	r3, r0, #1
 801f026:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801f02a:	1c50      	adds	r0, r2, #1
 801f02c:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801f030:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801f034:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f038:	0952      	lsrs	r2, r2, #5
 801f03a:	432b      	orrs	r3, r5
 801f03c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f040:	4313      	orrs	r3, r2
 801f042:	800b      	strh	r3, [r1, #0]
 801f044:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f048:	4680      	mov	r8, r0
 801f04a:	e75c      	b.n	801ef06 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801f04c:	4684      	mov	ip, r0
 801f04e:	4680      	mov	r8, r0
 801f050:	e767      	b.n	801ef22 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801f052:	4684      	mov	ip, r0
 801f054:	e765      	b.n	801ef22 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801f056:	4605      	mov	r5, r0
 801f058:	e776      	b.n	801ef48 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801f05a:	4603      	mov	r3, r0
 801f05c:	4605      	mov	r5, r0
 801f05e:	e782      	b.n	801ef66 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801f060:	4603      	mov	r3, r0
 801f062:	e780      	b.n	801ef66 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801f064 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f064:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f068:	b099      	sub	sp, #100	; 0x64
 801f06a:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801f06e:	9215      	str	r2, [sp, #84]	; 0x54
 801f070:	9309      	str	r3, [sp, #36]	; 0x24
 801f072:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801f074:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801f078:	930d      	str	r3, [sp, #52]	; 0x34
 801f07a:	910c      	str	r1, [sp, #48]	; 0x30
 801f07c:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 801f080:	9016      	str	r0, [sp, #88]	; 0x58
 801f082:	6850      	ldr	r0, [r2, #4]
 801f084:	6812      	ldr	r2, [r2, #0]
 801f086:	fb00 1303 	mla	r3, r0, r3, r1
 801f08a:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801f08e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f090:	681b      	ldr	r3, [r3, #0]
 801f092:	930b      	str	r3, [sp, #44]	; 0x2c
 801f094:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f096:	685e      	ldr	r6, [r3, #4]
 801f098:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f09a:	43db      	mvns	r3, r3
 801f09c:	b2db      	uxtb	r3, r3
 801f09e:	3604      	adds	r6, #4
 801f0a0:	930a      	str	r3, [sp, #40]	; 0x28
 801f0a2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f0a4:	2b00      	cmp	r3, #0
 801f0a6:	dc03      	bgt.n	801f0b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801f0a8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801f0aa:	2b00      	cmp	r3, #0
 801f0ac:	f340 8225 	ble.w	801f4fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801f0b0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f0b2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f0b6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f0ba:	1e48      	subs	r0, r1, #1
 801f0bc:	1e57      	subs	r7, r2, #1
 801f0be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f0c0:	2b00      	cmp	r3, #0
 801f0c2:	f340 80e3 	ble.w	801f28c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801f0c6:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801f0ca:	ea4f 4325 	mov.w	r3, r5, asr #16
 801f0ce:	d406      	bmi.n	801f0de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f0d0:	4584      	cmp	ip, r0
 801f0d2:	da04      	bge.n	801f0de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f0d4:	2b00      	cmp	r3, #0
 801f0d6:	db02      	blt.n	801f0de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f0d8:	42bb      	cmp	r3, r7
 801f0da:	f2c0 80d8 	blt.w	801f28e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801f0de:	f11c 0c01 	adds.w	ip, ip, #1
 801f0e2:	f100 80c9 	bmi.w	801f278 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801f0e6:	4561      	cmp	r1, ip
 801f0e8:	f2c0 80c6 	blt.w	801f278 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801f0ec:	3301      	adds	r3, #1
 801f0ee:	f100 80c3 	bmi.w	801f278 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801f0f2:	429a      	cmp	r2, r3
 801f0f4:	f2c0 80c0 	blt.w	801f278 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801f0f8:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801f0fc:	4647      	mov	r7, r8
 801f0fe:	f1bb 0f00 	cmp.w	fp, #0
 801f102:	f340 80e3 	ble.w	801f2cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801f106:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801f108:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f10a:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801f10e:	689b      	ldr	r3, [r3, #8]
 801f110:	ea5f 422a 	movs.w	r2, sl, asr #16
 801f114:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801f118:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801f11c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801f120:	f100 8121 	bmi.w	801f366 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801f124:	f103 39ff 	add.w	r9, r3, #4294967295
 801f128:	454a      	cmp	r2, r9
 801f12a:	f280 811c 	bge.w	801f366 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801f12e:	f1bc 0f00 	cmp.w	ip, #0
 801f132:	f2c0 8118 	blt.w	801f366 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801f136:	f10e 39ff 	add.w	r9, lr, #4294967295
 801f13a:	45cc      	cmp	ip, r9
 801f13c:	f280 8113 	bge.w	801f366 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801f140:	b21b      	sxth	r3, r3
 801f142:	fb0c 2203 	mla	r2, ip, r3, r2
 801f146:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f148:	eb04 0902 	add.w	r9, r4, r2
 801f14c:	5ca2      	ldrb	r2, [r4, r2]
 801f14e:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801f152:	2800      	cmp	r0, #0
 801f154:	f000 80fe 	beq.w	801f354 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801f158:	f899 2001 	ldrb.w	r2, [r9, #1]
 801f15c:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801f160:	9211      	str	r2, [sp, #68]	; 0x44
 801f162:	b151      	cbz	r1, 801f17a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f164:	eb09 0203 	add.w	r2, r9, r3
 801f168:	f819 3003 	ldrb.w	r3, [r9, r3]
 801f16c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f170:	930f      	str	r3, [sp, #60]	; 0x3c
 801f172:	7853      	ldrb	r3, [r2, #1]
 801f174:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f178:	9312      	str	r3, [sp, #72]	; 0x48
 801f17a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f17c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801f17e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f182:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f186:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f18a:	ea4c 0c03 	orr.w	ip, ip, r3
 801f18e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801f190:	041b      	lsls	r3, r3, #16
 801f192:	fb10 f201 	smulbb	r2, r0, r1
 801f196:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801f19a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f19e:	10d2      	asrs	r2, r2, #3
 801f1a0:	4323      	orrs	r3, r4
 801f1a2:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801f1a6:	4353      	muls	r3, r2
 801f1a8:	fb09 330c 	mla	r3, r9, ip, r3
 801f1ac:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801f1b0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f1b4:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801f1b8:	ea4c 0e0e 	orr.w	lr, ip, lr
 801f1bc:	f1c1 0c10 	rsb	ip, r1, #16
 801f1c0:	ebac 0c00 	sub.w	ip, ip, r0
 801f1c4:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801f1c8:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801f1cc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f1ce:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801f1d0:	0418      	lsls	r0, r3, #16
 801f1d2:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801f1d6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f1da:	4318      	orrs	r0, r3
 801f1dc:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801f1e0:	fb02 c200 	mla	r2, r2, r0, ip
 801f1e4:	0d53      	lsrs	r3, r2, #21
 801f1e6:	0952      	lsrs	r2, r2, #5
 801f1e8:	8838      	ldrh	r0, [r7, #0]
 801f1ea:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f1ee:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f1f2:	431a      	orrs	r2, r3
 801f1f4:	b292      	uxth	r2, r2
 801f1f6:	1201      	asrs	r1, r0, #8
 801f1f8:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801f1fc:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801f200:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801f204:	fb11 f104 	smulbb	r1, r1, r4
 801f208:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801f20c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801f210:	00c0      	lsls	r0, r0, #3
 801f212:	fb0c 1c03 	mla	ip, ip, r3, r1
 801f216:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801f21a:	10d1      	asrs	r1, r2, #3
 801f21c:	b2c0      	uxtb	r0, r0
 801f21e:	00d2      	lsls	r2, r2, #3
 801f220:	b2d2      	uxtb	r2, r2
 801f222:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f226:	fb1e fe04 	smulbb	lr, lr, r4
 801f22a:	fb10 f004 	smulbb	r0, r0, r4
 801f22e:	fa1f fc8c 	uxth.w	ip, ip
 801f232:	fb01 e103 	mla	r1, r1, r3, lr
 801f236:	fb02 0303 	mla	r3, r2, r3, r0
 801f23a:	b29a      	uxth	r2, r3
 801f23c:	f10c 0301 	add.w	r3, ip, #1
 801f240:	b289      	uxth	r1, r1
 801f242:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801f246:	1c53      	adds	r3, r2, #1
 801f248:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f24c:	1c4a      	adds	r2, r1, #1
 801f24e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801f252:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801f256:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f25a:	0949      	lsrs	r1, r1, #5
 801f25c:	ea43 030c 	orr.w	r3, r3, ip
 801f260:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f264:	430b      	orrs	r3, r1
 801f266:	803b      	strh	r3, [r7, #0]
 801f268:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801f26a:	449a      	add	sl, r3
 801f26c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f26e:	3702      	adds	r7, #2
 801f270:	441d      	add	r5, r3
 801f272:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f276:	e742      	b.n	801f0fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801f278:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801f27a:	449a      	add	sl, r3
 801f27c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f27e:	441d      	add	r5, r3
 801f280:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f282:	3b01      	subs	r3, #1
 801f284:	9309      	str	r3, [sp, #36]	; 0x24
 801f286:	f108 0802 	add.w	r8, r8, #2
 801f28a:	e718      	b.n	801f0be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801f28c:	d023      	beq.n	801f2d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801f28e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f290:	9825      	ldr	r0, [sp, #148]	; 0x94
 801f292:	3b01      	subs	r3, #1
 801f294:	fb00 a003 	mla	r0, r0, r3, sl
 801f298:	1400      	asrs	r0, r0, #16
 801f29a:	f53f af2d 	bmi.w	801f0f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f29e:	3901      	subs	r1, #1
 801f2a0:	4288      	cmp	r0, r1
 801f2a2:	f6bf af29 	bge.w	801f0f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f2a6:	9926      	ldr	r1, [sp, #152]	; 0x98
 801f2a8:	fb01 5303 	mla	r3, r1, r3, r5
 801f2ac:	141b      	asrs	r3, r3, #16
 801f2ae:	f53f af23 	bmi.w	801f0f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f2b2:	3a01      	subs	r2, #1
 801f2b4:	4293      	cmp	r3, r2
 801f2b6:	f6bf af1f 	bge.w	801f0f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f2ba:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801f2be:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801f2c2:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801f2c6:	f1be 0f00 	cmp.w	lr, #0
 801f2ca:	dc6c      	bgt.n	801f3a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801f2cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f2ce:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801f2d2:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801f2d6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f2d8:	2b00      	cmp	r3, #0
 801f2da:	f340 810e 	ble.w	801f4fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801f2de:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f2e2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f2e6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f2ea:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801f2ec:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f2f0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f2f4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f2f8:	eef0 6a62 	vmov.f32	s13, s5
 801f2fc:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f300:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f304:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f308:	ee16 aa90 	vmov	sl, s13
 801f30c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f310:	eef0 6a43 	vmov.f32	s13, s6
 801f314:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f318:	ee12 2a90 	vmov	r2, s5
 801f31c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f320:	fb92 f3f3 	sdiv	r3, r2, r3
 801f324:	ee13 2a10 	vmov	r2, s6
 801f328:	9325      	str	r3, [sp, #148]	; 0x94
 801f32a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801f32c:	fb92 f3f3 	sdiv	r3, r2, r3
 801f330:	9326      	str	r3, [sp, #152]	; 0x98
 801f332:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f334:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801f336:	3b01      	subs	r3, #1
 801f338:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f33c:	930c      	str	r3, [sp, #48]	; 0x30
 801f33e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801f340:	bf08      	it	eq
 801f342:	4613      	moveq	r3, r2
 801f344:	ee16 5a90 	vmov	r5, s13
 801f348:	9309      	str	r3, [sp, #36]	; 0x24
 801f34a:	eeb0 3a67 	vmov.f32	s6, s15
 801f34e:	eef0 2a47 	vmov.f32	s5, s14
 801f352:	e6a6      	b.n	801f0a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801f354:	2900      	cmp	r1, #0
 801f356:	f43f af10 	beq.w	801f17a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f35a:	f819 3003 	ldrb.w	r3, [r9, r3]
 801f35e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f362:	930f      	str	r3, [sp, #60]	; 0x3c
 801f364:	e709      	b.n	801f17a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f366:	f112 0901 	adds.w	r9, r2, #1
 801f36a:	f53f af7d 	bmi.w	801f268 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801f36e:	454b      	cmp	r3, r9
 801f370:	f6ff af7a 	blt.w	801f268 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801f374:	f11c 0901 	adds.w	r9, ip, #1
 801f378:	f53f af76 	bmi.w	801f268 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801f37c:	45ce      	cmp	lr, r9
 801f37e:	f6ff af73 	blt.w	801f268 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801f382:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801f384:	9202      	str	r2, [sp, #8]
 801f386:	b21b      	sxth	r3, r3
 801f388:	fa0f f28e 	sxth.w	r2, lr
 801f38c:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801f390:	e9cd c003 	strd	ip, r0, [sp, #12]
 801f394:	9201      	str	r2, [sp, #4]
 801f396:	9300      	str	r3, [sp, #0]
 801f398:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801f39a:	9816      	ldr	r0, [sp, #88]	; 0x58
 801f39c:	4633      	mov	r3, r6
 801f39e:	4639      	mov	r1, r7
 801f3a0:	f7ff fd8e 	bl	801eec0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801f3a4:	e760      	b.n	801f268 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801f3a6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f3a8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f3aa:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801f3ae:	ea4f 422a 	mov.w	r2, sl, asr #16
 801f3b2:	1429      	asrs	r1, r5, #16
 801f3b4:	fb03 2101 	mla	r1, r3, r1, r2
 801f3b8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801f3ba:	440a      	add	r2, r1
 801f3bc:	5c61      	ldrb	r1, [r4, r1]
 801f3be:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801f3c2:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801f3c6:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801f3ca:	f1bc 0f00 	cmp.w	ip, #0
 801f3ce:	f000 808c 	beq.w	801f4ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801f3d2:	7857      	ldrb	r7, [r2, #1]
 801f3d4:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801f3d8:	9413      	str	r4, [sp, #76]	; 0x4c
 801f3da:	b140      	cbz	r0, 801f3ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801f3dc:	18d7      	adds	r7, r2, r3
 801f3de:	5cd3      	ldrb	r3, [r2, r3]
 801f3e0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f3e4:	9310      	str	r3, [sp, #64]	; 0x40
 801f3e6:	787b      	ldrb	r3, [r7, #1]
 801f3e8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f3ec:	9314      	str	r3, [sp, #80]	; 0x50
 801f3ee:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801f3f0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801f3f2:	fb1c f200 	smulbb	r2, ip, r0
 801f3f6:	041f      	lsls	r7, r3, #16
 801f3f8:	10d2      	asrs	r2, r2, #3
 801f3fa:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f3fe:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801f402:	431f      	orrs	r7, r3
 801f404:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801f408:	9317      	str	r3, [sp, #92]	; 0x5c
 801f40a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801f40c:	041b      	lsls	r3, r3, #16
 801f40e:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801f412:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f416:	ea43 030b 	orr.w	r3, r3, fp
 801f41a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801f41c:	4353      	muls	r3, r2
 801f41e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801f422:	fb04 3707 	mla	r7, r4, r7, r3
 801f426:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801f42a:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801f42e:	ea43 0b01 	orr.w	fp, r3, r1
 801f432:	f1c0 0110 	rsb	r1, r0, #16
 801f436:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f438:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801f43a:	eba1 0c0c 	sub.w	ip, r1, ip
 801f43e:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801f442:	fb0c 770b 	mla	r7, ip, fp, r7
 801f446:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f44a:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801f44e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f452:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801f456:	ea4c 0c0b 	orr.w	ip, ip, fp
 801f45a:	fb02 770c 	mla	r7, r2, ip, r7
 801f45e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801f460:	0d79      	lsrs	r1, r7, #21
 801f462:	097f      	lsrs	r7, r7, #5
 801f464:	8812      	ldrh	r2, [r2, #0]
 801f466:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f46a:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801f46e:	430f      	orrs	r7, r1
 801f470:	b2bb      	uxth	r3, r7
 801f472:	1211      	asrs	r1, r2, #8
 801f474:	1218      	asrs	r0, r3, #8
 801f476:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801f47a:	fb11 f104 	smulbb	r1, r1, r4
 801f47e:	10d7      	asrs	r7, r2, #3
 801f480:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f484:	00d2      	lsls	r2, r2, #3
 801f486:	fb00 1009 	mla	r0, r0, r9, r1
 801f48a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801f48e:	10d9      	asrs	r1, r3, #3
 801f490:	b2d2      	uxtb	r2, r2
 801f492:	00db      	lsls	r3, r3, #3
 801f494:	fb17 f704 	smulbb	r7, r7, r4
 801f498:	fb12 f204 	smulbb	r2, r2, r4
 801f49c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f4a0:	b2db      	uxtb	r3, r3
 801f4a2:	b280      	uxth	r0, r0
 801f4a4:	fb01 7109 	mla	r1, r1, r9, r7
 801f4a8:	fb03 2309 	mla	r3, r3, r9, r2
 801f4ac:	b29b      	uxth	r3, r3
 801f4ae:	b289      	uxth	r1, r1
 801f4b0:	1c42      	adds	r2, r0, #1
 801f4b2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f4b6:	1c4f      	adds	r7, r1, #1
 801f4b8:	1c5a      	adds	r2, r3, #1
 801f4ba:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801f4be:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801f4c2:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801f4c6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f4ca:	0949      	lsrs	r1, r1, #5
 801f4cc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f4ce:	4310      	orrs	r0, r2
 801f4d0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f4d4:	4308      	orrs	r0, r1
 801f4d6:	f823 0b02 	strh.w	r0, [r3], #2
 801f4da:	930e      	str	r3, [sp, #56]	; 0x38
 801f4dc:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801f4de:	449a      	add	sl, r3
 801f4e0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f4e2:	f10e 3eff 	add.w	lr, lr, #4294967295
 801f4e6:	441d      	add	r5, r3
 801f4e8:	e6ed      	b.n	801f2c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801f4ea:	2800      	cmp	r0, #0
 801f4ec:	f43f af7f 	beq.w	801f3ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801f4f0:	5cd3      	ldrb	r3, [r2, r3]
 801f4f2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f4f6:	9310      	str	r3, [sp, #64]	; 0x40
 801f4f8:	e779      	b.n	801f3ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801f4fa:	b019      	add	sp, #100	; 0x64
 801f4fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f500 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801f500:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f504:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801f508:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801f50c:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801f510:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801f514:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801f518:	8808      	ldrh	r0, [r1, #0]
 801f51a:	fb08 470e 	mla	r7, r8, lr, r4
 801f51e:	f1b8 0f00 	cmp.w	r8, #0
 801f522:	eb02 0907 	add.w	r9, r2, r7
 801f526:	db67      	blt.n	801f5f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801f528:	45c2      	cmp	sl, r8
 801f52a:	dd65      	ble.n	801f5f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801f52c:	2c00      	cmp	r4, #0
 801f52e:	db61      	blt.n	801f5f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801f530:	45a6      	cmp	lr, r4
 801f532:	dd5f      	ble.n	801f5f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801f534:	5dd2      	ldrb	r2, [r2, r7]
 801f536:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801f53a:	1c62      	adds	r2, r4, #1
 801f53c:	d45f      	bmi.n	801f5fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801f53e:	4596      	cmp	lr, r2
 801f540:	dd5d      	ble.n	801f5fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801f542:	2d00      	cmp	r5, #0
 801f544:	d05b      	beq.n	801f5fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801f546:	f899 2001 	ldrb.w	r2, [r9, #1]
 801f54a:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801f54e:	f118 0801 	adds.w	r8, r8, #1
 801f552:	d458      	bmi.n	801f606 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801f554:	45c2      	cmp	sl, r8
 801f556:	dd56      	ble.n	801f606 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801f558:	2e00      	cmp	r6, #0
 801f55a:	d054      	beq.n	801f606 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801f55c:	2c00      	cmp	r4, #0
 801f55e:	db50      	blt.n	801f602 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801f560:	45a6      	cmp	lr, r4
 801f562:	dd4e      	ble.n	801f602 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801f564:	f819 200e 	ldrb.w	r2, [r9, lr]
 801f568:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801f56c:	3401      	adds	r4, #1
 801f56e:	d407      	bmi.n	801f580 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801f570:	45a6      	cmp	lr, r4
 801f572:	dd05      	ble.n	801f580 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801f574:	b125      	cbz	r5, 801f580 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801f576:	44ce      	add	lr, r9
 801f578:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801f57c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801f580:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801f584:	fb15 f406 	smulbb	r4, r5, r6
 801f588:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f58c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801f590:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801f594:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801f598:	ea43 0c0c 	orr.w	ip, r3, ip
 801f59c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801f5a0:	f1c6 0310 	rsb	r3, r6, #16
 801f5a4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801f5a8:	1b5b      	subs	r3, r3, r5
 801f5aa:	ea4e 0707 	orr.w	r7, lr, r7
 801f5ae:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801f5b2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801f5b6:	437d      	muls	r5, r7
 801f5b8:	fb03 5c0c 	mla	ip, r3, ip, r5
 801f5bc:	0403      	lsls	r3, r0, #16
 801f5be:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f5c2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801f5c6:	4318      	orrs	r0, r3
 801f5c8:	0413      	lsls	r3, r2, #16
 801f5ca:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f5ce:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f5d2:	4313      	orrs	r3, r2
 801f5d4:	fb04 c000 	mla	r0, r4, r0, ip
 801f5d8:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801f5dc:	fb06 0003 	mla	r0, r6, r3, r0
 801f5e0:	0d43      	lsrs	r3, r0, #21
 801f5e2:	0940      	lsrs	r0, r0, #5
 801f5e4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f5e8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801f5ec:	4318      	orrs	r0, r3
 801f5ee:	8008      	strh	r0, [r1, #0]
 801f5f0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f5f4:	4684      	mov	ip, r0
 801f5f6:	e7a0      	b.n	801f53a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801f5f8:	4607      	mov	r7, r0
 801f5fa:	4684      	mov	ip, r0
 801f5fc:	e7a7      	b.n	801f54e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801f5fe:	4607      	mov	r7, r0
 801f600:	e7a5      	b.n	801f54e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801f602:	4602      	mov	r2, r0
 801f604:	e7b2      	b.n	801f56c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801f606:	4602      	mov	r2, r0
 801f608:	e7ba      	b.n	801f580 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801f60a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f60a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f60e:	b093      	sub	sp, #76	; 0x4c
 801f610:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801f614:	920f      	str	r2, [sp, #60]	; 0x3c
 801f616:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f618:	9108      	str	r1, [sp, #32]
 801f61a:	9306      	str	r3, [sp, #24]
 801f61c:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801f620:	9010      	str	r0, [sp, #64]	; 0x40
 801f622:	6850      	ldr	r0, [r2, #4]
 801f624:	6812      	ldr	r2, [r2, #0]
 801f626:	fb00 1303 	mla	r3, r0, r3, r1
 801f62a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801f62e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f630:	681b      	ldr	r3, [r3, #0]
 801f632:	9307      	str	r3, [sp, #28]
 801f634:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f636:	685f      	ldr	r7, [r3, #4]
 801f638:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801f63c:	3704      	adds	r7, #4
 801f63e:	9b08      	ldr	r3, [sp, #32]
 801f640:	2b00      	cmp	r3, #0
 801f642:	dc03      	bgt.n	801f64c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801f644:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f646:	2b00      	cmp	r3, #0
 801f648:	f340 81b2 	ble.w	801f9b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801f64c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f64e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f652:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f656:	1e48      	subs	r0, r1, #1
 801f658:	f102 3cff 	add.w	ip, r2, #4294967295
 801f65c:	9b06      	ldr	r3, [sp, #24]
 801f65e:	2b00      	cmp	r3, #0
 801f660:	f340 80a9 	ble.w	801f7b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801f664:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f668:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f66c:	d406      	bmi.n	801f67c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f66e:	4586      	cmp	lr, r0
 801f670:	da04      	bge.n	801f67c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f672:	2b00      	cmp	r3, #0
 801f674:	db02      	blt.n	801f67c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f676:	4563      	cmp	r3, ip
 801f678:	f2c0 809e 	blt.w	801f7b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801f67c:	f11e 0e01 	adds.w	lr, lr, #1
 801f680:	f100 808f 	bmi.w	801f7a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f684:	4571      	cmp	r1, lr
 801f686:	f2c0 808c 	blt.w	801f7a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f68a:	3301      	adds	r3, #1
 801f68c:	f100 8089 	bmi.w	801f7a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f690:	429a      	cmp	r2, r3
 801f692:	f2c0 8086 	blt.w	801f7a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f696:	f8dd b018 	ldr.w	fp, [sp, #24]
 801f69a:	46c8      	mov	r8, r9
 801f69c:	f1bb 0f00 	cmp.w	fp, #0
 801f6a0:	f340 80a6 	ble.w	801f7f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801f6a4:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801f6a6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f6a8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801f6ac:	689b      	ldr	r3, [r3, #8]
 801f6ae:	1422      	asrs	r2, r4, #16
 801f6b0:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801f6b4:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801f6b8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f6bc:	f100 80e3 	bmi.w	801f886 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f6c0:	f103 3aff 	add.w	sl, r3, #4294967295
 801f6c4:	4552      	cmp	r2, sl
 801f6c6:	f280 80de 	bge.w	801f886 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f6ca:	f1bc 0f00 	cmp.w	ip, #0
 801f6ce:	f2c0 80da 	blt.w	801f886 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f6d2:	f10e 3aff 	add.w	sl, lr, #4294967295
 801f6d6:	45d4      	cmp	ip, sl
 801f6d8:	f280 80d5 	bge.w	801f886 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f6dc:	b21b      	sxth	r3, r3
 801f6de:	fb0c 2203 	mla	r2, ip, r3, r2
 801f6e2:	9d07      	ldr	r5, [sp, #28]
 801f6e4:	eb05 0a02 	add.w	sl, r5, r2
 801f6e8:	5caa      	ldrb	r2, [r5, r2]
 801f6ea:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801f6ee:	2800      	cmp	r0, #0
 801f6f0:	f000 80c0 	beq.w	801f874 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801f6f4:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801f6f8:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801f6fc:	920b      	str	r2, [sp, #44]	; 0x2c
 801f6fe:	b151      	cbz	r1, 801f716 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801f700:	eb0a 0203 	add.w	r2, sl, r3
 801f704:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801f708:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f70c:	9309      	str	r3, [sp, #36]	; 0x24
 801f70e:	7853      	ldrb	r3, [r2, #1]
 801f710:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f714:	930c      	str	r3, [sp, #48]	; 0x30
 801f716:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f718:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801f71a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f71e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f722:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f726:	ea4c 0c03 	orr.w	ip, ip, r3
 801f72a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f72c:	041b      	lsls	r3, r3, #16
 801f72e:	fb10 f201 	smulbb	r2, r0, r1
 801f732:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f736:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801f73a:	10d2      	asrs	r2, r2, #3
 801f73c:	432b      	orrs	r3, r5
 801f73e:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801f742:	4353      	muls	r3, r2
 801f744:	fb0a 330c 	mla	r3, sl, ip, r3
 801f748:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801f74c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f750:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801f754:	ea4c 0e0e 	orr.w	lr, ip, lr
 801f758:	f1c1 0c10 	rsb	ip, r1, #16
 801f75c:	ebac 0c00 	sub.w	ip, ip, r0
 801f760:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801f764:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801f768:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f76a:	0418      	lsls	r0, r3, #16
 801f76c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801f770:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f774:	4318      	orrs	r0, r3
 801f776:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801f77a:	fb02 c200 	mla	r2, r2, r0, ip
 801f77e:	0d53      	lsrs	r3, r2, #21
 801f780:	0952      	lsrs	r2, r2, #5
 801f782:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f786:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f78a:	431a      	orrs	r2, r3
 801f78c:	f8a8 2000 	strh.w	r2, [r8]
 801f790:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f792:	441c      	add	r4, r3
 801f794:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f796:	f108 0802 	add.w	r8, r8, #2
 801f79a:	441e      	add	r6, r3
 801f79c:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f7a0:	e77c      	b.n	801f69c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f7a2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f7a4:	441c      	add	r4, r3
 801f7a6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f7a8:	441e      	add	r6, r3
 801f7aa:	9b06      	ldr	r3, [sp, #24]
 801f7ac:	3b01      	subs	r3, #1
 801f7ae:	9306      	str	r3, [sp, #24]
 801f7b0:	f109 0902 	add.w	r9, r9, #2
 801f7b4:	e752      	b.n	801f65c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801f7b6:	d020      	beq.n	801f7fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801f7b8:	9b06      	ldr	r3, [sp, #24]
 801f7ba:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801f7bc:	3b01      	subs	r3, #1
 801f7be:	fb00 4003 	mla	r0, r0, r3, r4
 801f7c2:	1400      	asrs	r0, r0, #16
 801f7c4:	f53f af67 	bmi.w	801f696 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f7c8:	3901      	subs	r1, #1
 801f7ca:	4288      	cmp	r0, r1
 801f7cc:	f6bf af63 	bge.w	801f696 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f7d0:	9920      	ldr	r1, [sp, #128]	; 0x80
 801f7d2:	fb01 6303 	mla	r3, r1, r3, r6
 801f7d6:	141b      	asrs	r3, r3, #16
 801f7d8:	f53f af5d 	bmi.w	801f696 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f7dc:	3a01      	subs	r2, #1
 801f7de:	4293      	cmp	r3, r2
 801f7e0:	f6bf af59 	bge.w	801f696 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f7e4:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801f7e8:	46ca      	mov	sl, r9
 801f7ea:	f1b8 0f00 	cmp.w	r8, #0
 801f7ee:	dc67      	bgt.n	801f8c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801f7f0:	9b06      	ldr	r3, [sp, #24]
 801f7f2:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f7f6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801f7fa:	9b08      	ldr	r3, [sp, #32]
 801f7fc:	2b00      	cmp	r3, #0
 801f7fe:	f340 80d7 	ble.w	801f9b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801f802:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f806:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f80a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801f80e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f810:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f814:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f818:	eeb0 6a62 	vmov.f32	s12, s5
 801f81c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f820:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f824:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f828:	ee16 4a10 	vmov	r4, s12
 801f82c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f830:	eeb0 6a43 	vmov.f32	s12, s6
 801f834:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f838:	ee12 2a90 	vmov	r2, s5
 801f83c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f840:	fb92 f3f3 	sdiv	r3, r2, r3
 801f844:	ee13 2a10 	vmov	r2, s6
 801f848:	931f      	str	r3, [sp, #124]	; 0x7c
 801f84a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f84c:	fb92 f3f3 	sdiv	r3, r2, r3
 801f850:	9320      	str	r3, [sp, #128]	; 0x80
 801f852:	9b08      	ldr	r3, [sp, #32]
 801f854:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f856:	3b01      	subs	r3, #1
 801f858:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f85c:	9308      	str	r3, [sp, #32]
 801f85e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f860:	bf08      	it	eq
 801f862:	4613      	moveq	r3, r2
 801f864:	ee16 6a10 	vmov	r6, s12
 801f868:	9306      	str	r3, [sp, #24]
 801f86a:	eeb0 3a67 	vmov.f32	s6, s15
 801f86e:	eef0 2a47 	vmov.f32	s5, s14
 801f872:	e6e4      	b.n	801f63e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801f874:	2900      	cmp	r1, #0
 801f876:	f43f af4e 	beq.w	801f716 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801f87a:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801f87e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f882:	9309      	str	r3, [sp, #36]	; 0x24
 801f884:	e747      	b.n	801f716 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801f886:	f112 0a01 	adds.w	sl, r2, #1
 801f88a:	d481      	bmi.n	801f790 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f88c:	4553      	cmp	r3, sl
 801f88e:	f6ff af7f 	blt.w	801f790 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f892:	f11c 0a01 	adds.w	sl, ip, #1
 801f896:	f53f af7b 	bmi.w	801f790 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f89a:	45d6      	cmp	lr, sl
 801f89c:	f6ff af78 	blt.w	801f790 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f8a0:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801f8a4:	b21b      	sxth	r3, r3
 801f8a6:	fa0f f28e 	sxth.w	r2, lr
 801f8aa:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801f8ae:	9201      	str	r2, [sp, #4]
 801f8b0:	9300      	str	r3, [sp, #0]
 801f8b2:	9a07      	ldr	r2, [sp, #28]
 801f8b4:	9810      	ldr	r0, [sp, #64]	; 0x40
 801f8b6:	463b      	mov	r3, r7
 801f8b8:	4641      	mov	r1, r8
 801f8ba:	f7ff fe21 	bl	801f500 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801f8be:	e767      	b.n	801f790 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f8c0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f8c2:	9d07      	ldr	r5, [sp, #28]
 801f8c4:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801f8c8:	1422      	asrs	r2, r4, #16
 801f8ca:	1431      	asrs	r1, r6, #16
 801f8cc:	fb03 2101 	mla	r1, r3, r1, r2
 801f8d0:	9a07      	ldr	r2, [sp, #28]
 801f8d2:	440a      	add	r2, r1
 801f8d4:	5c69      	ldrb	r1, [r5, r1]
 801f8d6:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801f8da:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f8de:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801f8e2:	f1be 0f00 	cmp.w	lr, #0
 801f8e6:	d05c      	beq.n	801f9a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801f8e8:	f892 c001 	ldrb.w	ip, [r2, #1]
 801f8ec:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801f8f0:	950d      	str	r5, [sp, #52]	; 0x34
 801f8f2:	b150      	cbz	r0, 801f90a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f8f4:	eb02 0c03 	add.w	ip, r2, r3
 801f8f8:	5cd3      	ldrb	r3, [r2, r3]
 801f8fa:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f8fe:	930a      	str	r3, [sp, #40]	; 0x28
 801f900:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801f904:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f908:	930e      	str	r3, [sp, #56]	; 0x38
 801f90a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f90c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f90e:	fb1e f200 	smulbb	r2, lr, r0
 801f912:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f916:	10d2      	asrs	r2, r2, #3
 801f918:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f91c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f920:	ea4c 0c03 	orr.w	ip, ip, r3
 801f924:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801f928:	9311      	str	r3, [sp, #68]	; 0x44
 801f92a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f92c:	041b      	lsls	r3, r3, #16
 801f92e:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 801f932:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f936:	ea43 030b 	orr.w	r3, r3, fp
 801f93a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f93c:	4353      	muls	r3, r2
 801f93e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801f942:	fb05 3c0c 	mla	ip, r5, ip, r3
 801f946:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801f94a:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801f94e:	ea43 0b01 	orr.w	fp, r3, r1
 801f952:	f1c0 0110 	rsb	r1, r0, #16
 801f956:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f958:	eba1 0e0e 	sub.w	lr, r1, lr
 801f95c:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801f960:	fb0e cc0b 	mla	ip, lr, fp, ip
 801f964:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801f968:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801f96c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801f970:	ea4b 0e0e 	orr.w	lr, fp, lr
 801f974:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801f978:	fb02 cc0e 	mla	ip, r2, lr, ip
 801f97c:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801f980:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f984:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f988:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801f98c:	ea43 0c0c 	orr.w	ip, r3, ip
 801f990:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f992:	f82a cb02 	strh.w	ip, [sl], #2
 801f996:	441c      	add	r4, r3
 801f998:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f99a:	f108 38ff 	add.w	r8, r8, #4294967295
 801f99e:	441e      	add	r6, r3
 801f9a0:	e723      	b.n	801f7ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801f9a2:	2800      	cmp	r0, #0
 801f9a4:	d0b1      	beq.n	801f90a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f9a6:	5cd3      	ldrb	r3, [r2, r3]
 801f9a8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f9ac:	930a      	str	r3, [sp, #40]	; 0x28
 801f9ae:	e7ac      	b.n	801f90a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f9b0:	b013      	add	sp, #76	; 0x4c
 801f9b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f9b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801f9b6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f9ba:	880d      	ldrh	r5, [r1, #0]
 801f9bc:	b087      	sub	sp, #28
 801f9be:	10ef      	asrs	r7, r5, #3
 801f9c0:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801f9c4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801f9c8:	00ed      	lsls	r5, r5, #3
 801f9ca:	9701      	str	r7, [sp, #4]
 801f9cc:	b2ed      	uxtb	r5, r5
 801f9ce:	9502      	str	r5, [sp, #8]
 801f9d0:	9d01      	ldr	r5, [sp, #4]
 801f9d2:	9103      	str	r1, [sp, #12]
 801f9d4:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 801f9d8:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 801f9dc:	9902      	ldr	r1, [sp, #8]
 801f9de:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801f9e2:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 801f9e6:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 801f9ea:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 801f9ee:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 801f9f2:	022d      	lsls	r5, r5, #8
 801f9f4:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801f9f8:	fb06 0709 	mla	r7, r6, r9, r0
 801f9fc:	430d      	orrs	r5, r1
 801f9fe:	2e00      	cmp	r6, #0
 801fa00:	eb02 0c07 	add.w	ip, r2, r7
 801fa04:	9505      	str	r5, [sp, #20]
 801fa06:	f2c0 80b6 	blt.w	801fb76 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801fa0a:	45b3      	cmp	fp, r6
 801fa0c:	f340 80b3 	ble.w	801fb76 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801fa10:	2800      	cmp	r0, #0
 801fa12:	f2c0 80ae 	blt.w	801fb72 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801fa16:	4581      	cmp	r9, r0
 801fa18:	f340 80ab 	ble.w	801fb72 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801fa1c:	5dd7      	ldrb	r7, [r2, r7]
 801fa1e:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801fa22:	441f      	add	r7, r3
 801fa24:	1c42      	adds	r2, r0, #1
 801fa26:	f100 80a9 	bmi.w	801fb7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801fa2a:	4591      	cmp	r9, r2
 801fa2c:	f340 80a6 	ble.w	801fb7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801fa30:	2c00      	cmp	r4, #0
 801fa32:	f000 80a3 	beq.w	801fb7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801fa36:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801fa3a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801fa3e:	441d      	add	r5, r3
 801fa40:	3601      	adds	r6, #1
 801fa42:	f100 809f 	bmi.w	801fb84 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801fa46:	45b3      	cmp	fp, r6
 801fa48:	f340 809c 	ble.w	801fb84 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801fa4c:	f1be 0f00 	cmp.w	lr, #0
 801fa50:	f000 8098 	beq.w	801fb84 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801fa54:	2800      	cmp	r0, #0
 801fa56:	f2c0 8093 	blt.w	801fb80 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801fa5a:	4581      	cmp	r9, r0
 801fa5c:	f340 8090 	ble.w	801fb80 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801fa60:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801fa64:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801fa68:	441e      	add	r6, r3
 801fa6a:	3001      	adds	r0, #1
 801fa6c:	f100 808d 	bmi.w	801fb8a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801fa70:	4581      	cmp	r9, r0
 801fa72:	f340 808a 	ble.w	801fb8a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801fa76:	2c00      	cmp	r4, #0
 801fa78:	f000 8087 	beq.w	801fb8a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801fa7c:	44e1      	add	r9, ip
 801fa7e:	f899 2001 	ldrb.w	r2, [r9, #1]
 801fa82:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fa86:	4413      	add	r3, r2
 801fa88:	b2a4      	uxth	r4, r4
 801fa8a:	fa1f fe8e 	uxth.w	lr, lr
 801fa8e:	fb04 fb0e 	mul.w	fp, r4, lr
 801fa92:	0124      	lsls	r4, r4, #4
 801fa94:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801fa98:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 801fa9c:	eba4 040b 	sub.w	r4, r4, fp
 801faa0:	fa1f f08e 	uxth.w	r0, lr
 801faa4:	b2a2      	uxth	r2, r4
 801faa6:	78ac      	ldrb	r4, [r5, #2]
 801faa8:	f897 c002 	ldrb.w	ip, [r7, #2]
 801faac:	9901      	ldr	r1, [sp, #4]
 801faae:	eba9 0900 	sub.w	r9, r9, r0
 801fab2:	fa1f f989 	uxth.w	r9, r9
 801fab6:	4354      	muls	r4, r2
 801fab8:	fb09 440c 	mla	r4, r9, ip, r4
 801fabc:	f896 c002 	ldrb.w	ip, [r6, #2]
 801fac0:	fb00 440c 	mla	r4, r0, ip, r4
 801fac4:	f893 c002 	ldrb.w	ip, [r3, #2]
 801fac8:	fa1f fe88 	uxth.w	lr, r8
 801facc:	ea6f 0808 	mvn.w	r8, r8
 801fad0:	fa5f f888 	uxtb.w	r8, r8
 801fad4:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801fad8:	fb1a fa08 	smulbb	sl, sl, r8
 801fadc:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801fae0:	fb0c ac0e 	mla	ip, ip, lr, sl
 801fae4:	f895 a001 	ldrb.w	sl, [r5, #1]
 801fae8:	787c      	ldrb	r4, [r7, #1]
 801faea:	782d      	ldrb	r5, [r5, #0]
 801faec:	783f      	ldrb	r7, [r7, #0]
 801faee:	fb02 fa0a 	mul.w	sl, r2, sl
 801faf2:	fb09 aa04 	mla	sl, r9, r4, sl
 801faf6:	7874      	ldrb	r4, [r6, #1]
 801faf8:	436a      	muls	r2, r5
 801fafa:	7835      	ldrb	r5, [r6, #0]
 801fafc:	fb00 aa04 	mla	sl, r0, r4, sl
 801fb00:	fb09 2207 	mla	r2, r9, r7, r2
 801fb04:	785c      	ldrb	r4, [r3, #1]
 801fb06:	781b      	ldrb	r3, [r3, #0]
 801fb08:	fb00 2005 	mla	r0, r0, r5, r2
 801fb0c:	fb0b a404 	mla	r4, fp, r4, sl
 801fb10:	fb0b 0b03 	mla	fp, fp, r3, r0
 801fb14:	9b02      	ldr	r3, [sp, #8]
 801fb16:	fb11 fa08 	smulbb	sl, r1, r8
 801fb1a:	fa1f fc8c 	uxth.w	ip, ip
 801fb1e:	fb13 f808 	smulbb	r8, r3, r8
 801fb22:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801fb26:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801fb2a:	fb04 a40e 	mla	r4, r4, lr, sl
 801fb2e:	f10c 0301 	add.w	r3, ip, #1
 801fb32:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801fb36:	fa1f fe8e 	uxth.w	lr, lr
 801fb3a:	b2a4      	uxth	r4, r4
 801fb3c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801fb40:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 801fb44:	f104 0a01 	add.w	sl, r4, #1
 801fb48:	f10e 0c01 	add.w	ip, lr, #1
 801fb4c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801fb50:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801fb54:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801fb58:	0964      	lsrs	r4, r4, #5
 801fb5a:	ea4c 0c03 	orr.w	ip, ip, r3
 801fb5e:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801fb62:	9b03      	ldr	r3, [sp, #12]
 801fb64:	ea4c 0c04 	orr.w	ip, ip, r4
 801fb68:	f8a3 c000 	strh.w	ip, [r3]
 801fb6c:	b007      	add	sp, #28
 801fb6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fb72:	af05      	add	r7, sp, #20
 801fb74:	e756      	b.n	801fa24 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801fb76:	ad05      	add	r5, sp, #20
 801fb78:	462f      	mov	r7, r5
 801fb7a:	e761      	b.n	801fa40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801fb7c:	ad05      	add	r5, sp, #20
 801fb7e:	e75f      	b.n	801fa40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801fb80:	ae05      	add	r6, sp, #20
 801fb82:	e772      	b.n	801fa6a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801fb84:	ab05      	add	r3, sp, #20
 801fb86:	461e      	mov	r6, r3
 801fb88:	e77e      	b.n	801fa88 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801fb8a:	ab05      	add	r3, sp, #20
 801fb8c:	e77c      	b.n	801fa88 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801fb8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fb8e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fb92:	b095      	sub	sp, #84	; 0x54
 801fb94:	9212      	str	r2, [sp, #72]	; 0x48
 801fb96:	9309      	str	r3, [sp, #36]	; 0x24
 801fb98:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801fb9a:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 801fb9e:	930f      	str	r3, [sp, #60]	; 0x3c
 801fba0:	910e      	str	r1, [sp, #56]	; 0x38
 801fba2:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 801fba6:	9013      	str	r0, [sp, #76]	; 0x4c
 801fba8:	6850      	ldr	r0, [r2, #4]
 801fbaa:	6812      	ldr	r2, [r2, #0]
 801fbac:	fb00 1303 	mla	r3, r0, r3, r1
 801fbb0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fbb4:	930a      	str	r3, [sp, #40]	; 0x28
 801fbb6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fbb8:	681b      	ldr	r3, [r3, #0]
 801fbba:	930d      	str	r3, [sp, #52]	; 0x34
 801fbbc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fbbe:	685c      	ldr	r4, [r3, #4]
 801fbc0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801fbc2:	43db      	mvns	r3, r3
 801fbc4:	b2db      	uxtb	r3, r3
 801fbc6:	3404      	adds	r4, #4
 801fbc8:	930b      	str	r3, [sp, #44]	; 0x2c
 801fbca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801fbcc:	2b00      	cmp	r3, #0
 801fbce:	dc03      	bgt.n	801fbd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801fbd0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801fbd2:	2b00      	cmp	r3, #0
 801fbd4:	f340 8255 	ble.w	8020082 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801fbd8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fbda:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fbde:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fbe2:	1e48      	subs	r0, r1, #1
 801fbe4:	1e55      	subs	r5, r2, #1
 801fbe6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fbe8:	2b00      	cmp	r3, #0
 801fbea:	f340 80f9 	ble.w	801fde0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801fbee:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801fbf0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fbf2:	1436      	asrs	r6, r6, #16
 801fbf4:	ea4f 4323 	mov.w	r3, r3, asr #16
 801fbf8:	d406      	bmi.n	801fc08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fbfa:	4286      	cmp	r6, r0
 801fbfc:	da04      	bge.n	801fc08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fbfe:	2b00      	cmp	r3, #0
 801fc00:	db02      	blt.n	801fc08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fc02:	42ab      	cmp	r3, r5
 801fc04:	f2c0 80ed 	blt.w	801fde2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801fc08:	3601      	adds	r6, #1
 801fc0a:	f100 80da 	bmi.w	801fdc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801fc0e:	42b1      	cmp	r1, r6
 801fc10:	f2c0 80d7 	blt.w	801fdc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801fc14:	3301      	adds	r3, #1
 801fc16:	f100 80d4 	bmi.w	801fdc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801fc1a:	429a      	cmp	r2, r3
 801fc1c:	f2c0 80d1 	blt.w	801fdc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801fc20:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fc22:	9311      	str	r3, [sp, #68]	; 0x44
 801fc24:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fc26:	930c      	str	r3, [sp, #48]	; 0x30
 801fc28:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801fc2a:	2b00      	cmp	r3, #0
 801fc2c:	f340 80fa 	ble.w	801fe24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801fc30:	9826      	ldr	r0, [sp, #152]	; 0x98
 801fc32:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fc34:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801fc36:	68c6      	ldr	r6, [r0, #12]
 801fc38:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801fc3a:	141d      	asrs	r5, r3, #16
 801fc3c:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801fc40:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fc42:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801fc44:	1400      	asrs	r0, r0, #16
 801fc46:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801fc4a:	6892      	ldr	r2, [r2, #8]
 801fc4c:	f100 813e 	bmi.w	801fecc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801fc50:	1e57      	subs	r7, r2, #1
 801fc52:	42b8      	cmp	r0, r7
 801fc54:	f280 813a 	bge.w	801fecc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801fc58:	2d00      	cmp	r5, #0
 801fc5a:	f2c0 8137 	blt.w	801fecc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801fc5e:	1e77      	subs	r7, r6, #1
 801fc60:	42bd      	cmp	r5, r7
 801fc62:	f280 8133 	bge.w	801fecc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801fc66:	b212      	sxth	r2, r2
 801fc68:	fb05 0002 	mla	r0, r5, r2, r0
 801fc6c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801fc6e:	f815 a000 	ldrb.w	sl, [r5, r0]
 801fc72:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801fc76:	182e      	adds	r6, r5, r0
 801fc78:	eb04 050a 	add.w	r5, r4, sl
 801fc7c:	2b00      	cmp	r3, #0
 801fc7e:	f000 8117 	beq.w	801feb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801fc82:	f896 c001 	ldrb.w	ip, [r6, #1]
 801fc86:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801fc8a:	44a4      	add	ip, r4
 801fc8c:	2900      	cmp	r1, #0
 801fc8e:	f000 8117 	beq.w	801fec0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801fc92:	18b0      	adds	r0, r6, r2
 801fc94:	5cb2      	ldrb	r2, [r6, r2]
 801fc96:	7840      	ldrb	r0, [r0, #1]
 801fc98:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fc9c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801fca0:	4422      	add	r2, r4
 801fca2:	4420      	add	r0, r4
 801fca4:	b29b      	uxth	r3, r3
 801fca6:	b289      	uxth	r1, r1
 801fca8:	fb03 f901 	mul.w	r9, r3, r1
 801fcac:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801fcb0:	011b      	lsls	r3, r3, #4
 801fcb2:	b289      	uxth	r1, r1
 801fcb4:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801fcb8:	f895 b002 	ldrb.w	fp, [r5, #2]
 801fcbc:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801fcbe:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801fcc2:	f8b6 e000 	ldrh.w	lr, [r6]
 801fcc6:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801fcca:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801fcce:	eba3 0309 	sub.w	r3, r3, r9
 801fcd2:	b29b      	uxth	r3, r3
 801fcd4:	eba8 0801 	sub.w	r8, r8, r1
 801fcd8:	fa1f f888 	uxth.w	r8, r8
 801fcdc:	435f      	muls	r7, r3
 801fcde:	fb08 770b 	mla	r7, r8, fp, r7
 801fce2:	f892 b002 	ldrb.w	fp, [r2, #2]
 801fce6:	9310      	str	r3, [sp, #64]	; 0x40
 801fce8:	fb01 770b 	mla	r7, r1, fp, r7
 801fcec:	f890 b002 	ldrb.w	fp, [r0, #2]
 801fcf0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fcf2:	fb09 770b 	mla	r7, r9, fp, r7
 801fcf6:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801fcfa:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801fcfe:	fb1b fb03 	smulbb	fp, fp, r3
 801fd02:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801fd06:	fb07 b706 	mla	r7, r7, r6, fp
 801fd0a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801fd0c:	f895 b001 	ldrb.w	fp, [r5, #1]
 801fd10:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801fd14:	f89c c000 	ldrb.w	ip, [ip]
 801fd18:	435d      	muls	r5, r3
 801fd1a:	fb08 550b 	mla	r5, r8, fp, r5
 801fd1e:	f892 b001 	ldrb.w	fp, [r2, #1]
 801fd22:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fd24:	fb01 550b 	mla	r5, r1, fp, r5
 801fd28:	f890 b001 	ldrb.w	fp, [r0, #1]
 801fd2c:	fb09 550b 	mla	r5, r9, fp, r5
 801fd30:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801fd34:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801fd38:	fb1b fb03 	smulbb	fp, fp, r3
 801fd3c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801fd3e:	fb03 f30c 	mul.w	r3, r3, ip
 801fd42:	f892 c000 	ldrb.w	ip, [r2]
 801fd46:	fb08 330a 	mla	r3, r8, sl, r3
 801fd4a:	fb01 330c 	mla	r3, r1, ip, r3
 801fd4e:	f890 c000 	ldrb.w	ip, [r0]
 801fd52:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801fd56:	fb09 3c0c 	mla	ip, r9, ip, r3
 801fd5a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fd5c:	fa5f fe8e 	uxtb.w	lr, lr
 801fd60:	b2bf      	uxth	r7, r7
 801fd62:	fb1e fe03 	smulbb	lr, lr, r3
 801fd66:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801fd6a:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801fd6e:	fb05 b506 	mla	r5, r5, r6, fp
 801fd72:	1c7b      	adds	r3, r7, #1
 801fd74:	fb0c e606 	mla	r6, ip, r6, lr
 801fd78:	b2ad      	uxth	r5, r5
 801fd7a:	b2b6      	uxth	r6, r6
 801fd7c:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801fd80:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801fd84:	f105 0b01 	add.w	fp, r5, #1
 801fd88:	1c77      	adds	r7, r6, #1
 801fd8a:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801fd8e:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801fd92:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801fd96:	096d      	lsrs	r5, r5, #5
 801fd98:	431f      	orrs	r7, r3
 801fd9a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801fd9e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fda0:	433d      	orrs	r5, r7
 801fda2:	801d      	strh	r5, [r3, #0]
 801fda4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fda6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801fda8:	3302      	adds	r3, #2
 801fdaa:	930c      	str	r3, [sp, #48]	; 0x30
 801fdac:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fdae:	4413      	add	r3, r2
 801fdb0:	931f      	str	r3, [sp, #124]	; 0x7c
 801fdb2:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801fdb4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fdb6:	4413      	add	r3, r2
 801fdb8:	9320      	str	r3, [sp, #128]	; 0x80
 801fdba:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801fdbc:	3b01      	subs	r3, #1
 801fdbe:	9311      	str	r3, [sp, #68]	; 0x44
 801fdc0:	e732      	b.n	801fc28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801fdc2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fdc4:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801fdc6:	4433      	add	r3, r6
 801fdc8:	931f      	str	r3, [sp, #124]	; 0x7c
 801fdca:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801fdcc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fdce:	4433      	add	r3, r6
 801fdd0:	9320      	str	r3, [sp, #128]	; 0x80
 801fdd2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fdd4:	3b01      	subs	r3, #1
 801fdd6:	9309      	str	r3, [sp, #36]	; 0x24
 801fdd8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fdda:	3302      	adds	r3, #2
 801fddc:	930a      	str	r3, [sp, #40]	; 0x28
 801fdde:	e702      	b.n	801fbe6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801fde0:	d027      	beq.n	801fe32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801fde2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fde4:	9821      	ldr	r0, [sp, #132]	; 0x84
 801fde6:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801fde8:	3b01      	subs	r3, #1
 801fdea:	fb00 5003 	mla	r0, r0, r3, r5
 801fdee:	1400      	asrs	r0, r0, #16
 801fdf0:	f53f af16 	bmi.w	801fc20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fdf4:	3901      	subs	r1, #1
 801fdf6:	4288      	cmp	r0, r1
 801fdf8:	f6bf af12 	bge.w	801fc20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fdfc:	9922      	ldr	r1, [sp, #136]	; 0x88
 801fdfe:	9820      	ldr	r0, [sp, #128]	; 0x80
 801fe00:	fb01 0303 	mla	r3, r1, r3, r0
 801fe04:	141b      	asrs	r3, r3, #16
 801fe06:	f53f af0b 	bmi.w	801fc20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fe0a:	3a01      	subs	r2, #1
 801fe0c:	4293      	cmp	r3, r2
 801fe0e:	f6bf af07 	bge.w	801fc20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fe12:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fe14:	9311      	str	r3, [sp, #68]	; 0x44
 801fe16:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801fe1a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fe1c:	930c      	str	r3, [sp, #48]	; 0x30
 801fe1e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801fe20:	2b00      	cmp	r3, #0
 801fe22:	dc70      	bgt.n	801ff06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801fe24:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fe26:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801fe28:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801fe2c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fe30:	930a      	str	r3, [sp, #40]	; 0x28
 801fe32:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801fe34:	2b00      	cmp	r3, #0
 801fe36:	f340 8124 	ble.w	8020082 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801fe3a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fe3e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801fe42:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fe46:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801fe48:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fe4c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fe50:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fe54:	eef0 6a62 	vmov.f32	s13, s5
 801fe58:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fe5c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fe60:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fe64:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801fe68:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fe6c:	eef0 6a43 	vmov.f32	s13, s6
 801fe70:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fe74:	ee12 2a90 	vmov	r2, s5
 801fe78:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fe7c:	fb92 f3f3 	sdiv	r3, r2, r3
 801fe80:	ee13 2a10 	vmov	r2, s6
 801fe84:	9321      	str	r3, [sp, #132]	; 0x84
 801fe86:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801fe88:	fb92 f3f3 	sdiv	r3, r2, r3
 801fe8c:	9322      	str	r3, [sp, #136]	; 0x88
 801fe8e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801fe90:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801fe92:	3b01      	subs	r3, #1
 801fe94:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fe98:	930e      	str	r3, [sp, #56]	; 0x38
 801fe9a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801fe9c:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801fea0:	bf08      	it	eq
 801fea2:	4613      	moveq	r3, r2
 801fea4:	9309      	str	r3, [sp, #36]	; 0x24
 801fea6:	eeb0 3a67 	vmov.f32	s6, s15
 801feaa:	eef0 2a47 	vmov.f32	s5, s14
 801feae:	e68c      	b.n	801fbca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801feb0:	b149      	cbz	r1, 801fec6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801feb2:	5cb2      	ldrb	r2, [r6, r2]
 801feb4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801feb8:	4422      	add	r2, r4
 801feba:	4628      	mov	r0, r5
 801febc:	46ac      	mov	ip, r5
 801febe:	e6f1      	b.n	801fca4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801fec0:	4628      	mov	r0, r5
 801fec2:	462a      	mov	r2, r5
 801fec4:	e6ee      	b.n	801fca4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801fec6:	4628      	mov	r0, r5
 801fec8:	462a      	mov	r2, r5
 801feca:	e7f7      	b.n	801febc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801fecc:	1c47      	adds	r7, r0, #1
 801fece:	f53f af69 	bmi.w	801fda4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801fed2:	42ba      	cmp	r2, r7
 801fed4:	f6ff af66 	blt.w	801fda4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801fed8:	1c6f      	adds	r7, r5, #1
 801feda:	f53f af63 	bmi.w	801fda4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801fede:	42be      	cmp	r6, r7
 801fee0:	f6ff af60 	blt.w	801fda4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801fee4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801fee6:	9002      	str	r0, [sp, #8]
 801fee8:	b236      	sxth	r6, r6
 801feea:	b212      	sxth	r2, r2
 801feec:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801fef0:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801fef4:	9200      	str	r2, [sp, #0]
 801fef6:	9601      	str	r6, [sp, #4]
 801fef8:	4623      	mov	r3, r4
 801fefa:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801fefe:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ff00:	f7ff fd59 	bl	801f9b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801ff04:	e74e      	b.n	801fda4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801ff06:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801ff08:	9820      	ldr	r0, [sp, #128]	; 0x80
 801ff0a:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801ff0c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ff0e:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801ff12:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801ff14:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801ff18:	142d      	asrs	r5, r5, #16
 801ff1a:	1400      	asrs	r0, r0, #16
 801ff1c:	fb02 5000 	mla	r0, r2, r0, r5
 801ff20:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ff22:	f815 9000 	ldrb.w	r9, [r5, r0]
 801ff26:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801ff2a:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801ff2e:	182e      	adds	r6, r5, r0
 801ff30:	eb04 0509 	add.w	r5, r4, r9
 801ff34:	2b00      	cmp	r3, #0
 801ff36:	f000 8096 	beq.w	8020066 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801ff3a:	7877      	ldrb	r7, [r6, #1]
 801ff3c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801ff40:	4427      	add	r7, r4
 801ff42:	2900      	cmp	r1, #0
 801ff44:	f000 8097 	beq.w	8020076 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801ff48:	18b0      	adds	r0, r6, r2
 801ff4a:	5cb2      	ldrb	r2, [r6, r2]
 801ff4c:	7840      	ldrb	r0, [r0, #1]
 801ff4e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ff52:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801ff56:	4422      	add	r2, r4
 801ff58:	4420      	add	r0, r4
 801ff5a:	b29b      	uxth	r3, r3
 801ff5c:	b289      	uxth	r1, r1
 801ff5e:	fb03 f801 	mul.w	r8, r3, r1
 801ff62:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801ff64:	f895 b002 	ldrb.w	fp, [r5, #2]
 801ff68:	f8b6 c000 	ldrh.w	ip, [r6]
 801ff6c:	78be      	ldrb	r6, [r7, #2]
 801ff6e:	f814 9009 	ldrb.w	r9, [r4, r9]
 801ff72:	011b      	lsls	r3, r3, #4
 801ff74:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801ff78:	b289      	uxth	r1, r1
 801ff7a:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801ff7e:	eba3 0308 	sub.w	r3, r3, r8
 801ff82:	b29b      	uxth	r3, r3
 801ff84:	ebae 0e01 	sub.w	lr, lr, r1
 801ff88:	fa1f fe8e 	uxth.w	lr, lr
 801ff8c:	435e      	muls	r6, r3
 801ff8e:	fb0e 660b 	mla	r6, lr, fp, r6
 801ff92:	f892 b002 	ldrb.w	fp, [r2, #2]
 801ff96:	9310      	str	r3, [sp, #64]	; 0x40
 801ff98:	fb01 660b 	mla	r6, r1, fp, r6
 801ff9c:	f890 b002 	ldrb.w	fp, [r0, #2]
 801ffa0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ffa2:	fb08 660b 	mla	r6, r8, fp, r6
 801ffa6:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801ffaa:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801ffae:	fb1b fb03 	smulbb	fp, fp, r3
 801ffb2:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801ffb6:	fb06 b60a 	mla	r6, r6, sl, fp
 801ffba:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ffbc:	f895 b001 	ldrb.w	fp, [r5, #1]
 801ffc0:	787d      	ldrb	r5, [r7, #1]
 801ffc2:	783f      	ldrb	r7, [r7, #0]
 801ffc4:	435d      	muls	r5, r3
 801ffc6:	fb0e 550b 	mla	r5, lr, fp, r5
 801ffca:	f892 b001 	ldrb.w	fp, [r2, #1]
 801ffce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ffd0:	fb01 550b 	mla	r5, r1, fp, r5
 801ffd4:	f890 b001 	ldrb.w	fp, [r0, #1]
 801ffd8:	fb08 550b 	mla	r5, r8, fp, r5
 801ffdc:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801ffe0:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801ffe4:	fb1b fb03 	smulbb	fp, fp, r3
 801ffe8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ffea:	437b      	muls	r3, r7
 801ffec:	7817      	ldrb	r7, [r2, #0]
 801ffee:	fb0e 3309 	mla	r3, lr, r9, r3
 801fff2:	fb01 3307 	mla	r3, r1, r7, r3
 801fff6:	7807      	ldrb	r7, [r0, #0]
 801fff8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801fffc:	fb08 3707 	mla	r7, r8, r7, r3
 8020000:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020002:	fa5f fc8c 	uxtb.w	ip, ip
 8020006:	fb1c fc03 	smulbb	ip, ip, r3
 802000a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802000e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8020012:	fb05 b50a 	mla	r5, r5, sl, fp
 8020016:	fb07 c70a 	mla	r7, r7, sl, ip
 802001a:	b2b6      	uxth	r6, r6
 802001c:	b2ad      	uxth	r5, r5
 802001e:	b2bf      	uxth	r7, r7
 8020020:	1c73      	adds	r3, r6, #1
 8020022:	1c7a      	adds	r2, r7, #1
 8020024:	f105 0b01 	add.w	fp, r5, #1
 8020028:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 802002c:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8020030:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8020034:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020038:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 802003c:	096d      	lsrs	r5, r5, #5
 802003e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020040:	4316      	orrs	r6, r2
 8020042:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020046:	432e      	orrs	r6, r5
 8020048:	f823 6b02 	strh.w	r6, [r3], #2
 802004c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 802004e:	930c      	str	r3, [sp, #48]	; 0x30
 8020050:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020052:	4413      	add	r3, r2
 8020054:	931f      	str	r3, [sp, #124]	; 0x7c
 8020056:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8020058:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802005a:	4413      	add	r3, r2
 802005c:	9320      	str	r3, [sp, #128]	; 0x80
 802005e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020060:	3b01      	subs	r3, #1
 8020062:	9311      	str	r3, [sp, #68]	; 0x44
 8020064:	e6db      	b.n	801fe1e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8020066:	b149      	cbz	r1, 802007c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8020068:	5cb2      	ldrb	r2, [r6, r2]
 802006a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802006e:	4422      	add	r2, r4
 8020070:	4628      	mov	r0, r5
 8020072:	462f      	mov	r7, r5
 8020074:	e771      	b.n	801ff5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8020076:	4628      	mov	r0, r5
 8020078:	462a      	mov	r2, r5
 802007a:	e76e      	b.n	801ff5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 802007c:	4628      	mov	r0, r5
 802007e:	462a      	mov	r2, r5
 8020080:	e7f7      	b.n	8020072 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8020082:	b015      	add	sp, #84	; 0x54
 8020084:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020088 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8020088:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802008c:	880f      	ldrh	r7, [r1, #0]
 802008e:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 8020092:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8020096:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 802009a:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 802009e:	023c      	lsls	r4, r7, #8
 80200a0:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 80200a4:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 80200a8:	017c      	lsls	r4, r7, #5
 80200aa:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 80200ae:	00ff      	lsls	r7, r7, #3
 80200b0:	ea4b 0404 	orr.w	r4, fp, r4
 80200b4:	b2ff      	uxtb	r7, r7
 80200b6:	fb05 ca0e 	mla	sl, r5, lr, ip
 80200ba:	4327      	orrs	r7, r4
 80200bc:	2d00      	cmp	r5, #0
 80200be:	eb02 080a 	add.w	r8, r2, sl
 80200c2:	9701      	str	r7, [sp, #4]
 80200c4:	db7e      	blt.n	80201c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 80200c6:	45a9      	cmp	r9, r5
 80200c8:	dd7c      	ble.n	80201c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 80200ca:	f1bc 0f00 	cmp.w	ip, #0
 80200ce:	db77      	blt.n	80201c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 80200d0:	45e6      	cmp	lr, ip
 80200d2:	dd75      	ble.n	80201c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 80200d4:	f812 700a 	ldrb.w	r7, [r2, sl]
 80200d8:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80200dc:	441f      	add	r7, r3
 80200de:	f11c 0201 	adds.w	r2, ip, #1
 80200e2:	d472      	bmi.n	80201ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80200e4:	4596      	cmp	lr, r2
 80200e6:	dd70      	ble.n	80201ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80200e8:	2800      	cmp	r0, #0
 80200ea:	d06e      	beq.n	80201ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80200ec:	f898 4001 	ldrb.w	r4, [r8, #1]
 80200f0:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80200f4:	441c      	add	r4, r3
 80200f6:	3501      	adds	r5, #1
 80200f8:	d46b      	bmi.n	80201d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80200fa:	45a9      	cmp	r9, r5
 80200fc:	dd69      	ble.n	80201d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80200fe:	2e00      	cmp	r6, #0
 8020100:	d067      	beq.n	80201d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8020102:	f1bc 0f00 	cmp.w	ip, #0
 8020106:	db62      	blt.n	80201ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8020108:	45e6      	cmp	lr, ip
 802010a:	dd60      	ble.n	80201ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 802010c:	f818 500e 	ldrb.w	r5, [r8, lr]
 8020110:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8020114:	441d      	add	r5, r3
 8020116:	f11c 0201 	adds.w	r2, ip, #1
 802011a:	d45d      	bmi.n	80201d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 802011c:	4596      	cmp	lr, r2
 802011e:	dd5b      	ble.n	80201d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8020120:	2800      	cmp	r0, #0
 8020122:	d059      	beq.n	80201d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8020124:	44c6      	add	lr, r8
 8020126:	f89e 2001 	ldrb.w	r2, [lr, #1]
 802012a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802012e:	4413      	add	r3, r2
 8020130:	b280      	uxth	r0, r0
 8020132:	b2b2      	uxth	r2, r6
 8020134:	fb00 f602 	mul.w	r6, r0, r2
 8020138:	0100      	lsls	r0, r0, #4
 802013a:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 802013e:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 8020142:	1b80      	subs	r0, r0, r6
 8020144:	fa1f fc82 	uxth.w	ip, r2
 8020148:	b282      	uxth	r2, r0
 802014a:	78a0      	ldrb	r0, [r4, #2]
 802014c:	f897 e002 	ldrb.w	lr, [r7, #2]
 8020150:	f897 9000 	ldrb.w	r9, [r7]
 8020154:	787f      	ldrb	r7, [r7, #1]
 8020156:	eba8 080c 	sub.w	r8, r8, ip
 802015a:	fa1f f888 	uxth.w	r8, r8
 802015e:	4350      	muls	r0, r2
 8020160:	fb08 0e0e 	mla	lr, r8, lr, r0
 8020164:	78a8      	ldrb	r0, [r5, #2]
 8020166:	fb0c e000 	mla	r0, ip, r0, lr
 802016a:	f893 e002 	ldrb.w	lr, [r3, #2]
 802016e:	fb06 0e0e 	mla	lr, r6, lr, r0
 8020172:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 8020176:	f894 e000 	ldrb.w	lr, [r4]
 802017a:	fb02 fe0e 	mul.w	lr, r2, lr
 802017e:	fb08 e909 	mla	r9, r8, r9, lr
 8020182:	f895 e000 	ldrb.w	lr, [r5]
 8020186:	fb0c 990e 	mla	r9, ip, lr, r9
 802018a:	f893 e000 	ldrb.w	lr, [r3]
 802018e:	785b      	ldrb	r3, [r3, #1]
 8020190:	fb06 9e0e 	mla	lr, r6, lr, r9
 8020194:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8020198:	ea4e 0e00 	orr.w	lr, lr, r0
 802019c:	7860      	ldrb	r0, [r4, #1]
 802019e:	4350      	muls	r0, r2
 80201a0:	786a      	ldrb	r2, [r5, #1]
 80201a2:	fb08 0007 	mla	r0, r8, r7, r0
 80201a6:	fb0c 0202 	mla	r2, ip, r2, r0
 80201aa:	fb06 2303 	mla	r3, r6, r3, r2
 80201ae:	095b      	lsrs	r3, r3, #5
 80201b0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80201b4:	ea4e 0303 	orr.w	r3, lr, r3
 80201b8:	800b      	strh	r3, [r1, #0]
 80201ba:	b003      	add	sp, #12
 80201bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80201c0:	af01      	add	r7, sp, #4
 80201c2:	e78c      	b.n	80200de <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 80201c4:	ac01      	add	r4, sp, #4
 80201c6:	4627      	mov	r7, r4
 80201c8:	e795      	b.n	80200f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 80201ca:	ac01      	add	r4, sp, #4
 80201cc:	e793      	b.n	80200f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 80201ce:	ad01      	add	r5, sp, #4
 80201d0:	e7a1      	b.n	8020116 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 80201d2:	ab01      	add	r3, sp, #4
 80201d4:	461d      	mov	r5, r3
 80201d6:	e7ab      	b.n	8020130 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 80201d8:	ab01      	add	r3, sp, #4
 80201da:	e7a9      	b.n	8020130 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

080201dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80201dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80201e0:	b08f      	sub	sp, #60	; 0x3c
 80201e2:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 80201e6:	920c      	str	r2, [sp, #48]	; 0x30
 80201e8:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 80201ea:	910a      	str	r1, [sp, #40]	; 0x28
 80201ec:	9306      	str	r3, [sp, #24]
 80201ee:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 80201f2:	900d      	str	r0, [sp, #52]	; 0x34
 80201f4:	6850      	ldr	r0, [r2, #4]
 80201f6:	6812      	ldr	r2, [r2, #0]
 80201f8:	fb00 1303 	mla	r3, r0, r3, r1
 80201fc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020200:	9307      	str	r3, [sp, #28]
 8020202:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020204:	681b      	ldr	r3, [r3, #0]
 8020206:	9308      	str	r3, [sp, #32]
 8020208:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802020a:	685c      	ldr	r4, [r3, #4]
 802020c:	3404      	adds	r4, #4
 802020e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020210:	2b00      	cmp	r3, #0
 8020212:	dc03      	bgt.n	802021c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8020214:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020216:	2b00      	cmp	r3, #0
 8020218:	f340 81d6 	ble.w	80205c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 802021c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802021e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020222:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020226:	1e48      	subs	r0, r1, #1
 8020228:	1e56      	subs	r6, r2, #1
 802022a:	9b06      	ldr	r3, [sp, #24]
 802022c:	2b00      	cmp	r3, #0
 802022e:	f340 80b7 	ble.w	80203a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8020232:	ea5f 472b 	movs.w	r7, fp, asr #16
 8020236:	ea4f 4325 	mov.w	r3, r5, asr #16
 802023a:	d406      	bmi.n	802024a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 802023c:	4287      	cmp	r7, r0
 802023e:	da04      	bge.n	802024a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020240:	2b00      	cmp	r3, #0
 8020242:	db02      	blt.n	802024a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020244:	42b3      	cmp	r3, r6
 8020246:	f2c0 80ac 	blt.w	80203a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 802024a:	3701      	adds	r7, #1
 802024c:	f100 809d 	bmi.w	802038a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020250:	42b9      	cmp	r1, r7
 8020252:	f2c0 809a 	blt.w	802038a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020256:	3301      	adds	r3, #1
 8020258:	f100 8097 	bmi.w	802038a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 802025c:	429a      	cmp	r2, r3
 802025e:	f2c0 8094 	blt.w	802038a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020262:	9b06      	ldr	r3, [sp, #24]
 8020264:	930b      	str	r3, [sp, #44]	; 0x2c
 8020266:	9b07      	ldr	r3, [sp, #28]
 8020268:	9309      	str	r3, [sp, #36]	; 0x24
 802026a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802026c:	2b00      	cmp	r3, #0
 802026e:	f340 80b5 	ble.w	80203dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8020272:	9820      	ldr	r0, [sp, #128]	; 0x80
 8020274:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020276:	68c7      	ldr	r7, [r0, #12]
 8020278:	6892      	ldr	r2, [r2, #8]
 802027a:	ea5f 402b 	movs.w	r0, fp, asr #16
 802027e:	ea4f 4625 	mov.w	r6, r5, asr #16
 8020282:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8020286:	f3c5 3103 	ubfx	r1, r5, #12, #4
 802028a:	f100 80fb 	bmi.w	8020484 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 802028e:	f102 3cff 	add.w	ip, r2, #4294967295
 8020292:	4560      	cmp	r0, ip
 8020294:	f280 80f6 	bge.w	8020484 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020298:	2e00      	cmp	r6, #0
 802029a:	f2c0 80f3 	blt.w	8020484 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 802029e:	f107 3cff 	add.w	ip, r7, #4294967295
 80202a2:	4566      	cmp	r6, ip
 80202a4:	f280 80ee 	bge.w	8020484 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80202a8:	b212      	sxth	r2, r2
 80202aa:	fb06 0002 	mla	r0, r6, r2, r0
 80202ae:	9e08      	ldr	r6, [sp, #32]
 80202b0:	1837      	adds	r7, r6, r0
 80202b2:	5c30      	ldrb	r0, [r6, r0]
 80202b4:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 80202b8:	eb04 0c08 	add.w	ip, r4, r8
 80202bc:	2b00      	cmp	r3, #0
 80202be:	f000 80d3 	beq.w	8020468 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80202c2:	787e      	ldrb	r6, [r7, #1]
 80202c4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80202c8:	4426      	add	r6, r4
 80202ca:	2900      	cmp	r1, #0
 80202cc:	f000 80d4 	beq.w	8020478 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 80202d0:	18b8      	adds	r0, r7, r2
 80202d2:	5cba      	ldrb	r2, [r7, r2]
 80202d4:	7840      	ldrb	r0, [r0, #1]
 80202d6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80202da:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80202de:	4422      	add	r2, r4
 80202e0:	4420      	add	r0, r4
 80202e2:	b29b      	uxth	r3, r3
 80202e4:	b289      	uxth	r1, r1
 80202e6:	fb03 f901 	mul.w	r9, r3, r1
 80202ea:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80202ee:	011b      	lsls	r3, r3, #4
 80202f0:	b289      	uxth	r1, r1
 80202f2:	78b7      	ldrb	r7, [r6, #2]
 80202f4:	f89c a002 	ldrb.w	sl, [ip, #2]
 80202f8:	f89c c001 	ldrb.w	ip, [ip, #1]
 80202fc:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8020300:	eba3 0309 	sub.w	r3, r3, r9
 8020304:	b29b      	uxth	r3, r3
 8020306:	ebae 0e01 	sub.w	lr, lr, r1
 802030a:	fa1f fe8e 	uxth.w	lr, lr
 802030e:	435f      	muls	r7, r3
 8020310:	fb0e 770a 	mla	r7, lr, sl, r7
 8020314:	f892 a002 	ldrb.w	sl, [r2, #2]
 8020318:	fb01 770a 	mla	r7, r1, sl, r7
 802031c:	f890 a002 	ldrb.w	sl, [r0, #2]
 8020320:	fb09 7a0a 	mla	sl, r9, sl, r7
 8020324:	f814 7008 	ldrb.w	r7, [r4, r8]
 8020328:	f896 8000 	ldrb.w	r8, [r6]
 802032c:	7876      	ldrb	r6, [r6, #1]
 802032e:	fb03 f808 	mul.w	r8, r3, r8
 8020332:	fb0e 8807 	mla	r8, lr, r7, r8
 8020336:	7817      	ldrb	r7, [r2, #0]
 8020338:	fb01 8807 	mla	r8, r1, r7, r8
 802033c:	7807      	ldrb	r7, [r0, #0]
 802033e:	fb09 8707 	mla	r7, r9, r7, r8
 8020342:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8020346:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 802034a:	ea47 070a 	orr.w	r7, r7, sl
 802034e:	4373      	muls	r3, r6
 8020350:	f892 a001 	ldrb.w	sl, [r2, #1]
 8020354:	fb0e 330c 	mla	r3, lr, ip, r3
 8020358:	fb01 310a 	mla	r1, r1, sl, r3
 802035c:	f890 a001 	ldrb.w	sl, [r0, #1]
 8020360:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020362:	fb09 1a0a 	mla	sl, r9, sl, r1
 8020366:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 802036a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 802036e:	ea47 070a 	orr.w	r7, r7, sl
 8020372:	801f      	strh	r7, [r3, #0]
 8020374:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020376:	3302      	adds	r3, #2
 8020378:	9309      	str	r3, [sp, #36]	; 0x24
 802037a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802037c:	449b      	add	fp, r3
 802037e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020380:	441d      	add	r5, r3
 8020382:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020384:	3b01      	subs	r3, #1
 8020386:	930b      	str	r3, [sp, #44]	; 0x2c
 8020388:	e76f      	b.n	802026a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802038a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802038c:	449b      	add	fp, r3
 802038e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020390:	441d      	add	r5, r3
 8020392:	9b06      	ldr	r3, [sp, #24]
 8020394:	3b01      	subs	r3, #1
 8020396:	9306      	str	r3, [sp, #24]
 8020398:	9b07      	ldr	r3, [sp, #28]
 802039a:	3302      	adds	r3, #2
 802039c:	9307      	str	r3, [sp, #28]
 802039e:	e744      	b.n	802022a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 80203a0:	d023      	beq.n	80203ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 80203a2:	9b06      	ldr	r3, [sp, #24]
 80203a4:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80203a6:	3b01      	subs	r3, #1
 80203a8:	fb00 b003 	mla	r0, r0, r3, fp
 80203ac:	1400      	asrs	r0, r0, #16
 80203ae:	f53f af58 	bmi.w	8020262 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80203b2:	3901      	subs	r1, #1
 80203b4:	4288      	cmp	r0, r1
 80203b6:	f6bf af54 	bge.w	8020262 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80203ba:	991c      	ldr	r1, [sp, #112]	; 0x70
 80203bc:	fb01 5303 	mla	r3, r1, r3, r5
 80203c0:	141b      	asrs	r3, r3, #16
 80203c2:	f53f af4e 	bmi.w	8020262 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80203c6:	3a01      	subs	r2, #1
 80203c8:	4293      	cmp	r3, r2
 80203ca:	f6bf af4a 	bge.w	8020262 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80203ce:	9b06      	ldr	r3, [sp, #24]
 80203d0:	9309      	str	r3, [sp, #36]	; 0x24
 80203d2:	9b07      	ldr	r3, [sp, #28]
 80203d4:	930b      	str	r3, [sp, #44]	; 0x2c
 80203d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80203d8:	2b00      	cmp	r3, #0
 80203da:	dc70      	bgt.n	80204be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 80203dc:	9b06      	ldr	r3, [sp, #24]
 80203de:	9a07      	ldr	r2, [sp, #28]
 80203e0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80203e4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80203e8:	9307      	str	r3, [sp, #28]
 80203ea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80203ec:	2b00      	cmp	r3, #0
 80203ee:	f340 80eb 	ble.w	80205c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 80203f2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80203f6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80203fa:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80203fe:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020400:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020404:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020408:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802040c:	eef0 6a62 	vmov.f32	s13, s5
 8020410:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020414:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020418:	ee77 2a62 	vsub.f32	s5, s14, s5
 802041c:	ee16 ba90 	vmov	fp, s13
 8020420:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020424:	eef0 6a43 	vmov.f32	s13, s6
 8020428:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802042c:	ee12 2a90 	vmov	r2, s5
 8020430:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020434:	fb92 f3f3 	sdiv	r3, r2, r3
 8020438:	ee13 2a10 	vmov	r2, s6
 802043c:	931b      	str	r3, [sp, #108]	; 0x6c
 802043e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020440:	fb92 f3f3 	sdiv	r3, r2, r3
 8020444:	931c      	str	r3, [sp, #112]	; 0x70
 8020446:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020448:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802044a:	3b01      	subs	r3, #1
 802044c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020450:	930a      	str	r3, [sp, #40]	; 0x28
 8020452:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020454:	bf08      	it	eq
 8020456:	4613      	moveq	r3, r2
 8020458:	ee16 5a90 	vmov	r5, s13
 802045c:	9306      	str	r3, [sp, #24]
 802045e:	eeb0 3a67 	vmov.f32	s6, s15
 8020462:	eef0 2a47 	vmov.f32	s5, s14
 8020466:	e6d2      	b.n	802020e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8020468:	b149      	cbz	r1, 802047e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 802046a:	5cba      	ldrb	r2, [r7, r2]
 802046c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020470:	4422      	add	r2, r4
 8020472:	4660      	mov	r0, ip
 8020474:	4666      	mov	r6, ip
 8020476:	e734      	b.n	80202e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8020478:	4660      	mov	r0, ip
 802047a:	4662      	mov	r2, ip
 802047c:	e731      	b.n	80202e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 802047e:	4660      	mov	r0, ip
 8020480:	4662      	mov	r2, ip
 8020482:	e7f7      	b.n	8020474 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8020484:	f110 0c01 	adds.w	ip, r0, #1
 8020488:	f53f af74 	bmi.w	8020374 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802048c:	4562      	cmp	r2, ip
 802048e:	f6ff af71 	blt.w	8020374 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020492:	f116 0c01 	adds.w	ip, r6, #1
 8020496:	f53f af6d 	bmi.w	8020374 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802049a:	4567      	cmp	r7, ip
 802049c:	f6ff af6a 	blt.w	8020374 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80204a0:	b23f      	sxth	r7, r7
 80204a2:	b212      	sxth	r2, r2
 80204a4:	e9cd 3104 	strd	r3, r1, [sp, #16]
 80204a8:	e9cd 0602 	strd	r0, r6, [sp, #8]
 80204ac:	9200      	str	r2, [sp, #0]
 80204ae:	9701      	str	r7, [sp, #4]
 80204b0:	4623      	mov	r3, r4
 80204b2:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80204b6:	980d      	ldr	r0, [sp, #52]	; 0x34
 80204b8:	f7ff fde6 	bl	8020088 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 80204bc:	e75a      	b.n	8020374 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80204be:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80204c0:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80204c4:	ea4f 462b 	mov.w	r6, fp, asr #16
 80204c8:	1428      	asrs	r0, r5, #16
 80204ca:	fb02 6000 	mla	r0, r2, r0, r6
 80204ce:	9e08      	ldr	r6, [sp, #32]
 80204d0:	f816 8000 	ldrb.w	r8, [r6, r0]
 80204d4:	f3cb 3303 	ubfx	r3, fp, #12, #4
 80204d8:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80204dc:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80204e0:	1837      	adds	r7, r6, r0
 80204e2:	eb04 0c08 	add.w	ip, r4, r8
 80204e6:	2b00      	cmp	r3, #0
 80204e8:	d060      	beq.n	80205ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 80204ea:	787e      	ldrb	r6, [r7, #1]
 80204ec:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80204f0:	4426      	add	r6, r4
 80204f2:	2900      	cmp	r1, #0
 80204f4:	d062      	beq.n	80205bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 80204f6:	18b8      	adds	r0, r7, r2
 80204f8:	5cba      	ldrb	r2, [r7, r2]
 80204fa:	7840      	ldrb	r0, [r0, #1]
 80204fc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020500:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020504:	4422      	add	r2, r4
 8020506:	4420      	add	r0, r4
 8020508:	b29b      	uxth	r3, r3
 802050a:	b289      	uxth	r1, r1
 802050c:	fb03 f901 	mul.w	r9, r3, r1
 8020510:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020514:	011b      	lsls	r3, r3, #4
 8020516:	b289      	uxth	r1, r1
 8020518:	78b7      	ldrb	r7, [r6, #2]
 802051a:	f89c a002 	ldrb.w	sl, [ip, #2]
 802051e:	f89c c001 	ldrb.w	ip, [ip, #1]
 8020522:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8020526:	eba3 0309 	sub.w	r3, r3, r9
 802052a:	b29b      	uxth	r3, r3
 802052c:	ebae 0e01 	sub.w	lr, lr, r1
 8020530:	fa1f fe8e 	uxth.w	lr, lr
 8020534:	435f      	muls	r7, r3
 8020536:	fb0e 770a 	mla	r7, lr, sl, r7
 802053a:	f892 a002 	ldrb.w	sl, [r2, #2]
 802053e:	fb01 770a 	mla	r7, r1, sl, r7
 8020542:	f890 a002 	ldrb.w	sl, [r0, #2]
 8020546:	fb09 7a0a 	mla	sl, r9, sl, r7
 802054a:	f814 7008 	ldrb.w	r7, [r4, r8]
 802054e:	f896 8000 	ldrb.w	r8, [r6]
 8020552:	7876      	ldrb	r6, [r6, #1]
 8020554:	fb03 f808 	mul.w	r8, r3, r8
 8020558:	fb0e 8807 	mla	r8, lr, r7, r8
 802055c:	7817      	ldrb	r7, [r2, #0]
 802055e:	fb01 8807 	mla	r8, r1, r7, r8
 8020562:	7807      	ldrb	r7, [r0, #0]
 8020564:	fb09 8707 	mla	r7, r9, r7, r8
 8020568:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 802056c:	4373      	muls	r3, r6
 802056e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020572:	7856      	ldrb	r6, [r2, #1]
 8020574:	ea47 070a 	orr.w	r7, r7, sl
 8020578:	fb0e 330c 	mla	r3, lr, ip, r3
 802057c:	f890 a001 	ldrb.w	sl, [r0, #1]
 8020580:	fb01 3306 	mla	r3, r1, r6, r3
 8020584:	fb09 3a0a 	mla	sl, r9, sl, r3
 8020588:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 802058c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802058e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8020592:	ea47 070a 	orr.w	r7, r7, sl
 8020596:	f823 7b02 	strh.w	r7, [r3], #2
 802059a:	930b      	str	r3, [sp, #44]	; 0x2c
 802059c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802059e:	449b      	add	fp, r3
 80205a0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80205a2:	441d      	add	r5, r3
 80205a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80205a6:	3b01      	subs	r3, #1
 80205a8:	9309      	str	r3, [sp, #36]	; 0x24
 80205aa:	e714      	b.n	80203d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 80205ac:	b149      	cbz	r1, 80205c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 80205ae:	5cba      	ldrb	r2, [r7, r2]
 80205b0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80205b4:	4422      	add	r2, r4
 80205b6:	4660      	mov	r0, ip
 80205b8:	4666      	mov	r6, ip
 80205ba:	e7a5      	b.n	8020508 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 80205bc:	4660      	mov	r0, ip
 80205be:	4662      	mov	r2, ip
 80205c0:	e7a2      	b.n	8020508 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 80205c2:	4660      	mov	r0, ip
 80205c4:	4662      	mov	r2, ip
 80205c6:	e7f7      	b.n	80205b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 80205c8:	b00f      	add	sp, #60	; 0x3c
 80205ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080205ce <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 80205ce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80205d2:	b085      	sub	sp, #20
 80205d4:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 80205d8:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 80205dc:	9102      	str	r1, [sp, #8]
 80205de:	2c00      	cmp	r4, #0
 80205e0:	fb04 710c 	mla	r1, r4, ip, r7
 80205e4:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 80205e8:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 80205ec:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 80205f0:	eb02 0e01 	add.w	lr, r2, r1
 80205f4:	f2c0 8122 	blt.w	802083c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 80205f8:	45a0      	cmp	r8, r4
 80205fa:	f340 811f 	ble.w	802083c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 80205fe:	2f00      	cmp	r7, #0
 8020600:	f2c0 811a 	blt.w	8020838 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8020604:	45bc      	cmp	ip, r7
 8020606:	f340 8117 	ble.w	8020838 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 802060a:	5c52      	ldrb	r2, [r2, r1]
 802060c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8020610:	1c7a      	adds	r2, r7, #1
 8020612:	f100 8116 	bmi.w	8020842 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8020616:	4594      	cmp	ip, r2
 8020618:	f340 8113 	ble.w	8020842 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 802061c:	2e00      	cmp	r6, #0
 802061e:	f000 8112 	beq.w	8020846 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 8020622:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8020626:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 802062a:	3401      	adds	r4, #1
 802062c:	f100 810f 	bmi.w	802084e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8020630:	45a0      	cmp	r8, r4
 8020632:	f340 810c 	ble.w	802084e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8020636:	2800      	cmp	r0, #0
 8020638:	f000 810c 	beq.w	8020854 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 802063c:	2f00      	cmp	r7, #0
 802063e:	f2c0 8104 	blt.w	802084a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8020642:	45bc      	cmp	ip, r7
 8020644:	f340 8101 	ble.w	802084a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8020648:	f81e 200c 	ldrb.w	r2, [lr, ip]
 802064c:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8020650:	3701      	adds	r7, #1
 8020652:	f100 8102 	bmi.w	802085a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8020656:	45bc      	cmp	ip, r7
 8020658:	f340 80ff 	ble.w	802085a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 802065c:	2e00      	cmp	r6, #0
 802065e:	f000 80fe 	beq.w	802085e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8020662:	44f4      	add	ip, lr
 8020664:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8020668:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 802066c:	b2b6      	uxth	r6, r6
 802066e:	b280      	uxth	r0, r0
 8020670:	fb00 fe06 	mul.w	lr, r0, r6
 8020674:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8020678:	0136      	lsls	r6, r6, #4
 802067a:	eba6 070e 	sub.w	r7, r6, lr
 802067e:	b280      	uxth	r0, r0
 8020680:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8020684:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8020688:	b2bf      	uxth	r7, r7
 802068a:	1a1b      	subs	r3, r3, r0
 802068c:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8020690:	b29b      	uxth	r3, r3
 8020692:	fb0a f607 	mul.w	r6, sl, r7
 8020696:	ea4f 6914 	mov.w	r9, r4, lsr #24
 802069a:	fb0b 6603 	mla	r6, fp, r3, r6
 802069e:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80206a2:	fb00 6609 	mla	r6, r0, r9, r6
 80206a6:	fb0e 6608 	mla	r6, lr, r8, r6
 80206aa:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80206ae:	9600      	str	r6, [sp, #0]
 80206b0:	2e00      	cmp	r6, #0
 80206b2:	f000 80be 	beq.w	8020832 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 80206b6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80206ba:	fb0b fc0c 	mul.w	ip, fp, ip
 80206be:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80206c2:	fb0b f505 	mul.w	r5, fp, r5
 80206c6:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80206ca:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 80206ce:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80206d2:	44dc      	add	ip, fp
 80206d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80206d8:	9501      	str	r5, [sp, #4]
 80206da:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 80206de:	9503      	str	r5, [sp, #12]
 80206e0:	9d01      	ldr	r5, [sp, #4]
 80206e2:	9e02      	ldr	r6, [sp, #8]
 80206e4:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 80206e8:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80206ec:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80206f0:	fb0a fc0c 	mul.w	ip, sl, ip
 80206f4:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80206f8:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80206fc:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020700:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020704:	4465      	add	r5, ip
 8020706:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802070a:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 802070e:	fb09 fc0c 	mul.w	ip, r9, ip
 8020712:	fb09 f904 	mul.w	r9, r9, r4
 8020716:	f509 7480 	add.w	r4, r9, #256	; 0x100
 802071a:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 802071e:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8020722:	fb08 f404 	mul.w	r4, r8, r4
 8020726:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802072a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802072e:	fb08 f802 	mul.w	r8, r8, r2
 8020732:	fb0a fa01 	mul.w	sl, sl, r1
 8020736:	0a22      	lsrs	r2, r4, #8
 8020738:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 802073c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8020740:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8020744:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8020748:	4414      	add	r4, r2
 802074a:	ea4f 211c 	mov.w	r1, ip, lsr #8
 802074e:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8020752:	0a2d      	lsrs	r5, r5, #8
 8020754:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8020758:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802075c:	9a03      	ldr	r2, [sp, #12]
 802075e:	8836      	ldrh	r6, [r6, #0]
 8020760:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8020764:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020768:	437d      	muls	r5, r7
 802076a:	4461      	add	r1, ip
 802076c:	0a24      	lsrs	r4, r4, #8
 802076e:	fb02 5503 	mla	r5, r2, r3, r5
 8020772:	0a09      	lsrs	r1, r1, #8
 8020774:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8020778:	fb04 540e 	mla	r4, r4, lr, r5
 802077c:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8020780:	fb01 4100 	mla	r1, r1, r0, r4
 8020784:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020788:	0a09      	lsrs	r1, r1, #8
 802078a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802078e:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8020792:	fb07 f70a 	mul.w	r7, r7, sl
 8020796:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802079a:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 802079e:	fb03 7101 	mla	r1, r3, r1, r7
 80207a2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80207a6:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80207aa:	fb0e 1e08 	mla	lr, lr, r8, r1
 80207ae:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 80207b2:	fb00 e101 	mla	r1, r0, r1, lr
 80207b6:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 80207ba:	9a00      	ldr	r2, [sp, #0]
 80207bc:	b287      	uxth	r7, r0
 80207be:	437a      	muls	r2, r7
 80207c0:	0a09      	lsrs	r1, r1, #8
 80207c2:	1c53      	adds	r3, r2, #1
 80207c4:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80207c8:	4321      	orrs	r1, r4
 80207ca:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80207ce:	1235      	asrs	r5, r6, #8
 80207d0:	0c0a      	lsrs	r2, r1, #16
 80207d2:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80207d6:	b2db      	uxtb	r3, r3
 80207d8:	fb12 f207 	smulbb	r2, r2, r7
 80207dc:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80207e0:	fb05 2503 	mla	r5, r5, r3, r2
 80207e4:	f3c1 2407 	ubfx	r4, r1, #8, #8
 80207e8:	10f2      	asrs	r2, r6, #3
 80207ea:	b2c8      	uxtb	r0, r1
 80207ec:	00f6      	lsls	r6, r6, #3
 80207ee:	fb14 f407 	smulbb	r4, r4, r7
 80207f2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80207f6:	b2f6      	uxtb	r6, r6
 80207f8:	fb10 f007 	smulbb	r0, r0, r7
 80207fc:	fb02 4203 	mla	r2, r2, r3, r4
 8020800:	b2ad      	uxth	r5, r5
 8020802:	fb06 0303 	mla	r3, r6, r3, r0
 8020806:	b299      	uxth	r1, r3
 8020808:	b294      	uxth	r4, r2
 802080a:	1c6b      	adds	r3, r5, #1
 802080c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8020810:	1c62      	adds	r2, r4, #1
 8020812:	1c4b      	adds	r3, r1, #1
 8020814:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8020818:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 802081c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8020820:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020824:	0952      	lsrs	r2, r2, #5
 8020826:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802082a:	432b      	orrs	r3, r5
 802082c:	4313      	orrs	r3, r2
 802082e:	9a02      	ldr	r2, [sp, #8]
 8020830:	8013      	strh	r3, [r2, #0]
 8020832:	b005      	add	sp, #20
 8020834:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020838:	2500      	movs	r5, #0
 802083a:	e6e9      	b.n	8020610 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 802083c:	2100      	movs	r1, #0
 802083e:	460d      	mov	r5, r1
 8020840:	e6f3      	b.n	802062a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8020842:	2100      	movs	r1, #0
 8020844:	e6f1      	b.n	802062a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8020846:	4631      	mov	r1, r6
 8020848:	e6ef      	b.n	802062a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 802084a:	2400      	movs	r4, #0
 802084c:	e700      	b.n	8020650 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 802084e:	2200      	movs	r2, #0
 8020850:	4614      	mov	r4, r2
 8020852:	e70b      	b.n	802066c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8020854:	4602      	mov	r2, r0
 8020856:	4604      	mov	r4, r0
 8020858:	e708      	b.n	802066c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 802085a:	2200      	movs	r2, #0
 802085c:	e706      	b.n	802066c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 802085e:	4632      	mov	r2, r6
 8020860:	e704      	b.n	802066c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

08020862 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020862:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020866:	b09f      	sub	sp, #124	; 0x7c
 8020868:	921b      	str	r2, [sp, #108]	; 0x6c
 802086a:	9309      	str	r3, [sp, #36]	; 0x24
 802086c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 802086e:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8020872:	931c      	str	r3, [sp, #112]	; 0x70
 8020874:	9119      	str	r1, [sp, #100]	; 0x64
 8020876:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 802087a:	901d      	str	r0, [sp, #116]	; 0x74
 802087c:	6850      	ldr	r0, [r2, #4]
 802087e:	6812      	ldr	r2, [r2, #0]
 8020880:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8020882:	fb00 1303 	mla	r3, r0, r3, r1
 8020886:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802088a:	930c      	str	r3, [sp, #48]	; 0x30
 802088c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802088e:	681b      	ldr	r3, [r3, #0]
 8020890:	9312      	str	r3, [sp, #72]	; 0x48
 8020892:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8020894:	685e      	ldr	r6, [r3, #4]
 8020896:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 802089a:	930d      	str	r3, [sp, #52]	; 0x34
 802089c:	3604      	adds	r6, #4
 802089e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80208a0:	2b00      	cmp	r3, #0
 80208a2:	dc03      	bgt.n	80208ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80208a4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80208a6:	2b00      	cmp	r3, #0
 80208a8:	f340 8388 	ble.w	8020fbc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 80208ac:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80208ae:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80208b2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80208b6:	1e48      	subs	r0, r1, #1
 80208b8:	1e57      	subs	r7, r2, #1
 80208ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80208bc:	2b00      	cmp	r3, #0
 80208be:	f340 8195 	ble.w	8020bec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80208c2:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80208c4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80208c8:	ea4f 4325 	mov.w	r3, r5, asr #16
 80208cc:	d406      	bmi.n	80208dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80208ce:	4584      	cmp	ip, r0
 80208d0:	da04      	bge.n	80208dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80208d2:	2b00      	cmp	r3, #0
 80208d4:	db02      	blt.n	80208dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80208d6:	42bb      	cmp	r3, r7
 80208d8:	f2c0 8189 	blt.w	8020bee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 80208dc:	f11c 0c01 	adds.w	ip, ip, #1
 80208e0:	f100 8177 	bmi.w	8020bd2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80208e4:	4561      	cmp	r1, ip
 80208e6:	f2c0 8174 	blt.w	8020bd2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80208ea:	3301      	adds	r3, #1
 80208ec:	f100 8171 	bmi.w	8020bd2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80208f0:	429a      	cmp	r2, r3
 80208f2:	f2c0 816e 	blt.w	8020bd2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80208f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80208f8:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80208fa:	931a      	str	r3, [sp, #104]	; 0x68
 80208fc:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80208fe:	2b00      	cmp	r3, #0
 8020900:	f340 8193 	ble.w	8020c2a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8020904:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8020906:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802090a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802090c:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8020910:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8020912:	141b      	asrs	r3, r3, #16
 8020914:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8020918:	f3c5 3103 	ubfx	r1, r5, #12, #4
 802091c:	f100 81d6 	bmi.w	8020ccc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8020920:	f100 38ff 	add.w	r8, r0, #4294967295
 8020924:	4543      	cmp	r3, r8
 8020926:	f280 81d1 	bge.w	8020ccc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 802092a:	f1bc 0f00 	cmp.w	ip, #0
 802092e:	f2c0 81cd 	blt.w	8020ccc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8020932:	f10e 38ff 	add.w	r8, lr, #4294967295
 8020936:	45c4      	cmp	ip, r8
 8020938:	f280 81c8 	bge.w	8020ccc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 802093c:	b200      	sxth	r0, r0
 802093e:	fb0c 3300 	mla	r3, ip, r0, r3
 8020942:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020944:	eb04 0803 	add.w	r8, r4, r3
 8020948:	5ce3      	ldrb	r3, [r4, r3]
 802094a:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802094e:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8020952:	2a00      	cmp	r2, #0
 8020954:	f000 81af 	beq.w	8020cb6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020958:	f898 c001 	ldrb.w	ip, [r8, #1]
 802095c:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8020960:	940e      	str	r4, [sp, #56]	; 0x38
 8020962:	0e24      	lsrs	r4, r4, #24
 8020964:	9415      	str	r4, [sp, #84]	; 0x54
 8020966:	b179      	cbz	r1, 8020988 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8020968:	eb08 0c00 	add.w	ip, r8, r0
 802096c:	f818 0000 	ldrb.w	r0, [r8, r0]
 8020970:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8020974:	900a      	str	r0, [sp, #40]	; 0x28
 8020976:	0e00      	lsrs	r0, r0, #24
 8020978:	9013      	str	r0, [sp, #76]	; 0x4c
 802097a:	f89c 0001 	ldrb.w	r0, [ip, #1]
 802097e:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8020982:	900f      	str	r0, [sp, #60]	; 0x3c
 8020984:	0e00      	lsrs	r0, r0, #24
 8020986:	9016      	str	r0, [sp, #88]	; 0x58
 8020988:	b292      	uxth	r2, r2
 802098a:	b289      	uxth	r1, r1
 802098c:	fb02 f901 	mul.w	r9, r2, r1
 8020990:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020994:	0112      	lsls	r2, r2, #4
 8020996:	eba2 0809 	sub.w	r8, r2, r9
 802099a:	b289      	uxth	r1, r1
 802099c:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80209a0:	9815      	ldr	r0, [sp, #84]	; 0x54
 80209a2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80209a4:	fa1f f888 	uxth.w	r8, r8
 80209a8:	1a52      	subs	r2, r2, r1
 80209aa:	b292      	uxth	r2, r2
 80209ac:	fb08 f000 	mul.w	r0, r8, r0
 80209b0:	fb02 000e 	mla	r0, r2, lr, r0
 80209b4:	fb01 0004 	mla	r0, r1, r4, r0
 80209b8:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80209ba:	fb09 0004 	mla	r0, r9, r4, r0
 80209be:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80209c2:	2800      	cmp	r0, #0
 80209c4:	f000 80fa 	beq.w	8020bbc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80209c8:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80209cc:	d01b      	beq.n	8020a06 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80209ce:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80209d2:	fb0e fa0a 	mul.w	sl, lr, sl
 80209d6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80209da:	fb0e fe03 	mul.w	lr, lr, r3
 80209de:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80209e2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80209e6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80209ea:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80209ee:	4453      	add	r3, sl
 80209f0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80209f4:	0a1b      	lsrs	r3, r3, #8
 80209f6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80209fa:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80209fe:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020a02:	ea43 030c 	orr.w	r3, r3, ip
 8020a06:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020a08:	2cff      	cmp	r4, #255	; 0xff
 8020a0a:	d021      	beq.n	8020a50 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8020a0c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020a0e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020a12:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020a14:	fb04 fb0b 	mul.w	fp, r4, fp
 8020a18:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020a1a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020a1e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020a20:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020a24:	fb04 fa0a 	mul.w	sl, r4, sl
 8020a28:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020a2c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020a30:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020a34:	44de      	add	lr, fp
 8020a36:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020a3a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020a3e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020a42:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020a46:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020a4a:	ea4e 040a 	orr.w	r4, lr, sl
 8020a4e:	940e      	str	r4, [sp, #56]	; 0x38
 8020a50:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020a52:	2cff      	cmp	r4, #255	; 0xff
 8020a54:	d021      	beq.n	8020a9a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8020a56:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020a58:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020a5c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020a5e:	fb04 fb0b 	mul.w	fp, r4, fp
 8020a62:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020a64:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020a68:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020a6a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020a6e:	fb04 fa0a 	mul.w	sl, r4, sl
 8020a72:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020a76:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020a7a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020a7e:	44de      	add	lr, fp
 8020a80:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020a84:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020a88:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020a8c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020a90:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020a94:	ea4e 040a 	orr.w	r4, lr, sl
 8020a98:	940a      	str	r4, [sp, #40]	; 0x28
 8020a9a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8020a9c:	2cff      	cmp	r4, #255	; 0xff
 8020a9e:	d021      	beq.n	8020ae4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8020aa0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020aa2:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020aa6:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8020aa8:	fb04 fb0b 	mul.w	fp, r4, fp
 8020aac:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020aae:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020ab2:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8020ab4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020ab8:	fb04 fa0a 	mul.w	sl, r4, sl
 8020abc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020ac0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020ac4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020ac8:	44de      	add	lr, fp
 8020aca:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020ace:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020ad2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020ad6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020ada:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020ade:	ea4e 040a 	orr.w	r4, lr, sl
 8020ae2:	940f      	str	r4, [sp, #60]	; 0x3c
 8020ae4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020ae6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020aea:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020aec:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8020af0:	fb08 fc0c 	mul.w	ip, r8, ip
 8020af4:	fb02 cc0e 	mla	ip, r2, lr, ip
 8020af8:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8020afc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020afe:	fb01 cc0e 	mla	ip, r1, lr, ip
 8020b02:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8020b06:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020b08:	fb09 cc0e 	mla	ip, r9, lr, ip
 8020b0c:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8020b10:	fb08 f80e 	mul.w	r8, r8, lr
 8020b14:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020b18:	fb02 8303 	mla	r3, r2, r3, r8
 8020b1c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8020b1e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020b20:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8020b24:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8020b26:	fb01 330a 	mla	r3, r1, sl, r3
 8020b2a:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8020b2e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8020b30:	fb09 3901 	mla	r9, r9, r1, r3
 8020b34:	4342      	muls	r2, r0
 8020b36:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020b3a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020b3e:	883b      	ldrh	r3, [r7, #0]
 8020b40:	1c50      	adds	r0, r2, #1
 8020b42:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020b46:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8020b4a:	ea4c 0c09 	orr.w	ip, ip, r9
 8020b4e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8020b52:	1219      	asrs	r1, r3, #8
 8020b54:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8020b58:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8020b5c:	b2c0      	uxtb	r0, r0
 8020b5e:	fb12 f204 	smulbb	r2, r2, r4
 8020b62:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8020b66:	fb01 2100 	mla	r1, r1, r0, r2
 8020b6a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8020b6e:	10da      	asrs	r2, r3, #3
 8020b70:	fa5f fc8c 	uxtb.w	ip, ip
 8020b74:	00db      	lsls	r3, r3, #3
 8020b76:	fb1c fc04 	smulbb	ip, ip, r4
 8020b7a:	b2db      	uxtb	r3, r3
 8020b7c:	b289      	uxth	r1, r1
 8020b7e:	fb03 c300 	mla	r3, r3, r0, ip
 8020b82:	fa1f fc83 	uxth.w	ip, r3
 8020b86:	1c4b      	adds	r3, r1, #1
 8020b88:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8020b8c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020b90:	fb1e fe04 	smulbb	lr, lr, r4
 8020b94:	f10c 0301 	add.w	r3, ip, #1
 8020b98:	fb02 e200 	mla	r2, r2, r0, lr
 8020b9c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8020ba0:	b292      	uxth	r2, r2
 8020ba2:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8020ba6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020baa:	430b      	orrs	r3, r1
 8020bac:	1c51      	adds	r1, r2, #1
 8020bae:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8020bb2:	0952      	lsrs	r2, r2, #5
 8020bb4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020bb8:	4313      	orrs	r3, r2
 8020bba:	803b      	strh	r3, [r7, #0]
 8020bbc:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8020bbe:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8020bc0:	441a      	add	r2, r3
 8020bc2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020bc4:	9229      	str	r2, [sp, #164]	; 0xa4
 8020bc6:	441d      	add	r5, r3
 8020bc8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8020bca:	3b01      	subs	r3, #1
 8020bcc:	3702      	adds	r7, #2
 8020bce:	931a      	str	r3, [sp, #104]	; 0x68
 8020bd0:	e694      	b.n	80208fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8020bd2:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8020bd4:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8020bd6:	441c      	add	r4, r3
 8020bd8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020bda:	9429      	str	r4, [sp, #164]	; 0xa4
 8020bdc:	441d      	add	r5, r3
 8020bde:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020be0:	3b01      	subs	r3, #1
 8020be2:	9309      	str	r3, [sp, #36]	; 0x24
 8020be4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020be6:	3302      	adds	r3, #2
 8020be8:	930c      	str	r3, [sp, #48]	; 0x30
 8020bea:	e666      	b.n	80208ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8020bec:	d024      	beq.n	8020c38 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8020bee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020bf0:	982b      	ldr	r0, [sp, #172]	; 0xac
 8020bf2:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8020bf4:	3b01      	subs	r3, #1
 8020bf6:	fb00 4003 	mla	r0, r0, r3, r4
 8020bfa:	1400      	asrs	r0, r0, #16
 8020bfc:	f53f ae7b 	bmi.w	80208f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020c00:	3901      	subs	r1, #1
 8020c02:	4288      	cmp	r0, r1
 8020c04:	f6bf ae77 	bge.w	80208f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020c08:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8020c0a:	fb01 5303 	mla	r3, r1, r3, r5
 8020c0e:	141b      	asrs	r3, r3, #16
 8020c10:	f53f ae71 	bmi.w	80208f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020c14:	3a01      	subs	r2, #1
 8020c16:	4293      	cmp	r3, r2
 8020c18:	f6bf ae6d 	bge.w	80208f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020c1c:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8020c20:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8020c24:	f1bb 0f00 	cmp.w	fp, #0
 8020c28:	dc70      	bgt.n	8020d0c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8020c2a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020c2c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8020c30:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020c32:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8020c36:	930c      	str	r3, [sp, #48]	; 0x30
 8020c38:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8020c3a:	2b00      	cmp	r3, #0
 8020c3c:	f340 81be 	ble.w	8020fbc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8020c40:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020c44:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020c48:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020c4c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020c4e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020c52:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020c56:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020c5a:	eef0 6a62 	vmov.f32	s13, s5
 8020c5e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020c62:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020c66:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020c6a:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8020c6e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020c72:	eef0 6a43 	vmov.f32	s13, s6
 8020c76:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020c7a:	ee12 2a90 	vmov	r2, s5
 8020c7e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020c82:	fb92 f3f3 	sdiv	r3, r2, r3
 8020c86:	ee13 2a10 	vmov	r2, s6
 8020c8a:	932b      	str	r3, [sp, #172]	; 0xac
 8020c8c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020c8e:	fb92 f3f3 	sdiv	r3, r2, r3
 8020c92:	932c      	str	r3, [sp, #176]	; 0xb0
 8020c94:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8020c96:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8020c98:	3b01      	subs	r3, #1
 8020c9a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020c9e:	9319      	str	r3, [sp, #100]	; 0x64
 8020ca0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020ca2:	bf08      	it	eq
 8020ca4:	4613      	moveq	r3, r2
 8020ca6:	ee16 5a90 	vmov	r5, s13
 8020caa:	9309      	str	r3, [sp, #36]	; 0x24
 8020cac:	eeb0 3a67 	vmov.f32	s6, s15
 8020cb0:	eef0 2a47 	vmov.f32	s5, s14
 8020cb4:	e5f3      	b.n	802089e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8020cb6:	2900      	cmp	r1, #0
 8020cb8:	f43f ae66 	beq.w	8020988 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8020cbc:	f818 0000 	ldrb.w	r0, [r8, r0]
 8020cc0:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8020cc4:	900a      	str	r0, [sp, #40]	; 0x28
 8020cc6:	0e00      	lsrs	r0, r0, #24
 8020cc8:	9013      	str	r0, [sp, #76]	; 0x4c
 8020cca:	e65d      	b.n	8020988 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8020ccc:	f113 0801 	adds.w	r8, r3, #1
 8020cd0:	f53f af74 	bmi.w	8020bbc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020cd4:	4540      	cmp	r0, r8
 8020cd6:	f6ff af71 	blt.w	8020bbc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020cda:	f11c 0801 	adds.w	r8, ip, #1
 8020cde:	f53f af6d 	bmi.w	8020bbc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020ce2:	45c6      	cmp	lr, r8
 8020ce4:	f6ff af6a 	blt.w	8020bbc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020ce8:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8020cea:	9302      	str	r3, [sp, #8]
 8020cec:	b200      	sxth	r0, r0
 8020cee:	fa0f f38e 	sxth.w	r3, lr
 8020cf2:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8020cf6:	e9cd c203 	strd	ip, r2, [sp, #12]
 8020cfa:	9301      	str	r3, [sp, #4]
 8020cfc:	9000      	str	r0, [sp, #0]
 8020cfe:	4633      	mov	r3, r6
 8020d00:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8020d02:	981d      	ldr	r0, [sp, #116]	; 0x74
 8020d04:	4639      	mov	r1, r7
 8020d06:	f7ff fc62 	bl	80205ce <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8020d0a:	e757      	b.n	8020bbc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020d0c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8020d0e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8020d10:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020d14:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8020d16:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020d1a:	1427      	asrs	r7, r4, #16
 8020d1c:	142b      	asrs	r3, r5, #16
 8020d1e:	fb01 7303 	mla	r3, r1, r3, r7
 8020d22:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020d24:	18e7      	adds	r7, r4, r3
 8020d26:	5ce3      	ldrb	r3, [r4, r3]
 8020d28:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020d2c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020d30:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8020d34:	2a00      	cmp	r2, #0
 8020d36:	f000 8137 	beq.w	8020fa8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8020d3a:	f897 e001 	ldrb.w	lr, [r7, #1]
 8020d3e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8020d42:	9410      	str	r4, [sp, #64]	; 0x40
 8020d44:	0e24      	lsrs	r4, r4, #24
 8020d46:	9417      	str	r4, [sp, #92]	; 0x5c
 8020d48:	b170      	cbz	r0, 8020d68 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8020d4a:	eb07 0e01 	add.w	lr, r7, r1
 8020d4e:	5c79      	ldrb	r1, [r7, r1]
 8020d50:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020d54:	910b      	str	r1, [sp, #44]	; 0x2c
 8020d56:	0e09      	lsrs	r1, r1, #24
 8020d58:	9114      	str	r1, [sp, #80]	; 0x50
 8020d5a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8020d5e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020d62:	9111      	str	r1, [sp, #68]	; 0x44
 8020d64:	0e09      	lsrs	r1, r1, #24
 8020d66:	9118      	str	r1, [sp, #96]	; 0x60
 8020d68:	b292      	uxth	r2, r2
 8020d6a:	b280      	uxth	r0, r0
 8020d6c:	fb02 f800 	mul.w	r8, r2, r0
 8020d70:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8020d74:	0112      	lsls	r2, r2, #4
 8020d76:	eba2 0e08 	sub.w	lr, r2, r8
 8020d7a:	b280      	uxth	r0, r0
 8020d7c:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8020d80:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8020d82:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020d84:	fa1f fe8e 	uxth.w	lr, lr
 8020d88:	1a12      	subs	r2, r2, r0
 8020d8a:	b292      	uxth	r2, r2
 8020d8c:	fb0e f101 	mul.w	r1, lr, r1
 8020d90:	fb02 110c 	mla	r1, r2, ip, r1
 8020d94:	fb00 1104 	mla	r1, r0, r4, r1
 8020d98:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020d9a:	fb08 1104 	mla	r1, r8, r4, r1
 8020d9e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8020da2:	2900      	cmp	r1, #0
 8020da4:	f000 80f5 	beq.w	8020f92 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8020da8:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8020dac:	d019      	beq.n	8020de2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8020dae:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8020db2:	fb0c fa0a 	mul.w	sl, ip, sl
 8020db6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020dba:	fb0c fc03 	mul.w	ip, ip, r3
 8020dbe:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020dc2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020dc6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020dca:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8020dce:	4453      	add	r3, sl
 8020dd0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8020dd4:	0a1b      	lsrs	r3, r3, #8
 8020dd6:	0a3f      	lsrs	r7, r7, #8
 8020dd8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020ddc:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8020de0:	433b      	orrs	r3, r7
 8020de2:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8020de4:	2cff      	cmp	r4, #255	; 0xff
 8020de6:	d020      	beq.n	8020e2a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8020de8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020dea:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020dee:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8020df0:	4367      	muls	r7, r4
 8020df2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020df4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020df8:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8020dfa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020dfe:	fb04 fa0a 	mul.w	sl, r4, sl
 8020e02:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020e06:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020e0a:	44bc      	add	ip, r7
 8020e0c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020e10:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020e14:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020e18:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020e1c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020e20:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020e24:	ea4c 040a 	orr.w	r4, ip, sl
 8020e28:	9410      	str	r4, [sp, #64]	; 0x40
 8020e2a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020e2c:	2cff      	cmp	r4, #255	; 0xff
 8020e2e:	d020      	beq.n	8020e72 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8020e30:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020e32:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020e36:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020e38:	4367      	muls	r7, r4
 8020e3a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020e3c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020e40:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020e42:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020e46:	fb04 fa0a 	mul.w	sl, r4, sl
 8020e4a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020e4e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020e52:	44bc      	add	ip, r7
 8020e54:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020e58:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020e5c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020e60:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020e64:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020e68:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020e6c:	ea4c 040a 	orr.w	r4, ip, sl
 8020e70:	940b      	str	r4, [sp, #44]	; 0x2c
 8020e72:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020e74:	2cff      	cmp	r4, #255	; 0xff
 8020e76:	d020      	beq.n	8020eba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8020e78:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020e7a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020e7e:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020e80:	4367      	muls	r7, r4
 8020e82:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020e84:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020e88:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020e8a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020e8e:	fb04 fa0a 	mul.w	sl, r4, sl
 8020e92:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020e96:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020e9a:	44bc      	add	ip, r7
 8020e9c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020ea0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020ea4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020ea8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020eac:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020eb0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020eb4:	ea4c 040a 	orr.w	r4, ip, sl
 8020eb8:	9411      	str	r4, [sp, #68]	; 0x44
 8020eba:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020ebc:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020ec0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020ec2:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8020ec6:	fb0e f707 	mul.w	r7, lr, r7
 8020eca:	fb02 770c 	mla	r7, r2, ip, r7
 8020ece:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020ed2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020ed4:	fb00 770c 	mla	r7, r0, ip, r7
 8020ed8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020edc:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020ede:	fb08 770c 	mla	r7, r8, ip, r7
 8020ee2:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8020ee6:	fb0e fe0c 	mul.w	lr, lr, ip
 8020eea:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020eee:	fb02 e303 	mla	r3, r2, r3, lr
 8020ef2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8020ef4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020ef6:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8020efa:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8020efc:	fb00 330a 	mla	r3, r0, sl, r3
 8020f00:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8020f04:	fb08 3c0c 	mla	ip, r8, ip, r3
 8020f08:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020f0a:	f8b9 0000 	ldrh.w	r0, [r9]
 8020f0e:	434b      	muls	r3, r1
 8020f10:	0a3f      	lsrs	r7, r7, #8
 8020f12:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020f16:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020f1a:	1c59      	adds	r1, r3, #1
 8020f1c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8020f20:	ea47 070c 	orr.w	r7, r7, ip
 8020f24:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8020f28:	1202      	asrs	r2, r0, #8
 8020f2a:	0c3b      	lsrs	r3, r7, #16
 8020f2c:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8020f30:	b2c9      	uxtb	r1, r1
 8020f32:	fb13 f304 	smulbb	r3, r3, r4
 8020f36:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8020f3a:	fb02 3201 	mla	r2, r2, r1, r3
 8020f3e:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8020f42:	10c3      	asrs	r3, r0, #3
 8020f44:	b2ff      	uxtb	r7, r7
 8020f46:	00c0      	lsls	r0, r0, #3
 8020f48:	b292      	uxth	r2, r2
 8020f4a:	fb1c fc04 	smulbb	ip, ip, r4
 8020f4e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8020f52:	b2c0      	uxtb	r0, r0
 8020f54:	fb17 f704 	smulbb	r7, r7, r4
 8020f58:	fb03 c301 	mla	r3, r3, r1, ip
 8020f5c:	fb00 7001 	mla	r0, r0, r1, r7
 8020f60:	f102 0c01 	add.w	ip, r2, #1
 8020f64:	b280      	uxth	r0, r0
 8020f66:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8020f6a:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8020f6e:	1c42      	adds	r2, r0, #1
 8020f70:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8020f74:	b29b      	uxth	r3, r3
 8020f76:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020f7a:	ea42 020c 	orr.w	r2, r2, ip
 8020f7e:	f103 0c01 	add.w	ip, r3, #1
 8020f82:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8020f86:	095b      	lsrs	r3, r3, #5
 8020f88:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020f8c:	431a      	orrs	r2, r3
 8020f8e:	f8a9 2000 	strh.w	r2, [r9]
 8020f92:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8020f94:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8020f96:	441a      	add	r2, r3
 8020f98:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020f9a:	9229      	str	r2, [sp, #164]	; 0xa4
 8020f9c:	f109 0902 	add.w	r9, r9, #2
 8020fa0:	441d      	add	r5, r3
 8020fa2:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020fa6:	e63d      	b.n	8020c24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8020fa8:	2800      	cmp	r0, #0
 8020faa:	f43f aedd 	beq.w	8020d68 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8020fae:	5c79      	ldrb	r1, [r7, r1]
 8020fb0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020fb4:	910b      	str	r1, [sp, #44]	; 0x2c
 8020fb6:	0e09      	lsrs	r1, r1, #24
 8020fb8:	9114      	str	r1, [sp, #80]	; 0x50
 8020fba:	e6d5      	b.n	8020d68 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8020fbc:	b01f      	add	sp, #124	; 0x7c
 8020fbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020fc2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8020fc2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020fc6:	b089      	sub	sp, #36	; 0x24
 8020fc8:	9101      	str	r1, [sp, #4]
 8020fca:	9801      	ldr	r0, [sp, #4]
 8020fcc:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 8020fd0:	8800      	ldrh	r0, [r0, #0]
 8020fd2:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 8020fd6:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8020fda:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 8020fde:	1206      	asrs	r6, r0, #8
 8020fe0:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 8020fe4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8020fe8:	9602      	str	r6, [sp, #8]
 8020fea:	10c6      	asrs	r6, r0, #3
 8020fec:	00c0      	lsls	r0, r0, #3
 8020fee:	b2c0      	uxtb	r0, r0
 8020ff0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8020ff4:	9004      	str	r0, [sp, #16]
 8020ff6:	2f00      	cmp	r7, #0
 8020ff8:	fb07 100c 	mla	r0, r7, ip, r1
 8020ffc:	9603      	str	r6, [sp, #12]
 8020ffe:	eb02 0e00 	add.w	lr, r2, r0
 8021002:	f2c0 810a 	blt.w	802121a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8021006:	45b8      	cmp	r8, r7
 8021008:	f340 8107 	ble.w	802121a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 802100c:	2900      	cmp	r1, #0
 802100e:	f2c0 8102 	blt.w	8021216 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8021012:	458c      	cmp	ip, r1
 8021014:	f340 80ff 	ble.w	8021216 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8021018:	5c12      	ldrb	r2, [r2, r0]
 802101a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 802101e:	1c4a      	adds	r2, r1, #1
 8021020:	f100 80fe 	bmi.w	8021220 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8021024:	4594      	cmp	ip, r2
 8021026:	f340 80fb 	ble.w	8021220 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 802102a:	2d00      	cmp	r5, #0
 802102c:	f000 80fa 	beq.w	8021224 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8021030:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8021034:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8021038:	3701      	adds	r7, #1
 802103a:	f100 80f7 	bmi.w	802122c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 802103e:	45b8      	cmp	r8, r7
 8021040:	f340 80f4 	ble.w	802122c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8021044:	2c00      	cmp	r4, #0
 8021046:	f000 80f4 	beq.w	8021232 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 802104a:	2900      	cmp	r1, #0
 802104c:	eb0e 020c 	add.w	r2, lr, ip
 8021050:	f2c0 80ea 	blt.w	8021228 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8021054:	458c      	cmp	ip, r1
 8021056:	f340 80e7 	ble.w	8021228 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 802105a:	f81e 700c 	ldrb.w	r7, [lr, ip]
 802105e:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 8021062:	3101      	adds	r1, #1
 8021064:	f100 80e8 	bmi.w	8021238 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8021068:	458c      	cmp	ip, r1
 802106a:	f340 80e5 	ble.w	8021238 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 802106e:	2d00      	cmp	r5, #0
 8021070:	f000 80e4 	beq.w	802123c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8021074:	7852      	ldrb	r2, [r2, #1]
 8021076:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 802107a:	0e0b      	lsrs	r3, r1, #24
 802107c:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8021080:	9300      	str	r3, [sp, #0]
 8021082:	b2a4      	uxth	r4, r4
 8021084:	b2ab      	uxth	r3, r5
 8021086:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 802108a:	fb03 f904 	mul.w	r9, r3, r4
 802108e:	fb0a f505 	mul.w	r5, sl, r5
 8021092:	011b      	lsls	r3, r3, #4
 8021094:	eba3 0e09 	sub.w	lr, r3, r9
 8021098:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 802109c:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 80210a0:	0a28      	lsrs	r0, r5, #8
 80210a2:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80210a6:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 80210aa:	4405      	add	r5, r0
 80210ac:	0a2d      	lsrs	r5, r5, #8
 80210ae:	fb0a f303 	mul.w	r3, sl, r3
 80210b2:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 80210b6:	9005      	str	r0, [sp, #20]
 80210b8:	f503 7080 	add.w	r0, r3, #256	; 0x100
 80210bc:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80210c0:	0a1b      	lsrs	r3, r3, #8
 80210c2:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 80210c6:	9306      	str	r3, [sp, #24]
 80210c8:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 80210cc:	fb0b f303 	mul.w	r3, fp, r3
 80210d0:	0a1d      	lsrs	r5, r3, #8
 80210d2:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80210d6:	ea4f 6817 	mov.w	r8, r7, lsr #24
 80210da:	fb0b f606 	mul.w	r6, fp, r6
 80210de:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 80210e2:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 80210e6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80210ea:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80210ee:	fb08 f707 	mul.w	r7, r8, r7
 80210f2:	441d      	add	r5, r3
 80210f4:	f506 7380 	add.w	r3, r6, #256	; 0x100
 80210f8:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80210fc:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8021100:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8021104:	fb08 fc0c 	mul.w	ip, r8, ip
 8021108:	0a1b      	lsrs	r3, r3, #8
 802110a:	9307      	str	r3, [sp, #28]
 802110c:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8021110:	0e0b      	lsrs	r3, r1, #24
 8021112:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 8021116:	435f      	muls	r7, r3
 8021118:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802111c:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8021120:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8021124:	4460      	add	r0, ip
 8021126:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802112a:	b2a4      	uxth	r4, r4
 802112c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021130:	0a2d      	lsrs	r5, r5, #8
 8021132:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8021136:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802113a:	fa1f fe8e 	uxth.w	lr, lr
 802113e:	4359      	muls	r1, r3
 8021140:	1b12      	subs	r2, r2, r4
 8021142:	9b05      	ldr	r3, [sp, #20]
 8021144:	44bc      	add	ip, r7
 8021146:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802114a:	b292      	uxth	r2, r2
 802114c:	fb05 f50e 	mul.w	r5, r5, lr
 8021150:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021154:	fb03 5502 	mla	r5, r3, r2, r5
 8021158:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802115c:	9b06      	ldr	r3, [sp, #24]
 802115e:	f501 7780 	add.w	r7, r1, #256	; 0x100
 8021162:	0a36      	lsrs	r6, r6, #8
 8021164:	0a00      	lsrs	r0, r0, #8
 8021166:	fb0c 5509 	mla	r5, ip, r9, r5
 802116a:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 802116e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8021172:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8021176:	fb00 5504 	mla	r5, r0, r4, r5
 802117a:	fb0e f606 	mul.w	r6, lr, r6
 802117e:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8021182:	0a09      	lsrs	r1, r1, #8
 8021184:	9b07      	ldr	r3, [sp, #28]
 8021186:	fb02 6000 	mla	r0, r2, r0, r6
 802118a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802118e:	fb09 0001 	mla	r0, r9, r1, r0
 8021192:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021196:	fb0e fe0b 	mul.w	lr, lr, fp
 802119a:	fb04 0003 	mla	r0, r4, r3, r0
 802119e:	fb02 e20a 	mla	r2, r2, sl, lr
 80211a2:	9b00      	ldr	r3, [sp, #0]
 80211a4:	fb04 2408 	mla	r4, r4, r8, r2
 80211a8:	fb09 4903 	mla	r9, r9, r3, r4
 80211ac:	ea6f 2929 	mvn.w	r9, r9, asr #8
 80211b0:	9b02      	ldr	r3, [sp, #8]
 80211b2:	9a04      	ldr	r2, [sp, #16]
 80211b4:	fa5f f989 	uxtb.w	r9, r9
 80211b8:	fb03 f109 	mul.w	r1, r3, r9
 80211bc:	9b03      	ldr	r3, [sp, #12]
 80211be:	0a2d      	lsrs	r5, r5, #8
 80211c0:	0a00      	lsrs	r0, r0, #8
 80211c2:	fb03 f309 	mul.w	r3, r3, r9
 80211c6:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80211ca:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80211ce:	4305      	orrs	r5, r0
 80211d0:	fb02 f909 	mul.w	r9, r2, r9
 80211d4:	1c58      	adds	r0, r3, #1
 80211d6:	1c4a      	adds	r2, r1, #1
 80211d8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80211dc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80211e0:	0a2b      	lsrs	r3, r5, #8
 80211e2:	0c2a      	lsrs	r2, r5, #16
 80211e4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80211e8:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 80211ec:	00db      	lsls	r3, r3, #3
 80211ee:	0212      	lsls	r2, r2, #8
 80211f0:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80211f4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80211f8:	4313      	orrs	r3, r2
 80211fa:	f109 0201 	add.w	r2, r9, #1
 80211fe:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8021202:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8021206:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 802120a:	431d      	orrs	r5, r3
 802120c:	9b01      	ldr	r3, [sp, #4]
 802120e:	801d      	strh	r5, [r3, #0]
 8021210:	b009      	add	sp, #36	; 0x24
 8021212:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021216:	2000      	movs	r0, #0
 8021218:	e701      	b.n	802101e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 802121a:	2600      	movs	r6, #0
 802121c:	4630      	mov	r0, r6
 802121e:	e70b      	b.n	8021038 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8021220:	2600      	movs	r6, #0
 8021222:	e709      	b.n	8021038 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8021224:	462e      	mov	r6, r5
 8021226:	e707      	b.n	8021038 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8021228:	2700      	movs	r7, #0
 802122a:	e71a      	b.n	8021062 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 802122c:	2100      	movs	r1, #0
 802122e:	460f      	mov	r7, r1
 8021230:	e723      	b.n	802107a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8021232:	4621      	mov	r1, r4
 8021234:	4627      	mov	r7, r4
 8021236:	e720      	b.n	802107a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8021238:	2100      	movs	r1, #0
 802123a:	e71e      	b.n	802107a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 802123c:	4629      	mov	r1, r5
 802123e:	e71c      	b.n	802107a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08021240 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021240:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021244:	b09b      	sub	sp, #108	; 0x6c
 8021246:	9218      	str	r2, [sp, #96]	; 0x60
 8021248:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 802124a:	9116      	str	r1, [sp, #88]	; 0x58
 802124c:	9307      	str	r3, [sp, #28]
 802124e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8021252:	9019      	str	r0, [sp, #100]	; 0x64
 8021254:	6850      	ldr	r0, [r2, #4]
 8021256:	6812      	ldr	r2, [r2, #0]
 8021258:	9d26      	ldr	r5, [sp, #152]	; 0x98
 802125a:	fb00 1303 	mla	r3, r0, r3, r1
 802125e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021262:	930a      	str	r3, [sp, #40]	; 0x28
 8021264:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021266:	681b      	ldr	r3, [r3, #0]
 8021268:	930f      	str	r3, [sp, #60]	; 0x3c
 802126a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802126c:	685e      	ldr	r6, [r3, #4]
 802126e:	3604      	adds	r6, #4
 8021270:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8021272:	2b00      	cmp	r3, #0
 8021274:	dc03      	bgt.n	802127e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8021276:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021278:	2b00      	cmp	r3, #0
 802127a:	f340 8373 	ble.w	8021964 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 802127e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021280:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021284:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021288:	1e48      	subs	r0, r1, #1
 802128a:	1e57      	subs	r7, r2, #1
 802128c:	9b07      	ldr	r3, [sp, #28]
 802128e:	2b00      	cmp	r3, #0
 8021290:	f340 8190 	ble.w	80215b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8021294:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021296:	ea5f 4c24 	movs.w	ip, r4, asr #16
 802129a:	ea4f 4325 	mov.w	r3, r5, asr #16
 802129e:	d406      	bmi.n	80212ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80212a0:	4584      	cmp	ip, r0
 80212a2:	da04      	bge.n	80212ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80212a4:	2b00      	cmp	r3, #0
 80212a6:	db02      	blt.n	80212ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80212a8:	42bb      	cmp	r3, r7
 80212aa:	f2c0 8184 	blt.w	80215b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 80212ae:	f11c 0c01 	adds.w	ip, ip, #1
 80212b2:	f100 8172 	bmi.w	802159a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80212b6:	4561      	cmp	r1, ip
 80212b8:	f2c0 816f 	blt.w	802159a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80212bc:	3301      	adds	r3, #1
 80212be:	f100 816c 	bmi.w	802159a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80212c2:	429a      	cmp	r2, r3
 80212c4:	f2c0 8169 	blt.w	802159a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80212c8:	9b07      	ldr	r3, [sp, #28]
 80212ca:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80212cc:	9317      	str	r3, [sp, #92]	; 0x5c
 80212ce:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80212d0:	2b00      	cmp	r3, #0
 80212d2:	f340 818e 	ble.w	80215f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 80212d6:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80212d8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80212dc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80212de:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 80212e2:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80212e4:	141b      	asrs	r3, r3, #16
 80212e6:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80212ea:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80212ee:	f100 81d1 	bmi.w	8021694 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80212f2:	f101 38ff 	add.w	r8, r1, #4294967295
 80212f6:	4543      	cmp	r3, r8
 80212f8:	f280 81cc 	bge.w	8021694 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80212fc:	f1bc 0f00 	cmp.w	ip, #0
 8021300:	f2c0 81c8 	blt.w	8021694 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021304:	f10e 38ff 	add.w	r8, lr, #4294967295
 8021308:	45c4      	cmp	ip, r8
 802130a:	f280 81c3 	bge.w	8021694 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 802130e:	b209      	sxth	r1, r1
 8021310:	fb0c 3301 	mla	r3, ip, r1, r3
 8021314:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021316:	eb04 0803 	add.w	r8, r4, r3
 802131a:	5ce3      	ldrb	r3, [r4, r3]
 802131c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8021320:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8021324:	2a00      	cmp	r2, #0
 8021326:	f000 81aa 	beq.w	802167e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 802132a:	f898 c001 	ldrb.w	ip, [r8, #1]
 802132e:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8021332:	940b      	str	r4, [sp, #44]	; 0x2c
 8021334:	0e24      	lsrs	r4, r4, #24
 8021336:	9412      	str	r4, [sp, #72]	; 0x48
 8021338:	b178      	cbz	r0, 802135a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 802133a:	eb08 0c01 	add.w	ip, r8, r1
 802133e:	f818 1001 	ldrb.w	r1, [r8, r1]
 8021342:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021346:	9108      	str	r1, [sp, #32]
 8021348:	0e09      	lsrs	r1, r1, #24
 802134a:	9110      	str	r1, [sp, #64]	; 0x40
 802134c:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8021350:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021354:	910c      	str	r1, [sp, #48]	; 0x30
 8021356:	0e09      	lsrs	r1, r1, #24
 8021358:	9113      	str	r1, [sp, #76]	; 0x4c
 802135a:	b292      	uxth	r2, r2
 802135c:	b280      	uxth	r0, r0
 802135e:	fb02 f900 	mul.w	r9, r2, r0
 8021362:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8021366:	0112      	lsls	r2, r2, #4
 8021368:	eba2 0809 	sub.w	r8, r2, r9
 802136c:	b280      	uxth	r0, r0
 802136e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8021372:	9912      	ldr	r1, [sp, #72]	; 0x48
 8021374:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021376:	fa1f f888 	uxth.w	r8, r8
 802137a:	1a12      	subs	r2, r2, r0
 802137c:	b292      	uxth	r2, r2
 802137e:	fb08 f101 	mul.w	r1, r8, r1
 8021382:	fb02 110e 	mla	r1, r2, lr, r1
 8021386:	fb00 1104 	mla	r1, r0, r4, r1
 802138a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802138c:	fb09 1104 	mla	r1, r9, r4, r1
 8021390:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8021394:	2900      	cmp	r1, #0
 8021396:	f000 80f5 	beq.w	8021584 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802139a:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 802139e:	d01b      	beq.n	80213d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80213a0:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80213a4:	fb0e fa0a 	mul.w	sl, lr, sl
 80213a8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80213ac:	fb0e fe03 	mul.w	lr, lr, r3
 80213b0:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80213b4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80213b8:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80213bc:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80213c0:	4453      	add	r3, sl
 80213c2:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80213c6:	0a1b      	lsrs	r3, r3, #8
 80213c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80213cc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80213d0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80213d4:	ea43 030c 	orr.w	r3, r3, ip
 80213d8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80213da:	2cff      	cmp	r4, #255	; 0xff
 80213dc:	d021      	beq.n	8021422 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 80213de:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80213e0:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80213e4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80213e6:	fb04 fb0b 	mul.w	fp, r4, fp
 80213ea:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80213ec:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80213f0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80213f2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80213f6:	fb04 fa0a 	mul.w	sl, r4, sl
 80213fa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80213fe:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021402:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021406:	44de      	add	lr, fp
 8021408:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802140c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021410:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021414:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021418:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802141c:	ea4e 040a 	orr.w	r4, lr, sl
 8021420:	940b      	str	r4, [sp, #44]	; 0x2c
 8021422:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021424:	2cff      	cmp	r4, #255	; 0xff
 8021426:	d021      	beq.n	802146c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8021428:	9c08      	ldr	r4, [sp, #32]
 802142a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802142e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021430:	fb04 fb0b 	mul.w	fp, r4, fp
 8021434:	9c08      	ldr	r4, [sp, #32]
 8021436:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802143a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802143c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021440:	fb04 fa0a 	mul.w	sl, r4, sl
 8021444:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021448:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802144c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021450:	44de      	add	lr, fp
 8021452:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021456:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802145a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802145e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021462:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021466:	ea4e 040a 	orr.w	r4, lr, sl
 802146a:	9408      	str	r4, [sp, #32]
 802146c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802146e:	2cff      	cmp	r4, #255	; 0xff
 8021470:	d021      	beq.n	80214b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8021472:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8021474:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021478:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802147a:	fb04 fb0b 	mul.w	fp, r4, fp
 802147e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8021480:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021484:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021486:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802148a:	fb04 fa0a 	mul.w	sl, r4, sl
 802148e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021492:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021496:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802149a:	44de      	add	lr, fp
 802149c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80214a0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80214a4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80214a8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80214ac:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80214b0:	ea4e 040a 	orr.w	r4, lr, sl
 80214b4:	940c      	str	r4, [sp, #48]	; 0x30
 80214b6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80214b8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80214bc:	9c08      	ldr	r4, [sp, #32]
 80214be:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80214c2:	fb08 fc0c 	mul.w	ip, r8, ip
 80214c6:	fb02 cc0e 	mla	ip, r2, lr, ip
 80214ca:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80214ce:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80214d0:	fb00 cc0e 	mla	ip, r0, lr, ip
 80214d4:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80214d8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80214da:	fb09 cc0e 	mla	ip, r9, lr, ip
 80214de:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80214e2:	fb08 f80e 	mul.w	r8, r8, lr
 80214e6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80214ea:	fb02 8303 	mla	r3, r2, r3, r8
 80214ee:	9a08      	ldr	r2, [sp, #32]
 80214f0:	f8b7 8000 	ldrh.w	r8, [r7]
 80214f4:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80214f8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80214fa:	fb00 330a 	mla	r3, r0, sl, r3
 80214fe:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8021502:	fb09 3900 	mla	r9, r9, r0, r3
 8021506:	43c9      	mvns	r1, r1
 8021508:	ea4f 2228 	mov.w	r2, r8, asr #8
 802150c:	fa5f fe81 	uxtb.w	lr, r1
 8021510:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021514:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021518:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802151c:	fb02 f20e 	mul.w	r2, r2, lr
 8021520:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021524:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8021528:	ea4c 0c09 	orr.w	ip, ip, r9
 802152c:	1c53      	adds	r3, r2, #1
 802152e:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8021532:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8021536:	ea4f 431c 	mov.w	r3, ip, lsr #16
 802153a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802153e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021542:	4a63      	ldr	r2, [pc, #396]	; (80216d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8021544:	fb00 f00e 	mul.w	r0, r0, lr
 8021548:	b2db      	uxtb	r3, r3
 802154a:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 802154e:	1c43      	adds	r3, r0, #1
 8021550:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8021554:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8021558:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 802155c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8021560:	b2c9      	uxtb	r1, r1
 8021562:	00db      	lsls	r3, r3, #3
 8021564:	fb01 f10e 	mul.w	r1, r1, lr
 8021568:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802156c:	4313      	orrs	r3, r2
 802156e:	1c4a      	adds	r2, r1, #1
 8021570:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021574:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8021578:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 802157c:	ea4c 0c03 	orr.w	ip, ip, r3
 8021580:	f8a7 c000 	strh.w	ip, [r7]
 8021584:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8021586:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8021588:	441a      	add	r2, r3
 802158a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802158c:	9225      	str	r2, [sp, #148]	; 0x94
 802158e:	441d      	add	r5, r3
 8021590:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8021592:	3b01      	subs	r3, #1
 8021594:	3702      	adds	r7, #2
 8021596:	9317      	str	r3, [sp, #92]	; 0x5c
 8021598:	e699      	b.n	80212ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802159a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802159c:	9c25      	ldr	r4, [sp, #148]	; 0x94
 802159e:	441c      	add	r4, r3
 80215a0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80215a2:	9425      	str	r4, [sp, #148]	; 0x94
 80215a4:	441d      	add	r5, r3
 80215a6:	9b07      	ldr	r3, [sp, #28]
 80215a8:	3b01      	subs	r3, #1
 80215aa:	9307      	str	r3, [sp, #28]
 80215ac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80215ae:	3302      	adds	r3, #2
 80215b0:	930a      	str	r3, [sp, #40]	; 0x28
 80215b2:	e66b      	b.n	802128c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80215b4:	d024      	beq.n	8021600 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 80215b6:	9b07      	ldr	r3, [sp, #28]
 80215b8:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80215ba:	9c25      	ldr	r4, [sp, #148]	; 0x94
 80215bc:	3b01      	subs	r3, #1
 80215be:	fb00 4003 	mla	r0, r0, r3, r4
 80215c2:	1400      	asrs	r0, r0, #16
 80215c4:	f53f ae80 	bmi.w	80212c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80215c8:	3901      	subs	r1, #1
 80215ca:	4288      	cmp	r0, r1
 80215cc:	f6bf ae7c 	bge.w	80212c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80215d0:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80215d2:	fb01 5303 	mla	r3, r1, r3, r5
 80215d6:	141b      	asrs	r3, r3, #16
 80215d8:	f53f ae76 	bmi.w	80212c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80215dc:	3a01      	subs	r2, #1
 80215de:	4293      	cmp	r3, r2
 80215e0:	f6bf ae72 	bge.w	80212c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80215e4:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80215e8:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 80215ec:	f1bb 0f00 	cmp.w	fp, #0
 80215f0:	dc70      	bgt.n	80216d4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 80215f2:	9b07      	ldr	r3, [sp, #28]
 80215f4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80215f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80215fa:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80215fe:	930a      	str	r3, [sp, #40]	; 0x28
 8021600:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8021602:	2b00      	cmp	r3, #0
 8021604:	f340 81ae 	ble.w	8021964 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8021608:	ee30 0a04 	vadd.f32	s0, s0, s8
 802160c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021610:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021614:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021616:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802161a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802161e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021622:	eef0 6a62 	vmov.f32	s13, s5
 8021626:	ee61 7a27 	vmul.f32	s15, s2, s15
 802162a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802162e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021632:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8021636:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802163a:	eef0 6a43 	vmov.f32	s13, s6
 802163e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021642:	ee12 2a90 	vmov	r2, s5
 8021646:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802164a:	fb92 f3f3 	sdiv	r3, r2, r3
 802164e:	ee13 2a10 	vmov	r2, s6
 8021652:	9327      	str	r3, [sp, #156]	; 0x9c
 8021654:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021656:	fb92 f3f3 	sdiv	r3, r2, r3
 802165a:	9328      	str	r3, [sp, #160]	; 0xa0
 802165c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802165e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8021660:	3b01      	subs	r3, #1
 8021662:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021666:	9316      	str	r3, [sp, #88]	; 0x58
 8021668:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802166a:	bf08      	it	eq
 802166c:	4613      	moveq	r3, r2
 802166e:	ee16 5a90 	vmov	r5, s13
 8021672:	9307      	str	r3, [sp, #28]
 8021674:	eeb0 3a67 	vmov.f32	s6, s15
 8021678:	eef0 2a47 	vmov.f32	s5, s14
 802167c:	e5f8      	b.n	8021270 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 802167e:	2800      	cmp	r0, #0
 8021680:	f43f ae6b 	beq.w	802135a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8021684:	f818 1001 	ldrb.w	r1, [r8, r1]
 8021688:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802168c:	9108      	str	r1, [sp, #32]
 802168e:	0e09      	lsrs	r1, r1, #24
 8021690:	9110      	str	r1, [sp, #64]	; 0x40
 8021692:	e662      	b.n	802135a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8021694:	f113 0801 	adds.w	r8, r3, #1
 8021698:	f53f af74 	bmi.w	8021584 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802169c:	4541      	cmp	r1, r8
 802169e:	f6ff af71 	blt.w	8021584 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80216a2:	f11c 0801 	adds.w	r8, ip, #1
 80216a6:	f53f af6d 	bmi.w	8021584 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80216aa:	45c6      	cmp	lr, r8
 80216ac:	f6ff af6a 	blt.w	8021584 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80216b0:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 80216b4:	b209      	sxth	r1, r1
 80216b6:	fa0f f38e 	sxth.w	r3, lr
 80216ba:	e9cd 2004 	strd	r2, r0, [sp, #16]
 80216be:	9301      	str	r3, [sp, #4]
 80216c0:	9100      	str	r1, [sp, #0]
 80216c2:	4633      	mov	r3, r6
 80216c4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80216c6:	9819      	ldr	r0, [sp, #100]	; 0x64
 80216c8:	4639      	mov	r1, r7
 80216ca:	f7ff fc7a 	bl	8020fc2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 80216ce:	e759      	b.n	8021584 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80216d0:	fffff800 	.word	0xfffff800
 80216d4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80216d6:	9c25      	ldr	r4, [sp, #148]	; 0x94
 80216d8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80216dc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80216de:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80216e2:	1427      	asrs	r7, r4, #16
 80216e4:	142b      	asrs	r3, r5, #16
 80216e6:	fb01 7303 	mla	r3, r1, r3, r7
 80216ea:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80216ec:	18e7      	adds	r7, r4, r3
 80216ee:	5ce3      	ldrb	r3, [r4, r3]
 80216f0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80216f4:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80216f8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80216fc:	2a00      	cmp	r2, #0
 80216fe:	f000 8127 	beq.w	8021950 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8021702:	f897 e001 	ldrb.w	lr, [r7, #1]
 8021706:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 802170a:	940d      	str	r4, [sp, #52]	; 0x34
 802170c:	0e24      	lsrs	r4, r4, #24
 802170e:	9414      	str	r4, [sp, #80]	; 0x50
 8021710:	b170      	cbz	r0, 8021730 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8021712:	eb07 0e01 	add.w	lr, r7, r1
 8021716:	5c79      	ldrb	r1, [r7, r1]
 8021718:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802171c:	9109      	str	r1, [sp, #36]	; 0x24
 802171e:	0e09      	lsrs	r1, r1, #24
 8021720:	9111      	str	r1, [sp, #68]	; 0x44
 8021722:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8021726:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802172a:	910e      	str	r1, [sp, #56]	; 0x38
 802172c:	0e09      	lsrs	r1, r1, #24
 802172e:	9115      	str	r1, [sp, #84]	; 0x54
 8021730:	b292      	uxth	r2, r2
 8021732:	b280      	uxth	r0, r0
 8021734:	fb02 f800 	mul.w	r8, r2, r0
 8021738:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 802173c:	0112      	lsls	r2, r2, #4
 802173e:	eba2 0e08 	sub.w	lr, r2, r8
 8021742:	b280      	uxth	r0, r0
 8021744:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8021748:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802174a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802174c:	fa1f fe8e 	uxth.w	lr, lr
 8021750:	1a09      	subs	r1, r1, r0
 8021752:	b289      	uxth	r1, r1
 8021754:	fb0e f202 	mul.w	r2, lr, r2
 8021758:	fb01 220c 	mla	r2, r1, ip, r2
 802175c:	fb00 2204 	mla	r2, r0, r4, r2
 8021760:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021762:	fb08 2204 	mla	r2, r8, r4, r2
 8021766:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802176a:	2a00      	cmp	r2, #0
 802176c:	f000 80e5 	beq.w	802193a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8021770:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8021774:	d019      	beq.n	80217aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8021776:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802177a:	fb0c fa0a 	mul.w	sl, ip, sl
 802177e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021782:	fb0c fc03 	mul.w	ip, ip, r3
 8021786:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802178a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802178e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8021792:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8021796:	4453      	add	r3, sl
 8021798:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802179c:	0a1b      	lsrs	r3, r3, #8
 802179e:	0a3f      	lsrs	r7, r7, #8
 80217a0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80217a4:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80217a8:	433b      	orrs	r3, r7
 80217aa:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80217ac:	2cff      	cmp	r4, #255	; 0xff
 80217ae:	d020      	beq.n	80217f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 80217b0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80217b2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80217b6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80217b8:	4367      	muls	r7, r4
 80217ba:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80217bc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80217c0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80217c2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80217c6:	fb04 fa0a 	mul.w	sl, r4, sl
 80217ca:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80217ce:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80217d2:	44bc      	add	ip, r7
 80217d4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80217d8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80217dc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80217e0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80217e4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80217e8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80217ec:	ea4c 040a 	orr.w	r4, ip, sl
 80217f0:	940d      	str	r4, [sp, #52]	; 0x34
 80217f2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80217f4:	2cff      	cmp	r4, #255	; 0xff
 80217f6:	d020      	beq.n	802183a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 80217f8:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80217fa:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80217fe:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021800:	4367      	muls	r7, r4
 8021802:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8021804:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021808:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802180a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802180e:	fb04 fa0a 	mul.w	sl, r4, sl
 8021812:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021816:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802181a:	44bc      	add	ip, r7
 802181c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021820:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021824:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021828:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802182c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021830:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021834:	ea4c 040a 	orr.w	r4, ip, sl
 8021838:	9409      	str	r4, [sp, #36]	; 0x24
 802183a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802183c:	2cff      	cmp	r4, #255	; 0xff
 802183e:	d020      	beq.n	8021882 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8021840:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021842:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021846:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021848:	4367      	muls	r7, r4
 802184a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802184c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021850:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021852:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021856:	fb04 fa0a 	mul.w	sl, r4, sl
 802185a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802185e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021862:	44bc      	add	ip, r7
 8021864:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021868:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802186c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021870:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021874:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021878:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802187c:	ea4c 040a 	orr.w	r4, ip, sl
 8021880:	940e      	str	r4, [sp, #56]	; 0x38
 8021882:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021884:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021888:	9c09      	ldr	r4, [sp, #36]	; 0x24
 802188a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802188e:	fb0e f707 	mul.w	r7, lr, r7
 8021892:	fb01 770c 	mla	r7, r1, ip, r7
 8021896:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802189a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802189c:	fb00 770c 	mla	r7, r0, ip, r7
 80218a0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80218a4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80218a6:	fb08 770c 	mla	r7, r8, ip, r7
 80218aa:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80218ae:	fb0e fe0c 	mul.w	lr, lr, ip
 80218b2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80218b6:	fb01 e303 	mla	r3, r1, r3, lr
 80218ba:	9909      	ldr	r1, [sp, #36]	; 0x24
 80218bc:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80218c0:	990e      	ldr	r1, [sp, #56]	; 0x38
 80218c2:	fb00 330a 	mla	r3, r0, sl, r3
 80218c6:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80218ca:	fb08 3c0c 	mla	ip, r8, ip, r3
 80218ce:	f8b9 3000 	ldrh.w	r3, [r9]
 80218d2:	43d2      	mvns	r2, r2
 80218d4:	1218      	asrs	r0, r3, #8
 80218d6:	b2d2      	uxtb	r2, r2
 80218d8:	10d9      	asrs	r1, r3, #3
 80218da:	0a3f      	lsrs	r7, r7, #8
 80218dc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80218e0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80218e4:	00db      	lsls	r3, r3, #3
 80218e6:	4350      	muls	r0, r2
 80218e8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80218ec:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80218f0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80218f4:	b2db      	uxtb	r3, r3
 80218f6:	ea47 070c 	orr.w	r7, r7, ip
 80218fa:	4351      	muls	r1, r2
 80218fc:	4353      	muls	r3, r2
 80218fe:	1c42      	adds	r2, r0, #1
 8021900:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8021904:	0c3a      	lsrs	r2, r7, #16
 8021906:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802190a:	4a18      	ldr	r2, [pc, #96]	; (802196c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 802190c:	b2c0      	uxtb	r0, r0
 802190e:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8021912:	1c4a      	adds	r2, r1, #1
 8021914:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021918:	0a3a      	lsrs	r2, r7, #8
 802191a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802191e:	00c9      	lsls	r1, r1, #3
 8021920:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021924:	4301      	orrs	r1, r0
 8021926:	1c58      	adds	r0, r3, #1
 8021928:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802192c:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8021930:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8021934:	4308      	orrs	r0, r1
 8021936:	f8a9 0000 	strh.w	r0, [r9]
 802193a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802193c:	9a25      	ldr	r2, [sp, #148]	; 0x94
 802193e:	441a      	add	r2, r3
 8021940:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021942:	9225      	str	r2, [sp, #148]	; 0x94
 8021944:	f109 0902 	add.w	r9, r9, #2
 8021948:	441d      	add	r5, r3
 802194a:	f10b 3bff 	add.w	fp, fp, #4294967295
 802194e:	e64d      	b.n	80215ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8021950:	2800      	cmp	r0, #0
 8021952:	f43f aeed 	beq.w	8021730 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8021956:	5c79      	ldrb	r1, [r7, r1]
 8021958:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802195c:	9109      	str	r1, [sp, #36]	; 0x24
 802195e:	0e09      	lsrs	r1, r1, #24
 8021960:	9111      	str	r1, [sp, #68]	; 0x44
 8021962:	e6e5      	b.n	8021730 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8021964:	b01b      	add	sp, #108	; 0x6c
 8021966:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802196a:	bf00      	nop
 802196c:	fffff800 	.word	0xfffff800

08021970 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8021970:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021974:	b085      	sub	sp, #20
 8021976:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 802197a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 802197e:	9103      	str	r1, [sp, #12]
 8021980:	fb00 7406 	mla	r4, r0, r6, r7
 8021984:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8021988:	2800      	cmp	r0, #0
 802198a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 802198e:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8021992:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8021996:	9501      	str	r5, [sp, #4]
 8021998:	eb03 0904 	add.w	r9, r3, r4
 802199c:	f2c0 8150 	blt.w	8021c40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 80219a0:	4583      	cmp	fp, r0
 80219a2:	f340 814d 	ble.w	8021c40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 80219a6:	2f00      	cmp	r7, #0
 80219a8:	f2c0 8146 	blt.w	8021c38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 80219ac:	42be      	cmp	r6, r7
 80219ae:	f340 8143 	ble.w	8021c38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 80219b2:	f813 c004 	ldrb.w	ip, [r3, r4]
 80219b6:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 80219ba:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80219be:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 80219c2:	4355      	muls	r5, r2
 80219c4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80219c8:	f64f 041f 	movw	r4, #63519	; 0xf81f
 80219cc:	fb0c f203 	mul.w	r2, ip, r3
 80219d0:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 80219d4:	f605 0501 	addw	r5, r5, #2049	; 0x801
 80219d8:	441d      	add	r5, r3
 80219da:	f102 0320 	add.w	r3, r2, #32
 80219de:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80219e2:	0a1b      	lsrs	r3, r3, #8
 80219e4:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 80219e8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80219ec:	431c      	orrs	r4, r3
 80219ee:	1c7b      	adds	r3, r7, #1
 80219f0:	f100 812b 	bmi.w	8021c4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80219f4:	429e      	cmp	r6, r3
 80219f6:	f340 8128 	ble.w	8021c4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80219fa:	2900      	cmp	r1, #0
 80219fc:	f000 8128 	beq.w	8021c50 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 8021a00:	9a01      	ldr	r2, [sp, #4]
 8021a02:	f899 3001 	ldrb.w	r3, [r9, #1]
 8021a06:	8855      	ldrh	r5, [r2, #2]
 8021a08:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8021a0c:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8021a10:	fb08 f802 	mul.w	r8, r8, r2
 8021a14:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021a18:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8021a1c:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8021a20:	435d      	muls	r5, r3
 8021a22:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021a26:	44d0      	add	r8, sl
 8021a28:	f105 0a20 	add.w	sl, r5, #32
 8021a2c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8021a30:	0a2d      	lsrs	r5, r5, #8
 8021a32:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8021a36:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021a3a:	432a      	orrs	r2, r5
 8021a3c:	3001      	adds	r0, #1
 8021a3e:	f100 810d 	bmi.w	8021c5c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8021a42:	4583      	cmp	fp, r0
 8021a44:	f340 810a 	ble.w	8021c5c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8021a48:	f1be 0f00 	cmp.w	lr, #0
 8021a4c:	f000 810b 	beq.w	8021c66 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8021a50:	2f00      	cmp	r7, #0
 8021a52:	f2c0 8100 	blt.w	8021c56 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8021a56:	42be      	cmp	r6, r7
 8021a58:	f340 80fd 	ble.w	8021c56 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8021a5c:	9801      	ldr	r0, [sp, #4]
 8021a5e:	f819 5006 	ldrb.w	r5, [r9, r6]
 8021a62:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8021a66:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8021a6a:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8021a6e:	fb0a fa00 	mul.w	sl, sl, r0
 8021a72:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8021a76:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8021a7a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8021a7e:	fb05 f808 	mul.w	r8, r5, r8
 8021a82:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8021a86:	4482      	add	sl, r0
 8021a88:	f108 0020 	add.w	r0, r8, #32
 8021a8c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021a90:	0a00      	lsrs	r0, r0, #8
 8021a92:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8021a96:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021a9a:	ea4b 0b00 	orr.w	fp, fp, r0
 8021a9e:	3701      	adds	r7, #1
 8021aa0:	f100 80e6 	bmi.w	8021c70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8021aa4:	42be      	cmp	r6, r7
 8021aa6:	f340 80e3 	ble.w	8021c70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8021aaa:	2900      	cmp	r1, #0
 8021aac:	f000 80e3 	beq.w	8021c76 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8021ab0:	3601      	adds	r6, #1
 8021ab2:	9801      	ldr	r0, [sp, #4]
 8021ab4:	f819 7006 	ldrb.w	r7, [r9, r6]
 8021ab8:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8021abc:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8021ac0:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8021ac4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021ac8:	fb09 f906 	mul.w	r9, r9, r6
 8021acc:	fb07 f800 	mul.w	r8, r7, r0
 8021ad0:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8021ad4:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8021ad8:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8021adc:	44d1      	add	r9, sl
 8021ade:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8021ae2:	f108 0020 	add.w	r0, r8, #32
 8021ae6:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021aea:	0a00      	lsrs	r0, r0, #8
 8021aec:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021af0:	4330      	orrs	r0, r6
 8021af2:	b28e      	uxth	r6, r1
 8021af4:	fa1f f98e 	uxth.w	r9, lr
 8021af8:	fb06 f809 	mul.w	r8, r6, r9
 8021afc:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8021b00:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8021b04:	0136      	lsls	r6, r6, #4
 8021b06:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021b0a:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8021b0e:	9601      	str	r6, [sp, #4]
 8021b10:	ea4a 0404 	orr.w	r4, sl, r4
 8021b14:	fa1f f689 	uxth.w	r6, r9
 8021b18:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021b1c:	fb11 f90e 	smulbb	r9, r1, lr
 8021b20:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8021b24:	9602      	str	r6, [sp, #8]
 8021b26:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021b2a:	4626      	mov	r6, r4
 8021b2c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021b30:	f1ce 0410 	rsb	r4, lr, #16
 8021b34:	1a64      	subs	r4, r4, r1
 8021b36:	ea4a 0202 	orr.w	r2, sl, r2
 8021b3a:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8021b3e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8021b42:	434a      	muls	r2, r1
 8021b44:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8021b48:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021b4c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021b50:	fb04 2406 	mla	r4, r4, r6, r2
 8021b54:	ea4a 0000 	orr.w	r0, sl, r0
 8021b58:	fb09 4200 	mla	r2, r9, r0, r4
 8021b5c:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8021b60:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8021b64:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8021b68:	ea44 0b0b 	orr.w	fp, r4, fp
 8021b6c:	9c01      	ldr	r4, [sp, #4]
 8021b6e:	9e02      	ldr	r6, [sp, #8]
 8021b70:	9903      	ldr	r1, [sp, #12]
 8021b72:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 8021b76:	1ba4      	subs	r4, r4, r6
 8021b78:	9e01      	ldr	r6, [sp, #4]
 8021b7a:	8808      	ldrh	r0, [r1, #0]
 8021b7c:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 8021b80:	eba6 0608 	sub.w	r6, r6, r8
 8021b84:	b2b6      	uxth	r6, r6
 8021b86:	b2a4      	uxth	r4, r4
 8021b88:	4373      	muls	r3, r6
 8021b8a:	fb0c 3304 	mla	r3, ip, r4, r3
 8021b8e:	9c02      	ldr	r4, [sp, #8]
 8021b90:	fb04 3505 	mla	r5, r4, r5, r3
 8021b94:	fb08 5707 	mla	r7, r8, r7, r5
 8021b98:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8021b9c:	b289      	uxth	r1, r1
 8021b9e:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8021ba2:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8021ba6:	434f      	muls	r7, r1
 8021ba8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021bac:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021bb0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021bb4:	1c7b      	adds	r3, r7, #1
 8021bb6:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8021bba:	ea42 0e0e 	orr.w	lr, r2, lr
 8021bbe:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8021bc2:	fa1f f28e 	uxth.w	r2, lr
 8021bc6:	1203      	asrs	r3, r0, #8
 8021bc8:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8021bcc:	b2ff      	uxtb	r7, r7
 8021bce:	1215      	asrs	r5, r2, #8
 8021bd0:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8021bd4:	fb13 f307 	smulbb	r3, r3, r7
 8021bd8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021bdc:	fb05 3501 	mla	r5, r5, r1, r3
 8021be0:	10c3      	asrs	r3, r0, #3
 8021be2:	10d4      	asrs	r4, r2, #3
 8021be4:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8021be8:	fb13 f307 	smulbb	r3, r3, r7
 8021bec:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8021bf0:	fb04 3401 	mla	r4, r4, r1, r3
 8021bf4:	00c3      	lsls	r3, r0, #3
 8021bf6:	00d2      	lsls	r2, r2, #3
 8021bf8:	b2db      	uxtb	r3, r3
 8021bfa:	fb13 f307 	smulbb	r3, r3, r7
 8021bfe:	b2d2      	uxtb	r2, r2
 8021c00:	fb02 3101 	mla	r1, r2, r1, r3
 8021c04:	b2ad      	uxth	r5, r5
 8021c06:	b289      	uxth	r1, r1
 8021c08:	b2a4      	uxth	r4, r4
 8021c0a:	1c6b      	adds	r3, r5, #1
 8021c0c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021c10:	1c62      	adds	r2, r4, #1
 8021c12:	1c4b      	adds	r3, r1, #1
 8021c14:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8021c18:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8021c1c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021c20:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021c24:	0964      	lsrs	r4, r4, #5
 8021c26:	432b      	orrs	r3, r5
 8021c28:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8021c2c:	9a03      	ldr	r2, [sp, #12]
 8021c2e:	4323      	orrs	r3, r4
 8021c30:	8013      	strh	r3, [r2, #0]
 8021c32:	b005      	add	sp, #20
 8021c34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021c38:	f04f 0c00 	mov.w	ip, #0
 8021c3c:	4664      	mov	r4, ip
 8021c3e:	e6d6      	b.n	80219ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 8021c40:	2300      	movs	r3, #0
 8021c42:	469c      	mov	ip, r3
 8021c44:	461a      	mov	r2, r3
 8021c46:	461c      	mov	r4, r3
 8021c48:	e6f8      	b.n	8021a3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8021c4a:	2300      	movs	r3, #0
 8021c4c:	461a      	mov	r2, r3
 8021c4e:	e6f5      	b.n	8021a3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8021c50:	460b      	mov	r3, r1
 8021c52:	460a      	mov	r2, r1
 8021c54:	e6f2      	b.n	8021a3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8021c56:	2500      	movs	r5, #0
 8021c58:	46ab      	mov	fp, r5
 8021c5a:	e720      	b.n	8021a9e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8021c5c:	2700      	movs	r7, #0
 8021c5e:	463d      	mov	r5, r7
 8021c60:	4638      	mov	r0, r7
 8021c62:	46bb      	mov	fp, r7
 8021c64:	e745      	b.n	8021af2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8021c66:	4677      	mov	r7, lr
 8021c68:	4675      	mov	r5, lr
 8021c6a:	4670      	mov	r0, lr
 8021c6c:	46f3      	mov	fp, lr
 8021c6e:	e740      	b.n	8021af2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8021c70:	2700      	movs	r7, #0
 8021c72:	4638      	mov	r0, r7
 8021c74:	e73d      	b.n	8021af2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8021c76:	460f      	mov	r7, r1
 8021c78:	4608      	mov	r0, r1
 8021c7a:	e73a      	b.n	8021af2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08021c7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021c7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021c80:	b097      	sub	sp, #92	; 0x5c
 8021c82:	9214      	str	r2, [sp, #80]	; 0x50
 8021c84:	9308      	str	r3, [sp, #32]
 8021c86:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8021c88:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8021c8c:	9312      	str	r3, [sp, #72]	; 0x48
 8021c8e:	9111      	str	r1, [sp, #68]	; 0x44
 8021c90:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8021c94:	9015      	str	r0, [sp, #84]	; 0x54
 8021c96:	6850      	ldr	r0, [r2, #4]
 8021c98:	6812      	ldr	r2, [r2, #0]
 8021c9a:	fb00 1303 	mla	r3, r0, r3, r1
 8021c9e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021ca2:	9309      	str	r3, [sp, #36]	; 0x24
 8021ca4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021ca6:	681b      	ldr	r3, [r3, #0]
 8021ca8:	930b      	str	r3, [sp, #44]	; 0x2c
 8021caa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021cac:	685b      	ldr	r3, [r3, #4]
 8021cae:	930c      	str	r3, [sp, #48]	; 0x30
 8021cb0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8021cb4:	930a      	str	r3, [sp, #40]	; 0x28
 8021cb6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021cb8:	2b00      	cmp	r3, #0
 8021cba:	dc03      	bgt.n	8021cc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8021cbc:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8021cbe:	2b00      	cmp	r3, #0
 8021cc0:	f340 83cb 	ble.w	802245a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8021cc4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021cc6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021cca:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021cce:	1e48      	subs	r0, r1, #1
 8021cd0:	1e55      	subs	r5, r2, #1
 8021cd2:	9b08      	ldr	r3, [sp, #32]
 8021cd4:	2b00      	cmp	r3, #0
 8021cd6:	f340 81a3 	ble.w	8022020 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8021cda:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8021cdc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021cde:	1436      	asrs	r6, r6, #16
 8021ce0:	ea4f 4323 	mov.w	r3, r3, asr #16
 8021ce4:	d406      	bmi.n	8021cf4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8021ce6:	4286      	cmp	r6, r0
 8021ce8:	da04      	bge.n	8021cf4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8021cea:	2b00      	cmp	r3, #0
 8021cec:	db02      	blt.n	8021cf4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8021cee:	42ab      	cmp	r3, r5
 8021cf0:	f2c0 8197 	blt.w	8022022 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8021cf4:	3601      	adds	r6, #1
 8021cf6:	f100 8184 	bmi.w	8022002 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021cfa:	42b1      	cmp	r1, r6
 8021cfc:	f2c0 8181 	blt.w	8022002 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021d00:	3301      	adds	r3, #1
 8021d02:	f100 817e 	bmi.w	8022002 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021d06:	429a      	cmp	r2, r3
 8021d08:	f2c0 817b 	blt.w	8022002 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021d0c:	9b08      	ldr	r3, [sp, #32]
 8021d0e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8021d10:	9313      	str	r3, [sp, #76]	; 0x4c
 8021d12:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8021d16:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021d18:	2b00      	cmp	r3, #0
 8021d1a:	f340 81a4 	ble.w	8022066 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8021d1e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021d20:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8021d22:	1418      	asrs	r0, r3, #16
 8021d24:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021d26:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8021d2a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021d2c:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8021d30:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021d32:	142d      	asrs	r5, r5, #16
 8021d34:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8021d38:	f100 81f8 	bmi.w	802212c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021d3c:	f102 3eff 	add.w	lr, r2, #4294967295
 8021d40:	4575      	cmp	r5, lr
 8021d42:	f280 81f3 	bge.w	802212c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021d46:	2800      	cmp	r0, #0
 8021d48:	f2c0 81f0 	blt.w	802212c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021d4c:	f103 3eff 	add.w	lr, r3, #4294967295
 8021d50:	4570      	cmp	r0, lr
 8021d52:	f280 81eb 	bge.w	802212c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021d56:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021d58:	b212      	sxth	r2, r2
 8021d5a:	fb00 5002 	mla	r0, r0, r2, r5
 8021d5e:	fa1f fe81 	uxth.w	lr, r1
 8021d62:	eb03 0a00 	add.w	sl, r3, r0
 8021d66:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8021d6a:	f813 9000 	ldrb.w	r9, [r3, r0]
 8021d6e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8021d72:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8021d76:	b29b      	uxth	r3, r3
 8021d78:	f1bc 0f00 	cmp.w	ip, #0
 8021d7c:	f000 81b9 	beq.w	80220f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8021d80:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8021d84:	940d      	str	r4, [sp, #52]	; 0x34
 8021d86:	eb0a 0b02 	add.w	fp, sl, r2
 8021d8a:	fa1f fa8c 	uxth.w	sl, ip
 8021d8e:	fb0a fe0e 	mul.w	lr, sl, lr
 8021d92:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8021d96:	fa1f fa8a 	uxth.w	sl, sl
 8021d9a:	eba5 050e 	sub.w	r5, r5, lr
 8021d9e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8021da2:	940e      	str	r4, [sp, #56]	; 0x38
 8021da4:	eba3 030a 	sub.w	r3, r3, sl
 8021da8:	b2ad      	uxth	r5, r5
 8021daa:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021dac:	b29b      	uxth	r3, r3
 8021dae:	fb08 f505 	mul.w	r5, r8, r5
 8021db2:	fb09 5303 	mla	r3, r9, r3, r5
 8021db6:	fb0a 3304 	mla	r3, sl, r4, r3
 8021dba:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021dbc:	fb0e 3304 	mla	r3, lr, r4, r3
 8021dc0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021dc4:	2b00      	cmp	r3, #0
 8021dc6:	f000 810f 	beq.w	8021fe8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021dca:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021dcc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8021dd0:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8021dd4:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8021dd8:	f000 8190 	beq.w	80220fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8021ddc:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8021de0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021de4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021de8:	fb09 f000 	mul.w	r0, r9, r0
 8021dec:	fb0a fe0e 	mul.w	lr, sl, lr
 8021df0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8021df4:	f100 0b20 	add.w	fp, r0, #32
 8021df8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8021dfc:	44ce      	add	lr, r9
 8021dfe:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8021e02:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021e06:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021e0a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021e0e:	ea4e 0909 	orr.w	r9, lr, r9
 8021e12:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8021e16:	8868      	ldrh	r0, [r5, #2]
 8021e18:	d019      	beq.n	8021e4e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8021e1a:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8021e1e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8021e22:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021e26:	fb08 f800 	mul.w	r8, r8, r0
 8021e2a:	fb0a fe0e 	mul.w	lr, sl, lr
 8021e2e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8021e32:	f108 0b20 	add.w	fp, r8, #32
 8021e36:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8021e3a:	4486      	add	lr, r0
 8021e3c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8021e40:	0a00      	lsrs	r0, r0, #8
 8021e42:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021e46:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021e4a:	ea4e 0000 	orr.w	r0, lr, r0
 8021e4e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8021e52:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8021e56:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8021e5a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021e5e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021e62:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021e66:	ea4e 0909 	orr.w	r9, lr, r9
 8021e6a:	ea4a 0000 	orr.w	r0, sl, r0
 8021e6e:	f1bc 0f00 	cmp.w	ip, #0
 8021e72:	f000 8145 	beq.w	8022100 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8021e76:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8021e7a:	3a01      	subs	r2, #1
 8021e7c:	0052      	lsls	r2, r2, #1
 8021e7e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021e80:	3202      	adds	r2, #2
 8021e82:	2cff      	cmp	r4, #255	; 0xff
 8021e84:	eb05 0e02 	add.w	lr, r5, r2
 8021e88:	5aaa      	ldrh	r2, [r5, r2]
 8021e8a:	d018      	beq.n	8021ebe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8021e8c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8021e90:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021e94:	fb04 fa02 	mul.w	sl, r4, r2
 8021e98:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021e9c:	fb08 f805 	mul.w	r8, r8, r5
 8021ea0:	f10a 0520 	add.w	r5, sl, #32
 8021ea4:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8021ea8:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8021eac:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021eb0:	4442      	add	r2, r8
 8021eb2:	0a2d      	lsrs	r5, r5, #8
 8021eb4:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8021eb8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021ebc:	432a      	orrs	r2, r5
 8021ebe:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021ec0:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8021ec4:	2cff      	cmp	r4, #255	; 0xff
 8021ec6:	d01a      	beq.n	8021efe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8021ec8:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8021ecc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021ed0:	fb04 fa05 	mul.w	sl, r4, r5
 8021ed4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021ed8:	fb08 f80e 	mul.w	r8, r8, lr
 8021edc:	f10a 0e20 	add.w	lr, sl, #32
 8021ee0:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8021ee4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8021ee8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021eec:	4445      	add	r5, r8
 8021eee:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021ef2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8021ef6:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8021efa:	ea45 050e 	orr.w	r5, r5, lr
 8021efe:	fb1c fe01 	smulbb	lr, ip, r1
 8021f02:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8021f06:	f1cc 0810 	rsb	r8, ip, #16
 8021f0a:	eba8 0801 	sub.w	r8, r8, r1
 8021f0e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021f12:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8021f16:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8021f1a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8021f1e:	4341      	muls	r1, r0
 8021f20:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021f24:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021f28:	ea4a 0202 	orr.w	r2, sl, r2
 8021f2c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8021f30:	fb09 1108 	mla	r1, r9, r8, r1
 8021f34:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021f38:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8021f3c:	fb0c 1102 	mla	r1, ip, r2, r1
 8021f40:	ea4b 0505 	orr.w	r5, fp, r5
 8021f44:	fb0e 1e05 	mla	lr, lr, r5, r1
 8021f48:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021f4c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021f50:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021f54:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8021f58:	ea42 0e0e 	orr.w	lr, r2, lr
 8021f5c:	fa1f f28e 	uxth.w	r2, lr
 8021f60:	2bff      	cmp	r3, #255	; 0xff
 8021f62:	d103      	bne.n	8021f6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8021f64:	9912      	ldr	r1, [sp, #72]	; 0x48
 8021f66:	29ff      	cmp	r1, #255	; 0xff
 8021f68:	f000 80de 	beq.w	8022128 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8021f6c:	990a      	ldr	r1, [sp, #40]	; 0x28
 8021f6e:	8838      	ldrh	r0, [r7, #0]
 8021f70:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021f72:	434b      	muls	r3, r1
 8021f74:	f103 0c01 	add.w	ip, r3, #1
 8021f78:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8021f7c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8021f80:	fa5f fc83 	uxtb.w	ip, r3
 8021f84:	1203      	asrs	r3, r0, #8
 8021f86:	1215      	asrs	r5, r2, #8
 8021f88:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8021f8c:	fb13 f30c 	smulbb	r3, r3, ip
 8021f90:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021f94:	fb05 3501 	mla	r5, r5, r1, r3
 8021f98:	10c3      	asrs	r3, r0, #3
 8021f9a:	10d1      	asrs	r1, r2, #3
 8021f9c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8021fa0:	fb13 f30c 	smulbb	r3, r3, ip
 8021fa4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8021fa8:	fb01 3104 	mla	r1, r1, r4, r3
 8021fac:	00c3      	lsls	r3, r0, #3
 8021fae:	00d2      	lsls	r2, r2, #3
 8021fb0:	b2db      	uxtb	r3, r3
 8021fb2:	b2d2      	uxtb	r2, r2
 8021fb4:	fb13 f30c 	smulbb	r3, r3, ip
 8021fb8:	b2ad      	uxth	r5, r5
 8021fba:	fb02 3304 	mla	r3, r2, r4, r3
 8021fbe:	b29a      	uxth	r2, r3
 8021fc0:	1c6b      	adds	r3, r5, #1
 8021fc2:	b289      	uxth	r1, r1
 8021fc4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021fc8:	1c53      	adds	r3, r2, #1
 8021fca:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021fce:	1c4a      	adds	r2, r1, #1
 8021fd0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021fd4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021fd8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021fdc:	0949      	lsrs	r1, r1, #5
 8021fde:	432b      	orrs	r3, r5
 8021fe0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021fe4:	430b      	orrs	r3, r1
 8021fe6:	803b      	strh	r3, [r7, #0]
 8021fe8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021fea:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8021fec:	4413      	add	r3, r2
 8021fee:	9321      	str	r3, [sp, #132]	; 0x84
 8021ff0:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8021ff2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021ff4:	441a      	add	r2, r3
 8021ff6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021ff8:	9222      	str	r2, [sp, #136]	; 0x88
 8021ffa:	3b01      	subs	r3, #1
 8021ffc:	3702      	adds	r7, #2
 8021ffe:	9313      	str	r3, [sp, #76]	; 0x4c
 8022000:	e689      	b.n	8021d16 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8022002:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022004:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8022006:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8022008:	4433      	add	r3, r6
 802200a:	9321      	str	r3, [sp, #132]	; 0x84
 802200c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802200e:	441c      	add	r4, r3
 8022010:	9b08      	ldr	r3, [sp, #32]
 8022012:	9422      	str	r4, [sp, #136]	; 0x88
 8022014:	3b01      	subs	r3, #1
 8022016:	9308      	str	r3, [sp, #32]
 8022018:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802201a:	3302      	adds	r3, #2
 802201c:	9309      	str	r3, [sp, #36]	; 0x24
 802201e:	e658      	b.n	8021cd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8022020:	d028      	beq.n	8022074 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8022022:	9b08      	ldr	r3, [sp, #32]
 8022024:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8022026:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8022028:	3b01      	subs	r3, #1
 802202a:	fb00 5003 	mla	r0, r0, r3, r5
 802202e:	1400      	asrs	r0, r0, #16
 8022030:	f53f ae6c 	bmi.w	8021d0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022034:	3901      	subs	r1, #1
 8022036:	4288      	cmp	r0, r1
 8022038:	f6bf ae68 	bge.w	8021d0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802203c:	9924      	ldr	r1, [sp, #144]	; 0x90
 802203e:	9822      	ldr	r0, [sp, #136]	; 0x88
 8022040:	fb01 0303 	mla	r3, r1, r3, r0
 8022044:	141b      	asrs	r3, r3, #16
 8022046:	f53f ae61 	bmi.w	8021d0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802204a:	3a01      	subs	r2, #1
 802204c:	4293      	cmp	r3, r2
 802204e:	f6bf ae5d 	bge.w	8021d0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022052:	9b08      	ldr	r3, [sp, #32]
 8022054:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8022058:	9313      	str	r3, [sp, #76]	; 0x4c
 802205a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802205e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022060:	2b00      	cmp	r3, #0
 8022062:	f300 8082 	bgt.w	802216a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8022066:	9b08      	ldr	r3, [sp, #32]
 8022068:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802206c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802206e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8022072:	9309      	str	r3, [sp, #36]	; 0x24
 8022074:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8022076:	2b00      	cmp	r3, #0
 8022078:	f340 81ef 	ble.w	802245a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 802207c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022080:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022084:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022088:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802208a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802208e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022092:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022096:	eef0 6a62 	vmov.f32	s13, s5
 802209a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802209e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80220a2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80220a6:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 80220aa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80220ae:	eef0 6a43 	vmov.f32	s13, s6
 80220b2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80220b6:	ee12 2a90 	vmov	r2, s5
 80220ba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80220be:	fb92 f3f3 	sdiv	r3, r2, r3
 80220c2:	ee13 2a10 	vmov	r2, s6
 80220c6:	9323      	str	r3, [sp, #140]	; 0x8c
 80220c8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80220ca:	fb92 f3f3 	sdiv	r3, r2, r3
 80220ce:	9324      	str	r3, [sp, #144]	; 0x90
 80220d0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80220d2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80220d4:	3b01      	subs	r3, #1
 80220d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80220da:	9311      	str	r3, [sp, #68]	; 0x44
 80220dc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80220de:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 80220e2:	bf08      	it	eq
 80220e4:	4613      	moveq	r3, r2
 80220e6:	9308      	str	r3, [sp, #32]
 80220e8:	eeb0 3a67 	vmov.f32	s6, s15
 80220ec:	eef0 2a47 	vmov.f32	s5, s14
 80220f0:	e5e1      	b.n	8021cb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80220f2:	fb08 f505 	mul.w	r5, r8, r5
 80220f6:	fb09 5303 	mla	r3, r9, r3, r5
 80220fa:	e661      	b.n	8021dc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 80220fc:	4681      	mov	r9, r0
 80220fe:	e688      	b.n	8021e12 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8022100:	f1c1 0210 	rsb	r2, r1, #16
 8022104:	4341      	muls	r1, r0
 8022106:	fb09 1902 	mla	r9, r9, r2, r1
 802210a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802210e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8022112:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8022116:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802211a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802211e:	ea42 0909 	orr.w	r9, r2, r9
 8022122:	fa1f f289 	uxth.w	r2, r9
 8022126:	e71b      	b.n	8021f60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8022128:	803a      	strh	r2, [r7, #0]
 802212a:	e75d      	b.n	8021fe8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802212c:	f115 0e01 	adds.w	lr, r5, #1
 8022130:	f53f af5a 	bmi.w	8021fe8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022134:	4572      	cmp	r2, lr
 8022136:	f6ff af57 	blt.w	8021fe8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802213a:	f110 0e01 	adds.w	lr, r0, #1
 802213e:	f53f af53 	bmi.w	8021fe8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022142:	4573      	cmp	r3, lr
 8022144:	f6ff af50 	blt.w	8021fe8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022148:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802214a:	9502      	str	r5, [sp, #8]
 802214c:	b21b      	sxth	r3, r3
 802214e:	b212      	sxth	r2, r2
 8022150:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8022154:	9301      	str	r3, [sp, #4]
 8022156:	9200      	str	r2, [sp, #0]
 8022158:	e9cd c405 	strd	ip, r4, [sp, #20]
 802215c:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8022160:	4639      	mov	r1, r7
 8022162:	9815      	ldr	r0, [sp, #84]	; 0x54
 8022164:	f7ff fc04 	bl	8021970 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8022168:	e73e      	b.n	8021fe8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802216a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802216c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022170:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022172:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8022176:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022178:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802217c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802217e:	141f      	asrs	r7, r3, #16
 8022180:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022182:	141b      	asrs	r3, r3, #16
 8022184:	fb01 3707 	mla	r7, r1, r7, r3
 8022188:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802218a:	fa1f fc82 	uxth.w	ip, r2
 802218e:	eb03 0a07 	add.w	sl, r3, r7
 8022192:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8022196:	f813 9007 	ldrb.w	r9, [r3, r7]
 802219a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802219e:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80221a2:	b29b      	uxth	r3, r3
 80221a4:	2d00      	cmp	r5, #0
 80221a6:	f000 813d 	beq.w	8022424 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 80221aa:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80221ae:	940f      	str	r4, [sp, #60]	; 0x3c
 80221b0:	eb0a 0b01 	add.w	fp, sl, r1
 80221b4:	fa1f fa85 	uxth.w	sl, r5
 80221b8:	fb0a fc0c 	mul.w	ip, sl, ip
 80221bc:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80221c0:	fa1f fa8a 	uxth.w	sl, sl
 80221c4:	eba0 000c 	sub.w	r0, r0, ip
 80221c8:	eba3 030a 	sub.w	r3, r3, sl
 80221cc:	b280      	uxth	r0, r0
 80221ce:	fb08 f000 	mul.w	r0, r8, r0
 80221d2:	b29b      	uxth	r3, r3
 80221d4:	fb09 0303 	mla	r3, r9, r3, r0
 80221d8:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80221da:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80221de:	9410      	str	r4, [sp, #64]	; 0x40
 80221e0:	fb0a 3300 	mla	r3, sl, r0, r3
 80221e4:	fb0c 3304 	mla	r3, ip, r4, r3
 80221e8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80221ec:	2b00      	cmp	r3, #0
 80221ee:	f000 810b 	beq.w	8022408 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 80221f2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80221f4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80221f6:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80221fa:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80221fe:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8022202:	f000 8114 	beq.w	802242e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8022206:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 802220a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802220e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022212:	fb09 f707 	mul.w	r7, r9, r7
 8022216:	fb0a fc0c 	mul.w	ip, sl, ip
 802221a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802221e:	f107 0b20 	add.w	fp, r7, #32
 8022222:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022226:	44cc      	add	ip, r9
 8022228:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 802222c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022230:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022234:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8022238:	ea4c 0909 	orr.w	r9, ip, r9
 802223c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8022240:	8847      	ldrh	r7, [r0, #2]
 8022242:	d019      	beq.n	8022278 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8022244:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8022248:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802224c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022250:	fb08 f807 	mul.w	r8, r8, r7
 8022254:	fb0a fc0c 	mul.w	ip, sl, ip
 8022258:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 802225c:	f108 0b20 	add.w	fp, r8, #32
 8022260:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022264:	44bc      	add	ip, r7
 8022266:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 802226a:	0a3f      	lsrs	r7, r7, #8
 802226c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022270:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022274:	ea4c 0707 	orr.w	r7, ip, r7
 8022278:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 802227c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8022280:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022284:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022288:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802228c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022290:	ea4c 0909 	orr.w	r9, ip, r9
 8022294:	ea4a 0707 	orr.w	r7, sl, r7
 8022298:	2d00      	cmp	r5, #0
 802229a:	f000 80ca 	beq.w	8022432 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 802229e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80222a2:	3901      	subs	r1, #1
 80222a4:	0049      	lsls	r1, r1, #1
 80222a6:	3102      	adds	r1, #2
 80222a8:	eb00 0c01 	add.w	ip, r0, r1
 80222ac:	5a41      	ldrh	r1, [r0, r1]
 80222ae:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80222b0:	28ff      	cmp	r0, #255	; 0xff
 80222b2:	d019      	beq.n	80222e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 80222b4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80222b6:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80222ba:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80222be:	fb04 fa01 	mul.w	sl, r4, r1
 80222c2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80222c6:	fb08 f800 	mul.w	r8, r8, r0
 80222ca:	f10a 0020 	add.w	r0, sl, #32
 80222ce:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80222d2:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80222d6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80222da:	4441      	add	r1, r8
 80222dc:	0a00      	lsrs	r0, r0, #8
 80222de:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80222e2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80222e6:	4301      	orrs	r1, r0
 80222e8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80222ea:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80222ee:	2cff      	cmp	r4, #255	; 0xff
 80222f0:	d01a      	beq.n	8022328 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 80222f2:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 80222f6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80222fa:	fb04 fa00 	mul.w	sl, r4, r0
 80222fe:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022302:	fb08 f80c 	mul.w	r8, r8, ip
 8022306:	f10a 0c20 	add.w	ip, sl, #32
 802230a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802230e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8022312:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022316:	4440      	add	r0, r8
 8022318:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802231c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8022320:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8022324:	ea40 000c 	orr.w	r0, r0, ip
 8022328:	fb15 fc02 	smulbb	ip, r5, r2
 802232c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8022330:	f1c5 0810 	rsb	r8, r5, #16
 8022334:	eba8 0802 	sub.w	r8, r8, r2
 8022338:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 802233c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8022340:	437a      	muls	r2, r7
 8022342:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022346:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 802234a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802234e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022352:	fb09 2208 	mla	r2, r9, r8, r2
 8022356:	ea4a 0101 	orr.w	r1, sl, r1
 802235a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 802235e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022362:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022366:	fb05 2201 	mla	r2, r5, r1, r2
 802236a:	ea4b 0000 	orr.w	r0, fp, r0
 802236e:	fb0c 2200 	mla	r2, ip, r0, r2
 8022372:	0d57      	lsrs	r7, r2, #21
 8022374:	0952      	lsrs	r2, r2, #5
 8022376:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802237a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802237e:	433a      	orrs	r2, r7
 8022380:	2bff      	cmp	r3, #255	; 0xff
 8022382:	b292      	uxth	r2, r2
 8022384:	d102      	bne.n	802238c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8022386:	9912      	ldr	r1, [sp, #72]	; 0x48
 8022388:	29ff      	cmp	r1, #255	; 0xff
 802238a:	d063      	beq.n	8022454 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 802238c:	980a      	ldr	r0, [sp, #40]	; 0x28
 802238e:	f8be 1000 	ldrh.w	r1, [lr]
 8022392:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022394:	4343      	muls	r3, r0
 8022396:	1c58      	adds	r0, r3, #1
 8022398:	eb00 2323 	add.w	r3, r0, r3, asr #8
 802239c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80223a0:	1208      	asrs	r0, r1, #8
 80223a2:	b2db      	uxtb	r3, r3
 80223a4:	1215      	asrs	r5, r2, #8
 80223a6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80223aa:	fb10 f003 	smulbb	r0, r0, r3
 80223ae:	10cf      	asrs	r7, r1, #3
 80223b0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80223b4:	00c9      	lsls	r1, r1, #3
 80223b6:	fb05 0504 	mla	r5, r5, r4, r0
 80223ba:	b2c9      	uxtb	r1, r1
 80223bc:	10d0      	asrs	r0, r2, #3
 80223be:	00d2      	lsls	r2, r2, #3
 80223c0:	fb11 f103 	smulbb	r1, r1, r3
 80223c4:	b2d2      	uxtb	r2, r2
 80223c6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80223ca:	fb02 1204 	mla	r2, r2, r4, r1
 80223ce:	fb17 f703 	smulbb	r7, r7, r3
 80223d2:	b2ad      	uxth	r5, r5
 80223d4:	b292      	uxth	r2, r2
 80223d6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80223da:	fb00 7004 	mla	r0, r0, r4, r7
 80223de:	1c6b      	adds	r3, r5, #1
 80223e0:	1c57      	adds	r7, r2, #1
 80223e2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80223e6:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80223ea:	b280      	uxth	r0, r0
 80223ec:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80223f0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80223f4:	433d      	orrs	r5, r7
 80223f6:	1c47      	adds	r7, r0, #1
 80223f8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80223fc:	097f      	lsrs	r7, r7, #5
 80223fe:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022402:	433d      	orrs	r5, r7
 8022404:	f8ae 5000 	strh.w	r5, [lr]
 8022408:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802240a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 802240c:	4413      	add	r3, r2
 802240e:	9321      	str	r3, [sp, #132]	; 0x84
 8022410:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8022412:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022414:	441a      	add	r2, r3
 8022416:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022418:	9222      	str	r2, [sp, #136]	; 0x88
 802241a:	3b01      	subs	r3, #1
 802241c:	f10e 0e02 	add.w	lr, lr, #2
 8022420:	9313      	str	r3, [sp, #76]	; 0x4c
 8022422:	e61c      	b.n	802205e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8022424:	fb08 f000 	mul.w	r0, r8, r0
 8022428:	fb09 0303 	mla	r3, r9, r3, r0
 802242c:	e6dc      	b.n	80221e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 802242e:	46b9      	mov	r9, r7
 8022430:	e704      	b.n	802223c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8022432:	f1c2 0110 	rsb	r1, r2, #16
 8022436:	437a      	muls	r2, r7
 8022438:	fb09 2901 	mla	r9, r9, r1, r2
 802243c:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8022440:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8022444:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8022448:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802244c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022450:	4302      	orrs	r2, r0
 8022452:	e795      	b.n	8022380 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8022454:	f8ae 2000 	strh.w	r2, [lr]
 8022458:	e7d6      	b.n	8022408 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 802245a:	b017      	add	sp, #92	; 0x5c
 802245c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022460 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8022460:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022464:	b085      	sub	sp, #20
 8022466:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 802246a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 802246e:	9103      	str	r1, [sp, #12]
 8022470:	fb00 7406 	mla	r4, r0, r6, r7
 8022474:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8022478:	2800      	cmp	r0, #0
 802247a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 802247e:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8022482:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8022486:	9501      	str	r5, [sp, #4]
 8022488:	eb02 0904 	add.w	r9, r2, r4
 802248c:	f2c0 8141 	blt.w	8022712 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8022490:	4583      	cmp	fp, r0
 8022492:	f340 813e 	ble.w	8022712 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8022496:	2f00      	cmp	r7, #0
 8022498:	f2c0 8137 	blt.w	802270a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 802249c:	42be      	cmp	r6, r7
 802249e:	f340 8134 	ble.w	802270a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 80224a2:	f812 c004 	ldrb.w	ip, [r2, r4]
 80224a6:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 80224aa:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80224ae:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 80224b2:	4355      	muls	r5, r2
 80224b4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80224b8:	f64f 041f 	movw	r4, #63519	; 0xf81f
 80224bc:	fb0c f203 	mul.w	r2, ip, r3
 80224c0:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 80224c4:	f605 0501 	addw	r5, r5, #2049	; 0x801
 80224c8:	441d      	add	r5, r3
 80224ca:	f102 0320 	add.w	r3, r2, #32
 80224ce:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80224d2:	0a1b      	lsrs	r3, r3, #8
 80224d4:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 80224d8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80224dc:	431c      	orrs	r4, r3
 80224de:	1c7b      	adds	r3, r7, #1
 80224e0:	f100 811c 	bmi.w	802271c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 80224e4:	429e      	cmp	r6, r3
 80224e6:	f340 8119 	ble.w	802271c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 80224ea:	2900      	cmp	r1, #0
 80224ec:	f000 8119 	beq.w	8022722 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 80224f0:	9a01      	ldr	r2, [sp, #4]
 80224f2:	f899 3001 	ldrb.w	r3, [r9, #1]
 80224f6:	8855      	ldrh	r5, [r2, #2]
 80224f8:	ea4f 08e3 	mov.w	r8, r3, asr #3
 80224fc:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8022500:	fb08 f802 	mul.w	r8, r8, r2
 8022504:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022508:	f64f 021f 	movw	r2, #63519	; 0xf81f
 802250c:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8022510:	435d      	muls	r5, r3
 8022512:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022516:	44d0      	add	r8, sl
 8022518:	f105 0a20 	add.w	sl, r5, #32
 802251c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8022520:	0a2d      	lsrs	r5, r5, #8
 8022522:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8022526:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802252a:	432a      	orrs	r2, r5
 802252c:	3001      	adds	r0, #1
 802252e:	f100 80fe 	bmi.w	802272e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8022532:	4583      	cmp	fp, r0
 8022534:	f340 80fb 	ble.w	802272e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8022538:	f1be 0f00 	cmp.w	lr, #0
 802253c:	f000 80fc 	beq.w	8022738 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8022540:	2f00      	cmp	r7, #0
 8022542:	f2c0 80f1 	blt.w	8022728 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8022546:	42be      	cmp	r6, r7
 8022548:	f340 80ee 	ble.w	8022728 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 802254c:	9801      	ldr	r0, [sp, #4]
 802254e:	f819 5006 	ldrb.w	r5, [r9, r6]
 8022552:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8022556:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 802255a:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 802255e:	fb0a fa00 	mul.w	sl, sl, r0
 8022562:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8022566:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 802256a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 802256e:	fb05 f808 	mul.w	r8, r5, r8
 8022572:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8022576:	4482      	add	sl, r0
 8022578:	f108 0020 	add.w	r0, r8, #32
 802257c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022580:	0a00      	lsrs	r0, r0, #8
 8022582:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8022586:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802258a:	ea4b 0b00 	orr.w	fp, fp, r0
 802258e:	3701      	adds	r7, #1
 8022590:	f100 80d7 	bmi.w	8022742 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8022594:	42be      	cmp	r6, r7
 8022596:	f340 80d4 	ble.w	8022742 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 802259a:	2900      	cmp	r1, #0
 802259c:	f000 80d4 	beq.w	8022748 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 80225a0:	3601      	adds	r6, #1
 80225a2:	9801      	ldr	r0, [sp, #4]
 80225a4:	f819 7006 	ldrb.w	r7, [r9, r6]
 80225a8:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 80225ac:	ea4f 09e7 	mov.w	r9, r7, asr #3
 80225b0:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 80225b4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80225b8:	fb09 f906 	mul.w	r9, r9, r6
 80225bc:	fb07 f800 	mul.w	r8, r7, r0
 80225c0:	f64f 001f 	movw	r0, #63519	; 0xf81f
 80225c4:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 80225c8:	f609 0901 	addw	r9, r9, #2049	; 0x801
 80225cc:	44d1      	add	r9, sl
 80225ce:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 80225d2:	f108 0020 	add.w	r0, r8, #32
 80225d6:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80225da:	0a00      	lsrs	r0, r0, #8
 80225dc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80225e0:	4330      	orrs	r0, r6
 80225e2:	b28e      	uxth	r6, r1
 80225e4:	fa1f f98e 	uxth.w	r9, lr
 80225e8:	fb06 f809 	mul.w	r8, r6, r9
 80225ec:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80225f0:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80225f4:	0136      	lsls	r6, r6, #4
 80225f6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80225fa:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80225fe:	9601      	str	r6, [sp, #4]
 8022600:	ea4a 0404 	orr.w	r4, sl, r4
 8022604:	fa1f f689 	uxth.w	r6, r9
 8022608:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802260c:	fb11 f90e 	smulbb	r9, r1, lr
 8022610:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8022614:	9602      	str	r6, [sp, #8]
 8022616:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802261a:	4626      	mov	r6, r4
 802261c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022620:	f1ce 0410 	rsb	r4, lr, #16
 8022624:	1a64      	subs	r4, r4, r1
 8022626:	ea4a 0202 	orr.w	r2, sl, r2
 802262a:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 802262e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8022632:	434a      	muls	r2, r1
 8022634:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8022638:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802263c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022640:	fb04 2406 	mla	r4, r4, r6, r2
 8022644:	ea4a 0000 	orr.w	r0, sl, r0
 8022648:	fb09 4200 	mla	r2, r9, r0, r4
 802264c:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8022650:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022654:	9801      	ldr	r0, [sp, #4]
 8022656:	9903      	ldr	r1, [sp, #12]
 8022658:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 802265c:	ea44 0b0b 	orr.w	fp, r4, fp
 8022660:	9c02      	ldr	r4, [sp, #8]
 8022662:	8809      	ldrh	r1, [r1, #0]
 8022664:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8022668:	1b00      	subs	r0, r0, r4
 802266a:	9c01      	ldr	r4, [sp, #4]
 802266c:	eba4 0608 	sub.w	r6, r4, r8
 8022670:	b2b6      	uxth	r6, r6
 8022672:	b280      	uxth	r0, r0
 8022674:	4373      	muls	r3, r6
 8022676:	fb0c 3300 	mla	r3, ip, r0, r3
 802267a:	9802      	ldr	r0, [sp, #8]
 802267c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8022680:	fb00 3505 	mla	r5, r0, r5, r3
 8022684:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8022688:	fb08 5707 	mla	r7, r8, r7, r5
 802268c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8022690:	120b      	asrs	r3, r1, #8
 8022692:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022696:	ea6f 2727 	mvn.w	r7, r7, asr #8
 802269a:	b2ff      	uxtb	r7, r7
 802269c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80226a0:	10c8      	asrs	r0, r1, #3
 80226a2:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80226a6:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80226aa:	00c9      	lsls	r1, r1, #3
 80226ac:	437b      	muls	r3, r7
 80226ae:	ea42 0e0e 	orr.w	lr, r2, lr
 80226b2:	b2c9      	uxtb	r1, r1
 80226b4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80226b8:	fa1f f28e 	uxth.w	r2, lr
 80226bc:	4378      	muls	r0, r7
 80226be:	434f      	muls	r7, r1
 80226c0:	1c59      	adds	r1, r3, #1
 80226c2:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80226c6:	1213      	asrs	r3, r2, #8
 80226c8:	f023 0307 	bic.w	r3, r3, #7
 80226cc:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80226d0:	1c41      	adds	r1, r0, #1
 80226d2:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80226d6:	10d1      	asrs	r1, r2, #3
 80226d8:	f021 0103 	bic.w	r1, r1, #3
 80226dc:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80226e0:	021b      	lsls	r3, r3, #8
 80226e2:	00c9      	lsls	r1, r1, #3
 80226e4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80226e8:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80226ec:	430b      	orrs	r3, r1
 80226ee:	1c79      	adds	r1, r7, #1
 80226f0:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 80226f4:	00d2      	lsls	r2, r2, #3
 80226f6:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80226fa:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80226fe:	431a      	orrs	r2, r3
 8022700:	9b03      	ldr	r3, [sp, #12]
 8022702:	801a      	strh	r2, [r3, #0]
 8022704:	b005      	add	sp, #20
 8022706:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802270a:	f04f 0c00 	mov.w	ip, #0
 802270e:	4664      	mov	r4, ip
 8022710:	e6e5      	b.n	80224de <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8022712:	2300      	movs	r3, #0
 8022714:	469c      	mov	ip, r3
 8022716:	461a      	mov	r2, r3
 8022718:	461c      	mov	r4, r3
 802271a:	e707      	b.n	802252c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 802271c:	2300      	movs	r3, #0
 802271e:	461a      	mov	r2, r3
 8022720:	e704      	b.n	802252c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8022722:	460b      	mov	r3, r1
 8022724:	460a      	mov	r2, r1
 8022726:	e701      	b.n	802252c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8022728:	2500      	movs	r5, #0
 802272a:	46ab      	mov	fp, r5
 802272c:	e72f      	b.n	802258e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 802272e:	2700      	movs	r7, #0
 8022730:	463d      	mov	r5, r7
 8022732:	4638      	mov	r0, r7
 8022734:	46bb      	mov	fp, r7
 8022736:	e754      	b.n	80225e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8022738:	4677      	mov	r7, lr
 802273a:	4675      	mov	r5, lr
 802273c:	4670      	mov	r0, lr
 802273e:	46f3      	mov	fp, lr
 8022740:	e74f      	b.n	80225e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8022742:	2700      	movs	r7, #0
 8022744:	4638      	mov	r0, r7
 8022746:	e74c      	b.n	80225e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8022748:	460f      	mov	r7, r1
 802274a:	4608      	mov	r0, r1
 802274c:	e749      	b.n	80225e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08022750 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022750:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022754:	b093      	sub	sp, #76	; 0x4c
 8022756:	9210      	str	r2, [sp, #64]	; 0x40
 8022758:	9a21      	ldr	r2, [sp, #132]	; 0x84
 802275a:	910e      	str	r1, [sp, #56]	; 0x38
 802275c:	9306      	str	r3, [sp, #24]
 802275e:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8022762:	9011      	str	r0, [sp, #68]	; 0x44
 8022764:	6850      	ldr	r0, [r2, #4]
 8022766:	6812      	ldr	r2, [r2, #0]
 8022768:	fb00 1303 	mla	r3, r0, r3, r1
 802276c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022770:	9307      	str	r3, [sp, #28]
 8022772:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022774:	681b      	ldr	r3, [r3, #0]
 8022776:	9308      	str	r3, [sp, #32]
 8022778:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802277a:	685b      	ldr	r3, [r3, #4]
 802277c:	9309      	str	r3, [sp, #36]	; 0x24
 802277e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022780:	2b00      	cmp	r3, #0
 8022782:	dc03      	bgt.n	802278c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8022784:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022786:	2b00      	cmp	r3, #0
 8022788:	f340 83b4 	ble.w	8022ef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 802278c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802278e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022792:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022796:	1e48      	subs	r0, r1, #1
 8022798:	1e55      	subs	r5, r2, #1
 802279a:	9b06      	ldr	r3, [sp, #24]
 802279c:	2b00      	cmp	r3, #0
 802279e:	f340 8163 	ble.w	8022a68 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 80227a2:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 80227a4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80227a6:	1436      	asrs	r6, r6, #16
 80227a8:	ea4f 4323 	mov.w	r3, r3, asr #16
 80227ac:	d406      	bmi.n	80227bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80227ae:	4286      	cmp	r6, r0
 80227b0:	da04      	bge.n	80227bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80227b2:	2b00      	cmp	r3, #0
 80227b4:	db02      	blt.n	80227bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80227b6:	42ab      	cmp	r3, r5
 80227b8:	f2c0 8157 	blt.w	8022a6a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 80227bc:	3601      	adds	r6, #1
 80227be:	f100 8144 	bmi.w	8022a4a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80227c2:	42b1      	cmp	r1, r6
 80227c4:	f2c0 8141 	blt.w	8022a4a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80227c8:	3301      	adds	r3, #1
 80227ca:	f100 813e 	bmi.w	8022a4a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80227ce:	429a      	cmp	r2, r3
 80227d0:	f2c0 813b 	blt.w	8022a4a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80227d4:	9b06      	ldr	r3, [sp, #24]
 80227d6:	9f07      	ldr	r7, [sp, #28]
 80227d8:	930f      	str	r3, [sp, #60]	; 0x3c
 80227da:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80227de:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80227e0:	2b00      	cmp	r3, #0
 80227e2:	f340 8164 	ble.w	8022aae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 80227e6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80227e8:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80227ea:	1418      	asrs	r0, r3, #16
 80227ec:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80227ee:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80227f2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80227f4:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80227f8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80227fa:	142d      	asrs	r5, r5, #16
 80227fc:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8022800:	f100 81ee 	bmi.w	8022be0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8022804:	f102 3eff 	add.w	lr, r2, #4294967295
 8022808:	4575      	cmp	r5, lr
 802280a:	f280 81e9 	bge.w	8022be0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802280e:	2800      	cmp	r0, #0
 8022810:	f2c0 81e6 	blt.w	8022be0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8022814:	f103 3eff 	add.w	lr, r3, #4294967295
 8022818:	4570      	cmp	r0, lr
 802281a:	f280 81e1 	bge.w	8022be0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802281e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022820:	b212      	sxth	r2, r2
 8022822:	fb00 5002 	mla	r0, r0, r2, r5
 8022826:	fa1f fe81 	uxth.w	lr, r1
 802282a:	eb03 0a00 	add.w	sl, r3, r0
 802282e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8022832:	f813 9000 	ldrb.w	r9, [r3, r0]
 8022836:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802283a:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 802283e:	b29b      	uxth	r3, r3
 8022840:	f1bc 0f00 	cmp.w	ip, #0
 8022844:	f000 8179 	beq.w	8022b3a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8022848:	f81a 4002 	ldrb.w	r4, [sl, r2]
 802284c:	940a      	str	r4, [sp, #40]	; 0x28
 802284e:	eb0a 0b02 	add.w	fp, sl, r2
 8022852:	fa1f fa8c 	uxth.w	sl, ip
 8022856:	fb0a fe0e 	mul.w	lr, sl, lr
 802285a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 802285e:	fa1f fa8a 	uxth.w	sl, sl
 8022862:	eba5 050e 	sub.w	r5, r5, lr
 8022866:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802286a:	940b      	str	r4, [sp, #44]	; 0x2c
 802286c:	eba3 030a 	sub.w	r3, r3, sl
 8022870:	b2ad      	uxth	r5, r5
 8022872:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022874:	b29b      	uxth	r3, r3
 8022876:	fb08 f505 	mul.w	r5, r8, r5
 802287a:	fb09 5303 	mla	r3, r9, r3, r5
 802287e:	fb0a 3304 	mla	r3, sl, r4, r3
 8022882:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022884:	fb0e 3304 	mla	r3, lr, r4, r3
 8022888:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802288c:	2b00      	cmp	r3, #0
 802288e:	f000 80cf 	beq.w	8022a30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022892:	9c08      	ldr	r4, [sp, #32]
 8022894:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022898:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 802289c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80228a0:	f000 8150 	beq.w	8022b44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 80228a4:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80228a8:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80228ac:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80228b0:	fb09 f000 	mul.w	r0, r9, r0
 80228b4:	fb0a fe0e 	mul.w	lr, sl, lr
 80228b8:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80228bc:	f100 0b20 	add.w	fp, r0, #32
 80228c0:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80228c4:	44ce      	add	lr, r9
 80228c6:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80228ca:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80228ce:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80228d2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80228d6:	ea4e 0909 	orr.w	r9, lr, r9
 80228da:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80228de:	8868      	ldrh	r0, [r5, #2]
 80228e0:	d019      	beq.n	8022916 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 80228e2:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80228e6:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80228ea:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80228ee:	fb08 f800 	mul.w	r8, r8, r0
 80228f2:	fb0a fe0e 	mul.w	lr, sl, lr
 80228f6:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80228fa:	f108 0b20 	add.w	fp, r8, #32
 80228fe:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8022902:	4486      	add	lr, r0
 8022904:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8022908:	0a00      	lsrs	r0, r0, #8
 802290a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802290e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022912:	ea4e 0000 	orr.w	r0, lr, r0
 8022916:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 802291a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802291e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8022922:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022926:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802292a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802292e:	ea4e 0909 	orr.w	r9, lr, r9
 8022932:	ea4a 0000 	orr.w	r0, sl, r0
 8022936:	f1bc 0f00 	cmp.w	ip, #0
 802293a:	f000 8105 	beq.w	8022b48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802293e:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8022942:	3a01      	subs	r2, #1
 8022944:	0052      	lsls	r2, r2, #1
 8022946:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022948:	3202      	adds	r2, #2
 802294a:	2cff      	cmp	r4, #255	; 0xff
 802294c:	eb05 0e02 	add.w	lr, r5, r2
 8022950:	5aaa      	ldrh	r2, [r5, r2]
 8022952:	d018      	beq.n	8022986 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8022954:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8022958:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802295c:	fb04 fa02 	mul.w	sl, r4, r2
 8022960:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022964:	fb08 f805 	mul.w	r8, r8, r5
 8022968:	f10a 0520 	add.w	r5, sl, #32
 802296c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8022970:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8022974:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022978:	4442      	add	r2, r8
 802297a:	0a2d      	lsrs	r5, r5, #8
 802297c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8022980:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022984:	432a      	orrs	r2, r5
 8022986:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022988:	f8be 5002 	ldrh.w	r5, [lr, #2]
 802298c:	2cff      	cmp	r4, #255	; 0xff
 802298e:	d01a      	beq.n	80229c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8022990:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8022994:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022998:	fb04 fa05 	mul.w	sl, r4, r5
 802299c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80229a0:	fb08 f80e 	mul.w	r8, r8, lr
 80229a4:	f10a 0e20 	add.w	lr, sl, #32
 80229a8:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80229ac:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80229b0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80229b4:	4445      	add	r5, r8
 80229b6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80229ba:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80229be:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80229c2:	ea45 050e 	orr.w	r5, r5, lr
 80229c6:	fb1c fe01 	smulbb	lr, ip, r1
 80229ca:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80229ce:	f1cc 0810 	rsb	r8, ip, #16
 80229d2:	eba8 0801 	sub.w	r8, r8, r1
 80229d6:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80229da:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80229de:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80229e2:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80229e6:	4341      	muls	r1, r0
 80229e8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80229ec:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80229f0:	ea4a 0202 	orr.w	r2, sl, r2
 80229f4:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80229f8:	fb09 1108 	mla	r1, r9, r8, r1
 80229fc:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022a00:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8022a04:	fb0c 1102 	mla	r1, ip, r2, r1
 8022a08:	ea4b 0505 	orr.w	r5, fp, r5
 8022a0c:	fb0e 1e05 	mla	lr, lr, r5, r1
 8022a10:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8022a14:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022a18:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022a1c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022a20:	ea42 0e0e 	orr.w	lr, r2, lr
 8022a24:	fa1f f28e 	uxth.w	r2, lr
 8022a28:	2bff      	cmp	r3, #255	; 0xff
 8022a2a:	f040 80a1 	bne.w	8022b70 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 8022a2e:	803a      	strh	r2, [r7, #0]
 8022a30:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022a32:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8022a34:	4413      	add	r3, r2
 8022a36:	931d      	str	r3, [sp, #116]	; 0x74
 8022a38:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8022a3a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022a3c:	441a      	add	r2, r3
 8022a3e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022a40:	921e      	str	r2, [sp, #120]	; 0x78
 8022a42:	3b01      	subs	r3, #1
 8022a44:	3702      	adds	r7, #2
 8022a46:	930f      	str	r3, [sp, #60]	; 0x3c
 8022a48:	e6c9      	b.n	80227de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8022a4a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022a4c:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8022a4e:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 8022a50:	4433      	add	r3, r6
 8022a52:	931d      	str	r3, [sp, #116]	; 0x74
 8022a54:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022a56:	441c      	add	r4, r3
 8022a58:	9b06      	ldr	r3, [sp, #24]
 8022a5a:	941e      	str	r4, [sp, #120]	; 0x78
 8022a5c:	3b01      	subs	r3, #1
 8022a5e:	9306      	str	r3, [sp, #24]
 8022a60:	9b07      	ldr	r3, [sp, #28]
 8022a62:	3302      	adds	r3, #2
 8022a64:	9307      	str	r3, [sp, #28]
 8022a66:	e698      	b.n	802279a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8022a68:	d028      	beq.n	8022abc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022a6a:	9b06      	ldr	r3, [sp, #24]
 8022a6c:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8022a6e:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8022a70:	3b01      	subs	r3, #1
 8022a72:	fb00 5003 	mla	r0, r0, r3, r5
 8022a76:	1400      	asrs	r0, r0, #16
 8022a78:	f53f aeac 	bmi.w	80227d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022a7c:	3901      	subs	r1, #1
 8022a7e:	4288      	cmp	r0, r1
 8022a80:	f6bf aea8 	bge.w	80227d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022a84:	9920      	ldr	r1, [sp, #128]	; 0x80
 8022a86:	981e      	ldr	r0, [sp, #120]	; 0x78
 8022a88:	fb01 0303 	mla	r3, r1, r3, r0
 8022a8c:	141b      	asrs	r3, r3, #16
 8022a8e:	f53f aea1 	bmi.w	80227d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022a92:	3a01      	subs	r2, #1
 8022a94:	4293      	cmp	r3, r2
 8022a96:	f6bf ae9d 	bge.w	80227d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022a9a:	9b06      	ldr	r3, [sp, #24]
 8022a9c:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8022aa0:	930f      	str	r3, [sp, #60]	; 0x3c
 8022aa2:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8022aa6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022aa8:	2b00      	cmp	r3, #0
 8022aaa:	f300 80b6 	bgt.w	8022c1a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 8022aae:	9b06      	ldr	r3, [sp, #24]
 8022ab0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8022ab4:	9b07      	ldr	r3, [sp, #28]
 8022ab6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8022aba:	9307      	str	r3, [sp, #28]
 8022abc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022abe:	2b00      	cmp	r3, #0
 8022ac0:	f340 8218 	ble.w	8022ef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8022ac4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022ac8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022acc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022ad0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022ad2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022ad6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022ada:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022ade:	eef0 6a62 	vmov.f32	s13, s5
 8022ae2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022ae6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022aea:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022aee:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8022af2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022af6:	eef0 6a43 	vmov.f32	s13, s6
 8022afa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022afe:	ee12 2a90 	vmov	r2, s5
 8022b02:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022b06:	fb92 f3f3 	sdiv	r3, r2, r3
 8022b0a:	ee13 2a10 	vmov	r2, s6
 8022b0e:	931f      	str	r3, [sp, #124]	; 0x7c
 8022b10:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022b12:	fb92 f3f3 	sdiv	r3, r2, r3
 8022b16:	9320      	str	r3, [sp, #128]	; 0x80
 8022b18:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022b1a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8022b1c:	3b01      	subs	r3, #1
 8022b1e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022b22:	930e      	str	r3, [sp, #56]	; 0x38
 8022b24:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022b26:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 8022b2a:	bf08      	it	eq
 8022b2c:	4613      	moveq	r3, r2
 8022b2e:	9306      	str	r3, [sp, #24]
 8022b30:	eeb0 3a67 	vmov.f32	s6, s15
 8022b34:	eef0 2a47 	vmov.f32	s5, s14
 8022b38:	e621      	b.n	802277e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8022b3a:	fb08 f505 	mul.w	r5, r8, r5
 8022b3e:	fb09 5303 	mla	r3, r9, r3, r5
 8022b42:	e6a1      	b.n	8022888 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8022b44:	4681      	mov	r9, r0
 8022b46:	e6c8      	b.n	80228da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8022b48:	f1c1 0210 	rsb	r2, r1, #16
 8022b4c:	4341      	muls	r1, r0
 8022b4e:	fb09 1902 	mla	r9, r9, r2, r1
 8022b52:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8022b56:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8022b5a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8022b5e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022b62:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022b66:	ea42 0909 	orr.w	r9, r2, r9
 8022b6a:	fa1f f289 	uxth.w	r2, r9
 8022b6e:	e75b      	b.n	8022a28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022b70:	f8b7 c000 	ldrh.w	ip, [r7]
 8022b74:	43db      	mvns	r3, r3
 8022b76:	ea4f 202c 	mov.w	r0, ip, asr #8
 8022b7a:	fa5f fe83 	uxtb.w	lr, r3
 8022b7e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022b82:	fb00 f00e 	mul.w	r0, r0, lr
 8022b86:	1c41      	adds	r1, r0, #1
 8022b88:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8022b8c:	1211      	asrs	r1, r2, #8
 8022b8e:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8022b92:	f021 0107 	bic.w	r1, r1, #7
 8022b96:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8022b9a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8022b9e:	48d7      	ldr	r0, [pc, #860]	; (8022efc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8022ba0:	fb05 f50e 	mul.w	r5, r5, lr
 8022ba4:	b2c9      	uxtb	r1, r1
 8022ba6:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8022baa:	1c69      	adds	r1, r5, #1
 8022bac:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8022bb0:	10d1      	asrs	r1, r2, #3
 8022bb2:	f021 0103 	bic.w	r1, r1, #3
 8022bb6:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8022bba:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8022bbe:	b2db      	uxtb	r3, r3
 8022bc0:	00c9      	lsls	r1, r1, #3
 8022bc2:	fb03 f30e 	mul.w	r3, r3, lr
 8022bc6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022bca:	4301      	orrs	r1, r0
 8022bcc:	1c58      	adds	r0, r3, #1
 8022bce:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8022bd2:	00d2      	lsls	r2, r2, #3
 8022bd4:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022bd8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8022bdc:	430a      	orrs	r2, r1
 8022bde:	e726      	b.n	8022a2e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 8022be0:	f115 0e01 	adds.w	lr, r5, #1
 8022be4:	f53f af24 	bmi.w	8022a30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022be8:	4572      	cmp	r2, lr
 8022bea:	f6ff af21 	blt.w	8022a30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022bee:	f110 0e01 	adds.w	lr, r0, #1
 8022bf2:	f53f af1d 	bmi.w	8022a30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022bf6:	4573      	cmp	r3, lr
 8022bf8:	f6ff af1a 	blt.w	8022a30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022bfc:	b21b      	sxth	r3, r3
 8022bfe:	b212      	sxth	r2, r2
 8022c00:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8022c04:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8022c08:	9301      	str	r3, [sp, #4]
 8022c0a:	9200      	str	r2, [sp, #0]
 8022c0c:	4639      	mov	r1, r7
 8022c0e:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8022c12:	9811      	ldr	r0, [sp, #68]	; 0x44
 8022c14:	f7ff fc24 	bl	8022460 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8022c18:	e70a      	b.n	8022a30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022c1a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022c1c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022c20:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8022c22:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8022c26:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022c28:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022c2c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8022c2e:	141f      	asrs	r7, r3, #16
 8022c30:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022c32:	141b      	asrs	r3, r3, #16
 8022c34:	fb01 3707 	mla	r7, r1, r7, r3
 8022c38:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022c3a:	fa1f fc82 	uxth.w	ip, r2
 8022c3e:	eb03 0a07 	add.w	sl, r3, r7
 8022c42:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8022c46:	f813 9007 	ldrb.w	r9, [r3, r7]
 8022c4a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8022c4e:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8022c52:	b29b      	uxth	r3, r3
 8022c54:	2d00      	cmp	r5, #0
 8022c56:	f000 80fe 	beq.w	8022e56 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 8022c5a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8022c5e:	940c      	str	r4, [sp, #48]	; 0x30
 8022c60:	eb0a 0b01 	add.w	fp, sl, r1
 8022c64:	fa1f fa85 	uxth.w	sl, r5
 8022c68:	fb0a fc0c 	mul.w	ip, sl, ip
 8022c6c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8022c70:	fa1f fa8a 	uxth.w	sl, sl
 8022c74:	eba0 000c 	sub.w	r0, r0, ip
 8022c78:	eba3 030a 	sub.w	r3, r3, sl
 8022c7c:	b280      	uxth	r0, r0
 8022c7e:	fb08 f000 	mul.w	r0, r8, r0
 8022c82:	b29b      	uxth	r3, r3
 8022c84:	fb09 0303 	mla	r3, r9, r3, r0
 8022c88:	980c      	ldr	r0, [sp, #48]	; 0x30
 8022c8a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8022c8e:	940d      	str	r4, [sp, #52]	; 0x34
 8022c90:	fb0a 3300 	mla	r3, sl, r0, r3
 8022c94:	fb0c 3304 	mla	r3, ip, r4, r3
 8022c98:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022c9c:	2b00      	cmp	r3, #0
 8022c9e:	f000 80cc 	beq.w	8022e3a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8022ca2:	9808      	ldr	r0, [sp, #32]
 8022ca4:	9c08      	ldr	r4, [sp, #32]
 8022ca6:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022caa:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8022cae:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8022cb2:	f000 80d5 	beq.w	8022e60 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8022cb6:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8022cba:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8022cbe:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022cc2:	fb09 f707 	mul.w	r7, r9, r7
 8022cc6:	fb0a fc0c 	mul.w	ip, sl, ip
 8022cca:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8022cce:	f107 0b20 	add.w	fp, r7, #32
 8022cd2:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022cd6:	44cc      	add	ip, r9
 8022cd8:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8022cdc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022ce0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022ce4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8022ce8:	ea4c 0909 	orr.w	r9, ip, r9
 8022cec:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8022cf0:	8847      	ldrh	r7, [r0, #2]
 8022cf2:	d019      	beq.n	8022d28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8022cf4:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8022cf8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8022cfc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022d00:	fb08 f807 	mul.w	r8, r8, r7
 8022d04:	fb0a fc0c 	mul.w	ip, sl, ip
 8022d08:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8022d0c:	f108 0b20 	add.w	fp, r8, #32
 8022d10:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022d14:	44bc      	add	ip, r7
 8022d16:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8022d1a:	0a3f      	lsrs	r7, r7, #8
 8022d1c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022d20:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022d24:	ea4c 0707 	orr.w	r7, ip, r7
 8022d28:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8022d2c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8022d30:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022d34:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022d38:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022d3c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022d40:	ea4c 0909 	orr.w	r9, ip, r9
 8022d44:	ea4a 0707 	orr.w	r7, sl, r7
 8022d48:	2d00      	cmp	r5, #0
 8022d4a:	f000 808b 	beq.w	8022e64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 8022d4e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8022d52:	3901      	subs	r1, #1
 8022d54:	0049      	lsls	r1, r1, #1
 8022d56:	3102      	adds	r1, #2
 8022d58:	eb00 0c01 	add.w	ip, r0, r1
 8022d5c:	5a41      	ldrh	r1, [r0, r1]
 8022d5e:	980c      	ldr	r0, [sp, #48]	; 0x30
 8022d60:	28ff      	cmp	r0, #255	; 0xff
 8022d62:	d019      	beq.n	8022d98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 8022d64:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8022d66:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8022d6a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022d6e:	fb04 fa01 	mul.w	sl, r4, r1
 8022d72:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022d76:	fb08 f800 	mul.w	r8, r8, r0
 8022d7a:	f10a 0020 	add.w	r0, sl, #32
 8022d7e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8022d82:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8022d86:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022d8a:	4441      	add	r1, r8
 8022d8c:	0a00      	lsrs	r0, r0, #8
 8022d8e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8022d92:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022d96:	4301      	orrs	r1, r0
 8022d98:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022d9a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8022d9e:	2cff      	cmp	r4, #255	; 0xff
 8022da0:	d01a      	beq.n	8022dd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 8022da2:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8022da6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022daa:	fb04 fa00 	mul.w	sl, r4, r0
 8022dae:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022db2:	fb08 f80c 	mul.w	r8, r8, ip
 8022db6:	f10a 0c20 	add.w	ip, sl, #32
 8022dba:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8022dbe:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8022dc2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022dc6:	4440      	add	r0, r8
 8022dc8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022dcc:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8022dd0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8022dd4:	ea40 000c 	orr.w	r0, r0, ip
 8022dd8:	fb15 fc02 	smulbb	ip, r5, r2
 8022ddc:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8022de0:	f1c5 0810 	rsb	r8, r5, #16
 8022de4:	eba8 0802 	sub.w	r8, r8, r2
 8022de8:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022dec:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8022df0:	437a      	muls	r2, r7
 8022df2:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022df6:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8022dfa:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022dfe:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022e02:	fb09 2208 	mla	r2, r9, r8, r2
 8022e06:	ea4a 0101 	orr.w	r1, sl, r1
 8022e0a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8022e0e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022e12:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022e16:	fb05 2201 	mla	r2, r5, r1, r2
 8022e1a:	ea4b 0000 	orr.w	r0, fp, r0
 8022e1e:	fb0c 2200 	mla	r2, ip, r0, r2
 8022e22:	0d57      	lsrs	r7, r2, #21
 8022e24:	0952      	lsrs	r2, r2, #5
 8022e26:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022e2a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022e2e:	433a      	orrs	r2, r7
 8022e30:	2bff      	cmp	r3, #255	; 0xff
 8022e32:	b292      	uxth	r2, r2
 8022e34:	d127      	bne.n	8022e86 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 8022e36:	f8ae 2000 	strh.w	r2, [lr]
 8022e3a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022e3c:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8022e3e:	4413      	add	r3, r2
 8022e40:	931d      	str	r3, [sp, #116]	; 0x74
 8022e42:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8022e44:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022e46:	441a      	add	r2, r3
 8022e48:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022e4a:	921e      	str	r2, [sp, #120]	; 0x78
 8022e4c:	3b01      	subs	r3, #1
 8022e4e:	f10e 0e02 	add.w	lr, lr, #2
 8022e52:	930f      	str	r3, [sp, #60]	; 0x3c
 8022e54:	e627      	b.n	8022aa6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8022e56:	fb08 f000 	mul.w	r0, r8, r0
 8022e5a:	fb09 0303 	mla	r3, r9, r3, r0
 8022e5e:	e71b      	b.n	8022c98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 8022e60:	46b9      	mov	r9, r7
 8022e62:	e743      	b.n	8022cec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 8022e64:	f1c2 0110 	rsb	r1, r2, #16
 8022e68:	437a      	muls	r2, r7
 8022e6a:	fb09 2901 	mla	r9, r9, r1, r2
 8022e6e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8022e72:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8022e76:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8022e7a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022e7e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022e82:	4302      	orrs	r2, r0
 8022e84:	e7d4      	b.n	8022e30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 8022e86:	f8be 7000 	ldrh.w	r7, [lr]
 8022e8a:	4c1c      	ldr	r4, [pc, #112]	; (8022efc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8022e8c:	43db      	mvns	r3, r3
 8022e8e:	1238      	asrs	r0, r7, #8
 8022e90:	fa5f fc83 	uxtb.w	ip, r3
 8022e94:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022e98:	10fd      	asrs	r5, r7, #3
 8022e9a:	fb00 f00c 	mul.w	r0, r0, ip
 8022e9e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8022ea2:	fb05 f10c 	mul.w	r1, r5, ip
 8022ea6:	1c45      	adds	r5, r0, #1
 8022ea8:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8022eac:	1215      	asrs	r5, r2, #8
 8022eae:	f025 0507 	bic.w	r5, r5, #7
 8022eb2:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8022eb6:	1c4d      	adds	r5, r1, #1
 8022eb8:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8022ebc:	10d1      	asrs	r1, r2, #3
 8022ebe:	f021 0103 	bic.w	r1, r1, #3
 8022ec2:	00fb      	lsls	r3, r7, #3
 8022ec4:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8022ec8:	b2db      	uxtb	r3, r3
 8022eca:	b2c0      	uxtb	r0, r0
 8022ecc:	00c9      	lsls	r1, r1, #3
 8022ece:	fb03 f30c 	mul.w	r3, r3, ip
 8022ed2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022ed6:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8022eda:	4308      	orrs	r0, r1
 8022edc:	1c59      	adds	r1, r3, #1
 8022ede:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8022ee2:	00d2      	lsls	r2, r2, #3
 8022ee4:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8022ee8:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8022eec:	4318      	orrs	r0, r3
 8022eee:	f8ae 0000 	strh.w	r0, [lr]
 8022ef2:	e7a2      	b.n	8022e3a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8022ef4:	b013      	add	sp, #76	; 0x4c
 8022ef6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022efa:	bf00      	nop
 8022efc:	fffff800 	.word	0xfffff800

08022f00 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8022f00:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022f04:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 8022f08:	fb05 4c03 	mla	ip, r5, r3, r4
 8022f0c:	2d00      	cmp	r5, #0
 8022f0e:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8022f12:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 8022f16:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8022f1a:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8022f1e:	8808      	ldrh	r0, [r1, #0]
 8022f20:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8022f24:	f2c0 80a7 	blt.w	8023076 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8022f28:	45aa      	cmp	sl, r5
 8022f2a:	f340 80a4 	ble.w	8023076 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8022f2e:	2c00      	cmp	r4, #0
 8022f30:	f2c0 809f 	blt.w	8023072 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8022f34:	42a3      	cmp	r3, r4
 8022f36:	f340 809c 	ble.w	8023072 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8022f3a:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 8022f3e:	1c62      	adds	r2, r4, #1
 8022f40:	f100 809c 	bmi.w	802307c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8022f44:	4293      	cmp	r3, r2
 8022f46:	f340 8099 	ble.w	802307c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8022f4a:	f1b9 0f00 	cmp.w	r9, #0
 8022f4e:	f000 8095 	beq.w	802307c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8022f52:	f8be c002 	ldrh.w	ip, [lr, #2]
 8022f56:	3501      	adds	r5, #1
 8022f58:	f100 8094 	bmi.w	8023084 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022f5c:	45aa      	cmp	sl, r5
 8022f5e:	f340 8091 	ble.w	8023084 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022f62:	2f00      	cmp	r7, #0
 8022f64:	f000 808e 	beq.w	8023084 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022f68:	2c00      	cmp	r4, #0
 8022f6a:	f2c0 8089 	blt.w	8023080 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8022f6e:	42a3      	cmp	r3, r4
 8022f70:	f340 8086 	ble.w	8023080 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8022f74:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8022f78:	3401      	adds	r4, #1
 8022f7a:	f100 8086 	bmi.w	802308a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8022f7e:	42a3      	cmp	r3, r4
 8022f80:	f340 8083 	ble.w	802308a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8022f84:	f1b9 0f00 	cmp.w	r9, #0
 8022f88:	d07f      	beq.n	802308a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8022f8a:	3301      	adds	r3, #1
 8022f8c:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8022f90:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8022f94:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022f98:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8022f9c:	fb19 fe07 	smulbb	lr, r9, r7
 8022fa0:	ea44 0808 	orr.w	r8, r4, r8
 8022fa4:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8022fa8:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8022fac:	f1c7 0210 	rsb	r2, r7, #16
 8022fb0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022fb4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022fb8:	ea44 0c0c 	orr.w	ip, r4, ip
 8022fbc:	eba2 0209 	sub.w	r2, r2, r9
 8022fc0:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8022fc4:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8022fc8:	fb04 f40c 	mul.w	r4, r4, ip
 8022fcc:	fb02 4808 	mla	r8, r2, r8, r4
 8022fd0:	041a      	lsls	r2, r3, #16
 8022fd2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022fd6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022fda:	4313      	orrs	r3, r2
 8022fdc:	042a      	lsls	r2, r5, #16
 8022fde:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022fe2:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8022fe6:	fb0e 8303 	mla	r3, lr, r3, r8
 8022fea:	432a      	orrs	r2, r5
 8022fec:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8022ff0:	fb07 3202 	mla	r2, r7, r2, r3
 8022ff4:	0d53      	lsrs	r3, r2, #21
 8022ff6:	0952      	lsrs	r2, r2, #5
 8022ff8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022ffc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023000:	431a      	orrs	r2, r3
 8023002:	b293      	uxth	r3, r2
 8023004:	b2b4      	uxth	r4, r6
 8023006:	1202      	asrs	r2, r0, #8
 8023008:	43f6      	mvns	r6, r6
 802300a:	b2f6      	uxtb	r6, r6
 802300c:	121d      	asrs	r5, r3, #8
 802300e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8023012:	fb12 f206 	smulbb	r2, r2, r6
 8023016:	10c7      	asrs	r7, r0, #3
 8023018:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802301c:	00c0      	lsls	r0, r0, #3
 802301e:	fb05 2504 	mla	r5, r5, r4, r2
 8023022:	b2c0      	uxtb	r0, r0
 8023024:	10da      	asrs	r2, r3, #3
 8023026:	00db      	lsls	r3, r3, #3
 8023028:	b2db      	uxtb	r3, r3
 802302a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 802302e:	fb10 f006 	smulbb	r0, r0, r6
 8023032:	b2ad      	uxth	r5, r5
 8023034:	fb03 0004 	mla	r0, r3, r4, r0
 8023038:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802303c:	fb17 f706 	smulbb	r7, r7, r6
 8023040:	b280      	uxth	r0, r0
 8023042:	1c6b      	adds	r3, r5, #1
 8023044:	fb02 7204 	mla	r2, r2, r4, r7
 8023048:	b292      	uxth	r2, r2
 802304a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802304e:	1c43      	adds	r3, r0, #1
 8023050:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8023054:	1c50      	adds	r0, r2, #1
 8023056:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 802305a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802305e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023062:	0952      	lsrs	r2, r2, #5
 8023064:	432b      	orrs	r3, r5
 8023066:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802306a:	4313      	orrs	r3, r2
 802306c:	800b      	strh	r3, [r1, #0]
 802306e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023072:	4680      	mov	r8, r0
 8023074:	e763      	b.n	8022f3e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8023076:	4684      	mov	ip, r0
 8023078:	4680      	mov	r8, r0
 802307a:	e76c      	b.n	8022f56 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 802307c:	4684      	mov	ip, r0
 802307e:	e76a      	b.n	8022f56 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8023080:	4605      	mov	r5, r0
 8023082:	e779      	b.n	8022f78 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8023084:	4603      	mov	r3, r0
 8023086:	4605      	mov	r5, r0
 8023088:	e782      	b.n	8022f90 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 802308a:	4603      	mov	r3, r0
 802308c:	e780      	b.n	8022f90 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0802308e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802308e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023092:	b093      	sub	sp, #76	; 0x4c
 8023094:	461d      	mov	r5, r3
 8023096:	9210      	str	r2, [sp, #64]	; 0x40
 8023098:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802309a:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 802309e:	920b      	str	r2, [sp, #44]	; 0x2c
 80230a0:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 80230a4:	910a      	str	r1, [sp, #40]	; 0x28
 80230a6:	6859      	ldr	r1, [r3, #4]
 80230a8:	681b      	ldr	r3, [r3, #0]
 80230aa:	9011      	str	r0, [sp, #68]	; 0x44
 80230ac:	fb01 2707 	mla	r7, r1, r7, r2
 80230b0:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 80230b4:	9307      	str	r3, [sp, #28]
 80230b6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80230b8:	681b      	ldr	r3, [r3, #0]
 80230ba:	9309      	str	r3, [sp, #36]	; 0x24
 80230bc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80230be:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 80230c2:	43db      	mvns	r3, r3
 80230c4:	b2db      	uxtb	r3, r3
 80230c6:	9308      	str	r3, [sp, #32]
 80230c8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80230ca:	2b00      	cmp	r3, #0
 80230cc:	dc03      	bgt.n	80230d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80230ce:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80230d0:	2b00      	cmp	r3, #0
 80230d2:	f340 8203 	ble.w	80234dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80230d6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80230d8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80230dc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80230e0:	1e48      	subs	r0, r1, #1
 80230e2:	f102 3cff 	add.w	ip, r2, #4294967295
 80230e6:	2d00      	cmp	r5, #0
 80230e8:	f340 80da 	ble.w	80232a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 80230ec:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80230f0:	ea4f 4326 	mov.w	r3, r6, asr #16
 80230f4:	d406      	bmi.n	8023104 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80230f6:	4586      	cmp	lr, r0
 80230f8:	da04      	bge.n	8023104 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80230fa:	2b00      	cmp	r3, #0
 80230fc:	db02      	blt.n	8023104 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80230fe:	4563      	cmp	r3, ip
 8023100:	f2c0 80cf 	blt.w	80232a2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8023104:	f11e 0e01 	adds.w	lr, lr, #1
 8023108:	f100 80c1 	bmi.w	802328e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802310c:	4571      	cmp	r1, lr
 802310e:	f2c0 80be 	blt.w	802328e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023112:	3301      	adds	r3, #1
 8023114:	f100 80bb 	bmi.w	802328e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023118:	429a      	cmp	r2, r3
 802311a:	f2c0 80b8 	blt.w	802328e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802311e:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8023122:	46a9      	mov	r9, r5
 8023124:	f1b9 0f00 	cmp.w	r9, #0
 8023128:	f340 80d8 	ble.w	80232dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 802312c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802312e:	1421      	asrs	r1, r4, #16
 8023130:	ea4f 4026 	mov.w	r0, r6, asr #16
 8023134:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023138:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802313c:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8023140:	f100 8111 	bmi.w	8023366 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023144:	f10e 3aff 	add.w	sl, lr, #4294967295
 8023148:	4551      	cmp	r1, sl
 802314a:	f280 810c 	bge.w	8023366 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802314e:	2800      	cmp	r0, #0
 8023150:	f2c0 8109 	blt.w	8023366 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023154:	f103 3aff 	add.w	sl, r3, #4294967295
 8023158:	4550      	cmp	r0, sl
 802315a:	f280 8104 	bge.w	8023366 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802315e:	fa0f f38e 	sxth.w	r3, lr
 8023162:	fb00 1103 	mla	r1, r0, r3, r1
 8023166:	9809      	ldr	r0, [sp, #36]	; 0x24
 8023168:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 802316c:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8023170:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8023174:	f1bc 0f00 	cmp.w	ip, #0
 8023178:	d007      	beq.n	802318a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 802317a:	005b      	lsls	r3, r3, #1
 802317c:	eb0a 0003 	add.w	r0, sl, r3
 8023180:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8023184:	930c      	str	r3, [sp, #48]	; 0x30
 8023186:	8843      	ldrh	r3, [r0, #2]
 8023188:	930d      	str	r3, [sp, #52]	; 0x34
 802318a:	ea4f 400e 	mov.w	r0, lr, lsl #16
 802318e:	fb12 f30c 	smulbb	r3, r2, ip
 8023192:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8023196:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 802319a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802319e:	10db      	asrs	r3, r3, #3
 80231a0:	ea40 000e 	orr.w	r0, r0, lr
 80231a4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80231a8:	f1cc 0e10 	rsb	lr, ip, #16
 80231ac:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80231b0:	ebae 0e02 	sub.w	lr, lr, r2
 80231b4:	ea4a 0101 	orr.w	r1, sl, r1
 80231b8:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80231bc:	4351      	muls	r1, r2
 80231be:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80231c0:	9f08      	ldr	r7, [sp, #32]
 80231c2:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80231c6:	fb0e 1e00 	mla	lr, lr, r0, r1
 80231ca:	0410      	lsls	r0, r2, #16
 80231cc:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80231d0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80231d4:	4310      	orrs	r0, r2
 80231d6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80231d8:	990c      	ldr	r1, [sp, #48]	; 0x30
 80231da:	0412      	lsls	r2, r2, #16
 80231dc:	fb03 e000 	mla	r0, r3, r0, lr
 80231e0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80231e4:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80231e8:	ea42 020e 	orr.w	r2, r2, lr
 80231ec:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80231f0:	fb03 0302 	mla	r3, r3, r2, r0
 80231f4:	0d5a      	lsrs	r2, r3, #21
 80231f6:	095b      	lsrs	r3, r3, #5
 80231f8:	f8b8 0000 	ldrh.w	r0, [r8]
 80231fc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023200:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8023204:	4313      	orrs	r3, r2
 8023206:	b29b      	uxth	r3, r3
 8023208:	1201      	asrs	r1, r0, #8
 802320a:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 802320e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8023212:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023216:	fb11 f107 	smulbb	r1, r1, r7
 802321a:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 802321e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8023222:	00c0      	lsls	r0, r0, #3
 8023224:	fb0c 1c02 	mla	ip, ip, r2, r1
 8023228:	b2c0      	uxtb	r0, r0
 802322a:	10d9      	asrs	r1, r3, #3
 802322c:	00db      	lsls	r3, r3, #3
 802322e:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8023232:	b2db      	uxtb	r3, r3
 8023234:	fb10 f007 	smulbb	r0, r0, r7
 8023238:	fa1f fc8c 	uxth.w	ip, ip
 802323c:	fb03 0302 	mla	r3, r3, r2, r0
 8023240:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023244:	fb1e fe07 	smulbb	lr, lr, r7
 8023248:	fb01 e102 	mla	r1, r1, r2, lr
 802324c:	b29a      	uxth	r2, r3
 802324e:	f10c 0301 	add.w	r3, ip, #1
 8023252:	b289      	uxth	r1, r1
 8023254:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8023258:	1c53      	adds	r3, r2, #1
 802325a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802325e:	1c4a      	adds	r2, r1, #1
 8023260:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8023264:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8023268:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802326c:	0949      	lsrs	r1, r1, #5
 802326e:	ea43 030c 	orr.w	r3, r3, ip
 8023272:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023276:	430b      	orrs	r3, r1
 8023278:	f8a8 3000 	strh.w	r3, [r8]
 802327c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802327e:	441c      	add	r4, r3
 8023280:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023282:	f108 0802 	add.w	r8, r8, #2
 8023286:	441e      	add	r6, r3
 8023288:	f109 39ff 	add.w	r9, r9, #4294967295
 802328c:	e74a      	b.n	8023124 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 802328e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023290:	441c      	add	r4, r3
 8023292:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023294:	441e      	add	r6, r3
 8023296:	9b07      	ldr	r3, [sp, #28]
 8023298:	3302      	adds	r3, #2
 802329a:	3d01      	subs	r5, #1
 802329c:	9307      	str	r3, [sp, #28]
 802329e:	e722      	b.n	80230e6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80232a0:	d022      	beq.n	80232e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 80232a2:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80232a4:	1e6b      	subs	r3, r5, #1
 80232a6:	fb00 4003 	mla	r0, r0, r3, r4
 80232aa:	1400      	asrs	r0, r0, #16
 80232ac:	f53f af37 	bmi.w	802311e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80232b0:	3901      	subs	r1, #1
 80232b2:	4288      	cmp	r0, r1
 80232b4:	f6bf af33 	bge.w	802311e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80232b8:	9920      	ldr	r1, [sp, #128]	; 0x80
 80232ba:	fb01 6303 	mla	r3, r1, r3, r6
 80232be:	141b      	asrs	r3, r3, #16
 80232c0:	f53f af2d 	bmi.w	802311e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80232c4:	3a01      	subs	r2, #1
 80232c6:	4293      	cmp	r3, r2
 80232c8:	f6bf af29 	bge.w	802311e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80232cc:	f8dd 901c 	ldr.w	r9, [sp, #28]
 80232d0:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 80232d4:	46a8      	mov	r8, r5
 80232d6:	f1b8 0f00 	cmp.w	r8, #0
 80232da:	dc5e      	bgt.n	802339a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80232dc:	9b07      	ldr	r3, [sp, #28]
 80232de:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80232e2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80232e6:	9307      	str	r3, [sp, #28]
 80232e8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80232ea:	2b00      	cmp	r3, #0
 80232ec:	f340 80f6 	ble.w	80234dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80232f0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80232f4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80232f8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80232fc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80232fe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023302:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023306:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802330a:	eef0 6a62 	vmov.f32	s13, s5
 802330e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023312:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023316:	ee77 2a62 	vsub.f32	s5, s14, s5
 802331a:	ee16 4a90 	vmov	r4, s13
 802331e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023322:	eef0 6a43 	vmov.f32	s13, s6
 8023326:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802332a:	ee12 2a90 	vmov	r2, s5
 802332e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023332:	fb92 f3f3 	sdiv	r3, r2, r3
 8023336:	ee13 2a10 	vmov	r2, s6
 802333a:	931f      	str	r3, [sp, #124]	; 0x7c
 802333c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802333e:	fb92 f3f3 	sdiv	r3, r2, r3
 8023342:	9320      	str	r3, [sp, #128]	; 0x80
 8023344:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023346:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8023348:	3b01      	subs	r3, #1
 802334a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802334e:	930a      	str	r3, [sp, #40]	; 0x28
 8023350:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023352:	ee16 6a90 	vmov	r6, s13
 8023356:	bf14      	ite	ne
 8023358:	461d      	movne	r5, r3
 802335a:	4615      	moveq	r5, r2
 802335c:	eeb0 3a67 	vmov.f32	s6, s15
 8023360:	eef0 2a47 	vmov.f32	s5, s14
 8023364:	e6b0      	b.n	80230c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8023366:	f111 0a01 	adds.w	sl, r1, #1
 802336a:	d487      	bmi.n	802327c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802336c:	45d6      	cmp	lr, sl
 802336e:	db85      	blt.n	802327c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023370:	f110 0a01 	adds.w	sl, r0, #1
 8023374:	d482      	bmi.n	802327c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023376:	4553      	cmp	r3, sl
 8023378:	db80      	blt.n	802327c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802337a:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 802337c:	9101      	str	r1, [sp, #4]
 802337e:	b21b      	sxth	r3, r3
 8023380:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8023384:	9300      	str	r3, [sp, #0]
 8023386:	e9cd c704 	strd	ip, r7, [sp, #16]
 802338a:	fa0f f38e 	sxth.w	r3, lr
 802338e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023390:	9811      	ldr	r0, [sp, #68]	; 0x44
 8023392:	4641      	mov	r1, r8
 8023394:	f7ff fdb4 	bl	8022f00 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8023398:	e770      	b.n	802327c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802339a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802339c:	9f09      	ldr	r7, [sp, #36]	; 0x24
 802339e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80233a2:	1430      	asrs	r0, r6, #16
 80233a4:	1423      	asrs	r3, r4, #16
 80233a6:	fb01 3000 	mla	r0, r1, r0, r3
 80233aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80233ac:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 80233b0:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 80233b4:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 80233b8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80233bc:	8858      	ldrh	r0, [r3, #2]
 80233be:	f1be 0f00 	cmp.w	lr, #0
 80233c2:	d00b      	beq.n	80233dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 80233c4:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80233c8:	3901      	subs	r1, #1
 80233ca:	0049      	lsls	r1, r1, #1
 80233cc:	3102      	adds	r1, #2
 80233ce:	eb03 0b01 	add.w	fp, r3, r1
 80233d2:	5a5b      	ldrh	r3, [r3, r1]
 80233d4:	930e      	str	r3, [sp, #56]	; 0x38
 80233d6:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80233da:	930f      	str	r3, [sp, #60]	; 0x3c
 80233dc:	ea4f 410c 	mov.w	r1, ip, lsl #16
 80233e0:	fb12 f30e 	smulbb	r3, r2, lr
 80233e4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80233e8:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80233ec:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 80233f0:	10db      	asrs	r3, r3, #3
 80233f2:	ea41 010c 	orr.w	r1, r1, ip
 80233f6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80233fa:	f1ce 0c10 	rsb	ip, lr, #16
 80233fe:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023402:	ebac 0c02 	sub.w	ip, ip, r2
 8023406:	ea4b 0000 	orr.w	r0, fp, r0
 802340a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802340e:	4350      	muls	r0, r2
 8023410:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8023412:	9f08      	ldr	r7, [sp, #32]
 8023414:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8023418:	fb0c 0c01 	mla	ip, ip, r1, r0
 802341c:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8023420:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8023424:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8023426:	980e      	ldr	r0, [sp, #56]	; 0x38
 8023428:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802342c:	0412      	lsls	r2, r2, #16
 802342e:	ea4b 0101 	orr.w	r1, fp, r1
 8023432:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023436:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802343a:	fb03 c101 	mla	r1, r3, r1, ip
 802343e:	4302      	orrs	r2, r0
 8023440:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8023444:	fb03 1202 	mla	r2, r3, r2, r1
 8023448:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 802344c:	0952      	lsrs	r2, r2, #5
 802344e:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8023452:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8023456:	f8b9 2000 	ldrh.w	r2, [r9]
 802345a:	ea4b 0303 	orr.w	r3, fp, r3
 802345e:	b29b      	uxth	r3, r3
 8023460:	1211      	asrs	r1, r2, #8
 8023462:	1218      	asrs	r0, r3, #8
 8023464:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023468:	fb11 f107 	smulbb	r1, r1, r7
 802346c:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8023470:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023474:	00d2      	lsls	r2, r2, #3
 8023476:	fb00 100a 	mla	r0, r0, sl, r1
 802347a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 802347e:	10d9      	asrs	r1, r3, #3
 8023480:	b2d2      	uxtb	r2, r2
 8023482:	00db      	lsls	r3, r3, #3
 8023484:	fb1c fc07 	smulbb	ip, ip, r7
 8023488:	fb12 f207 	smulbb	r2, r2, r7
 802348c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023490:	b2db      	uxtb	r3, r3
 8023492:	b280      	uxth	r0, r0
 8023494:	fb01 c10a 	mla	r1, r1, sl, ip
 8023498:	fb03 230a 	mla	r3, r3, sl, r2
 802349c:	b29b      	uxth	r3, r3
 802349e:	b289      	uxth	r1, r1
 80234a0:	1c42      	adds	r2, r0, #1
 80234a2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80234a6:	f101 0c01 	add.w	ip, r1, #1
 80234aa:	1c5a      	adds	r2, r3, #1
 80234ac:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80234b0:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 80234b4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80234b6:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80234ba:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80234be:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80234c2:	4310      	orrs	r0, r2
 80234c4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80234c8:	441c      	add	r4, r3
 80234ca:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80234cc:	ea40 000c 	orr.w	r0, r0, ip
 80234d0:	f829 0b02 	strh.w	r0, [r9], #2
 80234d4:	441e      	add	r6, r3
 80234d6:	f108 38ff 	add.w	r8, r8, #4294967295
 80234da:	e6fc      	b.n	80232d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 80234dc:	b013      	add	sp, #76	; 0x4c
 80234de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080234e2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 80234e2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80234e6:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 80234ea:	fb0e 4703 	mla	r7, lr, r3, r4
 80234ee:	f1be 0f00 	cmp.w	lr, #0
 80234f2:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 80234f6:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 80234fa:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 80234fe:	8808      	ldrh	r0, [r1, #0]
 8023500:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8023504:	db60      	blt.n	80235c8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8023506:	45f1      	cmp	r9, lr
 8023508:	dd5e      	ble.n	80235c8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 802350a:	2c00      	cmp	r4, #0
 802350c:	db5a      	blt.n	80235c4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 802350e:	42a3      	cmp	r3, r4
 8023510:	dd58      	ble.n	80235c4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8023512:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8023516:	1c62      	adds	r2, r4, #1
 8023518:	d459      	bmi.n	80235ce <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 802351a:	4293      	cmp	r3, r2
 802351c:	dd57      	ble.n	80235ce <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 802351e:	2d00      	cmp	r5, #0
 8023520:	d055      	beq.n	80235ce <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8023522:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8023526:	f11e 0e01 	adds.w	lr, lr, #1
 802352a:	d454      	bmi.n	80235d6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 802352c:	45f1      	cmp	r9, lr
 802352e:	dd52      	ble.n	80235d6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8023530:	2e00      	cmp	r6, #0
 8023532:	d050      	beq.n	80235d6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8023534:	2c00      	cmp	r4, #0
 8023536:	db4c      	blt.n	80235d2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8023538:	42a3      	cmp	r3, r4
 802353a:	dd4a      	ble.n	80235d2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 802353c:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8023540:	3401      	adds	r4, #1
 8023542:	d405      	bmi.n	8023550 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8023544:	42a3      	cmp	r3, r4
 8023546:	dd03      	ble.n	8023550 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8023548:	b115      	cbz	r5, 8023550 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 802354a:	3301      	adds	r3, #1
 802354c:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8023550:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8023554:	fb15 f406 	smulbb	r4, r5, r6
 8023558:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802355c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8023560:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023564:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8023568:	ea43 0c0c 	orr.w	ip, r3, ip
 802356c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8023570:	f1c6 0310 	rsb	r3, r6, #16
 8023574:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8023578:	1b5b      	subs	r3, r3, r5
 802357a:	ea4e 0707 	orr.w	r7, lr, r7
 802357e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8023582:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8023586:	437d      	muls	r5, r7
 8023588:	fb03 5c0c 	mla	ip, r3, ip, r5
 802358c:	0403      	lsls	r3, r0, #16
 802358e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8023592:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023596:	4318      	orrs	r0, r3
 8023598:	0413      	lsls	r3, r2, #16
 802359a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802359e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80235a2:	4313      	orrs	r3, r2
 80235a4:	fb04 c000 	mla	r0, r4, r0, ip
 80235a8:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 80235ac:	fb06 0003 	mla	r0, r6, r3, r0
 80235b0:	0d43      	lsrs	r3, r0, #21
 80235b2:	0940      	lsrs	r0, r0, #5
 80235b4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80235b8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80235bc:	4318      	orrs	r0, r3
 80235be:	8008      	strh	r0, [r1, #0]
 80235c0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80235c4:	4684      	mov	ip, r0
 80235c6:	e7a6      	b.n	8023516 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 80235c8:	4607      	mov	r7, r0
 80235ca:	4684      	mov	ip, r0
 80235cc:	e7ab      	b.n	8023526 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 80235ce:	4607      	mov	r7, r0
 80235d0:	e7a9      	b.n	8023526 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 80235d2:	4602      	mov	r2, r0
 80235d4:	e7b4      	b.n	8023540 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 80235d6:	4602      	mov	r2, r0
 80235d8:	e7ba      	b.n	8023550 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

080235da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80235da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80235de:	b08f      	sub	sp, #60	; 0x3c
 80235e0:	461d      	mov	r5, r3
 80235e2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80235e4:	920c      	str	r2, [sp, #48]	; 0x30
 80235e6:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 80235ea:	9107      	str	r1, [sp, #28]
 80235ec:	6859      	ldr	r1, [r3, #4]
 80235ee:	681b      	ldr	r3, [r3, #0]
 80235f0:	900d      	str	r0, [sp, #52]	; 0x34
 80235f2:	fb01 2707 	mla	r7, r1, r7, r2
 80235f6:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 80235fa:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80235fc:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8023600:	f8d3 8000 	ldr.w	r8, [r3]
 8023604:	9b07      	ldr	r3, [sp, #28]
 8023606:	2b00      	cmp	r3, #0
 8023608:	dc03      	bgt.n	8023612 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 802360a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802360c:	2b00      	cmp	r3, #0
 802360e:	f340 8181 	ble.w	8023914 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8023612:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023614:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023618:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802361c:	1e48      	subs	r0, r1, #1
 802361e:	f102 3cff 	add.w	ip, r2, #4294967295
 8023622:	2d00      	cmp	r5, #0
 8023624:	f340 809b 	ble.w	802375e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8023628:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802362c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023630:	d406      	bmi.n	8023640 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8023632:	4586      	cmp	lr, r0
 8023634:	da04      	bge.n	8023640 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8023636:	2b00      	cmp	r3, #0
 8023638:	db02      	blt.n	8023640 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802363a:	4563      	cmp	r3, ip
 802363c:	f2c0 8090 	blt.w	8023760 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8023640:	f11e 0e01 	adds.w	lr, lr, #1
 8023644:	f100 8084 	bmi.w	8023750 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8023648:	4571      	cmp	r1, lr
 802364a:	f2c0 8081 	blt.w	8023750 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802364e:	3301      	adds	r3, #1
 8023650:	d47e      	bmi.n	8023750 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8023652:	429a      	cmp	r2, r3
 8023654:	db7c      	blt.n	8023750 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8023656:	46aa      	mov	sl, r5
 8023658:	46b9      	mov	r9, r7
 802365a:	f1ba 0f00 	cmp.w	sl, #0
 802365e:	f340 8099 	ble.w	8023794 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8023662:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023664:	1421      	asrs	r1, r4, #16
 8023666:	ea4f 4026 	mov.w	r0, r6, asr #16
 802366a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802366e:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8023672:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8023676:	f100 80d0 	bmi.w	802381a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802367a:	f10e 3bff 	add.w	fp, lr, #4294967295
 802367e:	4559      	cmp	r1, fp
 8023680:	f280 80cb 	bge.w	802381a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8023684:	2800      	cmp	r0, #0
 8023686:	f2c0 80c8 	blt.w	802381a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802368a:	f103 3bff 	add.w	fp, r3, #4294967295
 802368e:	4558      	cmp	r0, fp
 8023690:	f280 80c3 	bge.w	802381a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8023694:	fa0f fe8e 	sxth.w	lr, lr
 8023698:	fb00 110e 	mla	r1, r0, lr, r1
 802369c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 80236a0:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 80236a4:	8841      	ldrh	r1, [r0, #2]
 80236a6:	f1bc 0f00 	cmp.w	ip, #0
 80236aa:	d00b      	beq.n	80236c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 80236ac:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 80236b0:	3b01      	subs	r3, #1
 80236b2:	005b      	lsls	r3, r3, #1
 80236b4:	3302      	adds	r3, #2
 80236b6:	eb00 0e03 	add.w	lr, r0, r3
 80236ba:	5ac3      	ldrh	r3, [r0, r3]
 80236bc:	9308      	str	r3, [sp, #32]
 80236be:	f8be 3002 	ldrh.w	r3, [lr, #2]
 80236c2:	9309      	str	r3, [sp, #36]	; 0x24
 80236c4:	ea4f 400b 	mov.w	r0, fp, lsl #16
 80236c8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80236cc:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80236d0:	ea40 000b 	orr.w	r0, r0, fp
 80236d4:	fb12 f30c 	smulbb	r3, r2, ip
 80236d8:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80236dc:	10db      	asrs	r3, r3, #3
 80236de:	f1cc 0e10 	rsb	lr, ip, #16
 80236e2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80236e6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80236ea:	ebae 0e02 	sub.w	lr, lr, r2
 80236ee:	ea4b 0101 	orr.w	r1, fp, r1
 80236f2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80236f6:	4351      	muls	r1, r2
 80236f8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80236fa:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80236fe:	fb0e 1e00 	mla	lr, lr, r0, r1
 8023702:	0410      	lsls	r0, r2, #16
 8023704:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8023708:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802370c:	4310      	orrs	r0, r2
 802370e:	9a08      	ldr	r2, [sp, #32]
 8023710:	9908      	ldr	r1, [sp, #32]
 8023712:	0412      	lsls	r2, r2, #16
 8023714:	fb03 e000 	mla	r0, r3, r0, lr
 8023718:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802371c:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8023720:	ea42 020e 	orr.w	r2, r2, lr
 8023724:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8023728:	fb03 0302 	mla	r3, r3, r2, r0
 802372c:	0d5a      	lsrs	r2, r3, #21
 802372e:	095b      	lsrs	r3, r3, #5
 8023730:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023734:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8023738:	4313      	orrs	r3, r2
 802373a:	f8a9 3000 	strh.w	r3, [r9]
 802373e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023740:	441c      	add	r4, r3
 8023742:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023744:	f109 0902 	add.w	r9, r9, #2
 8023748:	441e      	add	r6, r3
 802374a:	f10a 3aff 	add.w	sl, sl, #4294967295
 802374e:	e784      	b.n	802365a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8023750:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023752:	441c      	add	r4, r3
 8023754:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023756:	3d01      	subs	r5, #1
 8023758:	441e      	add	r6, r3
 802375a:	3702      	adds	r7, #2
 802375c:	e761      	b.n	8023622 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802375e:	d01d      	beq.n	802379c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8023760:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8023762:	1e6b      	subs	r3, r5, #1
 8023764:	fb00 4003 	mla	r0, r0, r3, r4
 8023768:	1400      	asrs	r0, r0, #16
 802376a:	f53f af74 	bmi.w	8023656 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802376e:	3901      	subs	r1, #1
 8023770:	4288      	cmp	r0, r1
 8023772:	f6bf af70 	bge.w	8023656 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8023776:	991c      	ldr	r1, [sp, #112]	; 0x70
 8023778:	fb01 6303 	mla	r3, r1, r3, r6
 802377c:	141b      	asrs	r3, r3, #16
 802377e:	f53f af6a 	bmi.w	8023656 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8023782:	3a01      	subs	r2, #1
 8023784:	4293      	cmp	r3, r2
 8023786:	f6bf af66 	bge.w	8023656 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802378a:	46a9      	mov	r9, r5
 802378c:	46ba      	mov	sl, r7
 802378e:	f1b9 0f00 	cmp.w	r9, #0
 8023792:	dc5a      	bgt.n	802384a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8023794:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8023798:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 802379c:	9b07      	ldr	r3, [sp, #28]
 802379e:	2b00      	cmp	r3, #0
 80237a0:	f340 80b8 	ble.w	8023914 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 80237a4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80237a8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80237ac:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80237b0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80237b2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80237b6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80237ba:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80237be:	eef0 6a62 	vmov.f32	s13, s5
 80237c2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80237c6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80237ca:	ee77 2a62 	vsub.f32	s5, s14, s5
 80237ce:	ee16 4a90 	vmov	r4, s13
 80237d2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80237d6:	eef0 6a43 	vmov.f32	s13, s6
 80237da:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80237de:	ee12 2a90 	vmov	r2, s5
 80237e2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80237e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80237ea:	ee13 2a10 	vmov	r2, s6
 80237ee:	931b      	str	r3, [sp, #108]	; 0x6c
 80237f0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80237f2:	fb92 f3f3 	sdiv	r3, r2, r3
 80237f6:	931c      	str	r3, [sp, #112]	; 0x70
 80237f8:	9b07      	ldr	r3, [sp, #28]
 80237fa:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80237fc:	3b01      	subs	r3, #1
 80237fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023802:	9307      	str	r3, [sp, #28]
 8023804:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023806:	ee16 6a90 	vmov	r6, s13
 802380a:	bf14      	ite	ne
 802380c:	461d      	movne	r5, r3
 802380e:	4615      	moveq	r5, r2
 8023810:	eeb0 3a67 	vmov.f32	s6, s15
 8023814:	eef0 2a47 	vmov.f32	s5, s14
 8023818:	e6f4      	b.n	8023604 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 802381a:	f111 0b01 	adds.w	fp, r1, #1
 802381e:	d48e      	bmi.n	802373e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8023820:	45de      	cmp	lr, fp
 8023822:	db8c      	blt.n	802373e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8023824:	f110 0b01 	adds.w	fp, r0, #1
 8023828:	d489      	bmi.n	802373e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802382a:	455b      	cmp	r3, fp
 802382c:	db87      	blt.n	802373e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802382e:	b21b      	sxth	r3, r3
 8023830:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8023834:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8023838:	9300      	str	r3, [sp, #0]
 802383a:	4642      	mov	r2, r8
 802383c:	fa0f f38e 	sxth.w	r3, lr
 8023840:	4649      	mov	r1, r9
 8023842:	980d      	ldr	r0, [sp, #52]	; 0x34
 8023844:	f7ff fe4d 	bl	80234e2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8023848:	e779      	b.n	802373e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802384a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802384c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8023850:	1420      	asrs	r0, r4, #16
 8023852:	1431      	asrs	r1, r6, #16
 8023854:	fb03 0101 	mla	r1, r3, r1, r0
 8023858:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 802385c:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8023860:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8023864:	8841      	ldrh	r1, [r0, #2]
 8023866:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802386a:	f1be 0f00 	cmp.w	lr, #0
 802386e:	d00b      	beq.n	8023888 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8023870:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8023874:	3b01      	subs	r3, #1
 8023876:	005b      	lsls	r3, r3, #1
 8023878:	3302      	adds	r3, #2
 802387a:	eb00 0b03 	add.w	fp, r0, r3
 802387e:	5ac3      	ldrh	r3, [r0, r3]
 8023880:	930a      	str	r3, [sp, #40]	; 0x28
 8023882:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8023886:	930b      	str	r3, [sp, #44]	; 0x2c
 8023888:	ea4f 400c 	mov.w	r0, ip, lsl #16
 802388c:	fb12 f30e 	smulbb	r3, r2, lr
 8023890:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023894:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8023898:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802389c:	10db      	asrs	r3, r3, #3
 802389e:	ea40 000c 	orr.w	r0, r0, ip
 80238a2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80238a6:	f1ce 0c10 	rsb	ip, lr, #16
 80238aa:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80238ae:	ebac 0c02 	sub.w	ip, ip, r2
 80238b2:	ea4b 0101 	orr.w	r1, fp, r1
 80238b6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80238ba:	4351      	muls	r1, r2
 80238bc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80238be:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80238c2:	fb0c 1c00 	mla	ip, ip, r0, r1
 80238c6:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80238ca:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 80238ce:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80238d0:	990a      	ldr	r1, [sp, #40]	; 0x28
 80238d2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80238d6:	0412      	lsls	r2, r2, #16
 80238d8:	ea4b 0000 	orr.w	r0, fp, r0
 80238dc:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80238e0:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 80238e4:	fb03 c000 	mla	r0, r3, r0, ip
 80238e8:	ea42 0b0b 	orr.w	fp, r2, fp
 80238ec:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80238f0:	fb03 000b 	mla	r0, r3, fp, r0
 80238f4:	0d43      	lsrs	r3, r0, #21
 80238f6:	0940      	lsrs	r0, r0, #5
 80238f8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80238fc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023900:	4318      	orrs	r0, r3
 8023902:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023904:	f82a 0b02 	strh.w	r0, [sl], #2
 8023908:	441c      	add	r4, r3
 802390a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802390c:	f109 39ff 	add.w	r9, r9, #4294967295
 8023910:	441e      	add	r6, r3
 8023912:	e73c      	b.n	802378e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8023914:	b00f      	add	sp, #60	; 0x3c
 8023916:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802391a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 802391a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802391e:	b085      	sub	sp, #20
 8023920:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8023924:	9102      	str	r1, [sp, #8]
 8023926:	2c00      	cmp	r4, #0
 8023928:	fb04 7103 	mla	r1, r4, r3, r7
 802392c:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8023930:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8023934:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8023938:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 802393c:	f2c0 811b 	blt.w	8023b76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8023940:	45a6      	cmp	lr, r4
 8023942:	f340 8118 	ble.w	8023b76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8023946:	2f00      	cmp	r7, #0
 8023948:	f2c0 8113 	blt.w	8023b72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 802394c:	42bb      	cmp	r3, r7
 802394e:	f340 8110 	ble.w	8023b72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8023952:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8023956:	1c7a      	adds	r2, r7, #1
 8023958:	f100 8110 	bmi.w	8023b7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 802395c:	4293      	cmp	r3, r2
 802395e:	f340 810d 	ble.w	8023b7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8023962:	2e00      	cmp	r6, #0
 8023964:	f000 810c 	beq.w	8023b80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8023968:	f8dc 1004 	ldr.w	r1, [ip, #4]
 802396c:	3401      	adds	r4, #1
 802396e:	f100 810b 	bmi.w	8023b88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8023972:	45a6      	cmp	lr, r4
 8023974:	f340 8108 	ble.w	8023b88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8023978:	2800      	cmp	r0, #0
 802397a:	f000 8108 	beq.w	8023b8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 802397e:	2f00      	cmp	r7, #0
 8023980:	f2c0 8100 	blt.w	8023b84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8023984:	42bb      	cmp	r3, r7
 8023986:	f340 80fd 	ble.w	8023b84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 802398a:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 802398e:	3701      	adds	r7, #1
 8023990:	f100 8100 	bmi.w	8023b94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8023994:	42bb      	cmp	r3, r7
 8023996:	f340 80fd 	ble.w	8023b94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 802399a:	2e00      	cmp	r6, #0
 802399c:	f000 80fc 	beq.w	8023b98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 80239a0:	3301      	adds	r3, #1
 80239a2:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 80239a6:	b2b6      	uxth	r6, r6
 80239a8:	b280      	uxth	r0, r0
 80239aa:	fb00 fe06 	mul.w	lr, r0, r6
 80239ae:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80239b2:	0136      	lsls	r6, r6, #4
 80239b4:	eba6 070e 	sub.w	r7, r6, lr
 80239b8:	b280      	uxth	r0, r0
 80239ba:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 80239be:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80239c2:	b2bf      	uxth	r7, r7
 80239c4:	1a1b      	subs	r3, r3, r0
 80239c6:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80239ca:	b29b      	uxth	r3, r3
 80239cc:	fb0a f607 	mul.w	r6, sl, r7
 80239d0:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80239d4:	fb0b 6603 	mla	r6, fp, r3, r6
 80239d8:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80239dc:	fb00 6609 	mla	r6, r0, r9, r6
 80239e0:	fb0e 6608 	mla	r6, lr, r8, r6
 80239e4:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80239e8:	9600      	str	r6, [sp, #0]
 80239ea:	2e00      	cmp	r6, #0
 80239ec:	f000 80be 	beq.w	8023b6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 80239f0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80239f4:	fb0b fc0c 	mul.w	ip, fp, ip
 80239f8:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80239fc:	fb0b f505 	mul.w	r5, fp, r5
 8023a00:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8023a04:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8023a08:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023a0c:	44dc      	add	ip, fp
 8023a0e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023a12:	9501      	str	r5, [sp, #4]
 8023a14:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8023a18:	9503      	str	r5, [sp, #12]
 8023a1a:	9d01      	ldr	r5, [sp, #4]
 8023a1c:	9e02      	ldr	r6, [sp, #8]
 8023a1e:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8023a22:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8023a26:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8023a2a:	fb0a fc0c 	mul.w	ip, sl, ip
 8023a2e:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8023a32:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8023a36:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023a3a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023a3e:	4465      	add	r5, ip
 8023a40:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023a44:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8023a48:	fb09 fc0c 	mul.w	ip, r9, ip
 8023a4c:	fb09 f904 	mul.w	r9, r9, r4
 8023a50:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8023a54:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8023a58:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8023a5c:	fb08 f404 	mul.w	r4, r8, r4
 8023a60:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023a64:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023a68:	fb08 f802 	mul.w	r8, r8, r2
 8023a6c:	fb0a fa01 	mul.w	sl, sl, r1
 8023a70:	0a22      	lsrs	r2, r4, #8
 8023a72:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8023a76:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023a7a:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8023a7e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8023a82:	4414      	add	r4, r2
 8023a84:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8023a88:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8023a8c:	0a2d      	lsrs	r5, r5, #8
 8023a8e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8023a92:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023a96:	9a03      	ldr	r2, [sp, #12]
 8023a98:	8836      	ldrh	r6, [r6, #0]
 8023a9a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023a9e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023aa2:	437d      	muls	r5, r7
 8023aa4:	4461      	add	r1, ip
 8023aa6:	0a24      	lsrs	r4, r4, #8
 8023aa8:	fb02 5503 	mla	r5, r2, r3, r5
 8023aac:	0a09      	lsrs	r1, r1, #8
 8023aae:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8023ab2:	fb04 540e 	mla	r4, r4, lr, r5
 8023ab6:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023aba:	fb01 4100 	mla	r1, r1, r0, r4
 8023abe:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023ac2:	0a09      	lsrs	r1, r1, #8
 8023ac4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023ac8:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8023acc:	fb07 f70a 	mul.w	r7, r7, sl
 8023ad0:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8023ad4:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8023ad8:	fb03 7101 	mla	r1, r3, r1, r7
 8023adc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023ae0:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8023ae4:	fb0e 1e08 	mla	lr, lr, r8, r1
 8023ae8:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8023aec:	fb00 e101 	mla	r1, r0, r1, lr
 8023af0:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8023af4:	9a00      	ldr	r2, [sp, #0]
 8023af6:	b287      	uxth	r7, r0
 8023af8:	437a      	muls	r2, r7
 8023afa:	0a09      	lsrs	r1, r1, #8
 8023afc:	1c53      	adds	r3, r2, #1
 8023afe:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023b02:	4321      	orrs	r1, r4
 8023b04:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023b08:	1235      	asrs	r5, r6, #8
 8023b0a:	0c0a      	lsrs	r2, r1, #16
 8023b0c:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8023b10:	b2db      	uxtb	r3, r3
 8023b12:	fb12 f207 	smulbb	r2, r2, r7
 8023b16:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023b1a:	fb05 2503 	mla	r5, r5, r3, r2
 8023b1e:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8023b22:	10f2      	asrs	r2, r6, #3
 8023b24:	b2c8      	uxtb	r0, r1
 8023b26:	00f6      	lsls	r6, r6, #3
 8023b28:	fb14 f407 	smulbb	r4, r4, r7
 8023b2c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8023b30:	b2f6      	uxtb	r6, r6
 8023b32:	fb10 f007 	smulbb	r0, r0, r7
 8023b36:	fb02 4203 	mla	r2, r2, r3, r4
 8023b3a:	b2ad      	uxth	r5, r5
 8023b3c:	fb06 0303 	mla	r3, r6, r3, r0
 8023b40:	b299      	uxth	r1, r3
 8023b42:	b294      	uxth	r4, r2
 8023b44:	1c6b      	adds	r3, r5, #1
 8023b46:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023b4a:	1c62      	adds	r2, r4, #1
 8023b4c:	1c4b      	adds	r3, r1, #1
 8023b4e:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8023b52:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8023b56:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023b5a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023b5e:	0952      	lsrs	r2, r2, #5
 8023b60:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023b64:	432b      	orrs	r3, r5
 8023b66:	4313      	orrs	r3, r2
 8023b68:	9a02      	ldr	r2, [sp, #8]
 8023b6a:	8013      	strh	r3, [r2, #0]
 8023b6c:	b005      	add	sp, #20
 8023b6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023b72:	2500      	movs	r5, #0
 8023b74:	e6ef      	b.n	8023956 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 8023b76:	2100      	movs	r1, #0
 8023b78:	460d      	mov	r5, r1
 8023b7a:	e6f7      	b.n	802396c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8023b7c:	2100      	movs	r1, #0
 8023b7e:	e6f5      	b.n	802396c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8023b80:	4631      	mov	r1, r6
 8023b82:	e6f3      	b.n	802396c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8023b84:	2400      	movs	r4, #0
 8023b86:	e702      	b.n	802398e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8023b88:	2200      	movs	r2, #0
 8023b8a:	4614      	mov	r4, r2
 8023b8c:	e70b      	b.n	80239a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8023b8e:	4602      	mov	r2, r0
 8023b90:	4604      	mov	r4, r0
 8023b92:	e708      	b.n	80239a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8023b94:	2200      	movs	r2, #0
 8023b96:	e706      	b.n	80239a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8023b98:	4632      	mov	r2, r6
 8023b9a:	e704      	b.n	80239a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08023b9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023b9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023ba0:	b09d      	sub	sp, #116	; 0x74
 8023ba2:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8023ba6:	9219      	str	r2, [sp, #100]	; 0x64
 8023ba8:	9307      	str	r3, [sp, #28]
 8023baa:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8023bac:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8023bb0:	931a      	str	r3, [sp, #104]	; 0x68
 8023bb2:	9117      	str	r1, [sp, #92]	; 0x5c
 8023bb4:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8023bb8:	901b      	str	r0, [sp, #108]	; 0x6c
 8023bba:	6850      	ldr	r0, [r2, #4]
 8023bbc:	6812      	ldr	r2, [r2, #0]
 8023bbe:	fb00 1303 	mla	r3, r0, r3, r1
 8023bc2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023bc6:	930a      	str	r3, [sp, #40]	; 0x28
 8023bc8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023bca:	681b      	ldr	r3, [r3, #0]
 8023bcc:	9310      	str	r3, [sp, #64]	; 0x40
 8023bce:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8023bd2:	930b      	str	r3, [sp, #44]	; 0x2c
 8023bd4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023bd6:	2b00      	cmp	r3, #0
 8023bd8:	dc03      	bgt.n	8023be2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8023bda:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8023bdc:	2b00      	cmp	r3, #0
 8023bde:	f340 8375 	ble.w	80242cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8023be2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023be4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023be8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023bec:	1e48      	subs	r0, r1, #1
 8023bee:	1e57      	subs	r7, r2, #1
 8023bf0:	9b07      	ldr	r3, [sp, #28]
 8023bf2:	2b00      	cmp	r3, #0
 8023bf4:	f340 818e 	ble.w	8023f14 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8023bf8:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8023bfc:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023c00:	d406      	bmi.n	8023c10 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8023c02:	4584      	cmp	ip, r0
 8023c04:	da04      	bge.n	8023c10 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8023c06:	2b00      	cmp	r3, #0
 8023c08:	db02      	blt.n	8023c10 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8023c0a:	42bb      	cmp	r3, r7
 8023c0c:	f2c0 8183 	blt.w	8023f16 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8023c10:	f11c 0c01 	adds.w	ip, ip, #1
 8023c14:	f100 8173 	bmi.w	8023efe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023c18:	4561      	cmp	r1, ip
 8023c1a:	f2c0 8170 	blt.w	8023efe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023c1e:	3301      	adds	r3, #1
 8023c20:	f100 816d 	bmi.w	8023efe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023c24:	429a      	cmp	r2, r3
 8023c26:	f2c0 816a 	blt.w	8023efe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023c2a:	9b07      	ldr	r3, [sp, #28]
 8023c2c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8023c2e:	9318      	str	r3, [sp, #96]	; 0x60
 8023c30:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023c32:	2b00      	cmp	r3, #0
 8023c34:	f340 818c 	ble.w	8023f50 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8023c38:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8023c3a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023c3c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8023c40:	689b      	ldr	r3, [r3, #8]
 8023c42:	1422      	asrs	r2, r4, #16
 8023c44:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8023c48:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8023c4c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8023c50:	f100 81cd 	bmi.w	8023fee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8023c54:	f103 38ff 	add.w	r8, r3, #4294967295
 8023c58:	4542      	cmp	r2, r8
 8023c5a:	f280 81c8 	bge.w	8023fee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8023c5e:	f1bc 0f00 	cmp.w	ip, #0
 8023c62:	f2c0 81c4 	blt.w	8023fee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8023c66:	f10e 38ff 	add.w	r8, lr, #4294967295
 8023c6a:	45c4      	cmp	ip, r8
 8023c6c:	f280 81bf 	bge.w	8023fee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8023c70:	b21b      	sxth	r3, r3
 8023c72:	fb0c 2203 	mla	r2, ip, r3, r2
 8023c76:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023c78:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8023c7c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8023c80:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8023c84:	2800      	cmp	r0, #0
 8023c86:	f000 81a9 	beq.w	8023fdc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8023c8a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8023c8e:	950c      	str	r5, [sp, #48]	; 0x30
 8023c90:	0e2d      	lsrs	r5, r5, #24
 8023c92:	9513      	str	r5, [sp, #76]	; 0x4c
 8023c94:	b181      	cbz	r1, 8023cb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8023c96:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8023c9a:	3b01      	subs	r3, #1
 8023c9c:	009b      	lsls	r3, r3, #2
 8023c9e:	3304      	adds	r3, #4
 8023ca0:	eb08 0c03 	add.w	ip, r8, r3
 8023ca4:	f858 3003 	ldr.w	r3, [r8, r3]
 8023ca8:	9308      	str	r3, [sp, #32]
 8023caa:	0e1b      	lsrs	r3, r3, #24
 8023cac:	9311      	str	r3, [sp, #68]	; 0x44
 8023cae:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8023cb2:	930d      	str	r3, [sp, #52]	; 0x34
 8023cb4:	0e1b      	lsrs	r3, r3, #24
 8023cb6:	9314      	str	r3, [sp, #80]	; 0x50
 8023cb8:	b280      	uxth	r0, r0
 8023cba:	b289      	uxth	r1, r1
 8023cbc:	fb00 f901 	mul.w	r9, r0, r1
 8023cc0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8023cc4:	0100      	lsls	r0, r0, #4
 8023cc6:	eba0 0809 	sub.w	r8, r0, r9
 8023cca:	b289      	uxth	r1, r1
 8023ccc:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8023cd0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8023cd2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023cd4:	fa1f f888 	uxth.w	r8, r8
 8023cd8:	1a5b      	subs	r3, r3, r1
 8023cda:	b29b      	uxth	r3, r3
 8023cdc:	fb08 f000 	mul.w	r0, r8, r0
 8023ce0:	fb03 000e 	mla	r0, r3, lr, r0
 8023ce4:	fb01 0005 	mla	r0, r1, r5, r0
 8023ce8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023cea:	fb09 0005 	mla	r0, r9, r5, r0
 8023cee:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8023cf2:	2800      	cmp	r0, #0
 8023cf4:	f000 80fa 	beq.w	8023eec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023cf8:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8023cfc:	d01b      	beq.n	8023d36 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8023cfe:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8023d02:	fb0e fa0a 	mul.w	sl, lr, sl
 8023d06:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023d0a:	fb0e fe02 	mul.w	lr, lr, r2
 8023d0e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8023d12:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023d16:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023d1a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8023d1e:	4452      	add	r2, sl
 8023d20:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8023d24:	0a12      	lsrs	r2, r2, #8
 8023d26:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023d2a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023d2e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8023d32:	ea42 020c 	orr.w	r2, r2, ip
 8023d36:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023d38:	2dff      	cmp	r5, #255	; 0xff
 8023d3a:	d021      	beq.n	8023d80 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8023d3c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023d3e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023d42:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023d44:	fb05 fb0b 	mul.w	fp, r5, fp
 8023d48:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023d4a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023d4e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023d50:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023d54:	fb05 fa0a 	mul.w	sl, r5, sl
 8023d58:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023d5c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023d60:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023d64:	44de      	add	lr, fp
 8023d66:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023d6a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023d6e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023d72:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023d76:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023d7a:	ea4e 050a 	orr.w	r5, lr, sl
 8023d7e:	950c      	str	r5, [sp, #48]	; 0x30
 8023d80:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023d82:	2dff      	cmp	r5, #255	; 0xff
 8023d84:	d021      	beq.n	8023dca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8023d86:	9d08      	ldr	r5, [sp, #32]
 8023d88:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023d8c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023d8e:	fb05 fb0b 	mul.w	fp, r5, fp
 8023d92:	9d08      	ldr	r5, [sp, #32]
 8023d94:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023d98:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023d9a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023d9e:	fb05 fa0a 	mul.w	sl, r5, sl
 8023da2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023da6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023daa:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023dae:	44de      	add	lr, fp
 8023db0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023db4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023db8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023dbc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023dc0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023dc4:	ea4e 050a 	orr.w	r5, lr, sl
 8023dc8:	9508      	str	r5, [sp, #32]
 8023dca:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023dcc:	2dff      	cmp	r5, #255	; 0xff
 8023dce:	d021      	beq.n	8023e14 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8023dd0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023dd2:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023dd6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023dd8:	fb05 fb0b 	mul.w	fp, r5, fp
 8023ddc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023dde:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023de2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023de4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023de8:	fb05 fa0a 	mul.w	sl, r5, sl
 8023dec:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023df0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023df4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023df8:	44de      	add	lr, fp
 8023dfa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023dfe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023e02:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023e06:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023e0a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023e0e:	ea4e 050a 	orr.w	r5, lr, sl
 8023e12:	950d      	str	r5, [sp, #52]	; 0x34
 8023e14:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023e16:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023e1a:	9d08      	ldr	r5, [sp, #32]
 8023e1c:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8023e20:	fb08 fc0c 	mul.w	ip, r8, ip
 8023e24:	fb03 cc0e 	mla	ip, r3, lr, ip
 8023e28:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8023e2c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023e2e:	fb01 cc0e 	mla	ip, r1, lr, ip
 8023e32:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8023e36:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023e38:	fb09 cc0e 	mla	ip, r9, lr, ip
 8023e3c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8023e40:	fb08 f80e 	mul.w	r8, r8, lr
 8023e44:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023e48:	fb03 8202 	mla	r2, r3, r2, r8
 8023e4c:	9b08      	ldr	r3, [sp, #32]
 8023e4e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023e50:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8023e54:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8023e56:	fb01 220a 	mla	r2, r1, sl, r2
 8023e5a:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 8023e5e:	fb09 2901 	mla	r9, r9, r1, r2
 8023e62:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8023e64:	883b      	ldrh	r3, [r7, #0]
 8023e66:	4342      	muls	r2, r0
 8023e68:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023e6c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023e70:	1c50      	adds	r0, r2, #1
 8023e72:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023e76:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8023e7a:	ea4c 0c09 	orr.w	ip, ip, r9
 8023e7e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8023e82:	1219      	asrs	r1, r3, #8
 8023e84:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8023e88:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8023e8c:	b2c0      	uxtb	r0, r0
 8023e8e:	fb12 f205 	smulbb	r2, r2, r5
 8023e92:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023e96:	fb01 2100 	mla	r1, r1, r0, r2
 8023e9a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8023e9e:	10da      	asrs	r2, r3, #3
 8023ea0:	fa5f fc8c 	uxtb.w	ip, ip
 8023ea4:	00db      	lsls	r3, r3, #3
 8023ea6:	fb1c fc05 	smulbb	ip, ip, r5
 8023eaa:	b2db      	uxtb	r3, r3
 8023eac:	b289      	uxth	r1, r1
 8023eae:	fb03 c300 	mla	r3, r3, r0, ip
 8023eb2:	fa1f fc83 	uxth.w	ip, r3
 8023eb6:	1c4b      	adds	r3, r1, #1
 8023eb8:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8023ebc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8023ec0:	fb1e fe05 	smulbb	lr, lr, r5
 8023ec4:	f10c 0301 	add.w	r3, ip, #1
 8023ec8:	fb02 e200 	mla	r2, r2, r0, lr
 8023ecc:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8023ed0:	b292      	uxth	r2, r2
 8023ed2:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8023ed6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023eda:	430b      	orrs	r3, r1
 8023edc:	1c51      	adds	r1, r2, #1
 8023ede:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8023ee2:	0952      	lsrs	r2, r2, #5
 8023ee4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023ee8:	4313      	orrs	r3, r2
 8023eea:	803b      	strh	r3, [r7, #0]
 8023eec:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023eee:	441c      	add	r4, r3
 8023ef0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8023ef2:	441e      	add	r6, r3
 8023ef4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023ef6:	3b01      	subs	r3, #1
 8023ef8:	3702      	adds	r7, #2
 8023efa:	9318      	str	r3, [sp, #96]	; 0x60
 8023efc:	e698      	b.n	8023c30 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8023efe:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023f00:	441c      	add	r4, r3
 8023f02:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8023f04:	441e      	add	r6, r3
 8023f06:	9b07      	ldr	r3, [sp, #28]
 8023f08:	3b01      	subs	r3, #1
 8023f0a:	9307      	str	r3, [sp, #28]
 8023f0c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023f0e:	3302      	adds	r3, #2
 8023f10:	930a      	str	r3, [sp, #40]	; 0x28
 8023f12:	e66d      	b.n	8023bf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8023f14:	d023      	beq.n	8023f5e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8023f16:	9b07      	ldr	r3, [sp, #28]
 8023f18:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8023f1a:	3b01      	subs	r3, #1
 8023f1c:	fb00 4003 	mla	r0, r0, r3, r4
 8023f20:	1400      	asrs	r0, r0, #16
 8023f22:	f53f ae82 	bmi.w	8023c2a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023f26:	3901      	subs	r1, #1
 8023f28:	4288      	cmp	r0, r1
 8023f2a:	f6bf ae7e 	bge.w	8023c2a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023f2e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8023f30:	fb01 6303 	mla	r3, r1, r3, r6
 8023f34:	141b      	asrs	r3, r3, #16
 8023f36:	f53f ae78 	bmi.w	8023c2a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023f3a:	3a01      	subs	r2, #1
 8023f3c:	4293      	cmp	r3, r2
 8023f3e:	f6bf ae74 	bge.w	8023c2a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023f42:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8023f46:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8023f4a:	f1bb 0f00 	cmp.w	fp, #0
 8023f4e:	dc6c      	bgt.n	802402a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8023f50:	9b07      	ldr	r3, [sp, #28]
 8023f52:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8023f56:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023f58:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8023f5c:	930a      	str	r3, [sp, #40]	; 0x28
 8023f5e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023f60:	2b00      	cmp	r3, #0
 8023f62:	f340 81b3 	ble.w	80242cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8023f66:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023f6a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023f6e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023f72:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023f74:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023f78:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023f7c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023f80:	eef0 6a62 	vmov.f32	s13, s5
 8023f84:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023f88:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023f8c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023f90:	ee16 4a90 	vmov	r4, s13
 8023f94:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023f98:	eef0 6a43 	vmov.f32	s13, s6
 8023f9c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023fa0:	ee12 2a90 	vmov	r2, s5
 8023fa4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023fa8:	fb92 f3f3 	sdiv	r3, r2, r3
 8023fac:	ee13 2a10 	vmov	r2, s6
 8023fb0:	9329      	str	r3, [sp, #164]	; 0xa4
 8023fb2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023fb4:	fb92 f3f3 	sdiv	r3, r2, r3
 8023fb8:	932a      	str	r3, [sp, #168]	; 0xa8
 8023fba:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023fbc:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8023fbe:	3b01      	subs	r3, #1
 8023fc0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023fc4:	9317      	str	r3, [sp, #92]	; 0x5c
 8023fc6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023fc8:	bf08      	it	eq
 8023fca:	4613      	moveq	r3, r2
 8023fcc:	ee16 6a90 	vmov	r6, s13
 8023fd0:	9307      	str	r3, [sp, #28]
 8023fd2:	eeb0 3a67 	vmov.f32	s6, s15
 8023fd6:	eef0 2a47 	vmov.f32	s5, s14
 8023fda:	e5fb      	b.n	8023bd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8023fdc:	2900      	cmp	r1, #0
 8023fde:	f43f ae6b 	beq.w	8023cb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8023fe2:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8023fe6:	9308      	str	r3, [sp, #32]
 8023fe8:	0e1b      	lsrs	r3, r3, #24
 8023fea:	9311      	str	r3, [sp, #68]	; 0x44
 8023fec:	e664      	b.n	8023cb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8023fee:	f112 0801 	adds.w	r8, r2, #1
 8023ff2:	f53f af7b 	bmi.w	8023eec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023ff6:	4543      	cmp	r3, r8
 8023ff8:	f6ff af78 	blt.w	8023eec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023ffc:	f11c 0801 	adds.w	r8, ip, #1
 8024000:	f53f af74 	bmi.w	8023eec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024004:	45c6      	cmp	lr, r8
 8024006:	f6ff af71 	blt.w	8023eec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802400a:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 802400c:	9201      	str	r2, [sp, #4]
 802400e:	fa0f f28e 	sxth.w	r2, lr
 8024012:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8024016:	e9cd c002 	strd	ip, r0, [sp, #8]
 802401a:	9200      	str	r2, [sp, #0]
 802401c:	b21b      	sxth	r3, r3
 802401e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8024020:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8024022:	4639      	mov	r1, r7
 8024024:	f7ff fc79 	bl	802391a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8024028:	e760      	b.n	8023eec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802402a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 802402c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802402e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024032:	1427      	asrs	r7, r4, #16
 8024034:	1433      	asrs	r3, r6, #16
 8024036:	fb01 7303 	mla	r3, r1, r3, r7
 802403a:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 802403e:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8024042:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024046:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802404a:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802404e:	2a00      	cmp	r2, #0
 8024050:	f000 8133 	beq.w	80242ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8024054:	687d      	ldr	r5, [r7, #4]
 8024056:	950e      	str	r5, [sp, #56]	; 0x38
 8024058:	0e2d      	lsrs	r5, r5, #24
 802405a:	9515      	str	r5, [sp, #84]	; 0x54
 802405c:	b178      	cbz	r0, 802407e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802405e:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8024062:	3901      	subs	r1, #1
 8024064:	0089      	lsls	r1, r1, #2
 8024066:	3104      	adds	r1, #4
 8024068:	eb07 0e01 	add.w	lr, r7, r1
 802406c:	5879      	ldr	r1, [r7, r1]
 802406e:	9109      	str	r1, [sp, #36]	; 0x24
 8024070:	0e09      	lsrs	r1, r1, #24
 8024072:	9112      	str	r1, [sp, #72]	; 0x48
 8024074:	f8de 1004 	ldr.w	r1, [lr, #4]
 8024078:	910f      	str	r1, [sp, #60]	; 0x3c
 802407a:	0e09      	lsrs	r1, r1, #24
 802407c:	9116      	str	r1, [sp, #88]	; 0x58
 802407e:	b292      	uxth	r2, r2
 8024080:	b280      	uxth	r0, r0
 8024082:	fb02 f800 	mul.w	r8, r2, r0
 8024086:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 802408a:	0112      	lsls	r2, r2, #4
 802408c:	eba2 0e08 	sub.w	lr, r2, r8
 8024090:	b280      	uxth	r0, r0
 8024092:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8024096:	9915      	ldr	r1, [sp, #84]	; 0x54
 8024098:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802409a:	fa1f fe8e 	uxth.w	lr, lr
 802409e:	1a12      	subs	r2, r2, r0
 80240a0:	b292      	uxth	r2, r2
 80240a2:	fb0e f101 	mul.w	r1, lr, r1
 80240a6:	fb02 110c 	mla	r1, r2, ip, r1
 80240aa:	fb00 1105 	mla	r1, r0, r5, r1
 80240ae:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80240b0:	fb08 1105 	mla	r1, r8, r5, r1
 80240b4:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80240b8:	2900      	cmp	r1, #0
 80240ba:	f000 80f5 	beq.w	80242a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 80240be:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80240c2:	d019      	beq.n	80240f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 80240c4:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80240c8:	fb0c fa0a 	mul.w	sl, ip, sl
 80240cc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80240d0:	fb0c fc03 	mul.w	ip, ip, r3
 80240d4:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80240d8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80240dc:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80240e0:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80240e4:	4453      	add	r3, sl
 80240e6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80240ea:	0a1b      	lsrs	r3, r3, #8
 80240ec:	0a3f      	lsrs	r7, r7, #8
 80240ee:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80240f2:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80240f6:	433b      	orrs	r3, r7
 80240f8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80240fa:	2dff      	cmp	r5, #255	; 0xff
 80240fc:	d020      	beq.n	8024140 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 80240fe:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024100:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024104:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024106:	436f      	muls	r7, r5
 8024108:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802410a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802410e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024110:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024114:	fb05 fa0a 	mul.w	sl, r5, sl
 8024118:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802411c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024120:	44bc      	add	ip, r7
 8024122:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024126:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802412a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802412e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024132:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024136:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802413a:	ea4c 050a 	orr.w	r5, ip, sl
 802413e:	950e      	str	r5, [sp, #56]	; 0x38
 8024140:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024142:	2dff      	cmp	r5, #255	; 0xff
 8024144:	d020      	beq.n	8024188 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8024146:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024148:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802414c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802414e:	436f      	muls	r7, r5
 8024150:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024152:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024156:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024158:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802415c:	fb05 fa0a 	mul.w	sl, r5, sl
 8024160:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024164:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024168:	44bc      	add	ip, r7
 802416a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802416e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024172:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024176:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802417a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802417e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024182:	ea4c 050a 	orr.w	r5, ip, sl
 8024186:	9509      	str	r5, [sp, #36]	; 0x24
 8024188:	9d16      	ldr	r5, [sp, #88]	; 0x58
 802418a:	2dff      	cmp	r5, #255	; 0xff
 802418c:	d020      	beq.n	80241d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 802418e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024190:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024194:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024196:	436f      	muls	r7, r5
 8024198:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802419a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802419e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80241a0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80241a4:	fb05 fa0a 	mul.w	sl, r5, sl
 80241a8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80241ac:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80241b0:	44bc      	add	ip, r7
 80241b2:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80241b6:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80241ba:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80241be:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80241c2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80241c6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80241ca:	ea4c 050a 	orr.w	r5, ip, sl
 80241ce:	950f      	str	r5, [sp, #60]	; 0x3c
 80241d0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80241d2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80241d6:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80241d8:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80241dc:	fb0e f707 	mul.w	r7, lr, r7
 80241e0:	fb02 770c 	mla	r7, r2, ip, r7
 80241e4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80241e8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80241ea:	fb00 770c 	mla	r7, r0, ip, r7
 80241ee:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80241f2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80241f4:	fb08 770c 	mla	r7, r8, ip, r7
 80241f8:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80241fc:	fb0e fe0c 	mul.w	lr, lr, ip
 8024200:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024204:	fb02 e303 	mla	r3, r2, r3, lr
 8024208:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802420a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802420c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8024210:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024212:	fb00 330a 	mla	r3, r0, sl, r3
 8024216:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 802421a:	fb08 3c0c 	mla	ip, r8, ip, r3
 802421e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8024220:	f8b9 0000 	ldrh.w	r0, [r9]
 8024224:	4359      	muls	r1, r3
 8024226:	0a3f      	lsrs	r7, r7, #8
 8024228:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802422c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024230:	1c4b      	adds	r3, r1, #1
 8024232:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8024236:	ea47 070c 	orr.w	r7, r7, ip
 802423a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802423e:	1202      	asrs	r2, r0, #8
 8024240:	0c3b      	lsrs	r3, r7, #16
 8024242:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8024246:	b2c9      	uxtb	r1, r1
 8024248:	fb13 f305 	smulbb	r3, r3, r5
 802424c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8024250:	fb02 3201 	mla	r2, r2, r1, r3
 8024254:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8024258:	10c3      	asrs	r3, r0, #3
 802425a:	b2ff      	uxtb	r7, r7
 802425c:	00c0      	lsls	r0, r0, #3
 802425e:	b2c0      	uxtb	r0, r0
 8024260:	fb17 f705 	smulbb	r7, r7, r5
 8024264:	fb00 7001 	mla	r0, r0, r1, r7
 8024268:	b292      	uxth	r2, r2
 802426a:	fb1c fc05 	smulbb	ip, ip, r5
 802426e:	b280      	uxth	r0, r0
 8024270:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8024274:	fb03 c301 	mla	r3, r3, r1, ip
 8024278:	1c51      	adds	r1, r2, #1
 802427a:	f100 0c01 	add.w	ip, r0, #1
 802427e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8024282:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8024286:	b29b      	uxth	r3, r3
 8024288:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 802428c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8024290:	ea4c 0202 	orr.w	r2, ip, r2
 8024294:	f103 0c01 	add.w	ip, r3, #1
 8024298:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 802429c:	095b      	lsrs	r3, r3, #5
 802429e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80242a2:	431a      	orrs	r2, r3
 80242a4:	f8a9 2000 	strh.w	r2, [r9]
 80242a8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80242aa:	441c      	add	r4, r3
 80242ac:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80242ae:	f109 0902 	add.w	r9, r9, #2
 80242b2:	441e      	add	r6, r3
 80242b4:	f10b 3bff 	add.w	fp, fp, #4294967295
 80242b8:	e647      	b.n	8023f4a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 80242ba:	2800      	cmp	r0, #0
 80242bc:	f43f aedf 	beq.w	802407e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80242c0:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 80242c4:	9109      	str	r1, [sp, #36]	; 0x24
 80242c6:	0e09      	lsrs	r1, r1, #24
 80242c8:	9112      	str	r1, [sp, #72]	; 0x48
 80242ca:	e6d8      	b.n	802407e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80242cc:	b01d      	add	sp, #116	; 0x74
 80242ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080242d2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 80242d2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80242d6:	b085      	sub	sp, #20
 80242d8:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 80242dc:	9102      	str	r1, [sp, #8]
 80242de:	2c00      	cmp	r4, #0
 80242e0:	fb04 7103 	mla	r1, r4, r3, r7
 80242e4:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 80242e8:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 80242ec:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80242f0:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 80242f4:	f2c0 810c 	blt.w	8024510 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 80242f8:	45a6      	cmp	lr, r4
 80242fa:	f340 8109 	ble.w	8024510 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 80242fe:	2f00      	cmp	r7, #0
 8024300:	f2c0 8104 	blt.w	802450c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8024304:	42bb      	cmp	r3, r7
 8024306:	f340 8101 	ble.w	802450c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 802430a:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 802430e:	1c7a      	adds	r2, r7, #1
 8024310:	f100 8101 	bmi.w	8024516 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8024314:	4293      	cmp	r3, r2
 8024316:	f340 80fe 	ble.w	8024516 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 802431a:	2e00      	cmp	r6, #0
 802431c:	f000 80fd 	beq.w	802451a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8024320:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8024324:	3401      	adds	r4, #1
 8024326:	f100 80fc 	bmi.w	8024522 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 802432a:	45a6      	cmp	lr, r4
 802432c:	f340 80f9 	ble.w	8024522 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8024330:	2800      	cmp	r0, #0
 8024332:	f000 80f9 	beq.w	8024528 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8024336:	2f00      	cmp	r7, #0
 8024338:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 802433c:	f2c0 80ef 	blt.w	802451e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8024340:	42bb      	cmp	r3, r7
 8024342:	f340 80ec 	ble.w	802451e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8024346:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 802434a:	3701      	adds	r7, #1
 802434c:	f100 80ef 	bmi.w	802452e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8024350:	42bb      	cmp	r3, r7
 8024352:	f340 80ec 	ble.w	802452e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8024356:	2e00      	cmp	r6, #0
 8024358:	f000 80eb 	beq.w	8024532 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 802435c:	6852      	ldr	r2, [r2, #4]
 802435e:	b2b6      	uxth	r6, r6
 8024360:	b280      	uxth	r0, r0
 8024362:	fb00 fe06 	mul.w	lr, r0, r6
 8024366:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 802436a:	0136      	lsls	r6, r6, #4
 802436c:	eba6 070e 	sub.w	r7, r6, lr
 8024370:	b280      	uxth	r0, r0
 8024372:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8024376:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 802437a:	b2bf      	uxth	r7, r7
 802437c:	1a1b      	subs	r3, r3, r0
 802437e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8024382:	b29b      	uxth	r3, r3
 8024384:	fb07 f60a 	mul.w	r6, r7, sl
 8024388:	ea4f 6914 	mov.w	r9, r4, lsr #24
 802438c:	fb0b 6603 	mla	r6, fp, r3, r6
 8024390:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8024394:	fb00 6609 	mla	r6, r0, r9, r6
 8024398:	fb0e 6608 	mla	r6, lr, r8, r6
 802439c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80243a0:	9600      	str	r6, [sp, #0]
 80243a2:	2e00      	cmp	r6, #0
 80243a4:	f000 80af 	beq.w	8024506 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 80243a8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80243ac:	fb0b fc0c 	mul.w	ip, fp, ip
 80243b0:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80243b4:	fb0b f505 	mul.w	r5, fp, r5
 80243b8:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80243bc:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 80243c0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80243c4:	44dc      	add	ip, fp
 80243c6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80243ca:	9501      	str	r5, [sp, #4]
 80243cc:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 80243d0:	9503      	str	r5, [sp, #12]
 80243d2:	9d01      	ldr	r5, [sp, #4]
 80243d4:	9e02      	ldr	r6, [sp, #8]
 80243d6:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 80243da:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80243de:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80243e2:	fb0a fc0c 	mul.w	ip, sl, ip
 80243e6:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80243ea:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80243ee:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80243f2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80243f6:	4465      	add	r5, ip
 80243f8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80243fc:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8024400:	fb09 fc0c 	mul.w	ip, r9, ip
 8024404:	fb09 f904 	mul.w	r9, r9, r4
 8024408:	f509 7480 	add.w	r4, r9, #256	; 0x100
 802440c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8024410:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8024414:	fb08 f404 	mul.w	r4, r8, r4
 8024418:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802441c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024420:	fb08 f802 	mul.w	r8, r8, r2
 8024424:	fb0a fa01 	mul.w	sl, sl, r1
 8024428:	0a22      	lsrs	r2, r4, #8
 802442a:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 802442e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024432:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8024436:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 802443a:	4414      	add	r4, r2
 802443c:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8024440:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8024444:	0a2d      	lsrs	r5, r5, #8
 8024446:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 802444a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802444e:	9a03      	ldr	r2, [sp, #12]
 8024450:	8836      	ldrh	r6, [r6, #0]
 8024452:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8024456:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802445a:	437d      	muls	r5, r7
 802445c:	4461      	add	r1, ip
 802445e:	0a24      	lsrs	r4, r4, #8
 8024460:	fb02 5503 	mla	r5, r2, r3, r5
 8024464:	0a09      	lsrs	r1, r1, #8
 8024466:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 802446a:	fb04 540e 	mla	r4, r4, lr, r5
 802446e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8024472:	fb01 4100 	mla	r1, r1, r0, r4
 8024476:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802447a:	0a09      	lsrs	r1, r1, #8
 802447c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024480:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8024484:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8024488:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 802448c:	fb07 f70a 	mul.w	r7, r7, sl
 8024490:	fb03 7101 	mla	r1, r3, r1, r7
 8024494:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024498:	9b00      	ldr	r3, [sp, #0]
 802449a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 802449e:	fb0e 1e08 	mla	lr, lr, r8, r1
 80244a2:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 80244a6:	fb00 e101 	mla	r1, r0, r1, lr
 80244aa:	43da      	mvns	r2, r3
 80244ac:	1233      	asrs	r3, r6, #8
 80244ae:	b2d2      	uxtb	r2, r2
 80244b0:	10f0      	asrs	r0, r6, #3
 80244b2:	0a09      	lsrs	r1, r1, #8
 80244b4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80244b8:	00f6      	lsls	r6, r6, #3
 80244ba:	4353      	muls	r3, r2
 80244bc:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80244c0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80244c4:	b2f6      	uxtb	r6, r6
 80244c6:	4321      	orrs	r1, r4
 80244c8:	4350      	muls	r0, r2
 80244ca:	4356      	muls	r6, r2
 80244cc:	1c5a      	adds	r2, r3, #1
 80244ce:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80244d2:	0c0b      	lsrs	r3, r1, #16
 80244d4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80244d8:	1c42      	adds	r2, r0, #1
 80244da:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80244de:	0a0a      	lsrs	r2, r1, #8
 80244e0:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80244e4:	021b      	lsls	r3, r3, #8
 80244e6:	00d2      	lsls	r2, r2, #3
 80244e8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80244ec:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80244f0:	4313      	orrs	r3, r2
 80244f2:	1c72      	adds	r2, r6, #1
 80244f4:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80244f8:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 80244fc:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8024500:	4319      	orrs	r1, r3
 8024502:	9b02      	ldr	r3, [sp, #8]
 8024504:	8019      	strh	r1, [r3, #0]
 8024506:	b005      	add	sp, #20
 8024508:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802450c:	2500      	movs	r5, #0
 802450e:	e6fe      	b.n	802430e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8024510:	2100      	movs	r1, #0
 8024512:	460d      	mov	r5, r1
 8024514:	e706      	b.n	8024324 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8024516:	2100      	movs	r1, #0
 8024518:	e704      	b.n	8024324 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 802451a:	4631      	mov	r1, r6
 802451c:	e702      	b.n	8024324 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 802451e:	2400      	movs	r4, #0
 8024520:	e713      	b.n	802434a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8024522:	2200      	movs	r2, #0
 8024524:	4614      	mov	r4, r2
 8024526:	e71a      	b.n	802435e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8024528:	4602      	mov	r2, r0
 802452a:	4604      	mov	r4, r0
 802452c:	e717      	b.n	802435e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 802452e:	2200      	movs	r2, #0
 8024530:	e715      	b.n	802435e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8024532:	4632      	mov	r2, r6
 8024534:	e713      	b.n	802435e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08024538 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024538:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802453c:	b09b      	sub	sp, #108	; 0x6c
 802453e:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8024542:	9218      	str	r2, [sp, #96]	; 0x60
 8024544:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8024546:	9116      	str	r1, [sp, #88]	; 0x58
 8024548:	9307      	str	r3, [sp, #28]
 802454a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 802454e:	9019      	str	r0, [sp, #100]	; 0x64
 8024550:	6850      	ldr	r0, [r2, #4]
 8024552:	6812      	ldr	r2, [r2, #0]
 8024554:	fb00 1303 	mla	r3, r0, r3, r1
 8024558:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802455c:	930a      	str	r3, [sp, #40]	; 0x28
 802455e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024560:	681b      	ldr	r3, [r3, #0]
 8024562:	930f      	str	r3, [sp, #60]	; 0x3c
 8024564:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024566:	2b00      	cmp	r3, #0
 8024568:	dc03      	bgt.n	8024572 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802456a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802456c:	2b00      	cmp	r3, #0
 802456e:	f340 8386 	ble.w	8024c7e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8024572:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024574:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024578:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802457c:	1e48      	subs	r0, r1, #1
 802457e:	1e57      	subs	r7, r2, #1
 8024580:	9b07      	ldr	r3, [sp, #28]
 8024582:	2b00      	cmp	r3, #0
 8024584:	f340 8166 	ble.w	8024854 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8024588:	ea5f 4c24 	movs.w	ip, r4, asr #16
 802458c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024590:	d406      	bmi.n	80245a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8024592:	4584      	cmp	ip, r0
 8024594:	da04      	bge.n	80245a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8024596:	2b00      	cmp	r3, #0
 8024598:	db02      	blt.n	80245a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802459a:	42bb      	cmp	r3, r7
 802459c:	f2c0 815b 	blt.w	8024856 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 80245a0:	f11c 0c01 	adds.w	ip, ip, #1
 80245a4:	f100 814b 	bmi.w	802483e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80245a8:	4561      	cmp	r1, ip
 80245aa:	f2c0 8148 	blt.w	802483e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80245ae:	3301      	adds	r3, #1
 80245b0:	f100 8145 	bmi.w	802483e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80245b4:	429a      	cmp	r2, r3
 80245b6:	f2c0 8142 	blt.w	802483e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80245ba:	9b07      	ldr	r3, [sp, #28]
 80245bc:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80245be:	9317      	str	r3, [sp, #92]	; 0x5c
 80245c0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80245c2:	2b00      	cmp	r3, #0
 80245c4:	f340 8165 	ble.w	8024892 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80245c8:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80245ca:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80245cc:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80245d0:	689b      	ldr	r3, [r3, #8]
 80245d2:	1422      	asrs	r2, r4, #16
 80245d4:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80245d8:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80245dc:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80245e0:	f100 81d5 	bmi.w	802498e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80245e4:	f103 38ff 	add.w	r8, r3, #4294967295
 80245e8:	4542      	cmp	r2, r8
 80245ea:	f280 81d0 	bge.w	802498e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80245ee:	f1bc 0f00 	cmp.w	ip, #0
 80245f2:	f2c0 81cc 	blt.w	802498e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80245f6:	f10e 38ff 	add.w	r8, lr, #4294967295
 80245fa:	45c4      	cmp	ip, r8
 80245fc:	f280 81c7 	bge.w	802498e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024600:	b21b      	sxth	r3, r3
 8024602:	fb0c 2203 	mla	r2, ip, r3, r2
 8024606:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024608:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 802460c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8024610:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8024614:	2900      	cmp	r1, #0
 8024616:	f000 8182 	beq.w	802491e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 802461a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802461e:	950b      	str	r5, [sp, #44]	; 0x2c
 8024620:	0e2d      	lsrs	r5, r5, #24
 8024622:	9512      	str	r5, [sp, #72]	; 0x48
 8024624:	b180      	cbz	r0, 8024648 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8024626:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 802462a:	3b01      	subs	r3, #1
 802462c:	009b      	lsls	r3, r3, #2
 802462e:	3304      	adds	r3, #4
 8024630:	eb08 0c03 	add.w	ip, r8, r3
 8024634:	f858 3003 	ldr.w	r3, [r8, r3]
 8024638:	9308      	str	r3, [sp, #32]
 802463a:	0e1b      	lsrs	r3, r3, #24
 802463c:	9310      	str	r3, [sp, #64]	; 0x40
 802463e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8024642:	930c      	str	r3, [sp, #48]	; 0x30
 8024644:	0e1b      	lsrs	r3, r3, #24
 8024646:	9313      	str	r3, [sp, #76]	; 0x4c
 8024648:	b289      	uxth	r1, r1
 802464a:	b280      	uxth	r0, r0
 802464c:	fb01 f900 	mul.w	r9, r1, r0
 8024650:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8024654:	0109      	lsls	r1, r1, #4
 8024656:	eba1 0809 	sub.w	r8, r1, r9
 802465a:	b280      	uxth	r0, r0
 802465c:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8024660:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8024662:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024664:	fa1f f888 	uxth.w	r8, r8
 8024668:	1a09      	subs	r1, r1, r0
 802466a:	b289      	uxth	r1, r1
 802466c:	fb08 f303 	mul.w	r3, r8, r3
 8024670:	fb01 330e 	mla	r3, r1, lr, r3
 8024674:	fb00 3305 	mla	r3, r0, r5, r3
 8024678:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802467a:	fb09 3305 	mla	r3, r9, r5, r3
 802467e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024682:	2b00      	cmp	r3, #0
 8024684:	f000 80d2 	beq.w	802482c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024688:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 802468c:	d01b      	beq.n	80246c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 802468e:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8024692:	fb0e fa0a 	mul.w	sl, lr, sl
 8024696:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802469a:	fb0e fe02 	mul.w	lr, lr, r2
 802469e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80246a2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80246a6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80246aa:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80246ae:	4452      	add	r2, sl
 80246b0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80246b4:	0a12      	lsrs	r2, r2, #8
 80246b6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80246ba:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80246be:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80246c2:	ea42 020c 	orr.w	r2, r2, ip
 80246c6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80246c8:	2dff      	cmp	r5, #255	; 0xff
 80246ca:	d021      	beq.n	8024710 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 80246cc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80246ce:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80246d2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80246d4:	fb05 fb0b 	mul.w	fp, r5, fp
 80246d8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80246da:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80246de:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80246e0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80246e4:	fb05 fa0a 	mul.w	sl, r5, sl
 80246e8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80246ec:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80246f0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80246f4:	44de      	add	lr, fp
 80246f6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80246fa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80246fe:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024702:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024706:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802470a:	ea4e 050a 	orr.w	r5, lr, sl
 802470e:	950b      	str	r5, [sp, #44]	; 0x2c
 8024710:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024712:	2dff      	cmp	r5, #255	; 0xff
 8024714:	d021      	beq.n	802475a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8024716:	9d08      	ldr	r5, [sp, #32]
 8024718:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802471c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802471e:	fb05 fb0b 	mul.w	fp, r5, fp
 8024722:	9d08      	ldr	r5, [sp, #32]
 8024724:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8024728:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802472a:	fb05 fa0e 	mul.w	sl, r5, lr
 802472e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024732:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024736:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802473a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802473e:	44de      	add	lr, fp
 8024740:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024744:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024748:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802474c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024750:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024754:	ea4e 050a 	orr.w	r5, lr, sl
 8024758:	9508      	str	r5, [sp, #32]
 802475a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802475c:	2dff      	cmp	r5, #255	; 0xff
 802475e:	d021      	beq.n	80247a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8024760:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024762:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8024766:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024768:	fb05 fb0b 	mul.w	fp, r5, fp
 802476c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802476e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024772:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024774:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024778:	fb05 fa0a 	mul.w	sl, r5, sl
 802477c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024780:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024784:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024788:	44de      	add	lr, fp
 802478a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802478e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024792:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024796:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802479a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802479e:	ea4e 050a 	orr.w	r5, lr, sl
 80247a2:	950c      	str	r5, [sp, #48]	; 0x30
 80247a4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80247a6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80247aa:	9d08      	ldr	r5, [sp, #32]
 80247ac:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80247b0:	fb08 fc0c 	mul.w	ip, r8, ip
 80247b4:	fb01 cc0e 	mla	ip, r1, lr, ip
 80247b8:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80247bc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80247be:	fb00 cc0e 	mla	ip, r0, lr, ip
 80247c2:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80247c6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80247c8:	fb09 cc0e 	mla	ip, r9, lr, ip
 80247cc:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80247d0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80247d4:	fb08 f80e 	mul.w	r8, r8, lr
 80247d8:	fb01 8202 	mla	r2, r1, r2, r8
 80247dc:	9908      	ldr	r1, [sp, #32]
 80247de:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80247e2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80247e4:	fb00 220a 	mla	r2, r0, sl, r2
 80247e8:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 80247ec:	fb09 2900 	mla	r9, r9, r0, r2
 80247f0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80247f4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80247f8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80247fc:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8024800:	ea4c 0c09 	orr.w	ip, ip, r9
 8024804:	2bff      	cmp	r3, #255	; 0xff
 8024806:	ea4f 221c 	mov.w	r2, ip, lsr #8
 802480a:	f040 8091 	bne.w	8024930 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802480e:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8024812:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8024816:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802481a:	f022 0207 	bic.w	r2, r2, #7
 802481e:	431a      	orrs	r2, r3
 8024820:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8024824:	ea4c 0c02 	orr.w	ip, ip, r2
 8024828:	f8a7 c000 	strh.w	ip, [r7]
 802482c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802482e:	441c      	add	r4, r3
 8024830:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024832:	441e      	add	r6, r3
 8024834:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024836:	3b01      	subs	r3, #1
 8024838:	3702      	adds	r7, #2
 802483a:	9317      	str	r3, [sp, #92]	; 0x5c
 802483c:	e6c0      	b.n	80245c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802483e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024840:	441c      	add	r4, r3
 8024842:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024844:	441e      	add	r6, r3
 8024846:	9b07      	ldr	r3, [sp, #28]
 8024848:	3b01      	subs	r3, #1
 802484a:	9307      	str	r3, [sp, #28]
 802484c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802484e:	3302      	adds	r3, #2
 8024850:	930a      	str	r3, [sp, #40]	; 0x28
 8024852:	e695      	b.n	8024580 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8024854:	d024      	beq.n	80248a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8024856:	9b07      	ldr	r3, [sp, #28]
 8024858:	9827      	ldr	r0, [sp, #156]	; 0x9c
 802485a:	3b01      	subs	r3, #1
 802485c:	fb00 4003 	mla	r0, r0, r3, r4
 8024860:	1400      	asrs	r0, r0, #16
 8024862:	f53f aeaa 	bmi.w	80245ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8024866:	3901      	subs	r1, #1
 8024868:	4288      	cmp	r0, r1
 802486a:	f6bf aea6 	bge.w	80245ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802486e:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8024870:	fb01 6303 	mla	r3, r1, r3, r6
 8024874:	141b      	asrs	r3, r3, #16
 8024876:	f53f aea0 	bmi.w	80245ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802487a:	3a01      	subs	r2, #1
 802487c:	4293      	cmp	r3, r2
 802487e:	f6bf ae9c 	bge.w	80245ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8024882:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8024886:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 802488a:	f1bb 0f00 	cmp.w	fp, #0
 802488e:	f300 809a 	bgt.w	80249c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8024892:	9b07      	ldr	r3, [sp, #28]
 8024894:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024898:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802489a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802489e:	930a      	str	r3, [sp, #40]	; 0x28
 80248a0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80248a2:	2b00      	cmp	r3, #0
 80248a4:	f340 81eb 	ble.w	8024c7e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80248a8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80248ac:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80248b0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80248b4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80248b6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80248ba:	ee31 1a05 	vadd.f32	s2, s2, s10
 80248be:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80248c2:	eef0 6a62 	vmov.f32	s13, s5
 80248c6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80248ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80248ce:	ee77 2a62 	vsub.f32	s5, s14, s5
 80248d2:	ee16 4a90 	vmov	r4, s13
 80248d6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80248da:	eef0 6a43 	vmov.f32	s13, s6
 80248de:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80248e2:	ee12 2a90 	vmov	r2, s5
 80248e6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80248ea:	fb92 f3f3 	sdiv	r3, r2, r3
 80248ee:	ee13 2a10 	vmov	r2, s6
 80248f2:	9327      	str	r3, [sp, #156]	; 0x9c
 80248f4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80248f6:	fb92 f3f3 	sdiv	r3, r2, r3
 80248fa:	9328      	str	r3, [sp, #160]	; 0xa0
 80248fc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80248fe:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8024900:	3b01      	subs	r3, #1
 8024902:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024906:	9316      	str	r3, [sp, #88]	; 0x58
 8024908:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802490a:	bf08      	it	eq
 802490c:	4613      	moveq	r3, r2
 802490e:	ee16 6a90 	vmov	r6, s13
 8024912:	9307      	str	r3, [sp, #28]
 8024914:	eeb0 3a67 	vmov.f32	s6, s15
 8024918:	eef0 2a47 	vmov.f32	s5, s14
 802491c:	e622      	b.n	8024564 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 802491e:	2800      	cmp	r0, #0
 8024920:	f43f ae92 	beq.w	8024648 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8024924:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8024928:	9308      	str	r3, [sp, #32]
 802492a:	0e1b      	lsrs	r3, r3, #24
 802492c:	9310      	str	r3, [sp, #64]	; 0x40
 802492e:	e68b      	b.n	8024648 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8024930:	8839      	ldrh	r1, [r7, #0]
 8024932:	4dd4      	ldr	r5, [pc, #848]	; (8024c84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8024934:	43db      	mvns	r3, r3
 8024936:	ea4f 2e21 	mov.w	lr, r1, asr #8
 802493a:	fa5f f883 	uxtb.w	r8, r3
 802493e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8024942:	fb0e fe08 	mul.w	lr, lr, r8
 8024946:	10c8      	asrs	r0, r1, #3
 8024948:	00cb      	lsls	r3, r1, #3
 802494a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802494e:	f10e 0101 	add.w	r1, lr, #1
 8024952:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8024956:	fb00 f008 	mul.w	r0, r0, r8
 802495a:	ea4f 411c 	mov.w	r1, ip, lsr #16
 802495e:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8024962:	f100 0e01 	add.w	lr, r0, #1
 8024966:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 802496a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802496e:	b2db      	uxtb	r3, r3
 8024970:	b2c9      	uxtb	r1, r1
 8024972:	00d2      	lsls	r2, r2, #3
 8024974:	fb03 f308 	mul.w	r3, r3, r8
 8024978:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 802497c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024980:	430a      	orrs	r2, r1
 8024982:	1c59      	adds	r1, r3, #1
 8024984:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8024988:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 802498c:	e748      	b.n	8024820 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 802498e:	f112 0801 	adds.w	r8, r2, #1
 8024992:	f53f af4b 	bmi.w	802482c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024996:	4543      	cmp	r3, r8
 8024998:	f6ff af48 	blt.w	802482c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802499c:	f11c 0801 	adds.w	r8, ip, #1
 80249a0:	f53f af44 	bmi.w	802482c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80249a4:	45c6      	cmp	lr, r8
 80249a6:	f6ff af41 	blt.w	802482c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80249aa:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 80249ae:	fa0f f28e 	sxth.w	r2, lr
 80249b2:	e9cd 1003 	strd	r1, r0, [sp, #12]
 80249b6:	9200      	str	r2, [sp, #0]
 80249b8:	b21b      	sxth	r3, r3
 80249ba:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80249bc:	9819      	ldr	r0, [sp, #100]	; 0x64
 80249be:	4639      	mov	r1, r7
 80249c0:	f7ff fc87 	bl	80242d2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 80249c4:	e732      	b.n	802482c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80249c6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80249c8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80249ca:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 80249ce:	1421      	asrs	r1, r4, #16
 80249d0:	1433      	asrs	r3, r6, #16
 80249d2:	fb07 1303 	mla	r3, r7, r3, r1
 80249d6:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80249d8:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 80249dc:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80249e0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80249e4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80249e8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80249ec:	2a00      	cmp	r2, #0
 80249ee:	f000 8107 	beq.w	8024c00 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 80249f2:	684d      	ldr	r5, [r1, #4]
 80249f4:	950d      	str	r5, [sp, #52]	; 0x34
 80249f6:	0e2d      	lsrs	r5, r5, #24
 80249f8:	9514      	str	r5, [sp, #80]	; 0x50
 80249fa:	b178      	cbz	r0, 8024a1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80249fc:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8024a00:	3f01      	subs	r7, #1
 8024a02:	00bf      	lsls	r7, r7, #2
 8024a04:	3704      	adds	r7, #4
 8024a06:	eb01 0e07 	add.w	lr, r1, r7
 8024a0a:	59c9      	ldr	r1, [r1, r7]
 8024a0c:	9109      	str	r1, [sp, #36]	; 0x24
 8024a0e:	0e09      	lsrs	r1, r1, #24
 8024a10:	9111      	str	r1, [sp, #68]	; 0x44
 8024a12:	f8de 1004 	ldr.w	r1, [lr, #4]
 8024a16:	910e      	str	r1, [sp, #56]	; 0x38
 8024a18:	0e09      	lsrs	r1, r1, #24
 8024a1a:	9115      	str	r1, [sp, #84]	; 0x54
 8024a1c:	b292      	uxth	r2, r2
 8024a1e:	b280      	uxth	r0, r0
 8024a20:	fb02 f900 	mul.w	r9, r2, r0
 8024a24:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8024a28:	0112      	lsls	r2, r2, #4
 8024a2a:	eba2 0e09 	sub.w	lr, r2, r9
 8024a2e:	b280      	uxth	r0, r0
 8024a30:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8024a34:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8024a36:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024a38:	fa1f fe8e 	uxth.w	lr, lr
 8024a3c:	1a09      	subs	r1, r1, r0
 8024a3e:	b289      	uxth	r1, r1
 8024a40:	fb0e f202 	mul.w	r2, lr, r2
 8024a44:	fb01 220c 	mla	r2, r1, ip, r2
 8024a48:	fb00 2205 	mla	r2, r0, r5, r2
 8024a4c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024a4e:	fb09 2205 	mla	r2, r9, r5, r2
 8024a52:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8024a56:	2a00      	cmp	r2, #0
 8024a58:	f000 80c9 	beq.w	8024bee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8024a5c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8024a60:	d019      	beq.n	8024a96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 8024a62:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8024a66:	fb0c fa0a 	mul.w	sl, ip, sl
 8024a6a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024a6e:	fb0c fc03 	mul.w	ip, ip, r3
 8024a72:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024a76:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024a7a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024a7e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8024a82:	4453      	add	r3, sl
 8024a84:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024a88:	0a1b      	lsrs	r3, r3, #8
 8024a8a:	0a3f      	lsrs	r7, r7, #8
 8024a8c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024a90:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8024a94:	433b      	orrs	r3, r7
 8024a96:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024a98:	2dff      	cmp	r5, #255	; 0xff
 8024a9a:	d020      	beq.n	8024ade <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8024a9c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024a9e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024aa2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024aa4:	436f      	muls	r7, r5
 8024aa6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024aa8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024aac:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024aae:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024ab2:	fb05 fa0a 	mul.w	sl, r5, sl
 8024ab6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024aba:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024abe:	44bc      	add	ip, r7
 8024ac0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024ac4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024ac8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024acc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024ad0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024ad4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024ad8:	ea4c 050a 	orr.w	r5, ip, sl
 8024adc:	950d      	str	r5, [sp, #52]	; 0x34
 8024ade:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024ae0:	2dff      	cmp	r5, #255	; 0xff
 8024ae2:	d020      	beq.n	8024b26 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8024ae4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024ae6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024aea:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024aec:	436f      	muls	r7, r5
 8024aee:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024af0:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8024af4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024af6:	fb05 fa0c 	mul.w	sl, r5, ip
 8024afa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024afe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024b02:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024b06:	44bc      	add	ip, r7
 8024b08:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024b0c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024b10:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024b14:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024b18:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024b1c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024b20:	ea4c 050a 	orr.w	r5, ip, sl
 8024b24:	9509      	str	r5, [sp, #36]	; 0x24
 8024b26:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024b28:	2dff      	cmp	r5, #255	; 0xff
 8024b2a:	d020      	beq.n	8024b6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8024b2c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024b2e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024b32:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024b34:	436f      	muls	r7, r5
 8024b36:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024b38:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024b3c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024b3e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024b42:	fb05 fa0a 	mul.w	sl, r5, sl
 8024b46:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024b4a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024b4e:	44bc      	add	ip, r7
 8024b50:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024b54:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024b58:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024b5c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024b60:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024b64:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024b68:	ea4c 050a 	orr.w	r5, ip, sl
 8024b6c:	950e      	str	r5, [sp, #56]	; 0x38
 8024b6e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024b70:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024b74:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024b76:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8024b7a:	fb0e f707 	mul.w	r7, lr, r7
 8024b7e:	fb01 770c 	mla	r7, r1, ip, r7
 8024b82:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024b86:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024b88:	fb00 770c 	mla	r7, r0, ip, r7
 8024b8c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024b90:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024b92:	fb09 770c 	mla	r7, r9, ip, r7
 8024b96:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8024b9a:	fb0e fe0c 	mul.w	lr, lr, ip
 8024b9e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024ba2:	fb01 e303 	mla	r3, r1, r3, lr
 8024ba6:	9909      	ldr	r1, [sp, #36]	; 0x24
 8024ba8:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8024bac:	990e      	ldr	r1, [sp, #56]	; 0x38
 8024bae:	fb00 330a 	mla	r3, r0, sl, r3
 8024bb2:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8024bb6:	fb09 3c0c 	mla	ip, r9, ip, r3
 8024bba:	0a3f      	lsrs	r7, r7, #8
 8024bbc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024bc0:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8024bc4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024bc8:	ea47 070c 	orr.w	r7, r7, ip
 8024bcc:	2aff      	cmp	r2, #255	; 0xff
 8024bce:	ea4f 2317 	mov.w	r3, r7, lsr #8
 8024bd2:	d11e      	bne.n	8024c12 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8024bd4:	097a      	lsrs	r2, r7, #5
 8024bd6:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8024bda:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024bde:	f023 0307 	bic.w	r3, r3, #7
 8024be2:	4313      	orrs	r3, r2
 8024be4:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8024be8:	431f      	orrs	r7, r3
 8024bea:	f8a8 7000 	strh.w	r7, [r8]
 8024bee:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024bf0:	441c      	add	r4, r3
 8024bf2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024bf4:	f108 0802 	add.w	r8, r8, #2
 8024bf8:	441e      	add	r6, r3
 8024bfa:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024bfe:	e644      	b.n	802488a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8024c00:	2800      	cmp	r0, #0
 8024c02:	f43f af0b 	beq.w	8024a1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8024c06:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8024c0a:	9109      	str	r1, [sp, #36]	; 0x24
 8024c0c:	0e09      	lsrs	r1, r1, #24
 8024c0e:	9111      	str	r1, [sp, #68]	; 0x44
 8024c10:	e704      	b.n	8024a1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8024c12:	f8b8 1000 	ldrh.w	r1, [r8]
 8024c16:	43d2      	mvns	r2, r2
 8024c18:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8024c1c:	fa5f fe82 	uxtb.w	lr, r2
 8024c20:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8024c24:	fb0c fc0e 	mul.w	ip, ip, lr
 8024c28:	10c8      	asrs	r0, r1, #3
 8024c2a:	00ca      	lsls	r2, r1, #3
 8024c2c:	f10c 0101 	add.w	r1, ip, #1
 8024c30:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024c34:	0c39      	lsrs	r1, r7, #16
 8024c36:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024c3a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024c3e:	4911      	ldr	r1, [pc, #68]	; (8024c84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8024c40:	fb00 f00e 	mul.w	r0, r0, lr
 8024c44:	fa5f fc8c 	uxtb.w	ip, ip
 8024c48:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8024c4c:	b2d2      	uxtb	r2, r2
 8024c4e:	1c41      	adds	r1, r0, #1
 8024c50:	fb02 f20e 	mul.w	r2, r2, lr
 8024c54:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8024c58:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024c5c:	1c51      	adds	r1, r2, #1
 8024c5e:	00c0      	lsls	r0, r0, #3
 8024c60:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8024c64:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024c68:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8024c6c:	ea4c 0c00 	orr.w	ip, ip, r0
 8024c70:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8024c74:	ea47 0c0c 	orr.w	ip, r7, ip
 8024c78:	f8a8 c000 	strh.w	ip, [r8]
 8024c7c:	e7b7      	b.n	8024bee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8024c7e:	b01b      	add	sp, #108	; 0x6c
 8024c80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024c84:	fffff800 	.word	0xfffff800

08024c88 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8024c88:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024c8c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8024c90:	2d00      	cmp	r5, #0
 8024c92:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8024c96:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8024c9a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8024c9e:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8024ca2:	fb05 0e03 	mla	lr, r5, r3, r0
 8024ca6:	f2c0 808c 	blt.w	8024dc2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8024caa:	45a9      	cmp	r9, r5
 8024cac:	f340 8089 	ble.w	8024dc2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8024cb0:	2800      	cmp	r0, #0
 8024cb2:	f2c0 8084 	blt.w	8024dbe <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8024cb6:	4580      	cmp	r8, r0
 8024cb8:	f340 8081 	ble.w	8024dbe <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8024cbc:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8024cc0:	f01e 0f01 	tst.w	lr, #1
 8024cc4:	5d16      	ldrb	r6, [r2, r4]
 8024cc6:	bf0c      	ite	eq
 8024cc8:	f006 060f 	andeq.w	r6, r6, #15
 8024ccc:	1136      	asrne	r6, r6, #4
 8024cce:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8024cd2:	b2f6      	uxtb	r6, r6
 8024cd4:	1c44      	adds	r4, r0, #1
 8024cd6:	d477      	bmi.n	8024dc8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8024cd8:	45a0      	cmp	r8, r4
 8024cda:	dd75      	ble.n	8024dc8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8024cdc:	2f00      	cmp	r7, #0
 8024cde:	d075      	beq.n	8024dcc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 8024ce0:	f10e 0a01 	add.w	sl, lr, #1
 8024ce4:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8024ce8:	f01a 0f01 	tst.w	sl, #1
 8024cec:	5d14      	ldrb	r4, [r2, r4]
 8024cee:	bf0c      	ite	eq
 8024cf0:	f004 040f 	andeq.w	r4, r4, #15
 8024cf4:	1124      	asrne	r4, r4, #4
 8024cf6:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8024cfa:	b2e4      	uxtb	r4, r4
 8024cfc:	3501      	adds	r5, #1
 8024cfe:	d469      	bmi.n	8024dd4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8024d00:	45a9      	cmp	r9, r5
 8024d02:	dd67      	ble.n	8024dd4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8024d04:	f1bc 0f00 	cmp.w	ip, #0
 8024d08:	d067      	beq.n	8024dda <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8024d0a:	2800      	cmp	r0, #0
 8024d0c:	db60      	blt.n	8024dd0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8024d0e:	4580      	cmp	r8, r0
 8024d10:	dd5e      	ble.n	8024dd0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8024d12:	eb03 090e 	add.w	r9, r3, lr
 8024d16:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8024d1a:	f019 0f01 	tst.w	r9, #1
 8024d1e:	5d55      	ldrb	r5, [r2, r5]
 8024d20:	bf0c      	ite	eq
 8024d22:	f005 050f 	andeq.w	r5, r5, #15
 8024d26:	112d      	asrne	r5, r5, #4
 8024d28:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8024d2c:	b2ed      	uxtb	r5, r5
 8024d2e:	3001      	adds	r0, #1
 8024d30:	d456      	bmi.n	8024de0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8024d32:	4580      	cmp	r8, r0
 8024d34:	dd54      	ble.n	8024de0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8024d36:	2f00      	cmp	r7, #0
 8024d38:	d054      	beq.n	8024de4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8024d3a:	3301      	adds	r3, #1
 8024d3c:	449e      	add	lr, r3
 8024d3e:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8024d42:	f01e 0f01 	tst.w	lr, #1
 8024d46:	5cd0      	ldrb	r0, [r2, r3]
 8024d48:	bf0c      	ite	eq
 8024d4a:	f000 000f 	andeq.w	r0, r0, #15
 8024d4e:	1100      	asrne	r0, r0, #4
 8024d50:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024d54:	b2c3      	uxtb	r3, r0
 8024d56:	b2ba      	uxth	r2, r7
 8024d58:	fa1f fc8c 	uxth.w	ip, ip
 8024d5c:	fb02 f00c 	mul.w	r0, r2, ip
 8024d60:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8024d64:	0112      	lsls	r2, r2, #4
 8024d66:	fa1f fc8c 	uxth.w	ip, ip
 8024d6a:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8024d6e:	1a12      	subs	r2, r2, r0
 8024d70:	eba7 070c 	sub.w	r7, r7, ip
 8024d74:	b292      	uxth	r2, r2
 8024d76:	b2bf      	uxth	r7, r7
 8024d78:	4362      	muls	r2, r4
 8024d7a:	fb06 2207 	mla	r2, r6, r7, r2
 8024d7e:	fb0c 2505 	mla	r5, ip, r5, r2
 8024d82:	fb00 5303 	mla	r3, r0, r3, r5
 8024d86:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024d8a:	b1b3      	cbz	r3, 8024dba <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8024d8c:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 8024d90:	435a      	muls	r2, r3
 8024d92:	1c53      	adds	r3, r2, #1
 8024d94:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024d98:	4a2d      	ldr	r2, [pc, #180]	; (8024e50 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8024d9a:	121b      	asrs	r3, r3, #8
 8024d9c:	6812      	ldr	r2, [r2, #0]
 8024d9e:	2bff      	cmp	r3, #255	; 0xff
 8024da0:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8024da4:	d120      	bne.n	8024de8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8024da6:	4b2b      	ldr	r3, [pc, #172]	; (8024e54 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8024da8:	0950      	lsrs	r0, r2, #5
 8024daa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024dae:	4033      	ands	r3, r6
 8024db0:	4318      	orrs	r0, r3
 8024db2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024db6:	4302      	orrs	r2, r0
 8024db8:	800a      	strh	r2, [r1, #0]
 8024dba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8024dbe:	2600      	movs	r6, #0
 8024dc0:	e788      	b.n	8024cd4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 8024dc2:	2400      	movs	r4, #0
 8024dc4:	4626      	mov	r6, r4
 8024dc6:	e799      	b.n	8024cfc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8024dc8:	2400      	movs	r4, #0
 8024dca:	e797      	b.n	8024cfc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8024dcc:	463c      	mov	r4, r7
 8024dce:	e795      	b.n	8024cfc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8024dd0:	2500      	movs	r5, #0
 8024dd2:	e7ac      	b.n	8024d2e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8024dd4:	2300      	movs	r3, #0
 8024dd6:	461d      	mov	r5, r3
 8024dd8:	e7bd      	b.n	8024d56 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024dda:	4663      	mov	r3, ip
 8024ddc:	4665      	mov	r5, ip
 8024dde:	e7ba      	b.n	8024d56 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024de0:	2300      	movs	r3, #0
 8024de2:	e7b8      	b.n	8024d56 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024de4:	463b      	mov	r3, r7
 8024de6:	e7b6      	b.n	8024d56 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024de8:	880d      	ldrh	r5, [r1, #0]
 8024dea:	b29f      	uxth	r7, r3
 8024dec:	122c      	asrs	r4, r5, #8
 8024dee:	f3c2 4007 	ubfx	r0, r2, #16, #8
 8024df2:	43db      	mvns	r3, r3
 8024df4:	b2db      	uxtb	r3, r3
 8024df6:	fb10 f007 	smulbb	r0, r0, r7
 8024dfa:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8024dfe:	fb04 0403 	mla	r4, r4, r3, r0
 8024e02:	b2f6      	uxtb	r6, r6
 8024e04:	10e8      	asrs	r0, r5, #3
 8024e06:	b2d2      	uxtb	r2, r2
 8024e08:	00ed      	lsls	r5, r5, #3
 8024e0a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024e0e:	fb12 f207 	smulbb	r2, r2, r7
 8024e12:	fb16 f607 	smulbb	r6, r6, r7
 8024e16:	b2ed      	uxtb	r5, r5
 8024e18:	b2a4      	uxth	r4, r4
 8024e1a:	fb00 6603 	mla	r6, r0, r3, r6
 8024e1e:	fb05 2303 	mla	r3, r5, r3, r2
 8024e22:	b29a      	uxth	r2, r3
 8024e24:	1c63      	adds	r3, r4, #1
 8024e26:	b2b0      	uxth	r0, r6
 8024e28:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8024e2c:	1c53      	adds	r3, r2, #1
 8024e2e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024e32:	1c42      	adds	r2, r0, #1
 8024e34:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024e38:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8024e3c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024e40:	0940      	lsrs	r0, r0, #5
 8024e42:	4323      	orrs	r3, r4
 8024e44:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024e48:	4303      	orrs	r3, r0
 8024e4a:	800b      	strh	r3, [r1, #0]
 8024e4c:	e7b5      	b.n	8024dba <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8024e4e:	bf00      	nop
 8024e50:	20012f34 	.word	0x20012f34
 8024e54:	00fff800 	.word	0x00fff800

08024e58 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024e58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024e5c:	b097      	sub	sp, #92	; 0x5c
 8024e5e:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 8024e62:	9214      	str	r2, [sp, #80]	; 0x50
 8024e64:	9309      	str	r3, [sp, #36]	; 0x24
 8024e66:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8024e68:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8024e6c:	910d      	str	r1, [sp, #52]	; 0x34
 8024e6e:	930f      	str	r3, [sp, #60]	; 0x3c
 8024e70:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8024e74:	9015      	str	r0, [sp, #84]	; 0x54
 8024e76:	6850      	ldr	r0, [r2, #4]
 8024e78:	6812      	ldr	r2, [r2, #0]
 8024e7a:	fb00 1303 	mla	r3, r0, r3, r1
 8024e7e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8024e82:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024e84:	689b      	ldr	r3, [r3, #8]
 8024e86:	3301      	adds	r3, #1
 8024e88:	f023 0301 	bic.w	r3, r3, #1
 8024e8c:	930a      	str	r3, [sp, #40]	; 0x28
 8024e8e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024e90:	681f      	ldr	r7, [r3, #0]
 8024e92:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024e94:	2b00      	cmp	r3, #0
 8024e96:	dc03      	bgt.n	8024ea0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8024e98:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8024e9a:	2b00      	cmp	r3, #0
 8024e9c:	f340 8287 	ble.w	80253ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8024ea0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024ea2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024ea6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024eaa:	1e48      	subs	r0, r1, #1
 8024eac:	f102 3cff 	add.w	ip, r2, #4294967295
 8024eb0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024eb2:	2b00      	cmp	r3, #0
 8024eb4:	f340 80c4 	ble.w	8025040 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8024eb8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024ebc:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024ec0:	d406      	bmi.n	8024ed0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8024ec2:	4586      	cmp	lr, r0
 8024ec4:	da04      	bge.n	8024ed0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8024ec6:	2b00      	cmp	r3, #0
 8024ec8:	db02      	blt.n	8024ed0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8024eca:	4563      	cmp	r3, ip
 8024ecc:	f2c0 80b9 	blt.w	8025042 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8024ed0:	f11e 0e01 	adds.w	lr, lr, #1
 8024ed4:	f100 80aa 	bmi.w	802502c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024ed8:	4571      	cmp	r1, lr
 8024eda:	f2c0 80a7 	blt.w	802502c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024ede:	3301      	adds	r3, #1
 8024ee0:	f100 80a4 	bmi.w	802502c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024ee4:	429a      	cmp	r2, r3
 8024ee6:	f2c0 80a1 	blt.w	802502c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024eea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024eec:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 8024ef0:	930e      	str	r3, [sp, #56]	; 0x38
 8024ef2:	46c8      	mov	r8, r9
 8024ef4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8024ef6:	2b00      	cmp	r3, #0
 8024ef8:	f340 80c3 	ble.w	8025082 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8024efc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024efe:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8024f02:	1423      	asrs	r3, r4, #16
 8024f04:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024f08:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024f0c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8024f10:	f100 814d 	bmi.w	80251ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024f14:	f10c 3bff 	add.w	fp, ip, #4294967295
 8024f18:	455b      	cmp	r3, fp
 8024f1a:	f280 8148 	bge.w	80251ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024f1e:	2800      	cmp	r0, #0
 8024f20:	f2c0 8145 	blt.w	80251ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024f24:	f10e 3bff 	add.w	fp, lr, #4294967295
 8024f28:	4558      	cmp	r0, fp
 8024f2a:	f280 8140 	bge.w	80251ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024f2e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8024f30:	fb00 3305 	mla	r3, r0, r5, r3
 8024f34:	0858      	lsrs	r0, r3, #1
 8024f36:	07dd      	lsls	r5, r3, #31
 8024f38:	f817 c000 	ldrb.w	ip, [r7, r0]
 8024f3c:	bf54      	ite	pl
 8024f3e:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024f42:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024f46:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024f4a:	fa5f fc8c 	uxtb.w	ip, ip
 8024f4e:	2a00      	cmp	r2, #0
 8024f50:	f000 80db 	beq.w	802510a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8024f54:	1c58      	adds	r0, r3, #1
 8024f56:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8024f5a:	07c0      	lsls	r0, r0, #31
 8024f5c:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8024f60:	bf54      	ite	pl
 8024f62:	f00e 0e0f 	andpl.w	lr, lr, #15
 8024f66:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8024f6a:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8024f6e:	fa5f f08e 	uxtb.w	r0, lr
 8024f72:	9010      	str	r0, [sp, #64]	; 0x40
 8024f74:	b1c9      	cbz	r1, 8024faa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8024f76:	4453      	add	r3, sl
 8024f78:	0858      	lsrs	r0, r3, #1
 8024f7a:	07dd      	lsls	r5, r3, #31
 8024f7c:	5c38      	ldrb	r0, [r7, r0]
 8024f7e:	bf54      	ite	pl
 8024f80:	f000 000f 	andpl.w	r0, r0, #15
 8024f84:	1100      	asrmi	r0, r0, #4
 8024f86:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024f8a:	3301      	adds	r3, #1
 8024f8c:	b2c0      	uxtb	r0, r0
 8024f8e:	900b      	str	r0, [sp, #44]	; 0x2c
 8024f90:	0858      	lsrs	r0, r3, #1
 8024f92:	07dd      	lsls	r5, r3, #31
 8024f94:	f817 e000 	ldrb.w	lr, [r7, r0]
 8024f98:	bf54      	ite	pl
 8024f9a:	f00e 030f 	andpl.w	r3, lr, #15
 8024f9e:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8024fa2:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024fa6:	b2db      	uxtb	r3, r3
 8024fa8:	9311      	str	r3, [sp, #68]	; 0x44
 8024faa:	b292      	uxth	r2, r2
 8024fac:	b289      	uxth	r1, r1
 8024fae:	fb02 f301 	mul.w	r3, r2, r1
 8024fb2:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8024fb6:	0112      	lsls	r2, r2, #4
 8024fb8:	b289      	uxth	r1, r1
 8024fba:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8024fbe:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024fc0:	1ad2      	subs	r2, r2, r3
 8024fc2:	1a40      	subs	r0, r0, r1
 8024fc4:	b292      	uxth	r2, r2
 8024fc6:	436a      	muls	r2, r5
 8024fc8:	b280      	uxth	r0, r0
 8024fca:	fb0c 2c00 	mla	ip, ip, r0, r2
 8024fce:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8024fd0:	fb01 c102 	mla	r1, r1, r2, ip
 8024fd4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8024fd6:	fb03 1302 	mla	r3, r3, r2, r1
 8024fda:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024fde:	b1db      	cbz	r3, 8025018 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024fe0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024fe2:	4353      	muls	r3, r2
 8024fe4:	1c5a      	adds	r2, r3, #1
 8024fe6:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024fea:	4ac6      	ldr	r2, [pc, #792]	; (8025304 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8024fec:	121b      	asrs	r3, r3, #8
 8024fee:	6812      	ldr	r2, [r2, #0]
 8024ff0:	2bff      	cmp	r3, #255	; 0xff
 8024ff2:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8024ff6:	f040 8099 	bne.w	802512c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8024ffa:	0953      	lsrs	r3, r2, #5
 8024ffc:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8025000:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025004:	f02c 0c07 	bic.w	ip, ip, #7
 8025008:	ea43 0c0c 	orr.w	ip, r3, ip
 802500c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025010:	ea4c 0202 	orr.w	r2, ip, r2
 8025014:	f8a8 2000 	strh.w	r2, [r8]
 8025018:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 802501a:	441c      	add	r4, r3
 802501c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802501e:	441e      	add	r6, r3
 8025020:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8025022:	3b01      	subs	r3, #1
 8025024:	f108 0802 	add.w	r8, r8, #2
 8025028:	930e      	str	r3, [sp, #56]	; 0x38
 802502a:	e763      	b.n	8024ef4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 802502c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 802502e:	441c      	add	r4, r3
 8025030:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025032:	441e      	add	r6, r3
 8025034:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025036:	3b01      	subs	r3, #1
 8025038:	9309      	str	r3, [sp, #36]	; 0x24
 802503a:	f109 0902 	add.w	r9, r9, #2
 802503e:	e737      	b.n	8024eb0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8025040:	d024      	beq.n	802508c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8025042:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025044:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8025046:	3b01      	subs	r3, #1
 8025048:	fb00 4003 	mla	r0, r0, r3, r4
 802504c:	1400      	asrs	r0, r0, #16
 802504e:	f53f af4c 	bmi.w	8024eea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8025052:	3901      	subs	r1, #1
 8025054:	4288      	cmp	r0, r1
 8025056:	f6bf af48 	bge.w	8024eea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802505a:	9924      	ldr	r1, [sp, #144]	; 0x90
 802505c:	fb01 6303 	mla	r3, r1, r3, r6
 8025060:	141b      	asrs	r3, r3, #16
 8025062:	f53f af42 	bmi.w	8024eea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8025066:	3a01      	subs	r2, #1
 8025068:	4293      	cmp	r3, r2
 802506a:	f6bf af3e 	bge.w	8024eea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802506e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8025072:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8025076:	930e      	str	r3, [sp, #56]	; 0x38
 8025078:	46c8      	mov	r8, r9
 802507a:	f1bb 0f00 	cmp.w	fp, #0
 802507e:	f300 80b7 	bgt.w	80251f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8025082:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025084:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8025088:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 802508c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802508e:	2b00      	cmp	r3, #0
 8025090:	f340 818d 	ble.w	80253ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8025094:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025098:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802509c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80250a0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80250a2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80250a6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80250aa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80250ae:	eef0 6a62 	vmov.f32	s13, s5
 80250b2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80250b6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80250ba:	ee77 2a62 	vsub.f32	s5, s14, s5
 80250be:	ee16 4a90 	vmov	r4, s13
 80250c2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80250c6:	eef0 6a43 	vmov.f32	s13, s6
 80250ca:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80250ce:	ee12 2a90 	vmov	r2, s5
 80250d2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80250d6:	fb92 f3f3 	sdiv	r3, r2, r3
 80250da:	ee13 2a10 	vmov	r2, s6
 80250de:	9323      	str	r3, [sp, #140]	; 0x8c
 80250e0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80250e2:	fb92 f3f3 	sdiv	r3, r2, r3
 80250e6:	9324      	str	r3, [sp, #144]	; 0x90
 80250e8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80250ea:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80250ec:	3b01      	subs	r3, #1
 80250ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80250f2:	930d      	str	r3, [sp, #52]	; 0x34
 80250f4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80250f6:	bf08      	it	eq
 80250f8:	4613      	moveq	r3, r2
 80250fa:	ee16 6a90 	vmov	r6, s13
 80250fe:	9309      	str	r3, [sp, #36]	; 0x24
 8025100:	eeb0 3a67 	vmov.f32	s6, s15
 8025104:	eef0 2a47 	vmov.f32	s5, s14
 8025108:	e6c3      	b.n	8024e92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802510a:	2900      	cmp	r1, #0
 802510c:	f43f af4d 	beq.w	8024faa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8025110:	eb0a 0003 	add.w	r0, sl, r3
 8025114:	0843      	lsrs	r3, r0, #1
 8025116:	07c0      	lsls	r0, r0, #31
 8025118:	5cfb      	ldrb	r3, [r7, r3]
 802511a:	bf54      	ite	pl
 802511c:	f003 030f 	andpl.w	r3, r3, #15
 8025120:	111b      	asrmi	r3, r3, #4
 8025122:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025126:	b2db      	uxtb	r3, r3
 8025128:	930b      	str	r3, [sp, #44]	; 0x2c
 802512a:	e73e      	b.n	8024faa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802512c:	f8b8 e000 	ldrh.w	lr, [r8]
 8025130:	fa1f fb83 	uxth.w	fp, r3
 8025134:	ea4f 202e 	mov.w	r0, lr, asr #8
 8025138:	f3c2 4107 	ubfx	r1, r2, #16, #8
 802513c:	43db      	mvns	r3, r3
 802513e:	b2db      	uxtb	r3, r3
 8025140:	fb11 f10b 	smulbb	r1, r1, fp
 8025144:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025148:	fb00 1003 	mla	r0, r0, r3, r1
 802514c:	fa5f fc8c 	uxtb.w	ip, ip
 8025150:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8025154:	b2d2      	uxtb	r2, r2
 8025156:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802515a:	b280      	uxth	r0, r0
 802515c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025160:	fb1c fc0b 	smulbb	ip, ip, fp
 8025164:	fa5f fe8e 	uxtb.w	lr, lr
 8025168:	fb12 fb0b 	smulbb	fp, r2, fp
 802516c:	fb01 cc03 	mla	ip, r1, r3, ip
 8025170:	fb0e bb03 	mla	fp, lr, r3, fp
 8025174:	1c43      	adds	r3, r0, #1
 8025176:	fa1f fc8c 	uxth.w	ip, ip
 802517a:	fa1f fb8b 	uxth.w	fp, fp
 802517e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8025182:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8025186:	f10c 0101 	add.w	r1, ip, #1
 802518a:	f10b 0001 	add.w	r0, fp, #1
 802518e:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8025192:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025196:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802519a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802519e:	4318      	orrs	r0, r3
 80251a0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80251a4:	ea40 000c 	orr.w	r0, r0, ip
 80251a8:	f8a8 0000 	strh.w	r0, [r8]
 80251ac:	e734      	b.n	8025018 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80251ae:	f113 0b01 	adds.w	fp, r3, #1
 80251b2:	f53f af31 	bmi.w	8025018 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80251b6:	45dc      	cmp	ip, fp
 80251b8:	f6ff af2e 	blt.w	8025018 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80251bc:	f110 0b01 	adds.w	fp, r0, #1
 80251c0:	f53f af2a 	bmi.w	8025018 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80251c4:	45de      	cmp	lr, fp
 80251c6:	f6ff af27 	blt.w	8025018 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80251ca:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80251cc:	9302      	str	r3, [sp, #8]
 80251ce:	fa0f f38e 	sxth.w	r3, lr
 80251d2:	9301      	str	r3, [sp, #4]
 80251d4:	fa0f f38c 	sxth.w	r3, ip
 80251d8:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80251dc:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80251e0:	9300      	str	r3, [sp, #0]
 80251e2:	463a      	mov	r2, r7
 80251e4:	4653      	mov	r3, sl
 80251e6:	4641      	mov	r1, r8
 80251e8:	9815      	ldr	r0, [sp, #84]	; 0x54
 80251ea:	f7ff fd4d 	bl	8024c88 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 80251ee:	e713      	b.n	8025018 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80251f0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80251f2:	1422      	asrs	r2, r4, #16
 80251f4:	1433      	asrs	r3, r6, #16
 80251f6:	fb05 2303 	mla	r3, r5, r3, r2
 80251fa:	085a      	lsrs	r2, r3, #1
 80251fc:	07dd      	lsls	r5, r3, #31
 80251fe:	5cba      	ldrb	r2, [r7, r2]
 8025200:	bf54      	ite	pl
 8025202:	f002 020f 	andpl.w	r2, r2, #15
 8025206:	1112      	asrmi	r2, r2, #4
 8025208:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 802520c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8025210:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8025214:	b2d2      	uxtb	r2, r2
 8025216:	2900      	cmp	r1, #0
 8025218:	d076      	beq.n	8025308 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802521a:	f103 0e01 	add.w	lr, r3, #1
 802521e:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8025222:	f01e 0f01 	tst.w	lr, #1
 8025226:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802522a:	bf0c      	ite	eq
 802522c:	f00c 0c0f 	andeq.w	ip, ip, #15
 8025230:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8025234:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025238:	fa5f f58c 	uxtb.w	r5, ip
 802523c:	9512      	str	r5, [sp, #72]	; 0x48
 802523e:	b300      	cbz	r0, 8025282 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8025240:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025242:	442b      	add	r3, r5
 8025244:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8025248:	07dd      	lsls	r5, r3, #31
 802524a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802524e:	bf54      	ite	pl
 8025250:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025254:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025258:	3301      	adds	r3, #1
 802525a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802525e:	fa5f f58c 	uxtb.w	r5, ip
 8025262:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8025266:	950c      	str	r5, [sp, #48]	; 0x30
 8025268:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802526c:	07dd      	lsls	r5, r3, #31
 802526e:	bf54      	ite	pl
 8025270:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025274:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025278:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802527c:	fa5f f38c 	uxtb.w	r3, ip
 8025280:	9313      	str	r3, [sp, #76]	; 0x4c
 8025282:	b289      	uxth	r1, r1
 8025284:	b280      	uxth	r0, r0
 8025286:	fb01 f300 	mul.w	r3, r1, r0
 802528a:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 802528e:	0109      	lsls	r1, r1, #4
 8025290:	b280      	uxth	r0, r0
 8025292:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8025296:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025298:	1ac9      	subs	r1, r1, r3
 802529a:	ebac 0c00 	sub.w	ip, ip, r0
 802529e:	b289      	uxth	r1, r1
 80252a0:	4369      	muls	r1, r5
 80252a2:	fa1f fc8c 	uxth.w	ip, ip
 80252a6:	fb02 120c 	mla	r2, r2, ip, r1
 80252aa:	990c      	ldr	r1, [sp, #48]	; 0x30
 80252ac:	fb00 2001 	mla	r0, r0, r1, r2
 80252b0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80252b2:	fb03 0302 	mla	r3, r3, r2, r0
 80252b6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80252ba:	b1d3      	cbz	r3, 80252f2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80252bc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80252be:	4353      	muls	r3, r2
 80252c0:	1c5a      	adds	r2, r3, #1
 80252c2:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80252c6:	4a0f      	ldr	r2, [pc, #60]	; (8025304 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 80252c8:	121b      	asrs	r3, r3, #8
 80252ca:	6812      	ldr	r2, [r2, #0]
 80252cc:	2bff      	cmp	r3, #255	; 0xff
 80252ce:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80252d2:	d12d      	bne.n	8025330 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 80252d4:	0953      	lsrs	r3, r2, #5
 80252d6:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80252da:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80252de:	f02c 0c07 	bic.w	ip, ip, #7
 80252e2:	ea43 0c0c 	orr.w	ip, r3, ip
 80252e6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80252ea:	ea4c 0202 	orr.w	r2, ip, r2
 80252ee:	f8a8 2000 	strh.w	r2, [r8]
 80252f2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80252f4:	441c      	add	r4, r3
 80252f6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80252f8:	f108 0802 	add.w	r8, r8, #2
 80252fc:	441e      	add	r6, r3
 80252fe:	f10b 3bff 	add.w	fp, fp, #4294967295
 8025302:	e6ba      	b.n	802507a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8025304:	20012f34 	.word	0x20012f34
 8025308:	2800      	cmp	r0, #0
 802530a:	d0ba      	beq.n	8025282 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 802530c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802530e:	442b      	add	r3, r5
 8025310:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8025314:	07db      	lsls	r3, r3, #31
 8025316:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802531a:	bf54      	ite	pl
 802531c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025320:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025324:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025328:	fa5f f38c 	uxtb.w	r3, ip
 802532c:	930c      	str	r3, [sp, #48]	; 0x30
 802532e:	e7a8      	b.n	8025282 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8025330:	f8b8 e000 	ldrh.w	lr, [r8]
 8025334:	fa1f fa83 	uxth.w	sl, r3
 8025338:	ea4f 202e 	mov.w	r0, lr, asr #8
 802533c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8025340:	43db      	mvns	r3, r3
 8025342:	b2db      	uxtb	r3, r3
 8025344:	fb11 f10a 	smulbb	r1, r1, sl
 8025348:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802534c:	fb00 1003 	mla	r0, r0, r3, r1
 8025350:	b2d2      	uxtb	r2, r2
 8025352:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8025356:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802535a:	fa5f fe8e 	uxtb.w	lr, lr
 802535e:	fb12 f20a 	smulbb	r2, r2, sl
 8025362:	fb0e 2203 	mla	r2, lr, r3, r2
 8025366:	fa5f fc8c 	uxtb.w	ip, ip
 802536a:	b280      	uxth	r0, r0
 802536c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025370:	b292      	uxth	r2, r2
 8025372:	fb1c fc0a 	smulbb	ip, ip, sl
 8025376:	fb01 cc03 	mla	ip, r1, r3, ip
 802537a:	1c43      	adds	r3, r0, #1
 802537c:	1c51      	adds	r1, r2, #1
 802537e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8025382:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8025386:	fa1f fc8c 	uxth.w	ip, ip
 802538a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802538e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8025392:	4308      	orrs	r0, r1
 8025394:	f10c 0101 	add.w	r1, ip, #1
 8025398:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802539c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80253a0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80253a4:	ea40 000c 	orr.w	r0, r0, ip
 80253a8:	f8a8 0000 	strh.w	r0, [r8]
 80253ac:	e7a1      	b.n	80252f2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80253ae:	b017      	add	sp, #92	; 0x5c
 80253b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080253b4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 80253b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80253b8:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 80253bc:	2d00      	cmp	r5, #0
 80253be:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80253c2:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80253c6:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80253ca:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 80253ce:	fb05 0e03 	mla	lr, r5, r3, r0
 80253d2:	f2c0 80b0 	blt.w	8025536 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 80253d6:	45a9      	cmp	r9, r5
 80253d8:	f340 80ad 	ble.w	8025536 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 80253dc:	2800      	cmp	r0, #0
 80253de:	f2c0 80a8 	blt.w	8025532 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 80253e2:	4580      	cmp	r8, r0
 80253e4:	f340 80a5 	ble.w	8025532 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 80253e8:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80253ec:	f01e 0f01 	tst.w	lr, #1
 80253f0:	5d16      	ldrb	r6, [r2, r4]
 80253f2:	bf0c      	ite	eq
 80253f4:	f006 060f 	andeq.w	r6, r6, #15
 80253f8:	1136      	asrne	r6, r6, #4
 80253fa:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80253fe:	b2f6      	uxtb	r6, r6
 8025400:	1c44      	adds	r4, r0, #1
 8025402:	f100 809b 	bmi.w	802553c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8025406:	45a0      	cmp	r8, r4
 8025408:	f340 8098 	ble.w	802553c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 802540c:	2f00      	cmp	r7, #0
 802540e:	f000 8097 	beq.w	8025540 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8025412:	f10e 0a01 	add.w	sl, lr, #1
 8025416:	ea4f 045a 	mov.w	r4, sl, lsr #1
 802541a:	f01a 0f01 	tst.w	sl, #1
 802541e:	5d14      	ldrb	r4, [r2, r4]
 8025420:	bf0c      	ite	eq
 8025422:	f004 040f 	andeq.w	r4, r4, #15
 8025426:	1124      	asrne	r4, r4, #4
 8025428:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 802542c:	b2e4      	uxtb	r4, r4
 802542e:	3501      	adds	r5, #1
 8025430:	f100 808a 	bmi.w	8025548 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8025434:	45a9      	cmp	r9, r5
 8025436:	f340 8087 	ble.w	8025548 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 802543a:	f1bc 0f00 	cmp.w	ip, #0
 802543e:	f000 8086 	beq.w	802554e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8025442:	2800      	cmp	r0, #0
 8025444:	db7e      	blt.n	8025544 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8025446:	4580      	cmp	r8, r0
 8025448:	dd7c      	ble.n	8025544 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 802544a:	eb03 090e 	add.w	r9, r3, lr
 802544e:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8025452:	f019 0f01 	tst.w	r9, #1
 8025456:	5d55      	ldrb	r5, [r2, r5]
 8025458:	bf0c      	ite	eq
 802545a:	f005 050f 	andeq.w	r5, r5, #15
 802545e:	112d      	asrne	r5, r5, #4
 8025460:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8025464:	b2ed      	uxtb	r5, r5
 8025466:	3001      	adds	r0, #1
 8025468:	d474      	bmi.n	8025554 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 802546a:	4580      	cmp	r8, r0
 802546c:	dd72      	ble.n	8025554 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 802546e:	2f00      	cmp	r7, #0
 8025470:	d072      	beq.n	8025558 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8025472:	3301      	adds	r3, #1
 8025474:	449e      	add	lr, r3
 8025476:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802547a:	f01e 0f01 	tst.w	lr, #1
 802547e:	5cd0      	ldrb	r0, [r2, r3]
 8025480:	bf0c      	ite	eq
 8025482:	f000 000f 	andeq.w	r0, r0, #15
 8025486:	1100      	asrne	r0, r0, #4
 8025488:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802548c:	b2c3      	uxtb	r3, r0
 802548e:	b2ba      	uxth	r2, r7
 8025490:	fa1f fc8c 	uxth.w	ip, ip
 8025494:	fb02 f00c 	mul.w	r0, r2, ip
 8025498:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802549c:	0112      	lsls	r2, r2, #4
 802549e:	fa1f fc8c 	uxth.w	ip, ip
 80254a2:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 80254a6:	1a12      	subs	r2, r2, r0
 80254a8:	eba7 070c 	sub.w	r7, r7, ip
 80254ac:	b292      	uxth	r2, r2
 80254ae:	b2bf      	uxth	r7, r7
 80254b0:	4362      	muls	r2, r4
 80254b2:	fb06 2207 	mla	r2, r6, r7, r2
 80254b6:	fb0c 2505 	mla	r5, ip, r5, r2
 80254ba:	fb00 5303 	mla	r3, r0, r3, r5
 80254be:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80254c2:	b3a3      	cbz	r3, 802552e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 80254c4:	4a25      	ldr	r2, [pc, #148]	; (802555c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 80254c6:	880e      	ldrh	r6, [r1, #0]
 80254c8:	6815      	ldr	r5, [r2, #0]
 80254ca:	1234      	asrs	r4, r6, #8
 80254cc:	b29a      	uxth	r2, r3
 80254ce:	f3c5 4007 	ubfx	r0, r5, #16, #8
 80254d2:	43db      	mvns	r3, r3
 80254d4:	b2db      	uxtb	r3, r3
 80254d6:	fb10 f002 	smulbb	r0, r0, r2
 80254da:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80254de:	fb04 0403 	mla	r4, r4, r3, r0
 80254e2:	f3c5 2707 	ubfx	r7, r5, #8, #8
 80254e6:	10f0      	asrs	r0, r6, #3
 80254e8:	b2ed      	uxtb	r5, r5
 80254ea:	00f6      	lsls	r6, r6, #3
 80254ec:	fb17 f702 	smulbb	r7, r7, r2
 80254f0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80254f4:	fb15 f202 	smulbb	r2, r5, r2
 80254f8:	b2f6      	uxtb	r6, r6
 80254fa:	b2a4      	uxth	r4, r4
 80254fc:	fb00 7003 	mla	r0, r0, r3, r7
 8025500:	fb06 2303 	mla	r3, r6, r3, r2
 8025504:	b29a      	uxth	r2, r3
 8025506:	1c63      	adds	r3, r4, #1
 8025508:	b280      	uxth	r0, r0
 802550a:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 802550e:	1c53      	adds	r3, r2, #1
 8025510:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025514:	1c42      	adds	r2, r0, #1
 8025516:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802551a:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 802551e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025522:	0940      	lsrs	r0, r0, #5
 8025524:	4323      	orrs	r3, r4
 8025526:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802552a:	4303      	orrs	r3, r0
 802552c:	800b      	strh	r3, [r1, #0]
 802552e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8025532:	2600      	movs	r6, #0
 8025534:	e764      	b.n	8025400 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8025536:	2400      	movs	r4, #0
 8025538:	4626      	mov	r6, r4
 802553a:	e778      	b.n	802542e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 802553c:	2400      	movs	r4, #0
 802553e:	e776      	b.n	802542e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8025540:	463c      	mov	r4, r7
 8025542:	e774      	b.n	802542e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8025544:	2500      	movs	r5, #0
 8025546:	e78e      	b.n	8025466 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8025548:	2300      	movs	r3, #0
 802554a:	461d      	mov	r5, r3
 802554c:	e79f      	b.n	802548e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802554e:	4663      	mov	r3, ip
 8025550:	4665      	mov	r5, ip
 8025552:	e79c      	b.n	802548e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025554:	2300      	movs	r3, #0
 8025556:	e79a      	b.n	802548e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025558:	463b      	mov	r3, r7
 802555a:	e798      	b.n	802548e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802555c:	20012f34 	.word	0x20012f34

08025560 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025560:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025564:	b093      	sub	sp, #76	; 0x4c
 8025566:	461d      	mov	r5, r3
 8025568:	920c      	str	r2, [sp, #48]	; 0x30
 802556a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 802556c:	9107      	str	r1, [sp, #28]
 802556e:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8025572:	9011      	str	r0, [sp, #68]	; 0x44
 8025574:	6850      	ldr	r0, [r2, #4]
 8025576:	6812      	ldr	r2, [r2, #0]
 8025578:	fb00 1303 	mla	r3, r0, r3, r1
 802557c:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8025580:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025582:	689b      	ldr	r3, [r3, #8]
 8025584:	3301      	adds	r3, #1
 8025586:	f023 0301 	bic.w	r3, r3, #1
 802558a:	9306      	str	r3, [sp, #24]
 802558c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802558e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8025592:	681f      	ldr	r7, [r3, #0]
 8025594:	9b07      	ldr	r3, [sp, #28]
 8025596:	2b00      	cmp	r3, #0
 8025598:	dc03      	bgt.n	80255a2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 802559a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802559c:	2b00      	cmp	r3, #0
 802559e:	f340 8267 	ble.w	8025a70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 80255a2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80255a4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80255a8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80255ac:	1e48      	subs	r0, r1, #1
 80255ae:	f102 3cff 	add.w	ip, r2, #4294967295
 80255b2:	2d00      	cmp	r5, #0
 80255b4:	f340 80b8 	ble.w	8025728 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80255b8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80255bc:	ea4f 4326 	mov.w	r3, r6, asr #16
 80255c0:	d406      	bmi.n	80255d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80255c2:	4586      	cmp	lr, r0
 80255c4:	da04      	bge.n	80255d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80255c6:	2b00      	cmp	r3, #0
 80255c8:	db02      	blt.n	80255d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80255ca:	4563      	cmp	r3, ip
 80255cc:	f2c0 80ad 	blt.w	802572a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 80255d0:	f11e 0e01 	adds.w	lr, lr, #1
 80255d4:	f100 80a0 	bmi.w	8025718 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80255d8:	4571      	cmp	r1, lr
 80255da:	f2c0 809d 	blt.w	8025718 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80255de:	3301      	adds	r3, #1
 80255e0:	f100 809a 	bmi.w	8025718 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80255e4:	429a      	cmp	r2, r3
 80255e6:	f2c0 8097 	blt.w	8025718 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80255ea:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 80255ee:	9509      	str	r5, [sp, #36]	; 0x24
 80255f0:	46c8      	mov	r8, r9
 80255f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80255f4:	2b00      	cmp	r3, #0
 80255f6:	f340 80b6 	ble.w	8025766 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 80255fa:	f3c4 3303 	ubfx	r3, r4, #12, #4
 80255fe:	9308      	str	r3, [sp, #32]
 8025600:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025602:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8025606:	1423      	asrs	r3, r4, #16
 8025608:	ea4f 4026 	mov.w	r0, r6, asr #16
 802560c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8025610:	f100 813e 	bmi.w	8025890 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8025614:	f10c 3bff 	add.w	fp, ip, #4294967295
 8025618:	455b      	cmp	r3, fp
 802561a:	f280 8139 	bge.w	8025890 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802561e:	2800      	cmp	r0, #0
 8025620:	f2c0 8136 	blt.w	8025890 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8025624:	f10e 3bff 	add.w	fp, lr, #4294967295
 8025628:	4558      	cmp	r0, fp
 802562a:	f280 8131 	bge.w	8025890 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802562e:	9a06      	ldr	r2, [sp, #24]
 8025630:	fb00 3302 	mla	r3, r0, r2, r3
 8025634:	0858      	lsrs	r0, r3, #1
 8025636:	07da      	lsls	r2, r3, #31
 8025638:	f817 c000 	ldrb.w	ip, [r7, r0]
 802563c:	9a08      	ldr	r2, [sp, #32]
 802563e:	bf54      	ite	pl
 8025640:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025644:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025648:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802564c:	fa5f fc8c 	uxtb.w	ip, ip
 8025650:	2a00      	cmp	r2, #0
 8025652:	f000 80cb 	beq.w	80257ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8025656:	1c58      	adds	r0, r3, #1
 8025658:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 802565c:	07c0      	lsls	r0, r0, #31
 802565e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8025662:	bf54      	ite	pl
 8025664:	f00e 0e0f 	andpl.w	lr, lr, #15
 8025668:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 802566c:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8025670:	fa5f fe8e 	uxtb.w	lr, lr
 8025674:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8025678:	b1b9      	cbz	r1, 80256aa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802567a:	4453      	add	r3, sl
 802567c:	0858      	lsrs	r0, r3, #1
 802567e:	07da      	lsls	r2, r3, #31
 8025680:	5c38      	ldrb	r0, [r7, r0]
 8025682:	bf54      	ite	pl
 8025684:	f000 000f 	andpl.w	r0, r0, #15
 8025688:	1100      	asrmi	r0, r0, #4
 802568a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802568e:	b2c0      	uxtb	r0, r0
 8025690:	900a      	str	r0, [sp, #40]	; 0x28
 8025692:	1c58      	adds	r0, r3, #1
 8025694:	0843      	lsrs	r3, r0, #1
 8025696:	07c2      	lsls	r2, r0, #31
 8025698:	5cfb      	ldrb	r3, [r7, r3]
 802569a:	bf54      	ite	pl
 802569c:	f003 030f 	andpl.w	r3, r3, #15
 80256a0:	111b      	asrmi	r3, r3, #4
 80256a2:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80256a6:	b2db      	uxtb	r3, r3
 80256a8:	930e      	str	r3, [sp, #56]	; 0x38
 80256aa:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80256ae:	b289      	uxth	r1, r1
 80256b0:	fb02 f301 	mul.w	r3, r2, r1
 80256b4:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80256b8:	0112      	lsls	r2, r2, #4
 80256ba:	b289      	uxth	r1, r1
 80256bc:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 80256c0:	1a40      	subs	r0, r0, r1
 80256c2:	fa1f fe80 	uxth.w	lr, r0
 80256c6:	1ad2      	subs	r2, r2, r3
 80256c8:	980d      	ldr	r0, [sp, #52]	; 0x34
 80256ca:	b292      	uxth	r2, r2
 80256cc:	4342      	muls	r2, r0
 80256ce:	fb0c 2c0e 	mla	ip, ip, lr, r2
 80256d2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80256d4:	fb01 c102 	mla	r1, r1, r2, ip
 80256d8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80256da:	fb03 1302 	mla	r3, r3, r2, r1
 80256de:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80256e2:	2bff      	cmp	r3, #255	; 0xff
 80256e4:	f040 8093 	bne.w	802580e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 80256e8:	4bbe      	ldr	r3, [pc, #760]	; (80259e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80256ea:	681a      	ldr	r2, [r3, #0]
 80256ec:	4bbe      	ldr	r3, [pc, #760]	; (80259e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 80256ee:	0951      	lsrs	r1, r2, #5
 80256f0:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80256f4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80256f8:	430b      	orrs	r3, r1
 80256fa:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80256fe:	4313      	orrs	r3, r2
 8025700:	f8a8 3000 	strh.w	r3, [r8]
 8025704:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8025706:	441c      	add	r4, r3
 8025708:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802570a:	441e      	add	r6, r3
 802570c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802570e:	3b01      	subs	r3, #1
 8025710:	f108 0802 	add.w	r8, r8, #2
 8025714:	9309      	str	r3, [sp, #36]	; 0x24
 8025716:	e76c      	b.n	80255f2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8025718:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802571a:	441c      	add	r4, r3
 802571c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802571e:	3d01      	subs	r5, #1
 8025720:	441e      	add	r6, r3
 8025722:	f109 0902 	add.w	r9, r9, #2
 8025726:	e744      	b.n	80255b2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8025728:	d021      	beq.n	802576e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 802572a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 802572c:	1e6b      	subs	r3, r5, #1
 802572e:	fb00 4003 	mla	r0, r0, r3, r4
 8025732:	1400      	asrs	r0, r0, #16
 8025734:	f53f af59 	bmi.w	80255ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8025738:	3901      	subs	r1, #1
 802573a:	4288      	cmp	r0, r1
 802573c:	f6bf af55 	bge.w	80255ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8025740:	9920      	ldr	r1, [sp, #128]	; 0x80
 8025742:	fb01 6303 	mla	r3, r1, r3, r6
 8025746:	141b      	asrs	r3, r3, #16
 8025748:	f53f af4f 	bmi.w	80255ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802574c:	3a01      	subs	r2, #1
 802574e:	4293      	cmp	r3, r2
 8025750:	f6bf af4b 	bge.w	80255ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8025754:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8025758:	9308      	str	r3, [sp, #32]
 802575a:	46a8      	mov	r8, r5
 802575c:	46ce      	mov	lr, r9
 802575e:	f1b8 0f00 	cmp.w	r8, #0
 8025762:	f300 80b5 	bgt.w	80258d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8025766:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802576a:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 802576e:	9b07      	ldr	r3, [sp, #28]
 8025770:	2b00      	cmp	r3, #0
 8025772:	f340 817d 	ble.w	8025a70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8025776:	ee30 0a04 	vadd.f32	s0, s0, s8
 802577a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802577e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025782:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8025784:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025788:	ee31 1a05 	vadd.f32	s2, s2, s10
 802578c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025790:	eef0 6a62 	vmov.f32	s13, s5
 8025794:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025798:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802579c:	ee77 2a62 	vsub.f32	s5, s14, s5
 80257a0:	ee16 4a90 	vmov	r4, s13
 80257a4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80257a8:	eef0 6a43 	vmov.f32	s13, s6
 80257ac:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80257b0:	ee12 2a90 	vmov	r2, s5
 80257b4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80257b8:	fb92 f3f3 	sdiv	r3, r2, r3
 80257bc:	ee13 2a10 	vmov	r2, s6
 80257c0:	931f      	str	r3, [sp, #124]	; 0x7c
 80257c2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80257c4:	fb92 f3f3 	sdiv	r3, r2, r3
 80257c8:	9320      	str	r3, [sp, #128]	; 0x80
 80257ca:	9b07      	ldr	r3, [sp, #28]
 80257cc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80257ce:	3b01      	subs	r3, #1
 80257d0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80257d4:	9307      	str	r3, [sp, #28]
 80257d6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80257d8:	ee16 6a90 	vmov	r6, s13
 80257dc:	bf14      	ite	ne
 80257de:	461d      	movne	r5, r3
 80257e0:	4615      	moveq	r5, r2
 80257e2:	eeb0 3a67 	vmov.f32	s6, s15
 80257e6:	eef0 2a47 	vmov.f32	s5, s14
 80257ea:	e6d3      	b.n	8025594 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 80257ec:	2900      	cmp	r1, #0
 80257ee:	f43f af5c 	beq.w	80256aa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80257f2:	eb0a 0003 	add.w	r0, sl, r3
 80257f6:	0843      	lsrs	r3, r0, #1
 80257f8:	07c0      	lsls	r0, r0, #31
 80257fa:	5cfb      	ldrb	r3, [r7, r3]
 80257fc:	bf54      	ite	pl
 80257fe:	f003 030f 	andpl.w	r3, r3, #15
 8025802:	111b      	asrmi	r3, r3, #4
 8025804:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025808:	b2db      	uxtb	r3, r3
 802580a:	930a      	str	r3, [sp, #40]	; 0x28
 802580c:	e74d      	b.n	80256aa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802580e:	2b00      	cmp	r3, #0
 8025810:	f43f af78 	beq.w	8025704 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025814:	4a73      	ldr	r2, [pc, #460]	; (80259e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8025816:	f8b8 c000 	ldrh.w	ip, [r8]
 802581a:	6810      	ldr	r0, [r2, #0]
 802581c:	fa1f fe83 	uxth.w	lr, r3
 8025820:	ea4f 212c 	mov.w	r1, ip, asr #8
 8025824:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8025828:	43db      	mvns	r3, r3
 802582a:	b2db      	uxtb	r3, r3
 802582c:	fb12 f20e 	smulbb	r2, r2, lr
 8025830:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8025834:	fb01 2103 	mla	r1, r1, r3, r2
 8025838:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 802583c:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8025840:	b2c0      	uxtb	r0, r0
 8025842:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8025846:	fb1b fb0e 	smulbb	fp, fp, lr
 802584a:	b289      	uxth	r1, r1
 802584c:	fb10 fe0e 	smulbb	lr, r0, lr
 8025850:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8025854:	fa5f fc8c 	uxtb.w	ip, ip
 8025858:	fb02 b203 	mla	r2, r2, r3, fp
 802585c:	1c48      	adds	r0, r1, #1
 802585e:	fb0c e303 	mla	r3, ip, r3, lr
 8025862:	b292      	uxth	r2, r2
 8025864:	b29b      	uxth	r3, r3
 8025866:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 802586a:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 802586e:	f102 0b01 	add.w	fp, r2, #1
 8025872:	1c59      	adds	r1, r3, #1
 8025874:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8025878:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802587c:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8025880:	0952      	lsrs	r2, r2, #5
 8025882:	4301      	orrs	r1, r0
 8025884:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025888:	4311      	orrs	r1, r2
 802588a:	f8a8 1000 	strh.w	r1, [r8]
 802588e:	e739      	b.n	8025704 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025890:	f113 0b01 	adds.w	fp, r3, #1
 8025894:	f53f af36 	bmi.w	8025704 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025898:	45dc      	cmp	ip, fp
 802589a:	f6ff af33 	blt.w	8025704 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802589e:	f110 0b01 	adds.w	fp, r0, #1
 80258a2:	f53f af2f 	bmi.w	8025704 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80258a6:	45de      	cmp	lr, fp
 80258a8:	f6ff af2c 	blt.w	8025704 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80258ac:	9a08      	ldr	r2, [sp, #32]
 80258ae:	9302      	str	r3, [sp, #8]
 80258b0:	fa0f f38e 	sxth.w	r3, lr
 80258b4:	9301      	str	r3, [sp, #4]
 80258b6:	fa0f f38c 	sxth.w	r3, ip
 80258ba:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80258be:	9105      	str	r1, [sp, #20]
 80258c0:	9300      	str	r3, [sp, #0]
 80258c2:	463a      	mov	r2, r7
 80258c4:	4653      	mov	r3, sl
 80258c6:	4641      	mov	r1, r8
 80258c8:	9811      	ldr	r0, [sp, #68]	; 0x44
 80258ca:	f7ff fd73 	bl	80253b4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 80258ce:	e719      	b.n	8025704 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80258d0:	9906      	ldr	r1, [sp, #24]
 80258d2:	1422      	asrs	r2, r4, #16
 80258d4:	1433      	asrs	r3, r6, #16
 80258d6:	fb01 2303 	mla	r3, r1, r3, r2
 80258da:	085a      	lsrs	r2, r3, #1
 80258dc:	07d9      	lsls	r1, r3, #31
 80258de:	5cba      	ldrb	r2, [r7, r2]
 80258e0:	bf54      	ite	pl
 80258e2:	f002 020f 	andpl.w	r2, r2, #15
 80258e6:	1112      	asrmi	r2, r2, #4
 80258e8:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80258ec:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80258f0:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80258f4:	b2d2      	uxtb	r2, r2
 80258f6:	2800      	cmp	r0, #0
 80258f8:	d062      	beq.n	80259c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 80258fa:	f103 0a01 	add.w	sl, r3, #1
 80258fe:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8025902:	f01a 0f01 	tst.w	sl, #1
 8025906:	5c79      	ldrb	r1, [r7, r1]
 8025908:	bf0c      	ite	eq
 802590a:	f001 010f 	andeq.w	r1, r1, #15
 802590e:	1109      	asrne	r1, r1, #4
 8025910:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8025914:	b2c9      	uxtb	r1, r1
 8025916:	910f      	str	r1, [sp, #60]	; 0x3c
 8025918:	f1bc 0f00 	cmp.w	ip, #0
 802591c:	d019      	beq.n	8025952 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802591e:	9908      	ldr	r1, [sp, #32]
 8025920:	440b      	add	r3, r1
 8025922:	0859      	lsrs	r1, r3, #1
 8025924:	f013 0f01 	tst.w	r3, #1
 8025928:	5c79      	ldrb	r1, [r7, r1]
 802592a:	bf0c      	ite	eq
 802592c:	f001 010f 	andeq.w	r1, r1, #15
 8025930:	1109      	asrne	r1, r1, #4
 8025932:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8025936:	b2c9      	uxtb	r1, r1
 8025938:	3301      	adds	r3, #1
 802593a:	910b      	str	r1, [sp, #44]	; 0x2c
 802593c:	0859      	lsrs	r1, r3, #1
 802593e:	07db      	lsls	r3, r3, #31
 8025940:	5c79      	ldrb	r1, [r7, r1]
 8025942:	bf54      	ite	pl
 8025944:	f001 010f 	andpl.w	r1, r1, #15
 8025948:	1109      	asrmi	r1, r1, #4
 802594a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802594e:	b2c9      	uxtb	r1, r1
 8025950:	9110      	str	r1, [sp, #64]	; 0x40
 8025952:	b280      	uxth	r0, r0
 8025954:	fa1f fc8c 	uxth.w	ip, ip
 8025958:	fb00 f30c 	mul.w	r3, r0, ip
 802595c:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8025960:	0100      	lsls	r0, r0, #4
 8025962:	fa1f fc8c 	uxth.w	ip, ip
 8025966:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 802596a:	eba1 010c 	sub.w	r1, r1, ip
 802596e:	fa1f fa81 	uxth.w	sl, r1
 8025972:	1ac0      	subs	r0, r0, r3
 8025974:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8025976:	b280      	uxth	r0, r0
 8025978:	4348      	muls	r0, r1
 802597a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 802597c:	fb02 020a 	mla	r2, r2, sl, r0
 8025980:	fb0c 2c01 	mla	ip, ip, r1, r2
 8025984:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8025986:	fb03 c302 	mla	r3, r3, r2, ip
 802598a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802598e:	2bff      	cmp	r3, #255	; 0xff
 8025990:	d12c      	bne.n	80259ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8025992:	4b14      	ldr	r3, [pc, #80]	; (80259e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8025994:	681a      	ldr	r2, [r3, #0]
 8025996:	4b14      	ldr	r3, [pc, #80]	; (80259e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8025998:	0951      	lsrs	r1, r2, #5
 802599a:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802599e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80259a2:	430b      	orrs	r3, r1
 80259a4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80259a8:	4313      	orrs	r3, r2
 80259aa:	f8ae 3000 	strh.w	r3, [lr]
 80259ae:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80259b0:	441c      	add	r4, r3
 80259b2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80259b4:	f10e 0e02 	add.w	lr, lr, #2
 80259b8:	441e      	add	r6, r3
 80259ba:	f108 38ff 	add.w	r8, r8, #4294967295
 80259be:	e6ce      	b.n	802575e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80259c0:	f1bc 0f00 	cmp.w	ip, #0
 80259c4:	d0c5      	beq.n	8025952 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80259c6:	9908      	ldr	r1, [sp, #32]
 80259c8:	440b      	add	r3, r1
 80259ca:	0859      	lsrs	r1, r3, #1
 80259cc:	07db      	lsls	r3, r3, #31
 80259ce:	5c79      	ldrb	r1, [r7, r1]
 80259d0:	bf54      	ite	pl
 80259d2:	f001 010f 	andpl.w	r1, r1, #15
 80259d6:	1109      	asrmi	r1, r1, #4
 80259d8:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80259dc:	b2c9      	uxtb	r1, r1
 80259de:	910b      	str	r1, [sp, #44]	; 0x2c
 80259e0:	e7b7      	b.n	8025952 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80259e2:	bf00      	nop
 80259e4:	20012f34 	.word	0x20012f34
 80259e8:	fffff800 	.word	0xfffff800
 80259ec:	2b00      	cmp	r3, #0
 80259ee:	d0de      	beq.n	80259ae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80259f0:	4a21      	ldr	r2, [pc, #132]	; (8025a78 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 80259f2:	f8be c000 	ldrh.w	ip, [lr]
 80259f6:	6810      	ldr	r0, [r2, #0]
 80259f8:	fa1f fa83 	uxth.w	sl, r3
 80259fc:	ea4f 212c 	mov.w	r1, ip, asr #8
 8025a00:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8025a04:	43db      	mvns	r3, r3
 8025a06:	b2db      	uxtb	r3, r3
 8025a08:	fb12 f20a 	smulbb	r2, r2, sl
 8025a0c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8025a10:	fb01 2103 	mla	r1, r1, r3, r2
 8025a14:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8025a18:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8025a1c:	b2c0      	uxtb	r0, r0
 8025a1e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8025a22:	fa5f fc8c 	uxtb.w	ip, ip
 8025a26:	fb10 f00a 	smulbb	r0, r0, sl
 8025a2a:	fb0c 0003 	mla	r0, ip, r3, r0
 8025a2e:	b289      	uxth	r1, r1
 8025a30:	fb1b fb0a 	smulbb	fp, fp, sl
 8025a34:	b280      	uxth	r0, r0
 8025a36:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8025a3a:	fb02 b203 	mla	r2, r2, r3, fp
 8025a3e:	1c4b      	adds	r3, r1, #1
 8025a40:	f100 0b01 	add.w	fp, r0, #1
 8025a44:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8025a48:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8025a4c:	b292      	uxth	r2, r2
 8025a4e:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8025a52:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8025a56:	ea4b 0101 	orr.w	r1, fp, r1
 8025a5a:	f102 0b01 	add.w	fp, r2, #1
 8025a5e:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8025a62:	0952      	lsrs	r2, r2, #5
 8025a64:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025a68:	4311      	orrs	r1, r2
 8025a6a:	f8ae 1000 	strh.w	r1, [lr]
 8025a6e:	e79e      	b.n	80259ae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8025a70:	b013      	add	sp, #76	; 0x4c
 8025a72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025a76:	bf00      	nop
 8025a78:	20012f34 	.word	0x20012f34

08025a7c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8025a7c:	b570      	push	{r4, r5, r6, lr}
 8025a7e:	1208      	asrs	r0, r1, #8
 8025a80:	b29e      	uxth	r6, r3
 8025a82:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8025a86:	1213      	asrs	r3, r2, #8
 8025a88:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025a8c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025a90:	fb13 f305 	smulbb	r3, r3, r5
 8025a94:	fb10 f006 	smulbb	r0, r0, r6
 8025a98:	4418      	add	r0, r3
 8025a9a:	10cc      	asrs	r4, r1, #3
 8025a9c:	10d3      	asrs	r3, r2, #3
 8025a9e:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8025aa2:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8025aa6:	fb13 f305 	smulbb	r3, r3, r5
 8025aaa:	fb14 f406 	smulbb	r4, r4, r6
 8025aae:	00c9      	lsls	r1, r1, #3
 8025ab0:	00d2      	lsls	r2, r2, #3
 8025ab2:	441c      	add	r4, r3
 8025ab4:	b2d2      	uxtb	r2, r2
 8025ab6:	b2cb      	uxtb	r3, r1
 8025ab8:	fb12 f205 	smulbb	r2, r2, r5
 8025abc:	b280      	uxth	r0, r0
 8025abe:	fb13 f306 	smulbb	r3, r3, r6
 8025ac2:	4413      	add	r3, r2
 8025ac4:	1c42      	adds	r2, r0, #1
 8025ac6:	b29b      	uxth	r3, r3
 8025ac8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025acc:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 8025ad0:	1c58      	adds	r0, r3, #1
 8025ad2:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8025ad6:	b2a4      	uxth	r4, r4
 8025ad8:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025adc:	4310      	orrs	r0, r2
 8025ade:	1c62      	adds	r2, r4, #1
 8025ae0:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8025ae4:	0964      	lsrs	r4, r4, #5
 8025ae6:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8025aea:	4320      	orrs	r0, r4
 8025aec:	bd70      	pop	{r4, r5, r6, pc}
	...

08025af0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8025af0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025af4:	b08f      	sub	sp, #60	; 0x3c
 8025af6:	461c      	mov	r4, r3
 8025af8:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8025afc:	9004      	str	r0, [sp, #16]
 8025afe:	460d      	mov	r5, r1
 8025b00:	4616      	mov	r6, r2
 8025b02:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8025b04:	2f00      	cmp	r7, #0
 8025b06:	f000 80f6 	beq.w	8025cf6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8025b0a:	6820      	ldr	r0, [r4, #0]
 8025b0c:	6861      	ldr	r1, [r4, #4]
 8025b0e:	aa0a      	add	r2, sp, #40	; 0x28
 8025b10:	c203      	stmia	r2!, {r0, r1}
 8025b12:	6818      	ldr	r0, [r3, #0]
 8025b14:	6859      	ldr	r1, [r3, #4]
 8025b16:	aa0c      	add	r2, sp, #48	; 0x30
 8025b18:	c203      	stmia	r2!, {r0, r1}
 8025b1a:	a80a      	add	r0, sp, #40	; 0x28
 8025b1c:	f7ef fa9c 	bl	8015058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025b20:	4621      	mov	r1, r4
 8025b22:	a80c      	add	r0, sp, #48	; 0x30
 8025b24:	f7ef fadc 	bl	80150e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025b28:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8025b2c:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8025b30:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8025b34:	f002 0301 	and.w	r3, r2, #1
 8025b38:	9306      	str	r3, [sp, #24]
 8025b3a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025b3e:	f003 0101 	and.w	r1, r3, #1
 8025b42:	9105      	str	r1, [sp, #20]
 8025b44:	9805      	ldr	r0, [sp, #20]
 8025b46:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8025b4a:	4403      	add	r3, r0
 8025b4c:	fb01 2303 	mla	r3, r1, r3, r2
 8025b50:	f04f 0802 	mov.w	r8, #2
 8025b54:	fb93 f3f8 	sdiv	r3, r3, r8
 8025b58:	441d      	add	r5, r3
 8025b5a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8025b5e:	441a      	add	r2, r3
 8025b60:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8025b64:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8025b68:	4419      	add	r1, r3
 8025b6a:	4b64      	ldr	r3, [pc, #400]	; (8025cfc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8025b6c:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8025b70:	6818      	ldr	r0, [r3, #0]
 8025b72:	6803      	ldr	r3, [r0, #0]
 8025b74:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8025b76:	4798      	blx	r3
 8025b78:	4a61      	ldr	r2, [pc, #388]	; (8025d00 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8025b7a:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8025b7e:	8813      	ldrh	r3, [r2, #0]
 8025b80:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 8025b84:	2fff      	cmp	r7, #255	; 0xff
 8025b86:	fb03 a404 	mla	r4, r3, r4, sl
 8025b8a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025b8e:	f106 0604 	add.w	r6, r6, #4
 8025b92:	4611      	mov	r1, r2
 8025b94:	fb03 fb0b 	mul.w	fp, r3, fp
 8025b98:	d06b      	beq.n	8025c72 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 8025b9a:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 8025b9e:	9303      	str	r3, [sp, #12]
 8025ba0:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8025ba4:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8025ba8:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8025bac:	9b07      	ldr	r3, [sp, #28]
 8025bae:	42a3      	cmp	r3, r4
 8025bb0:	f240 809c 	bls.w	8025cec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8025bb4:	9b06      	ldr	r3, [sp, #24]
 8025bb6:	2b00      	cmp	r3, #0
 8025bb8:	d039      	beq.n	8025c2e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8025bba:	782b      	ldrb	r3, [r5, #0]
 8025bbc:	8822      	ldrh	r2, [r4, #0]
 8025bbe:	9804      	ldr	r0, [sp, #16]
 8025bc0:	f003 030f 	and.w	r3, r3, #15
 8025bc4:	f105 0801 	add.w	r8, r5, #1
 8025bc8:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8025bcc:	9b03      	ldr	r3, [sp, #12]
 8025bce:	9300      	str	r3, [sp, #0]
 8025bd0:	463b      	mov	r3, r7
 8025bd2:	f7ff ff53 	bl	8025a7c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025bd6:	f824 0b02 	strh.w	r0, [r4], #2
 8025bda:	f109 3bff 	add.w	fp, r9, #4294967295
 8025bde:	f1bb 0f01 	cmp.w	fp, #1
 8025be2:	46a2      	mov	sl, r4
 8025be4:	f104 0404 	add.w	r4, r4, #4
 8025be8:	dd24      	ble.n	8025c34 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 8025bea:	f898 3000 	ldrb.w	r3, [r8]
 8025bee:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8025bf2:	9804      	ldr	r0, [sp, #16]
 8025bf4:	091b      	lsrs	r3, r3, #4
 8025bf6:	f1ab 0b02 	sub.w	fp, fp, #2
 8025bfa:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8025bfe:	9b03      	ldr	r3, [sp, #12]
 8025c00:	9300      	str	r3, [sp, #0]
 8025c02:	463b      	mov	r3, r7
 8025c04:	f7ff ff3a 	bl	8025a7c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025c08:	f824 0c04 	strh.w	r0, [r4, #-4]
 8025c0c:	f818 3b01 	ldrb.w	r3, [r8], #1
 8025c10:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8025c14:	9804      	ldr	r0, [sp, #16]
 8025c16:	f003 030f 	and.w	r3, r3, #15
 8025c1a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8025c1e:	9b03      	ldr	r3, [sp, #12]
 8025c20:	9300      	str	r3, [sp, #0]
 8025c22:	463b      	mov	r3, r7
 8025c24:	f7ff ff2a 	bl	8025a7c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025c28:	f824 0c02 	strh.w	r0, [r4, #-2]
 8025c2c:	e7d7      	b.n	8025bde <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8025c2e:	46a8      	mov	r8, r5
 8025c30:	46cb      	mov	fp, r9
 8025c32:	e7d4      	b.n	8025bde <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8025c34:	d10e      	bne.n	8025c54 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 8025c36:	f898 3000 	ldrb.w	r3, [r8]
 8025c3a:	f8ba 2000 	ldrh.w	r2, [sl]
 8025c3e:	9804      	ldr	r0, [sp, #16]
 8025c40:	091b      	lsrs	r3, r3, #4
 8025c42:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8025c46:	9b03      	ldr	r3, [sp, #12]
 8025c48:	9300      	str	r3, [sp, #0]
 8025c4a:	463b      	mov	r3, r7
 8025c4c:	f7ff ff16 	bl	8025a7c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025c50:	f82a 0b02 	strh.w	r0, [sl], #2
 8025c54:	9b08      	ldr	r3, [sp, #32]
 8025c56:	9a05      	ldr	r2, [sp, #20]
 8025c58:	881c      	ldrh	r4, [r3, #0]
 8025c5a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025c5e:	eba4 0409 	sub.w	r4, r4, r9
 8025c62:	4413      	add	r3, r2
 8025c64:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8025c68:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025c6a:	fb93 f3f2 	sdiv	r3, r3, r2
 8025c6e:	441d      	add	r5, r3
 8025c70:	e79c      	b.n	8025bac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 8025c72:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8025c76:	45a3      	cmp	fp, r4
 8025c78:	d938      	bls.n	8025cec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8025c7a:	9b06      	ldr	r3, [sp, #24]
 8025c7c:	b1f3      	cbz	r3, 8025cbc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 8025c7e:	782b      	ldrb	r3, [r5, #0]
 8025c80:	f003 030f 	and.w	r3, r3, #15
 8025c84:	1c6a      	adds	r2, r5, #1
 8025c86:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025c8a:	8023      	strh	r3, [r4, #0]
 8025c8c:	f109 30ff 	add.w	r0, r9, #4294967295
 8025c90:	3402      	adds	r4, #2
 8025c92:	2801      	cmp	r0, #1
 8025c94:	4623      	mov	r3, r4
 8025c96:	f104 0404 	add.w	r4, r4, #4
 8025c9a:	dd12      	ble.n	8025cc2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8025c9c:	7813      	ldrb	r3, [r2, #0]
 8025c9e:	091b      	lsrs	r3, r3, #4
 8025ca0:	3802      	subs	r0, #2
 8025ca2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025ca6:	f824 3c04 	strh.w	r3, [r4, #-4]
 8025caa:	f812 3b01 	ldrb.w	r3, [r2], #1
 8025cae:	f003 030f 	and.w	r3, r3, #15
 8025cb2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025cb6:	f824 3c02 	strh.w	r3, [r4, #-2]
 8025cba:	e7ea      	b.n	8025c92 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8025cbc:	462a      	mov	r2, r5
 8025cbe:	4648      	mov	r0, r9
 8025cc0:	e7e7      	b.n	8025c92 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8025cc2:	d106      	bne.n	8025cd2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8025cc4:	7812      	ldrb	r2, [r2, #0]
 8025cc6:	0912      	lsrs	r2, r2, #4
 8025cc8:	3302      	adds	r3, #2
 8025cca:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8025cce:	f823 2c02 	strh.w	r2, [r3, #-2]
 8025cd2:	880c      	ldrh	r4, [r1, #0]
 8025cd4:	9a05      	ldr	r2, [sp, #20]
 8025cd6:	eba4 0409 	sub.w	r4, r4, r9
 8025cda:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8025cde:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025ce2:	4413      	add	r3, r2
 8025ce4:	fb93 f3f8 	sdiv	r3, r3, r8
 8025ce8:	441d      	add	r5, r3
 8025cea:	e7c4      	b.n	8025c76 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8025cec:	4b03      	ldr	r3, [pc, #12]	; (8025cfc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8025cee:	6818      	ldr	r0, [r3, #0]
 8025cf0:	6803      	ldr	r3, [r0, #0]
 8025cf2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025cf4:	4798      	blx	r3
 8025cf6:	b00f      	add	sp, #60	; 0x3c
 8025cf8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025cfc:	20012f24 	.word	0x20012f24
 8025d00:	20012f1e 	.word	0x20012f1e

08025d04 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8025d04:	b5f0      	push	{r4, r5, r6, r7, lr}
 8025d06:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8025d0a:	2dff      	cmp	r5, #255	; 0xff
 8025d0c:	ea4f 2711 	mov.w	r7, r1, lsr #8
 8025d10:	d10c      	bne.n	8025d2c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8025d12:	2bff      	cmp	r3, #255	; 0xff
 8025d14:	d10a      	bne.n	8025d2c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8025d16:	4b25      	ldr	r3, [pc, #148]	; (8025dac <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8025d18:	0948      	lsrs	r0, r1, #5
 8025d1a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025d1e:	403b      	ands	r3, r7
 8025d20:	4318      	orrs	r0, r3
 8025d22:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8025d26:	4308      	orrs	r0, r1
 8025d28:	b280      	uxth	r0, r0
 8025d2a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8025d2c:	fb15 f503 	smulbb	r5, r5, r3
 8025d30:	b2ab      	uxth	r3, r5
 8025d32:	1c5d      	adds	r5, r3, #1
 8025d34:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8025d38:	1214      	asrs	r4, r2, #8
 8025d3a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8025d3e:	fa1f fc85 	uxth.w	ip, r5
 8025d42:	10d6      	asrs	r6, r2, #3
 8025d44:	00d0      	lsls	r0, r2, #3
 8025d46:	43ed      	mvns	r5, r5
 8025d48:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8025d4c:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8025d50:	b2eb      	uxtb	r3, r5
 8025d52:	b2c0      	uxtb	r0, r0
 8025d54:	fb12 f20c 	smulbb	r2, r2, ip
 8025d58:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8025d5c:	fb04 2403 	mla	r4, r4, r3, r2
 8025d60:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8025d64:	b2c8      	uxtb	r0, r1
 8025d66:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8025d6a:	b2fd      	uxtb	r5, r7
 8025d6c:	fb10 f00c 	smulbb	r0, r0, ip
 8025d70:	b2a4      	uxth	r4, r4
 8025d72:	fb02 0003 	mla	r0, r2, r3, r0
 8025d76:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8025d7a:	fb15 f50c 	smulbb	r5, r5, ip
 8025d7e:	fb06 5503 	mla	r5, r6, r3, r5
 8025d82:	b283      	uxth	r3, r0
 8025d84:	1c60      	adds	r0, r4, #1
 8025d86:	b2ad      	uxth	r5, r5
 8025d88:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8025d8c:	1c58      	adds	r0, r3, #1
 8025d8e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8025d92:	1c6b      	adds	r3, r5, #1
 8025d94:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8025d98:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8025d9c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025da0:	096d      	lsrs	r5, r5, #5
 8025da2:	4320      	orrs	r0, r4
 8025da4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025da8:	4328      	orrs	r0, r5
 8025daa:	e7be      	b.n	8025d2a <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8025dac:	00fff800 	.word	0x00fff800

08025db0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8025db0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025db4:	461c      	mov	r4, r3
 8025db6:	b08d      	sub	sp, #52	; 0x34
 8025db8:	460d      	mov	r5, r1
 8025dba:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8025dbc:	6861      	ldr	r1, [r4, #4]
 8025dbe:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 8025dc2:	4680      	mov	r8, r0
 8025dc4:	6820      	ldr	r0, [r4, #0]
 8025dc6:	4616      	mov	r6, r2
 8025dc8:	aa08      	add	r2, sp, #32
 8025dca:	c203      	stmia	r2!, {r0, r1}
 8025dcc:	6818      	ldr	r0, [r3, #0]
 8025dce:	6859      	ldr	r1, [r3, #4]
 8025dd0:	aa0a      	add	r2, sp, #40	; 0x28
 8025dd2:	c203      	stmia	r2!, {r0, r1}
 8025dd4:	a808      	add	r0, sp, #32
 8025dd6:	f7ef f93f 	bl	8015058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025dda:	4621      	mov	r1, r4
 8025ddc:	a80a      	add	r0, sp, #40	; 0x28
 8025dde:	f7ef f97f 	bl	80150e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025de2:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8025de6:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 8025dea:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8025dee:	f002 0301 	and.w	r3, r2, #1
 8025df2:	9303      	str	r3, [sp, #12]
 8025df4:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8025df8:	f003 0101 	and.w	r1, r3, #1
 8025dfc:	9102      	str	r1, [sp, #8]
 8025dfe:	9802      	ldr	r0, [sp, #8]
 8025e00:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8025e04:	4403      	add	r3, r0
 8025e06:	fb01 2303 	mla	r3, r1, r3, r2
 8025e0a:	f04f 0a02 	mov.w	sl, #2
 8025e0e:	fb93 f3fa 	sdiv	r3, r3, sl
 8025e12:	441d      	add	r5, r3
 8025e14:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8025e18:	441a      	add	r2, r3
 8025e1a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8025e1e:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8025e22:	4a3f      	ldr	r2, [pc, #252]	; (8025f20 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8025e24:	9205      	str	r2, [sp, #20]
 8025e26:	4419      	add	r1, r3
 8025e28:	6810      	ldr	r0, [r2, #0]
 8025e2a:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 8025e2e:	6803      	ldr	r3, [r0, #0]
 8025e30:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8025e32:	4798      	blx	r3
 8025e34:	4b3b      	ldr	r3, [pc, #236]	; (8025f24 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8025e36:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8025e3a:	8819      	ldrh	r1, [r3, #0]
 8025e3c:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 8025e40:	fb01 c404 	mla	r4, r1, r4, ip
 8025e44:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025e48:	434f      	muls	r7, r1
 8025e4a:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8025e4e:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 8025e52:	3604      	adds	r6, #4
 8025e54:	9204      	str	r2, [sp, #16]
 8025e56:	9b04      	ldr	r3, [sp, #16]
 8025e58:	429c      	cmp	r4, r3
 8025e5a:	d258      	bcs.n	8025f0e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8025e5c:	9b03      	ldr	r3, [sp, #12]
 8025e5e:	2b00      	cmp	r3, #0
 8025e60:	d034      	beq.n	8025ecc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 8025e62:	782b      	ldrb	r3, [r5, #0]
 8025e64:	f003 030f 	and.w	r3, r3, #15
 8025e68:	1c6f      	adds	r7, r5, #1
 8025e6a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025e6e:	0e0b      	lsrs	r3, r1, #24
 8025e70:	d006      	beq.n	8025e80 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 8025e72:	8822      	ldrh	r2, [r4, #0]
 8025e74:	9300      	str	r3, [sp, #0]
 8025e76:	4640      	mov	r0, r8
 8025e78:	464b      	mov	r3, r9
 8025e7a:	f7ff ff43 	bl	8025d04 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025e7e:	8020      	strh	r0, [r4, #0]
 8025e80:	3402      	adds	r4, #2
 8025e82:	f10b 3aff 	add.w	sl, fp, #4294967295
 8025e86:	f1ba 0f01 	cmp.w	sl, #1
 8025e8a:	dd22      	ble.n	8025ed2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8025e8c:	783b      	ldrb	r3, [r7, #0]
 8025e8e:	091b      	lsrs	r3, r3, #4
 8025e90:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025e94:	0e0b      	lsrs	r3, r1, #24
 8025e96:	d006      	beq.n	8025ea6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8025e98:	8822      	ldrh	r2, [r4, #0]
 8025e9a:	9300      	str	r3, [sp, #0]
 8025e9c:	4640      	mov	r0, r8
 8025e9e:	464b      	mov	r3, r9
 8025ea0:	f7ff ff30 	bl	8025d04 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025ea4:	8020      	strh	r0, [r4, #0]
 8025ea6:	f817 3b01 	ldrb.w	r3, [r7], #1
 8025eaa:	f003 030f 	and.w	r3, r3, #15
 8025eae:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025eb2:	0e0b      	lsrs	r3, r1, #24
 8025eb4:	d006      	beq.n	8025ec4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8025eb6:	8862      	ldrh	r2, [r4, #2]
 8025eb8:	9300      	str	r3, [sp, #0]
 8025eba:	4640      	mov	r0, r8
 8025ebc:	464b      	mov	r3, r9
 8025ebe:	f7ff ff21 	bl	8025d04 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025ec2:	8060      	strh	r0, [r4, #2]
 8025ec4:	3404      	adds	r4, #4
 8025ec6:	f1aa 0a02 	sub.w	sl, sl, #2
 8025eca:	e7dc      	b.n	8025e86 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8025ecc:	462f      	mov	r7, r5
 8025ece:	46da      	mov	sl, fp
 8025ed0:	e7d9      	b.n	8025e86 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8025ed2:	d10d      	bne.n	8025ef0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8025ed4:	783b      	ldrb	r3, [r7, #0]
 8025ed6:	091b      	lsrs	r3, r3, #4
 8025ed8:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025edc:	0e0b      	lsrs	r3, r1, #24
 8025ede:	d006      	beq.n	8025eee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8025ee0:	8822      	ldrh	r2, [r4, #0]
 8025ee2:	9300      	str	r3, [sp, #0]
 8025ee4:	4640      	mov	r0, r8
 8025ee6:	464b      	mov	r3, r9
 8025ee8:	f7ff ff0c 	bl	8025d04 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025eec:	8020      	strh	r0, [r4, #0]
 8025eee:	3402      	adds	r4, #2
 8025ef0:	9b06      	ldr	r3, [sp, #24]
 8025ef2:	9a02      	ldr	r2, [sp, #8]
 8025ef4:	881b      	ldrh	r3, [r3, #0]
 8025ef6:	eba3 030b 	sub.w	r3, r3, fp
 8025efa:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8025efe:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8025f02:	4413      	add	r3, r2
 8025f04:	9a07      	ldr	r2, [sp, #28]
 8025f06:	fb93 f3f2 	sdiv	r3, r3, r2
 8025f0a:	441d      	add	r5, r3
 8025f0c:	e7a3      	b.n	8025e56 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 8025f0e:	9b05      	ldr	r3, [sp, #20]
 8025f10:	6818      	ldr	r0, [r3, #0]
 8025f12:	6803      	ldr	r3, [r0, #0]
 8025f14:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025f16:	4798      	blx	r3
 8025f18:	b00d      	add	sp, #52	; 0x34
 8025f1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025f1e:	bf00      	nop
 8025f20:	20012f24 	.word	0x20012f24
 8025f24:	20012f1e 	.word	0x20012f1e

08025f28 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8025f28:	b570      	push	{r4, r5, r6, lr}
 8025f2a:	1214      	asrs	r4, r2, #8
 8025f2c:	788d      	ldrb	r5, [r1, #2]
 8025f2e:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8025f32:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8025f36:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8025f3a:	fb15 f503 	smulbb	r5, r5, r3
 8025f3e:	fb04 5506 	mla	r5, r4, r6, r5
 8025f42:	10d0      	asrs	r0, r2, #3
 8025f44:	784c      	ldrb	r4, [r1, #1]
 8025f46:	7809      	ldrb	r1, [r1, #0]
 8025f48:	00d2      	lsls	r2, r2, #3
 8025f4a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025f4e:	b2d2      	uxtb	r2, r2
 8025f50:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8025f54:	fb14 f403 	smulbb	r4, r4, r3
 8025f58:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8025f5c:	fb11 f303 	smulbb	r3, r1, r3
 8025f60:	fb00 4406 	mla	r4, r0, r6, r4
 8025f64:	fb02 3306 	mla	r3, r2, r6, r3
 8025f68:	b2ad      	uxth	r5, r5
 8025f6a:	b29b      	uxth	r3, r3
 8025f6c:	b2a4      	uxth	r4, r4
 8025f6e:	1c68      	adds	r0, r5, #1
 8025f70:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8025f74:	1c62      	adds	r2, r4, #1
 8025f76:	1c58      	adds	r0, r3, #1
 8025f78:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8025f7c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8025f80:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8025f84:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025f88:	0964      	lsrs	r4, r4, #5
 8025f8a:	4328      	orrs	r0, r5
 8025f8c:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8025f90:	4320      	orrs	r0, r4
 8025f92:	bd70      	pop	{r4, r5, r6, pc}

08025f94 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8025f94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025f98:	b08f      	sub	sp, #60	; 0x3c
 8025f9a:	461c      	mov	r4, r3
 8025f9c:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8025fa0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8025fa2:	4682      	mov	sl, r0
 8025fa4:	460e      	mov	r6, r1
 8025fa6:	4615      	mov	r5, r2
 8025fa8:	2f00      	cmp	r7, #0
 8025faa:	f000 8142 	beq.w	8026232 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 8025fae:	6820      	ldr	r0, [r4, #0]
 8025fb0:	6861      	ldr	r1, [r4, #4]
 8025fb2:	aa0a      	add	r2, sp, #40	; 0x28
 8025fb4:	c203      	stmia	r2!, {r0, r1}
 8025fb6:	6818      	ldr	r0, [r3, #0]
 8025fb8:	6859      	ldr	r1, [r3, #4]
 8025fba:	aa0c      	add	r2, sp, #48	; 0x30
 8025fbc:	c203      	stmia	r2!, {r0, r1}
 8025fbe:	a80a      	add	r0, sp, #40	; 0x28
 8025fc0:	f7ef f84a 	bl	8015058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025fc4:	4621      	mov	r1, r4
 8025fc6:	a80c      	add	r0, sp, #48	; 0x30
 8025fc8:	f7ef f88a 	bl	80150e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025fcc:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8025fd0:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8025fd4:	f002 0301 	and.w	r3, r2, #1
 8025fd8:	9306      	str	r3, [sp, #24]
 8025fda:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025fde:	f003 0101 	and.w	r1, r3, #1
 8025fe2:	9105      	str	r1, [sp, #20]
 8025fe4:	9805      	ldr	r0, [sp, #20]
 8025fe6:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8025fea:	4403      	add	r3, r0
 8025fec:	fb01 2303 	mla	r3, r1, r3, r2
 8025ff0:	f04f 0802 	mov.w	r8, #2
 8025ff4:	fb93 f3f8 	sdiv	r3, r3, r8
 8025ff8:	441e      	add	r6, r3
 8025ffa:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8025ffe:	441a      	add	r2, r3
 8026000:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8026004:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8026008:	4419      	add	r1, r3
 802600a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 802600e:	9303      	str	r3, [sp, #12]
 8026010:	4b89      	ldr	r3, [pc, #548]	; (8026238 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8026012:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8026016:	6818      	ldr	r0, [r3, #0]
 8026018:	6803      	ldr	r3, [r0, #0]
 802601a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802601c:	4798      	blx	r3
 802601e:	4a87      	ldr	r2, [pc, #540]	; (802623c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8026020:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8026024:	8813      	ldrh	r3, [r2, #0]
 8026026:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 802602a:	2fff      	cmp	r7, #255	; 0xff
 802602c:	fb03 9404 	mla	r4, r3, r4, r9
 8026030:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8026034:	f105 0504 	add.w	r5, r5, #4
 8026038:	4694      	mov	ip, r2
 802603a:	fb03 f30b 	mul.w	r3, r3, fp
 802603e:	d071      	beq.n	8026124 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8026040:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8026044:	43f9      	mvns	r1, r7
 8026046:	e9cd 3207 	strd	r3, r2, [sp, #28]
 802604a:	b2c9      	uxtb	r1, r1
 802604c:	9104      	str	r1, [sp, #16]
 802604e:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8026052:	9b07      	ldr	r3, [sp, #28]
 8026054:	42a3      	cmp	r3, r4
 8026056:	f240 80e7 	bls.w	8026228 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 802605a:	9b06      	ldr	r3, [sp, #24]
 802605c:	2b00      	cmp	r3, #0
 802605e:	d03d      	beq.n	80260dc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8026060:	7831      	ldrb	r1, [r6, #0]
 8026062:	9b04      	ldr	r3, [sp, #16]
 8026064:	8822      	ldrh	r2, [r4, #0]
 8026066:	9300      	str	r3, [sp, #0]
 8026068:	f001 010f 	and.w	r1, r1, #15
 802606c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026070:	463b      	mov	r3, r7
 8026072:	4429      	add	r1, r5
 8026074:	4650      	mov	r0, sl
 8026076:	f7ff ff57 	bl	8025f28 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802607a:	9b03      	ldr	r3, [sp, #12]
 802607c:	f824 0b02 	strh.w	r0, [r4], #2
 8026080:	f106 0801 	add.w	r8, r6, #1
 8026084:	f103 3bff 	add.w	fp, r3, #4294967295
 8026088:	f1bb 0f01 	cmp.w	fp, #1
 802608c:	46a1      	mov	r9, r4
 802608e:	f104 0404 	add.w	r4, r4, #4
 8026092:	dd27      	ble.n	80260e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8026094:	f898 1000 	ldrb.w	r1, [r8]
 8026098:	9b04      	ldr	r3, [sp, #16]
 802609a:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802609e:	9300      	str	r3, [sp, #0]
 80260a0:	0909      	lsrs	r1, r1, #4
 80260a2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80260a6:	463b      	mov	r3, r7
 80260a8:	4429      	add	r1, r5
 80260aa:	4650      	mov	r0, sl
 80260ac:	f7ff ff3c 	bl	8025f28 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80260b0:	f824 0c04 	strh.w	r0, [r4, #-4]
 80260b4:	f818 1b01 	ldrb.w	r1, [r8], #1
 80260b8:	9b04      	ldr	r3, [sp, #16]
 80260ba:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80260be:	9300      	str	r3, [sp, #0]
 80260c0:	f001 010f 	and.w	r1, r1, #15
 80260c4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80260c8:	463b      	mov	r3, r7
 80260ca:	4429      	add	r1, r5
 80260cc:	4650      	mov	r0, sl
 80260ce:	f7ff ff2b 	bl	8025f28 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80260d2:	f1ab 0b02 	sub.w	fp, fp, #2
 80260d6:	f824 0c02 	strh.w	r0, [r4, #-2]
 80260da:	e7d5      	b.n	8026088 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80260dc:	46b0      	mov	r8, r6
 80260de:	f8dd b00c 	ldr.w	fp, [sp, #12]
 80260e2:	e7d1      	b.n	8026088 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80260e4:	d10f      	bne.n	8026106 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 80260e6:	f898 1000 	ldrb.w	r1, [r8]
 80260ea:	9b04      	ldr	r3, [sp, #16]
 80260ec:	f8b9 2000 	ldrh.w	r2, [r9]
 80260f0:	9300      	str	r3, [sp, #0]
 80260f2:	0909      	lsrs	r1, r1, #4
 80260f4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80260f8:	463b      	mov	r3, r7
 80260fa:	4429      	add	r1, r5
 80260fc:	4650      	mov	r0, sl
 80260fe:	f7ff ff13 	bl	8025f28 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8026102:	f829 0b02 	strh.w	r0, [r9], #2
 8026106:	9b08      	ldr	r3, [sp, #32]
 8026108:	9a05      	ldr	r2, [sp, #20]
 802610a:	881c      	ldrh	r4, [r3, #0]
 802610c:	9b03      	ldr	r3, [sp, #12]
 802610e:	1ae4      	subs	r4, r4, r3
 8026110:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8026114:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8026118:	4413      	add	r3, r2
 802611a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802611c:	fb93 f3f2 	sdiv	r3, r3, r2
 8026120:	441e      	add	r6, r3
 8026122:	e796      	b.n	8026052 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8026124:	4f46      	ldr	r7, [pc, #280]	; (8026240 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8026126:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802612a:	42a3      	cmp	r3, r4
 802612c:	d97c      	bls.n	8026228 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 802612e:	9a06      	ldr	r2, [sp, #24]
 8026130:	2a00      	cmp	r2, #0
 8026132:	d054      	beq.n	80261de <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8026134:	7830      	ldrb	r0, [r6, #0]
 8026136:	f000 000f 	and.w	r0, r0, #15
 802613a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802613e:	eb05 0e00 	add.w	lr, r5, r0
 8026142:	5c28      	ldrb	r0, [r5, r0]
 8026144:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8026148:	f89e e001 	ldrb.w	lr, [lr, #1]
 802614c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8026150:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8026154:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8026158:	ea42 020e 	orr.w	r2, r2, lr
 802615c:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8026160:	f824 2b02 	strh.w	r2, [r4], #2
 8026164:	9a03      	ldr	r2, [sp, #12]
 8026166:	1c71      	adds	r1, r6, #1
 8026168:	f102 3eff 	add.w	lr, r2, #4294967295
 802616c:	f1be 0f01 	cmp.w	lr, #1
 8026170:	4620      	mov	r0, r4
 8026172:	f104 0404 	add.w	r4, r4, #4
 8026176:	dd36      	ble.n	80261e6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8026178:	7808      	ldrb	r0, [r1, #0]
 802617a:	0900      	lsrs	r0, r0, #4
 802617c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8026180:	eb05 0a00 	add.w	sl, r5, r0
 8026184:	f1ae 0e02 	sub.w	lr, lr, #2
 8026188:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802618c:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8026190:	00d2      	lsls	r2, r2, #3
 8026192:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8026196:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802619a:	ea49 0202 	orr.w	r2, r9, r2
 802619e:	f815 9000 	ldrb.w	r9, [r5, r0]
 80261a2:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80261a6:	f824 2c04 	strh.w	r2, [r4, #-4]
 80261aa:	f811 0b01 	ldrb.w	r0, [r1], #1
 80261ae:	f000 000f 	and.w	r0, r0, #15
 80261b2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80261b6:	eb05 0a00 	add.w	sl, r5, r0
 80261ba:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80261be:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80261c2:	00d2      	lsls	r2, r2, #3
 80261c4:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80261c8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80261cc:	ea49 0202 	orr.w	r2, r9, r2
 80261d0:	f815 9000 	ldrb.w	r9, [r5, r0]
 80261d4:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80261d8:	f824 2c02 	strh.w	r2, [r4, #-2]
 80261dc:	e7c6      	b.n	802616c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 80261de:	4631      	mov	r1, r6
 80261e0:	f8dd e00c 	ldr.w	lr, [sp, #12]
 80261e4:	e7c2      	b.n	802616c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 80261e6:	d111      	bne.n	802620c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 80261e8:	7809      	ldrb	r1, [r1, #0]
 80261ea:	0909      	lsrs	r1, r1, #4
 80261ec:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80261f0:	186c      	adds	r4, r5, r1
 80261f2:	5c69      	ldrb	r1, [r5, r1]
 80261f4:	78a2      	ldrb	r2, [r4, #2]
 80261f6:	7864      	ldrb	r4, [r4, #1]
 80261f8:	00e4      	lsls	r4, r4, #3
 80261fa:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80261fe:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8026202:	4322      	orrs	r2, r4
 8026204:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8026208:	f820 2b02 	strh.w	r2, [r0], #2
 802620c:	9a03      	ldr	r2, [sp, #12]
 802620e:	f8bc 4000 	ldrh.w	r4, [ip]
 8026212:	9905      	ldr	r1, [sp, #20]
 8026214:	1aa4      	subs	r4, r4, r2
 8026216:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 802621a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802621e:	440a      	add	r2, r1
 8026220:	fb92 f2f8 	sdiv	r2, r2, r8
 8026224:	4416      	add	r6, r2
 8026226:	e780      	b.n	802612a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8026228:	4b03      	ldr	r3, [pc, #12]	; (8026238 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802622a:	6818      	ldr	r0, [r3, #0]
 802622c:	6803      	ldr	r3, [r0, #0]
 802622e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026230:	4798      	blx	r3
 8026232:	b00f      	add	sp, #60	; 0x3c
 8026234:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026238:	20012f24 	.word	0x20012f24
 802623c:	20012f1e 	.word	0x20012f1e
 8026240:	fffff800 	.word	0xfffff800

08026244 <CRC_Lock>:
 8026244:	b530      	push	{r4, r5, lr}
 8026246:	4a20      	ldr	r2, [pc, #128]	; (80262c8 <CRC_Lock+0x84>)
 8026248:	6813      	ldr	r3, [r2, #0]
 802624a:	f023 0301 	bic.w	r3, r3, #1
 802624e:	6013      	str	r3, [r2, #0]
 8026250:	4b1e      	ldr	r3, [pc, #120]	; (80262cc <CRC_Lock+0x88>)
 8026252:	681a      	ldr	r2, [r3, #0]
 8026254:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8026258:	4022      	ands	r2, r4
 802625a:	f24c 2540 	movw	r5, #49728	; 0xc240
 802625e:	42aa      	cmp	r2, r5
 8026260:	d005      	beq.n	802626e <CRC_Lock+0x2a>
 8026262:	681b      	ldr	r3, [r3, #0]
 8026264:	f24c 2270 	movw	r2, #49776	; 0xc270
 8026268:	4023      	ands	r3, r4
 802626a:	4293      	cmp	r3, r2
 802626c:	d124      	bne.n	80262b8 <CRC_Lock+0x74>
 802626e:	4b18      	ldr	r3, [pc, #96]	; (80262d0 <CRC_Lock+0x8c>)
 8026270:	681b      	ldr	r3, [r3, #0]
 8026272:	bb0b      	cbnz	r3, 80262b8 <CRC_Lock+0x74>
 8026274:	4b17      	ldr	r3, [pc, #92]	; (80262d4 <CRC_Lock+0x90>)
 8026276:	681a      	ldr	r2, [r3, #0]
 8026278:	f3c2 020b 	ubfx	r2, r2, #0, #12
 802627c:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8026280:	d00d      	beq.n	802629e <CRC_Lock+0x5a>
 8026282:	681a      	ldr	r2, [r3, #0]
 8026284:	f240 4483 	movw	r4, #1155	; 0x483
 8026288:	f3c2 020b 	ubfx	r2, r2, #0, #12
 802628c:	42a2      	cmp	r2, r4
 802628e:	d006      	beq.n	802629e <CRC_Lock+0x5a>
 8026290:	681b      	ldr	r3, [r3, #0]
 8026292:	f240 4285 	movw	r2, #1157	; 0x485
 8026296:	f3c3 030b 	ubfx	r3, r3, #0, #12
 802629a:	4293      	cmp	r3, r2
 802629c:	d10c      	bne.n	80262b8 <CRC_Lock+0x74>
 802629e:	4b0e      	ldr	r3, [pc, #56]	; (80262d8 <CRC_Lock+0x94>)
 80262a0:	2201      	movs	r2, #1
 80262a2:	601a      	str	r2, [r3, #0]
 80262a4:	681a      	ldr	r2, [r3, #0]
 80262a6:	2a00      	cmp	r2, #0
 80262a8:	d1fc      	bne.n	80262a4 <CRC_Lock+0x60>
 80262aa:	4b0c      	ldr	r3, [pc, #48]	; (80262dc <CRC_Lock+0x98>)
 80262ac:	6018      	str	r0, [r3, #0]
 80262ae:	6818      	ldr	r0, [r3, #0]
 80262b0:	1a43      	subs	r3, r0, r1
 80262b2:	4258      	negs	r0, r3
 80262b4:	4158      	adcs	r0, r3
 80262b6:	bd30      	pop	{r4, r5, pc}
 80262b8:	4b09      	ldr	r3, [pc, #36]	; (80262e0 <CRC_Lock+0x9c>)
 80262ba:	2201      	movs	r2, #1
 80262bc:	601a      	str	r2, [r3, #0]
 80262be:	681a      	ldr	r2, [r3, #0]
 80262c0:	2a00      	cmp	r2, #0
 80262c2:	d1fc      	bne.n	80262be <CRC_Lock+0x7a>
 80262c4:	4b07      	ldr	r3, [pc, #28]	; (80262e4 <CRC_Lock+0xa0>)
 80262c6:	e7f1      	b.n	80262ac <CRC_Lock+0x68>
 80262c8:	e0002000 	.word	0xe0002000
 80262cc:	e000ed00 	.word	0xe000ed00
 80262d0:	e0042000 	.word	0xe0042000
 80262d4:	5c001000 	.word	0x5c001000
 80262d8:	58024c08 	.word	0x58024c08
 80262dc:	58024c00 	.word	0x58024c00
 80262e0:	40023008 	.word	0x40023008
 80262e4:	40023000 	.word	0x40023000

080262e8 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 80262e8:	6101      	str	r1, [r0, #16]
 80262ea:	4770      	bx	lr

080262ec <_ZN8touchgfx8Gestures4tickEv>:
 80262ec:	7b83      	ldrb	r3, [r0, #14]
 80262ee:	b14b      	cbz	r3, 8026304 <_ZN8touchgfx8Gestures4tickEv+0x18>
 80262f0:	8903      	ldrh	r3, [r0, #8]
 80262f2:	3301      	adds	r3, #1
 80262f4:	b29b      	uxth	r3, r3
 80262f6:	2b07      	cmp	r3, #7
 80262f8:	8103      	strh	r3, [r0, #8]
 80262fa:	bf81      	itttt	hi
 80262fc:	2300      	movhi	r3, #0
 80262fe:	8143      	strhhi	r3, [r0, #10]
 8026300:	8183      	strhhi	r3, [r0, #12]
 8026302:	7383      	strbhi	r3, [r0, #14]
 8026304:	4770      	bx	lr
	...

08026308 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8026308:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 802630c:	4698      	mov	r8, r3
 802630e:	8883      	ldrh	r3, [r0, #4]
 8026310:	f8ad 3006 	strh.w	r3, [sp, #6]
 8026314:	eba8 0303 	sub.w	r3, r8, r3
 8026318:	b21b      	sxth	r3, r3
 802631a:	4604      	mov	r4, r0
 802631c:	2b00      	cmp	r3, #0
 802631e:	4617      	mov	r7, r2
 8026320:	4a18      	ldr	r2, [pc, #96]	; (8026384 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8026322:	9200      	str	r2, [sp, #0]
 8026324:	bfb8      	it	lt
 8026326:	425b      	neglt	r3, r3
 8026328:	8aa2      	ldrh	r2, [r4, #20]
 802632a:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 802632e:	f8ad 800a 	strh.w	r8, [sp, #10]
 8026332:	b21b      	sxth	r3, r3
 8026334:	460e      	mov	r6, r1
 8026336:	4293      	cmp	r3, r2
 8026338:	88c1      	ldrh	r1, [r0, #6]
 802633a:	f8ad 1008 	strh.w	r1, [sp, #8]
 802633e:	f04f 0000 	mov.w	r0, #0
 8026342:	f88d 0004 	strb.w	r0, [sp, #4]
 8026346:	f8ad 500c 	strh.w	r5, [sp, #12]
 802634a:	dc07      	bgt.n	802635c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 802634c:	1a69      	subs	r1, r5, r1
 802634e:	b209      	sxth	r1, r1
 8026350:	2900      	cmp	r1, #0
 8026352:	bfb8      	it	lt
 8026354:	4249      	neglt	r1, r1
 8026356:	b209      	sxth	r1, r1
 8026358:	428a      	cmp	r2, r1
 802635a:	da10      	bge.n	802637e <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 802635c:	6920      	ldr	r0, [r4, #16]
 802635e:	6803      	ldr	r3, [r0, #0]
 8026360:	4669      	mov	r1, sp
 8026362:	685b      	ldr	r3, [r3, #4]
 8026364:	4798      	blx	r3
 8026366:	eba8 0606 	sub.w	r6, r8, r6
 802636a:	2300      	movs	r3, #0
 802636c:	1bef      	subs	r7, r5, r7
 802636e:	2001      	movs	r0, #1
 8026370:	8123      	strh	r3, [r4, #8]
 8026372:	8166      	strh	r6, [r4, #10]
 8026374:	81a7      	strh	r7, [r4, #12]
 8026376:	f8a4 8004 	strh.w	r8, [r4, #4]
 802637a:	80e5      	strh	r5, [r4, #6]
 802637c:	73a0      	strb	r0, [r4, #14]
 802637e:	b004      	add	sp, #16
 8026380:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8026384:	0802e9b8 	.word	0x0802e9b8

08026388 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8026388:	b5f0      	push	{r4, r5, r6, r7, lr}
 802638a:	461e      	mov	r6, r3
 802638c:	1e4b      	subs	r3, r1, #1
 802638e:	2b01      	cmp	r3, #1
 8026390:	b085      	sub	sp, #20
 8026392:	4604      	mov	r4, r0
 8026394:	460d      	mov	r5, r1
 8026396:	4617      	mov	r7, r2
 8026398:	d84b      	bhi.n	8026432 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 802639a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 802639e:	1cd3      	adds	r3, r2, #3
 80263a0:	b29b      	uxth	r3, r3
 80263a2:	2b06      	cmp	r3, #6
 80263a4:	d916      	bls.n	80263d4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 80263a6:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8026448 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80263aa:	f8cd c004 	str.w	ip, [sp, #4]
 80263ae:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80263b2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80263b6:	6900      	ldr	r0, [r0, #16]
 80263b8:	f8ad 100c 	strh.w	r1, [sp, #12]
 80263bc:	f04f 0c00 	mov.w	ip, #0
 80263c0:	f88d c008 	strb.w	ip, [sp, #8]
 80263c4:	f8ad 200a 	strh.w	r2, [sp, #10]
 80263c8:	f8ad 300e 	strh.w	r3, [sp, #14]
 80263cc:	6803      	ldr	r3, [r0, #0]
 80263ce:	a901      	add	r1, sp, #4
 80263d0:	689b      	ldr	r3, [r3, #8]
 80263d2:	4798      	blx	r3
 80263d4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80263d8:	1cd3      	adds	r3, r2, #3
 80263da:	b29b      	uxth	r3, r3
 80263dc:	2b06      	cmp	r3, #6
 80263de:	d916      	bls.n	802640e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80263e0:	f8df c064 	ldr.w	ip, [pc, #100]	; 8026448 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80263e4:	f8cd c004 	str.w	ip, [sp, #4]
 80263e8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80263ec:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80263f0:	6920      	ldr	r0, [r4, #16]
 80263f2:	f8ad 100c 	strh.w	r1, [sp, #12]
 80263f6:	f04f 0c01 	mov.w	ip, #1
 80263fa:	f88d c008 	strb.w	ip, [sp, #8]
 80263fe:	f8ad 200a 	strh.w	r2, [sp, #10]
 8026402:	f8ad 300e 	strh.w	r3, [sp, #14]
 8026406:	6803      	ldr	r3, [r0, #0]
 8026408:	a901      	add	r1, sp, #4
 802640a:	689b      	ldr	r3, [r3, #8]
 802640c:	4798      	blx	r3
 802640e:	4b0d      	ldr	r3, [pc, #52]	; (8026444 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8026410:	9301      	str	r3, [sp, #4]
 8026412:	6920      	ldr	r0, [r4, #16]
 8026414:	f88d 5008 	strb.w	r5, [sp, #8]
 8026418:	2300      	movs	r3, #0
 802641a:	f8ad 700a 	strh.w	r7, [sp, #10]
 802641e:	f8ad 600c 	strh.w	r6, [sp, #12]
 8026422:	f8ad 300e 	strh.w	r3, [sp, #14]
 8026426:	6803      	ldr	r3, [r0, #0]
 8026428:	a901      	add	r1, sp, #4
 802642a:	681b      	ldr	r3, [r3, #0]
 802642c:	4798      	blx	r3
 802642e:	b005      	add	sp, #20
 8026430:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8026432:	2900      	cmp	r1, #0
 8026434:	d1eb      	bne.n	802640e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8026436:	80a2      	strh	r2, [r4, #4]
 8026438:	80c6      	strh	r6, [r0, #6]
 802643a:	60a1      	str	r1, [r4, #8]
 802643c:	81a1      	strh	r1, [r4, #12]
 802643e:	73a1      	strb	r1, [r4, #14]
 8026440:	e7e5      	b.n	802640e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8026442:	bf00      	nop
 8026444:	0802e9a4 	.word	0x0802e9a4
 8026448:	0802e9cc 	.word	0x0802e9cc

0802644c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 802644c:	10c9      	asrs	r1, r1, #3
 802644e:	2900      	cmp	r1, #0
 8026450:	bfb8      	it	lt
 8026452:	4249      	neglt	r1, r1
 8026454:	2801      	cmp	r0, #1
 8026456:	d108      	bne.n	802646a <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8026458:	f3c1 0008 	ubfx	r0, r1, #0, #9
 802645c:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8026460:	4601      	mov	r1, r0
 8026462:	dd02      	ble.n	802646a <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8026464:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8026468:	4770      	bx	lr
 802646a:	29ff      	cmp	r1, #255	; 0xff
 802646c:	bfa8      	it	ge
 802646e:	21ff      	movge	r1, #255	; 0xff
 8026470:	4608      	mov	r0, r1
 8026472:	4770      	bx	lr

08026474 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8026474:	b410      	push	{r4}
 8026476:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 802647a:	429c      	cmp	r4, r3
 802647c:	d803      	bhi.n	8026486 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 802647e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8026482:	f7ed b8ef 	b.w	8013664 <_ZN8touchgfx7Outline6lineToEii>
 8026486:	f85d 4b04 	ldr.w	r4, [sp], #4
 802648a:	4770      	bx	lr

0802648c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 802648c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026490:	b08b      	sub	sp, #44	; 0x2c
 8026492:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8026496:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 802649a:	9308      	str	r3, [sp, #32]
 802649c:	4606      	mov	r6, r0
 802649e:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80264a2:	9309      	str	r3, [sp, #36]	; 0x24
 80264a4:	468a      	mov	sl, r1
 80264a6:	f7ed fa4a 	bl	801393e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 80264aa:	68b5      	ldr	r5, [r6, #8]
 80264ac:	4604      	mov	r4, r0
 80264ae:	2d00      	cmp	r5, #0
 80264b0:	d044      	beq.n	802653c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80264b2:	6873      	ldr	r3, [r6, #4]
 80264b4:	42ab      	cmp	r3, r5
 80264b6:	d33d      	bcc.n	8026534 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 80264b8:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80264bc:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 80264c0:	eb02 0b03 	add.w	fp, r2, r3
 80264c4:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 80264c8:	fb02 1203 	mla	r2, r2, r3, r1
 80264cc:	9205      	str	r2, [sp, #20]
 80264ce:	1e6a      	subs	r2, r5, #1
 80264d0:	9204      	str	r2, [sp, #16]
 80264d2:	f04f 0800 	mov.w	r8, #0
 80264d6:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 80264da:	f9b4 7000 	ldrsh.w	r7, [r4]
 80264de:	454b      	cmp	r3, r9
 80264e0:	463a      	mov	r2, r7
 80264e2:	d008      	beq.n	80264f6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 80264e4:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 80264e8:	eb03 0b09 	add.w	fp, r3, r9
 80264ec:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 80264f0:	fb03 1309 	mla	r3, r3, r9, r1
 80264f4:	9305      	str	r3, [sp, #20]
 80264f6:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80264fa:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 80264fe:	4498      	add	r8, r3
 8026500:	9b04      	ldr	r3, [sp, #16]
 8026502:	3b01      	subs	r3, #1
 8026504:	9304      	str	r3, [sp, #16]
 8026506:	9b04      	ldr	r3, [sp, #16]
 8026508:	3301      	adds	r3, #1
 802650a:	d015      	beq.n	8026538 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 802650c:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8026510:	42bb      	cmp	r3, r7
 8026512:	d117      	bne.n	8026544 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8026514:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8026518:	9b04      	ldr	r3, [sp, #16]
 802651a:	4548      	cmp	r0, r9
 802651c:	f103 33ff 	add.w	r3, r3, #4294967295
 8026520:	d17f      	bne.n	8026622 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8026522:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8026526:	4401      	add	r1, r0
 8026528:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 802652c:	4480      	add	r8, r0
 802652e:	e7e9      	b.n	8026504 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8026530:	461f      	mov	r7, r3
 8026532:	e044      	b.n	80265be <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8026534:	2000      	movs	r0, #0
 8026536:	e002      	b.n	802653e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8026538:	2900      	cmp	r1, #0
 802653a:	d16f      	bne.n	802661c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 802653c:	2001      	movs	r0, #1
 802653e:	b00b      	add	sp, #44	; 0x2c
 8026540:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026544:	2900      	cmp	r1, #0
 8026546:	d030      	beq.n	80265aa <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8026548:	2f00      	cmp	r7, #0
 802654a:	db29      	blt.n	80265a0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802654c:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8026550:	42bb      	cmp	r3, r7
 8026552:	dd25      	ble.n	80265a0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8026554:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8026558:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 802655c:	f7ff ff76 	bl	802644c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8026560:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026562:	fb10 f003 	smulbb	r0, r0, r3
 8026566:	b280      	uxth	r0, r0
 8026568:	1c41      	adds	r1, r0, #1
 802656a:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802656e:	1209      	asrs	r1, r1, #8
 8026570:	f011 0fff 	tst.w	r1, #255	; 0xff
 8026574:	d014      	beq.n	80265a0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8026576:	9808      	ldr	r0, [sp, #32]
 8026578:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 802657a:	b2c9      	uxtb	r1, r1
 802657c:	b2ba      	uxth	r2, r7
 802657e:	9102      	str	r1, [sp, #8]
 8026580:	2101      	movs	r1, #1
 8026582:	4413      	add	r3, r2
 8026584:	9101      	str	r1, [sp, #4]
 8026586:	4402      	add	r2, r0
 8026588:	fa0f f18b 	sxth.w	r1, fp
 802658c:	f8da 0000 	ldr.w	r0, [sl]
 8026590:	9100      	str	r1, [sp, #0]
 8026592:	6941      	ldr	r1, [r0, #20]
 8026594:	b21b      	sxth	r3, r3
 8026596:	460d      	mov	r5, r1
 8026598:	b212      	sxth	r2, r2
 802659a:	9905      	ldr	r1, [sp, #20]
 802659c:	4650      	mov	r0, sl
 802659e:	47a8      	blx	r5
 80265a0:	9b04      	ldr	r3, [sp, #16]
 80265a2:	3301      	adds	r3, #1
 80265a4:	f107 0201 	add.w	r2, r7, #1
 80265a8:	d0c8      	beq.n	802653c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80265aa:	f9b4 7000 	ldrsh.w	r7, [r4]
 80265ae:	1abb      	subs	r3, r7, r2
 80265b0:	2b00      	cmp	r3, #0
 80265b2:	dd31      	ble.n	8026618 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80265b4:	2a00      	cmp	r2, #0
 80265b6:	dabb      	bge.n	8026530 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 80265b8:	2f00      	cmp	r7, #0
 80265ba:	dd2d      	ble.n	8026618 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80265bc:	2200      	movs	r2, #0
 80265be:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 80265c2:	19d1      	adds	r1, r2, r7
 80265c4:	4299      	cmp	r1, r3
 80265c6:	db02      	blt.n	80265ce <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 80265c8:	1a9f      	subs	r7, r3, r2
 80265ca:	2f00      	cmp	r7, #0
 80265cc:	dd24      	ble.n	8026618 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80265ce:	ea4f 1188 	mov.w	r1, r8, lsl #6
 80265d2:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 80265d6:	f7ff ff39 	bl	802644c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 80265da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80265dc:	fb10 f003 	smulbb	r0, r0, r3
 80265e0:	b280      	uxth	r0, r0
 80265e2:	1c41      	adds	r1, r0, #1
 80265e4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80265e8:	1209      	asrs	r1, r1, #8
 80265ea:	f011 0fff 	tst.w	r1, #255	; 0xff
 80265ee:	d013      	beq.n	8026618 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80265f0:	9808      	ldr	r0, [sp, #32]
 80265f2:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 80265f4:	b292      	uxth	r2, r2
 80265f6:	b2c9      	uxtb	r1, r1
 80265f8:	4413      	add	r3, r2
 80265fa:	9102      	str	r1, [sp, #8]
 80265fc:	4402      	add	r2, r0
 80265fe:	b23f      	sxth	r7, r7
 8026600:	f8da 0000 	ldr.w	r0, [sl]
 8026604:	9701      	str	r7, [sp, #4]
 8026606:	fa0f f18b 	sxth.w	r1, fp
 802660a:	9100      	str	r1, [sp, #0]
 802660c:	6947      	ldr	r7, [r0, #20]
 802660e:	9905      	ldr	r1, [sp, #20]
 8026610:	b21b      	sxth	r3, r3
 8026612:	b212      	sxth	r2, r2
 8026614:	4650      	mov	r0, sl
 8026616:	47b8      	blx	r7
 8026618:	464b      	mov	r3, r9
 802661a:	e75c      	b.n	80264d6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 802661c:	2f00      	cmp	r7, #0
 802661e:	da95      	bge.n	802654c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8026620:	e78c      	b.n	802653c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8026622:	2900      	cmp	r1, #0
 8026624:	d0f8      	beq.n	8026618 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026626:	e78f      	b.n	8026548 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08026628 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8026628:	4b4b      	ldr	r3, [pc, #300]	; (8026758 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 802662a:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 802662e:	2500      	movs	r5, #0
 8026630:	f100 0620 	add.w	r6, r0, #32
 8026634:	4604      	mov	r4, r0
 8026636:	e9c0 3100 	strd	r3, r1, [r0]
 802663a:	e9c0 5502 	strd	r5, r5, [r0, #8]
 802663e:	e9c0 5504 	strd	r5, r5, [r0, #16]
 8026642:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8026646:	f100 0718 	add.w	r7, r0, #24
 802664a:	4630      	mov	r0, r6
 802664c:	4690      	mov	r8, r2
 802664e:	f7ec fb41 	bl	8012cd4 <_ZN8touchgfx7OutlineC1Ev>
 8026652:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8026656:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 802665a:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 802665e:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 8026662:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8026666:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 802666a:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 802666e:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 8026672:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8026676:	f9b8 2000 	ldrsh.w	r2, [r8]
 802667a:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 802667e:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8026682:	9500      	str	r5, [sp, #0]
 8026684:	4410      	add	r0, r2
 8026686:	b280      	uxth	r0, r0
 8026688:	fa0f fa80 	sxth.w	sl, r0
 802668c:	45aa      	cmp	sl, r5
 802668e:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 8026692:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8026696:	dd5c      	ble.n	8026752 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8026698:	4591      	cmp	r9, r2
 802669a:	dd5a      	ble.n	8026752 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 802669c:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 80266a0:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 80266a4:	440b      	add	r3, r1
 80266a6:	b29b      	uxth	r3, r3
 80266a8:	b21d      	sxth	r5, r3
 80266aa:	2d00      	cmp	r5, #0
 80266ac:	dd51      	ble.n	8026752 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 80266ae:	458e      	cmp	lr, r1
 80266b0:	dd4f      	ble.n	8026752 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 80266b2:	45d1      	cmp	r9, sl
 80266b4:	bfb8      	it	lt
 80266b6:	fa1f f089 	uxthlt.w	r0, r9
 80266ba:	45ae      	cmp	lr, r5
 80266bc:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 80266c0:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 80266c4:	bfb8      	it	lt
 80266c6:	fa1f f38e 	uxthlt.w	r3, lr
 80266ca:	1a80      	subs	r0, r0, r2
 80266cc:	1a5b      	subs	r3, r3, r1
 80266ce:	f8ad 0004 	strh.w	r0, [sp, #4]
 80266d2:	f8ad 3006 	strh.w	r3, [sp, #6]
 80266d6:	f8ad 2000 	strh.w	r2, [sp]
 80266da:	f8ad 1002 	strh.w	r1, [sp, #2]
 80266de:	466d      	mov	r5, sp
 80266e0:	e895 0003 	ldmia.w	r5, {r0, r1}
 80266e4:	e887 0003 	stmia.w	r7, {r0, r1}
 80266e8:	f8dc 3000 	ldr.w	r3, [ip]
 80266ec:	4660      	mov	r0, ip
 80266ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80266f0:	4639      	mov	r1, r7
 80266f2:	4798      	blx	r3
 80266f4:	6861      	ldr	r1, [r4, #4]
 80266f6:	4628      	mov	r0, r5
 80266f8:	3104      	adds	r1, #4
 80266fa:	f7ee fcf1 	bl	80150e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80266fe:	4638      	mov	r0, r7
 8026700:	f7ee fcaa 	bl	8015058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026704:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8026708:	f8bd 2000 	ldrh.w	r2, [sp]
 802670c:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 8026710:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8026714:	4630      	mov	r0, r6
 8026716:	f7ec fac1 	bl	8012c9c <_ZN8touchgfx7Outline5resetEv>
 802671a:	f9bd 3000 	ldrsh.w	r3, [sp]
 802671e:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8026722:	015b      	lsls	r3, r3, #5
 8026724:	60a3      	str	r3, [r4, #8]
 8026726:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 802672a:	015b      	lsls	r3, r3, #5
 802672c:	60e3      	str	r3, [r4, #12]
 802672e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8026732:	015b      	lsls	r3, r3, #5
 8026734:	6123      	str	r3, [r4, #16]
 8026736:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 802673a:	015b      	lsls	r3, r3, #5
 802673c:	6163      	str	r3, [r4, #20]
 802673e:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 8026742:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8026746:	4620      	mov	r0, r4
 8026748:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 802674c:	b002      	add	sp, #8
 802674e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026752:	2300      	movs	r3, #0
 8026754:	9301      	str	r3, [sp, #4]
 8026756:	e7c2      	b.n	80266de <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 8026758:	0802ecf0 	.word	0x0802ecf0

0802675c <_ZN8touchgfx6Canvas5closeEv>:
 802675c:	b538      	push	{r3, r4, r5, lr}
 802675e:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8026762:	4604      	mov	r4, r0
 8026764:	b193      	cbz	r3, 802678c <_ZN8touchgfx6Canvas5closeEv+0x30>
 8026766:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 802676a:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 802676e:	4213      	tst	r3, r2
 8026770:	d10c      	bne.n	802678c <_ZN8touchgfx6Canvas5closeEv+0x30>
 8026772:	f100 0520 	add.w	r5, r0, #32
 8026776:	b123      	cbz	r3, 8026782 <_ZN8touchgfx6Canvas5closeEv+0x26>
 8026778:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 802677c:	4628      	mov	r0, r5
 802677e:	f7ff fe79 	bl	8026474 <_ZN8touchgfx10Rasterizer6lineToEii>
 8026782:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 8026786:	4628      	mov	r0, r5
 8026788:	f7ff fe74 	bl	8026474 <_ZN8touchgfx10Rasterizer6lineToEii>
 802678c:	2300      	movs	r3, #0
 802678e:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8026792:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 8026796:	4298      	cmp	r0, r3
 8026798:	bf34      	ite	cc
 802679a:	2000      	movcc	r0, #0
 802679c:	2001      	movcs	r0, #1
 802679e:	bd38      	pop	{r3, r4, r5, pc}

080267a0 <_ZN8touchgfx6Canvas6renderEh>:
 80267a0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80267a4:	4604      	mov	r4, r0
 80267a6:	6840      	ldr	r0, [r0, #4]
 80267a8:	6803      	ldr	r3, [r0, #0]
 80267aa:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80267ac:	460d      	mov	r5, r1
 80267ae:	4798      	blx	r3
 80267b0:	fb10 f105 	smulbb	r1, r0, r5
 80267b4:	b289      	uxth	r1, r1
 80267b6:	1c4d      	adds	r5, r1, #1
 80267b8:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80267bc:	122d      	asrs	r5, r5, #8
 80267be:	f000 809d 	beq.w	80268fc <_ZN8touchgfx6Canvas6renderEh+0x15c>
 80267c2:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 80267c6:	2b00      	cmp	r3, #0
 80267c8:	f000 8098 	beq.w	80268fc <_ZN8touchgfx6Canvas6renderEh+0x15c>
 80267cc:	4620      	mov	r0, r4
 80267ce:	f7ff ffc5 	bl	802675c <_ZN8touchgfx6Canvas5closeEv>
 80267d2:	4607      	mov	r7, r0
 80267d4:	2800      	cmp	r0, #0
 80267d6:	d048      	beq.n	802686a <_ZN8touchgfx6Canvas6renderEh+0xca>
 80267d8:	6863      	ldr	r3, [r4, #4]
 80267da:	4e49      	ldr	r6, [pc, #292]	; (8026900 <_ZN8touchgfx6Canvas6renderEh+0x160>)
 80267dc:	6a98      	ldr	r0, [r3, #40]	; 0x28
 80267de:	6837      	ldr	r7, [r6, #0]
 80267e0:	6803      	ldr	r3, [r0, #0]
 80267e2:	689b      	ldr	r3, [r3, #8]
 80267e4:	4798      	blx	r3
 80267e6:	4601      	mov	r1, r0
 80267e8:	4638      	mov	r0, r7
 80267ea:	f7ea fbc5 	bl	8010f78 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 80267ee:	4607      	mov	r7, r0
 80267f0:	f7dd f8bc 	bl	800396c <_ZN8touchgfx3HAL3lcdEv>
 80267f4:	6803      	ldr	r3, [r0, #0]
 80267f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80267f8:	4798      	blx	r3
 80267fa:	4680      	mov	r8, r0
 80267fc:	f7dd f8b6 	bl	800396c <_ZN8touchgfx3HAL3lcdEv>
 8026800:	6803      	ldr	r3, [r0, #0]
 8026802:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026804:	4798      	blx	r3
 8026806:	280b      	cmp	r0, #11
 8026808:	d85d      	bhi.n	80268c6 <_ZN8touchgfx6Canvas6renderEh+0x126>
 802680a:	e8df f000 	tbb	[pc, r0]
 802680e:	5e53      	.short	0x5e53
 8026810:	325c066e 	.word	0x325c066e
 8026814:	67676742 	.word	0x67676742
 8026818:	6767      	.short	0x6767
 802681a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802681e:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8026822:	2208      	movs	r2, #8
 8026824:	fb91 f2f2 	sdiv	r2, r1, r2
 8026828:	fb08 2303 	mla	r3, r8, r3, r2
 802682c:	441f      	add	r7, r3
 802682e:	424b      	negs	r3, r1
 8026830:	f003 0307 	and.w	r3, r3, #7
 8026834:	f001 0107 	and.w	r1, r1, #7
 8026838:	bf58      	it	pl
 802683a:	4259      	negpl	r1, r3
 802683c:	b2c9      	uxtb	r1, r1
 802683e:	b2ed      	uxtb	r5, r5
 8026840:	e9cd 1500 	strd	r1, r5, [sp]
 8026844:	6860      	ldr	r0, [r4, #4]
 8026846:	463a      	mov	r2, r7
 8026848:	6a81      	ldr	r1, [r0, #40]	; 0x28
 802684a:	fa0f f388 	sxth.w	r3, r8
 802684e:	f104 0020 	add.w	r0, r4, #32
 8026852:	f7ff fe1b 	bl	802648c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8026856:	6863      	ldr	r3, [r4, #4]
 8026858:	4607      	mov	r7, r0
 802685a:	6a98      	ldr	r0, [r3, #40]	; 0x28
 802685c:	6803      	ldr	r3, [r0, #0]
 802685e:	691b      	ldr	r3, [r3, #16]
 8026860:	4798      	blx	r3
 8026862:	6830      	ldr	r0, [r6, #0]
 8026864:	6803      	ldr	r3, [r0, #0]
 8026866:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026868:	4798      	blx	r3
 802686a:	4638      	mov	r0, r7
 802686c:	b002      	add	sp, #8
 802686e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8026872:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8026876:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 802687a:	2204      	movs	r2, #4
 802687c:	fb91 f2f2 	sdiv	r2, r1, r2
 8026880:	fb08 2303 	mla	r3, r8, r3, r2
 8026884:	441f      	add	r7, r3
 8026886:	424b      	negs	r3, r1
 8026888:	f003 0303 	and.w	r3, r3, #3
 802688c:	f001 0103 	and.w	r1, r1, #3
 8026890:	e7d2      	b.n	8026838 <_ZN8touchgfx6Canvas6renderEh+0x98>
 8026892:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8026896:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802689a:	2900      	cmp	r1, #0
 802689c:	f04f 0202 	mov.w	r2, #2
 80268a0:	fb91 f2f2 	sdiv	r2, r1, r2
 80268a4:	f001 0101 	and.w	r1, r1, #1
 80268a8:	fb08 2303 	mla	r3, r8, r3, r2
 80268ac:	441f      	add	r7, r3
 80268ae:	bfb8      	it	lt
 80268b0:	4249      	neglt	r1, r1
 80268b2:	e7c3      	b.n	802683c <_ZN8touchgfx6Canvas6renderEh+0x9c>
 80268b4:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80268b8:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80268bc:	fb08 f303 	mul.w	r3, r8, r3
 80268c0:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80268c4:	441f      	add	r7, r3
 80268c6:	2100      	movs	r1, #0
 80268c8:	e7b9      	b.n	802683e <_ZN8touchgfx6Canvas6renderEh+0x9e>
 80268ca:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80268ce:	fb08 f203 	mul.w	r2, r8, r3
 80268d2:	8b23      	ldrh	r3, [r4, #24]
 80268d4:	2103      	movs	r1, #3
 80268d6:	fb13 2301 	smlabb	r3, r3, r1, r2
 80268da:	e7f3      	b.n	80268c4 <_ZN8touchgfx6Canvas6renderEh+0x124>
 80268dc:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80268e0:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80268e4:	fb08 2303 	mla	r3, r8, r3, r2
 80268e8:	e7ec      	b.n	80268c4 <_ZN8touchgfx6Canvas6renderEh+0x124>
 80268ea:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80268ee:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80268f2:	fb08 f303 	mul.w	r3, r8, r3
 80268f6:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80268fa:	e7e3      	b.n	80268c4 <_ZN8touchgfx6Canvas6renderEh+0x124>
 80268fc:	2701      	movs	r7, #1
 80268fe:	e7b4      	b.n	802686a <_ZN8touchgfx6Canvas6renderEh+0xca>
 8026900:	20012f24 	.word	0x20012f24

08026904 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8026904:	b510      	push	{r4, lr}
 8026906:	4b07      	ldr	r3, [pc, #28]	; (8026924 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 8026908:	781b      	ldrb	r3, [r3, #0]
 802690a:	2b01      	cmp	r3, #1
 802690c:	d108      	bne.n	8026920 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 802690e:	6843      	ldr	r3, [r0, #4]
 8026910:	6814      	ldr	r4, [r2, #0]
 8026912:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8026916:	680b      	ldr	r3, [r1, #0]
 8026918:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 802691c:	6013      	str	r3, [r2, #0]
 802691e:	600c      	str	r4, [r1, #0]
 8026920:	bd10      	pop	{r4, pc}
 8026922:	bf00      	nop
 8026924:	20012f1c 	.word	0x20012f1c

08026928 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8026928:	b513      	push	{r0, r1, r4, lr}
 802692a:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 802692e:	4604      	mov	r4, r0
 8026930:	e9cd 2100 	strd	r2, r1, [sp]
 8026934:	b9a3      	cbnz	r3, 8026960 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8026936:	466a      	mov	r2, sp
 8026938:	a901      	add	r1, sp, #4
 802693a:	4620      	mov	r0, r4
 802693c:	f7ff ffe2 	bl	8026904 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8026940:	68a3      	ldr	r3, [r4, #8]
 8026942:	9901      	ldr	r1, [sp, #4]
 8026944:	9a00      	ldr	r2, [sp, #0]
 8026946:	1ac9      	subs	r1, r1, r3
 8026948:	68e3      	ldr	r3, [r4, #12]
 802694a:	9101      	str	r1, [sp, #4]
 802694c:	1ad2      	subs	r2, r2, r3
 802694e:	2a00      	cmp	r2, #0
 8026950:	9200      	str	r2, [sp, #0]
 8026952:	da0b      	bge.n	802696c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8026954:	2301      	movs	r3, #1
 8026956:	2900      	cmp	r1, #0
 8026958:	da0e      	bge.n	8026978 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 802695a:	f043 0304 	orr.w	r3, r3, #4
 802695e:	e013      	b.n	8026988 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8026960:	f7ff fefc 	bl	802675c <_ZN8touchgfx6Canvas5closeEv>
 8026964:	2800      	cmp	r0, #0
 8026966:	d1e6      	bne.n	8026936 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8026968:	b002      	add	sp, #8
 802696a:	bd10      	pop	{r4, pc}
 802696c:	6963      	ldr	r3, [r4, #20]
 802696e:	429a      	cmp	r2, r3
 8026970:	bfac      	ite	ge
 8026972:	2302      	movge	r3, #2
 8026974:	2300      	movlt	r3, #0
 8026976:	e7ee      	b.n	8026956 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8026978:	6920      	ldr	r0, [r4, #16]
 802697a:	4281      	cmp	r1, r0
 802697c:	bfac      	ite	ge
 802697e:	2008      	movge	r0, #8
 8026980:	2000      	movlt	r0, #0
 8026982:	4318      	orrs	r0, r3
 8026984:	b2c3      	uxtb	r3, r0
 8026986:	b158      	cbz	r0, 80269a0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8026988:	2200      	movs	r2, #0
 802698a:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 802698e:	9901      	ldr	r1, [sp, #4]
 8026990:	9a00      	ldr	r2, [sp, #0]
 8026992:	66a1      	str	r1, [r4, #104]	; 0x68
 8026994:	66e2      	str	r2, [r4, #108]	; 0x6c
 8026996:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 802699a:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 802699e:	e7e3      	b.n	8026968 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 80269a0:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 80269a4:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 80269a8:	4298      	cmp	r0, r3
 80269aa:	d803      	bhi.n	80269b4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 80269ac:	f104 0020 	add.w	r0, r4, #32
 80269b0:	f7ec fe72 	bl	8013698 <_ZN8touchgfx7Outline6moveToEii>
 80269b4:	2301      	movs	r3, #1
 80269b6:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80269ba:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80269be:	2300      	movs	r3, #0
 80269c0:	e7e5      	b.n	802698e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

080269c2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 80269c2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80269c4:	ab02      	add	r3, sp, #8
 80269c6:	4604      	mov	r4, r0
 80269c8:	f843 2d08 	str.w	r2, [r3, #-8]!
 80269cc:	9101      	str	r1, [sp, #4]
 80269ce:	461a      	mov	r2, r3
 80269d0:	a901      	add	r1, sp, #4
 80269d2:	f7ff ff97 	bl	8026904 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80269d6:	68a3      	ldr	r3, [r4, #8]
 80269d8:	9901      	ldr	r1, [sp, #4]
 80269da:	9a00      	ldr	r2, [sp, #0]
 80269dc:	1ac9      	subs	r1, r1, r3
 80269de:	68e3      	ldr	r3, [r4, #12]
 80269e0:	9101      	str	r1, [sp, #4]
 80269e2:	1ad2      	subs	r2, r2, r3
 80269e4:	2a00      	cmp	r2, #0
 80269e6:	9200      	str	r2, [sp, #0]
 80269e8:	db1c      	blt.n	8026a24 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 80269ea:	6963      	ldr	r3, [r4, #20]
 80269ec:	429a      	cmp	r2, r3
 80269ee:	bfac      	ite	ge
 80269f0:	2002      	movge	r0, #2
 80269f2:	2000      	movlt	r0, #0
 80269f4:	2900      	cmp	r1, #0
 80269f6:	db17      	blt.n	8026a28 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 80269f8:	6923      	ldr	r3, [r4, #16]
 80269fa:	4299      	cmp	r1, r3
 80269fc:	bfac      	ite	ge
 80269fe:	2308      	movge	r3, #8
 8026a00:	2300      	movlt	r3, #0
 8026a02:	4303      	orrs	r3, r0
 8026a04:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 8026a08:	b2dd      	uxtb	r5, r3
 8026a0a:	b978      	cbnz	r0, 8026a2c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 8026a0c:	f104 0020 	add.w	r0, r4, #32
 8026a10:	f7ff fd30 	bl	8026474 <_ZN8touchgfx10Rasterizer6lineToEii>
 8026a14:	9b01      	ldr	r3, [sp, #4]
 8026a16:	65e3      	str	r3, [r4, #92]	; 0x5c
 8026a18:	9b00      	ldr	r3, [sp, #0]
 8026a1a:	6623      	str	r3, [r4, #96]	; 0x60
 8026a1c:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 8026a20:	b002      	add	sp, #8
 8026a22:	bd70      	pop	{r4, r5, r6, pc}
 8026a24:	2001      	movs	r0, #1
 8026a26:	e7e5      	b.n	80269f4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8026a28:	2304      	movs	r3, #4
 8026a2a:	e7ea      	b.n	8026a02 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8026a2c:	b113      	cbz	r3, 8026a34 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 8026a2e:	ea10 0305 	ands.w	r3, r0, r5
 8026a32:	d11c      	bne.n	8026a6e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 8026a34:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 8026a38:	f104 0620 	add.w	r6, r4, #32
 8026a3c:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 8026a40:	b98b      	cbnz	r3, 8026a66 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 8026a42:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8026a46:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8026a4a:	4298      	cmp	r0, r3
 8026a4c:	d802      	bhi.n	8026a54 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 8026a4e:	4630      	mov	r0, r6
 8026a50:	f7ec fe22 	bl	8013698 <_ZN8touchgfx7Outline6moveToEii>
 8026a54:	2301      	movs	r3, #1
 8026a56:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8026a5a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8026a5e:	e9dd 2100 	ldrd	r2, r1, [sp]
 8026a62:	4630      	mov	r0, r6
 8026a64:	e7d4      	b.n	8026a10 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8026a66:	4630      	mov	r0, r6
 8026a68:	f7ff fd04 	bl	8026474 <_ZN8touchgfx10Rasterizer6lineToEii>
 8026a6c:	e7f7      	b.n	8026a5e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 8026a6e:	461d      	mov	r5, r3
 8026a70:	e7d0      	b.n	8026a14 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

08026a74 <_ZN8touchgfx6CanvasD1Ev>:
 8026a74:	b510      	push	{r4, lr}
 8026a76:	4b04      	ldr	r3, [pc, #16]	; (8026a88 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8026a78:	4604      	mov	r4, r0
 8026a7a:	f840 3b20 	str.w	r3, [r0], #32
 8026a7e:	f7ec f905 	bl	8012c8c <_ZN8touchgfx7OutlineD1Ev>
 8026a82:	4620      	mov	r0, r4
 8026a84:	bd10      	pop	{r4, pc}
 8026a86:	bf00      	nop
 8026a88:	0802ecf0 	.word	0x0802ecf0

08026a8c <_ZN8touchgfx6CanvasD0Ev>:
 8026a8c:	b510      	push	{r4, lr}
 8026a8e:	4604      	mov	r4, r0
 8026a90:	f7ff fff0 	bl	8026a74 <_ZN8touchgfx6CanvasD1Ev>
 8026a94:	4620      	mov	r0, r4
 8026a96:	2170      	movs	r1, #112	; 0x70
 8026a98:	f002 fd09 	bl	80294ae <_ZdlPvj>
 8026a9c:	4620      	mov	r0, r4
 8026a9e:	bd10      	pop	{r4, pc}

08026aa0 <_ZN8touchgfx6CircleD1Ev>:
 8026aa0:	4770      	bx	lr

08026aa2 <_ZN8touchgfx6CircleD0Ev>:
 8026aa2:	b510      	push	{r4, lr}
 8026aa4:	2148      	movs	r1, #72	; 0x48
 8026aa6:	4604      	mov	r4, r0
 8026aa8:	f002 fd01 	bl	80294ae <_ZdlPvj>
 8026aac:	4620      	mov	r0, r4
 8026aae:	bd10      	pop	{r4, pc}

08026ab0 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 8026ab0:	b508      	push	{r3, lr}
 8026ab2:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 8026ab6:	f7ea fdb5 	bl	8011624 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026aba:	bd08      	pop	{r3, pc}

08026abc <_ZN8touchgfx6CircleC1Ev>:
 8026abc:	b510      	push	{r4, lr}
 8026abe:	4604      	mov	r4, r0
 8026ac0:	f7ea fc4c 	bl	801135c <_ZN8touchgfx12CanvasWidgetC1Ev>
 8026ac4:	4b08      	ldr	r3, [pc, #32]	; (8026ae8 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 8026ac6:	6023      	str	r3, [r4, #0]
 8026ac8:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 8026acc:	2300      	movs	r3, #0
 8026ace:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 8026ad2:	f24b 4205 	movw	r2, #46085	; 0xb405
 8026ad6:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8026ada:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8026ade:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 8026ae2:	60a3      	str	r3, [r4, #8]
 8026ae4:	4620      	mov	r0, r4
 8026ae6:	bd10      	pop	{r4, pc}
 8026ae8:	0802ed04 	.word	0x0802ed04

08026aec <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 8026aec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026af0:	428a      	cmp	r2, r1
 8026af2:	4680      	mov	r8, r0
 8026af4:	4610      	mov	r0, r2
 8026af6:	4699      	mov	r9, r3
 8026af8:	bfa6      	itte	ge
 8026afa:	460a      	movge	r2, r1
 8026afc:	4603      	movge	r3, r0
 8026afe:	460b      	movlt	r3, r1
 8026b00:	1a99      	subs	r1, r3, r2
 8026b02:	b085      	sub	sp, #20
 8026b04:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 8026b08:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 8026b0c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8026b0e:	bfa4      	itt	ge
 8026b10:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 8026b14:	2200      	movge	r2, #0
 8026b16:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 8026b1a:	9300      	str	r3, [sp, #0]
 8026b1c:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 8026b20:	f102 0b01 	add.w	fp, r2, #1
 8026b24:	2c00      	cmp	r4, #0
 8026b26:	f040 80af 	bne.w	8026c88 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 8026b2a:	4610      	mov	r0, r2
 8026b2c:	9201      	str	r2, [sp, #4]
 8026b2e:	f7ea fd79 	bl	8011624 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026b32:	a903      	add	r1, sp, #12
 8026b34:	9003      	str	r0, [sp, #12]
 8026b36:	4650      	mov	r0, sl
 8026b38:	f7ea fc3c 	bl	80113b4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026b3c:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8026b40:	9a01      	ldr	r2, [sp, #4]
 8026b42:	4408      	add	r0, r1
 8026b44:	f8d9 1000 	ldr.w	r1, [r9]
 8026b48:	4281      	cmp	r1, r0
 8026b4a:	bfc8      	it	gt
 8026b4c:	f8c9 0000 	strgt.w	r0, [r9]
 8026b50:	6839      	ldr	r1, [r7, #0]
 8026b52:	4288      	cmp	r0, r1
 8026b54:	bfc8      	it	gt
 8026b56:	6038      	strgt	r0, [r7, #0]
 8026b58:	4610      	mov	r0, r2
 8026b5a:	f7ff ffa9 	bl	8026ab0 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026b5e:	a903      	add	r1, sp, #12
 8026b60:	9003      	str	r0, [sp, #12]
 8026b62:	4650      	mov	r0, sl
 8026b64:	f7ea fc26 	bl	80113b4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026b68:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8026b6c:	1a10      	subs	r0, r2, r0
 8026b6e:	6832      	ldr	r2, [r6, #0]
 8026b70:	4282      	cmp	r2, r0
 8026b72:	bfc8      	it	gt
 8026b74:	6030      	strgt	r0, [r6, #0]
 8026b76:	682a      	ldr	r2, [r5, #0]
 8026b78:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 8026b7c:	4290      	cmp	r0, r2
 8026b7e:	fb9b f2f1 	sdiv	r2, fp, r1
 8026b82:	fb01 b212 	mls	r2, r1, r2, fp
 8026b86:	eba1 0202 	sub.w	r2, r1, r2
 8026b8a:	bfc8      	it	gt
 8026b8c:	6028      	strgt	r0, [r5, #0]
 8026b8e:	fb92 f0f1 	sdiv	r0, r2, r1
 8026b92:	fb01 2210 	mls	r2, r1, r0, r2
 8026b96:	4493      	add	fp, r2
 8026b98:	9b00      	ldr	r3, [sp, #0]
 8026b9a:	455b      	cmp	r3, fp
 8026b9c:	db2a      	blt.n	8026bf4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 8026b9e:	4658      	mov	r0, fp
 8026ba0:	f7ea fd40 	bl	8011624 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026ba4:	a903      	add	r1, sp, #12
 8026ba6:	9003      	str	r0, [sp, #12]
 8026ba8:	4650      	mov	r0, sl
 8026baa:	f7ea fc03 	bl	80113b4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026bae:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8026bb2:	4410      	add	r0, r2
 8026bb4:	f8d9 2000 	ldr.w	r2, [r9]
 8026bb8:	4282      	cmp	r2, r0
 8026bba:	bfc8      	it	gt
 8026bbc:	f8c9 0000 	strgt.w	r0, [r9]
 8026bc0:	683a      	ldr	r2, [r7, #0]
 8026bc2:	4290      	cmp	r0, r2
 8026bc4:	bfc8      	it	gt
 8026bc6:	6038      	strgt	r0, [r7, #0]
 8026bc8:	4658      	mov	r0, fp
 8026bca:	f7ff ff71 	bl	8026ab0 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026bce:	a903      	add	r1, sp, #12
 8026bd0:	9003      	str	r0, [sp, #12]
 8026bd2:	4650      	mov	r0, sl
 8026bd4:	f7ea fbee 	bl	80113b4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026bd8:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8026bdc:	1a10      	subs	r0, r2, r0
 8026bde:	6832      	ldr	r2, [r6, #0]
 8026be0:	4282      	cmp	r2, r0
 8026be2:	bfc8      	it	gt
 8026be4:	6030      	strgt	r0, [r6, #0]
 8026be6:	682a      	ldr	r2, [r5, #0]
 8026be8:	4290      	cmp	r0, r2
 8026bea:	bfc8      	it	gt
 8026bec:	6028      	strgt	r0, [r5, #0]
 8026bee:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 8026bf2:	e7d1      	b.n	8026b98 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 8026bf4:	9b00      	ldr	r3, [sp, #0]
 8026bf6:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8026bfa:	455b      	cmp	r3, fp
 8026bfc:	dd27      	ble.n	8026c4e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 8026bfe:	4618      	mov	r0, r3
 8026c00:	f7ea fd10 	bl	8011624 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026c04:	a903      	add	r1, sp, #12
 8026c06:	9003      	str	r0, [sp, #12]
 8026c08:	4650      	mov	r0, sl
 8026c0a:	f7ea fbd3 	bl	80113b4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026c0e:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8026c12:	4410      	add	r0, r2
 8026c14:	f8d9 2000 	ldr.w	r2, [r9]
 8026c18:	4282      	cmp	r2, r0
 8026c1a:	bfc8      	it	gt
 8026c1c:	f8c9 0000 	strgt.w	r0, [r9]
 8026c20:	683a      	ldr	r2, [r7, #0]
 8026c22:	4290      	cmp	r0, r2
 8026c24:	bfc8      	it	gt
 8026c26:	6038      	strgt	r0, [r7, #0]
 8026c28:	9800      	ldr	r0, [sp, #0]
 8026c2a:	f7ff ff41 	bl	8026ab0 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026c2e:	a903      	add	r1, sp, #12
 8026c30:	9003      	str	r0, [sp, #12]
 8026c32:	4650      	mov	r0, sl
 8026c34:	f7ea fbbe 	bl	80113b4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026c38:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8026c3c:	1a10      	subs	r0, r2, r0
 8026c3e:	6832      	ldr	r2, [r6, #0]
 8026c40:	4282      	cmp	r2, r0
 8026c42:	bfc8      	it	gt
 8026c44:	6030      	strgt	r0, [r6, #0]
 8026c46:	682a      	ldr	r2, [r5, #0]
 8026c48:	4290      	cmp	r0, r2
 8026c4a:	bfc8      	it	gt
 8026c4c:	6028      	strgt	r0, [r5, #0]
 8026c4e:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8026c52:	f8d9 1000 	ldr.w	r1, [r9]
 8026c56:	4291      	cmp	r1, r2
 8026c58:	bfc8      	it	gt
 8026c5a:	f8c9 2000 	strgt.w	r2, [r9]
 8026c5e:	683a      	ldr	r2, [r7, #0]
 8026c60:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 8026c64:	429a      	cmp	r2, r3
 8026c66:	bfb8      	it	lt
 8026c68:	603b      	strlt	r3, [r7, #0]
 8026c6a:	6832      	ldr	r2, [r6, #0]
 8026c6c:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8026c70:	429a      	cmp	r2, r3
 8026c72:	bfc8      	it	gt
 8026c74:	6033      	strgt	r3, [r6, #0]
 8026c76:	682a      	ldr	r2, [r5, #0]
 8026c78:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8026c7c:	429a      	cmp	r2, r3
 8026c7e:	da00      	bge.n	8026c82 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8026c80:	602b      	str	r3, [r5, #0]
 8026c82:	b005      	add	sp, #20
 8026c84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026c88:	2002      	movs	r0, #2
 8026c8a:	3401      	adds	r4, #1
 8026c8c:	fb94 f4f0 	sdiv	r4, r4, r0
 8026c90:	4610      	mov	r0, r2
 8026c92:	9201      	str	r2, [sp, #4]
 8026c94:	f7ea fcc6 	bl	8011624 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026c98:	a903      	add	r1, sp, #12
 8026c9a:	9003      	str	r0, [sp, #12]
 8026c9c:	4650      	mov	r0, sl
 8026c9e:	f7ea fb89 	bl	80113b4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026ca2:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8026ca6:	9a01      	ldr	r2, [sp, #4]
 8026ca8:	4408      	add	r0, r1
 8026caa:	f8d9 1000 	ldr.w	r1, [r9]
 8026cae:	1b03      	subs	r3, r0, r4
 8026cb0:	4299      	cmp	r1, r3
 8026cb2:	bfc8      	it	gt
 8026cb4:	f8c9 3000 	strgt.w	r3, [r9]
 8026cb8:	6839      	ldr	r1, [r7, #0]
 8026cba:	428b      	cmp	r3, r1
 8026cbc:	bfc8      	it	gt
 8026cbe:	603b      	strgt	r3, [r7, #0]
 8026cc0:	f8d9 1000 	ldr.w	r1, [r9]
 8026cc4:	4420      	add	r0, r4
 8026cc6:	4281      	cmp	r1, r0
 8026cc8:	bfc8      	it	gt
 8026cca:	f8c9 0000 	strgt.w	r0, [r9]
 8026cce:	6839      	ldr	r1, [r7, #0]
 8026cd0:	4288      	cmp	r0, r1
 8026cd2:	bfc8      	it	gt
 8026cd4:	6038      	strgt	r0, [r7, #0]
 8026cd6:	4610      	mov	r0, r2
 8026cd8:	f7ff feea 	bl	8026ab0 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026cdc:	a903      	add	r1, sp, #12
 8026cde:	9003      	str	r0, [sp, #12]
 8026ce0:	4650      	mov	r0, sl
 8026ce2:	f7ea fb67 	bl	80113b4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026ce6:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8026cea:	1a10      	subs	r0, r2, r0
 8026cec:	6832      	ldr	r2, [r6, #0]
 8026cee:	1b01      	subs	r1, r0, r4
 8026cf0:	428a      	cmp	r2, r1
 8026cf2:	bfc8      	it	gt
 8026cf4:	6031      	strgt	r1, [r6, #0]
 8026cf6:	682a      	ldr	r2, [r5, #0]
 8026cf8:	4291      	cmp	r1, r2
 8026cfa:	bfc8      	it	gt
 8026cfc:	6029      	strgt	r1, [r5, #0]
 8026cfe:	6832      	ldr	r2, [r6, #0]
 8026d00:	4420      	add	r0, r4
 8026d02:	4282      	cmp	r2, r0
 8026d04:	bfc8      	it	gt
 8026d06:	6030      	strgt	r0, [r6, #0]
 8026d08:	682a      	ldr	r2, [r5, #0]
 8026d0a:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 8026d0e:	4290      	cmp	r0, r2
 8026d10:	fb9b f2f1 	sdiv	r2, fp, r1
 8026d14:	fb01 b212 	mls	r2, r1, r2, fp
 8026d18:	eba1 0202 	sub.w	r2, r1, r2
 8026d1c:	bfc8      	it	gt
 8026d1e:	6028      	strgt	r0, [r5, #0]
 8026d20:	fb92 f0f1 	sdiv	r0, r2, r1
 8026d24:	fb01 2210 	mls	r2, r1, r0, r2
 8026d28:	4493      	add	fp, r2
 8026d2a:	9b00      	ldr	r3, [sp, #0]
 8026d2c:	455b      	cmp	r3, fp
 8026d2e:	db40      	blt.n	8026db2 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 8026d30:	4658      	mov	r0, fp
 8026d32:	f7ea fc77 	bl	8011624 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026d36:	a903      	add	r1, sp, #12
 8026d38:	9003      	str	r0, [sp, #12]
 8026d3a:	4650      	mov	r0, sl
 8026d3c:	f7ea fb3a 	bl	80113b4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026d40:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8026d44:	4410      	add	r0, r2
 8026d46:	f8d9 2000 	ldr.w	r2, [r9]
 8026d4a:	1b01      	subs	r1, r0, r4
 8026d4c:	428a      	cmp	r2, r1
 8026d4e:	bfc8      	it	gt
 8026d50:	f8c9 1000 	strgt.w	r1, [r9]
 8026d54:	683a      	ldr	r2, [r7, #0]
 8026d56:	4291      	cmp	r1, r2
 8026d58:	bfc8      	it	gt
 8026d5a:	6039      	strgt	r1, [r7, #0]
 8026d5c:	f8d9 2000 	ldr.w	r2, [r9]
 8026d60:	4420      	add	r0, r4
 8026d62:	4282      	cmp	r2, r0
 8026d64:	bfc8      	it	gt
 8026d66:	f8c9 0000 	strgt.w	r0, [r9]
 8026d6a:	683a      	ldr	r2, [r7, #0]
 8026d6c:	4290      	cmp	r0, r2
 8026d6e:	bfc8      	it	gt
 8026d70:	6038      	strgt	r0, [r7, #0]
 8026d72:	4658      	mov	r0, fp
 8026d74:	f7ff fe9c 	bl	8026ab0 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026d78:	a903      	add	r1, sp, #12
 8026d7a:	9003      	str	r0, [sp, #12]
 8026d7c:	4650      	mov	r0, sl
 8026d7e:	f7ea fb19 	bl	80113b4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026d82:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8026d86:	1a10      	subs	r0, r2, r0
 8026d88:	6832      	ldr	r2, [r6, #0]
 8026d8a:	1b01      	subs	r1, r0, r4
 8026d8c:	428a      	cmp	r2, r1
 8026d8e:	bfc8      	it	gt
 8026d90:	6031      	strgt	r1, [r6, #0]
 8026d92:	682a      	ldr	r2, [r5, #0]
 8026d94:	4291      	cmp	r1, r2
 8026d96:	bfc8      	it	gt
 8026d98:	6029      	strgt	r1, [r5, #0]
 8026d9a:	6832      	ldr	r2, [r6, #0]
 8026d9c:	4420      	add	r0, r4
 8026d9e:	4282      	cmp	r2, r0
 8026da0:	bfc8      	it	gt
 8026da2:	6030      	strgt	r0, [r6, #0]
 8026da4:	682a      	ldr	r2, [r5, #0]
 8026da6:	4290      	cmp	r0, r2
 8026da8:	bfc8      	it	gt
 8026daa:	6028      	strgt	r0, [r5, #0]
 8026dac:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 8026db0:	e7bb      	b.n	8026d2a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 8026db2:	9b00      	ldr	r3, [sp, #0]
 8026db4:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8026db8:	455b      	cmp	r3, fp
 8026dba:	f77f af62 	ble.w	8026c82 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8026dbe:	4618      	mov	r0, r3
 8026dc0:	f7ea fc30 	bl	8011624 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026dc4:	a903      	add	r1, sp, #12
 8026dc6:	9003      	str	r0, [sp, #12]
 8026dc8:	4650      	mov	r0, sl
 8026dca:	f7ea faf3 	bl	80113b4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026dce:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8026dd2:	4410      	add	r0, r2
 8026dd4:	f8d9 2000 	ldr.w	r2, [r9]
 8026dd8:	1b01      	subs	r1, r0, r4
 8026dda:	428a      	cmp	r2, r1
 8026ddc:	bfc8      	it	gt
 8026dde:	f8c9 1000 	strgt.w	r1, [r9]
 8026de2:	683a      	ldr	r2, [r7, #0]
 8026de4:	4291      	cmp	r1, r2
 8026de6:	bfc8      	it	gt
 8026de8:	6039      	strgt	r1, [r7, #0]
 8026dea:	f8d9 2000 	ldr.w	r2, [r9]
 8026dee:	4420      	add	r0, r4
 8026df0:	4282      	cmp	r2, r0
 8026df2:	bfc8      	it	gt
 8026df4:	f8c9 0000 	strgt.w	r0, [r9]
 8026df8:	683b      	ldr	r3, [r7, #0]
 8026dfa:	4298      	cmp	r0, r3
 8026dfc:	bfc8      	it	gt
 8026dfe:	6038      	strgt	r0, [r7, #0]
 8026e00:	9800      	ldr	r0, [sp, #0]
 8026e02:	f7ff fe55 	bl	8026ab0 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026e06:	a903      	add	r1, sp, #12
 8026e08:	9003      	str	r0, [sp, #12]
 8026e0a:	4650      	mov	r0, sl
 8026e0c:	f7ea fad2 	bl	80113b4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026e10:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8026e14:	6832      	ldr	r2, [r6, #0]
 8026e16:	1a18      	subs	r0, r3, r0
 8026e18:	1b03      	subs	r3, r0, r4
 8026e1a:	429a      	cmp	r2, r3
 8026e1c:	bfc8      	it	gt
 8026e1e:	6033      	strgt	r3, [r6, #0]
 8026e20:	682a      	ldr	r2, [r5, #0]
 8026e22:	4293      	cmp	r3, r2
 8026e24:	bfc8      	it	gt
 8026e26:	602b      	strgt	r3, [r5, #0]
 8026e28:	6833      	ldr	r3, [r6, #0]
 8026e2a:	4404      	add	r4, r0
 8026e2c:	42a3      	cmp	r3, r4
 8026e2e:	bfc8      	it	gt
 8026e30:	6034      	strgt	r4, [r6, #0]
 8026e32:	682b      	ldr	r3, [r5, #0]
 8026e34:	429c      	cmp	r4, r3
 8026e36:	bfc8      	it	gt
 8026e38:	602c      	strgt	r4, [r5, #0]
 8026e3a:	e722      	b.n	8026c82 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

08026e3c <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 8026e3c:	b530      	push	{r4, r5, lr}
 8026e3e:	4604      	mov	r4, r0
 8026e40:	4608      	mov	r0, r1
 8026e42:	4611      	mov	r1, r2
 8026e44:	461a      	mov	r2, r3
 8026e46:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8026e4a:	b089      	sub	sp, #36	; 0x24
 8026e4c:	015b      	lsls	r3, r3, #5
 8026e4e:	9304      	str	r3, [sp, #16]
 8026e50:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8026e54:	2500      	movs	r5, #0
 8026e56:	015b      	lsls	r3, r3, #5
 8026e58:	e9cd 3506 	strd	r3, r5, [sp, #24]
 8026e5c:	ab07      	add	r3, sp, #28
 8026e5e:	9302      	str	r3, [sp, #8]
 8026e60:	ab06      	add	r3, sp, #24
 8026e62:	9301      	str	r3, [sp, #4]
 8026e64:	ab05      	add	r3, sp, #20
 8026e66:	9300      	str	r3, [sp, #0]
 8026e68:	ab04      	add	r3, sp, #16
 8026e6a:	9505      	str	r5, [sp, #20]
 8026e6c:	f7ff fe3e 	bl	8026aec <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 8026e70:	2520      	movs	r5, #32
 8026e72:	9a04      	ldr	r2, [sp, #16]
 8026e74:	9805      	ldr	r0, [sp, #20]
 8026e76:	fb92 f2f5 	sdiv	r2, r2, r5
 8026e7a:	fb90 f0f5 	sdiv	r0, r0, r5
 8026e7e:	b292      	uxth	r2, r2
 8026e80:	3002      	adds	r0, #2
 8026e82:	1a80      	subs	r0, r0, r2
 8026e84:	9b06      	ldr	r3, [sp, #24]
 8026e86:	9907      	ldr	r1, [sp, #28]
 8026e88:	fb93 f3f5 	sdiv	r3, r3, r5
 8026e8c:	fb91 f1f5 	sdiv	r1, r1, r5
 8026e90:	b29b      	uxth	r3, r3
 8026e92:	3102      	adds	r1, #2
 8026e94:	1ac9      	subs	r1, r1, r3
 8026e96:	3a01      	subs	r2, #1
 8026e98:	3b01      	subs	r3, #1
 8026e9a:	80a0      	strh	r0, [r4, #4]
 8026e9c:	4620      	mov	r0, r4
 8026e9e:	8022      	strh	r2, [r4, #0]
 8026ea0:	8063      	strh	r3, [r4, #2]
 8026ea2:	80e1      	strh	r1, [r4, #6]
 8026ea4:	b009      	add	sp, #36	; 0x24
 8026ea6:	bd30      	pop	{r4, r5, pc}

08026ea8 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 8026ea8:	b510      	push	{r4, lr}
 8026eaa:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 8026eae:	4604      	mov	r4, r0
 8026eb0:	f7ff ffc4 	bl	8026e3c <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8026eb4:	4620      	mov	r0, r4
 8026eb6:	bd10      	pop	{r4, pc}

08026eb8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 8026eb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026eba:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 8026ebe:	4606      	mov	r6, r0
 8026ec0:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 8026ec4:	6813      	ldr	r3, [r2, #0]
 8026ec6:	42a5      	cmp	r5, r4
 8026ec8:	ea4f 1040 	mov.w	r0, r0, lsl #5
 8026ecc:	da2b      	bge.n	8026f26 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 8026ece:	42a3      	cmp	r3, r4
 8026ed0:	dd14      	ble.n	8026efc <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 8026ed2:	b168      	cbz	r0, 8026ef0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8026ed4:	4267      	negs	r7, r4
 8026ed6:	fb97 f2f0 	sdiv	r2, r7, r0
 8026eda:	fb00 7212 	mls	r2, r0, r2, r7
 8026ede:	1a82      	subs	r2, r0, r2
 8026ee0:	fb92 f7f0 	sdiv	r7, r2, r0
 8026ee4:	fb00 2017 	mls	r0, r0, r7, r2
 8026ee8:	1a24      	subs	r4, r4, r0
 8026eea:	42ac      	cmp	r4, r5
 8026eec:	bfb8      	it	lt
 8026eee:	462c      	movlt	r4, r5
 8026ef0:	4630      	mov	r0, r6
 8026ef2:	4622      	mov	r2, r4
 8026ef4:	f7ff ffa2 	bl	8026e3c <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8026ef8:	4630      	mov	r0, r6
 8026efa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8026efc:	42ab      	cmp	r3, r5
 8026efe:	dd0e      	ble.n	8026f1e <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 8026f00:	b168      	cbz	r0, 8026f1e <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 8026f02:	425f      	negs	r7, r3
 8026f04:	fb97 f2f0 	sdiv	r2, r7, r0
 8026f08:	fb00 7212 	mls	r2, r0, r2, r7
 8026f0c:	1a82      	subs	r2, r0, r2
 8026f0e:	fb92 f7f0 	sdiv	r7, r2, r0
 8026f12:	fb00 2017 	mls	r0, r0, r7, r2
 8026f16:	1a1b      	subs	r3, r3, r0
 8026f18:	42ab      	cmp	r3, r5
 8026f1a:	bfb8      	it	lt
 8026f1c:	462b      	movlt	r3, r5
 8026f1e:	4622      	mov	r2, r4
 8026f20:	461c      	mov	r4, r3
 8026f22:	4613      	mov	r3, r2
 8026f24:	e7e4      	b.n	8026ef0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8026f26:	42a3      	cmp	r3, r4
 8026f28:	da10      	bge.n	8026f4c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 8026f2a:	b148      	cbz	r0, 8026f40 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 8026f2c:	fb94 f2f0 	sdiv	r2, r4, r0
 8026f30:	fb00 4212 	mls	r2, r0, r2, r4
 8026f34:	1a82      	subs	r2, r0, r2
 8026f36:	fb92 f7f0 	sdiv	r7, r2, r0
 8026f3a:	fb00 2017 	mls	r0, r0, r7, r2
 8026f3e:	4404      	add	r4, r0
 8026f40:	42a5      	cmp	r5, r4
 8026f42:	bfa8      	it	ge
 8026f44:	4625      	movge	r5, r4
 8026f46:	461c      	mov	r4, r3
 8026f48:	462b      	mov	r3, r5
 8026f4a:	e7d1      	b.n	8026ef0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8026f4c:	42ab      	cmp	r3, r5
 8026f4e:	dacf      	bge.n	8026ef0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8026f50:	2800      	cmp	r0, #0
 8026f52:	d0cd      	beq.n	8026ef0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8026f54:	fb93 f2f0 	sdiv	r2, r3, r0
 8026f58:	fb00 3212 	mls	r2, r0, r2, r3
 8026f5c:	1a82      	subs	r2, r0, r2
 8026f5e:	fb92 f7f0 	sdiv	r7, r2, r0
 8026f62:	fb00 2017 	mls	r0, r0, r7, r2
 8026f66:	4403      	add	r3, r0
 8026f68:	42ab      	cmp	r3, r5
 8026f6a:	bfa8      	it	ge
 8026f6c:	462b      	movge	r3, r5
 8026f6e:	e7bf      	b.n	8026ef0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

08026f70 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 8026f70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026f74:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 8026f78:	42ae      	cmp	r6, r5
 8026f7a:	bfa2      	ittt	ge
 8026f7c:	4633      	movge	r3, r6
 8026f7e:	462e      	movge	r6, r5
 8026f80:	461d      	movge	r5, r3
 8026f82:	1bab      	subs	r3, r5, r6
 8026f84:	468b      	mov	fp, r1
 8026f86:	6c01      	ldr	r1, [r0, #64]	; 0x40
 8026f88:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 8026f8c:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 8026f90:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8026f94:	f04f 0220 	mov.w	r2, #32
 8026f98:	b0ab      	sub	sp, #172	; 0xac
 8026f9a:	4604      	mov	r4, r0
 8026f9c:	bfa4      	itt	ge
 8026f9e:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 8026fa2:	2600      	movge	r6, #0
 8026fa4:	fb99 f9f2 	sdiv	r9, r9, r2
 8026fa8:	fb9a faf2 	sdiv	sl, sl, r2
 8026fac:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8026fae:	2900      	cmp	r1, #0
 8026fb0:	f000 80f5 	beq.w	802719e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 8026fb4:	f9bb 0000 	ldrsh.w	r0, [fp]
 8026fb8:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 8026fbc:	eba9 0700 	sub.w	r7, r9, r0
 8026fc0:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 8026fc4:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 8026fc8:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 8026fcc:	ebaa 0802 	sub.w	r8, sl, r2
 8026fd0:	4407      	add	r7, r0
 8026fd2:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 8026fd6:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 8026fda:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 8026fde:	b23f      	sxth	r7, r7
 8026fe0:	4490      	add	r8, r2
 8026fe2:	eba9 0707 	sub.w	r7, r9, r7
 8026fe6:	fa0f f888 	sxth.w	r8, r8
 8026fea:	ebaa 0808 	sub.w	r8, sl, r8
 8026fee:	2f00      	cmp	r7, #0
 8026ff0:	bfb8      	it	lt
 8026ff2:	427f      	neglt	r7, r7
 8026ff4:	f1b8 0f00 	cmp.w	r8, #0
 8026ff8:	bfb8      	it	lt
 8026ffa:	f1c8 0800 	rsblt	r8, r8, #0
 8026ffe:	45bc      	cmp	ip, r7
 8027000:	bfcc      	ite	gt
 8027002:	f10c 0701 	addgt.w	r7, ip, #1
 8027006:	3701      	addle	r7, #1
 8027008:	4540      	cmp	r0, r8
 802700a:	bfc8      	it	gt
 802700c:	f100 0801 	addgt.w	r8, r0, #1
 8027010:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 8027014:	f100 0001 	add.w	r0, r0, #1
 8027018:	ea4f 0060 	mov.w	r0, r0, asr #1
 802701c:	f04f 0202 	mov.w	r2, #2
 8027020:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8027024:	fb91 f1f2 	sdiv	r1, r1, r2
 8027028:	eba3 0301 	sub.w	r3, r3, r1
 802702c:	bfd8      	it	le
 802702e:	f108 0801 	addle.w	r8, r8, #1
 8027032:	9201      	str	r2, [sp, #4]
 8027034:	930d      	str	r3, [sp, #52]	; 0x34
 8027036:	f7ea fad5 	bl	80115e4 <_ZN8touchgfx7CWRUtil4sineEi>
 802703a:	a92a      	add	r1, sp, #168	; 0xa8
 802703c:	fb08 f808 	mul.w	r8, r8, r8
 8027040:	f841 0d70 	str.w	r0, [r1, #-112]!
 8027044:	a80d      	add	r0, sp, #52	; 0x34
 8027046:	f7ea f9b5 	bl	80113b4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802704a:	fb07 8707 	mla	r7, r7, r7, r8
 802704e:	f04f 0c20 	mov.w	ip, #32
 8027052:	fb90 f0fc 	sdiv	r0, r0, ip
 8027056:	4340      	muls	r0, r0
 8027058:	4287      	cmp	r7, r0
 802705a:	9a01      	ldr	r2, [sp, #4]
 802705c:	da04      	bge.n	8027068 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 802705e:	2401      	movs	r4, #1
 8027060:	4620      	mov	r0, r4
 8027062:	b02b      	add	sp, #172	; 0xac
 8027064:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027068:	6b60      	ldr	r0, [r4, #52]	; 0x34
 802706a:	6c21      	ldr	r1, [r4, #64]	; 0x40
 802706c:	fb91 f3f2 	sdiv	r3, r1, r2
 8027070:	4403      	add	r3, r0
 8027072:	fb93 f3fc 	sdiv	r3, r3, ip
 8027076:	f9bb 1000 	ldrsh.w	r1, [fp]
 802707a:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 802707e:	440a      	add	r2, r1
 8027080:	b212      	sxth	r2, r2
 8027082:	454a      	cmp	r2, r9
 8027084:	bfa8      	it	ge
 8027086:	464a      	movge	r2, r9
 8027088:	428a      	cmp	r2, r1
 802708a:	bfac      	ite	ge
 802708c:	eba9 0902 	subge.w	r9, r9, r2
 8027090:	eba9 0901 	sublt.w	r9, r9, r1
 8027094:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 8027098:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 802709c:	440a      	add	r2, r1
 802709e:	b212      	sxth	r2, r2
 80270a0:	4552      	cmp	r2, sl
 80270a2:	bfa8      	it	ge
 80270a4:	4652      	movge	r2, sl
 80270a6:	428a      	cmp	r2, r1
 80270a8:	bfac      	ite	ge
 80270aa:	ebaa 0a02 	subge.w	sl, sl, r2
 80270ae:	ebaa 0a01 	sublt.w	sl, sl, r1
 80270b2:	3301      	adds	r3, #1
 80270b4:	fb0a fa0a 	mul.w	sl, sl, sl
 80270b8:	fb09 a909 	mla	r9, r9, r9, sl
 80270bc:	435b      	muls	r3, r3
 80270be:	4599      	cmp	r9, r3
 80270c0:	dccd      	bgt.n	802705e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 80270c2:	465a      	mov	r2, fp
 80270c4:	4621      	mov	r1, r4
 80270c6:	a80e      	add	r0, sp, #56	; 0x38
 80270c8:	f7ff faae 	bl	8026628 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 80270cc:	6b62      	ldr	r2, [r4, #52]	; 0x34
 80270ce:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80270d0:	9209      	str	r2, [sp, #36]	; 0x24
 80270d2:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 80270d6:	930a      	str	r3, [sp, #40]	; 0x28
 80270d8:	dd07      	ble.n	80270ea <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 80270da:	2102      	movs	r1, #2
 80270dc:	fb93 f3f1 	sdiv	r3, r3, r1
 80270e0:	4413      	add	r3, r2
 80270e2:	930a      	str	r3, [sp, #40]	; 0x28
 80270e4:	fb93 f3f1 	sdiv	r3, r3, r1
 80270e8:	9309      	str	r3, [sp, #36]	; 0x24
 80270ea:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80270ee:	4630      	mov	r0, r6
 80270f0:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80270f4:	930b      	str	r3, [sp, #44]	; 0x2c
 80270f6:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 80270fa:	f7ea fa93 	bl	8011624 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80270fe:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 8027102:	f04f 0a02 	mov.w	sl, #2
 8027106:	f849 0d74 	str.w	r0, [r9, #-116]!
 802710a:	a80b      	add	r0, sp, #44	; 0x2c
 802710c:	4649      	mov	r1, r9
 802710e:	f7ea f951 	bl	80113b4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027112:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027114:	fb90 f0fa 	sdiv	r0, r0, sl
 8027118:	eb00 0b03 	add.w	fp, r0, r3
 802711c:	4630      	mov	r0, r6
 802711e:	f7ff fcc7 	bl	8026ab0 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027122:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 8027126:	017f      	lsls	r7, r7, #5
 8027128:	f848 0d78 	str.w	r0, [r8, #-120]!
 802712c:	a80b      	add	r0, sp, #44	; 0x2c
 802712e:	4641      	mov	r1, r8
 8027130:	f7ea f940 	bl	80113b4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027134:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027136:	fb90 f0fa 	sdiv	r0, r0, sl
 802713a:	4659      	mov	r1, fp
 802713c:	1a12      	subs	r2, r2, r0
 802713e:	a80e      	add	r0, sp, #56	; 0x38
 8027140:	f7ff fbf2 	bl	8026928 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8027144:	f106 0a20 	add.w	sl, r6, #32
 8027148:	bb67      	cbnz	r7, 80271a4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 802714a:	46b3      	mov	fp, r6
 802714c:	45aa      	cmp	sl, r5
 802714e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8027150:	dc33      	bgt.n	80271ba <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 8027152:	9909      	ldr	r1, [sp, #36]	; 0x24
 8027154:	4650      	mov	r0, sl
 8027156:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 802715a:	920b      	str	r2, [sp, #44]	; 0x2c
 802715c:	f7ea fa62 	bl	8011624 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027160:	4641      	mov	r1, r8
 8027162:	900c      	str	r0, [sp, #48]	; 0x30
 8027164:	a80b      	add	r0, sp, #44	; 0x2c
 8027166:	f7ea f925 	bl	80113b4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802716a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 802716c:	2302      	movs	r3, #2
 802716e:	fb90 f0f3 	sdiv	r0, r0, r3
 8027172:	eb00 0b02 	add.w	fp, r0, r2
 8027176:	4650      	mov	r0, sl
 8027178:	f7ff fc9a 	bl	8026ab0 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802717c:	4649      	mov	r1, r9
 802717e:	900d      	str	r0, [sp, #52]	; 0x34
 8027180:	a80b      	add	r0, sp, #44	; 0x2c
 8027182:	f7ea f917 	bl	80113b4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027186:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027188:	2302      	movs	r3, #2
 802718a:	4659      	mov	r1, fp
 802718c:	fb90 f0f3 	sdiv	r0, r0, r3
 8027190:	1a12      	subs	r2, r2, r0
 8027192:	a80e      	add	r0, sp, #56	; 0x38
 8027194:	46d3      	mov	fp, sl
 8027196:	f7ff fc14 	bl	80269c2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802719a:	44ba      	add	sl, r7
 802719c:	e7d6      	b.n	802714c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 802719e:	fb93 f3f2 	sdiv	r3, r3, r2
 80271a2:	e768      	b.n	8027076 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 80271a4:	fb9a f2f7 	sdiv	r2, sl, r7
 80271a8:	fb07 a212 	mls	r2, r7, r2, sl
 80271ac:	1aba      	subs	r2, r7, r2
 80271ae:	fb92 f1f7 	sdiv	r1, r2, r7
 80271b2:	fb07 2211 	mls	r2, r7, r1, r2
 80271b6:	4492      	add	sl, r2
 80271b8:	e7c7      	b.n	802714a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 80271ba:	45ab      	cmp	fp, r5
 80271bc:	da23      	bge.n	8027206 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 80271be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80271c0:	4628      	mov	r0, r5
 80271c2:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 80271c6:	920b      	str	r2, [sp, #44]	; 0x2c
 80271c8:	f7ea fa2c 	bl	8011624 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80271cc:	4641      	mov	r1, r8
 80271ce:	900c      	str	r0, [sp, #48]	; 0x30
 80271d0:	a80b      	add	r0, sp, #44	; 0x2c
 80271d2:	f7ea f8ef 	bl	80113b4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80271d6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80271d8:	f04f 0a02 	mov.w	sl, #2
 80271dc:	fb90 f0fa 	sdiv	r0, r0, sl
 80271e0:	4403      	add	r3, r0
 80271e2:	4628      	mov	r0, r5
 80271e4:	9301      	str	r3, [sp, #4]
 80271e6:	f7ff fc63 	bl	8026ab0 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80271ea:	4649      	mov	r1, r9
 80271ec:	900d      	str	r0, [sp, #52]	; 0x34
 80271ee:	a80b      	add	r0, sp, #44	; 0x2c
 80271f0:	f7ea f8e0 	bl	80113b4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80271f4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80271f6:	9b01      	ldr	r3, [sp, #4]
 80271f8:	fb90 f0fa 	sdiv	r0, r0, sl
 80271fc:	4619      	mov	r1, r3
 80271fe:	1a12      	subs	r2, r2, r0
 8027200:	a80e      	add	r0, sp, #56	; 0x38
 8027202:	f7ff fbde 	bl	80269c2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027206:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027208:	b99b      	cbnz	r3, 8027232 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 802720a:	1bad      	subs	r5, r5, r6
 802720c:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 8027210:	da04      	bge.n	802721c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8027212:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 8027216:	a80e      	add	r0, sp, #56	; 0x38
 8027218:	f7ff fbd3 	bl	80269c2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802721c:	21ff      	movs	r1, #255	; 0xff
 802721e:	a80e      	add	r0, sp, #56	; 0x38
 8027220:	f7ff fabe 	bl	80267a0 <_ZN8touchgfx6Canvas6renderEh>
 8027224:	4604      	mov	r4, r0
 8027226:	4b8a      	ldr	r3, [pc, #552]	; (8027450 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 8027228:	930e      	str	r3, [sp, #56]	; 0x38
 802722a:	a816      	add	r0, sp, #88	; 0x58
 802722c:	f7eb fd2e 	bl	8012c8c <_ZN8touchgfx7OutlineD1Ev>
 8027230:	e716      	b.n	8027060 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 8027232:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 8027236:	429a      	cmp	r2, r3
 8027238:	f0c0 8107 	bcc.w	802744a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 802723c:	1bab      	subs	r3, r5, r6
 802723e:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 8027242:	9301      	str	r3, [sp, #4]
 8027244:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8027248:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 802724c:	da43      	bge.n	80272d6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 802724e:	4628      	mov	r0, r5
 8027250:	f7ea f9e8 	bl	8011624 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027254:	4649      	mov	r1, r9
 8027256:	900d      	str	r0, [sp, #52]	; 0x34
 8027258:	a809      	add	r0, sp, #36	; 0x24
 802725a:	f7ea f8ab 	bl	80113b4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802725e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027260:	18c3      	adds	r3, r0, r3
 8027262:	4628      	mov	r0, r5
 8027264:	9303      	str	r3, [sp, #12]
 8027266:	f7ff fc23 	bl	8026ab0 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802726a:	4649      	mov	r1, r9
 802726c:	900d      	str	r0, [sp, #52]	; 0x34
 802726e:	a809      	add	r0, sp, #36	; 0x24
 8027270:	f7ea f8a0 	bl	80113b4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027274:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8027276:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 802727a:	1a1b      	subs	r3, r3, r0
 802727c:	9302      	str	r3, [sp, #8]
 802727e:	9204      	str	r2, [sp, #16]
 8027280:	eb0a 0305 	add.w	r3, sl, r5
 8027284:	9a04      	ldr	r2, [sp, #16]
 8027286:	4293      	cmp	r3, r2
 8027288:	da25      	bge.n	80272d6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 802728a:	4618      	mov	r0, r3
 802728c:	9306      	str	r3, [sp, #24]
 802728e:	f7ea f9c9 	bl	8011624 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027292:	4649      	mov	r1, r9
 8027294:	900d      	str	r0, [sp, #52]	; 0x34
 8027296:	a80a      	add	r0, sp, #40	; 0x28
 8027298:	f7ea f88c 	bl	80113b4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802729c:	9b03      	ldr	r3, [sp, #12]
 802729e:	2202      	movs	r2, #2
 80272a0:	fb90 f0f2 	sdiv	r0, r0, r2
 80272a4:	18c3      	adds	r3, r0, r3
 80272a6:	9305      	str	r3, [sp, #20]
 80272a8:	9b06      	ldr	r3, [sp, #24]
 80272aa:	9207      	str	r2, [sp, #28]
 80272ac:	4618      	mov	r0, r3
 80272ae:	f7ff fbff 	bl	8026ab0 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80272b2:	a92a      	add	r1, sp, #168	; 0xa8
 80272b4:	f841 0d78 	str.w	r0, [r1, #-120]!
 80272b8:	a80a      	add	r0, sp, #40	; 0x28
 80272ba:	f7ea f87b 	bl	80113b4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80272be:	9b02      	ldr	r3, [sp, #8]
 80272c0:	9a07      	ldr	r2, [sp, #28]
 80272c2:	9905      	ldr	r1, [sp, #20]
 80272c4:	fb90 f2f2 	sdiv	r2, r0, r2
 80272c8:	a80e      	add	r0, sp, #56	; 0x38
 80272ca:	1a9a      	subs	r2, r3, r2
 80272cc:	f7ff fb79 	bl	80269c2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80272d0:	9b06      	ldr	r3, [sp, #24]
 80272d2:	4453      	add	r3, sl
 80272d4:	e7d6      	b.n	8027284 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 80272d6:	45ab      	cmp	fp, r5
 80272d8:	da25      	bge.n	8027326 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 80272da:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80272de:	4628      	mov	r0, r5
 80272e0:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 80272e4:	930b      	str	r3, [sp, #44]	; 0x2c
 80272e6:	f7ea f99d 	bl	8011624 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80272ea:	4641      	mov	r1, r8
 80272ec:	900c      	str	r0, [sp, #48]	; 0x30
 80272ee:	a80b      	add	r0, sp, #44	; 0x2c
 80272f0:	f7ea f860 	bl	80113b4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80272f4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80272f6:	2202      	movs	r2, #2
 80272f8:	fb90 f0f2 	sdiv	r0, r0, r2
 80272fc:	eb00 0903 	add.w	r9, r0, r3
 8027300:	4628      	mov	r0, r5
 8027302:	9202      	str	r2, [sp, #8]
 8027304:	f7ff fbd4 	bl	8026ab0 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027308:	a92a      	add	r1, sp, #168	; 0xa8
 802730a:	f841 0d74 	str.w	r0, [r1, #-116]!
 802730e:	a80b      	add	r0, sp, #44	; 0x2c
 8027310:	f7ea f850 	bl	80113b4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027314:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8027316:	9a02      	ldr	r2, [sp, #8]
 8027318:	fb90 f2f2 	sdiv	r2, r0, r2
 802731c:	4649      	mov	r1, r9
 802731e:	1a9a      	subs	r2, r3, r2
 8027320:	a80e      	add	r0, sp, #56	; 0x38
 8027322:	f7ff fb4e 	bl	80269c2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027326:	46d9      	mov	r9, fp
 8027328:	2502      	movs	r5, #2
 802732a:	45b1      	cmp	r9, r6
 802732c:	db25      	blt.n	802737a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 802732e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8027332:	4648      	mov	r0, r9
 8027334:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8027338:	930b      	str	r3, [sp, #44]	; 0x2c
 802733a:	f7ea f973 	bl	8011624 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802733e:	4641      	mov	r1, r8
 8027340:	900c      	str	r0, [sp, #48]	; 0x30
 8027342:	a80b      	add	r0, sp, #44	; 0x2c
 8027344:	f7ea f836 	bl	80113b4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027348:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802734a:	fb90 f0f5 	sdiv	r0, r0, r5
 802734e:	eb00 0b03 	add.w	fp, r0, r3
 8027352:	4648      	mov	r0, r9
 8027354:	f7ff fbac 	bl	8026ab0 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027358:	a90d      	add	r1, sp, #52	; 0x34
 802735a:	900d      	str	r0, [sp, #52]	; 0x34
 802735c:	a80b      	add	r0, sp, #44	; 0x2c
 802735e:	f7ea f829 	bl	80113b4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027362:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027364:	fb90 f0f5 	sdiv	r0, r0, r5
 8027368:	4659      	mov	r1, fp
 802736a:	1a12      	subs	r2, r2, r0
 802736c:	a80e      	add	r0, sp, #56	; 0x38
 802736e:	46cb      	mov	fp, r9
 8027370:	f7ff fb27 	bl	80269c2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027374:	eba9 0907 	sub.w	r9, r9, r7
 8027378:	e7d7      	b.n	802732a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 802737a:	455e      	cmp	r6, fp
 802737c:	da22      	bge.n	80273c4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 802737e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8027382:	4630      	mov	r0, r6
 8027384:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8027388:	930b      	str	r3, [sp, #44]	; 0x2c
 802738a:	f7ea f94b 	bl	8011624 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802738e:	4641      	mov	r1, r8
 8027390:	900c      	str	r0, [sp, #48]	; 0x30
 8027392:	a80b      	add	r0, sp, #44	; 0x2c
 8027394:	f7ea f80e 	bl	80113b4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027398:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 802739a:	2502      	movs	r5, #2
 802739c:	fb90 f0f5 	sdiv	r0, r0, r5
 80273a0:	4407      	add	r7, r0
 80273a2:	4630      	mov	r0, r6
 80273a4:	f7ff fb84 	bl	8026ab0 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80273a8:	a92a      	add	r1, sp, #168	; 0xa8
 80273aa:	f841 0d74 	str.w	r0, [r1, #-116]!
 80273ae:	a80b      	add	r0, sp, #44	; 0x2c
 80273b0:	f7ea f800 	bl	80113b4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80273b4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80273b6:	fb90 f0f5 	sdiv	r0, r0, r5
 80273ba:	4639      	mov	r1, r7
 80273bc:	1a12      	subs	r2, r2, r0
 80273be:	a80e      	add	r0, sp, #56	; 0x38
 80273c0:	f7ff faff 	bl	80269c2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80273c4:	9b01      	ldr	r3, [sp, #4]
 80273c6:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 80273ca:	f6bf af27 	bge.w	802721c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 80273ce:	4630      	mov	r0, r6
 80273d0:	f7ea f928 	bl	8011624 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80273d4:	ad2a      	add	r5, sp, #168	; 0xa8
 80273d6:	f04f 0b02 	mov.w	fp, #2
 80273da:	f845 0d74 	str.w	r0, [r5, #-116]!
 80273de:	a809      	add	r0, sp, #36	; 0x24
 80273e0:	4629      	mov	r1, r5
 80273e2:	f7e9 ffe7 	bl	80113b4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80273e6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80273e8:	eb00 0903 	add.w	r9, r0, r3
 80273ec:	4630      	mov	r0, r6
 80273ee:	f7ff fb5f 	bl	8026ab0 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80273f2:	4629      	mov	r1, r5
 80273f4:	900d      	str	r0, [sp, #52]	; 0x34
 80273f6:	a809      	add	r0, sp, #36	; 0x24
 80273f8:	f7e9 ffdc 	bl	80113b4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80273fc:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80273fe:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 8027402:	eba3 0800 	sub.w	r8, r3, r0
 8027406:	4454      	add	r4, sl
 8027408:	42a6      	cmp	r6, r4
 802740a:	f77f af07 	ble.w	802721c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802740e:	4620      	mov	r0, r4
 8027410:	f7ea f908 	bl	8011624 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027414:	4629      	mov	r1, r5
 8027416:	900d      	str	r0, [sp, #52]	; 0x34
 8027418:	a80a      	add	r0, sp, #40	; 0x28
 802741a:	f7e9 ffcb 	bl	80113b4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802741e:	fb90 f0fb 	sdiv	r0, r0, fp
 8027422:	eb00 0709 	add.w	r7, r0, r9
 8027426:	4620      	mov	r0, r4
 8027428:	f7ff fb42 	bl	8026ab0 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802742c:	a90c      	add	r1, sp, #48	; 0x30
 802742e:	900c      	str	r0, [sp, #48]	; 0x30
 8027430:	a80a      	add	r0, sp, #40	; 0x28
 8027432:	f7e9 ffbf 	bl	80113b4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027436:	4639      	mov	r1, r7
 8027438:	fb90 f2fb 	sdiv	r2, r0, fp
 802743c:	a80e      	add	r0, sp, #56	; 0x38
 802743e:	eba8 0202 	sub.w	r2, r8, r2
 8027442:	f7ff fabe 	bl	80269c2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027446:	4454      	add	r4, sl
 8027448:	e7de      	b.n	8027408 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 802744a:	2400      	movs	r4, #0
 802744c:	e6eb      	b.n	8027226 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 802744e:	bf00      	nop
 8027450:	0802ecf0 	.word	0x0802ecf0

08027454 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8027454:	b570      	push	{r4, r5, r6, lr}
 8027456:	790b      	ldrb	r3, [r1, #4]
 8027458:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 802745c:	2b00      	cmp	r3, #0
 802745e:	bf0c      	ite	eq
 8027460:	2301      	moveq	r3, #1
 8027462:	2300      	movne	r3, #0
 8027464:	4604      	mov	r4, r0
 8027466:	460e      	mov	r6, r1
 8027468:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 802746c:	d109      	bne.n	8027482 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 802746e:	b14d      	cbz	r5, 8027484 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8027470:	7933      	ldrb	r3, [r6, #4]
 8027472:	2b01      	cmp	r3, #1
 8027474:	d10c      	bne.n	8027490 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8027476:	6823      	ldr	r3, [r4, #0]
 8027478:	4620      	mov	r0, r4
 802747a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 802747c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8027480:	4718      	bx	r3
 8027482:	b12d      	cbz	r5, 8027490 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8027484:	6823      	ldr	r3, [r4, #0]
 8027486:	4620      	mov	r0, r4
 8027488:	695b      	ldr	r3, [r3, #20]
 802748a:	4798      	blx	r3
 802748c:	2d00      	cmp	r5, #0
 802748e:	d1ef      	bne.n	8027470 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8027490:	bd70      	pop	{r4, r5, r6, pc}

08027492 <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 8027492:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8027496:	4770      	bx	lr

08027498 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 8027498:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 802749c:	4770      	bx	lr

0802749e <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 802749e:	6802      	ldr	r2, [r0, #0]
 80274a0:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 80274a4:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 80274a6:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 80274aa:	4710      	bx	r2

080274ac <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 80274ac:	6802      	ldr	r2, [r0, #0]
 80274ae:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 80274b2:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 80274b4:	eef0 0a40 	vmov.f32	s1, s0
 80274b8:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 80274bc:	4710      	bx	r2

080274be <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 80274be:	6802      	ldr	r2, [r0, #0]
 80274c0:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 80274c4:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 80274c6:	eeb0 1a40 	vmov.f32	s2, s0
 80274ca:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 80274ce:	4710      	bx	r2

080274d0 <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 80274d0:	6802      	ldr	r2, [r0, #0]
 80274d2:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 80274d6:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 80274d8:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 80274dc:	4710      	bx	r2

080274de <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 80274de:	6802      	ldr	r2, [r0, #0]
 80274e0:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 80274e4:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 80274e6:	eef0 0a40 	vmov.f32	s1, s0
 80274ea:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 80274ee:	4710      	bx	r2

080274f0 <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 80274f0:	6802      	ldr	r2, [r0, #0]
 80274f2:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 80274f6:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 80274f8:	eeb0 1a40 	vmov.f32	s2, s0
 80274fc:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027500:	4710      	bx	r2

08027502 <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 8027502:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027506:	4770      	bx	lr

08027508 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 8027508:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 802750c:	4770      	bx	lr

0802750e <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 802750e:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 8027512:	4770      	bx	lr

08027514 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 8027514:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 8027518:	4770      	bx	lr

0802751a <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 802751a:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 802751e:	4770      	bx	lr

08027520 <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 8027520:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 8027524:	4770      	bx	lr

08027526 <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 8027526:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 802752a:	4770      	bx	lr

0802752c <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 802752c:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 8027530:	4770      	bx	lr

08027532 <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 8027532:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 8027536:	4770      	bx	lr

08027538 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 8027538:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 802753c:	4770      	bx	lr

0802753e <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 802753e:	ee07 2a90 	vmov	s15, r2
 8027542:	6803      	ldr	r3, [r0, #0]
 8027544:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8027548:	ee07 1a90 	vmov	s15, r1
 802754c:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8027550:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8027554:	4718      	bx	r3

08027556 <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 8027556:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 802755a:	4770      	bx	lr

0802755c <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 802755c:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 8027560:	4770      	bx	lr

08027562 <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 8027562:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 8027566:	4770      	bx	lr

08027568 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 8027568:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 802756c:	4770      	bx	lr

0802756e <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 802756e:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 8027572:	4770      	bx	lr

08027574 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 8027574:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 8027578:	4770      	bx	lr

0802757a <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 802757a:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 802757e:	4770      	bx	lr

08027580 <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 8027580:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 8027584:	4770      	bx	lr

08027586 <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 8027586:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 802758a:	4770      	bx	lr

0802758c <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 802758c:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 8027590:	4770      	bx	lr

08027592 <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 8027592:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 8027596:	4770      	bx	lr

08027598 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 8027598:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 802759c:	4770      	bx	lr

0802759e <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 802759e:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 80275a2:	4770      	bx	lr

080275a4 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 80275a4:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 80275a8:	4770      	bx	lr

080275aa <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 80275aa:	b510      	push	{r4, lr}
 80275ac:	ed2d 8b04 	vpush	{d8-d9}
 80275b0:	6803      	ldr	r3, [r0, #0]
 80275b2:	4604      	mov	r4, r0
 80275b4:	699b      	ldr	r3, [r3, #24]
 80275b6:	eeb0 8a40 	vmov.f32	s16, s0
 80275ba:	eef0 8a60 	vmov.f32	s17, s1
 80275be:	eeb0 9a41 	vmov.f32	s18, s2
 80275c2:	4798      	blx	r3
 80275c4:	6823      	ldr	r3, [r4, #0]
 80275c6:	4620      	mov	r0, r4
 80275c8:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80275ca:	eeb0 1a49 	vmov.f32	s2, s18
 80275ce:	eef0 0a68 	vmov.f32	s1, s17
 80275d2:	eeb0 0a48 	vmov.f32	s0, s16
 80275d6:	4798      	blx	r3
 80275d8:	ecbd 8b04 	vpop	{d8-d9}
 80275dc:	6823      	ldr	r3, [r4, #0]
 80275de:	4620      	mov	r0, r4
 80275e0:	699b      	ldr	r3, [r3, #24]
 80275e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80275e6:	4718      	bx	r3

080275e8 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 80275e8:	b510      	push	{r4, lr}
 80275ea:	ed2d 8b02 	vpush	{d8}
 80275ee:	6803      	ldr	r3, [r0, #0]
 80275f0:	4604      	mov	r4, r0
 80275f2:	699b      	ldr	r3, [r3, #24]
 80275f4:	eeb0 8a40 	vmov.f32	s16, s0
 80275f8:	4798      	blx	r3
 80275fa:	6823      	ldr	r3, [r4, #0]
 80275fc:	4620      	mov	r0, r4
 80275fe:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8027602:	eeb0 0a48 	vmov.f32	s0, s16
 8027606:	4798      	blx	r3
 8027608:	ecbd 8b02 	vpop	{d8}
 802760c:	6823      	ldr	r3, [r4, #0]
 802760e:	4620      	mov	r0, r4
 8027610:	699b      	ldr	r3, [r3, #24]
 8027612:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027616:	4718      	bx	r3

08027618 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 8027618:	2200      	movs	r2, #0
 802761a:	8002      	strh	r2, [r0, #0]
 802761c:	8042      	strh	r2, [r0, #2]
 802761e:	8082      	strh	r2, [r0, #4]
 8027620:	80c2      	strh	r2, [r0, #6]
 8027622:	4770      	bx	lr

08027624 <_ZN8touchgfx13TextureMapperD1Ev>:
 8027624:	4770      	bx	lr

08027626 <_ZN8touchgfx13TextureMapperD0Ev>:
 8027626:	b510      	push	{r4, lr}
 8027628:	2190      	movs	r1, #144	; 0x90
 802762a:	4604      	mov	r4, r0
 802762c:	f001 ff3f 	bl	80294ae <_ZdlPvj>
 8027630:	4620      	mov	r0, r4
 8027632:	bd10      	pop	{r4, pc}

08027634 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 8027634:	b538      	push	{r3, r4, r5, lr}
 8027636:	2500      	movs	r5, #0
 8027638:	e9c0 5505 	strd	r5, r5, [r0, #20]
 802763c:	2301      	movs	r3, #1
 802763e:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 8027642:	4b1f      	ldr	r3, [pc, #124]	; (80276c0 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 8027644:	8085      	strh	r5, [r0, #4]
 8027646:	80c5      	strh	r5, [r0, #6]
 8027648:	8105      	strh	r5, [r0, #8]
 802764a:	8145      	strh	r5, [r0, #10]
 802764c:	8185      	strh	r5, [r0, #12]
 802764e:	81c5      	strh	r5, [r0, #14]
 8027650:	8205      	strh	r5, [r0, #16]
 8027652:	8245      	strh	r5, [r0, #18]
 8027654:	61c5      	str	r5, [r0, #28]
 8027656:	8405      	strh	r5, [r0, #32]
 8027658:	8445      	strh	r5, [r0, #34]	; 0x22
 802765a:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 802765e:	6003      	str	r3, [r0, #0]
 8027660:	880b      	ldrh	r3, [r1, #0]
 8027662:	84c3      	strh	r3, [r0, #38]	; 0x26
 8027664:	23ff      	movs	r3, #255	; 0xff
 8027666:	4604      	mov	r4, r0
 8027668:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 802766c:	f7eb f99f 	bl	80129ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8027670:	4b14      	ldr	r3, [pc, #80]	; (80276c4 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 8027672:	6023      	str	r3, [r4, #0]
 8027674:	2300      	movs	r3, #0
 8027676:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 802767a:	4913      	ldr	r1, [pc, #76]	; (80276c8 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 802767c:	62e3      	str	r3, [r4, #44]	; 0x2c
 802767e:	6323      	str	r3, [r4, #48]	; 0x30
 8027680:	6363      	str	r3, [r4, #52]	; 0x34
 8027682:	63a3      	str	r3, [r4, #56]	; 0x38
 8027684:	63e3      	str	r3, [r4, #60]	; 0x3c
 8027686:	6463      	str	r3, [r4, #68]	; 0x44
 8027688:	64a3      	str	r3, [r4, #72]	; 0x48
 802768a:	6523      	str	r3, [r4, #80]	; 0x50
 802768c:	6563      	str	r3, [r4, #84]	; 0x54
 802768e:	65e3      	str	r3, [r4, #92]	; 0x5c
 8027690:	6623      	str	r3, [r4, #96]	; 0x60
 8027692:	66a3      	str	r3, [r4, #104]	; 0x68
 8027694:	66e3      	str	r3, [r4, #108]	; 0x6c
 8027696:	6763      	str	r3, [r4, #116]	; 0x74
 8027698:	67a3      	str	r3, [r4, #120]	; 0x78
 802769a:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 802769e:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 80276a2:	230c      	movs	r3, #12
 80276a4:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 80276a8:	6422      	str	r2, [r4, #64]	; 0x40
 80276aa:	64e1      	str	r1, [r4, #76]	; 0x4c
 80276ac:	65a1      	str	r1, [r4, #88]	; 0x58
 80276ae:	6662      	str	r2, [r4, #100]	; 0x64
 80276b0:	6722      	str	r2, [r4, #112]	; 0x70
 80276b2:	67e2      	str	r2, [r4, #124]	; 0x7c
 80276b4:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 80276b8:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 80276bc:	4620      	mov	r0, r4
 80276be:	bd38      	pop	{r3, r4, r5, pc}
 80276c0:	0802e798 	.word	0x0802e798
 80276c4:	0802ed7c 	.word	0x0802ed7c
 80276c8:	447a0000 	.word	0x447a0000

080276cc <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 80276cc:	b570      	push	{r4, r5, r6, lr}
 80276ce:	ed2d 8b04 	vpush	{d8-d9}
 80276d2:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 80276d6:	add0      	add	r5, sp, #832	; 0x340
 80276d8:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 80276da:	f825 3d40 	strh.w	r3, [r5, #-64]!
 80276de:	4604      	mov	r4, r0
 80276e0:	4628      	mov	r0, r5
 80276e2:	f7f1 fa7f 	bl	8018be4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80276e6:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 80276e8:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 80276ec:	4606      	mov	r6, r0
 80276ee:	4628      	mov	r0, r5
 80276f0:	f7f1 faac 	bl	8018c4c <_ZNK8touchgfx6Bitmap9getHeightEv>
 80276f4:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80276f8:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 80276fc:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80276fe:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 8027702:	9312      	str	r3, [sp, #72]	; 0x48
 8027704:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8027708:	1c72      	adds	r2, r6, #1
 802770a:	3001      	adds	r0, #1
 802770c:	ee76 5ac7 	vsub.f32	s11, s13, s14
 8027710:	ee07 2a90 	vmov	s15, r2
 8027714:	ee06 0a90 	vmov	s13, r0
 8027718:	ee36 6a47 	vsub.f32	s12, s12, s14
 802771c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8027720:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8027724:	ee77 7a86 	vadd.f32	s15, s15, s12
 8027728:	ee76 6aa5 	vadd.f32	s13, s13, s11
 802772c:	9316      	str	r3, [sp, #88]	; 0x58
 802772e:	931a      	str	r3, [sp, #104]	; 0x68
 8027730:	931e      	str	r3, [sp, #120]	; 0x78
 8027732:	2300      	movs	r3, #0
 8027734:	9320      	str	r3, [sp, #128]	; 0x80
 8027736:	9321      	str	r3, [sp, #132]	; 0x84
 8027738:	9322      	str	r3, [sp, #136]	; 0x88
 802773a:	9324      	str	r3, [sp, #144]	; 0x90
 802773c:	9325      	str	r3, [sp, #148]	; 0x94
 802773e:	9326      	str	r3, [sp, #152]	; 0x98
 8027740:	9328      	str	r3, [sp, #160]	; 0xa0
 8027742:	9329      	str	r3, [sp, #164]	; 0xa4
 8027744:	932a      	str	r3, [sp, #168]	; 0xa8
 8027746:	932c      	str	r3, [sp, #176]	; 0xb0
 8027748:	932d      	str	r3, [sp, #180]	; 0xb4
 802774a:	932e      	str	r3, [sp, #184]	; 0xb8
 802774c:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8027750:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 8027754:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8027758:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 802775c:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 8027760:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 8027764:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 8027768:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 802776c:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 8027770:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 8027774:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8027778:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 802777c:	a830      	add	r0, sp, #192	; 0xc0
 802777e:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 8027782:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 8027786:	f000 fc43 	bl	8028010 <_ZN8touchgfx9Matrix4x4C1Ev>
 802778a:	eeb1 0a49 	vneg.f32	s0, s18
 802778e:	a830      	add	r0, sp, #192	; 0xc0
 8027790:	f000 fd12 	bl	80281b8 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8027794:	eeb1 0a68 	vneg.f32	s0, s17
 8027798:	f000 fd1c 	bl	80281d4 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802779c:	eeb1 0a48 	vneg.f32	s0, s16
 80277a0:	f000 fd27 	bl	80281f2 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 80277a4:	a840      	add	r0, sp, #256	; 0x100
 80277a6:	f000 fc33 	bl	8028010 <_ZN8touchgfx9Matrix4x4C1Ev>
 80277aa:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 80277ae:	a840      	add	r0, sp, #256	; 0x100
 80277b0:	f000 fc86 	bl	80280c0 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 80277b4:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 80277b8:	f000 fcac 	bl	8028114 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 80277bc:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 80277c0:	f000 fcd1 	bl	8028166 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 80277c4:	a850      	add	r0, sp, #320	; 0x140
 80277c6:	f000 fc23 	bl	8028010 <_ZN8touchgfx9Matrix4x4C1Ev>
 80277ca:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 80277ce:	a850      	add	r0, sp, #320	; 0x140
 80277d0:	f000 fd1e 	bl	8028210 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 80277d4:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 80277d8:	f000 fd26 	bl	8028228 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 80277dc:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 80277e0:	f000 fd2f 	bl	8028242 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 80277e4:	a860      	add	r0, sp, #384	; 0x180
 80277e6:	f000 fc13 	bl	8028010 <_ZN8touchgfx9Matrix4x4C1Ev>
 80277ea:	eeb0 0a49 	vmov.f32	s0, s18
 80277ee:	a860      	add	r0, sp, #384	; 0x180
 80277f0:	f000 fce2 	bl	80281b8 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 80277f4:	eeb0 0a68 	vmov.f32	s0, s17
 80277f8:	f000 fcec 	bl	80281d4 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 80277fc:	eeb0 0a48 	vmov.f32	s0, s16
 8027800:	f000 fcf7 	bl	80281f2 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8027804:	aa50      	add	r2, sp, #320	; 0x140
 8027806:	a960      	add	r1, sp, #384	; 0x180
 8027808:	a8b0      	add	r0, sp, #704	; 0x2c0
 802780a:	f000 fc1b 	bl	8028044 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802780e:	4628      	mov	r0, r5
 8027810:	aa40      	add	r2, sp, #256	; 0x100
 8027812:	a9b0      	add	r1, sp, #704	; 0x2c0
 8027814:	f000 fc16 	bl	8028044 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8027818:	4629      	mov	r1, r5
 802781a:	aa30      	add	r2, sp, #192	; 0xc0
 802781c:	a870      	add	r0, sp, #448	; 0x1c0
 802781e:	f000 fc11 	bl	8028044 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8027822:	a880      	add	r0, sp, #512	; 0x200
 8027824:	f000 fbf4 	bl	8028010 <_ZN8touchgfx9Matrix4x4C1Ev>
 8027828:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 802782c:	a880      	add	r0, sp, #512	; 0x200
 802782e:	eeb1 0a40 	vneg.f32	s0, s0
 8027832:	f000 fcc1 	bl	80281b8 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8027836:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 802783a:	a880      	add	r0, sp, #512	; 0x200
 802783c:	eeb1 0a40 	vneg.f32	s0, s0
 8027840:	f000 fcc8 	bl	80281d4 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8027844:	a890      	add	r0, sp, #576	; 0x240
 8027846:	f000 fbe3 	bl	8028010 <_ZN8touchgfx9Matrix4x4C1Ev>
 802784a:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 802784e:	a890      	add	r0, sp, #576	; 0x240
 8027850:	f000 fc26 	bl	80280a0 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 8027854:	a8a0      	add	r0, sp, #640	; 0x280
 8027856:	f000 fbdb 	bl	8028010 <_ZN8touchgfx9Matrix4x4C1Ev>
 802785a:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 802785e:	a8a0      	add	r0, sp, #640	; 0x280
 8027860:	f000 fcaa 	bl	80281b8 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8027864:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8027868:	f000 fcb4 	bl	80281d4 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802786c:	aa90      	add	r2, sp, #576	; 0x240
 802786e:	a9a0      	add	r1, sp, #640	; 0x280
 8027870:	a8b0      	add	r0, sp, #704	; 0x2c0
 8027872:	f000 fbe7 	bl	8028044 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8027876:	4628      	mov	r0, r5
 8027878:	aa80      	add	r2, sp, #512	; 0x200
 802787a:	a9b0      	add	r1, sp, #704	; 0x2c0
 802787c:	f000 fbe2 	bl	8028044 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8027880:	4629      	mov	r1, r5
 8027882:	aa70      	add	r2, sp, #448	; 0x1c0
 8027884:	4668      	mov	r0, sp
 8027886:	466d      	mov	r5, sp
 8027888:	f000 fbdc 	bl	8028044 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802788c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802788e:	ae70      	add	r6, sp, #448	; 0x1c0
 8027890:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8027892:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8027894:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8027896:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8027898:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802789a:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 802789e:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 80278a2:	2500      	movs	r5, #0
 80278a4:	0129      	lsls	r1, r5, #4
 80278a6:	ab20      	add	r3, sp, #128	; 0x80
 80278a8:	185e      	adds	r6, r3, r1
 80278aa:	ab10      	add	r3, sp, #64	; 0x40
 80278ac:	4419      	add	r1, r3
 80278ae:	a870      	add	r0, sp, #448	; 0x1c0
 80278b0:	f000 fb7e 	bl	8027fb0 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 80278b4:	3501      	adds	r5, #1
 80278b6:	2d04      	cmp	r5, #4
 80278b8:	ed86 0a00 	vstr	s0, [r6]
 80278bc:	edc6 0a01 	vstr	s1, [r6, #4]
 80278c0:	ed86 1a02 	vstr	s2, [r6, #8]
 80278c4:	edc6 1a03 	vstr	s3, [r6, #12]
 80278c8:	d1ec      	bne.n	80278a4 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 80278ca:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 80278ce:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 80278d2:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 80278d6:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80278da:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 80278de:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80278e2:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 80278e6:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 80278ea:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80278ee:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80278f2:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 80278f6:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80278fa:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 80278fe:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8027902:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 8027906:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802790a:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 802790e:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 8027912:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8027916:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802791a:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 802791e:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 8027922:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 8027926:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802792a:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 802792e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8027932:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 8027936:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 802793a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802793e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8027942:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 8027946:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 802794a:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 802794e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8027952:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 8027956:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802795a:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 802795e:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 8027962:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8027966:	eec7 6a87 	vdiv.f32	s13, s15, s14
 802796a:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 802796e:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 8027972:	ecbd 8b04 	vpop	{d8-d9}
 8027976:	bd70      	pop	{r4, r5, r6, pc}

08027978 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 8027978:	b510      	push	{r4, lr}
 802797a:	4604      	mov	r4, r0
 802797c:	f7eb f817 	bl	80129ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8027980:	4620      	mov	r0, r4
 8027982:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027986:	f7ff bea1 	b.w	80276cc <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802798a <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 802798a:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 802798e:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 8027992:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 8027996:	f7ff be99 	b.w	80276cc <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802799a <_ZN8touchgfx13TextureMapper8setScaleEf>:
 802799a:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 802799e:	f7ff be95 	b.w	80276cc <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080279a2 <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 80279a2:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 80279a6:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 80279aa:	f7ff be8f 	b.w	80276cc <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080279ae <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 80279ae:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80279b2:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80279b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80279ba:	bfd8      	it	le
 80279bc:	eeb0 0a67 	vmovle.f32	s0, s15
 80279c0:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 80279c4:	f7ff be82 	b.w	80276cc <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080279c8 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 80279c8:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 80279cc:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 80279d0:	f7ff be7c 	b.w	80276cc <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080279d4 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 80279d4:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 80279d8:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 80279dc:	f7ff be76 	b.w	80276cc <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080279e0 <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 80279e0:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 80279e4:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 80279e8:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 80279ec:	f7ff be6e 	b.w	80276cc <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080279f0 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 80279f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80279f4:	ed2d 8b04 	vpush	{d8-d9}
 80279f8:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 80279fc:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 8027a00:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 8027a04:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 8027a08:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8027a0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027a10:	bf54      	ite	pl
 8027a12:	eeb0 0a69 	vmovpl.f32	s0, s19
 8027a16:	eeb0 0a48 	vmovmi.f32	s0, s16
 8027a1a:	eeb4 9ac0 	vcmpe.f32	s18, s0
 8027a1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027a22:	bfd8      	it	le
 8027a24:	eeb0 0a49 	vmovle.f32	s0, s18
 8027a28:	eef4 8ac0 	vcmpe.f32	s17, s0
 8027a2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027a30:	bfd8      	it	le
 8027a32:	eeb0 0a68 	vmovle.f32	s0, s17
 8027a36:	460c      	mov	r4, r1
 8027a38:	4607      	mov	r7, r0
 8027a3a:	f001 fe4f 	bl	80296dc <floorf>
 8027a3e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8027a42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027a46:	bf58      	it	pl
 8027a48:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 8027a4c:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8027a50:	bf56      	itet	pl
 8027a52:	ee10 3a10 	vmovpl	r3, s0
 8027a56:	2600      	movmi	r6, #0
 8027a58:	b21e      	sxthpl	r6, r3
 8027a5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027a5e:	bfd8      	it	le
 8027a60:	eeb0 8a69 	vmovle.f32	s16, s19
 8027a64:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8027a68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027a6c:	bf58      	it	pl
 8027a6e:	eeb0 8a49 	vmovpl.f32	s16, s18
 8027a72:	eef4 8ac8 	vcmpe.f32	s17, s16
 8027a76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027a7a:	bf54      	ite	pl
 8027a7c:	eeb0 0a68 	vmovpl.f32	s0, s17
 8027a80:	eeb0 0a48 	vmovmi.f32	s0, s16
 8027a84:	f001 fde8 	bl	8029658 <ceilf>
 8027a88:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 8027a8c:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 8027a90:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 8027a94:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 8027a98:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 8027a9c:	ee07 8a90 	vmov	s15, r8
 8027aa0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8027aa4:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8027aa8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027aac:	bfd8      	it	le
 8027aae:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8027ab2:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8027ab6:	bfdc      	itt	le
 8027ab8:	ee10 3a10 	vmovle	r3, s0
 8027abc:	fa0f f883 	sxthle.w	r8, r3
 8027ac0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027ac4:	bf54      	ite	pl
 8027ac6:	eeb0 0a69 	vmovpl.f32	s0, s19
 8027aca:	eeb0 0a48 	vmovmi.f32	s0, s16
 8027ace:	eeb4 9ac0 	vcmpe.f32	s18, s0
 8027ad2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027ad6:	bfd8      	it	le
 8027ad8:	eeb0 0a49 	vmovle.f32	s0, s18
 8027adc:	eef4 8ac0 	vcmpe.f32	s17, s0
 8027ae0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027ae4:	bfd8      	it	le
 8027ae6:	eeb0 0a68 	vmovle.f32	s0, s17
 8027aea:	f001 fdf7 	bl	80296dc <floorf>
 8027aee:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8027af2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027af6:	bf58      	it	pl
 8027af8:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 8027afc:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8027b00:	bf56      	itet	pl
 8027b02:	ee10 3a10 	vmovpl	r3, s0
 8027b06:	2500      	movmi	r5, #0
 8027b08:	b21d      	sxthpl	r5, r3
 8027b0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027b0e:	bfd8      	it	le
 8027b10:	eeb0 8a69 	vmovle.f32	s16, s19
 8027b14:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8027b18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027b1c:	bf58      	it	pl
 8027b1e:	eeb0 8a49 	vmovpl.f32	s16, s18
 8027b22:	eef4 8ac8 	vcmpe.f32	s17, s16
 8027b26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027b2a:	bf54      	ite	pl
 8027b2c:	eeb0 0a68 	vmovpl.f32	s0, s17
 8027b30:	eeb0 0a48 	vmovmi.f32	s0, s16
 8027b34:	f001 fd90 	bl	8029658 <ceilf>
 8027b38:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8027b3c:	803e      	strh	r6, [r7, #0]
 8027b3e:	ee07 3a90 	vmov	s15, r3
 8027b42:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8027b46:	807d      	strh	r5, [r7, #2]
 8027b48:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8027b4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027b50:	bfd8      	it	le
 8027b52:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8027b56:	eba8 0606 	sub.w	r6, r8, r6
 8027b5a:	bfdc      	itt	le
 8027b5c:	ee10 3a10 	vmovle	r3, s0
 8027b60:	b21b      	sxthle	r3, r3
 8027b62:	1b5d      	subs	r5, r3, r5
 8027b64:	80be      	strh	r6, [r7, #4]
 8027b66:	80fd      	strh	r5, [r7, #6]
 8027b68:	ecbd 8b04 	vpop	{d8-d9}
 8027b6c:	4638      	mov	r0, r7
 8027b6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08027b72 <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 8027b72:	b513      	push	{r0, r1, r4, lr}
 8027b74:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8027b78:	4604      	mov	r4, r0
 8027b7a:	b143      	cbz	r3, 8027b8e <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 8027b7c:	4601      	mov	r1, r0
 8027b7e:	4668      	mov	r0, sp
 8027b80:	f7ff ff36 	bl	80279f0 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 8027b84:	6823      	ldr	r3, [r4, #0]
 8027b86:	4669      	mov	r1, sp
 8027b88:	691b      	ldr	r3, [r3, #16]
 8027b8a:	4620      	mov	r0, r4
 8027b8c:	4798      	blx	r3
 8027b8e:	b002      	add	sp, #8
 8027b90:	bd10      	pop	{r4, pc}

08027b92 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 8027b92:	4603      	mov	r3, r0
 8027b94:	3026      	adds	r0, #38	; 0x26
 8027b96:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 8027b9a:	b90b      	cbnz	r3, 8027ba0 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 8027b9c:	f7ee be38 	b.w	8016810 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 8027ba0:	f7ee be46 	b.w	8016830 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

08027ba4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 8027ba4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027ba8:	ed2d 8b04 	vpush	{d8-d9}
 8027bac:	4604      	mov	r4, r0
 8027bae:	469b      	mov	fp, r3
 8027bb0:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 8027bb4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8027bb8:	f9b1 6000 	ldrsh.w	r6, [r1]
 8027bbc:	8888      	ldrh	r0, [r1, #4]
 8027bbe:	b0b3      	sub	sp, #204	; 0xcc
 8027bc0:	4430      	add	r0, r6
 8027bc2:	b280      	uxth	r0, r0
 8027bc4:	9206      	str	r2, [sp, #24]
 8027bc6:	fa0f fe80 	sxth.w	lr, r0
 8027bca:	2200      	movs	r2, #0
 8027bcc:	4596      	cmp	lr, r2
 8027bce:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 8027bd2:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 8027bd6:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 8027bda:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 8027bdc:	9211      	str	r2, [sp, #68]	; 0x44
 8027bde:	f340 8129 	ble.w	8027e34 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8027be2:	45b4      	cmp	ip, r6
 8027be4:	f340 8126 	ble.w	8027e34 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8027be8:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8027bec:	88ca      	ldrh	r2, [r1, #6]
 8027bee:	442a      	add	r2, r5
 8027bf0:	b292      	uxth	r2, r2
 8027bf2:	b211      	sxth	r1, r2
 8027bf4:	2900      	cmp	r1, #0
 8027bf6:	f340 811d 	ble.w	8027e34 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8027bfa:	42ab      	cmp	r3, r5
 8027bfc:	f340 811a 	ble.w	8027e34 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8027c00:	45f4      	cmp	ip, lr
 8027c02:	bfb8      	it	lt
 8027c04:	fa1f f08c 	uxthlt.w	r0, ip
 8027c08:	428b      	cmp	r3, r1
 8027c0a:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8027c0e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8027c12:	bfb8      	it	lt
 8027c14:	b29a      	uxthlt	r2, r3
 8027c16:	1b80      	subs	r0, r0, r6
 8027c18:	1b52      	subs	r2, r2, r5
 8027c1a:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 8027c1e:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 8027c22:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8027c26:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 8027c2a:	ab11      	add	r3, sp, #68	; 0x44
 8027c2c:	e893 0003 	ldmia.w	r3, {r0, r1}
 8027c30:	6822      	ldr	r2, [r4, #0]
 8027c32:	9307      	str	r3, [sp, #28]
 8027c34:	ad13      	add	r5, sp, #76	; 0x4c
 8027c36:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8027c38:	e885 0003 	stmia.w	r5, {r0, r1}
 8027c3c:	4629      	mov	r1, r5
 8027c3e:	4620      	mov	r0, r4
 8027c40:	4790      	blx	r2
 8027c42:	4621      	mov	r1, r4
 8027c44:	a815      	add	r0, sp, #84	; 0x54
 8027c46:	f7ee fd3f 	bl	80166c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8027c4a:	a815      	add	r0, sp, #84	; 0x54
 8027c4c:	f7ed fa04 	bl	8015058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027c50:	9b07      	ldr	r3, [sp, #28]
 8027c52:	1d26      	adds	r6, r4, #4
 8027c54:	4618      	mov	r0, r3
 8027c56:	4631      	mov	r1, r6
 8027c58:	f7ed fa42 	bl	80150e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8027c5c:	4628      	mov	r0, r5
 8027c5e:	f104 0526 	add.w	r5, r4, #38	; 0x26
 8027c62:	f7ed f9f9 	bl	8015058 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027c66:	4628      	mov	r0, r5
 8027c68:	f7f1 f8a8 	bl	8018dbc <_ZNK8touchgfx6Bitmap7getDataEv>
 8027c6c:	9007      	str	r0, [sp, #28]
 8027c6e:	2800      	cmp	r0, #0
 8027c70:	f000 80db 	beq.w	8027e2a <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 8027c74:	f8db 2000 	ldr.w	r2, [fp]
 8027c78:	9209      	str	r2, [sp, #36]	; 0x24
 8027c7a:	f8db 2004 	ldr.w	r2, [fp, #4]
 8027c7e:	920a      	str	r2, [sp, #40]	; 0x28
 8027c80:	f8db 2008 	ldr.w	r2, [fp, #8]
 8027c84:	920b      	str	r2, [sp, #44]	; 0x2c
 8027c86:	f8db 200c 	ldr.w	r2, [fp, #12]
 8027c8a:	920c      	str	r2, [sp, #48]	; 0x30
 8027c8c:	f8da 2000 	ldr.w	r2, [sl]
 8027c90:	920d      	str	r2, [sp, #52]	; 0x34
 8027c92:	f8da 2004 	ldr.w	r2, [sl, #4]
 8027c96:	920e      	str	r2, [sp, #56]	; 0x38
 8027c98:	f8da 2008 	ldr.w	r2, [sl, #8]
 8027c9c:	920f      	str	r2, [sp, #60]	; 0x3c
 8027c9e:	f8da 200c 	ldr.w	r2, [sl, #12]
 8027ca2:	9210      	str	r2, [sp, #64]	; 0x40
 8027ca4:	a90d      	add	r1, sp, #52	; 0x34
 8027ca6:	4632      	mov	r2, r6
 8027ca8:	a809      	add	r0, sp, #36	; 0x24
 8027caa:	f7ed f9fd 	bl	80150a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8027cae:	4632      	mov	r2, r6
 8027cb0:	a90e      	add	r1, sp, #56	; 0x38
 8027cb2:	a80a      	add	r0, sp, #40	; 0x28
 8027cb4:	f7ed f9f8 	bl	80150a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8027cb8:	4632      	mov	r2, r6
 8027cba:	a90f      	add	r1, sp, #60	; 0x3c
 8027cbc:	a80b      	add	r0, sp, #44	; 0x2c
 8027cbe:	f7ed f9f3 	bl	80150a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8027cc2:	4632      	mov	r2, r6
 8027cc4:	a910      	add	r1, sp, #64	; 0x40
 8027cc6:	a80c      	add	r0, sp, #48	; 0x30
 8027cc8:	f7ed f9ee 	bl	80150a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8027ccc:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 8027cd0:	edd7 4a00 	vldr	s9, [r7]
 8027cd4:	edd7 5a01 	vldr	s11, [r7, #4]
 8027cd8:	ed98 4a00 	vldr	s8, [r8]
 8027cdc:	ed98 5a01 	vldr	s10, [r8, #4]
 8027ce0:	ed99 9a00 	vldr	s18, [r9]
 8027ce4:	ed99 8a01 	vldr	s16, [r9, #4]
 8027ce8:	edd9 8a02 	vldr	s17, [r9, #8]
 8027cec:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 8027cf0:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 8027cf4:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 8027cf8:	eef0 6a67 	vmov.f32	s13, s15
 8027cfc:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 8027d00:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 8027d04:	eeb0 7a67 	vmov.f32	s14, s15
 8027d08:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 8027d0c:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 8027d10:	eeb0 6a67 	vmov.f32	s12, s15
 8027d14:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027d18:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 8027d1c:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 8027d20:	ee16 6a10 	vmov	r6, s12
 8027d24:	eeb0 6a67 	vmov.f32	s12, s15
 8027d28:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027d2c:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 8027d30:	f8d7 a008 	ldr.w	sl, [r7, #8]
 8027d34:	f8d8 b008 	ldr.w	fp, [r8, #8]
 8027d38:	68ff      	ldr	r7, [r7, #12]
 8027d3a:	9624      	str	r6, [sp, #144]	; 0x90
 8027d3c:	ee16 0a10 	vmov	r0, s12
 8027d40:	eeb0 6a67 	vmov.f32	s12, s15
 8027d44:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027d48:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 8027d4c:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 8027d50:	ee16 1a10 	vmov	r1, s12
 8027d54:	eeb0 6a67 	vmov.f32	s12, s15
 8027d58:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027d5c:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 8027d60:	ee16 2a10 	vmov	r2, s12
 8027d64:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 8027d68:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 8027d6c:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8027d70:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 8027d74:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027d78:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 8027d7c:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 8027d80:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 8027d84:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 8027d88:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 8027d8c:	922d      	str	r2, [sp, #180]	; 0xb4
 8027d8e:	4a2b      	ldr	r2, [pc, #172]	; (8027e3c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 8027d90:	9b06      	ldr	r3, [sp, #24]
 8027d92:	8812      	ldrh	r2, [r2, #0]
 8027d94:	9317      	str	r3, [sp, #92]	; 0x5c
 8027d96:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 8027d9a:	9b07      	ldr	r3, [sp, #28]
 8027d9c:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 8027da0:	4628      	mov	r0, r5
 8027da2:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 8027da6:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 8027daa:	9218      	str	r2, [sp, #96]	; 0x60
 8027dac:	9319      	str	r3, [sp, #100]	; 0x64
 8027dae:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 8027db2:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 8027db6:	9731      	str	r7, [sp, #196]	; 0xc4
 8027db8:	f7f1 f830 	bl	8018e1c <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8027dbc:	901a      	str	r0, [sp, #104]	; 0x68
 8027dbe:	4628      	mov	r0, r5
 8027dc0:	f7f0 ff10 	bl	8018be4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8027dc4:	901b      	str	r0, [sp, #108]	; 0x6c
 8027dc6:	4628      	mov	r0, r5
 8027dc8:	f7f0 ff40 	bl	8018c4c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8027dcc:	901c      	str	r0, [sp, #112]	; 0x70
 8027dce:	4628      	mov	r0, r5
 8027dd0:	f7f0 ff08 	bl	8018be4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8027dd4:	eeb4 9a48 	vcmp.f32	s18, s16
 8027dd8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027ddc:	901d      	str	r0, [sp, #116]	; 0x74
 8027dde:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 8027de2:	d107      	bne.n	8027df4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 8027de4:	eeb4 8a68 	vcmp.f32	s16, s17
 8027de8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027dec:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8027df0:	bf08      	it	eq
 8027df2:	461e      	moveq	r6, r3
 8027df4:	4b12      	ldr	r3, [pc, #72]	; (8027e40 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 8027df6:	681b      	ldr	r3, [r3, #0]
 8027df8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8027dfc:	b10a      	cbz	r2, 8027e02 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 8027dfe:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 8027e00:	b905      	cbnz	r5, 8027e04 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 8027e02:	689d      	ldr	r5, [r3, #8]
 8027e04:	682b      	ldr	r3, [r5, #0]
 8027e06:	4620      	mov	r0, r4
 8027e08:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 8027e0a:	f7ff fec2 	bl	8027b92 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 8027e0e:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8027e12:	9604      	str	r6, [sp, #16]
 8027e14:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8027e18:	ab13      	add	r3, sp, #76	; 0x4c
 8027e1a:	9301      	str	r3, [sp, #4]
 8027e1c:	ab15      	add	r3, sp, #84	; 0x54
 8027e1e:	9300      	str	r3, [sp, #0]
 8027e20:	aa1e      	add	r2, sp, #120	; 0x78
 8027e22:	ab19      	add	r3, sp, #100	; 0x64
 8027e24:	a917      	add	r1, sp, #92	; 0x5c
 8027e26:	4628      	mov	r0, r5
 8027e28:	47b8      	blx	r7
 8027e2a:	b033      	add	sp, #204	; 0xcc
 8027e2c:	ecbd 8b04 	vpop	{d8-d9}
 8027e30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027e34:	2300      	movs	r3, #0
 8027e36:	9312      	str	r3, [sp, #72]	; 0x48
 8027e38:	e6f7      	b.n	8027c2a <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 8027e3a:	bf00      	nop
 8027e3c:	20012f1e 	.word	0x20012f1e
 8027e40:	20012f24 	.word	0x20012f24

08027e44 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 8027e44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027e48:	ed2d 8b02 	vpush	{d8}
 8027e4c:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8027e50:	b098      	sub	sp, #96	; 0x60
 8027e52:	4604      	mov	r4, r0
 8027e54:	4688      	mov	r8, r1
 8027e56:	2b00      	cmp	r3, #0
 8027e58:	d077      	beq.n	8027f4a <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 8027e5a:	f100 0526 	add.w	r5, r0, #38	; 0x26
 8027e5e:	4628      	mov	r0, r5
 8027e60:	f7f0 fec0 	bl	8018be4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8027e64:	ee07 0a90 	vmov	s15, r0
 8027e68:	4628      	mov	r0, r5
 8027e6a:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 8027e6e:	f7f0 feed 	bl	8018c4c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8027e72:	4b4e      	ldr	r3, [pc, #312]	; (8027fac <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 8027e74:	781b      	ldrb	r3, [r3, #0]
 8027e76:	ee07 0a90 	vmov	s15, r0
 8027e7a:	2b01      	cmp	r3, #1
 8027e7c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8027e80:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 8027e84:	d066      	beq.n	8027f54 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 8027e86:	eeb0 6a47 	vmov.f32	s12, s14
 8027e8a:	ee17 3a10 	vmov	r3, s14
 8027e8e:	eeb0 4a48 	vmov.f32	s8, s16
 8027e92:	eeb0 7a48 	vmov.f32	s14, s16
 8027e96:	eef0 4a67 	vmov.f32	s9, s15
 8027e9a:	eeb0 8a67 	vmov.f32	s16, s15
 8027e9e:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 8027ea2:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 8027ea6:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 8027eaa:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 8027eae:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 8027eb2:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 8027eb6:	6f25      	ldr	r5, [r4, #112]	; 0x70
 8027eb8:	6e66      	ldr	r6, [r4, #100]	; 0x64
 8027eba:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 8027ebc:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 8027ec0:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 8027ec4:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8027ec8:	ee73 1a65 	vsub.f32	s3, s6, s11
 8027ecc:	ee72 6ac5 	vsub.f32	s13, s5, s10
 8027ed0:	ee32 1a45 	vsub.f32	s2, s4, s10
 8027ed4:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 8027ed8:	ee73 1ae5 	vsub.f32	s3, s7, s11
 8027edc:	eee1 6a21 	vfma.f32	s13, s2, s3
 8027ee0:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8027ee4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027ee8:	dd3d      	ble.n	8027f66 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 8027eea:	ed8d 5a04 	vstr	s10, [sp, #16]
 8027eee:	ed8d 2a05 	vstr	s4, [sp, #20]
 8027ef2:	edcd 2a06 	vstr	s5, [sp, #24]
 8027ef6:	f8cd c01c 	str.w	ip, [sp, #28]
 8027efa:	edcd 5a08 	vstr	s11, [sp, #32]
 8027efe:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 8027f02:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 8027f06:	970b      	str	r7, [sp, #44]	; 0x2c
 8027f08:	960c      	str	r6, [sp, #48]	; 0x30
 8027f0a:	950d      	str	r5, [sp, #52]	; 0x34
 8027f0c:	920e      	str	r2, [sp, #56]	; 0x38
 8027f0e:	900f      	str	r0, [sp, #60]	; 0x3c
 8027f10:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 8027f14:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 8027f18:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 8027f1c:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 8027f20:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 8027f24:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 8027f28:	9316      	str	r3, [sp, #88]	; 0x58
 8027f2a:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 8027f2e:	ab14      	add	r3, sp, #80	; 0x50
 8027f30:	9303      	str	r3, [sp, #12]
 8027f32:	ab10      	add	r3, sp, #64	; 0x40
 8027f34:	9302      	str	r3, [sp, #8]
 8027f36:	ab0c      	add	r3, sp, #48	; 0x30
 8027f38:	9301      	str	r3, [sp, #4]
 8027f3a:	ab08      	add	r3, sp, #32
 8027f3c:	9300      	str	r3, [sp, #0]
 8027f3e:	2200      	movs	r2, #0
 8027f40:	ab04      	add	r3, sp, #16
 8027f42:	4641      	mov	r1, r8
 8027f44:	4620      	mov	r0, r4
 8027f46:	f7ff fe2d 	bl	8027ba4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 8027f4a:	b018      	add	sp, #96	; 0x60
 8027f4c:	ecbd 8b02 	vpop	{d8}
 8027f50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027f54:	eeb0 6a48 	vmov.f32	s12, s16
 8027f58:	eef0 4a47 	vmov.f32	s9, s14
 8027f5c:	ee17 3a90 	vmov	r3, s15
 8027f60:	eeb0 4a67 	vmov.f32	s8, s15
 8027f64:	e79b      	b.n	8027e9e <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 8027f66:	ed8d 5a05 	vstr	s10, [sp, #20]
 8027f6a:	ed8d 2a04 	vstr	s4, [sp, #16]
 8027f6e:	f8cd c018 	str.w	ip, [sp, #24]
 8027f72:	edcd 2a07 	vstr	s5, [sp, #28]
 8027f76:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 8027f7a:	ed8d 3a08 	vstr	s6, [sp, #32]
 8027f7e:	970a      	str	r7, [sp, #40]	; 0x28
 8027f80:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 8027f84:	960d      	str	r6, [sp, #52]	; 0x34
 8027f86:	950c      	str	r5, [sp, #48]	; 0x30
 8027f88:	900e      	str	r0, [sp, #56]	; 0x38
 8027f8a:	920f      	str	r2, [sp, #60]	; 0x3c
 8027f8c:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 8027f90:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 8027f94:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 8027f98:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8027f9c:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 8027fa0:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8027fa4:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 8027fa8:	9317      	str	r3, [sp, #92]	; 0x5c
 8027faa:	e7c0      	b.n	8027f2e <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 8027fac:	20012f1c 	.word	0x20012f1c

08027fb0 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 8027fb0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8027fb2:	b08d      	sub	sp, #52	; 0x34
 8027fb4:	2300      	movs	r3, #0
 8027fb6:	9304      	str	r3, [sp, #16]
 8027fb8:	9305      	str	r3, [sp, #20]
 8027fba:	9306      	str	r3, [sp, #24]
 8027fbc:	aa04      	add	r2, sp, #16
 8027fbe:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 8027fc2:	9307      	str	r3, [sp, #28]
 8027fc4:	f100 0640 	add.w	r6, r0, #64	; 0x40
 8027fc8:	4613      	mov	r3, r2
 8027fca:	f101 0710 	add.w	r7, r1, #16
 8027fce:	eddf 7a0f 	vldr	s15, [pc, #60]	; 802800c <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 8027fd2:	460c      	mov	r4, r1
 8027fd4:	4605      	mov	r5, r0
 8027fd6:	ecb4 7a01 	vldmia	r4!, {s14}
 8027fda:	ecf5 6a01 	vldmia	r5!, {s13}
 8027fde:	42bc      	cmp	r4, r7
 8027fe0:	eee6 7a87 	vfma.f32	s15, s13, s14
 8027fe4:	d1f7      	bne.n	8027fd6 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 8027fe6:	3010      	adds	r0, #16
 8027fe8:	42b0      	cmp	r0, r6
 8027fea:	ece2 7a01 	vstmia	r2!, {s15}
 8027fee:	d1ee      	bne.n	8027fce <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 8027ff0:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8027ff2:	ac0c      	add	r4, sp, #48	; 0x30
 8027ff4:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8027ff8:	ed9d 0a08 	vldr	s0, [sp, #32]
 8027ffc:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 8028000:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 8028004:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 8028008:	b00d      	add	sp, #52	; 0x34
 802800a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802800c:	00000000 	.word	0x00000000

08028010 <_ZN8touchgfx9Matrix4x4C1Ev>:
 8028010:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 8028040 <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 8028014:	2300      	movs	r3, #0
 8028016:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802801a:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 802801e:	2200      	movs	r2, #0
 8028020:	4293      	cmp	r3, r2
 8028022:	f102 0201 	add.w	r2, r2, #1
 8028026:	bf14      	ite	ne
 8028028:	eef0 6a47 	vmovne.f32	s13, s14
 802802c:	eef0 6a67 	vmoveq.f32	s13, s15
 8028030:	2a04      	cmp	r2, #4
 8028032:	ece1 6a01 	vstmia	r1!, {s13}
 8028036:	d1f3      	bne.n	8028020 <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 8028038:	3301      	adds	r3, #1
 802803a:	2b04      	cmp	r3, #4
 802803c:	d1ed      	bne.n	802801a <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 802803e:	4770      	bx	lr
 8028040:	00000000 	.word	0x00000000

08028044 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 8028044:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028048:	460c      	mov	r4, r1
 802804a:	4605      	mov	r5, r0
 802804c:	4690      	mov	r8, r2
 802804e:	f7ff ffdf 	bl	8028010 <_ZN8touchgfx9Matrix4x4C1Ev>
 8028052:	4628      	mov	r0, r5
 8028054:	4621      	mov	r1, r4
 8028056:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 802805a:	2300      	movs	r3, #0
 802805c:	eddf 7a0f 	vldr	s15, [pc, #60]	; 802809c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 8028060:	eb08 0603 	add.w	r6, r8, r3
 8028064:	460f      	mov	r7, r1
 8028066:	2400      	movs	r4, #0
 8028068:	4632      	mov	r2, r6
 802806a:	ecf7 6a01 	vldmia	r7!, {s13}
 802806e:	ed92 7a00 	vldr	s14, [r2]
 8028072:	3401      	adds	r4, #1
 8028074:	2c04      	cmp	r4, #4
 8028076:	f106 0610 	add.w	r6, r6, #16
 802807a:	eee6 7a87 	vfma.f32	s15, s13, s14
 802807e:	d1f3      	bne.n	8028068 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 8028080:	18c2      	adds	r2, r0, r3
 8028082:	3304      	adds	r3, #4
 8028084:	2b10      	cmp	r3, #16
 8028086:	edc2 7a00 	vstr	s15, [r2]
 802808a:	d1e7      	bne.n	802805c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 802808c:	3110      	adds	r1, #16
 802808e:	4561      	cmp	r1, ip
 8028090:	f100 0010 	add.w	r0, r0, #16
 8028094:	d1e1      	bne.n	802805a <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 8028096:	4628      	mov	r0, r5
 8028098:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802809c:	00000000 	.word	0x00000000

080280a0 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 80280a0:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80280a4:	ee87 0a80 	vdiv.f32	s0, s15, s0
 80280a8:	f100 0320 	add.w	r3, r0, #32
 80280ac:	3030      	adds	r0, #48	; 0x30
 80280ae:	ecf3 7a01 	vldmia	r3!, {s15}
 80280b2:	ee60 7a27 	vmul.f32	s15, s0, s15
 80280b6:	4283      	cmp	r3, r0
 80280b8:	edc3 7a03 	vstr	s15, [r3, #12]
 80280bc:	d1f7      	bne.n	80280ae <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 80280be:	4770      	bx	lr

080280c0 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 80280c0:	b510      	push	{r4, lr}
 80280c2:	ed2d 8b02 	vpush	{d8}
 80280c6:	4604      	mov	r4, r0
 80280c8:	eef0 8a40 	vmov.f32	s17, s0
 80280cc:	f001 fa7a 	bl	80295c4 <sinf>
 80280d0:	eeb0 8a40 	vmov.f32	s16, s0
 80280d4:	eeb0 0a68 	vmov.f32	s0, s17
 80280d8:	f001 fa30 	bl	802953c <cosf>
 80280dc:	f104 0310 	add.w	r3, r4, #16
 80280e0:	f104 0220 	add.w	r2, r4, #32
 80280e4:	eeb1 6a48 	vneg.f32	s12, s16
 80280e8:	edd3 7a04 	vldr	s15, [r3, #16]
 80280ec:	edd3 6a00 	vldr	s13, [r3]
 80280f0:	ee26 7a27 	vmul.f32	s14, s12, s15
 80280f4:	ee67 7a80 	vmul.f32	s15, s15, s0
 80280f8:	eea6 7a80 	vfma.f32	s14, s13, s0
 80280fc:	eee6 7a88 	vfma.f32	s15, s13, s16
 8028100:	eca3 7a01 	vstmia	r3!, {s14}
 8028104:	429a      	cmp	r2, r3
 8028106:	edc3 7a03 	vstr	s15, [r3, #12]
 802810a:	d1ed      	bne.n	80280e8 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 802810c:	ecbd 8b02 	vpop	{d8}
 8028110:	4620      	mov	r0, r4
 8028112:	bd10      	pop	{r4, pc}

08028114 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 8028114:	b510      	push	{r4, lr}
 8028116:	ed2d 8b02 	vpush	{d8}
 802811a:	4604      	mov	r4, r0
 802811c:	eef0 8a40 	vmov.f32	s17, s0
 8028120:	f001 fa50 	bl	80295c4 <sinf>
 8028124:	eeb0 8a40 	vmov.f32	s16, s0
 8028128:	eeb0 0a68 	vmov.f32	s0, s17
 802812c:	f001 fa06 	bl	802953c <cosf>
 8028130:	4623      	mov	r3, r4
 8028132:	f104 0210 	add.w	r2, r4, #16
 8028136:	eeb1 6a48 	vneg.f32	s12, s16
 802813a:	edd3 7a08 	vldr	s15, [r3, #32]
 802813e:	edd3 6a00 	vldr	s13, [r3]
 8028142:	ee27 7a88 	vmul.f32	s14, s15, s16
 8028146:	ee67 7a80 	vmul.f32	s15, s15, s0
 802814a:	eea6 7a80 	vfma.f32	s14, s13, s0
 802814e:	eee6 7a26 	vfma.f32	s15, s12, s13
 8028152:	eca3 7a01 	vstmia	r3!, {s14}
 8028156:	429a      	cmp	r2, r3
 8028158:	edc3 7a07 	vstr	s15, [r3, #28]
 802815c:	d1ed      	bne.n	802813a <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 802815e:	ecbd 8b02 	vpop	{d8}
 8028162:	4620      	mov	r0, r4
 8028164:	bd10      	pop	{r4, pc}

08028166 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 8028166:	b510      	push	{r4, lr}
 8028168:	ed2d 8b02 	vpush	{d8}
 802816c:	4604      	mov	r4, r0
 802816e:	eef0 8a40 	vmov.f32	s17, s0
 8028172:	f001 fa27 	bl	80295c4 <sinf>
 8028176:	eeb0 8a40 	vmov.f32	s16, s0
 802817a:	eeb0 0a68 	vmov.f32	s0, s17
 802817e:	f001 f9dd 	bl	802953c <cosf>
 8028182:	4623      	mov	r3, r4
 8028184:	f104 0210 	add.w	r2, r4, #16
 8028188:	eeb1 6a48 	vneg.f32	s12, s16
 802818c:	edd3 7a04 	vldr	s15, [r3, #16]
 8028190:	edd3 6a00 	vldr	s13, [r3]
 8028194:	ee26 7a27 	vmul.f32	s14, s12, s15
 8028198:	ee67 7a80 	vmul.f32	s15, s15, s0
 802819c:	eea6 7a80 	vfma.f32	s14, s13, s0
 80281a0:	eee6 7a88 	vfma.f32	s15, s13, s16
 80281a4:	eca3 7a01 	vstmia	r3!, {s14}
 80281a8:	429a      	cmp	r2, r3
 80281aa:	edc3 7a03 	vstr	s15, [r3, #12]
 80281ae:	d1ed      	bne.n	802818c <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 80281b0:	ecbd 8b02 	vpop	{d8}
 80281b4:	4620      	mov	r0, r4
 80281b6:	bd10      	pop	{r4, pc}

080281b8 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 80281b8:	4603      	mov	r3, r0
 80281ba:	f100 0210 	add.w	r2, r0, #16
 80281be:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 80281c2:	edd3 7a00 	vldr	s15, [r3]
 80281c6:	eee7 7a00 	vfma.f32	s15, s14, s0
 80281ca:	ece3 7a01 	vstmia	r3!, {s15}
 80281ce:	4293      	cmp	r3, r2
 80281d0:	d1f5      	bne.n	80281be <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 80281d2:	4770      	bx	lr

080281d4 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 80281d4:	f100 0310 	add.w	r3, r0, #16
 80281d8:	f100 0220 	add.w	r2, r0, #32
 80281dc:	ed93 7a08 	vldr	s14, [r3, #32]
 80281e0:	edd3 7a00 	vldr	s15, [r3]
 80281e4:	eee7 7a00 	vfma.f32	s15, s14, s0
 80281e8:	ece3 7a01 	vstmia	r3!, {s15}
 80281ec:	4293      	cmp	r3, r2
 80281ee:	d1f5      	bne.n	80281dc <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 80281f0:	4770      	bx	lr

080281f2 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 80281f2:	f100 0320 	add.w	r3, r0, #32
 80281f6:	f100 0230 	add.w	r2, r0, #48	; 0x30
 80281fa:	ed93 7a04 	vldr	s14, [r3, #16]
 80281fe:	edd3 7a00 	vldr	s15, [r3]
 8028202:	eee7 7a00 	vfma.f32	s15, s14, s0
 8028206:	ece3 7a01 	vstmia	r3!, {s15}
 802820a:	4293      	cmp	r3, r2
 802820c:	d1f5      	bne.n	80281fa <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 802820e:	4770      	bx	lr

08028210 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 8028210:	4603      	mov	r3, r0
 8028212:	f100 0210 	add.w	r2, r0, #16
 8028216:	edd3 7a00 	vldr	s15, [r3]
 802821a:	ee67 7a80 	vmul.f32	s15, s15, s0
 802821e:	ece3 7a01 	vstmia	r3!, {s15}
 8028222:	4293      	cmp	r3, r2
 8028224:	d1f7      	bne.n	8028216 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 8028226:	4770      	bx	lr

08028228 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 8028228:	f100 0310 	add.w	r3, r0, #16
 802822c:	f100 0220 	add.w	r2, r0, #32
 8028230:	edd3 7a00 	vldr	s15, [r3]
 8028234:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028238:	ece3 7a01 	vstmia	r3!, {s15}
 802823c:	4293      	cmp	r3, r2
 802823e:	d1f7      	bne.n	8028230 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 8028240:	4770      	bx	lr

08028242 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 8028242:	f100 0320 	add.w	r3, r0, #32
 8028246:	f100 0230 	add.w	r2, r0, #48	; 0x30
 802824a:	edd3 7a00 	vldr	s15, [r3]
 802824e:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028252:	ece3 7a01 	vstmia	r3!, {s15}
 8028256:	4293      	cmp	r3, r2
 8028258:	d1f7      	bne.n	802824a <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 802825a:	4770      	bx	lr

0802825c <arm_max_f32>:
 802825c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028260:	1e4f      	subs	r7, r1, #1
 8028262:	ea5f 0897 	movs.w	r8, r7, lsr #2
 8028266:	f100 0e04 	add.w	lr, r0, #4
 802826a:	edd0 7a00 	vldr	s15, [r0]
 802826e:	d058      	beq.n	8028322 <arm_max_f32+0xc6>
 8028270:	3014      	adds	r0, #20
 8028272:	46c4      	mov	ip, r8
 8028274:	2604      	movs	r6, #4
 8028276:	2400      	movs	r4, #0
 8028278:	ed10 6a04 	vldr	s12, [r0, #-16]
 802827c:	ed50 6a03 	vldr	s13, [r0, #-12]
 8028280:	ed10 7a02 	vldr	s14, [r0, #-8]
 8028284:	ed50 5a01 	vldr	s11, [r0, #-4]
 8028288:	eeb4 6ae7 	vcmpe.f32	s12, s15
 802828c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028290:	bfc8      	it	gt
 8028292:	eef0 7a46 	vmovgt.f32	s15, s12
 8028296:	f1a6 0503 	sub.w	r5, r6, #3
 802829a:	eef4 7ae6 	vcmpe.f32	s15, s13
 802829e:	bfc8      	it	gt
 80282a0:	462c      	movgt	r4, r5
 80282a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80282a6:	bf48      	it	mi
 80282a8:	eef0 7a66 	vmovmi.f32	s15, s13
 80282ac:	f1a6 0502 	sub.w	r5, r6, #2
 80282b0:	eef4 7ac7 	vcmpe.f32	s15, s14
 80282b4:	bf48      	it	mi
 80282b6:	462c      	movmi	r4, r5
 80282b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80282bc:	bf48      	it	mi
 80282be:	eef0 7a47 	vmovmi.f32	s15, s14
 80282c2:	f106 35ff 	add.w	r5, r6, #4294967295
 80282c6:	eef4 7ae5 	vcmpe.f32	s15, s11
 80282ca:	bf48      	it	mi
 80282cc:	462c      	movmi	r4, r5
 80282ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80282d2:	bf48      	it	mi
 80282d4:	4634      	movmi	r4, r6
 80282d6:	bf48      	it	mi
 80282d8:	eef0 7a65 	vmovmi.f32	s15, s11
 80282dc:	f1bc 0c01 	subs.w	ip, ip, #1
 80282e0:	f106 0604 	add.w	r6, r6, #4
 80282e4:	f100 0010 	add.w	r0, r0, #16
 80282e8:	d1c6      	bne.n	8028278 <arm_max_f32+0x1c>
 80282ea:	eb0e 1e08 	add.w	lr, lr, r8, lsl #4
 80282ee:	f017 0003 	ands.w	r0, r7, #3
 80282f2:	d018      	beq.n	8028326 <arm_max_f32+0xca>
 80282f4:	1a08      	subs	r0, r1, r0
 80282f6:	ecbe 7a01 	vldmia	lr!, {s14}
 80282fa:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80282fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028302:	bfc8      	it	gt
 8028304:	4604      	movgt	r4, r0
 8028306:	f100 0001 	add.w	r0, r0, #1
 802830a:	bfd8      	it	le
 802830c:	eeb0 7a67 	vmovle.f32	s14, s15
 8028310:	4288      	cmp	r0, r1
 8028312:	eef0 7a47 	vmov.f32	s15, s14
 8028316:	d1ee      	bne.n	80282f6 <arm_max_f32+0x9a>
 8028318:	ed82 7a00 	vstr	s14, [r2]
 802831c:	601c      	str	r4, [r3, #0]
 802831e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028322:	4644      	mov	r4, r8
 8028324:	e7e3      	b.n	80282ee <arm_max_f32+0x92>
 8028326:	eeb0 7a67 	vmov.f32	s14, s15
 802832a:	e7f5      	b.n	8028318 <arm_max_f32+0xbc>

0802832c <arm_rfft_fast_init_f32>:
 802832c:	084b      	lsrs	r3, r1, #1
 802832e:	2b80      	cmp	r3, #128	; 0x80
 8028330:	b410      	push	{r4}
 8028332:	8201      	strh	r1, [r0, #16]
 8028334:	8003      	strh	r3, [r0, #0]
 8028336:	d047      	beq.n	80283c8 <arm_rfft_fast_init_f32+0x9c>
 8028338:	d917      	bls.n	802836a <arm_rfft_fast_init_f32+0x3e>
 802833a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802833e:	d03d      	beq.n	80283bc <arm_rfft_fast_init_f32+0x90>
 8028340:	d929      	bls.n	8028396 <arm_rfft_fast_init_f32+0x6a>
 8028342:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8028346:	d020      	beq.n	802838a <arm_rfft_fast_init_f32+0x5e>
 8028348:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 802834c:	d113      	bne.n	8028376 <arm_rfft_fast_init_f32+0x4a>
 802834e:	4921      	ldr	r1, [pc, #132]	; (80283d4 <arm_rfft_fast_init_f32+0xa8>)
 8028350:	4a21      	ldr	r2, [pc, #132]	; (80283d8 <arm_rfft_fast_init_f32+0xac>)
 8028352:	4b22      	ldr	r3, [pc, #136]	; (80283dc <arm_rfft_fast_init_f32+0xb0>)
 8028354:	f44f 646e 	mov.w	r4, #3808	; 0xee0
 8028358:	8184      	strh	r4, [r0, #12]
 802835a:	6081      	str	r1, [r0, #8]
 802835c:	6042      	str	r2, [r0, #4]
 802835e:	6143      	str	r3, [r0, #20]
 8028360:	2000      	movs	r0, #0
 8028362:	b240      	sxtb	r0, r0
 8028364:	f85d 4b04 	ldr.w	r4, [sp], #4
 8028368:	4770      	bx	lr
 802836a:	2b20      	cmp	r3, #32
 802836c:	d01c      	beq.n	80283a8 <arm_rfft_fast_init_f32+0x7c>
 802836e:	2b40      	cmp	r3, #64	; 0x40
 8028370:	d006      	beq.n	8028380 <arm_rfft_fast_init_f32+0x54>
 8028372:	2b10      	cmp	r3, #16
 8028374:	d01d      	beq.n	80283b2 <arm_rfft_fast_init_f32+0x86>
 8028376:	20ff      	movs	r0, #255	; 0xff
 8028378:	b240      	sxtb	r0, r0
 802837a:	f85d 4b04 	ldr.w	r4, [sp], #4
 802837e:	4770      	bx	lr
 8028380:	2438      	movs	r4, #56	; 0x38
 8028382:	4917      	ldr	r1, [pc, #92]	; (80283e0 <arm_rfft_fast_init_f32+0xb4>)
 8028384:	4a17      	ldr	r2, [pc, #92]	; (80283e4 <arm_rfft_fast_init_f32+0xb8>)
 8028386:	4b18      	ldr	r3, [pc, #96]	; (80283e8 <arm_rfft_fast_init_f32+0xbc>)
 8028388:	e7e6      	b.n	8028358 <arm_rfft_fast_init_f32+0x2c>
 802838a:	f44f 64e1 	mov.w	r4, #1800	; 0x708
 802838e:	4917      	ldr	r1, [pc, #92]	; (80283ec <arm_rfft_fast_init_f32+0xc0>)
 8028390:	4a17      	ldr	r2, [pc, #92]	; (80283f0 <arm_rfft_fast_init_f32+0xc4>)
 8028392:	4b18      	ldr	r3, [pc, #96]	; (80283f4 <arm_rfft_fast_init_f32+0xc8>)
 8028394:	e7e0      	b.n	8028358 <arm_rfft_fast_init_f32+0x2c>
 8028396:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 802839a:	d1ec      	bne.n	8028376 <arm_rfft_fast_init_f32+0x4a>
 802839c:	f44f 74dc 	mov.w	r4, #440	; 0x1b8
 80283a0:	4915      	ldr	r1, [pc, #84]	; (80283f8 <arm_rfft_fast_init_f32+0xcc>)
 80283a2:	4a16      	ldr	r2, [pc, #88]	; (80283fc <arm_rfft_fast_init_f32+0xd0>)
 80283a4:	4b16      	ldr	r3, [pc, #88]	; (8028400 <arm_rfft_fast_init_f32+0xd4>)
 80283a6:	e7d7      	b.n	8028358 <arm_rfft_fast_init_f32+0x2c>
 80283a8:	2430      	movs	r4, #48	; 0x30
 80283aa:	4916      	ldr	r1, [pc, #88]	; (8028404 <arm_rfft_fast_init_f32+0xd8>)
 80283ac:	4a16      	ldr	r2, [pc, #88]	; (8028408 <arm_rfft_fast_init_f32+0xdc>)
 80283ae:	4b17      	ldr	r3, [pc, #92]	; (802840c <arm_rfft_fast_init_f32+0xe0>)
 80283b0:	e7d2      	b.n	8028358 <arm_rfft_fast_init_f32+0x2c>
 80283b2:	2414      	movs	r4, #20
 80283b4:	4916      	ldr	r1, [pc, #88]	; (8028410 <arm_rfft_fast_init_f32+0xe4>)
 80283b6:	4a17      	ldr	r2, [pc, #92]	; (8028414 <arm_rfft_fast_init_f32+0xe8>)
 80283b8:	4b17      	ldr	r3, [pc, #92]	; (8028418 <arm_rfft_fast_init_f32+0xec>)
 80283ba:	e7cd      	b.n	8028358 <arm_rfft_fast_init_f32+0x2c>
 80283bc:	f44f 74e0 	mov.w	r4, #448	; 0x1c0
 80283c0:	4916      	ldr	r1, [pc, #88]	; (802841c <arm_rfft_fast_init_f32+0xf0>)
 80283c2:	4a17      	ldr	r2, [pc, #92]	; (8028420 <arm_rfft_fast_init_f32+0xf4>)
 80283c4:	4b17      	ldr	r3, [pc, #92]	; (8028424 <arm_rfft_fast_init_f32+0xf8>)
 80283c6:	e7c7      	b.n	8028358 <arm_rfft_fast_init_f32+0x2c>
 80283c8:	24d0      	movs	r4, #208	; 0xd0
 80283ca:	4917      	ldr	r1, [pc, #92]	; (8028428 <arm_rfft_fast_init_f32+0xfc>)
 80283cc:	4a17      	ldr	r2, [pc, #92]	; (802842c <arm_rfft_fast_init_f32+0x100>)
 80283ce:	4b18      	ldr	r3, [pc, #96]	; (8028430 <arm_rfft_fast_init_f32+0x104>)
 80283d0:	e7c2      	b.n	8028358 <arm_rfft_fast_init_f32+0x2c>
 80283d2:	bf00      	nop
 80283d4:	0803dc90 	.word	0x0803dc90
 80283d8:	0802ee88 	.word	0x0802ee88
 80283dc:	08034ff8 	.word	0x08034ff8
 80283e0:	08032f88 	.word	0x08032f88
 80283e4:	0803fa50 	.word	0x0803fa50
 80283e8:	08041f40 	.word	0x08041f40
 80283ec:	0803b978 	.word	0x0803b978
 80283f0:	08039878 	.word	0x08039878
 80283f4:	08032ff8 	.word	0x08032ff8
 80283f8:	08041bd0 	.word	0x08041bd0
 80283fc:	08038ff8 	.word	0x08038ff8
 8028400:	0803fc50 	.word	0x0803fc50
 8028404:	0803c830 	.word	0x0803c830
 8028408:	0803b878 	.word	0x0803b878
 802840c:	08032e88 	.word	0x08032e88
 8028410:	0803c788 	.word	0x0803c788
 8028414:	080397f8 	.word	0x080397f8
 8028418:	0803c7b0 	.word	0x0803c7b0
 802841c:	08040450 	.word	0x08040450
 8028420:	0803cc90 	.word	0x0803cc90
 8028424:	080407d0 	.word	0x080407d0
 8028428:	08042140 	.word	0x08042140
 802842c:	0803c890 	.word	0x0803c890
 8028430:	080417d0 	.word	0x080417d0

08028434 <arm_rfft_fast_f32>:
 8028434:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028438:	8a06      	ldrh	r6, [r0, #16]
 802843a:	0876      	lsrs	r6, r6, #1
 802843c:	4607      	mov	r7, r0
 802843e:	4615      	mov	r5, r2
 8028440:	8006      	strh	r6, [r0, #0]
 8028442:	460c      	mov	r4, r1
 8028444:	2b00      	cmp	r3, #0
 8028446:	d15c      	bne.n	8028502 <arm_rfft_fast_f32+0xce>
 8028448:	461a      	mov	r2, r3
 802844a:	2301      	movs	r3, #1
 802844c:	f000 fbe6 	bl	8028c1c <arm_cfft_f32>
 8028450:	edd4 7a00 	vldr	s15, [r4]
 8028454:	ed94 7a01 	vldr	s14, [r4, #4]
 8028458:	883e      	ldrh	r6, [r7, #0]
 802845a:	6978      	ldr	r0, [r7, #20]
 802845c:	ee37 7a07 	vadd.f32	s14, s14, s14
 8028460:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8028464:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 8028468:	ee77 6a87 	vadd.f32	s13, s15, s14
 802846c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8028470:	3e01      	subs	r6, #1
 8028472:	ee26 7aa3 	vmul.f32	s14, s13, s7
 8028476:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802847a:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 802847e:	ed85 7a00 	vstr	s14, [r5]
 8028482:	edc5 7a01 	vstr	s15, [r5, #4]
 8028486:	3010      	adds	r0, #16
 8028488:	f105 0210 	add.w	r2, r5, #16
 802848c:	3b08      	subs	r3, #8
 802848e:	f104 0110 	add.w	r1, r4, #16
 8028492:	ed51 4a02 	vldr	s9, [r1, #-8]
 8028496:	ed93 5a02 	vldr	s10, [r3, #8]
 802849a:	ed11 7a01 	vldr	s14, [r1, #-4]
 802849e:	ed10 6a02 	vldr	s12, [r0, #-8]
 80284a2:	edd3 5a03 	vldr	s11, [r3, #12]
 80284a6:	ed50 6a01 	vldr	s13, [r0, #-4]
 80284aa:	ee75 7a64 	vsub.f32	s15, s10, s9
 80284ae:	ee35 4a87 	vadd.f32	s8, s11, s14
 80284b2:	ee35 5a24 	vadd.f32	s10, s10, s9
 80284b6:	ee77 5a65 	vsub.f32	s11, s14, s11
 80284ba:	ee66 4a27 	vmul.f32	s9, s12, s15
 80284be:	ee26 7aa7 	vmul.f32	s14, s13, s15
 80284c2:	ee34 5a85 	vadd.f32	s10, s9, s10
 80284c6:	ee26 6a04 	vmul.f32	s12, s12, s8
 80284ca:	ee66 6a84 	vmul.f32	s13, s13, s8
 80284ce:	ee77 7a25 	vadd.f32	s15, s14, s11
 80284d2:	ee76 6a85 	vadd.f32	s13, s13, s10
 80284d6:	ee77 7ac6 	vsub.f32	s15, s15, s12
 80284da:	ee66 6aa3 	vmul.f32	s13, s13, s7
 80284de:	ee67 7aa3 	vmul.f32	s15, s15, s7
 80284e2:	3e01      	subs	r6, #1
 80284e4:	ed42 6a02 	vstr	s13, [r2, #-8]
 80284e8:	ed42 7a01 	vstr	s15, [r2, #-4]
 80284ec:	f1a3 0308 	sub.w	r3, r3, #8
 80284f0:	f101 0108 	add.w	r1, r1, #8
 80284f4:	f100 0008 	add.w	r0, r0, #8
 80284f8:	f102 0208 	add.w	r2, r2, #8
 80284fc:	d1c9      	bne.n	8028492 <arm_rfft_fast_f32+0x5e>
 80284fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028502:	edd1 7a00 	vldr	s15, [r1]
 8028506:	edd1 6a01 	vldr	s13, [r1, #4]
 802850a:	6941      	ldr	r1, [r0, #20]
 802850c:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8028510:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8028514:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 8028518:	ee27 7a23 	vmul.f32	s14, s14, s7
 802851c:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8028520:	3e01      	subs	r6, #1
 8028522:	ed82 7a00 	vstr	s14, [r2]
 8028526:	edc2 7a01 	vstr	s15, [r2, #4]
 802852a:	00f0      	lsls	r0, r6, #3
 802852c:	b3ee      	cbz	r6, 80285aa <arm_rfft_fast_f32+0x176>
 802852e:	3808      	subs	r0, #8
 8028530:	f101 0e10 	add.w	lr, r1, #16
 8028534:	4420      	add	r0, r4
 8028536:	f104 0110 	add.w	r1, r4, #16
 802853a:	f102 0c10 	add.w	ip, r2, #16
 802853e:	ed90 7a02 	vldr	s14, [r0, #8]
 8028542:	ed51 6a02 	vldr	s13, [r1, #-8]
 8028546:	ed1e 6a02 	vldr	s12, [lr, #-8]
 802854a:	ed90 4a03 	vldr	s8, [r0, #12]
 802854e:	ed11 5a01 	vldr	s10, [r1, #-4]
 8028552:	ed5e 5a01 	vldr	s11, [lr, #-4]
 8028556:	ee76 7ac7 	vsub.f32	s15, s13, s14
 802855a:	ee74 4a05 	vadd.f32	s9, s8, s10
 802855e:	ee26 3a27 	vmul.f32	s6, s12, s15
 8028562:	ee77 6a26 	vadd.f32	s13, s14, s13
 8028566:	ee35 5a44 	vsub.f32	s10, s10, s8
 802856a:	ee25 7aa7 	vmul.f32	s14, s11, s15
 802856e:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8028572:	ee77 7a05 	vadd.f32	s15, s14, s10
 8028576:	ee26 6a24 	vmul.f32	s12, s12, s9
 802857a:	ee65 5aa4 	vmul.f32	s11, s11, s9
 802857e:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8028582:	ee36 7ae5 	vsub.f32	s14, s13, s11
 8028586:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802858a:	ee27 7a23 	vmul.f32	s14, s14, s7
 802858e:	3e01      	subs	r6, #1
 8028590:	ed0c 7a02 	vstr	s14, [ip, #-8]
 8028594:	ed4c 7a01 	vstr	s15, [ip, #-4]
 8028598:	f1a0 0008 	sub.w	r0, r0, #8
 802859c:	f101 0108 	add.w	r1, r1, #8
 80285a0:	f10e 0e08 	add.w	lr, lr, #8
 80285a4:	f10c 0c08 	add.w	ip, ip, #8
 80285a8:	d1c9      	bne.n	802853e <arm_rfft_fast_f32+0x10a>
 80285aa:	4638      	mov	r0, r7
 80285ac:	4629      	mov	r1, r5
 80285ae:	461a      	mov	r2, r3
 80285b0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80285b4:	2301      	movs	r3, #1
 80285b6:	f000 bb31 	b.w	8028c1c <arm_cfft_f32>
 80285ba:	bf00      	nop

080285bc <arm_cfft_radix8by2_f32>:
 80285bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80285c0:	ed2d 8b08 	vpush	{d8-d11}
 80285c4:	f8b0 e000 	ldrh.w	lr, [r0]
 80285c8:	6842      	ldr	r2, [r0, #4]
 80285ca:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 80285ce:	eb01 088e 	add.w	r8, r1, lr, lsl #2
 80285d2:	ea5f 0ede 	movs.w	lr, lr, lsr #3
 80285d6:	4607      	mov	r7, r0
 80285d8:	ea4f 038c 	mov.w	r3, ip, lsl #2
 80285dc:	f000 80af 	beq.w	802873e <arm_cfft_radix8by2_f32+0x182>
 80285e0:	3310      	adds	r3, #16
 80285e2:	18ce      	adds	r6, r1, r3
 80285e4:	3210      	adds	r2, #16
 80285e6:	4443      	add	r3, r8
 80285e8:	f101 0510 	add.w	r5, r1, #16
 80285ec:	f108 0410 	add.w	r4, r8, #16
 80285f0:	ed54 1a04 	vldr	s3, [r4, #-16]
 80285f4:	ed13 4a04 	vldr	s8, [r3, #-16]
 80285f8:	ed53 3a03 	vldr	s7, [r3, #-12]
 80285fc:	ed53 5a02 	vldr	s11, [r3, #-8]
 8028600:	ed13 5a01 	vldr	s10, [r3, #-4]
 8028604:	ed54 6a03 	vldr	s13, [r4, #-12]
 8028608:	ed14 0a02 	vldr	s0, [r4, #-8]
 802860c:	ed16 2a04 	vldr	s4, [r6, #-16]
 8028610:	ed56 2a03 	vldr	s5, [r6, #-12]
 8028614:	ed15 6a03 	vldr	s12, [r5, #-12]
 8028618:	ed15 7a01 	vldr	s14, [r5, #-4]
 802861c:	ed15 3a04 	vldr	s6, [r5, #-16]
 8028620:	ed54 7a01 	vldr	s15, [r4, #-4]
 8028624:	ed56 0a02 	vldr	s1, [r6, #-8]
 8028628:	ed16 1a01 	vldr	s2, [r6, #-4]
 802862c:	ed55 4a02 	vldr	s9, [r5, #-8]
 8028630:	ee73 ba21 	vadd.f32	s23, s6, s3
 8028634:	ee36 ba26 	vadd.f32	s22, s12, s13
 8028638:	ee37 aa27 	vadd.f32	s20, s14, s15
 802863c:	ee72 9a04 	vadd.f32	s19, s4, s8
 8028640:	ee32 9aa3 	vadd.f32	s18, s5, s7
 8028644:	ee31 8a05 	vadd.f32	s16, s2, s10
 8028648:	ee74 aa80 	vadd.f32	s21, s9, s0
 802864c:	ee70 8aa5 	vadd.f32	s17, s1, s11
 8028650:	ed45 ba04 	vstr	s23, [r5, #-16]
 8028654:	ed05 ba03 	vstr	s22, [r5, #-12]
 8028658:	ed45 aa02 	vstr	s21, [r5, #-8]
 802865c:	ed05 aa01 	vstr	s20, [r5, #-4]
 8028660:	ed06 8a01 	vstr	s16, [r6, #-4]
 8028664:	ed46 9a04 	vstr	s19, [r6, #-16]
 8028668:	ed06 9a03 	vstr	s18, [r6, #-12]
 802866c:	ed46 8a02 	vstr	s17, [r6, #-8]
 8028670:	ee76 6a66 	vsub.f32	s13, s12, s13
 8028674:	ee73 3ae2 	vsub.f32	s7, s7, s5
 8028678:	ed12 6a03 	vldr	s12, [r2, #-12]
 802867c:	ed52 2a04 	vldr	s5, [r2, #-16]
 8028680:	ee33 3a61 	vsub.f32	s6, s6, s3
 8028684:	ee34 4a42 	vsub.f32	s8, s8, s4
 8028688:	ee26 8a86 	vmul.f32	s16, s13, s12
 802868c:	ee24 2a06 	vmul.f32	s4, s8, s12
 8028690:	ee63 1a22 	vmul.f32	s3, s6, s5
 8028694:	ee24 4a22 	vmul.f32	s8, s8, s5
 8028698:	ee23 3a06 	vmul.f32	s6, s6, s12
 802869c:	ee66 6aa2 	vmul.f32	s13, s13, s5
 80286a0:	ee23 6a86 	vmul.f32	s12, s7, s12
 80286a4:	ee63 3aa2 	vmul.f32	s7, s7, s5
 80286a8:	ee36 6a04 	vadd.f32	s12, s12, s8
 80286ac:	ee76 6ac3 	vsub.f32	s13, s13, s6
 80286b0:	ee72 3a63 	vsub.f32	s7, s4, s7
 80286b4:	ee71 2a88 	vadd.f32	s5, s3, s16
 80286b8:	ed44 6a03 	vstr	s13, [r4, #-12]
 80286bc:	ed44 2a04 	vstr	s5, [r4, #-16]
 80286c0:	ed43 3a04 	vstr	s7, [r3, #-16]
 80286c4:	ed03 6a03 	vstr	s12, [r3, #-12]
 80286c8:	ee77 7a67 	vsub.f32	s15, s14, s15
 80286cc:	ee75 6ae0 	vsub.f32	s13, s11, s1
 80286d0:	ed12 7a01 	vldr	s14, [r2, #-4]
 80286d4:	ed52 5a02 	vldr	s11, [r2, #-8]
 80286d8:	ee35 6a41 	vsub.f32	s12, s10, s2
 80286dc:	ee74 4ac0 	vsub.f32	s9, s9, s0
 80286e0:	ee67 3a87 	vmul.f32	s7, s15, s14
 80286e4:	ee26 5a87 	vmul.f32	s10, s13, s14
 80286e8:	ee24 4aa5 	vmul.f32	s8, s9, s11
 80286ec:	ee67 7aa5 	vmul.f32	s15, s15, s11
 80286f0:	ee64 4a87 	vmul.f32	s9, s9, s14
 80286f4:	ee66 6aa5 	vmul.f32	s13, s13, s11
 80286f8:	ee26 7a07 	vmul.f32	s14, s12, s14
 80286fc:	ee26 6a25 	vmul.f32	s12, s12, s11
 8028700:	ee77 7ae4 	vsub.f32	s15, s15, s9
 8028704:	ee74 5a23 	vadd.f32	s11, s8, s7
 8028708:	ee35 6a46 	vsub.f32	s12, s10, s12
 802870c:	ee37 7a26 	vadd.f32	s14, s14, s13
 8028710:	f1be 0e01 	subs.w	lr, lr, #1
 8028714:	ed44 5a02 	vstr	s11, [r4, #-8]
 8028718:	f105 0510 	add.w	r5, r5, #16
 802871c:	ed44 7a01 	vstr	s15, [r4, #-4]
 8028720:	f106 0610 	add.w	r6, r6, #16
 8028724:	ed03 6a02 	vstr	s12, [r3, #-8]
 8028728:	ed03 7a01 	vstr	s14, [r3, #-4]
 802872c:	f102 0210 	add.w	r2, r2, #16
 8028730:	f104 0410 	add.w	r4, r4, #16
 8028734:	f103 0310 	add.w	r3, r3, #16
 8028738:	f47f af5a 	bne.w	80285f0 <arm_cfft_radix8by2_f32+0x34>
 802873c:	687a      	ldr	r2, [r7, #4]
 802873e:	fa1f f48c 	uxth.w	r4, ip
 8028742:	4608      	mov	r0, r1
 8028744:	2302      	movs	r3, #2
 8028746:	4621      	mov	r1, r4
 8028748:	f000 fbca 	bl	8028ee0 <arm_radix8_butterfly_f32>
 802874c:	ecbd 8b08 	vpop	{d8-d11}
 8028750:	4640      	mov	r0, r8
 8028752:	4621      	mov	r1, r4
 8028754:	687a      	ldr	r2, [r7, #4]
 8028756:	2302      	movs	r3, #2
 8028758:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802875c:	f000 bbc0 	b.w	8028ee0 <arm_radix8_butterfly_f32>

08028760 <arm_cfft_radix8by4_f32>:
 8028760:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028764:	ed2d 8b0a 	vpush	{d8-d12}
 8028768:	8802      	ldrh	r2, [r0, #0]
 802876a:	ed91 6a00 	vldr	s12, [r1]
 802876e:	b08f      	sub	sp, #60	; 0x3c
 8028770:	460f      	mov	r7, r1
 8028772:	0852      	lsrs	r2, r2, #1
 8028774:	0093      	lsls	r3, r2, #2
 8028776:	900c      	str	r0, [sp, #48]	; 0x30
 8028778:	9103      	str	r1, [sp, #12]
 802877a:	6841      	ldr	r1, [r0, #4]
 802877c:	ed97 7a01 	vldr	s14, [r7, #4]
 8028780:	4638      	mov	r0, r7
 8028782:	4418      	add	r0, r3
 8028784:	4606      	mov	r6, r0
 8028786:	9009      	str	r0, [sp, #36]	; 0x24
 8028788:	4418      	add	r0, r3
 802878a:	edd0 6a00 	vldr	s13, [r0]
 802878e:	edd6 3a00 	vldr	s7, [r6]
 8028792:	edd6 2a01 	vldr	s5, [r6, #4]
 8028796:	edd0 7a01 	vldr	s15, [r0, #4]
 802879a:	900a      	str	r0, [sp, #40]	; 0x28
 802879c:	ee76 5a26 	vadd.f32	s11, s12, s13
 80287a0:	4604      	mov	r4, r0
 80287a2:	4625      	mov	r5, r4
 80287a4:	441c      	add	r4, r3
 80287a6:	ed94 4a00 	vldr	s8, [r4]
 80287aa:	ed94 5a01 	vldr	s10, [r4, #4]
 80287ae:	9401      	str	r4, [sp, #4]
 80287b0:	ee75 4aa3 	vadd.f32	s9, s11, s7
 80287b4:	4630      	mov	r0, r6
 80287b6:	ee74 4a24 	vadd.f32	s9, s8, s9
 80287ba:	463e      	mov	r6, r7
 80287bc:	ee14 ea90 	vmov	lr, s9
 80287c0:	ee76 6a66 	vsub.f32	s13, s12, s13
 80287c4:	f846 eb08 	str.w	lr, [r6], #8
 80287c8:	ee37 6a27 	vadd.f32	s12, s14, s15
 80287cc:	edd0 4a01 	vldr	s9, [r0, #4]
 80287d0:	9604      	str	r6, [sp, #16]
 80287d2:	ee77 7a67 	vsub.f32	s15, s14, s15
 80287d6:	9e01      	ldr	r6, [sp, #4]
 80287d8:	ee32 3aa6 	vadd.f32	s6, s5, s13
 80287dc:	ed96 2a01 	vldr	s4, [r6, #4]
 80287e0:	ee36 7a24 	vadd.f32	s14, s12, s9
 80287e4:	ee75 5ae3 	vsub.f32	s11, s11, s7
 80287e8:	ee77 4ae3 	vsub.f32	s9, s15, s7
 80287ec:	ee36 6a62 	vsub.f32	s12, s12, s5
 80287f0:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80287f4:	ee76 6ae2 	vsub.f32	s13, s13, s5
 80287f8:	ee73 3a45 	vsub.f32	s7, s6, s10
 80287fc:	4604      	mov	r4, r0
 80287fe:	ee36 6a45 	vsub.f32	s12, s12, s10
 8028802:	ee75 6a26 	vadd.f32	s13, s10, s13
 8028806:	46a3      	mov	fp, r4
 8028808:	ee37 7a02 	vadd.f32	s14, s14, s4
 802880c:	ee34 5a84 	vadd.f32	s10, s9, s8
 8028810:	ee13 8a90 	vmov	r8, s7
 8028814:	46a4      	mov	ip, r4
 8028816:	ee75 5ac4 	vsub.f32	s11, s11, s8
 802881a:	ed87 7a01 	vstr	s14, [r7, #4]
 802881e:	f84b 8b08 	str.w	r8, [fp], #8
 8028822:	f1ac 0704 	sub.w	r7, ip, #4
 8028826:	ed8c 5a01 	vstr	s10, [ip, #4]
 802882a:	f101 0c08 	add.w	ip, r1, #8
 802882e:	462c      	mov	r4, r5
 8028830:	f8cd c014 	str.w	ip, [sp, #20]
 8028834:	ee15 ca90 	vmov	ip, s11
 8028838:	f844 cb08 	str.w	ip, [r4], #8
 802883c:	9407      	str	r4, [sp, #28]
 802883e:	f101 0410 	add.w	r4, r1, #16
 8028842:	ed85 6a01 	vstr	s12, [r5, #4]
 8028846:	0852      	lsrs	r2, r2, #1
 8028848:	9402      	str	r4, [sp, #8]
 802884a:	462c      	mov	r4, r5
 802884c:	f101 0518 	add.w	r5, r1, #24
 8028850:	920b      	str	r2, [sp, #44]	; 0x2c
 8028852:	46b2      	mov	sl, r6
 8028854:	9506      	str	r5, [sp, #24]
 8028856:	ee77 7ac4 	vsub.f32	s15, s15, s8
 802885a:	3a02      	subs	r2, #2
 802885c:	ee16 5a90 	vmov	r5, s13
 8028860:	46b6      	mov	lr, r6
 8028862:	4630      	mov	r0, r6
 8028864:	0852      	lsrs	r2, r2, #1
 8028866:	f84a 5b08 	str.w	r5, [sl], #8
 802886a:	f1a0 0604 	sub.w	r6, r0, #4
 802886e:	edce 7a01 	vstr	s15, [lr, #4]
 8028872:	9208      	str	r2, [sp, #32]
 8028874:	f000 8130 	beq.w	8028ad8 <arm_cfft_radix8by4_f32+0x378>
 8028878:	4691      	mov	r9, r2
 802887a:	9a03      	ldr	r2, [sp, #12]
 802887c:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8028880:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 8028884:	3b08      	subs	r3, #8
 8028886:	f102 0510 	add.w	r5, r2, #16
 802888a:	f101 0c20 	add.w	ip, r1, #32
 802888e:	f1a4 020c 	sub.w	r2, r4, #12
 8028892:	f101 0e30 	add.w	lr, r1, #48	; 0x30
 8028896:	4433      	add	r3, r6
 8028898:	3410      	adds	r4, #16
 802889a:	4650      	mov	r0, sl
 802889c:	4659      	mov	r1, fp
 802889e:	ed55 3a02 	vldr	s7, [r5, #-8]
 80288a2:	ed14 5a02 	vldr	s10, [r4, #-8]
 80288a6:	ed91 7a00 	vldr	s14, [r1]
 80288aa:	edd0 7a00 	vldr	s15, [r0]
 80288ae:	ed15 4a01 	vldr	s8, [r5, #-4]
 80288b2:	ed54 5a01 	vldr	s11, [r4, #-4]
 80288b6:	edd0 6a01 	vldr	s13, [r0, #4]
 80288ba:	ed91 6a01 	vldr	s12, [r1, #4]
 80288be:	ee33 8a85 	vadd.f32	s16, s7, s10
 80288c2:	ee34 0a25 	vadd.f32	s0, s8, s11
 80288c6:	ee78 4a07 	vadd.f32	s9, s16, s14
 80288ca:	ee74 5a65 	vsub.f32	s11, s8, s11
 80288ce:	ee77 4aa4 	vadd.f32	s9, s15, s9
 80288d2:	ee33 5ac5 	vsub.f32	s10, s7, s10
 80288d6:	ed45 4a02 	vstr	s9, [r5, #-8]
 80288da:	edd1 4a01 	vldr	s9, [r1, #4]
 80288de:	ed90 4a01 	vldr	s8, [r0, #4]
 80288e2:	ee70 4a24 	vadd.f32	s9, s0, s9
 80288e6:	ee76 aa05 	vadd.f32	s21, s12, s10
 80288ea:	ee74 4a84 	vadd.f32	s9, s9, s8
 80288ee:	ee35 aac7 	vsub.f32	s20, s11, s14
 80288f2:	ed45 4a01 	vstr	s9, [r5, #-4]
 80288f6:	edd6 1a00 	vldr	s3, [r6]
 80288fa:	edd7 0a00 	vldr	s1, [r7]
 80288fe:	ed92 4a02 	vldr	s8, [r2, #8]
 8028902:	edd3 3a02 	vldr	s7, [r3, #8]
 8028906:	ed93 2a01 	vldr	s4, [r3, #4]
 802890a:	ed16 1a01 	vldr	s2, [r6, #-4]
 802890e:	edd2 2a01 	vldr	s5, [r2, #4]
 8028912:	ed57 9a01 	vldr	s19, [r7, #-4]
 8028916:	ee70 4aa1 	vadd.f32	s9, s1, s3
 802891a:	ee39 3a81 	vadd.f32	s6, s19, s2
 802891e:	ee74 8a84 	vadd.f32	s17, s9, s8
 8028922:	ee70 1ae1 	vsub.f32	s3, s1, s3
 8028926:	ee73 8aa8 	vadd.f32	s17, s7, s17
 802892a:	ee7a aae6 	vsub.f32	s21, s21, s13
 802892e:	ee18 aa90 	vmov	sl, s17
 8028932:	f847 a908 	str.w	sl, [r7], #-8
 8028936:	edd2 8a01 	vldr	s17, [r2, #4]
 802893a:	ed93 9a01 	vldr	s18, [r3, #4]
 802893e:	ee73 8a28 	vadd.f32	s17, s6, s17
 8028942:	ee3a aa27 	vadd.f32	s20, s20, s15
 8028946:	ee78 8a89 	vadd.f32	s17, s17, s18
 802894a:	ee74 0a63 	vsub.f32	s1, s8, s7
 802894e:	edc7 8a01 	vstr	s17, [r7, #4]
 8028952:	ed18 ba02 	vldr	s22, [r8, #-8]
 8028956:	ed58 8a01 	vldr	s17, [r8, #-4]
 802895a:	ee39 1ac1 	vsub.f32	s2, s19, s2
 802895e:	ee6a ba28 	vmul.f32	s23, s20, s17
 8028962:	ee2a ca8b 	vmul.f32	s24, s21, s22
 8028966:	ee71 9ae2 	vsub.f32	s19, s3, s5
 802896a:	ee30 9a81 	vadd.f32	s18, s1, s2
 802896e:	ee79 9a82 	vadd.f32	s19, s19, s4
 8028972:	ee3c ca2b 	vadd.f32	s24, s24, s23
 8028976:	ee6a aaa8 	vmul.f32	s21, s21, s17
 802897a:	ee69 baa8 	vmul.f32	s23, s19, s17
 802897e:	ee2a aa0b 	vmul.f32	s20, s20, s22
 8028982:	ee69 9a8b 	vmul.f32	s19, s19, s22
 8028986:	ee69 8a28 	vmul.f32	s17, s18, s17
 802898a:	ee29 ba0b 	vmul.f32	s22, s18, s22
 802898e:	ee1c aa10 	vmov	sl, s24
 8028992:	ee78 8aa9 	vadd.f32	s17, s17, s19
 8028996:	f841 ab08 	str.w	sl, [r1], #8
 802899a:	ee3a aa6a 	vsub.f32	s20, s20, s21
 802899e:	ee3b bacb 	vsub.f32	s22, s23, s22
 80289a2:	ee34 4ac4 	vsub.f32	s8, s9, s8
 80289a6:	ee33 3a62 	vsub.f32	s6, s6, s5
 80289aa:	ed01 aa01 	vstr	s20, [r1, #-4]
 80289ae:	edc2 8a01 	vstr	s17, [r2, #4]
 80289b2:	ed82 ba02 	vstr	s22, [r2, #8]
 80289b6:	ed5c 4a04 	vldr	s9, [ip, #-16]
 80289ba:	ee74 3a63 	vsub.f32	s7, s8, s7
 80289be:	ee38 8a47 	vsub.f32	s16, s16, s14
 80289c2:	ed1c 4a03 	vldr	s8, [ip, #-12]
 80289c6:	ee30 0a46 	vsub.f32	s0, s0, s12
 80289ca:	ee33 3a42 	vsub.f32	s6, s6, s4
 80289ce:	ee38 8a67 	vsub.f32	s16, s16, s15
 80289d2:	ee30 0a66 	vsub.f32	s0, s0, s13
 80289d6:	ee23 9ae4 	vnmul.f32	s18, s7, s9
 80289da:	ee63 8a04 	vmul.f32	s17, s6, s8
 80289de:	ee28 aa24 	vmul.f32	s20, s16, s9
 80289e2:	ee60 9a04 	vmul.f32	s19, s0, s8
 80289e6:	ee28 8a04 	vmul.f32	s16, s16, s8
 80289ea:	ee20 0a24 	vmul.f32	s0, s0, s9
 80289ee:	ee63 3a84 	vmul.f32	s7, s7, s8
 80289f2:	ee39 4a68 	vsub.f32	s8, s18, s17
 80289f6:	ee7a 9a29 	vadd.f32	s19, s20, s19
 80289fa:	ee14 aa10 	vmov	sl, s8
 80289fe:	ee30 0a48 	vsub.f32	s0, s0, s16
 8028a02:	ee63 4a24 	vmul.f32	s9, s6, s9
 8028a06:	ed44 9a02 	vstr	s19, [r4, #-8]
 8028a0a:	ee73 3ae4 	vsub.f32	s7, s7, s9
 8028a0e:	ed04 0a01 	vstr	s0, [r4, #-4]
 8028a12:	f846 a908 	str.w	sl, [r6], #-8
 8028a16:	ee35 6a46 	vsub.f32	s12, s10, s12
 8028a1a:	ee35 7a87 	vadd.f32	s14, s11, s14
 8028a1e:	edc6 3a01 	vstr	s7, [r6, #4]
 8028a22:	ee76 6a86 	vadd.f32	s13, s13, s12
 8028a26:	ee77 7a67 	vsub.f32	s15, s14, s15
 8028a2a:	ed1e 6a05 	vldr	s12, [lr, #-20]	; 0xffffffec
 8028a2e:	ed1e 7a06 	vldr	s14, [lr, #-24]	; 0xffffffe8
 8028a32:	ee67 5a86 	vmul.f32	s11, s15, s12
 8028a36:	ee26 5a87 	vmul.f32	s10, s13, s14
 8028a3a:	ee72 2a62 	vsub.f32	s5, s4, s5
 8028a3e:	ee30 1ac1 	vsub.f32	s2, s1, s2
 8028a42:	ee72 2ae1 	vsub.f32	s5, s5, s3
 8028a46:	ee75 5a25 	vadd.f32	s11, s10, s11
 8028a4a:	ee62 0a86 	vmul.f32	s1, s5, s12
 8028a4e:	ee66 6a86 	vmul.f32	s13, s13, s12
 8028a52:	ee67 7a87 	vmul.f32	s15, s15, s14
 8028a56:	ee21 6a06 	vmul.f32	s12, s2, s12
 8028a5a:	ee62 2a87 	vmul.f32	s5, s5, s14
 8028a5e:	ee21 1a07 	vmul.f32	s2, s2, s14
 8028a62:	ee15 aa90 	vmov	sl, s11
 8028a66:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8028a6a:	f840 ab08 	str.w	sl, [r0], #8
 8028a6e:	ee30 1ac1 	vsub.f32	s2, s1, s2
 8028a72:	ee76 2a22 	vadd.f32	s5, s12, s5
 8028a76:	f1b9 0901 	subs.w	r9, r9, #1
 8028a7a:	ed40 7a01 	vstr	s15, [r0, #-4]
 8028a7e:	f105 0508 	add.w	r5, r5, #8
 8028a82:	ed83 1a02 	vstr	s2, [r3, #8]
 8028a86:	edc3 2a01 	vstr	s5, [r3, #4]
 8028a8a:	f108 0808 	add.w	r8, r8, #8
 8028a8e:	f1a2 0208 	sub.w	r2, r2, #8
 8028a92:	f10c 0c10 	add.w	ip, ip, #16
 8028a96:	f104 0408 	add.w	r4, r4, #8
 8028a9a:	f10e 0e18 	add.w	lr, lr, #24
 8028a9e:	f1a3 0308 	sub.w	r3, r3, #8
 8028aa2:	f47f aefc 	bne.w	802889e <arm_cfft_radix8by4_f32+0x13e>
 8028aa6:	9908      	ldr	r1, [sp, #32]
 8028aa8:	9802      	ldr	r0, [sp, #8]
 8028aaa:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 8028aae:	00cb      	lsls	r3, r1, #3
 8028ab0:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 8028ab4:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 8028ab8:	9102      	str	r1, [sp, #8]
 8028aba:	9904      	ldr	r1, [sp, #16]
 8028abc:	4419      	add	r1, r3
 8028abe:	9104      	str	r1, [sp, #16]
 8028ac0:	9905      	ldr	r1, [sp, #20]
 8028ac2:	4419      	add	r1, r3
 8028ac4:	9105      	str	r1, [sp, #20]
 8028ac6:	9907      	ldr	r1, [sp, #28]
 8028ac8:	449b      	add	fp, r3
 8028aca:	4419      	add	r1, r3
 8028acc:	449a      	add	sl, r3
 8028ace:	9b06      	ldr	r3, [sp, #24]
 8028ad0:	9107      	str	r1, [sp, #28]
 8028ad2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8028ad6:	9306      	str	r3, [sp, #24]
 8028ad8:	9a04      	ldr	r2, [sp, #16]
 8028ada:	9807      	ldr	r0, [sp, #28]
 8028adc:	edd2 3a00 	vldr	s7, [r2]
 8028ae0:	ed90 4a00 	vldr	s8, [r0]
 8028ae4:	eddb 7a00 	vldr	s15, [fp]
 8028ae8:	ed9a 3a00 	vldr	s6, [sl]
 8028aec:	edd2 4a01 	vldr	s9, [r2, #4]
 8028af0:	ed90 7a01 	vldr	s14, [r0, #4]
 8028af4:	ed9b 2a01 	vldr	s4, [fp, #4]
 8028af8:	edda 5a01 	vldr	s11, [sl, #4]
 8028afc:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 8028b00:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8028b02:	ee73 6a84 	vadd.f32	s13, s7, s8
 8028b06:	ee34 6a87 	vadd.f32	s12, s9, s14
 8028b0a:	ee36 5aa7 	vadd.f32	s10, s13, s15
 8028b0e:	ee34 7ac7 	vsub.f32	s14, s9, s14
 8028b12:	ee33 5a05 	vadd.f32	s10, s6, s10
 8028b16:	ee33 4ac4 	vsub.f32	s8, s7, s8
 8028b1a:	ed82 5a00 	vstr	s10, [r2]
 8028b1e:	ed9b 5a01 	vldr	s10, [fp, #4]
 8028b22:	edda 4a01 	vldr	s9, [sl, #4]
 8028b26:	ee36 5a05 	vadd.f32	s10, s12, s10
 8028b2a:	ee72 3a04 	vadd.f32	s7, s4, s8
 8028b2e:	ee35 5a24 	vadd.f32	s10, s10, s9
 8028b32:	ee77 4a67 	vsub.f32	s9, s14, s15
 8028b36:	ed82 5a01 	vstr	s10, [r2, #4]
 8028b3a:	9a05      	ldr	r2, [sp, #20]
 8028b3c:	ee34 5a83 	vadd.f32	s10, s9, s6
 8028b40:	edd2 1a00 	vldr	s3, [r2]
 8028b44:	edd2 2a01 	vldr	s5, [r2, #4]
 8028b48:	9a02      	ldr	r2, [sp, #8]
 8028b4a:	ee73 3ae5 	vsub.f32	s7, s7, s11
 8028b4e:	ee36 6a42 	vsub.f32	s12, s12, s4
 8028b52:	ee63 4aa1 	vmul.f32	s9, s7, s3
 8028b56:	ee63 3aa2 	vmul.f32	s7, s7, s5
 8028b5a:	ee65 2a22 	vmul.f32	s5, s10, s5
 8028b5e:	ee25 5a21 	vmul.f32	s10, s10, s3
 8028b62:	ee74 2aa2 	vadd.f32	s5, s9, s5
 8028b66:	ee35 5a63 	vsub.f32	s10, s10, s7
 8028b6a:	ee76 6ae7 	vsub.f32	s13, s13, s15
 8028b6e:	edcb 2a00 	vstr	s5, [fp]
 8028b72:	ed8b 5a01 	vstr	s10, [fp, #4]
 8028b76:	edd2 3a01 	vldr	s7, [r2, #4]
 8028b7a:	ed92 5a00 	vldr	s10, [r2]
 8028b7e:	9a06      	ldr	r2, [sp, #24]
 8028b80:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8028b84:	ee36 6a65 	vsub.f32	s12, s12, s11
 8028b88:	ee66 4a85 	vmul.f32	s9, s13, s10
 8028b8c:	ee26 5a05 	vmul.f32	s10, s12, s10
 8028b90:	ee66 6aa3 	vmul.f32	s13, s13, s7
 8028b94:	ee26 6a23 	vmul.f32	s12, s12, s7
 8028b98:	ee75 6a66 	vsub.f32	s13, s10, s13
 8028b9c:	ee34 6a86 	vadd.f32	s12, s9, s12
 8028ba0:	ee34 4a42 	vsub.f32	s8, s8, s4
 8028ba4:	ee37 7a27 	vadd.f32	s14, s14, s15
 8028ba8:	edc0 6a01 	vstr	s13, [r0, #4]
 8028bac:	ed80 6a00 	vstr	s12, [r0]
 8028bb0:	ed92 6a01 	vldr	s12, [r2, #4]
 8028bb4:	9803      	ldr	r0, [sp, #12]
 8028bb6:	ee77 7a43 	vsub.f32	s15, s14, s6
 8028bba:	ee75 5a84 	vadd.f32	s11, s11, s8
 8028bbe:	ed92 7a00 	vldr	s14, [r2]
 8028bc2:	ee65 6a87 	vmul.f32	s13, s11, s14
 8028bc6:	ee27 7a87 	vmul.f32	s14, s15, s14
 8028bca:	ee65 5a86 	vmul.f32	s11, s11, s12
 8028bce:	ee67 7a86 	vmul.f32	s15, s15, s12
 8028bd2:	ee77 5a65 	vsub.f32	s11, s14, s11
 8028bd6:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8028bda:	edca 5a01 	vstr	s11, [sl, #4]
 8028bde:	edca 7a00 	vstr	s15, [sl]
 8028be2:	6872      	ldr	r2, [r6, #4]
 8028be4:	4621      	mov	r1, r4
 8028be6:	2304      	movs	r3, #4
 8028be8:	f000 f97a 	bl	8028ee0 <arm_radix8_butterfly_f32>
 8028bec:	9809      	ldr	r0, [sp, #36]	; 0x24
 8028bee:	6872      	ldr	r2, [r6, #4]
 8028bf0:	4621      	mov	r1, r4
 8028bf2:	2304      	movs	r3, #4
 8028bf4:	f000 f974 	bl	8028ee0 <arm_radix8_butterfly_f32>
 8028bf8:	980a      	ldr	r0, [sp, #40]	; 0x28
 8028bfa:	6872      	ldr	r2, [r6, #4]
 8028bfc:	4621      	mov	r1, r4
 8028bfe:	2304      	movs	r3, #4
 8028c00:	f000 f96e 	bl	8028ee0 <arm_radix8_butterfly_f32>
 8028c04:	9801      	ldr	r0, [sp, #4]
 8028c06:	6872      	ldr	r2, [r6, #4]
 8028c08:	4621      	mov	r1, r4
 8028c0a:	2304      	movs	r3, #4
 8028c0c:	b00f      	add	sp, #60	; 0x3c
 8028c0e:	ecbd 8b0a 	vpop	{d8-d12}
 8028c12:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028c16:	f000 b963 	b.w	8028ee0 <arm_radix8_butterfly_f32>
 8028c1a:	bf00      	nop

08028c1c <arm_cfft_f32>:
 8028c1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028c20:	2a01      	cmp	r2, #1
 8028c22:	4606      	mov	r6, r0
 8028c24:	4617      	mov	r7, r2
 8028c26:	460c      	mov	r4, r1
 8028c28:	4698      	mov	r8, r3
 8028c2a:	8805      	ldrh	r5, [r0, #0]
 8028c2c:	d054      	beq.n	8028cd8 <arm_cfft_f32+0xbc>
 8028c2e:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 8028c32:	d04c      	beq.n	8028cce <arm_cfft_f32+0xb2>
 8028c34:	d916      	bls.n	8028c64 <arm_cfft_f32+0x48>
 8028c36:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 8028c3a:	d01a      	beq.n	8028c72 <arm_cfft_f32+0x56>
 8028c3c:	d95c      	bls.n	8028cf8 <arm_cfft_f32+0xdc>
 8028c3e:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 8028c42:	d044      	beq.n	8028cce <arm_cfft_f32+0xb2>
 8028c44:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
 8028c48:	d105      	bne.n	8028c56 <arm_cfft_f32+0x3a>
 8028c4a:	4620      	mov	r0, r4
 8028c4c:	4629      	mov	r1, r5
 8028c4e:	6872      	ldr	r2, [r6, #4]
 8028c50:	2301      	movs	r3, #1
 8028c52:	f000 f945 	bl	8028ee0 <arm_radix8_butterfly_f32>
 8028c56:	f1b8 0f00 	cmp.w	r8, #0
 8028c5a:	d111      	bne.n	8028c80 <arm_cfft_f32+0x64>
 8028c5c:	2f01      	cmp	r7, #1
 8028c5e:	d016      	beq.n	8028c8e <arm_cfft_f32+0x72>
 8028c60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028c64:	2d20      	cmp	r5, #32
 8028c66:	d032      	beq.n	8028cce <arm_cfft_f32+0xb2>
 8028c68:	d94a      	bls.n	8028d00 <arm_cfft_f32+0xe4>
 8028c6a:	2d40      	cmp	r5, #64	; 0x40
 8028c6c:	d0ed      	beq.n	8028c4a <arm_cfft_f32+0x2e>
 8028c6e:	2d80      	cmp	r5, #128	; 0x80
 8028c70:	d1f1      	bne.n	8028c56 <arm_cfft_f32+0x3a>
 8028c72:	4630      	mov	r0, r6
 8028c74:	4621      	mov	r1, r4
 8028c76:	f7ff fca1 	bl	80285bc <arm_cfft_radix8by2_f32>
 8028c7a:	f1b8 0f00 	cmp.w	r8, #0
 8028c7e:	d0ed      	beq.n	8028c5c <arm_cfft_f32+0x40>
 8028c80:	4620      	mov	r0, r4
 8028c82:	89b1      	ldrh	r1, [r6, #12]
 8028c84:	68b2      	ldr	r2, [r6, #8]
 8028c86:	f7d7 fab3 	bl	80001f0 <arm_bitreversal_32>
 8028c8a:	2f01      	cmp	r7, #1
 8028c8c:	d1e8      	bne.n	8028c60 <arm_cfft_f32+0x44>
 8028c8e:	ee07 5a90 	vmov	s15, r5
 8028c92:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8028c96:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8028c9a:	eec7 6aa6 	vdiv.f32	s13, s15, s13
 8028c9e:	2d00      	cmp	r5, #0
 8028ca0:	d0de      	beq.n	8028c60 <arm_cfft_f32+0x44>
 8028ca2:	f104 0108 	add.w	r1, r4, #8
 8028ca6:	2300      	movs	r3, #0
 8028ca8:	3301      	adds	r3, #1
 8028caa:	429d      	cmp	r5, r3
 8028cac:	f101 0108 	add.w	r1, r1, #8
 8028cb0:	ed11 7a04 	vldr	s14, [r1, #-16]
 8028cb4:	ed51 7a03 	vldr	s15, [r1, #-12]
 8028cb8:	ee27 7a26 	vmul.f32	s14, s14, s13
 8028cbc:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8028cc0:	ed01 7a04 	vstr	s14, [r1, #-16]
 8028cc4:	ed41 7a03 	vstr	s15, [r1, #-12]
 8028cc8:	d1ee      	bne.n	8028ca8 <arm_cfft_f32+0x8c>
 8028cca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028cce:	4630      	mov	r0, r6
 8028cd0:	4621      	mov	r1, r4
 8028cd2:	f7ff fd45 	bl	8028760 <arm_cfft_radix8by4_f32>
 8028cd6:	e7be      	b.n	8028c56 <arm_cfft_f32+0x3a>
 8028cd8:	b1ad      	cbz	r5, 8028d06 <arm_cfft_f32+0xea>
 8028cda:	f101 030c 	add.w	r3, r1, #12
 8028cde:	2200      	movs	r2, #0
 8028ce0:	ed53 7a02 	vldr	s15, [r3, #-8]
 8028ce4:	3201      	adds	r2, #1
 8028ce6:	eef1 7a67 	vneg.f32	s15, s15
 8028cea:	4295      	cmp	r5, r2
 8028cec:	ed43 7a02 	vstr	s15, [r3, #-8]
 8028cf0:	f103 0308 	add.w	r3, r3, #8
 8028cf4:	d1f4      	bne.n	8028ce0 <arm_cfft_f32+0xc4>
 8028cf6:	e79a      	b.n	8028c2e <arm_cfft_f32+0x12>
 8028cf8:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 8028cfc:	d0a5      	beq.n	8028c4a <arm_cfft_f32+0x2e>
 8028cfe:	e7aa      	b.n	8028c56 <arm_cfft_f32+0x3a>
 8028d00:	2d10      	cmp	r5, #16
 8028d02:	d0b6      	beq.n	8028c72 <arm_cfft_f32+0x56>
 8028d04:	e7a7      	b.n	8028c56 <arm_cfft_f32+0x3a>
 8028d06:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 8028d0a:	d894      	bhi.n	8028c36 <arm_cfft_f32+0x1a>
 8028d0c:	e7aa      	b.n	8028c64 <arm_cfft_f32+0x48>
 8028d0e:	bf00      	nop

08028d10 <arm_cmplx_mag_f32>:
 8028d10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028d14:	ea5f 0892 	movs.w	r8, r2, lsr #2
 8028d18:	b084      	sub	sp, #16
 8028d1a:	d07f      	beq.n	8028e1c <arm_cmplx_mag_f32+0x10c>
 8028d1c:	2700      	movs	r7, #0
 8028d1e:	f100 0420 	add.w	r4, r0, #32
 8028d22:	f101 0510 	add.w	r5, r1, #16
 8028d26:	4646      	mov	r6, r8
 8028d28:	e05a      	b.n	8028de0 <arm_cmplx_mag_f32+0xd0>
 8028d2a:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8028d2e:	eeb4 0a40 	vcmp.f32	s0, s0
 8028d32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028d36:	f040 80a4 	bne.w	8028e82 <arm_cmplx_mag_f32+0x172>
 8028d3a:	ed05 0a04 	vstr	s0, [r5, #-16]
 8028d3e:	ed54 7a06 	vldr	s15, [r4, #-24]	; 0xffffffe8
 8028d42:	ed14 0a05 	vldr	s0, [r4, #-20]	; 0xffffffec
 8028d46:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8028d4a:	ee20 0a00 	vmul.f32	s0, s0, s0
 8028d4e:	ee77 7a80 	vadd.f32	s15, s15, s0
 8028d52:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8028d56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028d5a:	f2c0 808f 	blt.w	8028e7c <arm_cmplx_mag_f32+0x16c>
 8028d5e:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8028d62:	eeb4 0a40 	vcmp.f32	s0, s0
 8028d66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028d6a:	f040 80af 	bne.w	8028ecc <arm_cmplx_mag_f32+0x1bc>
 8028d6e:	ed05 0a03 	vstr	s0, [r5, #-12]
 8028d72:	ed54 7a04 	vldr	s15, [r4, #-16]
 8028d76:	ed14 0a03 	vldr	s0, [r4, #-12]
 8028d7a:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8028d7e:	ee20 0a00 	vmul.f32	s0, s0, s0
 8028d82:	ee77 7a80 	vadd.f32	s15, s15, s0
 8028d86:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8028d8a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028d8e:	db72      	blt.n	8028e76 <arm_cmplx_mag_f32+0x166>
 8028d90:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8028d94:	eeb4 0a40 	vcmp.f32	s0, s0
 8028d98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028d9c:	f040 808c 	bne.w	8028eb8 <arm_cmplx_mag_f32+0x1a8>
 8028da0:	ed05 0a02 	vstr	s0, [r5, #-8]
 8028da4:	ed54 7a02 	vldr	s15, [r4, #-8]
 8028da8:	ed14 0a01 	vldr	s0, [r4, #-4]
 8028dac:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8028db0:	ee20 0a00 	vmul.f32	s0, s0, s0
 8028db4:	ee77 7a80 	vadd.f32	s15, s15, s0
 8028db8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8028dbc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028dc0:	db20      	blt.n	8028e04 <arm_cmplx_mag_f32+0xf4>
 8028dc2:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8028dc6:	eeb4 0a40 	vcmp.f32	s0, s0
 8028dca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028dce:	d169      	bne.n	8028ea4 <arm_cmplx_mag_f32+0x194>
 8028dd0:	3e01      	subs	r6, #1
 8028dd2:	ed05 0a01 	vstr	s0, [r5, #-4]
 8028dd6:	f104 0420 	add.w	r4, r4, #32
 8028dda:	f105 0510 	add.w	r5, r5, #16
 8028dde:	d019      	beq.n	8028e14 <arm_cmplx_mag_f32+0x104>
 8028de0:	ed54 7a08 	vldr	s15, [r4, #-32]	; 0xffffffe0
 8028de4:	ed14 0a07 	vldr	s0, [r4, #-28]	; 0xffffffe4
 8028de8:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8028dec:	ee20 0a00 	vmul.f32	s0, s0, s0
 8028df0:	ee77 7a80 	vadd.f32	s15, s15, s0
 8028df4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8028df8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028dfc:	da95      	bge.n	8028d2a <arm_cmplx_mag_f32+0x1a>
 8028dfe:	f845 7c10 	str.w	r7, [r5, #-16]
 8028e02:	e79c      	b.n	8028d3e <arm_cmplx_mag_f32+0x2e>
 8028e04:	3e01      	subs	r6, #1
 8028e06:	f845 7c04 	str.w	r7, [r5, #-4]
 8028e0a:	f104 0420 	add.w	r4, r4, #32
 8028e0e:	f105 0510 	add.w	r5, r5, #16
 8028e12:	d1e5      	bne.n	8028de0 <arm_cmplx_mag_f32+0xd0>
 8028e14:	eb00 1048 	add.w	r0, r0, r8, lsl #5
 8028e18:	eb01 1108 	add.w	r1, r1, r8, lsl #4
 8028e1c:	f012 0503 	ands.w	r5, r2, #3
 8028e20:	d026      	beq.n	8028e70 <arm_cmplx_mag_f32+0x160>
 8028e22:	2600      	movs	r6, #0
 8028e24:	f100 0408 	add.w	r4, r0, #8
 8028e28:	e00c      	b.n	8028e44 <arm_cmplx_mag_f32+0x134>
 8028e2a:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8028e2e:	eeb4 0a40 	vcmp.f32	s0, s0
 8028e32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028e36:	d12e      	bne.n	8028e96 <arm_cmplx_mag_f32+0x186>
 8028e38:	3d01      	subs	r5, #1
 8028e3a:	ed01 0a01 	vstr	s0, [r1, #-4]
 8028e3e:	f104 0408 	add.w	r4, r4, #8
 8028e42:	d015      	beq.n	8028e70 <arm_cmplx_mag_f32+0x160>
 8028e44:	ed54 7a02 	vldr	s15, [r4, #-8]
 8028e48:	ed14 0a01 	vldr	s0, [r4, #-4]
 8028e4c:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8028e50:	ee20 0a00 	vmul.f32	s0, s0, s0
 8028e54:	3104      	adds	r1, #4
 8028e56:	ee77 7a80 	vadd.f32	s15, s15, s0
 8028e5a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8028e5e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028e62:	dae2      	bge.n	8028e2a <arm_cmplx_mag_f32+0x11a>
 8028e64:	3d01      	subs	r5, #1
 8028e66:	f841 6c04 	str.w	r6, [r1, #-4]
 8028e6a:	f104 0408 	add.w	r4, r4, #8
 8028e6e:	d1e9      	bne.n	8028e44 <arm_cmplx_mag_f32+0x134>
 8028e70:	b004      	add	sp, #16
 8028e72:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028e76:	f845 7c08 	str.w	r7, [r5, #-8]
 8028e7a:	e793      	b.n	8028da4 <arm_cmplx_mag_f32+0x94>
 8028e7c:	f845 7c0c 	str.w	r7, [r5, #-12]
 8028e80:	e777      	b.n	8028d72 <arm_cmplx_mag_f32+0x62>
 8028e82:	eeb0 0a67 	vmov.f32	s0, s15
 8028e86:	9203      	str	r2, [sp, #12]
 8028e88:	9102      	str	r1, [sp, #8]
 8028e8a:	9001      	str	r0, [sp, #4]
 8028e8c:	f000 fb38 	bl	8029500 <sqrtf>
 8028e90:	a801      	add	r0, sp, #4
 8028e92:	c807      	ldmia	r0, {r0, r1, r2}
 8028e94:	e751      	b.n	8028d3a <arm_cmplx_mag_f32+0x2a>
 8028e96:	eeb0 0a67 	vmov.f32	s0, s15
 8028e9a:	9101      	str	r1, [sp, #4]
 8028e9c:	f000 fb30 	bl	8029500 <sqrtf>
 8028ea0:	9901      	ldr	r1, [sp, #4]
 8028ea2:	e7c9      	b.n	8028e38 <arm_cmplx_mag_f32+0x128>
 8028ea4:	eeb0 0a67 	vmov.f32	s0, s15
 8028ea8:	9203      	str	r2, [sp, #12]
 8028eaa:	9102      	str	r1, [sp, #8]
 8028eac:	9001      	str	r0, [sp, #4]
 8028eae:	f000 fb27 	bl	8029500 <sqrtf>
 8028eb2:	a801      	add	r0, sp, #4
 8028eb4:	c807      	ldmia	r0, {r0, r1, r2}
 8028eb6:	e78b      	b.n	8028dd0 <arm_cmplx_mag_f32+0xc0>
 8028eb8:	eeb0 0a67 	vmov.f32	s0, s15
 8028ebc:	9203      	str	r2, [sp, #12]
 8028ebe:	9102      	str	r1, [sp, #8]
 8028ec0:	9001      	str	r0, [sp, #4]
 8028ec2:	f000 fb1d 	bl	8029500 <sqrtf>
 8028ec6:	a801      	add	r0, sp, #4
 8028ec8:	c807      	ldmia	r0, {r0, r1, r2}
 8028eca:	e769      	b.n	8028da0 <arm_cmplx_mag_f32+0x90>
 8028ecc:	eeb0 0a67 	vmov.f32	s0, s15
 8028ed0:	9203      	str	r2, [sp, #12]
 8028ed2:	9102      	str	r1, [sp, #8]
 8028ed4:	9001      	str	r0, [sp, #4]
 8028ed6:	f000 fb13 	bl	8029500 <sqrtf>
 8028eda:	a801      	add	r0, sp, #4
 8028edc:	c807      	ldmia	r0, {r0, r1, r2}
 8028ede:	e746      	b.n	8028d6e <arm_cmplx_mag_f32+0x5e>

08028ee0 <arm_radix8_butterfly_f32>:
 8028ee0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028ee4:	ed2d 8b10 	vpush	{d8-d15}
 8028ee8:	b09d      	sub	sp, #116	; 0x74
 8028eea:	461c      	mov	r4, r3
 8028eec:	ed9f bac8 	vldr	s22, [pc, #800]	; 8029210 <arm_radix8_butterfly_f32+0x330>
 8028ef0:	921a      	str	r2, [sp, #104]	; 0x68
 8028ef2:	1d03      	adds	r3, r0, #4
 8028ef4:	4682      	mov	sl, r0
 8028ef6:	4689      	mov	r9, r1
 8028ef8:	468b      	mov	fp, r1
 8028efa:	931b      	str	r3, [sp, #108]	; 0x6c
 8028efc:	9400      	str	r4, [sp, #0]
 8028efe:	469e      	mov	lr, r3
 8028f00:	ea4f 03db 	mov.w	r3, fp, lsr #3
 8028f04:	005a      	lsls	r2, r3, #1
 8028f06:	18d6      	adds	r6, r2, r3
 8028f08:	18f5      	adds	r5, r6, r3
 8028f0a:	9203      	str	r2, [sp, #12]
 8028f0c:	195a      	adds	r2, r3, r5
 8028f0e:	18d0      	adds	r0, r2, r3
 8028f10:	00df      	lsls	r7, r3, #3
 8028f12:	1819      	adds	r1, r3, r0
 8028f14:	463c      	mov	r4, r7
 8028f16:	9701      	str	r7, [sp, #4]
 8028f18:	4457      	add	r7, sl
 8028f1a:	930c      	str	r3, [sp, #48]	; 0x30
 8028f1c:	eb0a 02c2 	add.w	r2, sl, r2, lsl #3
 8028f20:	011b      	lsls	r3, r3, #4
 8028f22:	eb0a 01c1 	add.w	r1, sl, r1, lsl #3
 8028f26:	eb07 0c04 	add.w	ip, r7, r4
 8028f2a:	9c00      	ldr	r4, [sp, #0]
 8028f2c:	9302      	str	r3, [sp, #8]
 8028f2e:	eb0a 06c6 	add.w	r6, sl, r6, lsl #3
 8028f32:	eb0a 05c5 	add.w	r5, sl, r5, lsl #3
 8028f36:	3204      	adds	r2, #4
 8028f38:	3104      	adds	r1, #4
 8028f3a:	eb0a 00c0 	add.w	r0, sl, r0, lsl #3
 8028f3e:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8028f42:	f04f 0800 	mov.w	r8, #0
 8028f46:	eddc 7a00 	vldr	s15, [ip]
 8028f4a:	edd7 6a00 	vldr	s13, [r7]
 8028f4e:	edd6 3a00 	vldr	s7, [r6]
 8028f52:	ed5e aa01 	vldr	s21, [lr, #-4]
 8028f56:	edd5 4a00 	vldr	s9, [r5]
 8028f5a:	ed90 2a00 	vldr	s4, [r0]
 8028f5e:	ed12 7a01 	vldr	s14, [r2, #-4]
 8028f62:	ed51 0a01 	vldr	s1, [r1, #-4]
 8028f66:	ee77 8a82 	vadd.f32	s17, s15, s4
 8028f6a:	ee33 4aa0 	vadd.f32	s8, s7, s1
 8028f6e:	ee76 1a87 	vadd.f32	s3, s13, s14
 8028f72:	ee3a 3aa4 	vadd.f32	s6, s21, s9
 8028f76:	ee31 6a84 	vadd.f32	s12, s3, s8
 8028f7a:	ee33 5a28 	vadd.f32	s10, s6, s17
 8028f7e:	ee36 7ac7 	vsub.f32	s14, s13, s14
 8028f82:	ee75 6a06 	vadd.f32	s13, s10, s12
 8028f86:	ee35 5a46 	vsub.f32	s10, s10, s12
 8028f8a:	ed4e 6a01 	vstr	s13, [lr, #-4]
 8028f8e:	ed85 5a00 	vstr	s10, [r5]
 8028f92:	ed96 1a01 	vldr	s2, [r6, #4]
 8028f96:	edd7 5a01 	vldr	s11, [r7, #4]
 8028f9a:	ed92 aa00 	vldr	s20, [r2]
 8028f9e:	ed91 6a00 	vldr	s12, [r1]
 8028fa2:	ed9e 9a00 	vldr	s18, [lr]
 8028fa6:	ed95 5a01 	vldr	s10, [r5, #4]
 8028faa:	eddc 6a01 	vldr	s13, [ip, #4]
 8028fae:	edd0 9a01 	vldr	s19, [r0, #4]
 8028fb2:	ee73 0ae0 	vsub.f32	s1, s7, s1
 8028fb6:	ee71 2a46 	vsub.f32	s5, s2, s12
 8028fba:	ee75 3aca 	vsub.f32	s7, s11, s20
 8028fbe:	ee37 0a60 	vsub.f32	s0, s14, s1
 8028fc2:	ee33 8aa2 	vadd.f32	s16, s7, s5
 8028fc6:	ee37 7a20 	vadd.f32	s14, s14, s1
 8028fca:	ee73 2ae2 	vsub.f32	s5, s7, s5
 8028fce:	ee37 2ac2 	vsub.f32	s4, s15, s4
 8028fd2:	ee79 3a05 	vadd.f32	s7, s18, s10
 8028fd6:	ee60 0a0b 	vmul.f32	s1, s0, s22
 8028fda:	ee39 5a45 	vsub.f32	s10, s18, s10
 8028fde:	ee7a 4ae4 	vsub.f32	s9, s21, s9
 8028fe2:	ee36 9aa9 	vadd.f32	s18, s13, s19
 8028fe6:	ee75 5a8a 	vadd.f32	s11, s11, s20
 8028fea:	ee31 6a06 	vadd.f32	s12, s2, s12
 8028fee:	ee76 6ae9 	vsub.f32	s13, s13, s19
 8028ff2:	ee28 8a0b 	vmul.f32	s16, s16, s22
 8028ff6:	ee62 2a8b 	vmul.f32	s5, s5, s22
 8028ffa:	ee67 7a0b 	vmul.f32	s15, s14, s22
 8028ffe:	ee33 3a68 	vsub.f32	s6, s6, s17
 8029002:	ee36 0a88 	vadd.f32	s0, s13, s16
 8029006:	ee75 8a86 	vadd.f32	s17, s11, s12
 802900a:	ee36 7ac8 	vsub.f32	s14, s13, s16
 802900e:	ee71 1ac4 	vsub.f32	s3, s3, s8
 8029012:	ee75 6a62 	vsub.f32	s13, s10, s5
 8029016:	ee33 4ac9 	vsub.f32	s8, s7, s18
 802901a:	ee35 6ac6 	vsub.f32	s12, s11, s12
 802901e:	ee33 1a89 	vadd.f32	s2, s7, s18
 8029022:	ee74 5ae0 	vsub.f32	s11, s9, s1
 8029026:	ee74 3aa0 	vadd.f32	s7, s9, s1
 802902a:	ee75 4a22 	vadd.f32	s9, s10, s5
 802902e:	ee32 5a27 	vadd.f32	s10, s4, s15
 8029032:	ee72 7a67 	vsub.f32	s15, s4, s15
 8029036:	ee33 8a06 	vadd.f32	s16, s6, s12
 802903a:	ee75 2a87 	vadd.f32	s5, s11, s14
 802903e:	ee31 9a28 	vadd.f32	s18, s2, s17
 8029042:	ee33 6a46 	vsub.f32	s12, s6, s12
 8029046:	ee74 0a61 	vsub.f32	s1, s8, s3
 802904a:	ee33 2a80 	vadd.f32	s4, s7, s0
 802904e:	ee35 7ac7 	vsub.f32	s14, s11, s14
 8029052:	ee34 3ac5 	vsub.f32	s6, s9, s10
 8029056:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802905a:	ee31 1a68 	vsub.f32	s2, s2, s17
 802905e:	ee34 4a21 	vadd.f32	s8, s8, s3
 8029062:	ee73 3ac0 	vsub.f32	s7, s7, s0
 8029066:	ee74 4a85 	vadd.f32	s9, s9, s10
 802906a:	ee76 6aa7 	vadd.f32	s13, s13, s15
 802906e:	44d8      	add	r8, fp
 8029070:	45c1      	cmp	r9, r8
 8029072:	ed8e 9a00 	vstr	s18, [lr]
 8029076:	ed85 1a01 	vstr	s2, [r5, #4]
 802907a:	449e      	add	lr, r3
 802907c:	ed8c 8a00 	vstr	s16, [ip]
 8029080:	441d      	add	r5, r3
 8029082:	ed80 6a00 	vstr	s12, [r0]
 8029086:	edcc 0a01 	vstr	s1, [ip, #4]
 802908a:	ed80 4a01 	vstr	s8, [r0, #4]
 802908e:	449c      	add	ip, r3
 8029090:	ed87 2a00 	vstr	s4, [r7]
 8029094:	4418      	add	r0, r3
 8029096:	ed41 3a01 	vstr	s7, [r1, #-4]
 802909a:	ed42 2a01 	vstr	s5, [r2, #-4]
 802909e:	ed86 7a00 	vstr	s14, [r6]
 80290a2:	ed87 3a01 	vstr	s6, [r7, #4]
 80290a6:	edc1 4a00 	vstr	s9, [r1]
 80290aa:	441f      	add	r7, r3
 80290ac:	edc2 5a00 	vstr	s11, [r2]
 80290b0:	4419      	add	r1, r3
 80290b2:	edc6 6a01 	vstr	s13, [r6, #4]
 80290b6:	441a      	add	r2, r3
 80290b8:	441e      	add	r6, r3
 80290ba:	f63f af44 	bhi.w	8028f46 <arm_radix8_butterfly_f32+0x66>
 80290be:	990c      	ldr	r1, [sp, #48]	; 0x30
 80290c0:	2907      	cmp	r1, #7
 80290c2:	4620      	mov	r0, r4
 80290c4:	f240 81e9 	bls.w	802949a <arm_radix8_butterfly_f32+0x5ba>
 80290c8:	eb04 0744 	add.w	r7, r4, r4, lsl #1
 80290cc:	193e      	adds	r6, r7, r4
 80290ce:	1935      	adds	r5, r6, r4
 80290d0:	9c03      	ldr	r4, [sp, #12]
 80290d2:	9000      	str	r0, [sp, #0]
 80290d4:	4622      	mov	r2, r4
 80290d6:	3201      	adds	r2, #1
 80290d8:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 80290dc:	9900      	ldr	r1, [sp, #0]
 80290de:	1828      	adds	r0, r5, r0
 80290e0:	eb00 0e01 	add.w	lr, r0, r1
 80290e4:	990c      	ldr	r1, [sp, #48]	; 0x30
 80290e6:	440a      	add	r2, r1
 80290e8:	eb04 0c01 	add.w	ip, r4, r1
 80290ec:	ea4f 04ce 	mov.w	r4, lr, lsl #3
 80290f0:	eb0a 0ec2 	add.w	lr, sl, r2, lsl #3
 80290f4:	9a00      	ldr	r2, [sp, #0]
 80290f6:	940f      	str	r4, [sp, #60]	; 0x3c
 80290f8:	00ed      	lsls	r5, r5, #3
 80290fa:	9511      	str	r5, [sp, #68]	; 0x44
 80290fc:	00d5      	lsls	r5, r2, #3
 80290fe:	950d      	str	r5, [sp, #52]	; 0x34
 8029100:	9d01      	ldr	r5, [sp, #4]
 8029102:	3508      	adds	r5, #8
 8029104:	9516      	str	r5, [sp, #88]	; 0x58
 8029106:	9d02      	ldr	r5, [sp, #8]
 8029108:	3508      	adds	r5, #8
 802910a:	0114      	lsls	r4, r2, #4
 802910c:	9517      	str	r5, [sp, #92]	; 0x5c
 802910e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8029110:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8029112:	940e      	str	r4, [sp, #56]	; 0x38
 8029114:	00c0      	lsls	r0, r0, #3
 8029116:	9010      	str	r0, [sp, #64]	; 0x40
 8029118:	18aa      	adds	r2, r5, r2
 802911a:	9207      	str	r2, [sp, #28]
 802911c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802911e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8029120:	18aa      	adds	r2, r5, r2
 8029122:	9208      	str	r2, [sp, #32]
 8029124:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8029126:	18aa      	adds	r2, r5, r2
 8029128:	9209      	str	r2, [sp, #36]	; 0x24
 802912a:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 802912e:	f10e 0204 	add.w	r2, lr, #4
 8029132:	920a      	str	r2, [sp, #40]	; 0x28
 8029134:	00c9      	lsls	r1, r1, #3
 8029136:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8029138:	310c      	adds	r1, #12
 802913a:	00f6      	lsls	r6, r6, #3
 802913c:	ea4f 00cc 	mov.w	r0, ip, lsl #3
 8029140:	9114      	str	r1, [sp, #80]	; 0x50
 8029142:	18a9      	adds	r1, r5, r2
 8029144:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8029146:	9612      	str	r6, [sp, #72]	; 0x48
 8029148:	00ff      	lsls	r7, r7, #3
 802914a:	19ae      	adds	r6, r5, r6
 802914c:	3008      	adds	r0, #8
 802914e:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 8029152:	9606      	str	r6, [sp, #24]
 8029154:	9019      	str	r0, [sp, #100]	; 0x64
 8029156:	18aa      	adds	r2, r5, r2
 8029158:	0164      	lsls	r4, r4, #5
 802915a:	19ee      	adds	r6, r5, r7
 802915c:	f10c 000c 	add.w	r0, ip, #12
 8029160:	9713      	str	r7, [sp, #76]	; 0x4c
 8029162:	9604      	str	r6, [sp, #16]
 8029164:	9015      	str	r0, [sp, #84]	; 0x54
 8029166:	9103      	str	r1, [sp, #12]
 8029168:	9205      	str	r2, [sp, #20]
 802916a:	f104 0208 	add.w	r2, r4, #8
 802916e:	9218      	str	r2, [sp, #96]	; 0x60
 8029170:	f04f 0801 	mov.w	r8, #1
 8029174:	2200      	movs	r2, #0
 8029176:	f102 0108 	add.w	r1, r2, #8
 802917a:	460f      	mov	r7, r1
 802917c:	910b      	str	r1, [sp, #44]	; 0x2c
 802917e:	9918      	ldr	r1, [sp, #96]	; 0x60
 8029180:	188e      	adds	r6, r1, r2
 8029182:	9916      	ldr	r1, [sp, #88]	; 0x58
 8029184:	188d      	adds	r5, r1, r2
 8029186:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8029188:	188c      	adds	r4, r1, r2
 802918a:	9919      	ldr	r1, [sp, #100]	; 0x64
 802918c:	1888      	adds	r0, r1, r2
 802918e:	9914      	ldr	r1, [sp, #80]	; 0x50
 8029190:	eb01 0c02 	add.w	ip, r1, r2
 8029194:	9915      	ldr	r1, [sp, #84]	; 0x54
 8029196:	440a      	add	r2, r1
 8029198:	9903      	ldr	r1, [sp, #12]
 802919a:	edd1 fa00 	vldr	s31, [r1]
 802919e:	9905      	ldr	r1, [sp, #20]
 80291a0:	ed91 fa00 	vldr	s30, [r1]
 80291a4:	9904      	ldr	r1, [sp, #16]
 80291a6:	edd1 ea00 	vldr	s29, [r1]
 80291aa:	9906      	ldr	r1, [sp, #24]
 80291ac:	ed91 ea00 	vldr	s28, [r1]
 80291b0:	9909      	ldr	r1, [sp, #36]	; 0x24
 80291b2:	edd1 da00 	vldr	s27, [r1]
 80291b6:	9908      	ldr	r1, [sp, #32]
 80291b8:	ed91 da00 	vldr	s26, [r1]
 80291bc:	9907      	ldr	r1, [sp, #28]
 80291be:	edd1 ca00 	vldr	s25, [r1]
 80291c2:	9903      	ldr	r1, [sp, #12]
 80291c4:	ed91 ca01 	vldr	s24, [r1, #4]
 80291c8:	9905      	ldr	r1, [sp, #20]
 80291ca:	edd1 ba01 	vldr	s23, [r1, #4]
 80291ce:	9904      	ldr	r1, [sp, #16]
 80291d0:	edd1 aa01 	vldr	s21, [r1, #4]
 80291d4:	9906      	ldr	r1, [sp, #24]
 80291d6:	ed91 aa01 	vldr	s20, [r1, #4]
 80291da:	9909      	ldr	r1, [sp, #36]	; 0x24
 80291dc:	edd1 7a01 	vldr	s15, [r1, #4]
 80291e0:	9908      	ldr	r1, [sp, #32]
 80291e2:	edcd 7a00 	vstr	s15, [sp]
 80291e6:	edd1 7a01 	vldr	s15, [r1, #4]
 80291ea:	9907      	ldr	r1, [sp, #28]
 80291ec:	edcd 7a01 	vstr	s15, [sp, #4]
 80291f0:	edd1 7a01 	vldr	s15, [r1, #4]
 80291f4:	eb0a 0e07 	add.w	lr, sl, r7
 80291f8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80291fa:	edcd 7a02 	vstr	s15, [sp, #8]
 80291fe:	eb0c 010a 	add.w	r1, ip, sl
 8029202:	4456      	add	r6, sl
 8029204:	4455      	add	r5, sl
 8029206:	4454      	add	r4, sl
 8029208:	4450      	add	r0, sl
 802920a:	4452      	add	r2, sl
 802920c:	46c4      	mov	ip, r8
 802920e:	e001      	b.n	8029214 <arm_radix8_butterfly_f32+0x334>
 8029210:	3f3504f3 	.word	0x3f3504f3
 8029214:	ed96 5a00 	vldr	s10, [r6]
 8029218:	ed52 9a01 	vldr	s19, [r2, #-4]
 802921c:	ed11 6a01 	vldr	s12, [r1, #-4]
 8029220:	edd0 7a00 	vldr	s15, [r0]
 8029224:	ed17 7a01 	vldr	s14, [r7, #-4]
 8029228:	edde 3a00 	vldr	s7, [lr]
 802922c:	ed94 3a00 	vldr	s6, [r4]
 8029230:	ed95 2a00 	vldr	s4, [r5]
 8029234:	ed9e 0a01 	vldr	s0, [lr, #4]
 8029238:	ee33 8a85 	vadd.f32	s16, s7, s10
 802923c:	ee32 1a06 	vadd.f32	s2, s4, s12
 8029240:	ee33 4a29 	vadd.f32	s8, s6, s19
 8029244:	ee77 4a87 	vadd.f32	s9, s15, s14
 8029248:	ee78 1a04 	vadd.f32	s3, s16, s8
 802924c:	ee71 6a24 	vadd.f32	s13, s2, s9
 8029250:	ee32 2a46 	vsub.f32	s4, s4, s12
 8029254:	ee31 6aa6 	vadd.f32	s12, s3, s13
 8029258:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802925c:	ed8e 6a00 	vstr	s12, [lr]
 8029260:	edd0 8a01 	vldr	s17, [r0, #4]
 8029264:	ed95 9a01 	vldr	s18, [r5, #4]
 8029268:	edd1 2a00 	vldr	s5, [r1]
 802926c:	ed97 7a00 	vldr	s14, [r7]
 8029270:	edd4 0a01 	vldr	s1, [r4, #4]
 8029274:	ed96 6a01 	vldr	s12, [r6, #4]
 8029278:	edd2 5a00 	vldr	s11, [r2]
 802927c:	ee73 3ac5 	vsub.f32	s7, s7, s10
 8029280:	ee33 3a69 	vsub.f32	s6, s6, s19
 8029284:	ee39 5a62 	vsub.f32	s10, s18, s5
 8029288:	ee78 9ac7 	vsub.f32	s19, s17, s14
 802928c:	ee38 4a44 	vsub.f32	s8, s16, s8
 8029290:	ee38 7a87 	vadd.f32	s14, s17, s14
 8029294:	ee30 8aa5 	vadd.f32	s16, s1, s11
 8029298:	ee79 2a22 	vadd.f32	s5, s18, s5
 802929c:	ee75 8a69 	vsub.f32	s17, s10, s19
 80292a0:	ee32 9a27 	vadd.f32	s18, s4, s15
 80292a4:	ee35 5a29 	vadd.f32	s10, s10, s19
 80292a8:	ee72 7a67 	vsub.f32	s15, s4, s15
 80292ac:	ee30 2a06 	vadd.f32	s4, s0, s12
 80292b0:	ee69 9a0b 	vmul.f32	s19, s18, s22
 80292b4:	ee70 5ae5 	vsub.f32	s11, s1, s11
 80292b8:	ee32 9a08 	vadd.f32	s18, s4, s16
 80292bc:	ee68 8a8b 	vmul.f32	s17, s17, s22
 80292c0:	ee32 2a48 	vsub.f32	s4, s4, s16
 80292c4:	ee71 4a64 	vsub.f32	s9, s2, s9
 80292c8:	ee25 5a0b 	vmul.f32	s10, s10, s22
 80292cc:	ee32 1a87 	vadd.f32	s2, s5, s14
 80292d0:	ee67 7a8b 	vmul.f32	s15, s15, s22
 80292d4:	ee72 2ac7 	vsub.f32	s5, s5, s14
 80292d8:	ee30 6a46 	vsub.f32	s12, s0, s12
 80292dc:	ee73 0a29 	vadd.f32	s1, s6, s19
 80292e0:	ee36 0a28 	vadd.f32	s0, s12, s17
 80292e4:	ee33 3a69 	vsub.f32	s6, s6, s19
 80292e8:	ee32 7a64 	vsub.f32	s14, s4, s9
 80292ec:	ee73 9aa7 	vadd.f32	s19, s7, s15
 80292f0:	ee36 6a68 	vsub.f32	s12, s12, s17
 80292f4:	ee73 7ae7 	vsub.f32	s15, s7, s15
 80292f8:	ee75 8a85 	vadd.f32	s17, s11, s10
 80292fc:	ee74 3a22 	vadd.f32	s7, s8, s5
 8029300:	ee35 5ac5 	vsub.f32	s10, s11, s10
 8029304:	ee71 6ae6 	vsub.f32	s13, s3, s13
 8029308:	ee79 1a41 	vsub.f32	s3, s18, s2
 802930c:	ee39 8aa8 	vadd.f32	s16, s19, s17
 8029310:	ee76 5a43 	vsub.f32	s11, s12, s6
 8029314:	ee74 2a62 	vsub.f32	s5, s8, s5
 8029318:	ee72 4a24 	vadd.f32	s9, s4, s9
 802931c:	ee30 4a60 	vsub.f32	s8, s0, s1
 8029320:	ee79 8ae8 	vsub.f32	s17, s19, s17
 8029324:	ee30 0a20 	vadd.f32	s0, s0, s1
 8029328:	ee77 9a85 	vadd.f32	s19, s15, s10
 802932c:	ee36 6a03 	vadd.f32	s12, s12, s6
 8029330:	ee77 7ac5 	vsub.f32	s15, s15, s10
 8029334:	ee2e 2a21 	vmul.f32	s4, s28, s3
 8029338:	ee2e 5a26 	vmul.f32	s10, s28, s13
 802933c:	ee6f 0a23 	vmul.f32	s1, s30, s7
 8029340:	ee2a 3a21 	vmul.f32	s6, s20, s3
 8029344:	ee39 1a01 	vadd.f32	s2, s18, s2
 8029348:	ee6a 6a26 	vmul.f32	s13, s20, s13
 802934c:	ee2b 9a87 	vmul.f32	s18, s23, s14
 8029350:	ee6b 3aa3 	vmul.f32	s7, s23, s7
 8029354:	ee2f 7a07 	vmul.f32	s14, s30, s14
 8029358:	ee6f 1a84 	vmul.f32	s3, s31, s8
 802935c:	ee35 3a03 	vadd.f32	s6, s10, s6
 8029360:	ee72 6a66 	vsub.f32	s13, s4, s13
 8029364:	ee2c 5a04 	vmul.f32	s10, s24, s8
 8029368:	ee2f 2a88 	vmul.f32	s4, s31, s16
 802936c:	ed9d 4a02 	vldr	s8, [sp, #8]
 8029370:	ed8e 1a01 	vstr	s2, [lr, #4]
 8029374:	ee77 3a63 	vsub.f32	s7, s14, s7
 8029378:	ee2c 8a08 	vmul.f32	s16, s24, s16
 802937c:	ed9d 7a01 	vldr	s14, [sp, #4]
 8029380:	ed86 3a00 	vstr	s6, [r6]
 8029384:	ee30 9a89 	vadd.f32	s18, s1, s18
 8029388:	ee32 2a05 	vadd.f32	s4, s4, s10
 802938c:	ee6d 0a22 	vmul.f32	s1, s26, s5
 8029390:	ee31 8ac8 	vsub.f32	s16, s3, s16
 8029394:	ee67 2a22 	vmul.f32	s5, s14, s5
 8029398:	ee64 1a00 	vmul.f32	s3, s8, s0
 802939c:	ee27 7a24 	vmul.f32	s14, s14, s9
 80293a0:	ee2c 5aa8 	vmul.f32	s10, s25, s17
 80293a4:	ee6d 4a24 	vmul.f32	s9, s26, s9
 80293a8:	ee64 8a28 	vmul.f32	s17, s8, s17
 80293ac:	ed9d 4a00 	vldr	s8, [sp]
 80293b0:	edc6 6a01 	vstr	s13, [r6, #4]
 80293b4:	ee74 2ae2 	vsub.f32	s5, s9, s5
 80293b8:	ee6d 4aa9 	vmul.f32	s9, s27, s19
 80293bc:	ee64 9a29 	vmul.f32	s19, s8, s19
 80293c0:	ee24 4a25 	vmul.f32	s8, s8, s11
 80293c4:	ee30 7a87 	vadd.f32	s14, s1, s14
 80293c8:	ee74 4a84 	vadd.f32	s9, s9, s8
 80293cc:	ee6e 0aa7 	vmul.f32	s1, s29, s15
 80293d0:	ee2a 4a86 	vmul.f32	s8, s21, s12
 80293d4:	ee2c 0a80 	vmul.f32	s0, s25, s0
 80293d8:	ee6d 5aa5 	vmul.f32	s11, s27, s11
 80293dc:	ee6a 7aa7 	vmul.f32	s15, s21, s15
 80293e0:	ee2e 6a86 	vmul.f32	s12, s29, s12
 80293e4:	ee75 1a21 	vadd.f32	s3, s10, s3
 80293e8:	ee30 0a68 	vsub.f32	s0, s0, s17
 80293ec:	ee75 9ae9 	vsub.f32	s19, s11, s19
 80293f0:	ee70 0a84 	vadd.f32	s1, s1, s8
 80293f4:	ee36 6a67 	vsub.f32	s12, s12, s15
 80293f8:	44dc      	add	ip, fp
 80293fa:	45e1      	cmp	r9, ip
 80293fc:	ed84 9a00 	vstr	s18, [r4]
 8029400:	edc4 3a01 	vstr	s7, [r4, #4]
 8029404:	449e      	add	lr, r3
 8029406:	ed02 7a01 	vstr	s14, [r2, #-4]
 802940a:	edc2 2a00 	vstr	s5, [r2]
 802940e:	441e      	add	r6, r3
 8029410:	ed85 2a00 	vstr	s4, [r5]
 8029414:	ed85 8a01 	vstr	s16, [r5, #4]
 8029418:	441c      	add	r4, r3
 802941a:	ed47 1a01 	vstr	s3, [r7, #-4]
 802941e:	ed87 0a00 	vstr	s0, [r7]
 8029422:	441a      	add	r2, r3
 8029424:	ed41 4a01 	vstr	s9, [r1, #-4]
 8029428:	edc1 9a00 	vstr	s19, [r1]
 802942c:	441d      	add	r5, r3
 802942e:	edc0 0a00 	vstr	s1, [r0]
 8029432:	441f      	add	r7, r3
 8029434:	ed80 6a01 	vstr	s12, [r0, #4]
 8029438:	4419      	add	r1, r3
 802943a:	4418      	add	r0, r3
 802943c:	f63f aeea 	bhi.w	8029214 <arm_radix8_butterfly_f32+0x334>
 8029440:	9a03      	ldr	r2, [sp, #12]
 8029442:	990d      	ldr	r1, [sp, #52]	; 0x34
 8029444:	440a      	add	r2, r1
 8029446:	9203      	str	r2, [sp, #12]
 8029448:	990e      	ldr	r1, [sp, #56]	; 0x38
 802944a:	9a05      	ldr	r2, [sp, #20]
 802944c:	440a      	add	r2, r1
 802944e:	9205      	str	r2, [sp, #20]
 8029450:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8029452:	9a04      	ldr	r2, [sp, #16]
 8029454:	440a      	add	r2, r1
 8029456:	9204      	str	r2, [sp, #16]
 8029458:	9912      	ldr	r1, [sp, #72]	; 0x48
 802945a:	9a06      	ldr	r2, [sp, #24]
 802945c:	440a      	add	r2, r1
 802945e:	9206      	str	r2, [sp, #24]
 8029460:	9911      	ldr	r1, [sp, #68]	; 0x44
 8029462:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8029464:	440a      	add	r2, r1
 8029466:	9209      	str	r2, [sp, #36]	; 0x24
 8029468:	9910      	ldr	r1, [sp, #64]	; 0x40
 802946a:	9a08      	ldr	r2, [sp, #32]
 802946c:	440a      	add	r2, r1
 802946e:	9208      	str	r2, [sp, #32]
 8029470:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8029472:	9a07      	ldr	r2, [sp, #28]
 8029474:	440a      	add	r2, r1
 8029476:	9207      	str	r2, [sp, #28]
 8029478:	990c      	ldr	r1, [sp, #48]	; 0x30
 802947a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802947c:	f108 0801 	add.w	r8, r8, #1
 8029480:	3208      	adds	r2, #8
 8029482:	4588      	cmp	r8, r1
 8029484:	920a      	str	r2, [sp, #40]	; 0x28
 8029486:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8029488:	f47f ae75 	bne.w	8029176 <arm_radix8_butterfly_f32+0x296>
 802948c:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8029490:	9300      	str	r3, [sp, #0]
 8029492:	46c3      	mov	fp, r8
 8029494:	f8dd e06c 	ldr.w	lr, [sp, #108]	; 0x6c
 8029498:	e532      	b.n	8028f00 <arm_radix8_butterfly_f32+0x20>
 802949a:	b01d      	add	sp, #116	; 0x74
 802949c:	ecbd 8b10 	vpop	{d8-d15}
 80294a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080294a4 <__aeabi_atexit>:
 80294a4:	460b      	mov	r3, r1
 80294a6:	4601      	mov	r1, r0
 80294a8:	4618      	mov	r0, r3
 80294aa:	f000 bef3 	b.w	802a294 <__cxa_atexit>

080294ae <_ZdlPvj>:
 80294ae:	f000 b812 	b.w	80294d6 <_ZdlPv>

080294b2 <__cxa_guard_acquire>:
 80294b2:	6803      	ldr	r3, [r0, #0]
 80294b4:	07db      	lsls	r3, r3, #31
 80294b6:	d406      	bmi.n	80294c6 <__cxa_guard_acquire+0x14>
 80294b8:	7843      	ldrb	r3, [r0, #1]
 80294ba:	b103      	cbz	r3, 80294be <__cxa_guard_acquire+0xc>
 80294bc:	deff      	udf	#255	; 0xff
 80294be:	2301      	movs	r3, #1
 80294c0:	7043      	strb	r3, [r0, #1]
 80294c2:	4618      	mov	r0, r3
 80294c4:	4770      	bx	lr
 80294c6:	2000      	movs	r0, #0
 80294c8:	4770      	bx	lr

080294ca <__cxa_guard_release>:
 80294ca:	2301      	movs	r3, #1
 80294cc:	6003      	str	r3, [r0, #0]
 80294ce:	4770      	bx	lr

080294d0 <__cxa_pure_virtual>:
 80294d0:	b508      	push	{r3, lr}
 80294d2:	f000 f80f 	bl	80294f4 <_ZSt9terminatev>

080294d6 <_ZdlPv>:
 80294d6:	f000 be29 	b.w	802a12c <free>

080294da <_ZN10__cxxabiv111__terminateEPFvvE>:
 80294da:	b508      	push	{r3, lr}
 80294dc:	4780      	blx	r0
 80294de:	f000 fdf1 	bl	802a0c4 <abort>
	...

080294e4 <_ZSt13get_terminatev>:
 80294e4:	4b02      	ldr	r3, [pc, #8]	; (80294f0 <_ZSt13get_terminatev+0xc>)
 80294e6:	6818      	ldr	r0, [r3, #0]
 80294e8:	f3bf 8f5b 	dmb	ish
 80294ec:	4770      	bx	lr
 80294ee:	bf00      	nop
 80294f0:	20000104 	.word	0x20000104

080294f4 <_ZSt9terminatev>:
 80294f4:	b508      	push	{r3, lr}
 80294f6:	f7ff fff5 	bl	80294e4 <_ZSt13get_terminatev>
 80294fa:	f7ff ffee 	bl	80294da <_ZN10__cxxabiv111__terminateEPFvvE>
	...

08029500 <sqrtf>:
 8029500:	b508      	push	{r3, lr}
 8029502:	ed2d 8b02 	vpush	{d8}
 8029506:	eeb0 8a40 	vmov.f32	s16, s0
 802950a:	f000 f8a1 	bl	8029650 <__ieee754_sqrtf>
 802950e:	eeb4 8a48 	vcmp.f32	s16, s16
 8029512:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029516:	d60c      	bvs.n	8029532 <sqrtf+0x32>
 8029518:	eddf 8a07 	vldr	s17, [pc, #28]	; 8029538 <sqrtf+0x38>
 802951c:	eeb4 8ae8 	vcmpe.f32	s16, s17
 8029520:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029524:	d505      	bpl.n	8029532 <sqrtf+0x32>
 8029526:	f001 f8d3 	bl	802a6d0 <__errno>
 802952a:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 802952e:	2321      	movs	r3, #33	; 0x21
 8029530:	6003      	str	r3, [r0, #0]
 8029532:	ecbd 8b02 	vpop	{d8}
 8029536:	bd08      	pop	{r3, pc}
 8029538:	00000000 	.word	0x00000000

0802953c <cosf>:
 802953c:	ee10 3a10 	vmov	r3, s0
 8029540:	b507      	push	{r0, r1, r2, lr}
 8029542:	4a1e      	ldr	r2, [pc, #120]	; (80295bc <cosf+0x80>)
 8029544:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8029548:	4293      	cmp	r3, r2
 802954a:	dc06      	bgt.n	802955a <cosf+0x1e>
 802954c:	eddf 0a1c 	vldr	s1, [pc, #112]	; 80295c0 <cosf+0x84>
 8029550:	b003      	add	sp, #12
 8029552:	f85d eb04 	ldr.w	lr, [sp], #4
 8029556:	f000 b903 	b.w	8029760 <__kernel_cosf>
 802955a:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802955e:	db04      	blt.n	802956a <cosf+0x2e>
 8029560:	ee30 0a40 	vsub.f32	s0, s0, s0
 8029564:	b003      	add	sp, #12
 8029566:	f85d fb04 	ldr.w	pc, [sp], #4
 802956a:	4668      	mov	r0, sp
 802956c:	f000 f99e 	bl	80298ac <__ieee754_rem_pio2f>
 8029570:	f000 0003 	and.w	r0, r0, #3
 8029574:	2801      	cmp	r0, #1
 8029576:	d009      	beq.n	802958c <cosf+0x50>
 8029578:	2802      	cmp	r0, #2
 802957a:	d010      	beq.n	802959e <cosf+0x62>
 802957c:	b9b0      	cbnz	r0, 80295ac <cosf+0x70>
 802957e:	eddd 0a01 	vldr	s1, [sp, #4]
 8029582:	ed9d 0a00 	vldr	s0, [sp]
 8029586:	f000 f8eb 	bl	8029760 <__kernel_cosf>
 802958a:	e7eb      	b.n	8029564 <cosf+0x28>
 802958c:	eddd 0a01 	vldr	s1, [sp, #4]
 8029590:	ed9d 0a00 	vldr	s0, [sp]
 8029594:	f000 f942 	bl	802981c <__kernel_sinf>
 8029598:	eeb1 0a40 	vneg.f32	s0, s0
 802959c:	e7e2      	b.n	8029564 <cosf+0x28>
 802959e:	eddd 0a01 	vldr	s1, [sp, #4]
 80295a2:	ed9d 0a00 	vldr	s0, [sp]
 80295a6:	f000 f8db 	bl	8029760 <__kernel_cosf>
 80295aa:	e7f5      	b.n	8029598 <cosf+0x5c>
 80295ac:	eddd 0a01 	vldr	s1, [sp, #4]
 80295b0:	ed9d 0a00 	vldr	s0, [sp]
 80295b4:	2001      	movs	r0, #1
 80295b6:	f000 f931 	bl	802981c <__kernel_sinf>
 80295ba:	e7d3      	b.n	8029564 <cosf+0x28>
 80295bc:	3f490fd8 	.word	0x3f490fd8
 80295c0:	00000000 	.word	0x00000000

080295c4 <sinf>:
 80295c4:	ee10 3a10 	vmov	r3, s0
 80295c8:	b507      	push	{r0, r1, r2, lr}
 80295ca:	4a1f      	ldr	r2, [pc, #124]	; (8029648 <sinf+0x84>)
 80295cc:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80295d0:	4293      	cmp	r3, r2
 80295d2:	dc07      	bgt.n	80295e4 <sinf+0x20>
 80295d4:	eddf 0a1d 	vldr	s1, [pc, #116]	; 802964c <sinf+0x88>
 80295d8:	2000      	movs	r0, #0
 80295da:	b003      	add	sp, #12
 80295dc:	f85d eb04 	ldr.w	lr, [sp], #4
 80295e0:	f000 b91c 	b.w	802981c <__kernel_sinf>
 80295e4:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 80295e8:	db04      	blt.n	80295f4 <sinf+0x30>
 80295ea:	ee30 0a40 	vsub.f32	s0, s0, s0
 80295ee:	b003      	add	sp, #12
 80295f0:	f85d fb04 	ldr.w	pc, [sp], #4
 80295f4:	4668      	mov	r0, sp
 80295f6:	f000 f959 	bl	80298ac <__ieee754_rem_pio2f>
 80295fa:	f000 0003 	and.w	r0, r0, #3
 80295fe:	2801      	cmp	r0, #1
 8029600:	d00a      	beq.n	8029618 <sinf+0x54>
 8029602:	2802      	cmp	r0, #2
 8029604:	d00f      	beq.n	8029626 <sinf+0x62>
 8029606:	b9c0      	cbnz	r0, 802963a <sinf+0x76>
 8029608:	eddd 0a01 	vldr	s1, [sp, #4]
 802960c:	ed9d 0a00 	vldr	s0, [sp]
 8029610:	2001      	movs	r0, #1
 8029612:	f000 f903 	bl	802981c <__kernel_sinf>
 8029616:	e7ea      	b.n	80295ee <sinf+0x2a>
 8029618:	eddd 0a01 	vldr	s1, [sp, #4]
 802961c:	ed9d 0a00 	vldr	s0, [sp]
 8029620:	f000 f89e 	bl	8029760 <__kernel_cosf>
 8029624:	e7e3      	b.n	80295ee <sinf+0x2a>
 8029626:	eddd 0a01 	vldr	s1, [sp, #4]
 802962a:	ed9d 0a00 	vldr	s0, [sp]
 802962e:	2001      	movs	r0, #1
 8029630:	f000 f8f4 	bl	802981c <__kernel_sinf>
 8029634:	eeb1 0a40 	vneg.f32	s0, s0
 8029638:	e7d9      	b.n	80295ee <sinf+0x2a>
 802963a:	eddd 0a01 	vldr	s1, [sp, #4]
 802963e:	ed9d 0a00 	vldr	s0, [sp]
 8029642:	f000 f88d 	bl	8029760 <__kernel_cosf>
 8029646:	e7f5      	b.n	8029634 <sinf+0x70>
 8029648:	3f490fd8 	.word	0x3f490fd8
 802964c:	00000000 	.word	0x00000000

08029650 <__ieee754_sqrtf>:
 8029650:	eeb1 0ac0 	vsqrt.f32	s0, s0
 8029654:	4770      	bx	lr
	...

08029658 <ceilf>:
 8029658:	ee10 3a10 	vmov	r3, s0
 802965c:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8029660:	3a7f      	subs	r2, #127	; 0x7f
 8029662:	2a16      	cmp	r2, #22
 8029664:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8029668:	dc2a      	bgt.n	80296c0 <ceilf+0x68>
 802966a:	2a00      	cmp	r2, #0
 802966c:	da11      	bge.n	8029692 <ceilf+0x3a>
 802966e:	eddf 7a19 	vldr	s15, [pc, #100]	; 80296d4 <ceilf+0x7c>
 8029672:	ee30 0a27 	vadd.f32	s0, s0, s15
 8029676:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802967a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802967e:	dd05      	ble.n	802968c <ceilf+0x34>
 8029680:	2b00      	cmp	r3, #0
 8029682:	db23      	blt.n	80296cc <ceilf+0x74>
 8029684:	2900      	cmp	r1, #0
 8029686:	bf18      	it	ne
 8029688:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 802968c:	ee00 3a10 	vmov	s0, r3
 8029690:	4770      	bx	lr
 8029692:	4911      	ldr	r1, [pc, #68]	; (80296d8 <ceilf+0x80>)
 8029694:	4111      	asrs	r1, r2
 8029696:	420b      	tst	r3, r1
 8029698:	d0fa      	beq.n	8029690 <ceilf+0x38>
 802969a:	eddf 7a0e 	vldr	s15, [pc, #56]	; 80296d4 <ceilf+0x7c>
 802969e:	ee30 0a27 	vadd.f32	s0, s0, s15
 80296a2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80296a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80296aa:	ddef      	ble.n	802968c <ceilf+0x34>
 80296ac:	2b00      	cmp	r3, #0
 80296ae:	bfc2      	ittt	gt
 80296b0:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 80296b4:	fa40 f202 	asrgt.w	r2, r0, r2
 80296b8:	189b      	addgt	r3, r3, r2
 80296ba:	ea23 0301 	bic.w	r3, r3, r1
 80296be:	e7e5      	b.n	802968c <ceilf+0x34>
 80296c0:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 80296c4:	d3e4      	bcc.n	8029690 <ceilf+0x38>
 80296c6:	ee30 0a00 	vadd.f32	s0, s0, s0
 80296ca:	4770      	bx	lr
 80296cc:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 80296d0:	e7dc      	b.n	802968c <ceilf+0x34>
 80296d2:	bf00      	nop
 80296d4:	7149f2ca 	.word	0x7149f2ca
 80296d8:	007fffff 	.word	0x007fffff

080296dc <floorf>:
 80296dc:	ee10 3a10 	vmov	r3, s0
 80296e0:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 80296e4:	3a7f      	subs	r2, #127	; 0x7f
 80296e6:	2a16      	cmp	r2, #22
 80296e8:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 80296ec:	dc2a      	bgt.n	8029744 <floorf+0x68>
 80296ee:	2a00      	cmp	r2, #0
 80296f0:	da11      	bge.n	8029716 <floorf+0x3a>
 80296f2:	eddf 7a18 	vldr	s15, [pc, #96]	; 8029754 <floorf+0x78>
 80296f6:	ee30 0a27 	vadd.f32	s0, s0, s15
 80296fa:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80296fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029702:	dd05      	ble.n	8029710 <floorf+0x34>
 8029704:	2b00      	cmp	r3, #0
 8029706:	da23      	bge.n	8029750 <floorf+0x74>
 8029708:	4a13      	ldr	r2, [pc, #76]	; (8029758 <floorf+0x7c>)
 802970a:	2900      	cmp	r1, #0
 802970c:	bf18      	it	ne
 802970e:	4613      	movne	r3, r2
 8029710:	ee00 3a10 	vmov	s0, r3
 8029714:	4770      	bx	lr
 8029716:	4911      	ldr	r1, [pc, #68]	; (802975c <floorf+0x80>)
 8029718:	4111      	asrs	r1, r2
 802971a:	420b      	tst	r3, r1
 802971c:	d0fa      	beq.n	8029714 <floorf+0x38>
 802971e:	eddf 7a0d 	vldr	s15, [pc, #52]	; 8029754 <floorf+0x78>
 8029722:	ee30 0a27 	vadd.f32	s0, s0, s15
 8029726:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802972a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802972e:	ddef      	ble.n	8029710 <floorf+0x34>
 8029730:	2b00      	cmp	r3, #0
 8029732:	bfbe      	ittt	lt
 8029734:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 8029738:	fa40 f202 	asrlt.w	r2, r0, r2
 802973c:	189b      	addlt	r3, r3, r2
 802973e:	ea23 0301 	bic.w	r3, r3, r1
 8029742:	e7e5      	b.n	8029710 <floorf+0x34>
 8029744:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8029748:	d3e4      	bcc.n	8029714 <floorf+0x38>
 802974a:	ee30 0a00 	vadd.f32	s0, s0, s0
 802974e:	4770      	bx	lr
 8029750:	2300      	movs	r3, #0
 8029752:	e7dd      	b.n	8029710 <floorf+0x34>
 8029754:	7149f2ca 	.word	0x7149f2ca
 8029758:	bf800000 	.word	0xbf800000
 802975c:	007fffff 	.word	0x007fffff

08029760 <__kernel_cosf>:
 8029760:	ee10 3a10 	vmov	r3, s0
 8029764:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8029768:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802976c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8029770:	da05      	bge.n	802977e <__kernel_cosf+0x1e>
 8029772:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8029776:	ee17 2a90 	vmov	r2, s15
 802977a:	2a00      	cmp	r2, #0
 802977c:	d03b      	beq.n	80297f6 <__kernel_cosf+0x96>
 802977e:	ee20 7a00 	vmul.f32	s14, s0, s0
 8029782:	eddf 7a1e 	vldr	s15, [pc, #120]	; 80297fc <__kernel_cosf+0x9c>
 8029786:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 8029800 <__kernel_cosf+0xa0>
 802978a:	4a1e      	ldr	r2, [pc, #120]	; (8029804 <__kernel_cosf+0xa4>)
 802978c:	eea7 6a27 	vfma.f32	s12, s14, s15
 8029790:	4293      	cmp	r3, r2
 8029792:	eddf 7a1d 	vldr	s15, [pc, #116]	; 8029808 <__kernel_cosf+0xa8>
 8029796:	eee6 7a07 	vfma.f32	s15, s12, s14
 802979a:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 802980c <__kernel_cosf+0xac>
 802979e:	eea7 6a87 	vfma.f32	s12, s15, s14
 80297a2:	eddf 7a1b 	vldr	s15, [pc, #108]	; 8029810 <__kernel_cosf+0xb0>
 80297a6:	eee6 7a07 	vfma.f32	s15, s12, s14
 80297aa:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 8029814 <__kernel_cosf+0xb4>
 80297ae:	eea7 6a87 	vfma.f32	s12, s15, s14
 80297b2:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 80297b6:	ee26 6a07 	vmul.f32	s12, s12, s14
 80297ba:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80297be:	eee7 0a06 	vfma.f32	s1, s14, s12
 80297c2:	ee67 7a27 	vmul.f32	s15, s14, s15
 80297c6:	dc04      	bgt.n	80297d2 <__kernel_cosf+0x72>
 80297c8:	ee77 7ae0 	vsub.f32	s15, s15, s1
 80297cc:	ee36 0ae7 	vsub.f32	s0, s13, s15
 80297d0:	4770      	bx	lr
 80297d2:	4a11      	ldr	r2, [pc, #68]	; (8029818 <__kernel_cosf+0xb8>)
 80297d4:	4293      	cmp	r3, r2
 80297d6:	bfda      	itte	le
 80297d8:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 80297dc:	ee07 3a10 	vmovle	s14, r3
 80297e0:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 80297e4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80297e8:	ee36 0ac7 	vsub.f32	s0, s13, s14
 80297ec:	ee77 7ae0 	vsub.f32	s15, s15, s1
 80297f0:	ee30 0a67 	vsub.f32	s0, s0, s15
 80297f4:	4770      	bx	lr
 80297f6:	eeb0 0a66 	vmov.f32	s0, s13
 80297fa:	4770      	bx	lr
 80297fc:	ad47d74e 	.word	0xad47d74e
 8029800:	310f74f6 	.word	0x310f74f6
 8029804:	3e999999 	.word	0x3e999999
 8029808:	b493f27c 	.word	0xb493f27c
 802980c:	37d00d01 	.word	0x37d00d01
 8029810:	bab60b61 	.word	0xbab60b61
 8029814:	3d2aaaab 	.word	0x3d2aaaab
 8029818:	3f480000 	.word	0x3f480000

0802981c <__kernel_sinf>:
 802981c:	ee10 3a10 	vmov	r3, s0
 8029820:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8029824:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 8029828:	da04      	bge.n	8029834 <__kernel_sinf+0x18>
 802982a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802982e:	ee17 3a90 	vmov	r3, s15
 8029832:	b35b      	cbz	r3, 802988c <__kernel_sinf+0x70>
 8029834:	ee20 7a00 	vmul.f32	s14, s0, s0
 8029838:	eddf 7a15 	vldr	s15, [pc, #84]	; 8029890 <__kernel_sinf+0x74>
 802983c:	ed9f 6a15 	vldr	s12, [pc, #84]	; 8029894 <__kernel_sinf+0x78>
 8029840:	eea7 6a27 	vfma.f32	s12, s14, s15
 8029844:	eddf 7a14 	vldr	s15, [pc, #80]	; 8029898 <__kernel_sinf+0x7c>
 8029848:	eee6 7a07 	vfma.f32	s15, s12, s14
 802984c:	ed9f 6a13 	vldr	s12, [pc, #76]	; 802989c <__kernel_sinf+0x80>
 8029850:	eea7 6a87 	vfma.f32	s12, s15, s14
 8029854:	eddf 7a12 	vldr	s15, [pc, #72]	; 80298a0 <__kernel_sinf+0x84>
 8029858:	ee60 6a07 	vmul.f32	s13, s0, s14
 802985c:	eee6 7a07 	vfma.f32	s15, s12, s14
 8029860:	b930      	cbnz	r0, 8029870 <__kernel_sinf+0x54>
 8029862:	ed9f 6a10 	vldr	s12, [pc, #64]	; 80298a4 <__kernel_sinf+0x88>
 8029866:	eea7 6a27 	vfma.f32	s12, s14, s15
 802986a:	eea6 0a26 	vfma.f32	s0, s12, s13
 802986e:	4770      	bx	lr
 8029870:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8029874:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8029878:	eee0 7a86 	vfma.f32	s15, s1, s12
 802987c:	eed7 0a87 	vfnms.f32	s1, s15, s14
 8029880:	eddf 7a09 	vldr	s15, [pc, #36]	; 80298a8 <__kernel_sinf+0x8c>
 8029884:	eee6 0aa7 	vfma.f32	s1, s13, s15
 8029888:	ee30 0a60 	vsub.f32	s0, s0, s1
 802988c:	4770      	bx	lr
 802988e:	bf00      	nop
 8029890:	2f2ec9d3 	.word	0x2f2ec9d3
 8029894:	b2d72f34 	.word	0xb2d72f34
 8029898:	3638ef1b 	.word	0x3638ef1b
 802989c:	b9500d01 	.word	0xb9500d01
 80298a0:	3c088889 	.word	0x3c088889
 80298a4:	be2aaaab 	.word	0xbe2aaaab
 80298a8:	3e2aaaab 	.word	0x3e2aaaab

080298ac <__ieee754_rem_pio2f>:
 80298ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80298ae:	ee10 6a10 	vmov	r6, s0
 80298b2:	4b86      	ldr	r3, [pc, #536]	; (8029acc <__ieee754_rem_pio2f+0x220>)
 80298b4:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 80298b8:	429d      	cmp	r5, r3
 80298ba:	b087      	sub	sp, #28
 80298bc:	4604      	mov	r4, r0
 80298be:	dc05      	bgt.n	80298cc <__ieee754_rem_pio2f+0x20>
 80298c0:	2300      	movs	r3, #0
 80298c2:	ed80 0a00 	vstr	s0, [r0]
 80298c6:	6043      	str	r3, [r0, #4]
 80298c8:	2000      	movs	r0, #0
 80298ca:	e020      	b.n	802990e <__ieee754_rem_pio2f+0x62>
 80298cc:	4b80      	ldr	r3, [pc, #512]	; (8029ad0 <__ieee754_rem_pio2f+0x224>)
 80298ce:	429d      	cmp	r5, r3
 80298d0:	dc38      	bgt.n	8029944 <__ieee754_rem_pio2f+0x98>
 80298d2:	2e00      	cmp	r6, #0
 80298d4:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 8029ad4 <__ieee754_rem_pio2f+0x228>
 80298d8:	4b7f      	ldr	r3, [pc, #508]	; (8029ad8 <__ieee754_rem_pio2f+0x22c>)
 80298da:	f025 050f 	bic.w	r5, r5, #15
 80298de:	dd18      	ble.n	8029912 <__ieee754_rem_pio2f+0x66>
 80298e0:	429d      	cmp	r5, r3
 80298e2:	ee70 7a47 	vsub.f32	s15, s0, s14
 80298e6:	bf09      	itett	eq
 80298e8:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 8029adc <__ieee754_rem_pio2f+0x230>
 80298ec:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 8029ae0 <__ieee754_rem_pio2f+0x234>
 80298f0:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 80298f4:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 8029ae4 <__ieee754_rem_pio2f+0x238>
 80298f8:	ee77 6ac7 	vsub.f32	s13, s15, s14
 80298fc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8029900:	edc0 6a00 	vstr	s13, [r0]
 8029904:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029908:	edc0 7a01 	vstr	s15, [r0, #4]
 802990c:	2001      	movs	r0, #1
 802990e:	b007      	add	sp, #28
 8029910:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8029912:	429d      	cmp	r5, r3
 8029914:	ee70 7a07 	vadd.f32	s15, s0, s14
 8029918:	bf09      	itett	eq
 802991a:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 8029adc <__ieee754_rem_pio2f+0x230>
 802991e:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 8029ae0 <__ieee754_rem_pio2f+0x234>
 8029922:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 8029926:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 8029ae4 <__ieee754_rem_pio2f+0x238>
 802992a:	ee77 6a87 	vadd.f32	s13, s15, s14
 802992e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8029932:	edc0 6a00 	vstr	s13, [r0]
 8029936:	ee77 7a87 	vadd.f32	s15, s15, s14
 802993a:	edc0 7a01 	vstr	s15, [r0, #4]
 802993e:	f04f 30ff 	mov.w	r0, #4294967295
 8029942:	e7e4      	b.n	802990e <__ieee754_rem_pio2f+0x62>
 8029944:	4b68      	ldr	r3, [pc, #416]	; (8029ae8 <__ieee754_rem_pio2f+0x23c>)
 8029946:	429d      	cmp	r5, r3
 8029948:	dc71      	bgt.n	8029a2e <__ieee754_rem_pio2f+0x182>
 802994a:	f000 f8db 	bl	8029b04 <fabsf>
 802994e:	ed9f 7a67 	vldr	s14, [pc, #412]	; 8029aec <__ieee754_rem_pio2f+0x240>
 8029952:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8029956:	eee0 7a07 	vfma.f32	s15, s0, s14
 802995a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802995e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8029962:	ee17 0a90 	vmov	r0, s15
 8029966:	eddf 7a5b 	vldr	s15, [pc, #364]	; 8029ad4 <__ieee754_rem_pio2f+0x228>
 802996a:	eea7 0a67 	vfms.f32	s0, s14, s15
 802996e:	281f      	cmp	r0, #31
 8029970:	eddf 7a5b 	vldr	s15, [pc, #364]	; 8029ae0 <__ieee754_rem_pio2f+0x234>
 8029974:	ee67 7a27 	vmul.f32	s15, s14, s15
 8029978:	eeb1 6a47 	vneg.f32	s12, s14
 802997c:	ee70 6a67 	vsub.f32	s13, s0, s15
 8029980:	ee16 2a90 	vmov	r2, s13
 8029984:	dc1c      	bgt.n	80299c0 <__ieee754_rem_pio2f+0x114>
 8029986:	495a      	ldr	r1, [pc, #360]	; (8029af0 <__ieee754_rem_pio2f+0x244>)
 8029988:	1e47      	subs	r7, r0, #1
 802998a:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 802998e:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8029992:	428b      	cmp	r3, r1
 8029994:	d014      	beq.n	80299c0 <__ieee754_rem_pio2f+0x114>
 8029996:	6022      	str	r2, [r4, #0]
 8029998:	ed94 7a00 	vldr	s14, [r4]
 802999c:	ee30 0a47 	vsub.f32	s0, s0, s14
 80299a0:	2e00      	cmp	r6, #0
 80299a2:	ee30 0a67 	vsub.f32	s0, s0, s15
 80299a6:	ed84 0a01 	vstr	s0, [r4, #4]
 80299aa:	dab0      	bge.n	802990e <__ieee754_rem_pio2f+0x62>
 80299ac:	eeb1 7a47 	vneg.f32	s14, s14
 80299b0:	eeb1 0a40 	vneg.f32	s0, s0
 80299b4:	ed84 7a00 	vstr	s14, [r4]
 80299b8:	ed84 0a01 	vstr	s0, [r4, #4]
 80299bc:	4240      	negs	r0, r0
 80299be:	e7a6      	b.n	802990e <__ieee754_rem_pio2f+0x62>
 80299c0:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 80299c4:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 80299c8:	2908      	cmp	r1, #8
 80299ca:	ea4f 53e5 	mov.w	r3, r5, asr #23
 80299ce:	dde2      	ble.n	8029996 <__ieee754_rem_pio2f+0xea>
 80299d0:	eddf 5a42 	vldr	s11, [pc, #264]	; 8029adc <__ieee754_rem_pio2f+0x230>
 80299d4:	eef0 6a40 	vmov.f32	s13, s0
 80299d8:	eee6 6a25 	vfma.f32	s13, s12, s11
 80299dc:	ee70 7a66 	vsub.f32	s15, s0, s13
 80299e0:	eee6 7a25 	vfma.f32	s15, s12, s11
 80299e4:	eddf 5a3f 	vldr	s11, [pc, #252]	; 8029ae4 <__ieee754_rem_pio2f+0x238>
 80299e8:	eed7 7a25 	vfnms.f32	s15, s14, s11
 80299ec:	ee76 5ae7 	vsub.f32	s11, s13, s15
 80299f0:	ee15 2a90 	vmov	r2, s11
 80299f4:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 80299f8:	1a5b      	subs	r3, r3, r1
 80299fa:	2b19      	cmp	r3, #25
 80299fc:	dc04      	bgt.n	8029a08 <__ieee754_rem_pio2f+0x15c>
 80299fe:	edc4 5a00 	vstr	s11, [r4]
 8029a02:	eeb0 0a66 	vmov.f32	s0, s13
 8029a06:	e7c7      	b.n	8029998 <__ieee754_rem_pio2f+0xec>
 8029a08:	eddf 5a3a 	vldr	s11, [pc, #232]	; 8029af4 <__ieee754_rem_pio2f+0x248>
 8029a0c:	eeb0 0a66 	vmov.f32	s0, s13
 8029a10:	eea6 0a25 	vfma.f32	s0, s12, s11
 8029a14:	ee76 7ac0 	vsub.f32	s15, s13, s0
 8029a18:	eddf 6a37 	vldr	s13, [pc, #220]	; 8029af8 <__ieee754_rem_pio2f+0x24c>
 8029a1c:	eee6 7a25 	vfma.f32	s15, s12, s11
 8029a20:	eed7 7a26 	vfnms.f32	s15, s14, s13
 8029a24:	ee30 7a67 	vsub.f32	s14, s0, s15
 8029a28:	ed84 7a00 	vstr	s14, [r4]
 8029a2c:	e7b4      	b.n	8029998 <__ieee754_rem_pio2f+0xec>
 8029a2e:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 8029a32:	db06      	blt.n	8029a42 <__ieee754_rem_pio2f+0x196>
 8029a34:	ee70 7a40 	vsub.f32	s15, s0, s0
 8029a38:	edc0 7a01 	vstr	s15, [r0, #4]
 8029a3c:	edc0 7a00 	vstr	s15, [r0]
 8029a40:	e742      	b.n	80298c8 <__ieee754_rem_pio2f+0x1c>
 8029a42:	15ea      	asrs	r2, r5, #23
 8029a44:	3a86      	subs	r2, #134	; 0x86
 8029a46:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 8029a4a:	ee07 3a90 	vmov	s15, r3
 8029a4e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8029a52:	eddf 6a2a 	vldr	s13, [pc, #168]	; 8029afc <__ieee754_rem_pio2f+0x250>
 8029a56:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8029a5a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029a5e:	ed8d 7a03 	vstr	s14, [sp, #12]
 8029a62:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8029a66:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8029a6a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8029a6e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029a72:	ed8d 7a04 	vstr	s14, [sp, #16]
 8029a76:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8029a7a:	eef5 7a40 	vcmp.f32	s15, #0.0
 8029a7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029a82:	edcd 7a05 	vstr	s15, [sp, #20]
 8029a86:	d11e      	bne.n	8029ac6 <__ieee754_rem_pio2f+0x21a>
 8029a88:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8029a8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029a90:	bf14      	ite	ne
 8029a92:	2302      	movne	r3, #2
 8029a94:	2301      	moveq	r3, #1
 8029a96:	491a      	ldr	r1, [pc, #104]	; (8029b00 <__ieee754_rem_pio2f+0x254>)
 8029a98:	9101      	str	r1, [sp, #4]
 8029a9a:	2102      	movs	r1, #2
 8029a9c:	9100      	str	r1, [sp, #0]
 8029a9e:	a803      	add	r0, sp, #12
 8029aa0:	4621      	mov	r1, r4
 8029aa2:	f000 f89d 	bl	8029be0 <__kernel_rem_pio2f>
 8029aa6:	2e00      	cmp	r6, #0
 8029aa8:	f6bf af31 	bge.w	802990e <__ieee754_rem_pio2f+0x62>
 8029aac:	edd4 7a00 	vldr	s15, [r4]
 8029ab0:	eef1 7a67 	vneg.f32	s15, s15
 8029ab4:	edc4 7a00 	vstr	s15, [r4]
 8029ab8:	edd4 7a01 	vldr	s15, [r4, #4]
 8029abc:	eef1 7a67 	vneg.f32	s15, s15
 8029ac0:	edc4 7a01 	vstr	s15, [r4, #4]
 8029ac4:	e77a      	b.n	80299bc <__ieee754_rem_pio2f+0x110>
 8029ac6:	2303      	movs	r3, #3
 8029ac8:	e7e5      	b.n	8029a96 <__ieee754_rem_pio2f+0x1ea>
 8029aca:	bf00      	nop
 8029acc:	3f490fd8 	.word	0x3f490fd8
 8029ad0:	4016cbe3 	.word	0x4016cbe3
 8029ad4:	3fc90f80 	.word	0x3fc90f80
 8029ad8:	3fc90fd0 	.word	0x3fc90fd0
 8029adc:	37354400 	.word	0x37354400
 8029ae0:	37354443 	.word	0x37354443
 8029ae4:	2e85a308 	.word	0x2e85a308
 8029ae8:	43490f80 	.word	0x43490f80
 8029aec:	3f22f984 	.word	0x3f22f984
 8029af0:	080422e0 	.word	0x080422e0
 8029af4:	2e85a300 	.word	0x2e85a300
 8029af8:	248d3132 	.word	0x248d3132
 8029afc:	43800000 	.word	0x43800000
 8029b00:	08042360 	.word	0x08042360

08029b04 <fabsf>:
 8029b04:	ee10 3a10 	vmov	r3, s0
 8029b08:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8029b0c:	ee00 3a10 	vmov	s0, r3
 8029b10:	4770      	bx	lr
	...

08029b14 <scalbnf>:
 8029b14:	ee10 3a10 	vmov	r3, s0
 8029b18:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 8029b1c:	d02b      	beq.n	8029b76 <scalbnf+0x62>
 8029b1e:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 8029b22:	d302      	bcc.n	8029b2a <scalbnf+0x16>
 8029b24:	ee30 0a00 	vadd.f32	s0, s0, s0
 8029b28:	4770      	bx	lr
 8029b2a:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 8029b2e:	d123      	bne.n	8029b78 <scalbnf+0x64>
 8029b30:	4b24      	ldr	r3, [pc, #144]	; (8029bc4 <scalbnf+0xb0>)
 8029b32:	eddf 7a25 	vldr	s15, [pc, #148]	; 8029bc8 <scalbnf+0xb4>
 8029b36:	4298      	cmp	r0, r3
 8029b38:	ee20 0a27 	vmul.f32	s0, s0, s15
 8029b3c:	db17      	blt.n	8029b6e <scalbnf+0x5a>
 8029b3e:	ee10 3a10 	vmov	r3, s0
 8029b42:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8029b46:	3a19      	subs	r2, #25
 8029b48:	f24c 3150 	movw	r1, #50000	; 0xc350
 8029b4c:	4288      	cmp	r0, r1
 8029b4e:	dd15      	ble.n	8029b7c <scalbnf+0x68>
 8029b50:	eddf 7a1e 	vldr	s15, [pc, #120]	; 8029bcc <scalbnf+0xb8>
 8029b54:	eddf 6a1e 	vldr	s13, [pc, #120]	; 8029bd0 <scalbnf+0xbc>
 8029b58:	ee10 3a10 	vmov	r3, s0
 8029b5c:	eeb0 7a67 	vmov.f32	s14, s15
 8029b60:	2b00      	cmp	r3, #0
 8029b62:	bfb8      	it	lt
 8029b64:	eef0 7a66 	vmovlt.f32	s15, s13
 8029b68:	ee27 0a87 	vmul.f32	s0, s15, s14
 8029b6c:	4770      	bx	lr
 8029b6e:	eddf 7a19 	vldr	s15, [pc, #100]	; 8029bd4 <scalbnf+0xc0>
 8029b72:	ee27 0a80 	vmul.f32	s0, s15, s0
 8029b76:	4770      	bx	lr
 8029b78:	0dd2      	lsrs	r2, r2, #23
 8029b7a:	e7e5      	b.n	8029b48 <scalbnf+0x34>
 8029b7c:	4410      	add	r0, r2
 8029b7e:	28fe      	cmp	r0, #254	; 0xfe
 8029b80:	dce6      	bgt.n	8029b50 <scalbnf+0x3c>
 8029b82:	2800      	cmp	r0, #0
 8029b84:	dd06      	ble.n	8029b94 <scalbnf+0x80>
 8029b86:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8029b8a:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8029b8e:	ee00 3a10 	vmov	s0, r3
 8029b92:	4770      	bx	lr
 8029b94:	f110 0f16 	cmn.w	r0, #22
 8029b98:	da09      	bge.n	8029bae <scalbnf+0x9a>
 8029b9a:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8029bd4 <scalbnf+0xc0>
 8029b9e:	eddf 6a0e 	vldr	s13, [pc, #56]	; 8029bd8 <scalbnf+0xc4>
 8029ba2:	ee10 3a10 	vmov	r3, s0
 8029ba6:	eeb0 7a67 	vmov.f32	s14, s15
 8029baa:	2b00      	cmp	r3, #0
 8029bac:	e7d9      	b.n	8029b62 <scalbnf+0x4e>
 8029bae:	3019      	adds	r0, #25
 8029bb0:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8029bb4:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8029bb8:	ed9f 0a08 	vldr	s0, [pc, #32]	; 8029bdc <scalbnf+0xc8>
 8029bbc:	ee07 3a90 	vmov	s15, r3
 8029bc0:	e7d7      	b.n	8029b72 <scalbnf+0x5e>
 8029bc2:	bf00      	nop
 8029bc4:	ffff3cb0 	.word	0xffff3cb0
 8029bc8:	4c000000 	.word	0x4c000000
 8029bcc:	7149f2ca 	.word	0x7149f2ca
 8029bd0:	f149f2ca 	.word	0xf149f2ca
 8029bd4:	0da24260 	.word	0x0da24260
 8029bd8:	8da24260 	.word	0x8da24260
 8029bdc:	33000000 	.word	0x33000000

08029be0 <__kernel_rem_pio2f>:
 8029be0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029be4:	ed2d 8b04 	vpush	{d8-d9}
 8029be8:	b0d9      	sub	sp, #356	; 0x164
 8029bea:	4688      	mov	r8, r1
 8029bec:	9002      	str	r0, [sp, #8]
 8029bee:	49b8      	ldr	r1, [pc, #736]	; (8029ed0 <__kernel_rem_pio2f+0x2f0>)
 8029bf0:	9866      	ldr	r0, [sp, #408]	; 0x198
 8029bf2:	9301      	str	r3, [sp, #4]
 8029bf4:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 8029bf8:	9901      	ldr	r1, [sp, #4]
 8029bfa:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 8029bfc:	f101 3bff 	add.w	fp, r1, #4294967295
 8029c00:	1d11      	adds	r1, r2, #4
 8029c02:	db25      	blt.n	8029c50 <__kernel_rem_pio2f+0x70>
 8029c04:	1ed0      	subs	r0, r2, #3
 8029c06:	bf48      	it	mi
 8029c08:	1d10      	addmi	r0, r2, #4
 8029c0a:	10c0      	asrs	r0, r0, #3
 8029c0c:	1c45      	adds	r5, r0, #1
 8029c0e:	00e9      	lsls	r1, r5, #3
 8029c10:	eba0 070b 	sub.w	r7, r0, fp
 8029c14:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 8029ee0 <__kernel_rem_pio2f+0x300>
 8029c18:	9103      	str	r1, [sp, #12]
 8029c1a:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 8029c1e:	eb0a 0c0b 	add.w	ip, sl, fp
 8029c22:	ae1c      	add	r6, sp, #112	; 0x70
 8029c24:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 8029c28:	2400      	movs	r4, #0
 8029c2a:	4564      	cmp	r4, ip
 8029c2c:	dd12      	ble.n	8029c54 <__kernel_rem_pio2f+0x74>
 8029c2e:	9901      	ldr	r1, [sp, #4]
 8029c30:	ac1c      	add	r4, sp, #112	; 0x70
 8029c32:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8029c36:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 8029c3a:	f04f 0c00 	mov.w	ip, #0
 8029c3e:	45d4      	cmp	ip, sl
 8029c40:	dc27      	bgt.n	8029c92 <__kernel_rem_pio2f+0xb2>
 8029c42:	f8dd e008 	ldr.w	lr, [sp, #8]
 8029c46:	eddf 7aa6 	vldr	s15, [pc, #664]	; 8029ee0 <__kernel_rem_pio2f+0x300>
 8029c4a:	4627      	mov	r7, r4
 8029c4c:	2600      	movs	r6, #0
 8029c4e:	e016      	b.n	8029c7e <__kernel_rem_pio2f+0x9e>
 8029c50:	2000      	movs	r0, #0
 8029c52:	e7db      	b.n	8029c0c <__kernel_rem_pio2f+0x2c>
 8029c54:	42e7      	cmn	r7, r4
 8029c56:	bf5d      	ittte	pl
 8029c58:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 8029c5c:	ee07 1a90 	vmovpl	s15, r1
 8029c60:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 8029c64:	eef0 7a47 	vmovmi.f32	s15, s14
 8029c68:	ece6 7a01 	vstmia	r6!, {s15}
 8029c6c:	3401      	adds	r4, #1
 8029c6e:	e7dc      	b.n	8029c2a <__kernel_rem_pio2f+0x4a>
 8029c70:	ecfe 6a01 	vldmia	lr!, {s13}
 8029c74:	ed97 7a00 	vldr	s14, [r7]
 8029c78:	eee6 7a87 	vfma.f32	s15, s13, s14
 8029c7c:	3601      	adds	r6, #1
 8029c7e:	455e      	cmp	r6, fp
 8029c80:	f1a7 0704 	sub.w	r7, r7, #4
 8029c84:	ddf4      	ble.n	8029c70 <__kernel_rem_pio2f+0x90>
 8029c86:	ece9 7a01 	vstmia	r9!, {s15}
 8029c8a:	f10c 0c01 	add.w	ip, ip, #1
 8029c8e:	3404      	adds	r4, #4
 8029c90:	e7d5      	b.n	8029c3e <__kernel_rem_pio2f+0x5e>
 8029c92:	a908      	add	r1, sp, #32
 8029c94:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8029c98:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 8029c9c:	eddf 8a8f 	vldr	s17, [pc, #572]	; 8029edc <__kernel_rem_pio2f+0x2fc>
 8029ca0:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 8029ed8 <__kernel_rem_pio2f+0x2f8>
 8029ca4:	9105      	str	r1, [sp, #20]
 8029ca6:	9304      	str	r3, [sp, #16]
 8029ca8:	4656      	mov	r6, sl
 8029caa:	00b3      	lsls	r3, r6, #2
 8029cac:	9306      	str	r3, [sp, #24]
 8029cae:	ab58      	add	r3, sp, #352	; 0x160
 8029cb0:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 8029cb4:	ac08      	add	r4, sp, #32
 8029cb6:	ab44      	add	r3, sp, #272	; 0x110
 8029cb8:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 8029cbc:	46a4      	mov	ip, r4
 8029cbe:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 8029cc2:	4637      	mov	r7, r6
 8029cc4:	2f00      	cmp	r7, #0
 8029cc6:	f1a0 0004 	sub.w	r0, r0, #4
 8029cca:	dc4a      	bgt.n	8029d62 <__kernel_rem_pio2f+0x182>
 8029ccc:	4628      	mov	r0, r5
 8029cce:	9207      	str	r2, [sp, #28]
 8029cd0:	f7ff ff20 	bl	8029b14 <scalbnf>
 8029cd4:	eeb0 8a40 	vmov.f32	s16, s0
 8029cd8:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 8029cdc:	ee28 0a00 	vmul.f32	s0, s16, s0
 8029ce0:	f7ff fcfc 	bl	80296dc <floorf>
 8029ce4:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 8029ce8:	eea0 8a67 	vfms.f32	s16, s0, s15
 8029cec:	2d00      	cmp	r5, #0
 8029cee:	9a07      	ldr	r2, [sp, #28]
 8029cf0:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8029cf4:	ee17 9a90 	vmov	r9, s15
 8029cf8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8029cfc:	ee38 8a67 	vsub.f32	s16, s16, s15
 8029d00:	dd41      	ble.n	8029d86 <__kernel_rem_pio2f+0x1a6>
 8029d02:	f106 3cff 	add.w	ip, r6, #4294967295
 8029d06:	ab08      	add	r3, sp, #32
 8029d08:	f1c5 0e08 	rsb	lr, r5, #8
 8029d0c:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 8029d10:	fa47 f00e 	asr.w	r0, r7, lr
 8029d14:	4481      	add	r9, r0
 8029d16:	fa00 f00e 	lsl.w	r0, r0, lr
 8029d1a:	1a3f      	subs	r7, r7, r0
 8029d1c:	f1c5 0007 	rsb	r0, r5, #7
 8029d20:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 8029d24:	4107      	asrs	r7, r0
 8029d26:	2f00      	cmp	r7, #0
 8029d28:	dd3c      	ble.n	8029da4 <__kernel_rem_pio2f+0x1c4>
 8029d2a:	f04f 0e00 	mov.w	lr, #0
 8029d2e:	f109 0901 	add.w	r9, r9, #1
 8029d32:	4671      	mov	r1, lr
 8029d34:	4576      	cmp	r6, lr
 8029d36:	dc67      	bgt.n	8029e08 <__kernel_rem_pio2f+0x228>
 8029d38:	2d00      	cmp	r5, #0
 8029d3a:	dd03      	ble.n	8029d44 <__kernel_rem_pio2f+0x164>
 8029d3c:	2d01      	cmp	r5, #1
 8029d3e:	d074      	beq.n	8029e2a <__kernel_rem_pio2f+0x24a>
 8029d40:	2d02      	cmp	r5, #2
 8029d42:	d07b      	beq.n	8029e3c <__kernel_rem_pio2f+0x25c>
 8029d44:	2f02      	cmp	r7, #2
 8029d46:	d12d      	bne.n	8029da4 <__kernel_rem_pio2f+0x1c4>
 8029d48:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8029d4c:	ee30 8a48 	vsub.f32	s16, s0, s16
 8029d50:	b341      	cbz	r1, 8029da4 <__kernel_rem_pio2f+0x1c4>
 8029d52:	4628      	mov	r0, r5
 8029d54:	9207      	str	r2, [sp, #28]
 8029d56:	f7ff fedd 	bl	8029b14 <scalbnf>
 8029d5a:	9a07      	ldr	r2, [sp, #28]
 8029d5c:	ee38 8a40 	vsub.f32	s16, s16, s0
 8029d60:	e020      	b.n	8029da4 <__kernel_rem_pio2f+0x1c4>
 8029d62:	ee60 7a28 	vmul.f32	s15, s0, s17
 8029d66:	3f01      	subs	r7, #1
 8029d68:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8029d6c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8029d70:	eea7 0ac9 	vfms.f32	s0, s15, s18
 8029d74:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8029d78:	ecac 0a01 	vstmia	ip!, {s0}
 8029d7c:	ed90 0a00 	vldr	s0, [r0]
 8029d80:	ee37 0a80 	vadd.f32	s0, s15, s0
 8029d84:	e79e      	b.n	8029cc4 <__kernel_rem_pio2f+0xe4>
 8029d86:	d105      	bne.n	8029d94 <__kernel_rem_pio2f+0x1b4>
 8029d88:	1e70      	subs	r0, r6, #1
 8029d8a:	ab08      	add	r3, sp, #32
 8029d8c:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 8029d90:	11ff      	asrs	r7, r7, #7
 8029d92:	e7c8      	b.n	8029d26 <__kernel_rem_pio2f+0x146>
 8029d94:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8029d98:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8029d9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029da0:	da30      	bge.n	8029e04 <__kernel_rem_pio2f+0x224>
 8029da2:	2700      	movs	r7, #0
 8029da4:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8029da8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029dac:	f040 809a 	bne.w	8029ee4 <__kernel_rem_pio2f+0x304>
 8029db0:	1e74      	subs	r4, r6, #1
 8029db2:	46a4      	mov	ip, r4
 8029db4:	2100      	movs	r1, #0
 8029db6:	45d4      	cmp	ip, sl
 8029db8:	da47      	bge.n	8029e4a <__kernel_rem_pio2f+0x26a>
 8029dba:	2900      	cmp	r1, #0
 8029dbc:	d063      	beq.n	8029e86 <__kernel_rem_pio2f+0x2a6>
 8029dbe:	ab08      	add	r3, sp, #32
 8029dc0:	3d08      	subs	r5, #8
 8029dc2:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8029dc6:	2b00      	cmp	r3, #0
 8029dc8:	d07f      	beq.n	8029eca <__kernel_rem_pio2f+0x2ea>
 8029dca:	4628      	mov	r0, r5
 8029dcc:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8029dd0:	f7ff fea0 	bl	8029b14 <scalbnf>
 8029dd4:	1c63      	adds	r3, r4, #1
 8029dd6:	aa44      	add	r2, sp, #272	; 0x110
 8029dd8:	ed9f 7a40 	vldr	s14, [pc, #256]	; 8029edc <__kernel_rem_pio2f+0x2fc>
 8029ddc:	0099      	lsls	r1, r3, #2
 8029dde:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8029de2:	4623      	mov	r3, r4
 8029de4:	2b00      	cmp	r3, #0
 8029de6:	f280 80ad 	bge.w	8029f44 <__kernel_rem_pio2f+0x364>
 8029dea:	4623      	mov	r3, r4
 8029dec:	2b00      	cmp	r3, #0
 8029dee:	f2c0 80cb 	blt.w	8029f88 <__kernel_rem_pio2f+0x3a8>
 8029df2:	aa44      	add	r2, sp, #272	; 0x110
 8029df4:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8029df8:	4e36      	ldr	r6, [pc, #216]	; (8029ed4 <__kernel_rem_pio2f+0x2f4>)
 8029dfa:	eddf 7a39 	vldr	s15, [pc, #228]	; 8029ee0 <__kernel_rem_pio2f+0x300>
 8029dfe:	2000      	movs	r0, #0
 8029e00:	1ae2      	subs	r2, r4, r3
 8029e02:	e0b6      	b.n	8029f72 <__kernel_rem_pio2f+0x392>
 8029e04:	2702      	movs	r7, #2
 8029e06:	e790      	b.n	8029d2a <__kernel_rem_pio2f+0x14a>
 8029e08:	6820      	ldr	r0, [r4, #0]
 8029e0a:	b949      	cbnz	r1, 8029e20 <__kernel_rem_pio2f+0x240>
 8029e0c:	b118      	cbz	r0, 8029e16 <__kernel_rem_pio2f+0x236>
 8029e0e:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8029e12:	6020      	str	r0, [r4, #0]
 8029e14:	2001      	movs	r0, #1
 8029e16:	f10e 0e01 	add.w	lr, lr, #1
 8029e1a:	3404      	adds	r4, #4
 8029e1c:	4601      	mov	r1, r0
 8029e1e:	e789      	b.n	8029d34 <__kernel_rem_pio2f+0x154>
 8029e20:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 8029e24:	6020      	str	r0, [r4, #0]
 8029e26:	4608      	mov	r0, r1
 8029e28:	e7f5      	b.n	8029e16 <__kernel_rem_pio2f+0x236>
 8029e2a:	1e74      	subs	r4, r6, #1
 8029e2c:	ab08      	add	r3, sp, #32
 8029e2e:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8029e32:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8029e36:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8029e3a:	e783      	b.n	8029d44 <__kernel_rem_pio2f+0x164>
 8029e3c:	1e74      	subs	r4, r6, #1
 8029e3e:	ab08      	add	r3, sp, #32
 8029e40:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8029e44:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 8029e48:	e7f5      	b.n	8029e36 <__kernel_rem_pio2f+0x256>
 8029e4a:	ab08      	add	r3, sp, #32
 8029e4c:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 8029e50:	f10c 3cff 	add.w	ip, ip, #4294967295
 8029e54:	4301      	orrs	r1, r0
 8029e56:	e7ae      	b.n	8029db6 <__kernel_rem_pio2f+0x1d6>
 8029e58:	3001      	adds	r0, #1
 8029e5a:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 8029e5e:	2f00      	cmp	r7, #0
 8029e60:	d0fa      	beq.n	8029e58 <__kernel_rem_pio2f+0x278>
 8029e62:	9b06      	ldr	r3, [sp, #24]
 8029e64:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 8029e68:	eb0d 0403 	add.w	r4, sp, r3
 8029e6c:	9b01      	ldr	r3, [sp, #4]
 8029e6e:	18f7      	adds	r7, r6, r3
 8029e70:	ab1c      	add	r3, sp, #112	; 0x70
 8029e72:	f106 0c01 	add.w	ip, r6, #1
 8029e76:	3c4c      	subs	r4, #76	; 0x4c
 8029e78:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8029e7c:	4430      	add	r0, r6
 8029e7e:	4560      	cmp	r0, ip
 8029e80:	da04      	bge.n	8029e8c <__kernel_rem_pio2f+0x2ac>
 8029e82:	4606      	mov	r6, r0
 8029e84:	e711      	b.n	8029caa <__kernel_rem_pio2f+0xca>
 8029e86:	9c05      	ldr	r4, [sp, #20]
 8029e88:	2001      	movs	r0, #1
 8029e8a:	e7e6      	b.n	8029e5a <__kernel_rem_pio2f+0x27a>
 8029e8c:	9b04      	ldr	r3, [sp, #16]
 8029e8e:	f8dd e008 	ldr.w	lr, [sp, #8]
 8029e92:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8029e96:	9306      	str	r3, [sp, #24]
 8029e98:	ee07 3a90 	vmov	s15, r3
 8029e9c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8029ea0:	2600      	movs	r6, #0
 8029ea2:	ece7 7a01 	vstmia	r7!, {s15}
 8029ea6:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8029ee0 <__kernel_rem_pio2f+0x300>
 8029eaa:	46b9      	mov	r9, r7
 8029eac:	455e      	cmp	r6, fp
 8029eae:	dd04      	ble.n	8029eba <__kernel_rem_pio2f+0x2da>
 8029eb0:	ece4 7a01 	vstmia	r4!, {s15}
 8029eb4:	f10c 0c01 	add.w	ip, ip, #1
 8029eb8:	e7e1      	b.n	8029e7e <__kernel_rem_pio2f+0x29e>
 8029eba:	ecfe 6a01 	vldmia	lr!, {s13}
 8029ebe:	ed39 7a01 	vldmdb	r9!, {s14}
 8029ec2:	3601      	adds	r6, #1
 8029ec4:	eee6 7a87 	vfma.f32	s15, s13, s14
 8029ec8:	e7f0      	b.n	8029eac <__kernel_rem_pio2f+0x2cc>
 8029eca:	3c01      	subs	r4, #1
 8029ecc:	e777      	b.n	8029dbe <__kernel_rem_pio2f+0x1de>
 8029ece:	bf00      	nop
 8029ed0:	080426a4 	.word	0x080426a4
 8029ed4:	08042678 	.word	0x08042678
 8029ed8:	43800000 	.word	0x43800000
 8029edc:	3b800000 	.word	0x3b800000
 8029ee0:	00000000 	.word	0x00000000
 8029ee4:	9b03      	ldr	r3, [sp, #12]
 8029ee6:	eeb0 0a48 	vmov.f32	s0, s16
 8029eea:	1a98      	subs	r0, r3, r2
 8029eec:	f7ff fe12 	bl	8029b14 <scalbnf>
 8029ef0:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 8029ed8 <__kernel_rem_pio2f+0x2f8>
 8029ef4:	eeb4 0ac7 	vcmpe.f32	s0, s14
 8029ef8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029efc:	db19      	blt.n	8029f32 <__kernel_rem_pio2f+0x352>
 8029efe:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 8029edc <__kernel_rem_pio2f+0x2fc>
 8029f02:	ee60 7a27 	vmul.f32	s15, s0, s15
 8029f06:	aa08      	add	r2, sp, #32
 8029f08:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8029f0c:	1c74      	adds	r4, r6, #1
 8029f0e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8029f12:	3508      	adds	r5, #8
 8029f14:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8029f18:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8029f1c:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8029f20:	ee10 3a10 	vmov	r3, s0
 8029f24:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 8029f28:	ee17 3a90 	vmov	r3, s15
 8029f2c:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8029f30:	e74b      	b.n	8029dca <__kernel_rem_pio2f+0x1ea>
 8029f32:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8029f36:	aa08      	add	r2, sp, #32
 8029f38:	ee10 3a10 	vmov	r3, s0
 8029f3c:	4634      	mov	r4, r6
 8029f3e:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 8029f42:	e742      	b.n	8029dca <__kernel_rem_pio2f+0x1ea>
 8029f44:	a808      	add	r0, sp, #32
 8029f46:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 8029f4a:	9001      	str	r0, [sp, #4]
 8029f4c:	ee07 0a90 	vmov	s15, r0
 8029f50:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8029f54:	3b01      	subs	r3, #1
 8029f56:	ee67 7a80 	vmul.f32	s15, s15, s0
 8029f5a:	ee20 0a07 	vmul.f32	s0, s0, s14
 8029f5e:	ed62 7a01 	vstmdb	r2!, {s15}
 8029f62:	e73f      	b.n	8029de4 <__kernel_rem_pio2f+0x204>
 8029f64:	ecf6 6a01 	vldmia	r6!, {s13}
 8029f68:	ecb5 7a01 	vldmia	r5!, {s14}
 8029f6c:	eee6 7a87 	vfma.f32	s15, s13, s14
 8029f70:	3001      	adds	r0, #1
 8029f72:	4550      	cmp	r0, sl
 8029f74:	dc01      	bgt.n	8029f7a <__kernel_rem_pio2f+0x39a>
 8029f76:	4290      	cmp	r0, r2
 8029f78:	ddf4      	ble.n	8029f64 <__kernel_rem_pio2f+0x384>
 8029f7a:	a858      	add	r0, sp, #352	; 0x160
 8029f7c:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8029f80:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 8029f84:	3b01      	subs	r3, #1
 8029f86:	e731      	b.n	8029dec <__kernel_rem_pio2f+0x20c>
 8029f88:	9b66      	ldr	r3, [sp, #408]	; 0x198
 8029f8a:	2b02      	cmp	r3, #2
 8029f8c:	dc09      	bgt.n	8029fa2 <__kernel_rem_pio2f+0x3c2>
 8029f8e:	2b00      	cmp	r3, #0
 8029f90:	dc2b      	bgt.n	8029fea <__kernel_rem_pio2f+0x40a>
 8029f92:	d044      	beq.n	802a01e <__kernel_rem_pio2f+0x43e>
 8029f94:	f009 0007 	and.w	r0, r9, #7
 8029f98:	b059      	add	sp, #356	; 0x164
 8029f9a:	ecbd 8b04 	vpop	{d8-d9}
 8029f9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029fa2:	9b66      	ldr	r3, [sp, #408]	; 0x198
 8029fa4:	2b03      	cmp	r3, #3
 8029fa6:	d1f5      	bne.n	8029f94 <__kernel_rem_pio2f+0x3b4>
 8029fa8:	aa30      	add	r2, sp, #192	; 0xc0
 8029faa:	1f0b      	subs	r3, r1, #4
 8029fac:	4413      	add	r3, r2
 8029fae:	461a      	mov	r2, r3
 8029fb0:	4620      	mov	r0, r4
 8029fb2:	2800      	cmp	r0, #0
 8029fb4:	f1a2 0204 	sub.w	r2, r2, #4
 8029fb8:	dc52      	bgt.n	802a060 <__kernel_rem_pio2f+0x480>
 8029fba:	4622      	mov	r2, r4
 8029fbc:	2a01      	cmp	r2, #1
 8029fbe:	f1a3 0304 	sub.w	r3, r3, #4
 8029fc2:	dc5d      	bgt.n	802a080 <__kernel_rem_pio2f+0x4a0>
 8029fc4:	ab30      	add	r3, sp, #192	; 0xc0
 8029fc6:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 8029ee0 <__kernel_rem_pio2f+0x300>
 8029fca:	440b      	add	r3, r1
 8029fcc:	2c01      	cmp	r4, #1
 8029fce:	dc67      	bgt.n	802a0a0 <__kernel_rem_pio2f+0x4c0>
 8029fd0:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8029fd4:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 8029fd8:	2f00      	cmp	r7, #0
 8029fda:	d167      	bne.n	802a0ac <__kernel_rem_pio2f+0x4cc>
 8029fdc:	edc8 6a00 	vstr	s13, [r8]
 8029fe0:	ed88 7a01 	vstr	s14, [r8, #4]
 8029fe4:	edc8 7a02 	vstr	s15, [r8, #8]
 8029fe8:	e7d4      	b.n	8029f94 <__kernel_rem_pio2f+0x3b4>
 8029fea:	ab30      	add	r3, sp, #192	; 0xc0
 8029fec:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 8029ee0 <__kernel_rem_pio2f+0x300>
 8029ff0:	440b      	add	r3, r1
 8029ff2:	4622      	mov	r2, r4
 8029ff4:	2a00      	cmp	r2, #0
 8029ff6:	da24      	bge.n	802a042 <__kernel_rem_pio2f+0x462>
 8029ff8:	b34f      	cbz	r7, 802a04e <__kernel_rem_pio2f+0x46e>
 8029ffa:	eef1 7a47 	vneg.f32	s15, s14
 8029ffe:	edc8 7a00 	vstr	s15, [r8]
 802a002:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 802a006:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a00a:	aa31      	add	r2, sp, #196	; 0xc4
 802a00c:	2301      	movs	r3, #1
 802a00e:	429c      	cmp	r4, r3
 802a010:	da20      	bge.n	802a054 <__kernel_rem_pio2f+0x474>
 802a012:	b10f      	cbz	r7, 802a018 <__kernel_rem_pio2f+0x438>
 802a014:	eef1 7a67 	vneg.f32	s15, s15
 802a018:	edc8 7a01 	vstr	s15, [r8, #4]
 802a01c:	e7ba      	b.n	8029f94 <__kernel_rem_pio2f+0x3b4>
 802a01e:	ab30      	add	r3, sp, #192	; 0xc0
 802a020:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 8029ee0 <__kernel_rem_pio2f+0x300>
 802a024:	440b      	add	r3, r1
 802a026:	2c00      	cmp	r4, #0
 802a028:	da05      	bge.n	802a036 <__kernel_rem_pio2f+0x456>
 802a02a:	b10f      	cbz	r7, 802a030 <__kernel_rem_pio2f+0x450>
 802a02c:	eef1 7a67 	vneg.f32	s15, s15
 802a030:	edc8 7a00 	vstr	s15, [r8]
 802a034:	e7ae      	b.n	8029f94 <__kernel_rem_pio2f+0x3b4>
 802a036:	ed33 7a01 	vldmdb	r3!, {s14}
 802a03a:	3c01      	subs	r4, #1
 802a03c:	ee77 7a87 	vadd.f32	s15, s15, s14
 802a040:	e7f1      	b.n	802a026 <__kernel_rem_pio2f+0x446>
 802a042:	ed73 7a01 	vldmdb	r3!, {s15}
 802a046:	3a01      	subs	r2, #1
 802a048:	ee37 7a27 	vadd.f32	s14, s14, s15
 802a04c:	e7d2      	b.n	8029ff4 <__kernel_rem_pio2f+0x414>
 802a04e:	eef0 7a47 	vmov.f32	s15, s14
 802a052:	e7d4      	b.n	8029ffe <__kernel_rem_pio2f+0x41e>
 802a054:	ecb2 7a01 	vldmia	r2!, {s14}
 802a058:	3301      	adds	r3, #1
 802a05a:	ee77 7a87 	vadd.f32	s15, s15, s14
 802a05e:	e7d6      	b.n	802a00e <__kernel_rem_pio2f+0x42e>
 802a060:	edd2 7a00 	vldr	s15, [r2]
 802a064:	edd2 6a01 	vldr	s13, [r2, #4]
 802a068:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802a06c:	3801      	subs	r0, #1
 802a06e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a072:	ed82 7a00 	vstr	s14, [r2]
 802a076:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802a07a:	edc2 7a01 	vstr	s15, [r2, #4]
 802a07e:	e798      	b.n	8029fb2 <__kernel_rem_pio2f+0x3d2>
 802a080:	edd3 7a00 	vldr	s15, [r3]
 802a084:	edd3 6a01 	vldr	s13, [r3, #4]
 802a088:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802a08c:	3a01      	subs	r2, #1
 802a08e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a092:	ed83 7a00 	vstr	s14, [r3]
 802a096:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802a09a:	edc3 7a01 	vstr	s15, [r3, #4]
 802a09e:	e78d      	b.n	8029fbc <__kernel_rem_pio2f+0x3dc>
 802a0a0:	ed33 7a01 	vldmdb	r3!, {s14}
 802a0a4:	3c01      	subs	r4, #1
 802a0a6:	ee77 7a87 	vadd.f32	s15, s15, s14
 802a0aa:	e78f      	b.n	8029fcc <__kernel_rem_pio2f+0x3ec>
 802a0ac:	eef1 6a66 	vneg.f32	s13, s13
 802a0b0:	eeb1 7a47 	vneg.f32	s14, s14
 802a0b4:	edc8 6a00 	vstr	s13, [r8]
 802a0b8:	ed88 7a01 	vstr	s14, [r8, #4]
 802a0bc:	eef1 7a67 	vneg.f32	s15, s15
 802a0c0:	e790      	b.n	8029fe4 <__kernel_rem_pio2f+0x404>
 802a0c2:	bf00      	nop

0802a0c4 <abort>:
 802a0c4:	b508      	push	{r3, lr}
 802a0c6:	2006      	movs	r0, #6
 802a0c8:	f000 fa3a 	bl	802a540 <raise>
 802a0cc:	2001      	movs	r0, #1
 802a0ce:	f7d8 fa0d 	bl	80024ec <_exit>
	...

0802a0d4 <__assert_func>:
 802a0d4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802a0d6:	4614      	mov	r4, r2
 802a0d8:	461a      	mov	r2, r3
 802a0da:	4b09      	ldr	r3, [pc, #36]	; (802a100 <__assert_func+0x2c>)
 802a0dc:	681b      	ldr	r3, [r3, #0]
 802a0de:	4605      	mov	r5, r0
 802a0e0:	68d8      	ldr	r0, [r3, #12]
 802a0e2:	b14c      	cbz	r4, 802a0f8 <__assert_func+0x24>
 802a0e4:	4b07      	ldr	r3, [pc, #28]	; (802a104 <__assert_func+0x30>)
 802a0e6:	9100      	str	r1, [sp, #0]
 802a0e8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802a0ec:	4906      	ldr	r1, [pc, #24]	; (802a108 <__assert_func+0x34>)
 802a0ee:	462b      	mov	r3, r5
 802a0f0:	f000 f982 	bl	802a3f8 <fiprintf>
 802a0f4:	f7ff ffe6 	bl	802a0c4 <abort>
 802a0f8:	4b04      	ldr	r3, [pc, #16]	; (802a10c <__assert_func+0x38>)
 802a0fa:	461c      	mov	r4, r3
 802a0fc:	e7f3      	b.n	802a0e6 <__assert_func+0x12>
 802a0fe:	bf00      	nop
 802a100:	20000160 	.word	0x20000160
 802a104:	080426b0 	.word	0x080426b0
 802a108:	080426bd 	.word	0x080426bd
 802a10c:	080426eb 	.word	0x080426eb

0802a110 <atexit>:
 802a110:	2300      	movs	r3, #0
 802a112:	4601      	mov	r1, r0
 802a114:	461a      	mov	r2, r3
 802a116:	4618      	mov	r0, r3
 802a118:	f000 bb16 	b.w	802a748 <__register_exitproc>

0802a11c <malloc>:
 802a11c:	4b02      	ldr	r3, [pc, #8]	; (802a128 <malloc+0xc>)
 802a11e:	4601      	mov	r1, r0
 802a120:	6818      	ldr	r0, [r3, #0]
 802a122:	f000 b82b 	b.w	802a17c <_malloc_r>
 802a126:	bf00      	nop
 802a128:	20000160 	.word	0x20000160

0802a12c <free>:
 802a12c:	4b02      	ldr	r3, [pc, #8]	; (802a138 <free+0xc>)
 802a12e:	4601      	mov	r1, r0
 802a130:	6818      	ldr	r0, [r3, #0]
 802a132:	f000 bb67 	b.w	802a804 <_free_r>
 802a136:	bf00      	nop
 802a138:	20000160 	.word	0x20000160

0802a13c <sbrk_aligned>:
 802a13c:	b570      	push	{r4, r5, r6, lr}
 802a13e:	4e0e      	ldr	r6, [pc, #56]	; (802a178 <sbrk_aligned+0x3c>)
 802a140:	460c      	mov	r4, r1
 802a142:	6831      	ldr	r1, [r6, #0]
 802a144:	4605      	mov	r5, r0
 802a146:	b911      	cbnz	r1, 802a14e <sbrk_aligned+0x12>
 802a148:	f000 faa0 	bl	802a68c <_sbrk_r>
 802a14c:	6030      	str	r0, [r6, #0]
 802a14e:	4621      	mov	r1, r4
 802a150:	4628      	mov	r0, r5
 802a152:	f000 fa9b 	bl	802a68c <_sbrk_r>
 802a156:	1c43      	adds	r3, r0, #1
 802a158:	d00a      	beq.n	802a170 <sbrk_aligned+0x34>
 802a15a:	1cc4      	adds	r4, r0, #3
 802a15c:	f024 0403 	bic.w	r4, r4, #3
 802a160:	42a0      	cmp	r0, r4
 802a162:	d007      	beq.n	802a174 <sbrk_aligned+0x38>
 802a164:	1a21      	subs	r1, r4, r0
 802a166:	4628      	mov	r0, r5
 802a168:	f000 fa90 	bl	802a68c <_sbrk_r>
 802a16c:	3001      	adds	r0, #1
 802a16e:	d101      	bne.n	802a174 <sbrk_aligned+0x38>
 802a170:	f04f 34ff 	mov.w	r4, #4294967295
 802a174:	4620      	mov	r0, r4
 802a176:	bd70      	pop	{r4, r5, r6, pc}
 802a178:	2001387c 	.word	0x2001387c

0802a17c <_malloc_r>:
 802a17c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802a180:	1ccd      	adds	r5, r1, #3
 802a182:	f025 0503 	bic.w	r5, r5, #3
 802a186:	3508      	adds	r5, #8
 802a188:	2d0c      	cmp	r5, #12
 802a18a:	bf38      	it	cc
 802a18c:	250c      	movcc	r5, #12
 802a18e:	2d00      	cmp	r5, #0
 802a190:	4607      	mov	r7, r0
 802a192:	db01      	blt.n	802a198 <_malloc_r+0x1c>
 802a194:	42a9      	cmp	r1, r5
 802a196:	d905      	bls.n	802a1a4 <_malloc_r+0x28>
 802a198:	230c      	movs	r3, #12
 802a19a:	603b      	str	r3, [r7, #0]
 802a19c:	2600      	movs	r6, #0
 802a19e:	4630      	mov	r0, r6
 802a1a0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802a1a4:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 802a278 <_malloc_r+0xfc>
 802a1a8:	f000 f868 	bl	802a27c <__malloc_lock>
 802a1ac:	f8d8 3000 	ldr.w	r3, [r8]
 802a1b0:	461c      	mov	r4, r3
 802a1b2:	bb5c      	cbnz	r4, 802a20c <_malloc_r+0x90>
 802a1b4:	4629      	mov	r1, r5
 802a1b6:	4638      	mov	r0, r7
 802a1b8:	f7ff ffc0 	bl	802a13c <sbrk_aligned>
 802a1bc:	1c43      	adds	r3, r0, #1
 802a1be:	4604      	mov	r4, r0
 802a1c0:	d155      	bne.n	802a26e <_malloc_r+0xf2>
 802a1c2:	f8d8 4000 	ldr.w	r4, [r8]
 802a1c6:	4626      	mov	r6, r4
 802a1c8:	2e00      	cmp	r6, #0
 802a1ca:	d145      	bne.n	802a258 <_malloc_r+0xdc>
 802a1cc:	2c00      	cmp	r4, #0
 802a1ce:	d048      	beq.n	802a262 <_malloc_r+0xe6>
 802a1d0:	6823      	ldr	r3, [r4, #0]
 802a1d2:	4631      	mov	r1, r6
 802a1d4:	4638      	mov	r0, r7
 802a1d6:	eb04 0903 	add.w	r9, r4, r3
 802a1da:	f000 fa57 	bl	802a68c <_sbrk_r>
 802a1de:	4581      	cmp	r9, r0
 802a1e0:	d13f      	bne.n	802a262 <_malloc_r+0xe6>
 802a1e2:	6821      	ldr	r1, [r4, #0]
 802a1e4:	1a6d      	subs	r5, r5, r1
 802a1e6:	4629      	mov	r1, r5
 802a1e8:	4638      	mov	r0, r7
 802a1ea:	f7ff ffa7 	bl	802a13c <sbrk_aligned>
 802a1ee:	3001      	adds	r0, #1
 802a1f0:	d037      	beq.n	802a262 <_malloc_r+0xe6>
 802a1f2:	6823      	ldr	r3, [r4, #0]
 802a1f4:	442b      	add	r3, r5
 802a1f6:	6023      	str	r3, [r4, #0]
 802a1f8:	f8d8 3000 	ldr.w	r3, [r8]
 802a1fc:	2b00      	cmp	r3, #0
 802a1fe:	d038      	beq.n	802a272 <_malloc_r+0xf6>
 802a200:	685a      	ldr	r2, [r3, #4]
 802a202:	42a2      	cmp	r2, r4
 802a204:	d12b      	bne.n	802a25e <_malloc_r+0xe2>
 802a206:	2200      	movs	r2, #0
 802a208:	605a      	str	r2, [r3, #4]
 802a20a:	e00f      	b.n	802a22c <_malloc_r+0xb0>
 802a20c:	6822      	ldr	r2, [r4, #0]
 802a20e:	1b52      	subs	r2, r2, r5
 802a210:	d41f      	bmi.n	802a252 <_malloc_r+0xd6>
 802a212:	2a0b      	cmp	r2, #11
 802a214:	d917      	bls.n	802a246 <_malloc_r+0xca>
 802a216:	1961      	adds	r1, r4, r5
 802a218:	42a3      	cmp	r3, r4
 802a21a:	6025      	str	r5, [r4, #0]
 802a21c:	bf18      	it	ne
 802a21e:	6059      	strne	r1, [r3, #4]
 802a220:	6863      	ldr	r3, [r4, #4]
 802a222:	bf08      	it	eq
 802a224:	f8c8 1000 	streq.w	r1, [r8]
 802a228:	5162      	str	r2, [r4, r5]
 802a22a:	604b      	str	r3, [r1, #4]
 802a22c:	4638      	mov	r0, r7
 802a22e:	f104 060b 	add.w	r6, r4, #11
 802a232:	f000 f829 	bl	802a288 <__malloc_unlock>
 802a236:	f026 0607 	bic.w	r6, r6, #7
 802a23a:	1d23      	adds	r3, r4, #4
 802a23c:	1af2      	subs	r2, r6, r3
 802a23e:	d0ae      	beq.n	802a19e <_malloc_r+0x22>
 802a240:	1b9b      	subs	r3, r3, r6
 802a242:	50a3      	str	r3, [r4, r2]
 802a244:	e7ab      	b.n	802a19e <_malloc_r+0x22>
 802a246:	42a3      	cmp	r3, r4
 802a248:	6862      	ldr	r2, [r4, #4]
 802a24a:	d1dd      	bne.n	802a208 <_malloc_r+0x8c>
 802a24c:	f8c8 2000 	str.w	r2, [r8]
 802a250:	e7ec      	b.n	802a22c <_malloc_r+0xb0>
 802a252:	4623      	mov	r3, r4
 802a254:	6864      	ldr	r4, [r4, #4]
 802a256:	e7ac      	b.n	802a1b2 <_malloc_r+0x36>
 802a258:	4634      	mov	r4, r6
 802a25a:	6876      	ldr	r6, [r6, #4]
 802a25c:	e7b4      	b.n	802a1c8 <_malloc_r+0x4c>
 802a25e:	4613      	mov	r3, r2
 802a260:	e7cc      	b.n	802a1fc <_malloc_r+0x80>
 802a262:	230c      	movs	r3, #12
 802a264:	603b      	str	r3, [r7, #0]
 802a266:	4638      	mov	r0, r7
 802a268:	f000 f80e 	bl	802a288 <__malloc_unlock>
 802a26c:	e797      	b.n	802a19e <_malloc_r+0x22>
 802a26e:	6025      	str	r5, [r4, #0]
 802a270:	e7dc      	b.n	802a22c <_malloc_r+0xb0>
 802a272:	605b      	str	r3, [r3, #4]
 802a274:	deff      	udf	#255	; 0xff
 802a276:	bf00      	nop
 802a278:	20013878 	.word	0x20013878

0802a27c <__malloc_lock>:
 802a27c:	4801      	ldr	r0, [pc, #4]	; (802a284 <__malloc_lock+0x8>)
 802a27e:	f000 ba52 	b.w	802a726 <__retarget_lock_acquire_recursive>
 802a282:	bf00      	nop
 802a284:	200139c1 	.word	0x200139c1

0802a288 <__malloc_unlock>:
 802a288:	4801      	ldr	r0, [pc, #4]	; (802a290 <__malloc_unlock+0x8>)
 802a28a:	f000 ba4d 	b.w	802a728 <__retarget_lock_release_recursive>
 802a28e:	bf00      	nop
 802a290:	200139c1 	.word	0x200139c1

0802a294 <__cxa_atexit>:
 802a294:	b510      	push	{r4, lr}
 802a296:	4c05      	ldr	r4, [pc, #20]	; (802a2ac <__cxa_atexit+0x18>)
 802a298:	4613      	mov	r3, r2
 802a29a:	b12c      	cbz	r4, 802a2a8 <__cxa_atexit+0x14>
 802a29c:	460a      	mov	r2, r1
 802a29e:	4601      	mov	r1, r0
 802a2a0:	2002      	movs	r0, #2
 802a2a2:	f000 fa51 	bl	802a748 <__register_exitproc>
 802a2a6:	bd10      	pop	{r4, pc}
 802a2a8:	4620      	mov	r0, r4
 802a2aa:	e7fc      	b.n	802a2a6 <__cxa_atexit+0x12>
 802a2ac:	0802a749 	.word	0x0802a749

0802a2b0 <std>:
 802a2b0:	2300      	movs	r3, #0
 802a2b2:	b510      	push	{r4, lr}
 802a2b4:	4604      	mov	r4, r0
 802a2b6:	e9c0 3300 	strd	r3, r3, [r0]
 802a2ba:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802a2be:	6083      	str	r3, [r0, #8]
 802a2c0:	8181      	strh	r1, [r0, #12]
 802a2c2:	6643      	str	r3, [r0, #100]	; 0x64
 802a2c4:	81c2      	strh	r2, [r0, #14]
 802a2c6:	6183      	str	r3, [r0, #24]
 802a2c8:	4619      	mov	r1, r3
 802a2ca:	2208      	movs	r2, #8
 802a2cc:	305c      	adds	r0, #92	; 0x5c
 802a2ce:	f000 f906 	bl	802a4de <memset>
 802a2d2:	4b0d      	ldr	r3, [pc, #52]	; (802a308 <std+0x58>)
 802a2d4:	6263      	str	r3, [r4, #36]	; 0x24
 802a2d6:	4b0d      	ldr	r3, [pc, #52]	; (802a30c <std+0x5c>)
 802a2d8:	62a3      	str	r3, [r4, #40]	; 0x28
 802a2da:	4b0d      	ldr	r3, [pc, #52]	; (802a310 <std+0x60>)
 802a2dc:	62e3      	str	r3, [r4, #44]	; 0x2c
 802a2de:	4b0d      	ldr	r3, [pc, #52]	; (802a314 <std+0x64>)
 802a2e0:	6323      	str	r3, [r4, #48]	; 0x30
 802a2e2:	4b0d      	ldr	r3, [pc, #52]	; (802a318 <std+0x68>)
 802a2e4:	6224      	str	r4, [r4, #32]
 802a2e6:	429c      	cmp	r4, r3
 802a2e8:	d006      	beq.n	802a2f8 <std+0x48>
 802a2ea:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802a2ee:	4294      	cmp	r4, r2
 802a2f0:	d002      	beq.n	802a2f8 <std+0x48>
 802a2f2:	33d0      	adds	r3, #208	; 0xd0
 802a2f4:	429c      	cmp	r4, r3
 802a2f6:	d105      	bne.n	802a304 <std+0x54>
 802a2f8:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802a2fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802a300:	f000 ba10 	b.w	802a724 <__retarget_lock_init_recursive>
 802a304:	bd10      	pop	{r4, pc}
 802a306:	bf00      	nop
 802a308:	0802a459 	.word	0x0802a459
 802a30c:	0802a47b 	.word	0x0802a47b
 802a310:	0802a4b3 	.word	0x0802a4b3
 802a314:	0802a4d7 	.word	0x0802a4d7
 802a318:	20013880 	.word	0x20013880

0802a31c <stdio_exit_handler>:
 802a31c:	4a02      	ldr	r2, [pc, #8]	; (802a328 <stdio_exit_handler+0xc>)
 802a31e:	4903      	ldr	r1, [pc, #12]	; (802a32c <stdio_exit_handler+0x10>)
 802a320:	4803      	ldr	r0, [pc, #12]	; (802a330 <stdio_exit_handler+0x14>)
 802a322:	f000 b87b 	b.w	802a41c <_fwalk_sglue>
 802a326:	bf00      	nop
 802a328:	20000108 	.word	0x20000108
 802a32c:	0802af51 	.word	0x0802af51
 802a330:	20000114 	.word	0x20000114

0802a334 <cleanup_stdio>:
 802a334:	6841      	ldr	r1, [r0, #4]
 802a336:	4b0c      	ldr	r3, [pc, #48]	; (802a368 <cleanup_stdio+0x34>)
 802a338:	4299      	cmp	r1, r3
 802a33a:	b510      	push	{r4, lr}
 802a33c:	4604      	mov	r4, r0
 802a33e:	d001      	beq.n	802a344 <cleanup_stdio+0x10>
 802a340:	f000 fe06 	bl	802af50 <_fflush_r>
 802a344:	68a1      	ldr	r1, [r4, #8]
 802a346:	4b09      	ldr	r3, [pc, #36]	; (802a36c <cleanup_stdio+0x38>)
 802a348:	4299      	cmp	r1, r3
 802a34a:	d002      	beq.n	802a352 <cleanup_stdio+0x1e>
 802a34c:	4620      	mov	r0, r4
 802a34e:	f000 fdff 	bl	802af50 <_fflush_r>
 802a352:	68e1      	ldr	r1, [r4, #12]
 802a354:	4b06      	ldr	r3, [pc, #24]	; (802a370 <cleanup_stdio+0x3c>)
 802a356:	4299      	cmp	r1, r3
 802a358:	d004      	beq.n	802a364 <cleanup_stdio+0x30>
 802a35a:	4620      	mov	r0, r4
 802a35c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802a360:	f000 bdf6 	b.w	802af50 <_fflush_r>
 802a364:	bd10      	pop	{r4, pc}
 802a366:	bf00      	nop
 802a368:	20013880 	.word	0x20013880
 802a36c:	200138e8 	.word	0x200138e8
 802a370:	20013950 	.word	0x20013950

0802a374 <global_stdio_init.part.0>:
 802a374:	b510      	push	{r4, lr}
 802a376:	4b0b      	ldr	r3, [pc, #44]	; (802a3a4 <global_stdio_init.part.0+0x30>)
 802a378:	4c0b      	ldr	r4, [pc, #44]	; (802a3a8 <global_stdio_init.part.0+0x34>)
 802a37a:	4a0c      	ldr	r2, [pc, #48]	; (802a3ac <global_stdio_init.part.0+0x38>)
 802a37c:	601a      	str	r2, [r3, #0]
 802a37e:	4620      	mov	r0, r4
 802a380:	2200      	movs	r2, #0
 802a382:	2104      	movs	r1, #4
 802a384:	f7ff ff94 	bl	802a2b0 <std>
 802a388:	f104 0068 	add.w	r0, r4, #104	; 0x68
 802a38c:	2201      	movs	r2, #1
 802a38e:	2109      	movs	r1, #9
 802a390:	f7ff ff8e 	bl	802a2b0 <std>
 802a394:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 802a398:	2202      	movs	r2, #2
 802a39a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802a39e:	2112      	movs	r1, #18
 802a3a0:	f7ff bf86 	b.w	802a2b0 <std>
 802a3a4:	200139b8 	.word	0x200139b8
 802a3a8:	20013880 	.word	0x20013880
 802a3ac:	0802a31d 	.word	0x0802a31d

0802a3b0 <__sfp_lock_acquire>:
 802a3b0:	4801      	ldr	r0, [pc, #4]	; (802a3b8 <__sfp_lock_acquire+0x8>)
 802a3b2:	f000 b9b8 	b.w	802a726 <__retarget_lock_acquire_recursive>
 802a3b6:	bf00      	nop
 802a3b8:	200139c2 	.word	0x200139c2

0802a3bc <__sfp_lock_release>:
 802a3bc:	4801      	ldr	r0, [pc, #4]	; (802a3c4 <__sfp_lock_release+0x8>)
 802a3be:	f000 b9b3 	b.w	802a728 <__retarget_lock_release_recursive>
 802a3c2:	bf00      	nop
 802a3c4:	200139c2 	.word	0x200139c2

0802a3c8 <__sinit>:
 802a3c8:	b510      	push	{r4, lr}
 802a3ca:	4604      	mov	r4, r0
 802a3cc:	f7ff fff0 	bl	802a3b0 <__sfp_lock_acquire>
 802a3d0:	6a23      	ldr	r3, [r4, #32]
 802a3d2:	b11b      	cbz	r3, 802a3dc <__sinit+0x14>
 802a3d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802a3d8:	f7ff bff0 	b.w	802a3bc <__sfp_lock_release>
 802a3dc:	4b04      	ldr	r3, [pc, #16]	; (802a3f0 <__sinit+0x28>)
 802a3de:	6223      	str	r3, [r4, #32]
 802a3e0:	4b04      	ldr	r3, [pc, #16]	; (802a3f4 <__sinit+0x2c>)
 802a3e2:	681b      	ldr	r3, [r3, #0]
 802a3e4:	2b00      	cmp	r3, #0
 802a3e6:	d1f5      	bne.n	802a3d4 <__sinit+0xc>
 802a3e8:	f7ff ffc4 	bl	802a374 <global_stdio_init.part.0>
 802a3ec:	e7f2      	b.n	802a3d4 <__sinit+0xc>
 802a3ee:	bf00      	nop
 802a3f0:	0802a335 	.word	0x0802a335
 802a3f4:	200139b8 	.word	0x200139b8

0802a3f8 <fiprintf>:
 802a3f8:	b40e      	push	{r1, r2, r3}
 802a3fa:	b503      	push	{r0, r1, lr}
 802a3fc:	4601      	mov	r1, r0
 802a3fe:	ab03      	add	r3, sp, #12
 802a400:	4805      	ldr	r0, [pc, #20]	; (802a418 <fiprintf+0x20>)
 802a402:	f853 2b04 	ldr.w	r2, [r3], #4
 802a406:	6800      	ldr	r0, [r0, #0]
 802a408:	9301      	str	r3, [sp, #4]
 802a40a:	f000 fa71 	bl	802a8f0 <_vfiprintf_r>
 802a40e:	b002      	add	sp, #8
 802a410:	f85d eb04 	ldr.w	lr, [sp], #4
 802a414:	b003      	add	sp, #12
 802a416:	4770      	bx	lr
 802a418:	20000160 	.word	0x20000160

0802a41c <_fwalk_sglue>:
 802a41c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802a420:	4607      	mov	r7, r0
 802a422:	4688      	mov	r8, r1
 802a424:	4614      	mov	r4, r2
 802a426:	2600      	movs	r6, #0
 802a428:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802a42c:	f1b9 0901 	subs.w	r9, r9, #1
 802a430:	d505      	bpl.n	802a43e <_fwalk_sglue+0x22>
 802a432:	6824      	ldr	r4, [r4, #0]
 802a434:	2c00      	cmp	r4, #0
 802a436:	d1f7      	bne.n	802a428 <_fwalk_sglue+0xc>
 802a438:	4630      	mov	r0, r6
 802a43a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802a43e:	89ab      	ldrh	r3, [r5, #12]
 802a440:	2b01      	cmp	r3, #1
 802a442:	d907      	bls.n	802a454 <_fwalk_sglue+0x38>
 802a444:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802a448:	3301      	adds	r3, #1
 802a44a:	d003      	beq.n	802a454 <_fwalk_sglue+0x38>
 802a44c:	4629      	mov	r1, r5
 802a44e:	4638      	mov	r0, r7
 802a450:	47c0      	blx	r8
 802a452:	4306      	orrs	r6, r0
 802a454:	3568      	adds	r5, #104	; 0x68
 802a456:	e7e9      	b.n	802a42c <_fwalk_sglue+0x10>

0802a458 <__sread>:
 802a458:	b510      	push	{r4, lr}
 802a45a:	460c      	mov	r4, r1
 802a45c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802a460:	f000 f8ee 	bl	802a640 <_read_r>
 802a464:	2800      	cmp	r0, #0
 802a466:	bfab      	itete	ge
 802a468:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802a46a:	89a3      	ldrhlt	r3, [r4, #12]
 802a46c:	181b      	addge	r3, r3, r0
 802a46e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802a472:	bfac      	ite	ge
 802a474:	6563      	strge	r3, [r4, #84]	; 0x54
 802a476:	81a3      	strhlt	r3, [r4, #12]
 802a478:	bd10      	pop	{r4, pc}

0802a47a <__swrite>:
 802a47a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802a47e:	461f      	mov	r7, r3
 802a480:	898b      	ldrh	r3, [r1, #12]
 802a482:	05db      	lsls	r3, r3, #23
 802a484:	4605      	mov	r5, r0
 802a486:	460c      	mov	r4, r1
 802a488:	4616      	mov	r6, r2
 802a48a:	d505      	bpl.n	802a498 <__swrite+0x1e>
 802a48c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802a490:	2302      	movs	r3, #2
 802a492:	2200      	movs	r2, #0
 802a494:	f000 f8c2 	bl	802a61c <_lseek_r>
 802a498:	89a3      	ldrh	r3, [r4, #12]
 802a49a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802a49e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802a4a2:	81a3      	strh	r3, [r4, #12]
 802a4a4:	4632      	mov	r2, r6
 802a4a6:	463b      	mov	r3, r7
 802a4a8:	4628      	mov	r0, r5
 802a4aa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a4ae:	f000 b8fd 	b.w	802a6ac <_write_r>

0802a4b2 <__sseek>:
 802a4b2:	b510      	push	{r4, lr}
 802a4b4:	460c      	mov	r4, r1
 802a4b6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802a4ba:	f000 f8af 	bl	802a61c <_lseek_r>
 802a4be:	1c43      	adds	r3, r0, #1
 802a4c0:	89a3      	ldrh	r3, [r4, #12]
 802a4c2:	bf15      	itete	ne
 802a4c4:	6560      	strne	r0, [r4, #84]	; 0x54
 802a4c6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802a4ca:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802a4ce:	81a3      	strheq	r3, [r4, #12]
 802a4d0:	bf18      	it	ne
 802a4d2:	81a3      	strhne	r3, [r4, #12]
 802a4d4:	bd10      	pop	{r4, pc}

0802a4d6 <__sclose>:
 802a4d6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802a4da:	f000 b839 	b.w	802a550 <_close_r>

0802a4de <memset>:
 802a4de:	4402      	add	r2, r0
 802a4e0:	4603      	mov	r3, r0
 802a4e2:	4293      	cmp	r3, r2
 802a4e4:	d100      	bne.n	802a4e8 <memset+0xa>
 802a4e6:	4770      	bx	lr
 802a4e8:	f803 1b01 	strb.w	r1, [r3], #1
 802a4ec:	e7f9      	b.n	802a4e2 <memset+0x4>

0802a4ee <_raise_r>:
 802a4ee:	291f      	cmp	r1, #31
 802a4f0:	b538      	push	{r3, r4, r5, lr}
 802a4f2:	4604      	mov	r4, r0
 802a4f4:	460d      	mov	r5, r1
 802a4f6:	d904      	bls.n	802a502 <_raise_r+0x14>
 802a4f8:	2316      	movs	r3, #22
 802a4fa:	6003      	str	r3, [r0, #0]
 802a4fc:	f04f 30ff 	mov.w	r0, #4294967295
 802a500:	bd38      	pop	{r3, r4, r5, pc}
 802a502:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 802a504:	b112      	cbz	r2, 802a50c <_raise_r+0x1e>
 802a506:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802a50a:	b94b      	cbnz	r3, 802a520 <_raise_r+0x32>
 802a50c:	4620      	mov	r0, r4
 802a50e:	f000 f8bb 	bl	802a688 <_getpid_r>
 802a512:	462a      	mov	r2, r5
 802a514:	4601      	mov	r1, r0
 802a516:	4620      	mov	r0, r4
 802a518:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802a51c:	f000 b8a2 	b.w	802a664 <_kill_r>
 802a520:	2b01      	cmp	r3, #1
 802a522:	d00a      	beq.n	802a53a <_raise_r+0x4c>
 802a524:	1c59      	adds	r1, r3, #1
 802a526:	d103      	bne.n	802a530 <_raise_r+0x42>
 802a528:	2316      	movs	r3, #22
 802a52a:	6003      	str	r3, [r0, #0]
 802a52c:	2001      	movs	r0, #1
 802a52e:	e7e7      	b.n	802a500 <_raise_r+0x12>
 802a530:	2400      	movs	r4, #0
 802a532:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802a536:	4628      	mov	r0, r5
 802a538:	4798      	blx	r3
 802a53a:	2000      	movs	r0, #0
 802a53c:	e7e0      	b.n	802a500 <_raise_r+0x12>
	...

0802a540 <raise>:
 802a540:	4b02      	ldr	r3, [pc, #8]	; (802a54c <raise+0xc>)
 802a542:	4601      	mov	r1, r0
 802a544:	6818      	ldr	r0, [r3, #0]
 802a546:	f7ff bfd2 	b.w	802a4ee <_raise_r>
 802a54a:	bf00      	nop
 802a54c:	20000160 	.word	0x20000160

0802a550 <_close_r>:
 802a550:	b538      	push	{r3, r4, r5, lr}
 802a552:	4d06      	ldr	r5, [pc, #24]	; (802a56c <_close_r+0x1c>)
 802a554:	2300      	movs	r3, #0
 802a556:	4604      	mov	r4, r0
 802a558:	4608      	mov	r0, r1
 802a55a:	602b      	str	r3, [r5, #0]
 802a55c:	f7d7 ffe8 	bl	8002530 <_close>
 802a560:	1c43      	adds	r3, r0, #1
 802a562:	d102      	bne.n	802a56a <_close_r+0x1a>
 802a564:	682b      	ldr	r3, [r5, #0]
 802a566:	b103      	cbz	r3, 802a56a <_close_r+0x1a>
 802a568:	6023      	str	r3, [r4, #0]
 802a56a:	bd38      	pop	{r3, r4, r5, pc}
 802a56c:	200139bc 	.word	0x200139bc

0802a570 <_reclaim_reent>:
 802a570:	4b29      	ldr	r3, [pc, #164]	; (802a618 <_reclaim_reent+0xa8>)
 802a572:	681b      	ldr	r3, [r3, #0]
 802a574:	4283      	cmp	r3, r0
 802a576:	b570      	push	{r4, r5, r6, lr}
 802a578:	4604      	mov	r4, r0
 802a57a:	d04b      	beq.n	802a614 <_reclaim_reent+0xa4>
 802a57c:	69c3      	ldr	r3, [r0, #28]
 802a57e:	b143      	cbz	r3, 802a592 <_reclaim_reent+0x22>
 802a580:	68db      	ldr	r3, [r3, #12]
 802a582:	2b00      	cmp	r3, #0
 802a584:	d144      	bne.n	802a610 <_reclaim_reent+0xa0>
 802a586:	69e3      	ldr	r3, [r4, #28]
 802a588:	6819      	ldr	r1, [r3, #0]
 802a58a:	b111      	cbz	r1, 802a592 <_reclaim_reent+0x22>
 802a58c:	4620      	mov	r0, r4
 802a58e:	f000 f939 	bl	802a804 <_free_r>
 802a592:	6961      	ldr	r1, [r4, #20]
 802a594:	b111      	cbz	r1, 802a59c <_reclaim_reent+0x2c>
 802a596:	4620      	mov	r0, r4
 802a598:	f000 f934 	bl	802a804 <_free_r>
 802a59c:	69e1      	ldr	r1, [r4, #28]
 802a59e:	b111      	cbz	r1, 802a5a6 <_reclaim_reent+0x36>
 802a5a0:	4620      	mov	r0, r4
 802a5a2:	f000 f92f 	bl	802a804 <_free_r>
 802a5a6:	6b21      	ldr	r1, [r4, #48]	; 0x30
 802a5a8:	b111      	cbz	r1, 802a5b0 <_reclaim_reent+0x40>
 802a5aa:	4620      	mov	r0, r4
 802a5ac:	f000 f92a 	bl	802a804 <_free_r>
 802a5b0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802a5b2:	b111      	cbz	r1, 802a5ba <_reclaim_reent+0x4a>
 802a5b4:	4620      	mov	r0, r4
 802a5b6:	f000 f925 	bl	802a804 <_free_r>
 802a5ba:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802a5bc:	b111      	cbz	r1, 802a5c4 <_reclaim_reent+0x54>
 802a5be:	4620      	mov	r0, r4
 802a5c0:	f000 f920 	bl	802a804 <_free_r>
 802a5c4:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802a5c6:	b111      	cbz	r1, 802a5ce <_reclaim_reent+0x5e>
 802a5c8:	4620      	mov	r0, r4
 802a5ca:	f000 f91b 	bl	802a804 <_free_r>
 802a5ce:	6c61      	ldr	r1, [r4, #68]	; 0x44
 802a5d0:	b111      	cbz	r1, 802a5d8 <_reclaim_reent+0x68>
 802a5d2:	4620      	mov	r0, r4
 802a5d4:	f000 f916 	bl	802a804 <_free_r>
 802a5d8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 802a5da:	b111      	cbz	r1, 802a5e2 <_reclaim_reent+0x72>
 802a5dc:	4620      	mov	r0, r4
 802a5de:	f000 f911 	bl	802a804 <_free_r>
 802a5e2:	6a23      	ldr	r3, [r4, #32]
 802a5e4:	b1b3      	cbz	r3, 802a614 <_reclaim_reent+0xa4>
 802a5e6:	4620      	mov	r0, r4
 802a5e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802a5ec:	4718      	bx	r3
 802a5ee:	5949      	ldr	r1, [r1, r5]
 802a5f0:	b941      	cbnz	r1, 802a604 <_reclaim_reent+0x94>
 802a5f2:	3504      	adds	r5, #4
 802a5f4:	69e3      	ldr	r3, [r4, #28]
 802a5f6:	2d80      	cmp	r5, #128	; 0x80
 802a5f8:	68d9      	ldr	r1, [r3, #12]
 802a5fa:	d1f8      	bne.n	802a5ee <_reclaim_reent+0x7e>
 802a5fc:	4620      	mov	r0, r4
 802a5fe:	f000 f901 	bl	802a804 <_free_r>
 802a602:	e7c0      	b.n	802a586 <_reclaim_reent+0x16>
 802a604:	680e      	ldr	r6, [r1, #0]
 802a606:	4620      	mov	r0, r4
 802a608:	f000 f8fc 	bl	802a804 <_free_r>
 802a60c:	4631      	mov	r1, r6
 802a60e:	e7ef      	b.n	802a5f0 <_reclaim_reent+0x80>
 802a610:	2500      	movs	r5, #0
 802a612:	e7ef      	b.n	802a5f4 <_reclaim_reent+0x84>
 802a614:	bd70      	pop	{r4, r5, r6, pc}
 802a616:	bf00      	nop
 802a618:	20000160 	.word	0x20000160

0802a61c <_lseek_r>:
 802a61c:	b538      	push	{r3, r4, r5, lr}
 802a61e:	4d07      	ldr	r5, [pc, #28]	; (802a63c <_lseek_r+0x20>)
 802a620:	4604      	mov	r4, r0
 802a622:	4608      	mov	r0, r1
 802a624:	4611      	mov	r1, r2
 802a626:	2200      	movs	r2, #0
 802a628:	602a      	str	r2, [r5, #0]
 802a62a:	461a      	mov	r2, r3
 802a62c:	f7d7 ff8c 	bl	8002548 <_lseek>
 802a630:	1c43      	adds	r3, r0, #1
 802a632:	d102      	bne.n	802a63a <_lseek_r+0x1e>
 802a634:	682b      	ldr	r3, [r5, #0]
 802a636:	b103      	cbz	r3, 802a63a <_lseek_r+0x1e>
 802a638:	6023      	str	r3, [r4, #0]
 802a63a:	bd38      	pop	{r3, r4, r5, pc}
 802a63c:	200139bc 	.word	0x200139bc

0802a640 <_read_r>:
 802a640:	b538      	push	{r3, r4, r5, lr}
 802a642:	4d07      	ldr	r5, [pc, #28]	; (802a660 <_read_r+0x20>)
 802a644:	4604      	mov	r4, r0
 802a646:	4608      	mov	r0, r1
 802a648:	4611      	mov	r1, r2
 802a64a:	2200      	movs	r2, #0
 802a64c:	602a      	str	r2, [r5, #0]
 802a64e:	461a      	mov	r2, r3
 802a650:	f7d7 ff52 	bl	80024f8 <_read>
 802a654:	1c43      	adds	r3, r0, #1
 802a656:	d102      	bne.n	802a65e <_read_r+0x1e>
 802a658:	682b      	ldr	r3, [r5, #0]
 802a65a:	b103      	cbz	r3, 802a65e <_read_r+0x1e>
 802a65c:	6023      	str	r3, [r4, #0]
 802a65e:	bd38      	pop	{r3, r4, r5, pc}
 802a660:	200139bc 	.word	0x200139bc

0802a664 <_kill_r>:
 802a664:	b538      	push	{r3, r4, r5, lr}
 802a666:	4d07      	ldr	r5, [pc, #28]	; (802a684 <_kill_r+0x20>)
 802a668:	2300      	movs	r3, #0
 802a66a:	4604      	mov	r4, r0
 802a66c:	4608      	mov	r0, r1
 802a66e:	4611      	mov	r1, r2
 802a670:	602b      	str	r3, [r5, #0]
 802a672:	f7d7 ff33 	bl	80024dc <_kill>
 802a676:	1c43      	adds	r3, r0, #1
 802a678:	d102      	bne.n	802a680 <_kill_r+0x1c>
 802a67a:	682b      	ldr	r3, [r5, #0]
 802a67c:	b103      	cbz	r3, 802a680 <_kill_r+0x1c>
 802a67e:	6023      	str	r3, [r4, #0]
 802a680:	bd38      	pop	{r3, r4, r5, pc}
 802a682:	bf00      	nop
 802a684:	200139bc 	.word	0x200139bc

0802a688 <_getpid_r>:
 802a688:	f7d7 bf26 	b.w	80024d8 <_getpid>

0802a68c <_sbrk_r>:
 802a68c:	b538      	push	{r3, r4, r5, lr}
 802a68e:	4d06      	ldr	r5, [pc, #24]	; (802a6a8 <_sbrk_r+0x1c>)
 802a690:	2300      	movs	r3, #0
 802a692:	4604      	mov	r4, r0
 802a694:	4608      	mov	r0, r1
 802a696:	602b      	str	r3, [r5, #0]
 802a698:	f7d7 ff58 	bl	800254c <_sbrk>
 802a69c:	1c43      	adds	r3, r0, #1
 802a69e:	d102      	bne.n	802a6a6 <_sbrk_r+0x1a>
 802a6a0:	682b      	ldr	r3, [r5, #0]
 802a6a2:	b103      	cbz	r3, 802a6a6 <_sbrk_r+0x1a>
 802a6a4:	6023      	str	r3, [r4, #0]
 802a6a6:	bd38      	pop	{r3, r4, r5, pc}
 802a6a8:	200139bc 	.word	0x200139bc

0802a6ac <_write_r>:
 802a6ac:	b538      	push	{r3, r4, r5, lr}
 802a6ae:	4d07      	ldr	r5, [pc, #28]	; (802a6cc <_write_r+0x20>)
 802a6b0:	4604      	mov	r4, r0
 802a6b2:	4608      	mov	r0, r1
 802a6b4:	4611      	mov	r1, r2
 802a6b6:	2200      	movs	r2, #0
 802a6b8:	602a      	str	r2, [r5, #0]
 802a6ba:	461a      	mov	r2, r3
 802a6bc:	f7d7 ff2a 	bl	8002514 <_write>
 802a6c0:	1c43      	adds	r3, r0, #1
 802a6c2:	d102      	bne.n	802a6ca <_write_r+0x1e>
 802a6c4:	682b      	ldr	r3, [r5, #0]
 802a6c6:	b103      	cbz	r3, 802a6ca <_write_r+0x1e>
 802a6c8:	6023      	str	r3, [r4, #0]
 802a6ca:	bd38      	pop	{r3, r4, r5, pc}
 802a6cc:	200139bc 	.word	0x200139bc

0802a6d0 <__errno>:
 802a6d0:	4b01      	ldr	r3, [pc, #4]	; (802a6d8 <__errno+0x8>)
 802a6d2:	6818      	ldr	r0, [r3, #0]
 802a6d4:	4770      	bx	lr
 802a6d6:	bf00      	nop
 802a6d8:	20000160 	.word	0x20000160

0802a6dc <__libc_init_array>:
 802a6dc:	b570      	push	{r4, r5, r6, lr}
 802a6de:	4d0d      	ldr	r5, [pc, #52]	; (802a714 <__libc_init_array+0x38>)
 802a6e0:	4c0d      	ldr	r4, [pc, #52]	; (802a718 <__libc_init_array+0x3c>)
 802a6e2:	1b64      	subs	r4, r4, r5
 802a6e4:	10a4      	asrs	r4, r4, #2
 802a6e6:	2600      	movs	r6, #0
 802a6e8:	42a6      	cmp	r6, r4
 802a6ea:	d109      	bne.n	802a700 <__libc_init_array+0x24>
 802a6ec:	4d0b      	ldr	r5, [pc, #44]	; (802a71c <__libc_init_array+0x40>)
 802a6ee:	4c0c      	ldr	r4, [pc, #48]	; (802a720 <__libc_init_array+0x44>)
 802a6f0:	f000 fd70 	bl	802b1d4 <_init>
 802a6f4:	1b64      	subs	r4, r4, r5
 802a6f6:	10a4      	asrs	r4, r4, #2
 802a6f8:	2600      	movs	r6, #0
 802a6fa:	42a6      	cmp	r6, r4
 802a6fc:	d105      	bne.n	802a70a <__libc_init_array+0x2e>
 802a6fe:	bd70      	pop	{r4, r5, r6, pc}
 802a700:	f855 3b04 	ldr.w	r3, [r5], #4
 802a704:	4798      	blx	r3
 802a706:	3601      	adds	r6, #1
 802a708:	e7ee      	b.n	802a6e8 <__libc_init_array+0xc>
 802a70a:	f855 3b04 	ldr.w	r3, [r5], #4
 802a70e:	4798      	blx	r3
 802a710:	3601      	adds	r6, #1
 802a712:	e7f2      	b.n	802a6fa <__libc_init_array+0x1e>
 802a714:	0815ec80 	.word	0x0815ec80
 802a718:	0815ec80 	.word	0x0815ec80
 802a71c:	0815ec80 	.word	0x0815ec80
 802a720:	0815ec94 	.word	0x0815ec94

0802a724 <__retarget_lock_init_recursive>:
 802a724:	4770      	bx	lr

0802a726 <__retarget_lock_acquire_recursive>:
 802a726:	4770      	bx	lr

0802a728 <__retarget_lock_release_recursive>:
 802a728:	4770      	bx	lr

0802a72a <memcpy>:
 802a72a:	440a      	add	r2, r1
 802a72c:	4291      	cmp	r1, r2
 802a72e:	f100 33ff 	add.w	r3, r0, #4294967295
 802a732:	d100      	bne.n	802a736 <memcpy+0xc>
 802a734:	4770      	bx	lr
 802a736:	b510      	push	{r4, lr}
 802a738:	f811 4b01 	ldrb.w	r4, [r1], #1
 802a73c:	f803 4f01 	strb.w	r4, [r3, #1]!
 802a740:	4291      	cmp	r1, r2
 802a742:	d1f9      	bne.n	802a738 <memcpy+0xe>
 802a744:	bd10      	pop	{r4, pc}
	...

0802a748 <__register_exitproc>:
 802a748:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802a74c:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802a800 <__register_exitproc+0xb8>
 802a750:	4606      	mov	r6, r0
 802a752:	f8d8 0000 	ldr.w	r0, [r8]
 802a756:	461f      	mov	r7, r3
 802a758:	460d      	mov	r5, r1
 802a75a:	4691      	mov	r9, r2
 802a75c:	f7ff ffe3 	bl	802a726 <__retarget_lock_acquire_recursive>
 802a760:	4b23      	ldr	r3, [pc, #140]	; (802a7f0 <__register_exitproc+0xa8>)
 802a762:	681c      	ldr	r4, [r3, #0]
 802a764:	b934      	cbnz	r4, 802a774 <__register_exitproc+0x2c>
 802a766:	4c23      	ldr	r4, [pc, #140]	; (802a7f4 <__register_exitproc+0xac>)
 802a768:	601c      	str	r4, [r3, #0]
 802a76a:	4b23      	ldr	r3, [pc, #140]	; (802a7f8 <__register_exitproc+0xb0>)
 802a76c:	b113      	cbz	r3, 802a774 <__register_exitproc+0x2c>
 802a76e:	681b      	ldr	r3, [r3, #0]
 802a770:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802a774:	6863      	ldr	r3, [r4, #4]
 802a776:	2b1f      	cmp	r3, #31
 802a778:	dd07      	ble.n	802a78a <__register_exitproc+0x42>
 802a77a:	f8d8 0000 	ldr.w	r0, [r8]
 802a77e:	f7ff ffd3 	bl	802a728 <__retarget_lock_release_recursive>
 802a782:	f04f 30ff 	mov.w	r0, #4294967295
 802a786:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802a78a:	b32e      	cbz	r6, 802a7d8 <__register_exitproc+0x90>
 802a78c:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802a790:	b968      	cbnz	r0, 802a7ae <__register_exitproc+0x66>
 802a792:	4b1a      	ldr	r3, [pc, #104]	; (802a7fc <__register_exitproc+0xb4>)
 802a794:	2b00      	cmp	r3, #0
 802a796:	d0f0      	beq.n	802a77a <__register_exitproc+0x32>
 802a798:	f44f 7084 	mov.w	r0, #264	; 0x108
 802a79c:	f7ff fcbe 	bl	802a11c <malloc>
 802a7a0:	2800      	cmp	r0, #0
 802a7a2:	d0ea      	beq.n	802a77a <__register_exitproc+0x32>
 802a7a4:	2300      	movs	r3, #0
 802a7a6:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802a7aa:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802a7ae:	6863      	ldr	r3, [r4, #4]
 802a7b0:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802a7b4:	2201      	movs	r2, #1
 802a7b6:	409a      	lsls	r2, r3
 802a7b8:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802a7bc:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802a7c0:	4313      	orrs	r3, r2
 802a7c2:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802a7c6:	2e02      	cmp	r6, #2
 802a7c8:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802a7cc:	bf02      	ittt	eq
 802a7ce:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802a7d2:	4313      	orreq	r3, r2
 802a7d4:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802a7d8:	6863      	ldr	r3, [r4, #4]
 802a7da:	f8d8 0000 	ldr.w	r0, [r8]
 802a7de:	1c5a      	adds	r2, r3, #1
 802a7e0:	3302      	adds	r3, #2
 802a7e2:	6062      	str	r2, [r4, #4]
 802a7e4:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802a7e8:	f7ff ff9e 	bl	802a728 <__retarget_lock_release_recursive>
 802a7ec:	2000      	movs	r0, #0
 802a7ee:	e7ca      	b.n	802a786 <__register_exitproc+0x3e>
 802a7f0:	20013a50 	.word	0x20013a50
 802a7f4:	200139c4 	.word	0x200139c4
 802a7f8:	080426ec 	.word	0x080426ec
 802a7fc:	0802a11d 	.word	0x0802a11d
 802a800:	20000164 	.word	0x20000164

0802a804 <_free_r>:
 802a804:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802a806:	2900      	cmp	r1, #0
 802a808:	d044      	beq.n	802a894 <_free_r+0x90>
 802a80a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802a80e:	9001      	str	r0, [sp, #4]
 802a810:	2b00      	cmp	r3, #0
 802a812:	f1a1 0404 	sub.w	r4, r1, #4
 802a816:	bfb8      	it	lt
 802a818:	18e4      	addlt	r4, r4, r3
 802a81a:	f7ff fd2f 	bl	802a27c <__malloc_lock>
 802a81e:	4a1e      	ldr	r2, [pc, #120]	; (802a898 <_free_r+0x94>)
 802a820:	9801      	ldr	r0, [sp, #4]
 802a822:	6813      	ldr	r3, [r2, #0]
 802a824:	b933      	cbnz	r3, 802a834 <_free_r+0x30>
 802a826:	6063      	str	r3, [r4, #4]
 802a828:	6014      	str	r4, [r2, #0]
 802a82a:	b003      	add	sp, #12
 802a82c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802a830:	f7ff bd2a 	b.w	802a288 <__malloc_unlock>
 802a834:	42a3      	cmp	r3, r4
 802a836:	d908      	bls.n	802a84a <_free_r+0x46>
 802a838:	6825      	ldr	r5, [r4, #0]
 802a83a:	1961      	adds	r1, r4, r5
 802a83c:	428b      	cmp	r3, r1
 802a83e:	bf01      	itttt	eq
 802a840:	6819      	ldreq	r1, [r3, #0]
 802a842:	685b      	ldreq	r3, [r3, #4]
 802a844:	1949      	addeq	r1, r1, r5
 802a846:	6021      	streq	r1, [r4, #0]
 802a848:	e7ed      	b.n	802a826 <_free_r+0x22>
 802a84a:	461a      	mov	r2, r3
 802a84c:	685b      	ldr	r3, [r3, #4]
 802a84e:	b10b      	cbz	r3, 802a854 <_free_r+0x50>
 802a850:	42a3      	cmp	r3, r4
 802a852:	d9fa      	bls.n	802a84a <_free_r+0x46>
 802a854:	6811      	ldr	r1, [r2, #0]
 802a856:	1855      	adds	r5, r2, r1
 802a858:	42a5      	cmp	r5, r4
 802a85a:	d10b      	bne.n	802a874 <_free_r+0x70>
 802a85c:	6824      	ldr	r4, [r4, #0]
 802a85e:	4421      	add	r1, r4
 802a860:	1854      	adds	r4, r2, r1
 802a862:	42a3      	cmp	r3, r4
 802a864:	6011      	str	r1, [r2, #0]
 802a866:	d1e0      	bne.n	802a82a <_free_r+0x26>
 802a868:	681c      	ldr	r4, [r3, #0]
 802a86a:	685b      	ldr	r3, [r3, #4]
 802a86c:	6053      	str	r3, [r2, #4]
 802a86e:	440c      	add	r4, r1
 802a870:	6014      	str	r4, [r2, #0]
 802a872:	e7da      	b.n	802a82a <_free_r+0x26>
 802a874:	d902      	bls.n	802a87c <_free_r+0x78>
 802a876:	230c      	movs	r3, #12
 802a878:	6003      	str	r3, [r0, #0]
 802a87a:	e7d6      	b.n	802a82a <_free_r+0x26>
 802a87c:	6825      	ldr	r5, [r4, #0]
 802a87e:	1961      	adds	r1, r4, r5
 802a880:	428b      	cmp	r3, r1
 802a882:	bf04      	itt	eq
 802a884:	6819      	ldreq	r1, [r3, #0]
 802a886:	685b      	ldreq	r3, [r3, #4]
 802a888:	6063      	str	r3, [r4, #4]
 802a88a:	bf04      	itt	eq
 802a88c:	1949      	addeq	r1, r1, r5
 802a88e:	6021      	streq	r1, [r4, #0]
 802a890:	6054      	str	r4, [r2, #4]
 802a892:	e7ca      	b.n	802a82a <_free_r+0x26>
 802a894:	b003      	add	sp, #12
 802a896:	bd30      	pop	{r4, r5, pc}
 802a898:	20013878 	.word	0x20013878

0802a89c <__sfputc_r>:
 802a89c:	6893      	ldr	r3, [r2, #8]
 802a89e:	3b01      	subs	r3, #1
 802a8a0:	2b00      	cmp	r3, #0
 802a8a2:	b410      	push	{r4}
 802a8a4:	6093      	str	r3, [r2, #8]
 802a8a6:	da08      	bge.n	802a8ba <__sfputc_r+0x1e>
 802a8a8:	6994      	ldr	r4, [r2, #24]
 802a8aa:	42a3      	cmp	r3, r4
 802a8ac:	db01      	blt.n	802a8b2 <__sfputc_r+0x16>
 802a8ae:	290a      	cmp	r1, #10
 802a8b0:	d103      	bne.n	802a8ba <__sfputc_r+0x1e>
 802a8b2:	f85d 4b04 	ldr.w	r4, [sp], #4
 802a8b6:	f000 bb73 	b.w	802afa0 <__swbuf_r>
 802a8ba:	6813      	ldr	r3, [r2, #0]
 802a8bc:	1c58      	adds	r0, r3, #1
 802a8be:	6010      	str	r0, [r2, #0]
 802a8c0:	7019      	strb	r1, [r3, #0]
 802a8c2:	4608      	mov	r0, r1
 802a8c4:	f85d 4b04 	ldr.w	r4, [sp], #4
 802a8c8:	4770      	bx	lr

0802a8ca <__sfputs_r>:
 802a8ca:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802a8cc:	4606      	mov	r6, r0
 802a8ce:	460f      	mov	r7, r1
 802a8d0:	4614      	mov	r4, r2
 802a8d2:	18d5      	adds	r5, r2, r3
 802a8d4:	42ac      	cmp	r4, r5
 802a8d6:	d101      	bne.n	802a8dc <__sfputs_r+0x12>
 802a8d8:	2000      	movs	r0, #0
 802a8da:	e007      	b.n	802a8ec <__sfputs_r+0x22>
 802a8dc:	f814 1b01 	ldrb.w	r1, [r4], #1
 802a8e0:	463a      	mov	r2, r7
 802a8e2:	4630      	mov	r0, r6
 802a8e4:	f7ff ffda 	bl	802a89c <__sfputc_r>
 802a8e8:	1c43      	adds	r3, r0, #1
 802a8ea:	d1f3      	bne.n	802a8d4 <__sfputs_r+0xa>
 802a8ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802a8f0 <_vfiprintf_r>:
 802a8f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a8f4:	460d      	mov	r5, r1
 802a8f6:	b09d      	sub	sp, #116	; 0x74
 802a8f8:	4614      	mov	r4, r2
 802a8fa:	4698      	mov	r8, r3
 802a8fc:	4606      	mov	r6, r0
 802a8fe:	b118      	cbz	r0, 802a908 <_vfiprintf_r+0x18>
 802a900:	6a03      	ldr	r3, [r0, #32]
 802a902:	b90b      	cbnz	r3, 802a908 <_vfiprintf_r+0x18>
 802a904:	f7ff fd60 	bl	802a3c8 <__sinit>
 802a908:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802a90a:	07d9      	lsls	r1, r3, #31
 802a90c:	d405      	bmi.n	802a91a <_vfiprintf_r+0x2a>
 802a90e:	89ab      	ldrh	r3, [r5, #12]
 802a910:	059a      	lsls	r2, r3, #22
 802a912:	d402      	bmi.n	802a91a <_vfiprintf_r+0x2a>
 802a914:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802a916:	f7ff ff06 	bl	802a726 <__retarget_lock_acquire_recursive>
 802a91a:	89ab      	ldrh	r3, [r5, #12]
 802a91c:	071b      	lsls	r3, r3, #28
 802a91e:	d501      	bpl.n	802a924 <_vfiprintf_r+0x34>
 802a920:	692b      	ldr	r3, [r5, #16]
 802a922:	b99b      	cbnz	r3, 802a94c <_vfiprintf_r+0x5c>
 802a924:	4629      	mov	r1, r5
 802a926:	4630      	mov	r0, r6
 802a928:	f000 fb78 	bl	802b01c <__swsetup_r>
 802a92c:	b170      	cbz	r0, 802a94c <_vfiprintf_r+0x5c>
 802a92e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802a930:	07dc      	lsls	r4, r3, #31
 802a932:	d504      	bpl.n	802a93e <_vfiprintf_r+0x4e>
 802a934:	f04f 30ff 	mov.w	r0, #4294967295
 802a938:	b01d      	add	sp, #116	; 0x74
 802a93a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a93e:	89ab      	ldrh	r3, [r5, #12]
 802a940:	0598      	lsls	r0, r3, #22
 802a942:	d4f7      	bmi.n	802a934 <_vfiprintf_r+0x44>
 802a944:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802a946:	f7ff feef 	bl	802a728 <__retarget_lock_release_recursive>
 802a94a:	e7f3      	b.n	802a934 <_vfiprintf_r+0x44>
 802a94c:	2300      	movs	r3, #0
 802a94e:	9309      	str	r3, [sp, #36]	; 0x24
 802a950:	2320      	movs	r3, #32
 802a952:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802a956:	f8cd 800c 	str.w	r8, [sp, #12]
 802a95a:	2330      	movs	r3, #48	; 0x30
 802a95c:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802ab10 <_vfiprintf_r+0x220>
 802a960:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802a964:	f04f 0901 	mov.w	r9, #1
 802a968:	4623      	mov	r3, r4
 802a96a:	469a      	mov	sl, r3
 802a96c:	f813 2b01 	ldrb.w	r2, [r3], #1
 802a970:	b10a      	cbz	r2, 802a976 <_vfiprintf_r+0x86>
 802a972:	2a25      	cmp	r2, #37	; 0x25
 802a974:	d1f9      	bne.n	802a96a <_vfiprintf_r+0x7a>
 802a976:	ebba 0b04 	subs.w	fp, sl, r4
 802a97a:	d00b      	beq.n	802a994 <_vfiprintf_r+0xa4>
 802a97c:	465b      	mov	r3, fp
 802a97e:	4622      	mov	r2, r4
 802a980:	4629      	mov	r1, r5
 802a982:	4630      	mov	r0, r6
 802a984:	f7ff ffa1 	bl	802a8ca <__sfputs_r>
 802a988:	3001      	adds	r0, #1
 802a98a:	f000 80a9 	beq.w	802aae0 <_vfiprintf_r+0x1f0>
 802a98e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802a990:	445a      	add	r2, fp
 802a992:	9209      	str	r2, [sp, #36]	; 0x24
 802a994:	f89a 3000 	ldrb.w	r3, [sl]
 802a998:	2b00      	cmp	r3, #0
 802a99a:	f000 80a1 	beq.w	802aae0 <_vfiprintf_r+0x1f0>
 802a99e:	2300      	movs	r3, #0
 802a9a0:	f04f 32ff 	mov.w	r2, #4294967295
 802a9a4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802a9a8:	f10a 0a01 	add.w	sl, sl, #1
 802a9ac:	9304      	str	r3, [sp, #16]
 802a9ae:	9307      	str	r3, [sp, #28]
 802a9b0:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802a9b4:	931a      	str	r3, [sp, #104]	; 0x68
 802a9b6:	4654      	mov	r4, sl
 802a9b8:	2205      	movs	r2, #5
 802a9ba:	f814 1b01 	ldrb.w	r1, [r4], #1
 802a9be:	4854      	ldr	r0, [pc, #336]	; (802ab10 <_vfiprintf_r+0x220>)
 802a9c0:	f7d5 fc76 	bl	80002b0 <memchr>
 802a9c4:	9a04      	ldr	r2, [sp, #16]
 802a9c6:	b9d8      	cbnz	r0, 802aa00 <_vfiprintf_r+0x110>
 802a9c8:	06d1      	lsls	r1, r2, #27
 802a9ca:	bf44      	itt	mi
 802a9cc:	2320      	movmi	r3, #32
 802a9ce:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802a9d2:	0713      	lsls	r3, r2, #28
 802a9d4:	bf44      	itt	mi
 802a9d6:	232b      	movmi	r3, #43	; 0x2b
 802a9d8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802a9dc:	f89a 3000 	ldrb.w	r3, [sl]
 802a9e0:	2b2a      	cmp	r3, #42	; 0x2a
 802a9e2:	d015      	beq.n	802aa10 <_vfiprintf_r+0x120>
 802a9e4:	9a07      	ldr	r2, [sp, #28]
 802a9e6:	4654      	mov	r4, sl
 802a9e8:	2000      	movs	r0, #0
 802a9ea:	f04f 0c0a 	mov.w	ip, #10
 802a9ee:	4621      	mov	r1, r4
 802a9f0:	f811 3b01 	ldrb.w	r3, [r1], #1
 802a9f4:	3b30      	subs	r3, #48	; 0x30
 802a9f6:	2b09      	cmp	r3, #9
 802a9f8:	d94d      	bls.n	802aa96 <_vfiprintf_r+0x1a6>
 802a9fa:	b1b0      	cbz	r0, 802aa2a <_vfiprintf_r+0x13a>
 802a9fc:	9207      	str	r2, [sp, #28]
 802a9fe:	e014      	b.n	802aa2a <_vfiprintf_r+0x13a>
 802aa00:	eba0 0308 	sub.w	r3, r0, r8
 802aa04:	fa09 f303 	lsl.w	r3, r9, r3
 802aa08:	4313      	orrs	r3, r2
 802aa0a:	9304      	str	r3, [sp, #16]
 802aa0c:	46a2      	mov	sl, r4
 802aa0e:	e7d2      	b.n	802a9b6 <_vfiprintf_r+0xc6>
 802aa10:	9b03      	ldr	r3, [sp, #12]
 802aa12:	1d19      	adds	r1, r3, #4
 802aa14:	681b      	ldr	r3, [r3, #0]
 802aa16:	9103      	str	r1, [sp, #12]
 802aa18:	2b00      	cmp	r3, #0
 802aa1a:	bfbb      	ittet	lt
 802aa1c:	425b      	neglt	r3, r3
 802aa1e:	f042 0202 	orrlt.w	r2, r2, #2
 802aa22:	9307      	strge	r3, [sp, #28]
 802aa24:	9307      	strlt	r3, [sp, #28]
 802aa26:	bfb8      	it	lt
 802aa28:	9204      	strlt	r2, [sp, #16]
 802aa2a:	7823      	ldrb	r3, [r4, #0]
 802aa2c:	2b2e      	cmp	r3, #46	; 0x2e
 802aa2e:	d10c      	bne.n	802aa4a <_vfiprintf_r+0x15a>
 802aa30:	7863      	ldrb	r3, [r4, #1]
 802aa32:	2b2a      	cmp	r3, #42	; 0x2a
 802aa34:	d134      	bne.n	802aaa0 <_vfiprintf_r+0x1b0>
 802aa36:	9b03      	ldr	r3, [sp, #12]
 802aa38:	1d1a      	adds	r2, r3, #4
 802aa3a:	681b      	ldr	r3, [r3, #0]
 802aa3c:	9203      	str	r2, [sp, #12]
 802aa3e:	2b00      	cmp	r3, #0
 802aa40:	bfb8      	it	lt
 802aa42:	f04f 33ff 	movlt.w	r3, #4294967295
 802aa46:	3402      	adds	r4, #2
 802aa48:	9305      	str	r3, [sp, #20]
 802aa4a:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802ab20 <_vfiprintf_r+0x230>
 802aa4e:	7821      	ldrb	r1, [r4, #0]
 802aa50:	2203      	movs	r2, #3
 802aa52:	4650      	mov	r0, sl
 802aa54:	f7d5 fc2c 	bl	80002b0 <memchr>
 802aa58:	b138      	cbz	r0, 802aa6a <_vfiprintf_r+0x17a>
 802aa5a:	9b04      	ldr	r3, [sp, #16]
 802aa5c:	eba0 000a 	sub.w	r0, r0, sl
 802aa60:	2240      	movs	r2, #64	; 0x40
 802aa62:	4082      	lsls	r2, r0
 802aa64:	4313      	orrs	r3, r2
 802aa66:	3401      	adds	r4, #1
 802aa68:	9304      	str	r3, [sp, #16]
 802aa6a:	f814 1b01 	ldrb.w	r1, [r4], #1
 802aa6e:	4829      	ldr	r0, [pc, #164]	; (802ab14 <_vfiprintf_r+0x224>)
 802aa70:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802aa74:	2206      	movs	r2, #6
 802aa76:	f7d5 fc1b 	bl	80002b0 <memchr>
 802aa7a:	2800      	cmp	r0, #0
 802aa7c:	d03f      	beq.n	802aafe <_vfiprintf_r+0x20e>
 802aa7e:	4b26      	ldr	r3, [pc, #152]	; (802ab18 <_vfiprintf_r+0x228>)
 802aa80:	bb1b      	cbnz	r3, 802aaca <_vfiprintf_r+0x1da>
 802aa82:	9b03      	ldr	r3, [sp, #12]
 802aa84:	3307      	adds	r3, #7
 802aa86:	f023 0307 	bic.w	r3, r3, #7
 802aa8a:	3308      	adds	r3, #8
 802aa8c:	9303      	str	r3, [sp, #12]
 802aa8e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802aa90:	443b      	add	r3, r7
 802aa92:	9309      	str	r3, [sp, #36]	; 0x24
 802aa94:	e768      	b.n	802a968 <_vfiprintf_r+0x78>
 802aa96:	fb0c 3202 	mla	r2, ip, r2, r3
 802aa9a:	460c      	mov	r4, r1
 802aa9c:	2001      	movs	r0, #1
 802aa9e:	e7a6      	b.n	802a9ee <_vfiprintf_r+0xfe>
 802aaa0:	2300      	movs	r3, #0
 802aaa2:	3401      	adds	r4, #1
 802aaa4:	9305      	str	r3, [sp, #20]
 802aaa6:	4619      	mov	r1, r3
 802aaa8:	f04f 0c0a 	mov.w	ip, #10
 802aaac:	4620      	mov	r0, r4
 802aaae:	f810 2b01 	ldrb.w	r2, [r0], #1
 802aab2:	3a30      	subs	r2, #48	; 0x30
 802aab4:	2a09      	cmp	r2, #9
 802aab6:	d903      	bls.n	802aac0 <_vfiprintf_r+0x1d0>
 802aab8:	2b00      	cmp	r3, #0
 802aaba:	d0c6      	beq.n	802aa4a <_vfiprintf_r+0x15a>
 802aabc:	9105      	str	r1, [sp, #20]
 802aabe:	e7c4      	b.n	802aa4a <_vfiprintf_r+0x15a>
 802aac0:	fb0c 2101 	mla	r1, ip, r1, r2
 802aac4:	4604      	mov	r4, r0
 802aac6:	2301      	movs	r3, #1
 802aac8:	e7f0      	b.n	802aaac <_vfiprintf_r+0x1bc>
 802aaca:	ab03      	add	r3, sp, #12
 802aacc:	9300      	str	r3, [sp, #0]
 802aace:	462a      	mov	r2, r5
 802aad0:	4b12      	ldr	r3, [pc, #72]	; (802ab1c <_vfiprintf_r+0x22c>)
 802aad2:	a904      	add	r1, sp, #16
 802aad4:	4630      	mov	r0, r6
 802aad6:	f3af 8000 	nop.w
 802aada:	4607      	mov	r7, r0
 802aadc:	1c78      	adds	r0, r7, #1
 802aade:	d1d6      	bne.n	802aa8e <_vfiprintf_r+0x19e>
 802aae0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802aae2:	07d9      	lsls	r1, r3, #31
 802aae4:	d405      	bmi.n	802aaf2 <_vfiprintf_r+0x202>
 802aae6:	89ab      	ldrh	r3, [r5, #12]
 802aae8:	059a      	lsls	r2, r3, #22
 802aaea:	d402      	bmi.n	802aaf2 <_vfiprintf_r+0x202>
 802aaec:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802aaee:	f7ff fe1b 	bl	802a728 <__retarget_lock_release_recursive>
 802aaf2:	89ab      	ldrh	r3, [r5, #12]
 802aaf4:	065b      	lsls	r3, r3, #25
 802aaf6:	f53f af1d 	bmi.w	802a934 <_vfiprintf_r+0x44>
 802aafa:	9809      	ldr	r0, [sp, #36]	; 0x24
 802aafc:	e71c      	b.n	802a938 <_vfiprintf_r+0x48>
 802aafe:	ab03      	add	r3, sp, #12
 802ab00:	9300      	str	r3, [sp, #0]
 802ab02:	462a      	mov	r2, r5
 802ab04:	4b05      	ldr	r3, [pc, #20]	; (802ab1c <_vfiprintf_r+0x22c>)
 802ab06:	a904      	add	r1, sp, #16
 802ab08:	4630      	mov	r0, r6
 802ab0a:	f000 f879 	bl	802ac00 <_printf_i>
 802ab0e:	e7e4      	b.n	802aada <_vfiprintf_r+0x1ea>
 802ab10:	080426f0 	.word	0x080426f0
 802ab14:	080426fa 	.word	0x080426fa
 802ab18:	00000000 	.word	0x00000000
 802ab1c:	0802a8cb 	.word	0x0802a8cb
 802ab20:	080426f6 	.word	0x080426f6

0802ab24 <_printf_common>:
 802ab24:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802ab28:	4616      	mov	r6, r2
 802ab2a:	4699      	mov	r9, r3
 802ab2c:	688a      	ldr	r2, [r1, #8]
 802ab2e:	690b      	ldr	r3, [r1, #16]
 802ab30:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802ab34:	4293      	cmp	r3, r2
 802ab36:	bfb8      	it	lt
 802ab38:	4613      	movlt	r3, r2
 802ab3a:	6033      	str	r3, [r6, #0]
 802ab3c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802ab40:	4607      	mov	r7, r0
 802ab42:	460c      	mov	r4, r1
 802ab44:	b10a      	cbz	r2, 802ab4a <_printf_common+0x26>
 802ab46:	3301      	adds	r3, #1
 802ab48:	6033      	str	r3, [r6, #0]
 802ab4a:	6823      	ldr	r3, [r4, #0]
 802ab4c:	0699      	lsls	r1, r3, #26
 802ab4e:	bf42      	ittt	mi
 802ab50:	6833      	ldrmi	r3, [r6, #0]
 802ab52:	3302      	addmi	r3, #2
 802ab54:	6033      	strmi	r3, [r6, #0]
 802ab56:	6825      	ldr	r5, [r4, #0]
 802ab58:	f015 0506 	ands.w	r5, r5, #6
 802ab5c:	d106      	bne.n	802ab6c <_printf_common+0x48>
 802ab5e:	f104 0a19 	add.w	sl, r4, #25
 802ab62:	68e3      	ldr	r3, [r4, #12]
 802ab64:	6832      	ldr	r2, [r6, #0]
 802ab66:	1a9b      	subs	r3, r3, r2
 802ab68:	42ab      	cmp	r3, r5
 802ab6a:	dc26      	bgt.n	802abba <_printf_common+0x96>
 802ab6c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802ab70:	1e13      	subs	r3, r2, #0
 802ab72:	6822      	ldr	r2, [r4, #0]
 802ab74:	bf18      	it	ne
 802ab76:	2301      	movne	r3, #1
 802ab78:	0692      	lsls	r2, r2, #26
 802ab7a:	d42b      	bmi.n	802abd4 <_printf_common+0xb0>
 802ab7c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802ab80:	4649      	mov	r1, r9
 802ab82:	4638      	mov	r0, r7
 802ab84:	47c0      	blx	r8
 802ab86:	3001      	adds	r0, #1
 802ab88:	d01e      	beq.n	802abc8 <_printf_common+0xa4>
 802ab8a:	6823      	ldr	r3, [r4, #0]
 802ab8c:	6922      	ldr	r2, [r4, #16]
 802ab8e:	f003 0306 	and.w	r3, r3, #6
 802ab92:	2b04      	cmp	r3, #4
 802ab94:	bf02      	ittt	eq
 802ab96:	68e5      	ldreq	r5, [r4, #12]
 802ab98:	6833      	ldreq	r3, [r6, #0]
 802ab9a:	1aed      	subeq	r5, r5, r3
 802ab9c:	68a3      	ldr	r3, [r4, #8]
 802ab9e:	bf0c      	ite	eq
 802aba0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802aba4:	2500      	movne	r5, #0
 802aba6:	4293      	cmp	r3, r2
 802aba8:	bfc4      	itt	gt
 802abaa:	1a9b      	subgt	r3, r3, r2
 802abac:	18ed      	addgt	r5, r5, r3
 802abae:	2600      	movs	r6, #0
 802abb0:	341a      	adds	r4, #26
 802abb2:	42b5      	cmp	r5, r6
 802abb4:	d11a      	bne.n	802abec <_printf_common+0xc8>
 802abb6:	2000      	movs	r0, #0
 802abb8:	e008      	b.n	802abcc <_printf_common+0xa8>
 802abba:	2301      	movs	r3, #1
 802abbc:	4652      	mov	r2, sl
 802abbe:	4649      	mov	r1, r9
 802abc0:	4638      	mov	r0, r7
 802abc2:	47c0      	blx	r8
 802abc4:	3001      	adds	r0, #1
 802abc6:	d103      	bne.n	802abd0 <_printf_common+0xac>
 802abc8:	f04f 30ff 	mov.w	r0, #4294967295
 802abcc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802abd0:	3501      	adds	r5, #1
 802abd2:	e7c6      	b.n	802ab62 <_printf_common+0x3e>
 802abd4:	18e1      	adds	r1, r4, r3
 802abd6:	1c5a      	adds	r2, r3, #1
 802abd8:	2030      	movs	r0, #48	; 0x30
 802abda:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802abde:	4422      	add	r2, r4
 802abe0:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802abe4:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802abe8:	3302      	adds	r3, #2
 802abea:	e7c7      	b.n	802ab7c <_printf_common+0x58>
 802abec:	2301      	movs	r3, #1
 802abee:	4622      	mov	r2, r4
 802abf0:	4649      	mov	r1, r9
 802abf2:	4638      	mov	r0, r7
 802abf4:	47c0      	blx	r8
 802abf6:	3001      	adds	r0, #1
 802abf8:	d0e6      	beq.n	802abc8 <_printf_common+0xa4>
 802abfa:	3601      	adds	r6, #1
 802abfc:	e7d9      	b.n	802abb2 <_printf_common+0x8e>
	...

0802ac00 <_printf_i>:
 802ac00:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802ac04:	7e0f      	ldrb	r7, [r1, #24]
 802ac06:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802ac08:	2f78      	cmp	r7, #120	; 0x78
 802ac0a:	4691      	mov	r9, r2
 802ac0c:	4680      	mov	r8, r0
 802ac0e:	460c      	mov	r4, r1
 802ac10:	469a      	mov	sl, r3
 802ac12:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802ac16:	d807      	bhi.n	802ac28 <_printf_i+0x28>
 802ac18:	2f62      	cmp	r7, #98	; 0x62
 802ac1a:	d80a      	bhi.n	802ac32 <_printf_i+0x32>
 802ac1c:	2f00      	cmp	r7, #0
 802ac1e:	f000 80d4 	beq.w	802adca <_printf_i+0x1ca>
 802ac22:	2f58      	cmp	r7, #88	; 0x58
 802ac24:	f000 80c0 	beq.w	802ada8 <_printf_i+0x1a8>
 802ac28:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802ac2c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802ac30:	e03a      	b.n	802aca8 <_printf_i+0xa8>
 802ac32:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802ac36:	2b15      	cmp	r3, #21
 802ac38:	d8f6      	bhi.n	802ac28 <_printf_i+0x28>
 802ac3a:	a101      	add	r1, pc, #4	; (adr r1, 802ac40 <_printf_i+0x40>)
 802ac3c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802ac40:	0802ac99 	.word	0x0802ac99
 802ac44:	0802acad 	.word	0x0802acad
 802ac48:	0802ac29 	.word	0x0802ac29
 802ac4c:	0802ac29 	.word	0x0802ac29
 802ac50:	0802ac29 	.word	0x0802ac29
 802ac54:	0802ac29 	.word	0x0802ac29
 802ac58:	0802acad 	.word	0x0802acad
 802ac5c:	0802ac29 	.word	0x0802ac29
 802ac60:	0802ac29 	.word	0x0802ac29
 802ac64:	0802ac29 	.word	0x0802ac29
 802ac68:	0802ac29 	.word	0x0802ac29
 802ac6c:	0802adb1 	.word	0x0802adb1
 802ac70:	0802acd9 	.word	0x0802acd9
 802ac74:	0802ad6b 	.word	0x0802ad6b
 802ac78:	0802ac29 	.word	0x0802ac29
 802ac7c:	0802ac29 	.word	0x0802ac29
 802ac80:	0802add3 	.word	0x0802add3
 802ac84:	0802ac29 	.word	0x0802ac29
 802ac88:	0802acd9 	.word	0x0802acd9
 802ac8c:	0802ac29 	.word	0x0802ac29
 802ac90:	0802ac29 	.word	0x0802ac29
 802ac94:	0802ad73 	.word	0x0802ad73
 802ac98:	682b      	ldr	r3, [r5, #0]
 802ac9a:	1d1a      	adds	r2, r3, #4
 802ac9c:	681b      	ldr	r3, [r3, #0]
 802ac9e:	602a      	str	r2, [r5, #0]
 802aca0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802aca4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802aca8:	2301      	movs	r3, #1
 802acaa:	e09f      	b.n	802adec <_printf_i+0x1ec>
 802acac:	6820      	ldr	r0, [r4, #0]
 802acae:	682b      	ldr	r3, [r5, #0]
 802acb0:	0607      	lsls	r7, r0, #24
 802acb2:	f103 0104 	add.w	r1, r3, #4
 802acb6:	6029      	str	r1, [r5, #0]
 802acb8:	d501      	bpl.n	802acbe <_printf_i+0xbe>
 802acba:	681e      	ldr	r6, [r3, #0]
 802acbc:	e003      	b.n	802acc6 <_printf_i+0xc6>
 802acbe:	0646      	lsls	r6, r0, #25
 802acc0:	d5fb      	bpl.n	802acba <_printf_i+0xba>
 802acc2:	f9b3 6000 	ldrsh.w	r6, [r3]
 802acc6:	2e00      	cmp	r6, #0
 802acc8:	da03      	bge.n	802acd2 <_printf_i+0xd2>
 802acca:	232d      	movs	r3, #45	; 0x2d
 802accc:	4276      	negs	r6, r6
 802acce:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802acd2:	485a      	ldr	r0, [pc, #360]	; (802ae3c <_printf_i+0x23c>)
 802acd4:	230a      	movs	r3, #10
 802acd6:	e012      	b.n	802acfe <_printf_i+0xfe>
 802acd8:	682b      	ldr	r3, [r5, #0]
 802acda:	6820      	ldr	r0, [r4, #0]
 802acdc:	1d19      	adds	r1, r3, #4
 802acde:	6029      	str	r1, [r5, #0]
 802ace0:	0605      	lsls	r5, r0, #24
 802ace2:	d501      	bpl.n	802ace8 <_printf_i+0xe8>
 802ace4:	681e      	ldr	r6, [r3, #0]
 802ace6:	e002      	b.n	802acee <_printf_i+0xee>
 802ace8:	0641      	lsls	r1, r0, #25
 802acea:	d5fb      	bpl.n	802ace4 <_printf_i+0xe4>
 802acec:	881e      	ldrh	r6, [r3, #0]
 802acee:	4853      	ldr	r0, [pc, #332]	; (802ae3c <_printf_i+0x23c>)
 802acf0:	2f6f      	cmp	r7, #111	; 0x6f
 802acf2:	bf0c      	ite	eq
 802acf4:	2308      	moveq	r3, #8
 802acf6:	230a      	movne	r3, #10
 802acf8:	2100      	movs	r1, #0
 802acfa:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802acfe:	6865      	ldr	r5, [r4, #4]
 802ad00:	60a5      	str	r5, [r4, #8]
 802ad02:	2d00      	cmp	r5, #0
 802ad04:	bfa2      	ittt	ge
 802ad06:	6821      	ldrge	r1, [r4, #0]
 802ad08:	f021 0104 	bicge.w	r1, r1, #4
 802ad0c:	6021      	strge	r1, [r4, #0]
 802ad0e:	b90e      	cbnz	r6, 802ad14 <_printf_i+0x114>
 802ad10:	2d00      	cmp	r5, #0
 802ad12:	d04b      	beq.n	802adac <_printf_i+0x1ac>
 802ad14:	4615      	mov	r5, r2
 802ad16:	fbb6 f1f3 	udiv	r1, r6, r3
 802ad1a:	fb03 6711 	mls	r7, r3, r1, r6
 802ad1e:	5dc7      	ldrb	r7, [r0, r7]
 802ad20:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802ad24:	4637      	mov	r7, r6
 802ad26:	42bb      	cmp	r3, r7
 802ad28:	460e      	mov	r6, r1
 802ad2a:	d9f4      	bls.n	802ad16 <_printf_i+0x116>
 802ad2c:	2b08      	cmp	r3, #8
 802ad2e:	d10b      	bne.n	802ad48 <_printf_i+0x148>
 802ad30:	6823      	ldr	r3, [r4, #0]
 802ad32:	07de      	lsls	r6, r3, #31
 802ad34:	d508      	bpl.n	802ad48 <_printf_i+0x148>
 802ad36:	6923      	ldr	r3, [r4, #16]
 802ad38:	6861      	ldr	r1, [r4, #4]
 802ad3a:	4299      	cmp	r1, r3
 802ad3c:	bfde      	ittt	le
 802ad3e:	2330      	movle	r3, #48	; 0x30
 802ad40:	f805 3c01 	strble.w	r3, [r5, #-1]
 802ad44:	f105 35ff 	addle.w	r5, r5, #4294967295
 802ad48:	1b52      	subs	r2, r2, r5
 802ad4a:	6122      	str	r2, [r4, #16]
 802ad4c:	f8cd a000 	str.w	sl, [sp]
 802ad50:	464b      	mov	r3, r9
 802ad52:	aa03      	add	r2, sp, #12
 802ad54:	4621      	mov	r1, r4
 802ad56:	4640      	mov	r0, r8
 802ad58:	f7ff fee4 	bl	802ab24 <_printf_common>
 802ad5c:	3001      	adds	r0, #1
 802ad5e:	d14a      	bne.n	802adf6 <_printf_i+0x1f6>
 802ad60:	f04f 30ff 	mov.w	r0, #4294967295
 802ad64:	b004      	add	sp, #16
 802ad66:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802ad6a:	6823      	ldr	r3, [r4, #0]
 802ad6c:	f043 0320 	orr.w	r3, r3, #32
 802ad70:	6023      	str	r3, [r4, #0]
 802ad72:	4833      	ldr	r0, [pc, #204]	; (802ae40 <_printf_i+0x240>)
 802ad74:	2778      	movs	r7, #120	; 0x78
 802ad76:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 802ad7a:	6823      	ldr	r3, [r4, #0]
 802ad7c:	6829      	ldr	r1, [r5, #0]
 802ad7e:	061f      	lsls	r7, r3, #24
 802ad80:	f851 6b04 	ldr.w	r6, [r1], #4
 802ad84:	d402      	bmi.n	802ad8c <_printf_i+0x18c>
 802ad86:	065f      	lsls	r7, r3, #25
 802ad88:	bf48      	it	mi
 802ad8a:	b2b6      	uxthmi	r6, r6
 802ad8c:	07df      	lsls	r7, r3, #31
 802ad8e:	bf48      	it	mi
 802ad90:	f043 0320 	orrmi.w	r3, r3, #32
 802ad94:	6029      	str	r1, [r5, #0]
 802ad96:	bf48      	it	mi
 802ad98:	6023      	strmi	r3, [r4, #0]
 802ad9a:	b91e      	cbnz	r6, 802ada4 <_printf_i+0x1a4>
 802ad9c:	6823      	ldr	r3, [r4, #0]
 802ad9e:	f023 0320 	bic.w	r3, r3, #32
 802ada2:	6023      	str	r3, [r4, #0]
 802ada4:	2310      	movs	r3, #16
 802ada6:	e7a7      	b.n	802acf8 <_printf_i+0xf8>
 802ada8:	4824      	ldr	r0, [pc, #144]	; (802ae3c <_printf_i+0x23c>)
 802adaa:	e7e4      	b.n	802ad76 <_printf_i+0x176>
 802adac:	4615      	mov	r5, r2
 802adae:	e7bd      	b.n	802ad2c <_printf_i+0x12c>
 802adb0:	682b      	ldr	r3, [r5, #0]
 802adb2:	6826      	ldr	r6, [r4, #0]
 802adb4:	6961      	ldr	r1, [r4, #20]
 802adb6:	1d18      	adds	r0, r3, #4
 802adb8:	6028      	str	r0, [r5, #0]
 802adba:	0635      	lsls	r5, r6, #24
 802adbc:	681b      	ldr	r3, [r3, #0]
 802adbe:	d501      	bpl.n	802adc4 <_printf_i+0x1c4>
 802adc0:	6019      	str	r1, [r3, #0]
 802adc2:	e002      	b.n	802adca <_printf_i+0x1ca>
 802adc4:	0670      	lsls	r0, r6, #25
 802adc6:	d5fb      	bpl.n	802adc0 <_printf_i+0x1c0>
 802adc8:	8019      	strh	r1, [r3, #0]
 802adca:	2300      	movs	r3, #0
 802adcc:	6123      	str	r3, [r4, #16]
 802adce:	4615      	mov	r5, r2
 802add0:	e7bc      	b.n	802ad4c <_printf_i+0x14c>
 802add2:	682b      	ldr	r3, [r5, #0]
 802add4:	1d1a      	adds	r2, r3, #4
 802add6:	602a      	str	r2, [r5, #0]
 802add8:	681d      	ldr	r5, [r3, #0]
 802adda:	6862      	ldr	r2, [r4, #4]
 802addc:	2100      	movs	r1, #0
 802adde:	4628      	mov	r0, r5
 802ade0:	f7d5 fa66 	bl	80002b0 <memchr>
 802ade4:	b108      	cbz	r0, 802adea <_printf_i+0x1ea>
 802ade6:	1b40      	subs	r0, r0, r5
 802ade8:	6060      	str	r0, [r4, #4]
 802adea:	6863      	ldr	r3, [r4, #4]
 802adec:	6123      	str	r3, [r4, #16]
 802adee:	2300      	movs	r3, #0
 802adf0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802adf4:	e7aa      	b.n	802ad4c <_printf_i+0x14c>
 802adf6:	6923      	ldr	r3, [r4, #16]
 802adf8:	462a      	mov	r2, r5
 802adfa:	4649      	mov	r1, r9
 802adfc:	4640      	mov	r0, r8
 802adfe:	47d0      	blx	sl
 802ae00:	3001      	adds	r0, #1
 802ae02:	d0ad      	beq.n	802ad60 <_printf_i+0x160>
 802ae04:	6823      	ldr	r3, [r4, #0]
 802ae06:	079b      	lsls	r3, r3, #30
 802ae08:	d413      	bmi.n	802ae32 <_printf_i+0x232>
 802ae0a:	68e0      	ldr	r0, [r4, #12]
 802ae0c:	9b03      	ldr	r3, [sp, #12]
 802ae0e:	4298      	cmp	r0, r3
 802ae10:	bfb8      	it	lt
 802ae12:	4618      	movlt	r0, r3
 802ae14:	e7a6      	b.n	802ad64 <_printf_i+0x164>
 802ae16:	2301      	movs	r3, #1
 802ae18:	4632      	mov	r2, r6
 802ae1a:	4649      	mov	r1, r9
 802ae1c:	4640      	mov	r0, r8
 802ae1e:	47d0      	blx	sl
 802ae20:	3001      	adds	r0, #1
 802ae22:	d09d      	beq.n	802ad60 <_printf_i+0x160>
 802ae24:	3501      	adds	r5, #1
 802ae26:	68e3      	ldr	r3, [r4, #12]
 802ae28:	9903      	ldr	r1, [sp, #12]
 802ae2a:	1a5b      	subs	r3, r3, r1
 802ae2c:	42ab      	cmp	r3, r5
 802ae2e:	dcf2      	bgt.n	802ae16 <_printf_i+0x216>
 802ae30:	e7eb      	b.n	802ae0a <_printf_i+0x20a>
 802ae32:	2500      	movs	r5, #0
 802ae34:	f104 0619 	add.w	r6, r4, #25
 802ae38:	e7f5      	b.n	802ae26 <_printf_i+0x226>
 802ae3a:	bf00      	nop
 802ae3c:	08042701 	.word	0x08042701
 802ae40:	08042712 	.word	0x08042712

0802ae44 <__sflush_r>:
 802ae44:	898a      	ldrh	r2, [r1, #12]
 802ae46:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802ae4a:	4605      	mov	r5, r0
 802ae4c:	0710      	lsls	r0, r2, #28
 802ae4e:	460c      	mov	r4, r1
 802ae50:	d458      	bmi.n	802af04 <__sflush_r+0xc0>
 802ae52:	684b      	ldr	r3, [r1, #4]
 802ae54:	2b00      	cmp	r3, #0
 802ae56:	dc05      	bgt.n	802ae64 <__sflush_r+0x20>
 802ae58:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802ae5a:	2b00      	cmp	r3, #0
 802ae5c:	dc02      	bgt.n	802ae64 <__sflush_r+0x20>
 802ae5e:	2000      	movs	r0, #0
 802ae60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802ae64:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802ae66:	2e00      	cmp	r6, #0
 802ae68:	d0f9      	beq.n	802ae5e <__sflush_r+0x1a>
 802ae6a:	2300      	movs	r3, #0
 802ae6c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802ae70:	682f      	ldr	r7, [r5, #0]
 802ae72:	6a21      	ldr	r1, [r4, #32]
 802ae74:	602b      	str	r3, [r5, #0]
 802ae76:	d032      	beq.n	802aede <__sflush_r+0x9a>
 802ae78:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802ae7a:	89a3      	ldrh	r3, [r4, #12]
 802ae7c:	075a      	lsls	r2, r3, #29
 802ae7e:	d505      	bpl.n	802ae8c <__sflush_r+0x48>
 802ae80:	6863      	ldr	r3, [r4, #4]
 802ae82:	1ac0      	subs	r0, r0, r3
 802ae84:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802ae86:	b10b      	cbz	r3, 802ae8c <__sflush_r+0x48>
 802ae88:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802ae8a:	1ac0      	subs	r0, r0, r3
 802ae8c:	2300      	movs	r3, #0
 802ae8e:	4602      	mov	r2, r0
 802ae90:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802ae92:	6a21      	ldr	r1, [r4, #32]
 802ae94:	4628      	mov	r0, r5
 802ae96:	47b0      	blx	r6
 802ae98:	1c43      	adds	r3, r0, #1
 802ae9a:	89a3      	ldrh	r3, [r4, #12]
 802ae9c:	d106      	bne.n	802aeac <__sflush_r+0x68>
 802ae9e:	6829      	ldr	r1, [r5, #0]
 802aea0:	291d      	cmp	r1, #29
 802aea2:	d82b      	bhi.n	802aefc <__sflush_r+0xb8>
 802aea4:	4a29      	ldr	r2, [pc, #164]	; (802af4c <__sflush_r+0x108>)
 802aea6:	410a      	asrs	r2, r1
 802aea8:	07d6      	lsls	r6, r2, #31
 802aeaa:	d427      	bmi.n	802aefc <__sflush_r+0xb8>
 802aeac:	2200      	movs	r2, #0
 802aeae:	6062      	str	r2, [r4, #4]
 802aeb0:	04d9      	lsls	r1, r3, #19
 802aeb2:	6922      	ldr	r2, [r4, #16]
 802aeb4:	6022      	str	r2, [r4, #0]
 802aeb6:	d504      	bpl.n	802aec2 <__sflush_r+0x7e>
 802aeb8:	1c42      	adds	r2, r0, #1
 802aeba:	d101      	bne.n	802aec0 <__sflush_r+0x7c>
 802aebc:	682b      	ldr	r3, [r5, #0]
 802aebe:	b903      	cbnz	r3, 802aec2 <__sflush_r+0x7e>
 802aec0:	6560      	str	r0, [r4, #84]	; 0x54
 802aec2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802aec4:	602f      	str	r7, [r5, #0]
 802aec6:	2900      	cmp	r1, #0
 802aec8:	d0c9      	beq.n	802ae5e <__sflush_r+0x1a>
 802aeca:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802aece:	4299      	cmp	r1, r3
 802aed0:	d002      	beq.n	802aed8 <__sflush_r+0x94>
 802aed2:	4628      	mov	r0, r5
 802aed4:	f7ff fc96 	bl	802a804 <_free_r>
 802aed8:	2000      	movs	r0, #0
 802aeda:	6360      	str	r0, [r4, #52]	; 0x34
 802aedc:	e7c0      	b.n	802ae60 <__sflush_r+0x1c>
 802aede:	2301      	movs	r3, #1
 802aee0:	4628      	mov	r0, r5
 802aee2:	47b0      	blx	r6
 802aee4:	1c41      	adds	r1, r0, #1
 802aee6:	d1c8      	bne.n	802ae7a <__sflush_r+0x36>
 802aee8:	682b      	ldr	r3, [r5, #0]
 802aeea:	2b00      	cmp	r3, #0
 802aeec:	d0c5      	beq.n	802ae7a <__sflush_r+0x36>
 802aeee:	2b1d      	cmp	r3, #29
 802aef0:	d001      	beq.n	802aef6 <__sflush_r+0xb2>
 802aef2:	2b16      	cmp	r3, #22
 802aef4:	d101      	bne.n	802aefa <__sflush_r+0xb6>
 802aef6:	602f      	str	r7, [r5, #0]
 802aef8:	e7b1      	b.n	802ae5e <__sflush_r+0x1a>
 802aefa:	89a3      	ldrh	r3, [r4, #12]
 802aefc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802af00:	81a3      	strh	r3, [r4, #12]
 802af02:	e7ad      	b.n	802ae60 <__sflush_r+0x1c>
 802af04:	690f      	ldr	r7, [r1, #16]
 802af06:	2f00      	cmp	r7, #0
 802af08:	d0a9      	beq.n	802ae5e <__sflush_r+0x1a>
 802af0a:	0793      	lsls	r3, r2, #30
 802af0c:	680e      	ldr	r6, [r1, #0]
 802af0e:	bf08      	it	eq
 802af10:	694b      	ldreq	r3, [r1, #20]
 802af12:	600f      	str	r7, [r1, #0]
 802af14:	bf18      	it	ne
 802af16:	2300      	movne	r3, #0
 802af18:	eba6 0807 	sub.w	r8, r6, r7
 802af1c:	608b      	str	r3, [r1, #8]
 802af1e:	f1b8 0f00 	cmp.w	r8, #0
 802af22:	dd9c      	ble.n	802ae5e <__sflush_r+0x1a>
 802af24:	6a21      	ldr	r1, [r4, #32]
 802af26:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802af28:	4643      	mov	r3, r8
 802af2a:	463a      	mov	r2, r7
 802af2c:	4628      	mov	r0, r5
 802af2e:	47b0      	blx	r6
 802af30:	2800      	cmp	r0, #0
 802af32:	dc06      	bgt.n	802af42 <__sflush_r+0xfe>
 802af34:	89a3      	ldrh	r3, [r4, #12]
 802af36:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802af3a:	81a3      	strh	r3, [r4, #12]
 802af3c:	f04f 30ff 	mov.w	r0, #4294967295
 802af40:	e78e      	b.n	802ae60 <__sflush_r+0x1c>
 802af42:	4407      	add	r7, r0
 802af44:	eba8 0800 	sub.w	r8, r8, r0
 802af48:	e7e9      	b.n	802af1e <__sflush_r+0xda>
 802af4a:	bf00      	nop
 802af4c:	dfbffffe 	.word	0xdfbffffe

0802af50 <_fflush_r>:
 802af50:	b538      	push	{r3, r4, r5, lr}
 802af52:	690b      	ldr	r3, [r1, #16]
 802af54:	4605      	mov	r5, r0
 802af56:	460c      	mov	r4, r1
 802af58:	b913      	cbnz	r3, 802af60 <_fflush_r+0x10>
 802af5a:	2500      	movs	r5, #0
 802af5c:	4628      	mov	r0, r5
 802af5e:	bd38      	pop	{r3, r4, r5, pc}
 802af60:	b118      	cbz	r0, 802af6a <_fflush_r+0x1a>
 802af62:	6a03      	ldr	r3, [r0, #32]
 802af64:	b90b      	cbnz	r3, 802af6a <_fflush_r+0x1a>
 802af66:	f7ff fa2f 	bl	802a3c8 <__sinit>
 802af6a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802af6e:	2b00      	cmp	r3, #0
 802af70:	d0f3      	beq.n	802af5a <_fflush_r+0xa>
 802af72:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802af74:	07d0      	lsls	r0, r2, #31
 802af76:	d404      	bmi.n	802af82 <_fflush_r+0x32>
 802af78:	0599      	lsls	r1, r3, #22
 802af7a:	d402      	bmi.n	802af82 <_fflush_r+0x32>
 802af7c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802af7e:	f7ff fbd2 	bl	802a726 <__retarget_lock_acquire_recursive>
 802af82:	4628      	mov	r0, r5
 802af84:	4621      	mov	r1, r4
 802af86:	f7ff ff5d 	bl	802ae44 <__sflush_r>
 802af8a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802af8c:	07da      	lsls	r2, r3, #31
 802af8e:	4605      	mov	r5, r0
 802af90:	d4e4      	bmi.n	802af5c <_fflush_r+0xc>
 802af92:	89a3      	ldrh	r3, [r4, #12]
 802af94:	059b      	lsls	r3, r3, #22
 802af96:	d4e1      	bmi.n	802af5c <_fflush_r+0xc>
 802af98:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802af9a:	f7ff fbc5 	bl	802a728 <__retarget_lock_release_recursive>
 802af9e:	e7dd      	b.n	802af5c <_fflush_r+0xc>

0802afa0 <__swbuf_r>:
 802afa0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802afa2:	460e      	mov	r6, r1
 802afa4:	4614      	mov	r4, r2
 802afa6:	4605      	mov	r5, r0
 802afa8:	b118      	cbz	r0, 802afb2 <__swbuf_r+0x12>
 802afaa:	6a03      	ldr	r3, [r0, #32]
 802afac:	b90b      	cbnz	r3, 802afb2 <__swbuf_r+0x12>
 802afae:	f7ff fa0b 	bl	802a3c8 <__sinit>
 802afb2:	69a3      	ldr	r3, [r4, #24]
 802afb4:	60a3      	str	r3, [r4, #8]
 802afb6:	89a3      	ldrh	r3, [r4, #12]
 802afb8:	071a      	lsls	r2, r3, #28
 802afba:	d525      	bpl.n	802b008 <__swbuf_r+0x68>
 802afbc:	6923      	ldr	r3, [r4, #16]
 802afbe:	b31b      	cbz	r3, 802b008 <__swbuf_r+0x68>
 802afc0:	6823      	ldr	r3, [r4, #0]
 802afc2:	6922      	ldr	r2, [r4, #16]
 802afc4:	1a98      	subs	r0, r3, r2
 802afc6:	6963      	ldr	r3, [r4, #20]
 802afc8:	b2f6      	uxtb	r6, r6
 802afca:	4283      	cmp	r3, r0
 802afcc:	4637      	mov	r7, r6
 802afce:	dc04      	bgt.n	802afda <__swbuf_r+0x3a>
 802afd0:	4621      	mov	r1, r4
 802afd2:	4628      	mov	r0, r5
 802afd4:	f7ff ffbc 	bl	802af50 <_fflush_r>
 802afd8:	b9e0      	cbnz	r0, 802b014 <__swbuf_r+0x74>
 802afda:	68a3      	ldr	r3, [r4, #8]
 802afdc:	3b01      	subs	r3, #1
 802afde:	60a3      	str	r3, [r4, #8]
 802afe0:	6823      	ldr	r3, [r4, #0]
 802afe2:	1c5a      	adds	r2, r3, #1
 802afe4:	6022      	str	r2, [r4, #0]
 802afe6:	701e      	strb	r6, [r3, #0]
 802afe8:	6962      	ldr	r2, [r4, #20]
 802afea:	1c43      	adds	r3, r0, #1
 802afec:	429a      	cmp	r2, r3
 802afee:	d004      	beq.n	802affa <__swbuf_r+0x5a>
 802aff0:	89a3      	ldrh	r3, [r4, #12]
 802aff2:	07db      	lsls	r3, r3, #31
 802aff4:	d506      	bpl.n	802b004 <__swbuf_r+0x64>
 802aff6:	2e0a      	cmp	r6, #10
 802aff8:	d104      	bne.n	802b004 <__swbuf_r+0x64>
 802affa:	4621      	mov	r1, r4
 802affc:	4628      	mov	r0, r5
 802affe:	f7ff ffa7 	bl	802af50 <_fflush_r>
 802b002:	b938      	cbnz	r0, 802b014 <__swbuf_r+0x74>
 802b004:	4638      	mov	r0, r7
 802b006:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802b008:	4621      	mov	r1, r4
 802b00a:	4628      	mov	r0, r5
 802b00c:	f000 f806 	bl	802b01c <__swsetup_r>
 802b010:	2800      	cmp	r0, #0
 802b012:	d0d5      	beq.n	802afc0 <__swbuf_r+0x20>
 802b014:	f04f 37ff 	mov.w	r7, #4294967295
 802b018:	e7f4      	b.n	802b004 <__swbuf_r+0x64>
	...

0802b01c <__swsetup_r>:
 802b01c:	b538      	push	{r3, r4, r5, lr}
 802b01e:	4b2a      	ldr	r3, [pc, #168]	; (802b0c8 <__swsetup_r+0xac>)
 802b020:	4605      	mov	r5, r0
 802b022:	6818      	ldr	r0, [r3, #0]
 802b024:	460c      	mov	r4, r1
 802b026:	b118      	cbz	r0, 802b030 <__swsetup_r+0x14>
 802b028:	6a03      	ldr	r3, [r0, #32]
 802b02a:	b90b      	cbnz	r3, 802b030 <__swsetup_r+0x14>
 802b02c:	f7ff f9cc 	bl	802a3c8 <__sinit>
 802b030:	89a3      	ldrh	r3, [r4, #12]
 802b032:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802b036:	0718      	lsls	r0, r3, #28
 802b038:	d422      	bmi.n	802b080 <__swsetup_r+0x64>
 802b03a:	06d9      	lsls	r1, r3, #27
 802b03c:	d407      	bmi.n	802b04e <__swsetup_r+0x32>
 802b03e:	2309      	movs	r3, #9
 802b040:	602b      	str	r3, [r5, #0]
 802b042:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802b046:	81a3      	strh	r3, [r4, #12]
 802b048:	f04f 30ff 	mov.w	r0, #4294967295
 802b04c:	e034      	b.n	802b0b8 <__swsetup_r+0x9c>
 802b04e:	0758      	lsls	r0, r3, #29
 802b050:	d512      	bpl.n	802b078 <__swsetup_r+0x5c>
 802b052:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802b054:	b141      	cbz	r1, 802b068 <__swsetup_r+0x4c>
 802b056:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802b05a:	4299      	cmp	r1, r3
 802b05c:	d002      	beq.n	802b064 <__swsetup_r+0x48>
 802b05e:	4628      	mov	r0, r5
 802b060:	f7ff fbd0 	bl	802a804 <_free_r>
 802b064:	2300      	movs	r3, #0
 802b066:	6363      	str	r3, [r4, #52]	; 0x34
 802b068:	89a3      	ldrh	r3, [r4, #12]
 802b06a:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802b06e:	81a3      	strh	r3, [r4, #12]
 802b070:	2300      	movs	r3, #0
 802b072:	6063      	str	r3, [r4, #4]
 802b074:	6923      	ldr	r3, [r4, #16]
 802b076:	6023      	str	r3, [r4, #0]
 802b078:	89a3      	ldrh	r3, [r4, #12]
 802b07a:	f043 0308 	orr.w	r3, r3, #8
 802b07e:	81a3      	strh	r3, [r4, #12]
 802b080:	6923      	ldr	r3, [r4, #16]
 802b082:	b94b      	cbnz	r3, 802b098 <__swsetup_r+0x7c>
 802b084:	89a3      	ldrh	r3, [r4, #12]
 802b086:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802b08a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802b08e:	d003      	beq.n	802b098 <__swsetup_r+0x7c>
 802b090:	4621      	mov	r1, r4
 802b092:	4628      	mov	r0, r5
 802b094:	f000 f840 	bl	802b118 <__smakebuf_r>
 802b098:	89a0      	ldrh	r0, [r4, #12]
 802b09a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802b09e:	f010 0301 	ands.w	r3, r0, #1
 802b0a2:	d00a      	beq.n	802b0ba <__swsetup_r+0x9e>
 802b0a4:	2300      	movs	r3, #0
 802b0a6:	60a3      	str	r3, [r4, #8]
 802b0a8:	6963      	ldr	r3, [r4, #20]
 802b0aa:	425b      	negs	r3, r3
 802b0ac:	61a3      	str	r3, [r4, #24]
 802b0ae:	6923      	ldr	r3, [r4, #16]
 802b0b0:	b943      	cbnz	r3, 802b0c4 <__swsetup_r+0xa8>
 802b0b2:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802b0b6:	d1c4      	bne.n	802b042 <__swsetup_r+0x26>
 802b0b8:	bd38      	pop	{r3, r4, r5, pc}
 802b0ba:	0781      	lsls	r1, r0, #30
 802b0bc:	bf58      	it	pl
 802b0be:	6963      	ldrpl	r3, [r4, #20]
 802b0c0:	60a3      	str	r3, [r4, #8]
 802b0c2:	e7f4      	b.n	802b0ae <__swsetup_r+0x92>
 802b0c4:	2000      	movs	r0, #0
 802b0c6:	e7f7      	b.n	802b0b8 <__swsetup_r+0x9c>
 802b0c8:	20000160 	.word	0x20000160

0802b0cc <__swhatbuf_r>:
 802b0cc:	b570      	push	{r4, r5, r6, lr}
 802b0ce:	460c      	mov	r4, r1
 802b0d0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b0d4:	2900      	cmp	r1, #0
 802b0d6:	b096      	sub	sp, #88	; 0x58
 802b0d8:	4615      	mov	r5, r2
 802b0da:	461e      	mov	r6, r3
 802b0dc:	da0d      	bge.n	802b0fa <__swhatbuf_r+0x2e>
 802b0de:	89a3      	ldrh	r3, [r4, #12]
 802b0e0:	f013 0f80 	tst.w	r3, #128	; 0x80
 802b0e4:	f04f 0100 	mov.w	r1, #0
 802b0e8:	bf0c      	ite	eq
 802b0ea:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802b0ee:	2340      	movne	r3, #64	; 0x40
 802b0f0:	2000      	movs	r0, #0
 802b0f2:	6031      	str	r1, [r6, #0]
 802b0f4:	602b      	str	r3, [r5, #0]
 802b0f6:	b016      	add	sp, #88	; 0x58
 802b0f8:	bd70      	pop	{r4, r5, r6, pc}
 802b0fa:	466a      	mov	r2, sp
 802b0fc:	f000 f848 	bl	802b190 <_fstat_r>
 802b100:	2800      	cmp	r0, #0
 802b102:	dbec      	blt.n	802b0de <__swhatbuf_r+0x12>
 802b104:	9901      	ldr	r1, [sp, #4]
 802b106:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 802b10a:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802b10e:	4259      	negs	r1, r3
 802b110:	4159      	adcs	r1, r3
 802b112:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802b116:	e7eb      	b.n	802b0f0 <__swhatbuf_r+0x24>

0802b118 <__smakebuf_r>:
 802b118:	898b      	ldrh	r3, [r1, #12]
 802b11a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802b11c:	079d      	lsls	r5, r3, #30
 802b11e:	4606      	mov	r6, r0
 802b120:	460c      	mov	r4, r1
 802b122:	d507      	bpl.n	802b134 <__smakebuf_r+0x1c>
 802b124:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802b128:	6023      	str	r3, [r4, #0]
 802b12a:	6123      	str	r3, [r4, #16]
 802b12c:	2301      	movs	r3, #1
 802b12e:	6163      	str	r3, [r4, #20]
 802b130:	b002      	add	sp, #8
 802b132:	bd70      	pop	{r4, r5, r6, pc}
 802b134:	ab01      	add	r3, sp, #4
 802b136:	466a      	mov	r2, sp
 802b138:	f7ff ffc8 	bl	802b0cc <__swhatbuf_r>
 802b13c:	9900      	ldr	r1, [sp, #0]
 802b13e:	4605      	mov	r5, r0
 802b140:	4630      	mov	r0, r6
 802b142:	f7ff f81b 	bl	802a17c <_malloc_r>
 802b146:	b948      	cbnz	r0, 802b15c <__smakebuf_r+0x44>
 802b148:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802b14c:	059a      	lsls	r2, r3, #22
 802b14e:	d4ef      	bmi.n	802b130 <__smakebuf_r+0x18>
 802b150:	f023 0303 	bic.w	r3, r3, #3
 802b154:	f043 0302 	orr.w	r3, r3, #2
 802b158:	81a3      	strh	r3, [r4, #12]
 802b15a:	e7e3      	b.n	802b124 <__smakebuf_r+0xc>
 802b15c:	89a3      	ldrh	r3, [r4, #12]
 802b15e:	6020      	str	r0, [r4, #0]
 802b160:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802b164:	81a3      	strh	r3, [r4, #12]
 802b166:	9b00      	ldr	r3, [sp, #0]
 802b168:	6163      	str	r3, [r4, #20]
 802b16a:	9b01      	ldr	r3, [sp, #4]
 802b16c:	6120      	str	r0, [r4, #16]
 802b16e:	b15b      	cbz	r3, 802b188 <__smakebuf_r+0x70>
 802b170:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802b174:	4630      	mov	r0, r6
 802b176:	f000 f81d 	bl	802b1b4 <_isatty_r>
 802b17a:	b128      	cbz	r0, 802b188 <__smakebuf_r+0x70>
 802b17c:	89a3      	ldrh	r3, [r4, #12]
 802b17e:	f023 0303 	bic.w	r3, r3, #3
 802b182:	f043 0301 	orr.w	r3, r3, #1
 802b186:	81a3      	strh	r3, [r4, #12]
 802b188:	89a3      	ldrh	r3, [r4, #12]
 802b18a:	431d      	orrs	r5, r3
 802b18c:	81a5      	strh	r5, [r4, #12]
 802b18e:	e7cf      	b.n	802b130 <__smakebuf_r+0x18>

0802b190 <_fstat_r>:
 802b190:	b538      	push	{r3, r4, r5, lr}
 802b192:	4d07      	ldr	r5, [pc, #28]	; (802b1b0 <_fstat_r+0x20>)
 802b194:	2300      	movs	r3, #0
 802b196:	4604      	mov	r4, r0
 802b198:	4608      	mov	r0, r1
 802b19a:	4611      	mov	r1, r2
 802b19c:	602b      	str	r3, [r5, #0]
 802b19e:	f7d7 f9cb 	bl	8002538 <_fstat>
 802b1a2:	1c43      	adds	r3, r0, #1
 802b1a4:	d102      	bne.n	802b1ac <_fstat_r+0x1c>
 802b1a6:	682b      	ldr	r3, [r5, #0]
 802b1a8:	b103      	cbz	r3, 802b1ac <_fstat_r+0x1c>
 802b1aa:	6023      	str	r3, [r4, #0]
 802b1ac:	bd38      	pop	{r3, r4, r5, pc}
 802b1ae:	bf00      	nop
 802b1b0:	200139bc 	.word	0x200139bc

0802b1b4 <_isatty_r>:
 802b1b4:	b538      	push	{r3, r4, r5, lr}
 802b1b6:	4d06      	ldr	r5, [pc, #24]	; (802b1d0 <_isatty_r+0x1c>)
 802b1b8:	2300      	movs	r3, #0
 802b1ba:	4604      	mov	r4, r0
 802b1bc:	4608      	mov	r0, r1
 802b1be:	602b      	str	r3, [r5, #0]
 802b1c0:	f7d7 f9c0 	bl	8002544 <_isatty>
 802b1c4:	1c43      	adds	r3, r0, #1
 802b1c6:	d102      	bne.n	802b1ce <_isatty_r+0x1a>
 802b1c8:	682b      	ldr	r3, [r5, #0]
 802b1ca:	b103      	cbz	r3, 802b1ce <_isatty_r+0x1a>
 802b1cc:	6023      	str	r3, [r4, #0]
 802b1ce:	bd38      	pop	{r3, r4, r5, pc}
 802b1d0:	200139bc 	.word	0x200139bc

0802b1d4 <_init>:
 802b1d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802b1d6:	bf00      	nop
 802b1d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802b1da:	bc08      	pop	{r3}
 802b1dc:	469e      	mov	lr, r3
 802b1de:	4770      	bx	lr

0802b1e0 <_fini>:
 802b1e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802b1e2:	bf00      	nop
 802b1e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802b1e6:	bc08      	pop	{r3}
 802b1e8:	469e      	mov	lr, r3
 802b1ea:	4770      	bx	lr
